

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jul 15 18:19:48 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1,inline
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,inline
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1,inline
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,inline
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,inline
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1,inline
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1,inline
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1,inline
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   234                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   235                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   236                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   237  0000                     
   238                           ; Version 2.36
   239                           ; Generated 28/01/2022 GMT
   240                           ; 
   241                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   242                           ; All rights reserved.
   243                           ; 
   244                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   245                           ; 
   246                           ; Redistribution and use in source and binary forms, with or without modification, are
   247                           ; permitted provided that the following conditions are met:
   248                           ; 
   249                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   250                           ;        conditions and the following disclaimer.
   251                           ; 
   252                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   253                           ;        of conditions and the following disclaimer in the documentation and/or other
   254                           ;        materials provided with the distribution. Publication is not required when
   255                           ;        this file is used in an embedded application.
   256                           ; 
   257                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   258                           ;        software without specific prior written permission.
   259                           ; 
   260                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   261                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   262                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   263                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   264                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   265                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   266                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   267                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   268                           ; 
   269                           ; 
   270                           ; Code-generator required, PIC18F46K40 Definitions
   271                           ; 
   272                           ; SFR Addresses
   273  0000                     
   274                           	psect	idataBANK0
   275  00926E                     __pidataBANK0:
   276                           	callstack 0
   277                           
   278                           ;initializer for _auxCounter
   279  00926E  03E8               	dw	1000
   280                           
   281                           	psect	idataBANK1
   282  00923C                     __pidataBANK1:
   283                           	callstack 0
   284                           
   285                           ;initializer for _tempCounter
   286  00923C  3DDD               	dw	15837
   287  00923E  000F               	dw	15
   288                           
   289                           ;initializer for _firstselectflag
   290  009240  01                 	db	1
   291                           
   292                           	psect	idataBANK2
   293  009270                     __pidataBANK2:
   294                           	callstack 0
   295                           
   296                           ;initializer for _zeroCrossingWaitTime
   297  009270  19                 	db	25
   298  009271  19                 	db	25
   299                           
   300                           	psect	idataBANK3
   301  008E16                     __pidataBANK3:
   302                           	callstack 0
   303                           
   304                           ;initializer for _DispTable
   305  008E16  6F                 	db	111
   306  008E17  21                 	db	33
   307  008E18  76                 	db	118
   308  008E19  73                 	db	115
   309  008E1A  39                 	db	57
   310  008E1B  5B                 	db	91
   311  008E1C  5F                 	db	95
   312  008E1D  61                 	db	97
   313  008E1E  7F                 	db	127
   314  008E1F  7B                 	db	123
   315  008E20  7D                 	db	125
   316  008E21  7F                 	db	127
   317  008E22  4E                 	db	78
   318  008E23  37                 	db	55
   319  008E24  5E                 	db	94
   320  008E25  5C                 	db	92
   321  008E26  7C                 	db	124
   322  008E27  3D                 	db	61
   323  008E28  0E                 	db	14
   324  008E29  2F                 	db	47
   325  008E2A  14                 	db	20
   326  008E2B  1E                 	db	30
   327  008E2C  07                 	db	7
   328  008E2D  45                 	db	69
   329  008E2E  10                 	db	16
   330  008E2F  0C                 	db	12
   331  008E30  40                 	db	64
   332  008E31  20                 	db	32
   333  008E32  01                 	db	1
   334  008E33  02                 	db	2
   335  008E34  04                 	db	4
   336  008E35  08                 	db	8
   337  008E36  00                 	db	0
   338  008E37  3B                 	db	59
   339  008E38  1F                 	db	31
   340  008E39  16                 	db	22
   341  008E3A  17                 	db	23
   342                           
   343                           	psect	smallconst
   344  000F00                     __psmallconst:
   345                           	callstack 0
   346  000F00  00                 	db	0
   347  000F01                     _i2c1_fsmStateTable:
   348                           	callstack 0
   349  000F01  B2                 	db	low _I2C1_DO_IDLE
   350  000F02  91                 	db	high _I2C1_DO_IDLE
   351  000F03  1E                 	db	low _I2C1_DO_SEND_ADR_READ
   352  000F04  91                 	db	high _I2C1_DO_SEND_ADR_READ
   353  000F05  10                 	db	low _I2C1_DO_SEND_ADR_WRITE
   354  000F06  91                 	db	high _I2C1_DO_SEND_ADR_WRITE
   355  000F07  5A                 	db	low _I2C1_DO_TX
   356  000F08  77                 	db	high _I2C1_DO_TX
   357  000F09  F8                 	db	low _I2C1_DO_RX
   358  000F0A  7B                 	db	high _I2C1_DO_RX
   359  000F0B  A8                 	db	low _I2C1_DO_RCEN
   360  000F0C  91                 	db	high _I2C1_DO_RCEN
   361  000F0D  A4                 	db	low _I2C1_DO_TX_EMPTY
   362  000F0E  81                 	db	high _I2C1_DO_TX_EMPTY
   363  000F0F  FC                 	db	low _I2C1_DO_SEND_RESTART_READ
   364  000F10  91                 	db	high _I2C1_DO_SEND_RESTART_READ
   365  000F11  F4                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   366  000F12  91                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   367  000F13  EC                 	db	low _I2C1_DO_SEND_RESTART
   368  000F14  91                 	db	high _I2C1_DO_SEND_RESTART
   369  000F15  E4                 	db	low _I2C1_DO_SEND_STOP
   370  000F16  91                 	db	high _I2C1_DO_SEND_STOP
   371  000F17  DC                 	db	low _I2C1_DO_RX_ACK
   372  000F18  91                 	db	high _I2C1_DO_RX_ACK
   373  000F19  D4                 	db	low _I2C1_DO_RX_NACK_STOP
   374  000F1A  91                 	db	high _I2C1_DO_RX_NACK_STOP
   375  000F1B  CC                 	db	low _I2C1_DO_RX_NACK_RESTART
   376  000F1C  91                 	db	high _I2C1_DO_RX_NACK_RESTART
   377  000F1D  9E                 	db	low _I2C1_DO_RESET
   378  000F1E  91                 	db	high _I2C1_DO_RESET
   379  000F1F  5E                 	db	low _I2C1_DO_ADDRESS_NACK
   380  000F20  86                 	db	high _I2C1_DO_ADDRESS_NACK
   381  000F21                     __end_of_i2c1_fsmStateTable:
   382                           	callstack 0
   383  0000                     _T2CON	set	4029
   384  0000                     _T1CON	set	4047
   385  0000                     _T1CLK	set	4050
   386  0000                     _T1GATE	set	4049
   387  0000                     _T0CON0	set	4053
   388  0000                     _INLVLD	set	3874
   389  0000                     _SLRCOND	set	3875
   390  0000                     _ODCOND	set	3876
   391  0000                     _WPUD	set	3877
   392  0000                     _TRISD	set	3979
   393  0000                     _TRISC	set	3978
   394  0000                     _TRISB	set	3977
   395  0000                     _TRISA	set	3976
   396  0000                     _TRISE	set	3980
   397  0000                     _LATC	set	3973
   398  0000                     _LATB	set	3972
   399  0000                     _OSCTUNE	set	3805
   400  0000                     _OSCFRQ	set	3806
   401  0000                     _ADERRL	set	3950
   402  0000                     _ADERRH	set	3951
   403  0000                     _ADPREVL	set	3937
   404  0000                     _ADPREVH	set	3938
   405  0000                     _ADFLTRL	set	3954
   406  0000                     _ADFLTRH	set	3955
   407  0000                     _ADACCL	set	3952
   408  0000                     _ADACCH	set	3953
   409  0000                     _ADCNT	set	3943
   410  0000                     _ADRESL	set	3939
   411  0000                     _ADRESH	set	3940
   412  0000                     _ADACQ	set	3932
   413  0000                     _ADCON0	set	3936
   414  0000                     _ADCLK	set	3927
   415  0000                     _ADSTAT	set	3941
   416  0000                     _ADCON3	set	3931
   417  0000                     _ADCON2	set	3930
   418  0000                     _ADPRE	set	3934
   419  0000                     _ADSTPTH	set	3945
   420  0000                     _ADUTHH	set	3949
   421  0000                     _ADUTHL	set	3948
   422  0000                     _ADLTHH	set	3947
   423  0000                     _SP1BRGH	set	3996
   424  0000                     _TX1STA	set	3998
   425  000F21  00                 	db	0	; dummy byte at the end
   426  0000                     
   427                           	psect	nvBANK1
   428  0001FF                     __pnvBANK1:
   429                           	callstack 0
   430  0001FF                     _eusart1TxBufferRemaining:
   431                           	callstack 0
   432  0001FF                     	ds	1
   433                           
   434                           	psect	nvBANK2
   435  0002DB                     __pnvBANK2:
   436                           	callstack 0
   437  0002DB                     _TMR2_InterruptHandler:
   438                           	callstack 0
   439  0002DB                     	ds	2
   440  0002DD                     _TMR1_InterruptHandler:
   441                           	callstack 0
   442  0002DD                     	ds	2
   443  0002DF                     _timer1ReloadVal:
   444                           	callstack 0
   445  0002DF                     	ds	2
   446  0002E1                     _TMR0_InterruptHandler:
   447                           	callstack 0
   448  0002E1                     	ds	2
   449  0002E3                     _EUSART1_ErrorHandler:
   450                           	callstack 0
   451  0002E3                     	ds	2
   452  0002E5                     _EUSART1_OverrunErrorHandler:
   453                           	callstack 0
   454  0002E5                     	ds	2
   455  0002E7                     _EUSART1_FramingErrorHandler:
   456                           	callstack 0
   457  0002E7                     	ds	2
   458  0002E9                     _EUSART1_RxDefaultInterruptHandler:
   459                           	callstack 0
   460  0002E9                     	ds	2
   461  0002EB                     _EUSART1_TxDefaultInterruptHandler:
   462                           	callstack 0
   463  0002EB                     	ds	2
   464  0000                     _WDTCON0bits	set	3794
   465  0000                     _TMR0IE	set	30229
   466  0000                     _TMR0IF	set	30293
   467  0000                     _LATEbits	set	3975
   468  0000                     _LATDbits	set	3974
   469  0000                     _LATAbits	set	3971
   470  0000                     _LATCbits	set	3973
   471  0000                     _PORTB	set	3982
   472  0000                     _T1CONbits	set	4047
   473  0000                     _SSP1CON2bits	set	3991
   474  0000                     _SSP1CON1bits	set	3990
   475  0000                     _ADCON0bits	set	3936
   476  0000                     _RC1STAbits	set	3997
   477  0000                     _GIE	set	32663
   478  0000                     _RX1PPS	set	3765
   479  0000                     _SSP1CLKPPS	set	3767
   480  0000                     _PIE0bits	set	3778
   481  0000                     _PIE3bits	set	3781
   482  0000                     _PIE4bits	set	3782
   483  0000                     _PIR0bits	set	3786
   484  0000                     _PIR3bits	set	3789
   485  0000                     _ADACT	set	3926
   486  0000                     _ADREF	set	3928
   487  0000                     _ADCON1	set	3929
   488  0000                     _ADCAP	set	3933
   489  0000                     _ADPCH	set	3935
   490  0000                     _ADRPT	set	3942
   491  0000                     _ADSTPTL	set	3944
   492  0000                     _ADLTHL	set	3946
   493  0000                     _RC1REG	set	3993
   494  0000                     _TX1REG	set	3994
   495  0000                     _SP1BRGL	set	3995
   496  0000                     _RC1STA	set	3997
   497  0000                     _BAUD1CON	set	3999
   498  0000                     _T2TMR	set	4027
   499  0000                     _T2PR	set	4028
   500  0000                     _T2HLT	set	4030
   501  0000                     _T2CLKCON	set	4031
   502  0000                     _TMR1L	set	4045
   503  0000                     _TMR1H	set	4046
   504  0000                     _T1GCON	set	4048
   505  0000                     _TMR0L	set	4051
   506  0000                     _TMR0H	set	4052
   507  0000                     _T0CON1	set	4054
   508  0000                     _PCON0bits	set	4055
   509  0000                     _INTCONbits	set	4082
   510  0000                     _LATA	set	3971
   511  0000                     _LATD	set	3974
   512  0000                     _LATE	set	3975
   513  0000                     _SSP1BUF	set	3986
   514  0000                     _SSP1ADD	set	3987
   515  0000                     _SSP1STAT	set	3989
   516  0000                     _SSP1CON2	set	3991
   517  0000                     _SSP1CON1	set	3990
   518  0000                     _WDTCON0	set	3794
   519  0000                     _OSCCON1	set	3800
   520  0000                     _PIR4bits	set	3790
   521  0000                     _OSCCON3	set	3802
   522  0000                     _OSCEN	set	3804
   523  0000                     _PMD0	set	3809
   524  0000                     _RC3PPS	set	3834
   525  0000                     _INLVLA	set	3853
   526  0000                     _SLRCONA	set	3854
   527  0000                     _ODCONA	set	3855
   528  0000                     _WPUA	set	3856
   529  0000                     _ANSELA	set	3857
   530  0000                     _ANSELB	set	3865
   531  0000                     _ANSELC	set	3873
   532  0000                     _ANSELD	set	3878
   533  0000                     _PMD5	set	3814
   534  0000                     _PMD4	set	3813
   535  0000                     _PMD3	set	3812
   536  0000                     _PMD2	set	3811
   537  0000                     _PMD1	set	3810
   538  0000                     _WDTCON1	set	3795
   539  0000                     _PORTEbits	set	3985
   540  0000                     _PORTBbits	set	3982
   541  0000                     _PORTAbits	set	3981
   542  0000                     _INLVLE	set	3882
   543  0000                     _SLRCONE	set	3883
   544  0000                     _ODCONE	set	3884
   545  0000                     _WPUE	set	3885
   546  0000                     _ANSELE	set	3886
   547  0000                     _INLVLC	set	3869
   548  0000                     _SLRCONC	set	3870
   549  0000                     _ODCONC	set	3871
   550  0000                     _WPUC	set	3872
   551  0000                     _INLVLB	set	3861
   552  0000                     _SLRCONB	set	3862
   553  0000                     _ODCONB	set	3863
   554  0000                     _WPUB	set	3864
   555  0000                     _IOCBN3	set	30875
   556  0000                     _IOCBP3	set	30883
   557  0000                     _SSP1DATPPS	set	3768
   558  0000                     _RC7PPS	set	3838
   559  0000                     _RC4PPS	set	3835
   560  0000                     _T2RST	set	4032
   561                           
   562                           ; #config settings
   563                           
   564                           	psect	cinit
   565  00708E                     __pcinit:
   566                           	callstack 0
   567  00708E                     start_initialization:
   568                           	callstack 0
   569  00708E                     __initialization:
   570                           	callstack 0
   571                           
   572                           ; Initialize objects allocated to BANK3 (37 bytes)
   573                           ; load TBLPTR registers with __pidataBANK3
   574  00708E  0E16               	movlw	low __pidataBANK3
   575  007090  6EF6               	movwf	tblptrl,c
   576  007092  0E8E               	movlw	high __pidataBANK3
   577  007094  6EF7               	movwf	tblptrh,c
   578  007096  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   579  007098  6EF8               	movwf	tblptru,c
   580  00709A  EE03  F0D2         	lfsr	0,__pdataBANK3
   581  00709E  EE10 F025          	lfsr	1,37
   582  0070A2                     copy_data0:
   583  0070A2  0009               	tblrd		*+
   584  0070A4  CFF5 FFEE          	movff	tablat,postinc0
   585  0070A8  50E5               	movf	postdec1,w,c
   586  0070AA  50E1               	movf	fsr1l,w,c
   587  0070AC  E1FA               	bnz	copy_data0
   588                           
   589                           ; Initialize objects allocated to BANK2 (2 bytes)
   590                           ; load TBLPTR registers with __pidataBANK2
   591  0070AE  0E70               	movlw	low __pidataBANK2
   592  0070B0  6EF6               	movwf	tblptrl,c
   593  0070B2  0E92               	movlw	high __pidataBANK2
   594  0070B4  6EF7               	movwf	tblptrh,c
   595  0070B6  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   596  0070B8  6EF8               	movwf	tblptru,c
   597  0070BA  0009               	tblrd		*+	;fetch initializer
   598  0070BC  CFF5 F2ED          	movff	tablat,__pdataBANK2
   599  0070C0  0009               	tblrd		*+	;fetch initializer
   600  0070C2  CFF5 F2EE          	movff	tablat,__pdataBANK2+1
   601                           
   602                           ; Initialize objects allocated to BANK1 (5 bytes)
   603                           ; load TBLPTR registers with __pidataBANK1
   604  0070C6  0E3C               	movlw	low __pidataBANK1
   605  0070C8  6EF6               	movwf	tblptrl,c
   606  0070CA  0E92               	movlw	high __pidataBANK1
   607  0070CC  6EF7               	movwf	tblptrh,c
   608  0070CE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   609  0070D0  6EF8               	movwf	tblptru,c
   610  0070D2  EE01  F0FA         	lfsr	0,__pdataBANK1
   611  0070D6  EE10 F005          	lfsr	1,5
   612  0070DA                     copy_data1:
   613  0070DA  0009               	tblrd		*+
   614  0070DC  CFF5 FFEE          	movff	tablat,postinc0
   615  0070E0  50E5               	movf	postdec1,w,c
   616  0070E2  50E1               	movf	fsr1l,w,c
   617  0070E4  E1FA               	bnz	copy_data1
   618                           
   619                           ; Initialize objects allocated to BANK0 (2 bytes)
   620                           ; load TBLPTR registers with __pidataBANK0
   621  0070E6  0E6E               	movlw	low __pidataBANK0
   622  0070E8  6EF6               	movwf	tblptrl,c
   623  0070EA  0E92               	movlw	high __pidataBANK0
   624  0070EC  6EF7               	movwf	tblptrh,c
   625  0070EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   626  0070F0  6EF8               	movwf	tblptru,c
   627  0070F2  0009               	tblrd		*+	;fetch initializer
   628  0070F4  CFF5 F0F8          	movff	tablat,__pdataBANK0
   629  0070F8  0009               	tblrd		*+	;fetch initializer
   630  0070FA  CFF5 F0F9          	movff	tablat,__pdataBANK0+1
   631                           
   632                           ; Clear objects allocated to BANK3 (210 bytes)
   633  0070FE  EE03  F000         	lfsr	0,__pbssBANK3
   634  007102  0ED2               	movlw	210
   635  007104                     clear_0:
   636  007104  6AEE               	clrf	postinc0,c
   637  007106  06E8               	decf	wreg,f,c
   638  007108  E1FD               	bnz	clear_0
   639                           
   640                           ; Clear objects allocated to BANK2 (219 bytes)
   641  00710A  EE02  F000         	lfsr	0,__pbssBANK2
   642  00710E  0EDB               	movlw	219
   643  007110                     clear_1:
   644  007110  6AEE               	clrf	postinc0,c
   645  007112  06E8               	decf	wreg,f,c
   646  007114  E1FD               	bnz	clear_1
   647                           
   648                           ; Clear objects allocated to BANK1 (250 bytes)
   649  007116  EE01  F000         	lfsr	0,__pbssBANK1
   650  00711A  0EFA               	movlw	250
   651  00711C                     clear_2:
   652  00711C  6AEE               	clrf	postinc0,c
   653  00711E  06E8               	decf	wreg,f,c
   654  007120  E1FD               	bnz	clear_2
   655                           
   656                           ; Clear objects allocated to BANK0 (120 bytes)
   657  007122  EE00  F060         	lfsr	0,__pbssBANK0
   658  007126  0E78               	movlw	120
   659  007128                     clear_3:
   660  007128  6AEE               	clrf	postinc0,c
   661  00712A  06E8               	decf	wreg,f,c
   662  00712C  E1FD               	bnz	clear_3
   663                           
   664                           ; Clear objects allocated to COMRAM (21 bytes)
   665  00712E  EE00  F03B         	lfsr	0,__pbssCOMRAM
   666  007132  0E15               	movlw	21
   667  007134                     clear_4:
   668  007134  6AEE               	clrf	postinc0,c
   669  007136  06E8               	decf	wreg,f,c
   670  007138  E1FD               	bnz	clear_4
   671  00713A                     end_of_initialization:
   672                           	callstack 0
   673  00713A                     __end_of__initialization:
   674                           	callstack 0
   675  00713A  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   676  00713C  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   677  00713E  0100               	movlb	0
   678  007140  EF51  F02E         	goto	_main	;jump to C main() function
   679                           
   680                           	psect	bssCOMRAM
   681  00003B                     __pbssCOMRAM:
   682                           	callstack 0
   683  00003B                     _rfCMD:
   684                           	callstack 0
   685  00003B                     	ds	11
   686  000046                     _edit_Param:
   687                           	callstack 0
   688  000046                     	ds	6
   689  00004C                     _button_struct:
   690                           	callstack 0
   691  00004C                     	ds	4
   692                           
   693                           	psect	bssBANK0
   694  000060                     __pbssBANK0:
   695                           	callstack 0
   696  000060                     _learn_st:
   697                           	callstack 0
   698  000060                     	ds	18
   699  000072                     _dispStruct:
   700                           	callstack 0
   701  000072                     	ds	6
   702  000078                     _brakeElectric_st:
   703                           	callstack 0
   704  000078                     	ds	2
   705  00007A                     _pointSync:
   706                           	callstack 0
   707  00007A                     	ds	2
   708  00007C                     _Hop:
   709                           	callstack 0
   710  00007C                     	ds	2
   711  00007E                     _RFcount:
   712                           	callstack 0
   713  00007E                     	ds	2
   714  000080                     _temp:
   715                           	callstack 0
   716  000080                     	ds	1
   717  000081                     _control_limit_switch:
   718                           	callstack 0
   719  000081                     	ds	1
   720  000082                     _fullmotorPower:
   721                           	callstack 0
   722  000082                     	ds	1
   723  000083                     _stateMotor:
   724                           	callstack 0
   725  000083                     	ds	1
   726  000084                     _zeroCrossingWaitTimeIdx:
   727                           	callstack 0
   728  000084                     	ds	1
   729  000085                     _programmer_enable:
   730                           	callstack 0
   731  000085                     	ds	1
   732  000086                     readbutton@key1:
   733                           	callstack 0
   734  000086                     	ds	1
   735  000087                     readRFButtons@keyType:
   736                           	callstack 0
   737  000087                     	ds	1
   738  000088                     readRFButtons@key1:
   739                           	callstack 0
   740  000088                     	ds	1
   741  000089                     _RFBit:
   742                           	callstack 0
   743  000089                     	ds	1
   744  00008A                     _RFFull_12BIT:
   745                           	callstack 0
   746  00008A                     	ds	1
   747  00008B                     _RFFull:
   748                           	callstack 0
   749  00008B                     	ds	1
   750  00008C                     _BitCount:
   751                           	callstack 0
   752  00008C                     	ds	1
   753  00008D                     _Bptr:
   754                           	callstack 0
   755  00008D                     	ds	1
   756  00008E                     _numberOfErrorCurrent:
   757                           	callstack 0
   758  00008E                     	ds	1
   759  00008F                     _idxAdcZeroAquisition:
   760                           	callstack 0
   761  00008F                     	ds	1
   762  000090                     _idxSaveEnergyADCHist:
   763                           	callstack 0
   764  000090                     	ds	1
   765  000091                     _idxAdcAquisition:
   766                           	callstack 0
   767  000091                     	ds	1
   768  000092                     _Counterchoose:
   769                           	callstack 0
   770  000092                     	ds	1
   771  000093                     _eusart1RxCount:
   772                           	callstack 0
   773  000093                     	ds	1
   774  000094                     _eusart1RxTail:
   775                           	callstack 0
   776  000094                     	ds	1
   777  000095                     _eusart1RxHead:
   778                           	callstack 0
   779  000095                     	ds	1
   780  000096                     _eusart1TxTail:
   781                           	callstack 0
   782  000096                     	ds	1
   783  000097                     _eusart1TxHead:
   784                           	callstack 0
   785  000097                     	ds	1
   786  000098                     _var_sys_NVM:
   787                           	callstack 0
   788  000098                     	ds	64
   789                           
   790                           	psect	dataBANK0
   791  0000F8                     __pdataBANK0:
   792                           	callstack 0
   793  0000F8                     _auxCounter:
   794                           	callstack 0
   795  0000F8                     	ds	2
   796                           
   797                           	psect	bssBANK1
   798  000100                     __pbssBANK1:
   799                           	callstack 0
   800  000100                     _var_sys:
   801                           	callstack 0
   802  000100                     	ds	81
   803  000151                     _menu_st:
   804                           	callstack 0
   805  000151                     	ds	25
   806  00016A                     _security:
   807                           	callstack 0
   808  00016A                     	ds	11
   809  000175                     _fimdecurso:
   810                           	callstack 0
   811  000175                     	ds	6
   812  00017B                     _powerControl_st:
   813                           	callstack 0
   814  00017B                     	ds	6
   815  000181                     readRFButtons@serial:
   816                           	callstack 0
   817  000181                     	ds	4
   818  000185                     _NextHop:
   819                           	callstack 0
   820  000185                     	ds	2
   821  000187                     readRFButtons@rollingCode:
   822                           	callstack 0
   823  000187                     	ds	2
   824  000189                     _BufferRF_12BIT:
   825                           	callstack 0
   826  000189                     	ds	2
   827  00018B                     _erroranterior:
   828                           	callstack 0
   829  00018B                     	ds	2
   830  00018D                     _aux_in_auto_close:
   831                           	callstack 0
   832  00018D                     	ds	1
   833  00018E                     _aux_i:
   834                           	callstack 0
   835  00018E                     	ds	1
   836  00018F                     _Abertura_pedonal:
   837                           	callstack 0
   838  00018F                     	ds	1
   839  000190                     _temppower:
   840                           	callstack 0
   841  000190                     	ds	1
   842  000191                     _difTime:
   843                           	callstack 0
   844  000191                     	ds	1
   845  000192                     _StateTRIAC:
   846                           	callstack 0
   847  000192                     	ds	1
   848  000193                     _waitZeroPeak:
   849                           	callstack 0
   850  000193                     	ds	1
   851  000194                     _zeroCrossing:
   852                           	callstack 0
   853  000194                     	ds	1
   854  000195                     _zeroCrossingLength:
   855                           	callstack 0
   856  000195                     	ds	1
   857  000196                     _lastKey:
   858                           	callstack 0
   859  000196                     	ds	1
   860  000197                     _F2Chance:
   861                           	callstack 0
   862  000197                     	ds	1
   863  000198                     readbutton@key2:
   864                           	callstack 0
   865  000198                     	ds	1
   866  000199                     readRFButtons@typeRemote:
   867                           	callstack 0
   868  000199                     	ds	1
   869  00019A                     _RFstate:
   870                           	callstack 0
   871  00019A                     	ds	1
   872  00019B                     _eusart1RxLastError:
   873                           	callstack 0
   874  00019B                     	ds	1
   875  00019C                     _ts_system:
   876                           	callstack 0
   877  00019C                     	ds	72
   878  0001E4                     _controlGate_stateMachine:
   879                           	callstack 0
   880  0001E4                     	ds	11
   881  0001EF                     _main_stateMachine:
   882                           	callstack 0
   883  0001EF                     	ds	11
   884                           
   885                           	psect	dataBANK1
   886  0001FA                     __pdataBANK1:
   887                           	callstack 0
   888  0001FA                     _tempCounter:
   889                           	callstack 0
   890  0001FA                     	ds	4
   891  0001FE                     _firstselectflag:
   892                           	callstack 0
   893  0001FE                     	ds	1
   894                           
   895                           	psect	bssBANK2
   896  000200                     __pbssBANK2:
   897                           	callstack 0
   898  000200                     _ADC_array:
   899                           	callstack 0
   900  000200                     	ds	60
   901  00023C                     _I2C1_Status:
   902                           	callstack 0
   903  00023C                     	ds	36
   904  000260                     _SumEnergyADCHist_array:
   905                           	callstack 0
   906  000260                     	ds	20
   907  000274                     _eusart1RxStatusBuffer:
   908                           	callstack 0
   909  000274                     	ds	8
   910  00027C                     _eusart1RxBuffer:
   911                           	callstack 0
   912  00027C                     	ds	8
   913  000284                     _eusart1TxBuffer:
   914                           	callstack 0
   915  000284                     	ds	8
   916  00028C                     _EHop:
   917                           	callstack 0
   918  00028C                     	ds	2
   919  00028E                     _timer0ReloadVal16bit:
   920                           	callstack 0
   921  00028E                     	ds	2
   922  000290                     _classic_data:
   923                           	callstack 0
   924  000290                     	ds	16
   925  0002A0                     _memoryTEMP:
   926                           	callstack 0
   927  0002A0                     	ds	16
   928  0002B0                     _controlLearning_stateMachine:
   929                           	callstack 0
   930  0002B0                     	ds	11
   931  0002BB                     _menuConfiguration_stateMachine:
   932                           	callstack 0
   933  0002BB                     	ds	11
   934  0002C6                     _BufferRF:
   935                           	callstack 0
   936  0002C6                     	ds	9
   937  0002CF                     _DKEY:
   938                           	callstack 0
   939  0002CF                     	ds	8
   940  0002D7                     NormalKeyGen@SEED:
   941                           	callstack 0
   942  0002D7                     	ds	4
   943                           
   944                           	psect	dataBANK2
   945  0002ED                     __pdataBANK2:
   946                           	callstack 0
   947  0002ED                     _zeroCrossingWaitTime:
   948                           	callstack 0
   949  0002ED                     	ds	2
   950                           
   951                           	psect	bssBANK3
   952  000300                     __pbssBANK3:
   953                           	callstack 0
   954  000300                     _listSyncValues:
   955                           	callstack 0
   956  000300                     	ds	150
   957  000396                     _ADC_zero_array:
   958                           	callstack 0
   959  000396                     	ds	60
   960                           
   961                           	psect	dataBANK3
   962  0003D2                     __pdataBANK3:
   963                           	callstack 0
   964  0003D2                     _DispTable:
   965                           	callstack 0
   966  0003D2                     	ds	37
   967                           
   968                           	psect	cstackBANK0
   969  0000D8                     __pcstackBANK0:
   970                           	callstack 0
   971  0000D8                     ??_keeloq_classic_decrypt_packet:
   972  0000D8                     ??_setPositionInvertionInClosing:
   973  0000D8                     ??_validateRemoteSerialNumber:
   974  0000D8                     ??_RemoveSerial:
   975  0000D8                     SaveNVM_VarSystem@page:
   976                           	callstack 0
   977  0000D8                     getStateOpenPosition@state:
   978                           	callstack 0
   979  0000D8                     saveNewSerial@tempSerial:
   980                           	callstack 0
   981                           
   982                           ; 4 bytes @ 0x0
   983  0000D8                     	ds	1
   984  0000D9                     getStateOpenPosition@stateMotor:
   985                           	callstack 0
   986  0000D9                     SaveNVM_VarSystem@tempAdd:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x1
   990  0000D9                     	ds	1
   991  0000DA                     ??_controlVelocity:
   992  0000DA                     RemoveSerial@cmdType:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x2
   996  0000DA                     	ds	1
   997  0000DB                     SaveNVM_VarSystem@point:
   998                           	callstack 0
   999  0000DB                     RemoveSerial@tempSerial:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x3
  1003  0000DB                     	ds	1
  1004  0000DC                     ??_eusartparser:
  1005  0000DC                     ??_setValueToEdit:
  1006  0000DC                     saveNewSerial@position:
  1007                           	callstack 0
  1008  0000DC                     sm_execute_ControlLearning@psm:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x4
  1012  0000DC                     	ds	1
  1013  0000DD                     ??_saveNewSerial:
  1014                           
  1015                           ; 1 bytes @ 0x5
  1016  0000DD                     	ds	1
  1017  0000DE                     ??_sm_execute_ControlLearning:
  1018  0000DE                     setValueToEdit@menuType:
  1019                           	callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x6
  1022  0000DE                     	ds	1
  1023  0000DF                     setValueToEdit@haveValueToEdit:
  1024                           	callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x7
  1027  0000DF                     	ds	1
  1028  0000E0                     ??_controlSelectRemote:
  1029  0000E0                     keeloqDecryptPacket@data:
  1030                           	callstack 0
  1031  0000E0                     DecryptPacket_12BIT@data:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x8
  1035  0000E0                     	ds	1
  1036  0000E1                     controlSelectRemote@validSerial:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x9
  1040  0000E1                     	ds	1
  1041  0000E2                     controlSelectRemote@pos:
  1042                           	callstack 0
  1043  0000E2                     keeloqDecryptPacket@classic_data:
  1044                           	callstack 0
  1045  0000E2                     DecryptPacket_12BIT@classic_data:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0xA
  1049  0000E2                     	ds	1
  1050  0000E3                     controlSelectRemote@typeRemote:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0xB
  1054  0000E3                     	ds	1
  1055  0000E4                     ??_keeloqDecryptPacket:
  1056  0000E4                     DecryptPacket_12BIT@commandType:
  1057                           	callstack 0
  1058  0000E4                     actionZone_Opening@securityClosing:
  1059                           	callstack 0
  1060  0000E4                     controlSelectRemote@tempSerial:
  1061                           	callstack 0
  1062                           
  1063                           ; 4 bytes @ 0xC
  1064  0000E4                     	ds	1
  1065  0000E5                     actionZone_Opening@securityOpening:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0xD
  1069  0000E5                     	ds	1
  1070  0000E6                     actionZone_Opening@typeOpenOrder:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0xE
  1074  0000E6                     	ds	1
  1075  0000E7                     sm_execute_ControlGate@psm:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xF
  1079  0000E7                     	ds	1
  1080  0000E8                     keeloqDecryptPacket@hop_error:
  1081                           	callstack 0
  1082  0000E8                     controlSelectRemote@temp:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x10
  1086  0000E8                     	ds	1
  1087  0000E9                     ??_sm_execute_ControlGate:
  1088  0000E9                     keeloqDecryptPacket@commandType:
  1089                           	callstack 0
  1090  0000E9                     sm_execute_menuConfiguration@psm:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x11
  1094  0000E9                     	ds	2
  1095  0000EB                     ??_sm_execute_menuConfiguration:
  1096  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x13
  1100  0000EB                     	ds	2
  1101  0000ED                     sm_execute_main@psm:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x15
  1105  0000ED                     	ds	2
  1106  0000EF                     ??_sm_execute_main:
  1107                           
  1108                           ; 1 bytes @ 0x17
  1109  0000EF                     	ds	2
  1110  0000F1                     main@package:
  1111                           	callstack 0
  1112                           
  1113                           ; 7 bytes @ 0x19
  1114  0000F1                     	ds	7
  1115                           
  1116                           	psect	cstackCOMRAM
  1117  000001                     __pcstackCOMRAM:
  1118                           	callstack 0
  1119  000001                     ??_rxi:
  1120  000001                     ??i2_GetMotorPower:
  1121  000001                     ADCC_GetSingleConversion@channel:
  1122                           	callstack 0
  1123  000001                     Segments_Set@value:
  1124                           	callstack 0
  1125  000001                     i2VerifyElectricalBrake@tempState:
  1126                           	callstack 0
  1127  000001                     TMR1_WriteTimer@timerVal:
  1128                           	callstack 0
  1129  000001                     decrementTimeslot@ts:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x0
  1133  000001                     	ds	1
  1134  000002                     ??_ReadADC:
  1135  000002                     i2VerifyElectricalBrake@actualState:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x1
  1139  000002                     	ds	1
  1140  000003                     
  1141                           ; 1 bytes @ 0x2
  1142  000003                     	ds	1
  1143  000004                     i2GetMotorPower@defineatraso:
  1144                           	callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x3
  1147  000004                     	ds	1
  1148  000005                     ??_controlMotorForce:
  1149  000005                     
  1150                           ; 1 bytes @ 0x4
  1151  000005                     	ds	5
  1152  00000A                     ??_INTERRUPT_InterruptManager:
  1153                           
  1154                           ; 1 bytes @ 0x9
  1155  00000A                     	ds	6
  1156  000010                     ??_GetMotorPower:
  1157  000010                     ??_SetSegmentValueLearn:
  1158  000010                     ?_sumEnergyADC:
  1159                           	callstack 0
  1160  000010                     ?_sm_get_current_state:
  1161                           	callstack 0
  1162  000010                     ?___wmul:
  1163                           	callstack 0
  1164  000010                     ?___lwdiv:
  1165                           	callstack 0
  1166  000010                     ?_calculateMean:
  1167                           	callstack 0
  1168  000010                     ?_sumHIST:
  1169                           	callstack 0
  1170  000010                     ?___lldiv:
  1171                           	callstack 0
  1172  000010                     EUSART1_Read@readValue:
  1173                           	callstack 0
  1174  000010                     EUSART1_Write@txData:
  1175                           	callstack 0
  1176  000010                     I2C1_Open@address:
  1177                           	callstack 0
  1178  000010                     I2C1_Close@returnValue:
  1179                           	callstack 0
  1180  000010                     I2C1_MasterSendTxData@data:
  1181                           	callstack 0
  1182  000010                     WWDT_TimerClear@state:
  1183                           	callstack 0
  1184  000010                     getKeyPressed@temp:
  1185                           	callstack 0
  1186  000010                     RGB_Set@value:
  1187                           	callstack 0
  1188  000010                     SetSegmentValueIntermitent@d2:
  1189                           	callstack 0
  1190  000010                     VerifyElectricalBrake@tempState:
  1191                           	callstack 0
  1192  000010                     VerifyFollowMe@securityClose:
  1193                           	callstack 0
  1194  000010                     ___lbdiv@divisor:
  1195                           	callstack 0
  1196  000010                     ___lbmod@divisor:
  1197                           	callstack 0
  1198  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1199                           	callstack 0
  1200  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1201                           	callstack 0
  1202  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1203                           	callstack 0
  1204  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1205                           	callstack 0
  1206  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1207                           	callstack 0
  1208  000010                     I2C1_SetBuffer@buffer:
  1209                           	callstack 0
  1210  000010                     I2C1_SetCallback@cb:
  1211                           	callstack 0
  1212  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1213                           	callstack 0
  1214  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1215                           	callstack 0
  1216  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1217                           	callstack 0
  1218  000010                     saveEnergyADCHist@valueToSave:
  1219                           	callstack 0
  1220  000010                     DecCHK@data:
  1221                           	callstack 0
  1222  000010                     ReqResync@CurrentHop:
  1223                           	callstack 0
  1224  000010                     verifyProgramingMode@classic_data:
  1225                           	callstack 0
  1226  000010                     setFlashLigth_ON@Freq:
  1227                           	callstack 0
  1228  000010                     sm_restart@psm:
  1229                           	callstack 0
  1230  000010                     sm_get_current_state@psm:
  1231                           	callstack 0
  1232  000010                     ___wmul@multiplier:
  1233                           	callstack 0
  1234  000010                     ___lwdiv@dividend:
  1235                           	callstack 0
  1236  000010                     memcpy@d1:
  1237                           	callstack 0
  1238  000010                     calculateMean@meanValue:
  1239                           	callstack 0
  1240  000010                     ___lldiv@dividend:
  1241                           	callstack 0
  1242  000010                     write_eusartparser@package:
  1243                           	callstack 0
  1244                           
  1245                           ; 7 bytes @ 0xF
  1246  000010                     	ds	1
  1247  000011                     ?_read_package:
  1248                           	callstack 0
  1249  000011                     I2C1_Open@returnValue:
  1250                           	callstack 0
  1251  000011                     VerifyElectricalBrake@actualState:
  1252                           	callstack 0
  1253  000011                     ___lbdiv@dividend:
  1254                           	callstack 0
  1255  000011                     ___lbmod@dividend:
  1256                           	callstack 0
  1257  000011                     SetSegmentValueIntermitent@time:
  1258                           	callstack 0
  1259  000011                     setRGB_ON@Freq:
  1260                           	callstack 0
  1261  000011                     write_package@package:
  1262                           	callstack 0
  1263                           
  1264                           ; 7 bytes @ 0x10
  1265  000011                     	ds	1
  1266  000012                     ??_TMR1_Initialize:
  1267  000012                     ??_ControlMotor:
  1268  000012                     ??_sumEnergyADC:
  1269  000012                     ??_DecCHK:
  1270  000012                     SetSegmentValueLearn@direction:
  1271                           	callstack 0
  1272  000012                     ___lbdiv@counter:
  1273                           	callstack 0
  1274  000012                     ___lbmod@counter:
  1275                           	callstack 0
  1276  000012                     I2C1_SetBuffer@bufferSize:
  1277                           	callstack 0
  1278  000012                     I2C1_SetCallback@ptr:
  1279                           	callstack 0
  1280  000012                     sm_init@psm:
  1281                           	callstack 0
  1282  000012                     sm_send_event@psm:
  1283                           	callstack 0
  1284  000012                     ___wmul@multiplicand:
  1285                           	callstack 0
  1286  000012                     ___lwdiv@divisor:
  1287                           	callstack 0
  1288  000012                     memcpy@s1:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x11
  1292  000012                     	ds	1
  1293  000013                     ??_setRGB_ON:
  1294  000013                     SetSegmentValueIntermitent@d1:
  1295                           	callstack 0
  1296  000013                     GetMotorPower@defineatraso:
  1297                           	callstack 0
  1298  000013                     ___lbdiv@quotient:
  1299                           	callstack 0
  1300  000013                     ___lbmod@rem:
  1301                           	callstack 0
  1302                           
  1303                           ; 1 bytes @ 0x12
  1304  000013                     	ds	1
  1305  000014                     ??_InitSoftStop:
  1306  000014                     ??_InitSoftStart:
  1307  000014                     ??_sumHIST:
  1308  000014                     ?___awdiv:
  1309                           	callstack 0
  1310  000014                     I2C1_SetCallback@idx:
  1311                           	callstack 0
  1312  000014                     sumEnergyADC@sumE:
  1313                           	callstack 0
  1314  000014                     sm_init@initial_state:
  1315                           	callstack 0
  1316  000014                     sm_send_event@event:
  1317                           	callstack 0
  1318  000014                     ___wmul@product:
  1319                           	callstack 0
  1320  000014                     ___awdiv@dividend:
  1321                           	callstack 0
  1322  000014                     ___lwdiv@quotient:
  1323                           	callstack 0
  1324  000014                     memcpy@n:
  1325                           	callstack 0
  1326  000014                     calculateMean@newValue:
  1327                           	callstack 0
  1328  000014                     ___lldiv@divisor:
  1329                           	callstack 0
  1330                           
  1331                           ; 4 bytes @ 0x13
  1332  000014                     	ds	1
  1333  000015                     setRGB_ON@RGBLigth:
  1334                           	callstack 0
  1335  000015                     I2C1_SetDataCompleteCallback@cb:
  1336                           	callstack 0
  1337  000015                     I2C1_SetAddressNackCallback@cb:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x14
  1341  000015                     	ds	1
  1342  000016                     ?_getHopCode:
  1343                           	callstack 0
  1344  000016                     ?_getCurrentComparator:
  1345                           	callstack 0
  1346  000016                     sm_init@hist_mode:
  1347                           	callstack 0
  1348  000016                     ___lwdiv@counter:
  1349                           	callstack 0
  1350  000016                     memcpy@tmp:
  1351                           	callstack 0
  1352  000016                     sumEnergyADC@auxValue:
  1353                           	callstack 0
  1354  000016                     getHopCode@data:
  1355                           	callstack 0
  1356  000016                     ___awdiv@divisor:
  1357                           	callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x15
  1360  000016                     	ds	1
  1361  000017                     ??_write_eusartparser:
  1362  000017                     refreshADCZeroOffset@i:
  1363                           	callstack 0
  1364  000017                     I2C1_SetDataCompleteCallback@ptr:
  1365                           	callstack 0
  1366  000017                     I2C1_SetAddressNackCallback@ptr:
  1367                           	callstack 0
  1368  000017                     memcpy@d:
  1369                           	callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x16
  1372  000017                     	ds	1
  1373  000018                     ??_getHopCode:
  1374  000018                     ??_calculateMean:
  1375  000018                     ??_OpenWalkOrder:
  1376  000018                     sumEnergyADC@i:
  1377                           	callstack 0
  1378  000018                     ControlMotor@stateMotor:
  1379                           	callstack 0
  1380  000018                     read_eusartparser@package:
  1381                           	callstack 0
  1382  000018                     ___awdiv@counter:
  1383                           	callstack 0
  1384  000018                     refreshADCZeroOffset@media:
  1385                           	callstack 0
  1386  000018                     sumHIST@max:
  1387                           	callstack 0
  1388  000018                     ___lldiv@quotient:
  1389                           	callstack 0
  1390  000018                     read_package@package:
  1391                           	callstack 0
  1392                           
  1393                           ; 7 bytes @ 0x17
  1394  000018                     	ds	1
  1395  000019                     ??_read_eusartparser:
  1396  000019                     ___awdiv@sign:
  1397                           	callstack 0
  1398  000019                     wr1RegCompleteHandler@p:
  1399                           	callstack 0
  1400  000019                     rd1RegCompleteHandler@p:
  1401                           	callstack 0
  1402  000019                     rd2RegCompleteHandler@p:
  1403                           	callstack 0
  1404  000019                     wr2RegCompleteHandler@p:
  1405                           	callstack 0
  1406  000019                     rdBlkRegCompleteHandler@p:
  1407                           	callstack 0
  1408  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1409                           	callstack 0
  1410  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1411                           	callstack 0
  1412  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1413                           	callstack 0
  1414  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1415                           	callstack 0
  1416  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1417                           	callstack 0
  1418  000019                     I2C1_CallbackReturnReset@funPtr:
  1419                           	callstack 0
  1420  000019                     memcpy@s:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x18
  1424  000019                     	ds	1
  1425  00001A                     ??_getCurrentComparator:
  1426  00001A                     sumHIST@min:
  1427                           	callstack 0
  1428  00001A                     OpenWalkOrder@diffTime:
  1429                           	callstack 0
  1430  00001A                     ___awdiv@quotient:
  1431                           	callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x19
  1434  00001A                     	ds	1
  1435  00001B                     ??_I2C1_DO_TX:
  1436  00001B                     ??_I2C1_DO_RX:
  1437  00001B                     ??_I2C1_DO_TX_EMPTY:
  1438  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1439  00001B                     getSerialCmd@serial:
  1440                           	callstack 0
  1441  00001B                     Decrypt@packet:
  1442                           	callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x1A
  1445  00001B                     	ds	1
  1446  00001C                     getSerialCmd@temp:
  1447                           	callstack 0
  1448  00001C                     SetSegmentValueMain@d2:
  1449                           	callstack 0
  1450  00001C                     SetSegmentValue@d2:
  1451                           	callstack 0
  1452  00001C                     SetSegmentValueIntermitentMain@d2:
  1453                           	callstack 0
  1454  00001C                     ___lldiv@counter:
  1455                           	callstack 0
  1456  00001C                     sumHIST@sumH:
  1457                           	callstack 0
  1458                           
  1459                           ; 4 bytes @ 0x1B
  1460  00001C                     	ds	1
  1461  00001D                     ??_I2C1_MasterFsm:
  1462  00001D                     ?___lmul:
  1463                           	callstack 0
  1464  00001D                     Decrypt@key:
  1465                           	callstack 0
  1466  00001D                     SetSegmentValueMain@d1:
  1467                           	callstack 0
  1468  00001D                     SetSegmentValue@d1:
  1469                           	callstack 0
  1470  00001D                     SetSegmentValueIntermitentMain@time:
  1471                           	callstack 0
  1472  00001D                     ___lmul@multiplier:
  1473                           	callstack 0
  1474                           
  1475                           ; 4 bytes @ 0x1C
  1476  00001D                     	ds	1
  1477  00001E                     Decrypt@i:
  1478                           	callstack 0
  1479                           
  1480                           ; 1 bytes @ 0x1D
  1481  00001E                     	ds	1
  1482  00001F                     Decrypt@j:
  1483                           	callstack 0
  1484  00001F                     SetSegmentValueIntermitentMain@d1:
  1485                           	callstack 0
  1486  00001F                     write_eusartparser@debug:
  1487                           	callstack 0
  1488                           
  1489                           ; 2 bytes @ 0x1E
  1490  00001F                     	ds	1
  1491  000020                     ??_load_New_Menu:
  1492  000020                     ??_controlSaveRemote:
  1493  000020                     I2C1_MasterOperation@read:
  1494                           	callstack 0
  1495  000020                     sumHIST@i:
  1496                           	callstack 0
  1497  000020                     Decrypt@p:
  1498                           	callstack 0
  1499  000020                     actionZone_Closed@securityOpening:
  1500                           	callstack 0
  1501  000020                     actionZone_Opened@securityClosing:
  1502                           	callstack 0
  1503  000020                     getCurrentComparator@tempOffset:
  1504                           	callstack 0
  1505  000020                     getHopCode@tempHop:
  1506                           	callstack 0
  1507                           
  1508                           ; 2 bytes @ 0x1F
  1509  000020                     	ds	1
  1510  000021                     I2C1_MasterOperation@returnValue:
  1511                           	callstack 0
  1512  000021                     Decrypt@aux:
  1513                           	callstack 0
  1514  000021                     actionZone_Closed@typeOpenOrder:
  1515                           	callstack 0
  1516  000021                     actionZone_Opened@typeOpenOrder:
  1517                           	callstack 0
  1518  000021                     write_eusartparser@debug2:
  1519                           	callstack 0
  1520  000021                     ___lmul@multiplicand:
  1521                           	callstack 0
  1522                           
  1523                           ; 4 bytes @ 0x20
  1524  000021                     	ds	1
  1525  000022                     I2C1_Read1ByteRegister@reg:
  1526                           	callstack 0
  1527  000022                     getCurrentComparator@x:
  1528                           	callstack 0
  1529  000022                     getHopCode@tempPos:
  1530                           	callstack 0
  1531  000022                     load_New_Menu@Menu:
  1532                           	callstack 0
  1533  000022                     i2c_writeNBytes@reg:
  1534                           	callstack 0
  1535  000022                     i2c_readDataBlock@reg:
  1536                           	callstack 0
  1537  000022                     Decrypt@Buffer:
  1538                           	callstack 0
  1539                           
  1540                           ; 4 bytes @ 0x21
  1541  000022                     	ds	1
  1542  000023                     ??_ControlCurrent:
  1543  000023                     I2C1_Read1ByteRegister@address:
  1544                           	callstack 0
  1545  000023                     getHopCode@i:
  1546                           	callstack 0
  1547  000023                     load_New_Menu@i:
  1548                           	callstack 0
  1549                           
  1550                           ; 1 bytes @ 0x22
  1551  000023                     	ds	1
  1552  000024                     i2c_writeNBytes@data:
  1553                           	callstack 0
  1554  000024                     I2C1_Read1ByteRegister@returnValue:
  1555                           	callstack 0
  1556  000024                     i2c_readDataBlock@data:
  1557                           	callstack 0
  1558  000024                     HopCHK@data:
  1559                           	callstack 0
  1560                           
  1561                           ; 2 bytes @ 0x23
  1562  000024                     	ds	1
  1563  000025                     i2c_writeNBytes@len:
  1564                           	callstack 0
  1565  000025                     ___lmul@product:
  1566                           	callstack 0
  1567                           
  1568                           ; 4 bytes @ 0x24
  1569  000025                     	ds	1
  1570  000026                     i2c_readDataBlock@len:
  1571                           	callstack 0
  1572  000026                     NormalKeyGen@serial:
  1573                           	callstack 0
  1574  000026                     HopCHK@hopDiff:
  1575                           	callstack 0
  1576                           
  1577                           ; 2 bytes @ 0x25
  1578  000026                     	ds	1
  1579  000027                     ??_i2c_writeNBytes:
  1580                           
  1581                           ; 1 bytes @ 0x26
  1582  000027                     	ds	1
  1583  000028                     ??_i2c_readDataBlock:
  1584  000028                     NormalKeyGen@HOPtemp:
  1585                           	callstack 0
  1586  000028                     i2c_writeNBytes@dat:
  1587                           	callstack 0
  1588                           
  1589                           ; 17 bytes @ 0x27
  1590  000028                     	ds	1
  1591  000029                     ?_getTimeDecelaration:
  1592                           	callstack 0
  1593  000029                     i2c_readDataBlock@address:
  1594                           	callstack 0
  1595                           
  1596                           ; 1 bytes @ 0x28
  1597  000029                     	ds	1
  1598  00002A                     i2c_readDataBlock@d:
  1599                           	callstack 0
  1600                           
  1601                           ; 4 bytes @ 0x29
  1602  00002A                     	ds	2
  1603  00002C                     NormalKeyGen@SKEYtemp:
  1604                           	callstack 0
  1605                           
  1606                           ; 4 bytes @ 0x2B
  1607  00002C                     	ds	1
  1608  00002D                     ??_getTimeDecelaration:
  1609                           
  1610                           ; 1 bytes @ 0x2C
  1611  00002D                     	ds	1
  1612  00002E                     cmdMemoryIsEmpty@position:
  1613                           	callstack 0
  1614  00002E                     validateRemoteSerialNumber@serial:
  1615                           	callstack 0
  1616                           
  1617                           ; 4 bytes @ 0x2D
  1618  00002E                     	ds	1
  1619  00002F                     ??_cmdMemoryIsEmpty:
  1620                           
  1621                           ; 1 bytes @ 0x2E
  1622  00002F                     	ds	1
  1623  000030                     NormalKeyGen@Buffer:
  1624                           	callstack 0
  1625                           
  1626                           ; 8 bytes @ 0x2F
  1627  000030                     	ds	1
  1628  000031                     cmdMemoryIsEmpty@cmdType:
  1629                           	callstack 0
  1630  000031                     getTimeDecelaration@state:
  1631                           	callstack 0
  1632                           
  1633                           ; 1 bytes @ 0x30
  1634  000031                     	ds	1
  1635  000032                     ??_setPositionInvertionInOpening:
  1636  000032                     ??_getStateOpenPosition:
  1637  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1638                           	callstack 0
  1639  000032                     actionZone_Closing@securityClosing:
  1640                           	callstack 0
  1641  000032                     cmdMemoryIsEmpty@tempSerial:
  1642                           	callstack 0
  1643                           
  1644                           ; 4 bytes @ 0x31
  1645  000032                     	ds	1
  1646  000033                     actionZone_Closing@typeOpenOrder:
  1647                           	callstack 0
  1648  000033                     validateRemoteSerialNumber@position:
  1649                           	callstack 0
  1650                           
  1651                           ; 2 bytes @ 0x32
  1652  000033                     	ds	2
  1653  000035                     validateRemoteSerialNumber@mask:
  1654                           	callstack 0
  1655                           
  1656                           ; 4 bytes @ 0x34
  1657  000035                     	ds	3
  1658  000038                     keeloq_classic_decrypt_packet@data:
  1659                           	callstack 0
  1660                           
  1661                           ; 2 bytes @ 0x37
  1662  000038                     	ds	1
  1663  000039                     i2c_writeNBytes@address:
  1664                           	callstack 0
  1665  000039                     validateRemoteSerialNumber@j:
  1666                           	callstack 0
  1667                           
  1668                           ; 1 bytes @ 0x38
  1669  000039                     	ds	1
  1670  00003A                     validateRemoteSerialNumber@i:
  1671                           	callstack 0
  1672  00003A                     saveNewSerial@cmdType:
  1673                           	callstack 0
  1674  00003A                     RemoveSerial@position:
  1675                           	callstack 0
  1676  00003A                     ResetDefaultMemory@type:
  1677                           	callstack 0
  1678  00003A                     checkNVM_VarSystem@saveParam:
  1679                           	callstack 0
  1680  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1681                           	callstack 0
  1682  00003A                     setValueToEdit@ParameterSelected:
  1683                           	callstack 0
  1684  00003A                     eusartparser@package:
  1685                           	callstack 0
  1686                           
  1687                           ; 1 bytes @ 0x39
  1688  00003A                     	ds	1
  1689  00003B                     
  1690                           ; 1 bytes @ 0x3A
  1691 ;;
  1692 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1693 ;;
  1694 ;; *************** function _main *****************
  1695 ;; Defined at:
  1696 ;;		line 63 in file "main_MC50.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  package         7   25[BANK0 ] struct package_t
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 3F/1
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1711 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1713 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1714 ;;Total ram usage:        7 bytes
  1715 ;; Hardware stack levels required when called: 17
  1716 ;; This function calls:
  1717 ;;		_ControlCounterMoves
  1718 ;;		_ControlCurrent
  1719 ;;		_ControlInputs
  1720 ;;		_ControlLights
  1721 ;;		_ControlMotor
  1722 ;;		_EUSART1_is_rx_ready
  1723 ;;		_InitReceiver
  1724 ;;		_SYSTEM_Initialize
  1725 ;;		_SetSegmentValue
  1726 ;;		_ShowVersion
  1727 ;;		_WWDT_SoftEnable
  1728 ;;		_WWDT_TimerClear
  1729 ;;		_controlVelocity
  1730 ;;		_eusartparser
  1731 ;;		_getKeyPressed
  1732 ;;		_loadNVM_VarSystem
  1733 ;;		_readInputs
  1734 ;;		_readRFButtons
  1735 ;;		_read_package
  1736 ;;		_readbutton
  1737 ;;		_sm_execute_ControlGate
  1738 ;;		_sm_execute_main
  1739 ;;		_sm_init
  1740 ;; This function is called by:
  1741 ;;		Startup code after reset
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text0
  1746  005CA2                     __ptext0:
  1747                           	callstack 0
  1748  005CA2                     _main:
  1749                           	callstack 14
  1750                           
  1751                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1752                           
  1753                           ;incstack = 0
  1754  005CA2  0E18               	movlw	24
  1755  005CA4  0100               	movlb	0	; () banked
  1756  005CA6  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1757                           
  1758                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1759  005CA8  0E18               	movlw	24
  1760  005CAA  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1761                           
  1762                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1763  005CAC  0E00               	movlw	0
  1764  005CAE  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1765  005CB0  0E00               	movlw	0
  1766  005CB2  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1767                           
  1768                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1769  005CB4  0E01               	movlw	1
  1770  005CB6  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1774  005CB8  EC62  F045         	call	_SYSTEM_Initialize	;wreg free
  1775                           
  1776                           ; BSR set to: 14
  1777                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1778  005CBC  EC21  F049         	call	_WWDT_SoftEnable	;wreg free
  1779                           
  1780                           ; BSR set to: 14
  1781                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1782  005CC0  8EF2               	bsf	242,7,c	;volatile
  1783                           
  1784                           ; BSR set to: 14
  1785                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1786  005CC2  8CF2               	bsf	242,6,c	;volatile
  1787                           
  1788                           ; BSR set to: 14
  1789                           ;main_MC50.c: 86:     IOCBP3=1;
  1790  005CC4  010F               	movlb	15	; () banked
  1791  005CC6  8714               	bsf	20,3,b	;volatile
  1792                           
  1793                           ; BSR set to: 15
  1794                           ;main_MC50.c: 87:     IOCBN3=1;
  1795  005CC8  8713               	bsf	19,3,b	;volatile
  1796                           
  1797                           ; BSR set to: 15
  1798                           ;main_MC50.c: 94:     InitReceiver();
  1799  005CCA  ECAC  F047         	call	_InitReceiver	;wreg free
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1803  005CCE  EC0A  F031         	call	_loadNVM_VarSystem	;wreg free
  1804                           
  1805                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1806  005CD2  EC82  F047         	call	_WWDT_TimerClear	;wreg free
  1807                           
  1808                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1809  005CD6  0E18               	movlw	24
  1810  005CD8  6E1C               	movwf	SetSegmentValue@d2^0,c
  1811  005CDA  0E18               	movlw	24
  1812  005CDC  ECD3  F047         	call	_SetSegmentValue
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1816  005CE0  0E02               	movlw	2
  1817  005CE2  0101               	movlb	1	; () banked
  1818  005CE4  6F9E               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1819                           
  1820                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1821  005CE6  D00B               	goto	l23246
  1822  005CE8                     l23236:
  1823                           
  1824                           ; BSR set to: 1
  1825                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1826  005CE8  519F               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1827  005CEA  A4D8               	btfss	status,2,c
  1828  005CEC  D008               	goto	l23246
  1829                           
  1830                           ; BSR set to: 1
  1831                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1832  005CEE  EC82  F047         	call	_WWDT_TimerClear	;wreg free
  1833                           
  1834                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1835  005CF2  0E32               	movlw	50
  1836  005CF4  0101               	movlb	1	; () banked
  1837  005CF6  6F9F               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1838                           
  1839                           ; BSR set to: 1
  1840                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1841  005CF8  079E               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1842                           
  1843                           ; BSR set to: 1
  1844                           ;main_MC50.c: 109:             readInputs();
  1845  005CFA  ECD6  F033         	call	_readInputs	;wreg free
  1846  005CFE                     l23246:
  1847                           
  1848                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1849  005CFE  0101               	movlb	1	; () banked
  1850  005D00  519E               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1851  005D02  A4D8               	btfss	status,2,c
  1852  005D04  D7F1               	goto	l23236
  1853                           
  1854                           ; BSR set to: 1
  1855                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1856  005D06  0EBB               	movlw	low _menuConfiguration_stateMachine
  1857  005D08  6E12               	movwf	sm_init@psm^0,c
  1858  005D0A  0E02               	movlw	high _menuConfiguration_stateMachine
  1859  005D0C  6E13               	movwf	(sm_init@psm+1)^0,c
  1860  005D0E  0E00               	movlw	0
  1861  005D10  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1862  005D12  0E00               	movlw	0
  1863  005D14  6E14               	movwf	sm_init@initial_state^0,c
  1864  005D16  0E00               	movlw	0
  1865  005D18  6E16               	movwf	sm_init@hist_mode^0,c
  1866  005D1A  ECE4  F041         	call	_sm_init	;wreg free
  1867                           
  1868                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1869  005D1E  0EEF               	movlw	low _main_stateMachine
  1870  005D20  6E12               	movwf	sm_init@psm^0,c
  1871  005D22  0E01               	movlw	high _main_stateMachine
  1872  005D24  6E13               	movwf	(sm_init@psm+1)^0,c
  1873  005D26  0E00               	movlw	0
  1874  005D28  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1875  005D2A  0E00               	movlw	0
  1876  005D2C  6E14               	movwf	sm_init@initial_state^0,c
  1877  005D2E  0E00               	movlw	0
  1878  005D30  6E16               	movwf	sm_init@hist_mode^0,c
  1879  005D32  ECE4  F041         	call	_sm_init	;wreg free
  1880                           
  1881                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1882  005D36  0EE4               	movlw	low _controlGate_stateMachine
  1883  005D38  6E12               	movwf	sm_init@psm^0,c
  1884  005D3A  0E01               	movlw	high _controlGate_stateMachine
  1885  005D3C  6E13               	movwf	(sm_init@psm+1)^0,c
  1886  005D3E  0E00               	movlw	0
  1887  005D40  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1888  005D42  0E00               	movlw	0
  1889  005D44  6E14               	movwf	sm_init@initial_state^0,c
  1890  005D46  0E00               	movlw	0
  1891  005D48  6E16               	movwf	sm_init@hist_mode^0,c
  1892  005D4A  ECE4  F041         	call	_sm_init	;wreg free
  1893                           
  1894                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  1895  005D4E  0EB0               	movlw	low _controlLearning_stateMachine
  1896  005D50  6E12               	movwf	sm_init@psm^0,c
  1897  005D52  0E02               	movlw	high _controlLearning_stateMachine
  1898  005D54  6E13               	movwf	(sm_init@psm+1)^0,c
  1899  005D56  0E00               	movlw	0
  1900  005D58  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1901  005D5A  0E00               	movlw	0
  1902  005D5C  6E14               	movwf	sm_init@initial_state^0,c
  1903  005D5E  0E00               	movlw	0
  1904  005D60  6E16               	movwf	sm_init@hist_mode^0,c
  1905  005D62  ECE4  F041         	call	_sm_init	;wreg free
  1906                           
  1907                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  1908  005D66  0E00               	movlw	0
  1909  005D68  0101               	movlb	1	; () banked
  1910  005D6A  6FA5               	movwf	(_ts_system+9)& (0+255),b	;volatile
  1911  005D6C  0E14               	movlw	20
  1912  005D6E  6FA4               	movwf	(_ts_system+8)& (0+255),b	;volatile
  1913                           
  1914                           ; BSR set to: 1
  1915                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  1916  005D70  0E01               	movlw	1
  1917  005D72  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  1918  005D74  0EFE               	movlw	254
  1919  005D76  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  1920                           
  1921                           ; BSR set to: 1
  1922                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  1923  005D78  0E00               	movlw	0
  1924  005D7A  6FDB               	movwf	(_ts_system+63)& (0+255),b	;volatile
  1925  005D7C  0E64               	movlw	100
  1926  005D7E  6FDA               	movwf	(_ts_system+62)& (0+255),b	;volatile
  1927                           
  1928                           ; BSR set to: 1
  1929                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  1930  005D80  0E00               	movlw	0
  1931  005D82  6FDD               	movwf	(_ts_system+65)& (0+255),b	;volatile
  1932  005D84  0E00               	movlw	0
  1933  005D86  6FDC               	movwf	(_ts_system+64)& (0+255),b	;volatile
  1934                           
  1935                           ; BSR set to: 1
  1936                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  1937  005D88  0E00               	movlw	0
  1938  005D8A  6F00               	movwf	_var_sys& (0+255),b	;volatile
  1939  005D8C                     l23260:
  1940                           
  1941                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  1942  005D8C  EC71  F048         	call	_EUSART1_is_rx_ready	;wreg free
  1943  005D90  0900               	iorlw	0
  1944  005D92  B4D8               	btfsc	status,2,c
  1945  005D94  D00D               	goto	l23266
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;main_MC50.c: 142:             package=read_package();
  1949  005D96  ECB8  F042         	call	_read_package	;wreg free
  1950  005D9A  EE20  F0F1         	lfsr	2,main@package
  1951  005D9E  0E06               	movlw	6
  1952  005DA0                     u28731:
  1953  005DA0  CFEB FFDB          	movff	plusw0,plusw2
  1954  005DA4  06E8               	decf	wreg,f,c
  1955  005DA6  E2FC               	bc	u28731
  1956                           
  1957                           ; BSR set to: 14
  1958                           ;main_MC50.c: 143:             eusartparser(&package);
  1959  005DA8  0EF1               	movlw	low main@package
  1960  005DAA  6E3A               	movwf	eusartparser@package^0,c
  1961  005DAC  EC1C  F037         	call	_eusartparser	;wreg free
  1962  005DB0                     l23266:
  1963                           
  1964                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  1965  005DB0  0101               	movlb	1	; () banked
  1966  005DB2  519F               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1967  005DB4  A4D8               	btfss	status,2,c
  1968  005DB6  D7EA               	goto	l23260
  1969                           
  1970                           ; BSR set to: 1
  1971                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  1972  005DB8  0E32               	movlw	50
  1973  005DBA  6F9F               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;main_MC50.c: 150:             WWDT_TimerClear();
  1977  005DBC  EC82  F047         	call	_WWDT_TimerClear	;wreg free
  1978                           
  1979                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  1980  005DC0  0E04               	movlw	4
  1981  005DC2  0101               	movlb	1	; () banked
  1982  005DC4  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  1983  005DC6  D003               	goto	l23276
  1984                           
  1985                           ; BSR set to: 1
  1986                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  1987  005DC8  EC6E  F040         	call	_ShowVersion	;wreg free
  1988                           
  1989                           ;main_MC50.c: 156:             }
  1990  005DCC  D7DF               	goto	l23260
  1991  005DCE                     l23276:
  1992                           
  1993                           ; BSR set to: 1
  1994                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  1995  005DCE  EC04  F040         	call	_readbutton	;wreg free
  1996                           
  1997                           ; BSR set to: 1
  1998                           ;main_MC50.c: 162:                 readRFButtons();
  1999  005DD2  ECC1  F02C         	call	_readRFButtons	;wreg free
  2000                           
  2001                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2002  005DD6  ECF9  F047         	call	_getKeyPressed	;wreg free
  2003  005DDA  0101               	movlb	1	; () banked
  2004  005DDC  6F96               	movwf	_lastKey& (0+255),b
  2005                           
  2006                           ; BSR set to: 1
  2007                           ;main_MC50.c: 165:                 readInputs();
  2008  005DDE  ECD6  F033         	call	_readInputs	;wreg free
  2009                           
  2010                           ;main_MC50.c: 166:                 ControlInputs();
  2011  005DE2  EC35  F032         	call	_ControlInputs	;wreg free
  2012                           
  2013                           ;main_MC50.c: 167:                 ControlCurrent();
  2014  005DE6  EC12  F02F         	call	_ControlCurrent	;wreg free
  2015                           
  2016                           ;main_MC50.c: 168:                 controlVelocity();
  2017  005DEA  ECB6  F025         	call	_controlVelocity	;wreg free
  2018                           
  2019                           ;main_MC50.c: 169:                 ControlMotor();
  2020  005DEE  EC80  F023         	call	_ControlMotor	;wreg free
  2021                           
  2022                           ;main_MC50.c: 170:                 ControlLights();
  2023  005DF2  ECC8  F01C         	call	_ControlLights	;wreg free
  2024                           
  2025                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2026  005DF6  EC8B  F041         	call	_ControlCounterMoves	;wreg free
  2027                           
  2028                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2029  005DFA  0EEF               	movlw	low _main_stateMachine
  2030  005DFC  0100               	movlb	0	; () banked
  2031  005DFE  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2032  005E00  0E01               	movlw	high _main_stateMachine
  2033  005E02  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2034  005E04  ECCA  F00F         	call	_sm_execute_main	;wreg free
  2035                           
  2036                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2037  005E08  0EE4               	movlw	low _controlGate_stateMachine
  2038  005E0A  0100               	movlb	0	; () banked
  2039  005E0C  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2040  005E0E  0E01               	movlw	high _controlGate_stateMachine
  2041  005E10  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2042  005E12  EC23  F01B         	call	_sm_execute_ControlGate	;wreg free
  2043                           
  2044                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2045  005E16  0101               	movlb	1	; () banked
  2046  005E18  2996               	incf	_lastKey& (0+255),w,b
  2047  005E1A  B4D8               	btfsc	status,2,c
  2048  005E1C  D7B7               	goto	l23260
  2049                           
  2050                           ; BSR set to: 1
  2051                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2052  005E1E  ECAC  F047         	call	_InitReceiver	;wreg free
  2053                           
  2054                           ; BSR set to: 1
  2055                           
  2056                           ;main_MC50.c: 185:         }
  2057  005E22  D7B4               	goto	l23260
  2058  005E24                     __end_of_main:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _sm_execute_main *****************
  2062 ;; Defined at:
  2063 ;;		line 26 in file "sm_Main_MC50.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  psm             2   21[BANK0 ] PTR struct .
  2066 ;;		 -> main_stateMachine(11), 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 3F/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2078 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2080 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2081 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2082 ;;Total ram usage:        4 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 16
  2085 ;; This function calls:
  2086 ;;		_SetSegmentValueIntermitentMain
  2087 ;;		_SetSegmentValueMain
  2088 ;;		_load_New_Menu
  2089 ;;		_sm_execute_menuConfiguration
  2090 ;;		_sm_send_event
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text1
  2097  001F94                     __ptext1:
  2098                           	callstack 0
  2099  001F94                     _sm_execute_main:
  2100                           	callstack 14
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2104                           
  2105                           ; BSR set to: 1
  2106                           ;incstack = 0
  2107  001F94  D053               	goto	l22762
  2108  001F96                     l22738:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2112  001F96  5185               	movf	_programmer_enable& (0+255),w,b
  2113  001F98  A4D8               	btfss	status,2,c
  2114  001F9A  D066               	goto	l22764
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2118  001F9C  EE20 F004          	lfsr	2,4
  2119  001FA0  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2120  001FA2  26D9               	addwf	fsr2l,f,c
  2121  001FA4  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2122  001FA6  22DA               	addwfc	fsr2h,f,c
  2123  001FA8  0E06               	movlw	6
  2124  001FAA  18DE               	xorwf	postinc2,w,c
  2125  001FAC  10DE               	iorwf	postinc2,w,c
  2126  001FAE  A4D8               	btfss	status,2,c
  2127  001FB0  D006               	goto	l22744
  2128  001FB2                     u27730:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2132  001FB2  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2133  001FB6  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2134  001FBA  0E01               	movlw	1
  2135  001FBC  D01D               	goto	L2
  2136  001FBE                     l22744:
  2137                           
  2138                           ; BSR set to: 0
  2139  001FBE  EE20 F004          	lfsr	2,4
  2140  001FC2  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2141  001FC4  26D9               	addwf	fsr2l,f,c
  2142  001FC6  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2143  001FC8  22DA               	addwfc	fsr2h,f,c
  2144  001FCA  0E11               	movlw	17
  2145  001FCC  18DE               	xorwf	postinc2,w,c
  2146  001FCE  10DE               	iorwf	postinc2,w,c
  2147  001FD0  A4D8               	btfss	status,2,c
  2148  001FD2  D04A               	goto	l22764
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2152  001FD4  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2153  001FD8  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2154  001FDC  0E02               	movlw	2
  2155  001FDE  D00C               	goto	L2
  2156  001FE0                     l22748:
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2160  001FE0  EE20 F004          	lfsr	2,4
  2161  001FE4  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2162  001FE6  26D9               	addwf	fsr2l,f,c
  2163  001FE8  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2164  001FEA  22DA               	addwfc	fsr2h,f,c
  2165  001FEC  0E07               	movlw	7
  2166  001FEE  18DE               	xorwf	postinc2,w,c
  2167  001FF0  10DE               	iorwf	postinc2,w,c
  2168  001FF2  A4D8               	btfss	status,2,c
  2169  001FF4  D039               	goto	l22764
  2170  001FF6  D00F               	goto	u27760
  2171  001FF8                     L2:
  2172  001FF8  6EDE               	movwf	postinc2,c
  2173  001FFA  0E00               	movlw	0
  2174  001FFC  6EDD               	movwf	postdec2,c
  2175  001FFE  D034               	goto	l22764
  2176  002000                     l22752:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2180  002000  EE20 F004          	lfsr	2,4
  2181  002004  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2182  002006  26D9               	addwf	fsr2l,f,c
  2183  002008  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2184  00200A  22DA               	addwfc	fsr2h,f,c
  2185  00200C  0E07               	movlw	7
  2186  00200E  18DE               	xorwf	postinc2,w,c
  2187  002010  10DE               	iorwf	postinc2,w,c
  2188  002012  A4D8               	btfss	status,2,c
  2189  002014  D006               	goto	l22756
  2190  002016                     u27760:
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2194  002016  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2195  00201A  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2196  00201E  0E00               	movlw	0
  2197  002020  D7EB               	goto	L2
  2198  002022                     l22756:
  2199                           
  2200                           ; BSR set to: 0
  2201  002022  EE20 F004          	lfsr	2,4
  2202  002026  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2203  002028  26D9               	addwf	fsr2l,f,c
  2204  00202A  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2205  00202C  22DA               	addwfc	fsr2h,f,c
  2206  00202E  0E06               	movlw	6
  2207  002030  18DE               	xorwf	postinc2,w,c
  2208  002032  10DE               	iorwf	postinc2,w,c
  2209  002034  A4D8               	btfss	status,2,c
  2210  002036  D018               	goto	l22764
  2211  002038  D7BC               	goto	u27730
  2212  00203A                     l3048:
  2213                           
  2214                           ; BSR set to: 0
  2215  00203A  D7FF               	goto	l3048
  2216  00203C                     l22762:
  2217                           
  2218                           ; BSR set to: 0
  2219  00203C  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2220  002040  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2221  002044  50DF               	movf	indf2,w,c
  2222  002046  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2223  002048  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2224                           
  2225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2226                           ; Switch size 1, requested type "simple"
  2227                           ; Number of cases is 1, Range of values is 0 to 0
  2228                           ; switch strategies available:
  2229                           ; Name         Instructions Cycles
  2230                           ; simple_byte            4     3 (average)
  2231                           ;	Chosen strategy is simple_byte
  2232  00204A  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2233  00204C  0A00               	xorlw	0	; case 0
  2234  00204E  A4D8               	btfss	status,2,c
  2235  002050  D7F4               	goto	l3048
  2236                           
  2237                           ; BSR set to: 0
  2238                           ; Switch size 1, requested type "simple"
  2239                           ; Number of cases is 3, Range of values is 0 to 2
  2240                           ; switch strategies available:
  2241                           ; Name         Instructions Cycles
  2242                           ; simple_byte           10     6 (average)
  2243                           ;	Chosen strategy is simple_byte
  2244  002052  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2245  002054  0A00               	xorlw	0	; case 0
  2246  002056  B4D8               	btfsc	status,2,c
  2247  002058  D79E               	goto	l22738
  2248  00205A  0A01               	xorlw	1	; case 1
  2249  00205C  B4D8               	btfsc	status,2,c
  2250  00205E  D7C0               	goto	l22748
  2251  002060  0A03               	xorlw	3	; case 2
  2252  002062  B4D8               	btfsc	status,2,c
  2253  002064  D7CD               	goto	l22752
  2254  002066  D7E9               	goto	l3048
  2255  002068                     l22764:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2259  002068  0EEF               	movlw	low _main_stateMachine
  2260  00206A  6E12               	movwf	sm_send_event@psm^0,c
  2261  00206C  0E01               	movlw	high _main_stateMachine
  2262  00206E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2263  002070  0E00               	movlw	0
  2264  002072  6E15               	movwf	(sm_send_event@event+1)^0,c
  2265  002074  0E00               	movlw	0
  2266  002076  6E14               	movwf	sm_send_event@event^0,c
  2267  002078  EC01  F041         	call	_sm_send_event	;wreg free
  2268                           
  2269                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2270  00207C  D1F8               	goto	l23042
  2271  00207E                     l22766:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0 && button_struct.timer>((1000/50)*5))
  2275  00207E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2276  002080  A4D8               	btfss	status,2,c
  2277  002082  D016               	goto	l22778
  2278                           
  2279                           ; BSR set to: 0
  2280  002084  0E64               	movlw	100
  2281  002086  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2282  002088  D013               	goto	l22778
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2286  00208A  0E01               	movlw	1
  2287  00208C  EC5A  F01E         	call	_load_New_Menu
  2288  002090                     l22772:
  2289                           
  2290                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2291  002090  0EEF               	movlw	low _main_stateMachine
  2292  002092  6E12               	movwf	sm_send_event@psm^0,c
  2293  002094  0E01               	movlw	high _main_stateMachine
  2294  002096  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2295  002098  0E00               	movlw	0
  2296  00209A  6E15               	movwf	(sm_send_event@event+1)^0,c
  2297  00209C  0E06               	movlw	6
  2298  00209E  6E14               	movwf	sm_send_event@event^0,c
  2299  0020A0  EC01  F041         	call	_sm_send_event	;wreg free
  2300                           
  2301                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2302  0020A4  0E01               	movlw	1
  2303  0020A6  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2304                           
  2305                           ;sm_Main_MC50.c: 91:                 temp=0;
  2306  0020A8  0E00               	movlw	0
  2307  0020AA  0100               	movlb	0	; () banked
  2308  0020AC  6F80               	movwf	_temp& (0+255),b
  2309                           
  2310                           ;sm_Main_MC50.c: 92:             }
  2311  0020AE  0012               	return	
  2312  0020B0                     l22778:
  2313                           
  2314                           ; BSR set to: 0
  2315  0020B0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2316  0020B2  A4D8               	btfss	status,2,c
  2317  0020B4  D00B               	goto	l22786
  2318                           
  2319                           ; BSR set to: 0
  2320  0020B6  0E14               	movlw	20
  2321  0020B8  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2322  0020BA  D008               	goto	l22786
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2326  0020BC  0E00               	movlw	0
  2327  0020BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2328  0020C0  0E10               	movlw	16
  2329  0020C2  ECB9  F047         	call	_SetSegmentValueMain
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;sm_Main_MC50.c: 98:                 temp=1;
  2333  0020C6  0E01               	movlw	1
  2334  0020C8  6F80               	movwf	_temp& (0+255),b
  2335                           
  2336                           ;sm_Main_MC50.c: 99:             }
  2337  0020CA  0012               	return	
  2338  0020CC                     l22786:
  2339                           
  2340                           ; BSR set to: 0
  2341  0020CC  0580               	decf	_temp& (0+255),w,b
  2342  0020CE  A4D8               	btfss	status,2,c
  2343  0020D0  D004               	goto	l22796
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2347  0020D2  0E00               	movlw	0
  2348  0020D4  EC5A  F01E         	call	_load_New_Menu
  2349  0020D8  D7DB               	goto	l22772
  2350  0020DA                     l22796:
  2351                           
  2352                           ; BSR set to: 0
  2353  0020DA  0E27               	movlw	39
  2354  0020DC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2355  0020DE  A4D8               	btfss	status,2,c
  2356  0020E0  D007               	goto	l22808
  2357                           
  2358                           ; BSR set to: 0
  2359  0020E2  0E78               	movlw	120
  2360  0020E4  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2361  0020E6  D004               	goto	l22808
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2365  0020E8  0E0D               	movlw	13
  2366  0020EA  EC5A  F01E         	call	_load_New_Menu
  2367  0020EE  D7D0               	goto	l22772
  2368  0020F0                     l22808:
  2369                           
  2370                           ; BSR set to: 0
  2371  0020F0  0E27               	movlw	39
  2372  0020F2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2373  0020F4  A4D8               	btfss	status,2,c
  2374  0020F6  D00B               	goto	l22816
  2375                           
  2376                           ; BSR set to: 0
  2377  0020F8  0E14               	movlw	20
  2378  0020FA  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2379  0020FC  D008               	goto	l22816
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2383  0020FE  0E13               	movlw	19
  2384  002100  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2385  002102  0E05               	movlw	5
  2386  002104  ECB9  F047         	call	_SetSegmentValueMain
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;sm_Main_MC50.c: 119:                 temp=2;
  2390  002108  0E02               	movlw	2
  2391  00210A  6F80               	movwf	_temp& (0+255),b
  2392                           
  2393                           ;sm_Main_MC50.c: 120:             }
  2394  00210C  0012               	return	
  2395  00210E                     l22816:
  2396                           
  2397                           ; BSR set to: 0
  2398  00210E  0E02               	movlw	2
  2399  002110  1980               	xorwf	_temp& (0+255),w,b
  2400  002112  A4D8               	btfss	status,2,c
  2401  002114  D004               	goto	l22826
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2405  002116  0E0C               	movlw	12
  2406  002118  EC5A  F01E         	call	_load_New_Menu
  2407  00211C  D7B9               	goto	l22772
  2408  00211E                     l22826:
  2409                           
  2410                           ; BSR set to: 0
  2411  00211E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2412  002120  A4D8               	btfss	status,2,c
  2413  002122  D009               	goto	l22832
  2414                           
  2415                           ; BSR set to: 0
  2416  002124  0101               	movlb	1	; () banked
  2417  002126  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2418  002128  A4D8               	btfss	status,2,c
  2419  00212A  D005               	goto	l22832
  2420                           
  2421                           ; BSR set to: 1
  2422                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2423  00212C  0E01               	movlw	1
  2424  00212E  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2425                           
  2426                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2427  002130  0E03               	movlw	3
  2428  002132  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2429                           
  2430                           ;sm_Main_MC50.c: 132:             }
  2431  002134  0012               	return	
  2432  002136                     l22832:
  2433  002136  0E17               	movlw	23
  2434  002138  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2435  00213A  A4D8               	btfss	status,2,c
  2436  00213C  D009               	goto	l22838
  2437  00213E  0101               	movlb	1	; () banked
  2438  002140  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2439  002142  A4D8               	btfss	status,2,c
  2440  002144  D005               	goto	l22838
  2441                           
  2442                           ; BSR set to: 1
  2443                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2444  002146  0E01               	movlw	1
  2445  002148  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2446                           
  2447                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2448  00214A  0E01               	movlw	1
  2449  00214C  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2450                           
  2451                           ;sm_Main_MC50.c: 137:             }
  2452  00214E  0012               	return	
  2453  002150                     l22838:
  2454  002150  0101               	movlb	1	; () banked
  2455  002152  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2456  002154  A4D8               	btfss	status,2,c
  2457  002156  D005               	goto	l22842
  2458                           
  2459                           ; BSR set to: 1
  2460                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2461  002158  0E00               	movlw	0
  2462  00215A  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2463                           
  2464                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2465  00215C  0E00               	movlw	0
  2466  00215E  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2467                           
  2468                           ;sm_Main_MC50.c: 142:             }
  2469  002160  0012               	return	
  2470  002162                     l22842:
  2471                           
  2472                           ; BSR set to: 1
  2473  002162  0E06               	movlw	6
  2474  002164  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2475  002166  B4D8               	btfsc	status,2,c
  2476  002168  D004               	goto	u27940
  2477                           
  2478                           ; BSR set to: 1
  2479  00216A  0E05               	movlw	5
  2480  00216C  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2481  00216E  A4D8               	btfss	status,2,c
  2482  002170  D015               	goto	l22856
  2483  002172                     u27940:
  2484                           
  2485                           ; BSR set to: 1
  2486  002172  0E63               	movlw	99
  2487  002174  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2488  002176  D012               	goto	l22856
  2489                           
  2490                           ; BSR set to: 1
  2491                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2492  002178  0E0C               	movlw	12
  2493  00217A  EC5A  F01E         	call	_load_New_Menu
  2494                           
  2495                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2496  00217E  0EEF               	movlw	low _main_stateMachine
  2497  002180  6E12               	movwf	sm_send_event@psm^0,c
  2498  002182  0E01               	movlw	high _main_stateMachine
  2499  002184  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2500  002186  0E00               	movlw	0
  2501  002188  6E15               	movwf	(sm_send_event@event+1)^0,c
  2502  00218A  0E06               	movlw	6
  2503  00218C  6E14               	movwf	sm_send_event@event^0,c
  2504  00218E  EC01  F041         	call	_sm_send_event	;wreg free
  2505                           
  2506                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2507  002192  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2508                           
  2509                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2510  002196  0E01               	movlw	1
  2511  002198  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2512                           
  2513                           ;sm_Main_MC50.c: 149:             }
  2514  00219A  0012               	return	
  2515  00219C                     l22856:
  2516                           
  2517                           ; BSR set to: 1
  2518  00219C  BFA9               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2519  00219E  D005               	goto	u27960
  2520  0021A0  51A9               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2521  0021A2  E111               	bnz	l3060
  2522  0021A4  05A8               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2523  0021A6  B0D8               	btfsc	status,0,c
  2524  0021A8  0012               	return	
  2525  0021AA                     u27960:
  2526                           
  2527                           ; BSR set to: 1
  2528                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2529  0021AA  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2530  0021AC  A4D8               	btfss	status,2,c
  2531  0021AE  D006               	goto	l22862
  2532                           
  2533                           ; BSR set to: 1
  2534                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2535  0021B0  0E0C               	movlw	12
  2536  0021B2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2537  0021B4  0E0F               	movlw	15
  2538  0021B6  ECB9  F047         	call	_SetSegmentValueMain
  2539                           
  2540                           ;sm_Main_MC50.c: 157:                     }
  2541  0021BA  0012               	return	
  2542  0021BC                     l22862:
  2543                           
  2544                           ; BSR set to: 1
  2545                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2546  0021BC  0E18               	movlw	24
  2547  0021BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2548  0021C0  0E18               	movlw	24
  2549  0021C2  ECB9  F047         	call	_SetSegmentValueMain
  2550  0021C6                     l3060:
  2551                           
  2552                           ; BSR set to: 1
  2553  0021C6  0012               	return	
  2554  0021C8                     l22864:
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2558  0021C8  0EBB               	movlw	low _menuConfiguration_stateMachine
  2559  0021CA  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2560  0021CC  0E02               	movlw	high _menuConfiguration_stateMachine
  2561  0021CE  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2562  0021D0  EC91  F007         	call	_sm_execute_menuConfiguration	;wreg free
  2563                           
  2564                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2565  0021D4  0012               	return	
  2566  0021D6                     l22866:
  2567                           
  2568                           ; BSR set to: 0
  2569                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2570  0021D6  0E00               	movlw	0
  2571  0021D8  0101               	movlb	1	; () banked
  2572  0021DA  6F8D               	movwf	_aux_in_auto_close& (0+255),b
  2573                           
  2574                           ; BSR set to: 1
  2575                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2576  0021DC  0E04               	movlw	4
  2577  0021DE  19E4               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2578  0021E0  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2579  0021E2  A4D8               	btfss	status,2,c
  2580  0021E4  D013               	goto	l3083
  2581                           
  2582                           ; BSR set to: 1
  2583                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2584  0021E6  0100               	movlb	0	; () banked
  2585  0021E8  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2586  0021EA  A4D8               	btfss	status,2,c
  2587  0021EC  D007               	goto	l22876
  2588                           
  2589                           ; BSR set to: 0
  2590  0021EE  0101               	movlb	1	; () banked
  2591  0021F0  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2592  0021F2  A4D8               	btfss	status,2,c
  2593  0021F4  D003               	goto	l22876
  2594  0021F6                     u28000:
  2595                           
  2596                           ; BSR set to: 1
  2597                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2598  0021F6  0E01               	movlw	1
  2599  0021F8  6F8D               	movwf	_aux_in_auto_close& (0+255),b
  2600                           
  2601                           ;sm_Main_MC50.c: 182:                 }
  2602  0021FA  D008               	goto	l3083
  2603  0021FC                     l22876:
  2604  0021FC  0100               	movlb	0	; () banked
  2605  0021FE  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2606  002200  B4D8               	btfsc	status,2,c
  2607  002202  D004               	goto	l3083
  2608                           
  2609                           ; BSR set to: 0
  2610  002204  0101               	movlb	1	; () banked
  2611  002206  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2612  002208  A4D8               	btfss	status,2,c
  2613  00220A  D7F5               	goto	u28000
  2614  00220C                     l3083:
  2615                           
  2616                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2617  00220C  0101               	movlb	1	; () banked
  2618  00220E  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2619  002210  A4D8               	btfss	status,2,c
  2620  002212  D069               	goto	l3097
  2621                           
  2622                           ; BSR set to: 1
  2623  002214  0E04               	movlw	4
  2624  002216  19E4               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2625  002218  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2626  00221A  A4D8               	btfss	status,2,c
  2627  00221C  D003               	goto	u28050
  2628                           
  2629                           ; BSR set to: 1
  2630  00221E  518D               	movf	_aux_in_auto_close& (0+255),w,b
  2631  002220  B4D8               	btfsc	status,2,c
  2632  002222  D008               	goto	u28070
  2633  002224                     u28050:
  2634                           
  2635                           ; BSR set to: 1
  2636  002224  05E4               	decf	_controlGate_stateMachine& (0+255),w,b
  2637  002226  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2638  002228  B4D8               	btfsc	status,2,c
  2639  00222A  D004               	goto	u28070
  2640                           
  2641                           ; BSR set to: 1
  2642  00222C  51E4               	movf	_controlGate_stateMachine& (0+255),w,b
  2643  00222E  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2644  002230  A4D8               	btfss	status,2,c
  2645  002232  D059               	goto	l3097
  2646  002234                     u28070:
  2647                           
  2648                           ; BSR set to: 1
  2649                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0 && button_struct.timer>((1000/50)*5))
  2650  002234  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2651  002236  A4D8               	btfss	status,2,c
  2652  002238  D015               	goto	l22904
  2653                           
  2654                           ; BSR set to: 1
  2655  00223A  0E64               	movlw	100
  2656  00223C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2657  00223E  D012               	goto	l22904
  2658                           
  2659                           ; BSR set to: 1
  2660                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2661  002240  0E01               	movlw	1
  2662  002242  EC5A  F01E         	call	_load_New_Menu
  2663  002246                     l22898:
  2664                           
  2665                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2666  002246  0EEF               	movlw	low _main_stateMachine
  2667  002248  6E12               	movwf	sm_send_event@psm^0,c
  2668  00224A  0E01               	movlw	high _main_stateMachine
  2669  00224C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2670  00224E  0E00               	movlw	0
  2671  002250  6E15               	movwf	(sm_send_event@event+1)^0,c
  2672  002252  0E06               	movlw	6
  2673  002254  6E14               	movwf	sm_send_event@event^0,c
  2674  002256  EC01  F041         	call	_sm_send_event	;wreg free
  2675                           
  2676                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2677  00225A  0E01               	movlw	1
  2678  00225C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2679                           
  2680                           ;sm_Main_MC50.c: 200:                     temp=0;
  2681  00225E  0E00               	movlw	0
  2682  002260  0100               	movlb	0	; () banked
  2683  002262  D037               	goto	L4
  2684  002264                     l22904:
  2685                           
  2686                           ; BSR set to: 1
  2687  002264  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2688  002266  A4D8               	btfss	status,2,c
  2689  002268  D00A               	goto	l22912
  2690                           
  2691                           ; BSR set to: 1
  2692  00226A  0E14               	movlw	20
  2693  00226C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2694  00226E  D007               	goto	l22912
  2695                           
  2696                           ; BSR set to: 1
  2697                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2698  002270  0E00               	movlw	0
  2699  002272  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2700  002274  0E10               	movlw	16
  2701  002276  ECB9  F047         	call	_SetSegmentValueMain
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;sm_Main_MC50.c: 206:                     temp=1;
  2705  00227A  0E01               	movlw	1
  2706  00227C  D02A               	goto	L4
  2707  00227E                     l22912:
  2708                           
  2709                           ; BSR set to: 1
  2710  00227E  0100               	movlb	0	; () banked
  2711  002280  0580               	decf	_temp& (0+255),w,b
  2712  002282  A4D8               	btfss	status,2,c
  2713  002284  D00E               	goto	l22926
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2717  002286  0E00               	movlw	0
  2718  002288  EC5A  F01E         	call	_load_New_Menu
  2719                           
  2720                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2721  00228C  0E01               	movlw	1
  2722  00228E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2723                           
  2724                           ;sm_Main_MC50.c: 213:                     temp=0;
  2725  002290  0E00               	movlw	0
  2726  002292  0100               	movlb	0	; () banked
  2727  002294  6F80               	movwf	_temp& (0+255),b
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2731  002296  0E00               	movlw	0
  2732  002298  0101               	movlb	1	; () banked
  2733  00229A  6FF0               	movwf	(_main_stateMachine+1)& (0+255),b
  2734  00229C  0E01               	movlw	1
  2735  00229E  6FEF               	movwf	_main_stateMachine& (0+255),b
  2736  0022A0  0012               	return	
  2737  0022A2                     l22926:
  2738                           
  2739                           ; BSR set to: 0
  2740  0022A2  0E27               	movlw	39
  2741  0022A4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2742  0022A6  A4D8               	btfss	status,2,c
  2743  0022A8  D007               	goto	l22938
  2744                           
  2745                           ; BSR set to: 0
  2746  0022AA  0E78               	movlw	120
  2747  0022AC  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2748  0022AE  D004               	goto	l22938
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2752  0022B0  0E0D               	movlw	13
  2753  0022B2  EC5A  F01E         	call	_load_New_Menu
  2754  0022B6  D7C7               	goto	l22898
  2755  0022B8                     l22938:
  2756                           
  2757                           ; BSR set to: 0
  2758  0022B8  0E27               	movlw	39
  2759  0022BA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2760  0022BC  A4D8               	btfss	status,2,c
  2761  0022BE  D00B               	goto	l22946
  2762                           
  2763                           ; BSR set to: 0
  2764  0022C0  0E14               	movlw	20
  2765  0022C2  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2766  0022C4  D008               	goto	l22946
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2770  0022C6  0E13               	movlw	19
  2771  0022C8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2772  0022CA  0E05               	movlw	5
  2773  0022CC  ECB9  F047         	call	_SetSegmentValueMain
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;sm_Main_MC50.c: 229:                 temp=2;
  2777  0022D0  0E02               	movlw	2
  2778  0022D2                     L4:
  2779  0022D2  6F80               	movwf	_temp& (0+255),b
  2780                           
  2781                           ;sm_Main_MC50.c: 230:             }
  2782  0022D4  D008               	goto	l3097
  2783  0022D6                     l22946:
  2784                           
  2785                           ; BSR set to: 0
  2786  0022D6  0E02               	movlw	2
  2787  0022D8  1980               	xorwf	_temp& (0+255),w,b
  2788  0022DA  A4D8               	btfss	status,2,c
  2789  0022DC  D004               	goto	l3097
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2793  0022DE  0E0C               	movlw	12
  2794  0022E0  EC5A  F01E         	call	_load_New_Menu
  2795  0022E4  D6D5               	goto	l22772
  2796  0022E6                     l3097:
  2797                           
  2798                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0 && button_struct.current!=0x27) )
  2799                           
  2800                           ; BSR set to: 0
  2801  0022E6  0101               	movlb	1	; () banked
  2802  0022E8  BFA9               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2803  0022EA  D005               	goto	u28180
  2804  0022EC  51A9               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2805  0022EE  E102               	bnz	u28181
  2806  0022F0  05A8               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2807  0022F2  B0D8               	btfsc	status,0,c
  2808  0022F4                     u28181:
  2809  0022F4  0012               	return	
  2810  0022F6                     u28180:
  2811                           
  2812                           ; BSR set to: 1
  2813  0022F6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2814  0022F8  B4D8               	btfsc	status,2,c
  2815  0022FA  0012               	return	
  2816                           
  2817                           ; BSR set to: 1
  2818  0022FC  0E27               	movlw	39
  2819  0022FE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2820  002300  B4D8               	btfsc	status,2,c
  2821  002302  0012               	return	
  2822                           
  2823                           ; BSR set to: 1
  2824                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2825  002304  0E03               	movlw	3
  2826  002306  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2827  002308  A4D8               	btfss	status,2,c
  2828  00230A  D011               	goto	l22972
  2829                           
  2830                           ; BSR set to: 1
  2831                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2832  00230C  0E12               	movlw	18
  2833  00230E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2834  002310  0E00               	movlw	0
  2835  002312  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2836  002314  0E0A               	movlw	10
  2837  002316  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2838  002318  0E0C               	movlw	12
  2839  00231A  EC54  F048         	call	_SetSegmentValueIntermitentMain
  2840  00231E                     l22968:
  2841                           
  2842                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2843  00231E  0E00               	movlw	0
  2844  002320  0101               	movlb	1	; () banked
  2845  002322  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2846  002324  0E04               	movlw	4
  2847  002326  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2848                           
  2849                           ; BSR set to: 1
  2850                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2851  002328  0E00               	movlw	0
  2852  00232A  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2853                           
  2854                           ;sm_Main_MC50.c: 252:                 }
  2855  00232C  0012               	return	
  2856  00232E                     l22972:
  2857                           
  2858                           ; BSR set to: 1
  2859  00232E  0E02               	movlw	2
  2860  002330  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2861  002332  B4D8               	btfsc	status,2,c
  2862  002334  D003               	goto	u28230
  2863                           
  2864                           ; BSR set to: 1
  2865  002336  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2866  002338  A4D8               	btfss	status,2,c
  2867  00233A  D00A               	goto	l22982
  2868  00233C                     u28230:
  2869                           
  2870                           ; BSR set to: 1
  2871                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2872  00233C  0E10               	movlw	16
  2873  00233E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2874  002340  0E00               	movlw	0
  2875  002342  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2876  002344  0E0A               	movlw	10
  2877  002346  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2878  002348  0E00               	movlw	0
  2879  00234A  EC54  F048         	call	_SetSegmentValueIntermitentMain
  2880  00234E  D7E7               	goto	l22968
  2881  002350                     l22982:
  2882                           
  2883                           ; BSR set to: 1
  2884  002350  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2885  002352  A4D8               	btfss	status,2,c
  2886  002354  D00F               	goto	l22988
  2887                           
  2888                           ; BSR set to: 1
  2889  002356  05E4               	decf	_controlGate_stateMachine& (0+255),w,b
  2890  002358  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2891  00235A  A4D8               	btfss	status,2,c
  2892  00235C  D00B               	goto	l22988
  2893                           
  2894                           ; BSR set to: 1
  2895                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  2896  00235E  0EEF               	movlw	low _main_stateMachine
  2897  002360  6E12               	movwf	sm_send_event@psm^0,c
  2898  002362  0E01               	movlw	high _main_stateMachine
  2899  002364  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2900  002366  0E00               	movlw	0
  2901  002368  6E15               	movwf	(sm_send_event@event+1)^0,c
  2902  00236A  0E07               	movlw	7
  2903  00236C  6E14               	movwf	sm_send_event@event^0,c
  2904  00236E  EC01  F041         	call	_sm_send_event	;wreg free
  2905                           
  2906                           ;sm_Main_MC50.c: 264:                 }
  2907  002372  0012               	return	
  2908  002374                     l22988:
  2909                           
  2910                           ; BSR set to: 1
  2911  002374  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2912  002376  A4D8               	btfss	status,2,c
  2913  002378  D074               	goto	l23038
  2914                           
  2915                           ; BSR set to: 1
  2916  00237A  0E04               	movlw	4
  2917  00237C  19E4               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2918  00237E  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2919  002380  A4D8               	btfss	status,2,c
  2920  002382  D06F               	goto	l23038
  2921                           
  2922                           ; BSR set to: 1
  2923                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  2924  002384  0100               	movlb	0	; () banked
  2925  002386  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2926  002388  B4D8               	btfsc	status,2,c
  2927  00238A  D00B               	goto	u28310
  2928                           
  2929                           ; BSR set to: 0
  2930  00238C  0101               	movlb	1	; () banked
  2931  00238E  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2932  002390  B4D8               	btfsc	status,2,c
  2933  002392  D007               	goto	u28310
  2934                           
  2935                           ; BSR set to: 1
  2936  002394  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  2937  002396  B4D8               	btfsc	status,2,c
  2938  002398  D013               	goto	u28350
  2939                           
  2940                           ; BSR set to: 1
  2941  00239A  0E03               	movlw	3
  2942  00239C  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2943  00239E  B4D8               	btfsc	status,2,c
  2944  0023A0  D00F               	goto	u28350
  2945  0023A2                     u28310:
  2946  0023A2  0100               	movlb	0	; () banked
  2947  0023A4  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2948  0023A6  A4D8               	btfss	status,2,c
  2949  0023A8  D026               	goto	l23016
  2950                           
  2951                           ; BSR set to: 0
  2952  0023AA  0101               	movlb	1	; () banked
  2953  0023AC  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2954  0023AE  A4D8               	btfss	status,2,c
  2955  0023B0  D022               	goto	l23016
  2956                           
  2957                           ; BSR set to: 1
  2958  0023B2  0E02               	movlw	2
  2959  0023B4  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2960  0023B6  B4D8               	btfsc	status,2,c
  2961  0023B8  D01E               	goto	l23016
  2962                           
  2963                           ; BSR set to: 1
  2964  0023BA  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2965  0023BC  B4D8               	btfsc	status,2,c
  2966  0023BE  D01B               	goto	l23016
  2967  0023C0                     u28350:
  2968                           
  2969                           ; BSR set to: 1
  2970                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  2971  0023C0  0E00               	movlw	0
  2972  0023C2  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2973  0023C4  0E0A               	movlw	10
  2974  0023C6  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2975                           
  2976                           ; BSR set to: 1
  2977                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  2978  0023C8  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  2979  0023CA  A4D8               	btfss	status,2,c
  2980  0023CC  D00A               	goto	l23014
  2981                           
  2982                           ; BSR set to: 1
  2983                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  2984  0023CE  0E10               	movlw	16
  2985  0023D0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2986  0023D2  0E00               	movlw	0
  2987  0023D4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2988  0023D6  0E0A               	movlw	10
  2989  0023D8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2990  0023DA  0E0A               	movlw	10
  2991  0023DC  EC54  F048         	call	_SetSegmentValueIntermitentMain
  2992                           
  2993                           ;sm_Main_MC50.c: 282:                         }
  2994  0023E0  0012               	return	
  2995  0023E2                     l23014:
  2996                           
  2997                           ; BSR set to: 1
  2998                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  2999  0023E2  0E0F               	movlw	15
  3000  0023E4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3001  0023E6  0E00               	movlw	0
  3002  0023E8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3003  0023EA  0E0A               	movlw	10
  3004  0023EC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3005  0023EE  0E0A               	movlw	10
  3006  0023F0  EC54  F048         	call	_SetSegmentValueIntermitentMain
  3007  0023F4  0012               	return	
  3008  0023F6                     l23016:
  3009  0023F6  0100               	movlb	0	; () banked
  3010  0023F8  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3011  0023FA  B4D8               	btfsc	status,2,c
  3012  0023FC  D008               	goto	u28390
  3013                           
  3014                           ; BSR set to: 0
  3015  0023FE  0101               	movlb	1	; () banked
  3016  002400  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3017  002402  B4D8               	btfsc	status,2,c
  3018  002404  D004               	goto	u28390
  3019                           
  3020                           ; BSR set to: 1
  3021  002406  0E02               	movlw	2
  3022  002408  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3023  00240A  B4D8               	btfsc	status,2,c
  3024  00240C  D00C               	goto	u28420
  3025  00240E                     u28390:
  3026  00240E  0100               	movlb	0	; () banked
  3027  002410  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3028  002412  A4D8               	btfss	status,2,c
  3029  002414  D016               	goto	l23032
  3030                           
  3031                           ; BSR set to: 0
  3032  002416  0101               	movlb	1	; () banked
  3033  002418  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3034  00241A  A4D8               	btfss	status,2,c
  3035  00241C  D012               	goto	l23032
  3036                           
  3037                           ; BSR set to: 1
  3038  00241E  0E02               	movlw	2
  3039  002420  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3040  002422  A4D8               	btfss	status,2,c
  3041  002424  D00E               	goto	l23032
  3042  002426                     u28420:
  3043                           
  3044                           ; BSR set to: 1
  3045                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3046  002426  0E00               	movlw	0
  3047  002428  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3048  00242A  0E0A               	movlw	10
  3049  00242C  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3050                           
  3051                           ; BSR set to: 1
  3052                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3053  00242E  0E10               	movlw	16
  3054  002430  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3055  002432  0E00               	movlw	0
  3056  002434  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3057  002436  0E0A               	movlw	10
  3058  002438  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3059  00243A  0E0A               	movlw	10
  3060  00243C  EC54  F048         	call	_SetSegmentValueIntermitentMain
  3061                           
  3062                           ;sm_Main_MC50.c: 298:                     }
  3063  002440  0012               	return	
  3064  002442                     l23032:
  3065  002442  0101               	movlb	1	; () banked
  3066  002444  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3067  002446  A4D8               	btfss	status,2,c
  3068  002448  D006               	goto	l23036
  3069                           
  3070                           ; BSR set to: 1
  3071                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3072  00244A  0E00               	movlw	0
  3073  00244C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3074  00244E  0E0F               	movlw	15
  3075  002450  ECB9  F047         	call	_SetSegmentValueMain
  3076                           
  3077                           ;sm_Main_MC50.c: 304:                     }
  3078  002454  0012               	return	
  3079  002456                     l23036:
  3080                           
  3081                           ; BSR set to: 1
  3082                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3083  002456  0E18               	movlw	24
  3084  002458  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3085  00245A  0E18               	movlw	24
  3086  00245C  ECB9  F047         	call	_SetSegmentValueMain
  3087  002460  0012               	return	
  3088  002462                     l23038:
  3089                           
  3090                           ; BSR set to: 1
  3091                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3092  002462  0E18               	movlw	24
  3093  002464  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3094  002466  0E18               	movlw	24
  3095  002468  ECB9  F047         	call	_SetSegmentValueMain
  3096  00246C  0012               	return	
  3097  00246E                     l23042:
  3098  00246E  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3099  002472  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3100  002476  50DF               	movf	indf2,w,c
  3101  002478  0100               	movlb	0	; () banked
  3102  00247A  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3103  00247C  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3104                           
  3105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3106                           ; Switch size 1, requested type "simple"
  3107                           ; Number of cases is 1, Range of values is 0 to 0
  3108                           ; switch strategies available:
  3109                           ; Name         Instructions Cycles
  3110                           ; simple_byte            4     3 (average)
  3111                           ;	Chosen strategy is simple_byte
  3112  00247E  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3113  002480  0A00               	xorlw	0	; case 0
  3114  002482  A4D8               	btfss	status,2,c
  3115  002484  0012               	return	
  3116                           
  3117                           ; BSR set to: 0
  3118                           ; Switch size 1, requested type "simple"
  3119                           ; Number of cases is 3, Range of values is 0 to 2
  3120                           ; switch strategies available:
  3121                           ; Name         Instructions Cycles
  3122                           ; simple_byte           10     6 (average)
  3123                           ;	Chosen strategy is simple_byte
  3124  002486  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3125  002488  0A00               	xorlw	0	; case 0
  3126  00248A  B4D8               	btfsc	status,2,c
  3127  00248C  D5F8               	goto	l22766
  3128  00248E  0A01               	xorlw	1	; case 1
  3129  002490  B4D8               	btfsc	status,2,c
  3130  002492  D69A               	goto	l22864
  3131  002494  0A03               	xorlw	3	; case 2
  3132  002496  A4D8               	btfss	status,2,c
  3133  002498  0012               	return	
  3134  00249A  D69D               	goto	l22866
  3135  00249C                     __end_of_sm_execute_main:
  3136                           	callstack 0
  3137                           
  3138 ;; *************** function _sm_execute_menuConfiguration *****************
  3139 ;; Defined at:
  3140 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  psm             2   17[BANK0 ] PTR struct .
  3143 ;;		 -> menuConfiguration_stateMachine(11), 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;		None
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      void 
  3148 ;; Registers used:
  3149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3150 ;; Tracked objects:
  3151 ;;		On entry : 3F/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3155 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3157 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3158 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3159 ;;Total ram usage:        4 bytes
  3160 ;; Hardware stack levels used: 1
  3161 ;; Hardware stack levels required when called: 15
  3162 ;; This function calls:
  3163 ;;		_ClearFlag_rfCMD
  3164 ;;		_ResetDefaultMemory
  3165 ;;		_SaveNVM_VarSystem
  3166 ;;		_SetSegmentValueIntermitentMain
  3167 ;;		_SetSegmentValueMain
  3168 ;;		___lbdiv
  3169 ;;		___lldiv
  3170 ;;		___lmul
  3171 ;;		___lwdiv
  3172 ;;		_controlLearnDigit
  3173 ;;		_controlSaveRemote
  3174 ;;		_controlSelectRemote
  3175 ;;		_load_New_Menu
  3176 ;;		_setValueToEdit
  3177 ;;		_sm_send_event
  3178 ;; This function is called by:
  3179 ;;		_sm_execute_main
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text2
  3184  000F22                     __ptext2:
  3185                           	callstack 0
  3186  000F22                     _sm_execute_menuConfiguration:
  3187                           	callstack 14
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3191                           
  3192                           ;incstack = 0
  3193  000F22  D0A2               	goto	l22190
  3194  000F24                     l22132:
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3198  000F24  EE20 F004          	lfsr	2,4
  3199  000F28  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3200  000F2A  26D9               	addwf	fsr2l,f,c
  3201  000F2C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3202  000F2E  22DA               	addwfc	fsr2h,f,c
  3203  000F30  04DE               	decf	postinc2,w,c
  3204  000F32  10DE               	iorwf	postinc2,w,c
  3205  000F34  A4D8               	btfss	status,2,c
  3206  000F36  D006               	goto	l22136
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3210  000F38  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3211  000F3C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3212  000F40  0E01               	movlw	1
  3213  000F42  D04C               	goto	L9
  3214  000F44                     l22136:
  3215                           
  3216                           ; BSR set to: 0
  3217  000F44  EE20 F004          	lfsr	2,4
  3218  000F48  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3219  000F4A  26D9               	addwf	fsr2l,f,c
  3220  000F4C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3221  000F4E  22DA               	addwfc	fsr2h,f,c
  3222  000F50  0E05               	movlw	5
  3223  000F52  18DE               	xorwf	postinc2,w,c
  3224  000F54  10DE               	iorwf	postinc2,w,c
  3225  000F56  A4D8               	btfss	status,2,c
  3226  000F58  D006               	goto	l22140
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3230  000F5A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3231  000F5E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3232  000F62  0E03               	movlw	3
  3233  000F64  D03B               	goto	L9
  3234  000F66                     l22140:
  3235                           
  3236                           ; BSR set to: 0
  3237  000F66  EE20 F004          	lfsr	2,4
  3238  000F6A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3239  000F6C  26D9               	addwf	fsr2l,f,c
  3240  000F6E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3241  000F70  22DA               	addwfc	fsr2h,f,c
  3242  000F72  0E08               	movlw	8
  3243  000F74  18DE               	xorwf	postinc2,w,c
  3244  000F76  10DE               	iorwf	postinc2,w,c
  3245  000F78  A4D8               	btfss	status,2,c
  3246  000F7A  D006               	goto	l22144
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3250  000F7C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3251  000F80  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3252  000F84  0E04               	movlw	4
  3253  000F86  D02A               	goto	L9
  3254  000F88                     l22144:
  3255                           
  3256                           ; BSR set to: 0
  3257  000F88  EE20 F004          	lfsr	2,4
  3258  000F8C  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3259  000F8E  26D9               	addwf	fsr2l,f,c
  3260  000F90  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3261  000F92  22DA               	addwfc	fsr2h,f,c
  3262  000F94  0E14               	movlw	20
  3263  000F96  18DE               	xorwf	postinc2,w,c
  3264  000F98  10DE               	iorwf	postinc2,w,c
  3265  000F9A  A4D8               	btfss	status,2,c
  3266  000F9C  D087               	goto	l22192
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3270  000F9E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3271  000FA2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3272  000FA6  0E06               	movlw	6
  3273  000FA8  D019               	goto	L9
  3274  000FAA                     l22148:
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3278  000FAA  EE20 F004          	lfsr	2,4
  3279  000FAE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3280  000FB0  26D9               	addwf	fsr2l,f,c
  3281  000FB2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3282  000FB4  22DA               	addwfc	fsr2h,f,c
  3283  000FB6  0E02               	movlw	2
  3284  000FB8  18DE               	xorwf	postinc2,w,c
  3285  000FBA  10DE               	iorwf	postinc2,w,c
  3286  000FBC  A4D8               	btfss	status,2,c
  3287  000FBE  D006               	goto	l22152
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3291  000FC0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3292  000FC4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3293  000FC8  0E02               	movlw	2
  3294  000FCA  D008               	goto	L9
  3295  000FCC                     l22152:
  3296                           
  3297                           ; BSR set to: 0
  3298  000FCC  EE20 F004          	lfsr	2,4
  3299  000FD0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3300  000FD2  26D9               	addwf	fsr2l,f,c
  3301  000FD4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3302  000FD6  22DA               	addwfc	fsr2h,f,c
  3303  000FD8  0E03               	movlw	3
  3304  000FDA  D03B               	goto	L123
  3305  000FDC                     L9:
  3306  000FDC  6EDE               	movwf	postinc2,c
  3307  000FDE  0E00               	movlw	0
  3308  000FE0  6EDD               	movwf	postdec2,c
  3309  000FE2  D064               	goto	l22192
  3310  000FE4                     l22160:
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3314  000FE4  EE20 F004          	lfsr	2,4
  3315  000FE8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3316  000FEA  26D9               	addwf	fsr2l,f,c
  3317  000FEC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3318  000FEE  22DA               	addwfc	fsr2h,f,c
  3319  000FF0  0E04               	movlw	4
  3320  000FF2  18DE               	xorwf	postinc2,w,c
  3321  000FF4  10DE               	iorwf	postinc2,w,c
  3322  000FF6  A4D8               	btfss	status,2,c
  3323  000FF8  D7E9               	goto	l22152
  3324  000FFA  D02F               	goto	u26670
  3325  000FFC                     l22168:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3329  000FFC  EE20 F004          	lfsr	2,4
  3330  001000  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3331  001002  26D9               	addwf	fsr2l,f,c
  3332  001004  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3333  001006  22DA               	addwfc	fsr2h,f,c
  3334  001008  0E08               	movlw	8
  3335  00100A  18DE               	xorwf	postinc2,w,c
  3336  00100C  10DE               	iorwf	postinc2,w,c
  3337  00100E  A4D8               	btfss	status,2,c
  3338  001010  D7DD               	goto	l22152
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3342  001012  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3343  001016  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3344  00101A  0E05               	movlw	5
  3345  00101C  D7DF               	goto	L9
  3346  00101E                     l22176:
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3350  00101E  EE20 F004          	lfsr	2,4
  3351  001022  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3352  001024  26D9               	addwf	fsr2l,f,c
  3353  001026  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3354  001028  22DA               	addwfc	fsr2h,f,c
  3355  00102A  0E09               	movlw	9
  3356  00102C  18DE               	xorwf	postinc2,w,c
  3357  00102E  10DE               	iorwf	postinc2,w,c
  3358  001030  A4D8               	btfss	status,2,c
  3359  001032  D008               	goto	l22184
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3363  001034  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3364  001038  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3365  00103C  0E04               	movlw	4
  3366  00103E  6EDE               	movwf	postinc2,c
  3367  001040  0E00               	movlw	0
  3368  001042  6EDD               	movwf	postdec2,c
  3369  001044                     l22184:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3373  001044  EE20 F004          	lfsr	2,4
  3374  001048  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3375  00104A  26D9               	addwf	fsr2l,f,c
  3376  00104C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3377  00104E  22DA               	addwfc	fsr2h,f,c
  3378  001050  0E04               	movlw	4
  3379  001052                     L123:
  3380  001052  18DE               	xorwf	postinc2,w,c
  3381  001054  10DE               	iorwf	postinc2,w,c
  3382  001056  A4D8               	btfss	status,2,c
  3383  001058  D029               	goto	l22192
  3384  00105A                     u26670:
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3388  00105A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3389  00105E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3390  001062  0E00               	movlw	0
  3391  001064  D7BB               	goto	L9
  3392  001066                     l3228:
  3393                           
  3394                           ; BSR set to: 0
  3395  001066  D7FF               	goto	l3228
  3396  001068                     l22190:
  3397                           
  3398                           ; BSR set to: 0
  3399  001068  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3400  00106C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3401  001070  50DF               	movf	indf2,w,c
  3402  001072  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3403  001074  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3404                           
  3405                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3406                           ; Switch size 1, requested type "simple"
  3407                           ; Number of cases is 1, Range of values is 0 to 0
  3408                           ; switch strategies available:
  3409                           ; Name         Instructions Cycles
  3410                           ; simple_byte            4     3 (average)
  3411                           ;	Chosen strategy is simple_byte
  3412  001076  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3413  001078  0A00               	xorlw	0	; case 0
  3414  00107A  A4D8               	btfss	status,2,c
  3415  00107C  D7F4               	goto	l3228
  3416                           
  3417                           ; BSR set to: 0
  3418                           ; Switch size 1, requested type "simple"
  3419                           ; Number of cases is 7, Range of values is 0 to 6
  3420                           ; switch strategies available:
  3421                           ; Name         Instructions Cycles
  3422                           ; simple_byte           22    12 (average)
  3423                           ;	Chosen strategy is simple_byte
  3424  00107E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3425  001080  0A00               	xorlw	0	; case 0
  3426  001082  B4D8               	btfsc	status,2,c
  3427  001084  D74F               	goto	l22132
  3428  001086  0A01               	xorlw	1	; case 1
  3429  001088  B4D8               	btfsc	status,2,c
  3430  00108A  D78F               	goto	l22148
  3431  00108C  0A03               	xorlw	3	; case 2
  3432  00108E  B4D8               	btfsc	status,2,c
  3433  001090  D7D9               	goto	l22184
  3434  001092  0A01               	xorlw	1	; case 3
  3435  001094  B4D8               	btfsc	status,2,c
  3436  001096  D7A6               	goto	l22160
  3437  001098  0A07               	xorlw	7	; case 4
  3438  00109A  B4D8               	btfsc	status,2,c
  3439  00109C  D7AF               	goto	l22168
  3440  00109E  0A01               	xorlw	1	; case 5
  3441  0010A0  B4D8               	btfsc	status,2,c
  3442  0010A2  D7BD               	goto	l22176
  3443  0010A4  0A03               	xorlw	3	; case 6
  3444  0010A6  B4D8               	btfsc	status,2,c
  3445  0010A8  D7CD               	goto	l22184
  3446  0010AA  D7DD               	goto	l3228
  3447  0010AC                     l22192:
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3451  0010AC  0EBB               	movlw	low _menuConfiguration_stateMachine
  3452  0010AE  6E12               	movwf	sm_send_event@psm^0,c
  3453  0010B0  0E02               	movlw	high _menuConfiguration_stateMachine
  3454  0010B2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3455  0010B4  0E00               	movlw	0
  3456  0010B6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3457  0010B8  0E00               	movlw	0
  3458  0010BA  6E14               	movwf	sm_send_event@event^0,c
  3459  0010BC  EC01  F041         	call	_sm_send_event	;wreg free
  3460                           
  3461                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3462  0010C0  D3BF               	goto	l22504
  3463  0010C2                     l22194:
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3467  0010C2  0E06               	movlw	6
  3468  0010C4  0101               	movlb	1	; () banked
  3469  0010C6  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3470  0010C8  A4D8               	btfss	status,2,c
  3471  0010CA  D02F               	goto	l22204
  3472                           
  3473                           ; BSR set to: 1
  3474                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3475  0010CC  0E00               	movlw	0
  3476  0010CE  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3477  0010D0  0EC8               	movlw	200
  3478  0010D2  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3479                           
  3480                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3481  0010D4  0E01               	movlw	1
  3482  0010D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3483                           
  3484                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3485  0010D8  0E00               	movlw	0
  3486  0010DA  6F68               	movwf	(_menu_st+23)& (0+255),b
  3487                           
  3488                           ; BSR set to: 1
  3489                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3490  0010DC  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3491  0010E0  5166               	movf	(_menu_st+21)& (0+255),w,b
  3492  0010E2  ECD2  F014         	call	_setValueToEdit
  3493  0010E6  0900               	iorlw	0
  3494  0010E8  B4D8               	btfsc	status,2,c
  3495  0010EA  0012               	return	
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3499  0010EC  0EBB               	movlw	low _menuConfiguration_stateMachine
  3500  0010EE  6E12               	movwf	sm_send_event@psm^0,c
  3501  0010F0  0E02               	movlw	high _menuConfiguration_stateMachine
  3502  0010F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3503  0010F4  0E00               	movlw	0
  3504  0010F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3505  0010F8  0E08               	movlw	8
  3506  0010FA  6E14               	movwf	sm_send_event@event^0,c
  3507  0010FC  EC01  F041         	call	_sm_send_event	;wreg free
  3508                           
  3509                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3510  001100  0E0A               	movlw	10
  3511  001102  6E10               	movwf	___lbdiv@divisor^0,c
  3512  001104  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3513  001106  ECC5  F044         	call	___lbdiv
  3514  00110A  0DF6               	mullw	246
  3515  00110C  50F3               	movf	243,w,c
  3516  00110E  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3517  001110  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3518  001112  0E00               	movlw	0
  3519  001114  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3520  001116  0E14               	movlw	20
  3521  001118  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3522  00111A  0E0A               	movlw	10
  3523  00111C  6E10               	movwf	___lbdiv@divisor^0,c
  3524  00111E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3525  001120  ECC5  F044         	call	___lbdiv
  3526  001124  EC54  F048         	call	_SetSegmentValueIntermitentMain
  3527  001128  0012               	return	
  3528  00112A                     l22204:
  3529                           
  3530                           ; BSR set to: 1
  3531  00112A  0E05               	movlw	5
  3532  00112C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3533  00112E  A4D8               	btfss	status,2,c
  3534  001130  D02F               	goto	l22214
  3535                           
  3536                           ; BSR set to: 1
  3537                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3538  001132  0E00               	movlw	0
  3539  001134  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3540  001136  0EC8               	movlw	200
  3541  001138  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3542                           
  3543                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3544  00113A  0E01               	movlw	1
  3545  00113C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3546                           
  3547                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3548  00113E  0E01               	movlw	1
  3549  001140  6F68               	movwf	(_menu_st+23)& (0+255),b
  3550                           
  3551                           ; BSR set to: 1
  3552                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3553  001142  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3554  001146  5166               	movf	(_menu_st+21)& (0+255),w,b
  3555  001148  ECD2  F014         	call	_setValueToEdit
  3556  00114C  0900               	iorlw	0
  3557  00114E  B4D8               	btfsc	status,2,c
  3558  001150  0012               	return	
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3562  001152  0EBB               	movlw	low _menuConfiguration_stateMachine
  3563  001154  6E12               	movwf	sm_send_event@psm^0,c
  3564  001156  0E02               	movlw	high _menuConfiguration_stateMachine
  3565  001158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3566  00115A  0E00               	movlw	0
  3567  00115C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3568  00115E  0E08               	movlw	8
  3569  001160  6E14               	movwf	sm_send_event@event^0,c
  3570  001162  EC01  F041         	call	_sm_send_event	;wreg free
  3571                           
  3572                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3573  001166  0E0A               	movlw	10
  3574  001168  6E10               	movwf	___lbdiv@divisor^0,c
  3575  00116A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3576  00116C  ECC5  F044         	call	___lbdiv
  3577  001170  0DF6               	mullw	246
  3578  001172  50F3               	movf	243,w,c
  3579  001174  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3580  001176  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3581  001178  0E00               	movlw	0
  3582  00117A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3583  00117C  0E14               	movlw	20
  3584  00117E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3585  001180  0E0A               	movlw	10
  3586  001182  6E10               	movwf	___lbdiv@divisor^0,c
  3587  001184  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3588  001186  ECC5  F044         	call	___lbdiv
  3589  00118A  EC54  F048         	call	_SetSegmentValueIntermitentMain
  3590                           
  3591                           ; BSR set to: 1
  3592                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3593                           
  3594                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3595  00118E  0012               	return	
  3596  001190                     l22214:
  3597                           
  3598                           ; BSR set to: 1
  3599  001190  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3600  001192  A4D8               	btfss	status,2,c
  3601  001194  D023               	goto	l22226
  3602                           
  3603                           ; BSR set to: 1
  3604                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3605  001196  0E00               	movlw	0
  3606  001198  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3607  00119A  0E64               	movlw	100
  3608  00119C  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3609                           
  3610                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3611  00119E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3612  0011A0  A4D8               	btfss	status,2,c
  3613  0011A2  D003               	goto	l22220
  3614                           
  3615                           ; BSR set to: 1
  3616                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3617  0011A4  0567               	decf	(_menu_st+22)& (0+255),w,b
  3618  0011A6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3619                           
  3620                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3621  0011A8  D001               	goto	l22222
  3622  0011AA                     l22220:
  3623                           
  3624                           ; BSR set to: 1
  3625                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3626  0011AA  0768               	decf	(_menu_st+23)& (0+255),f,b
  3627  0011AC                     l22222:
  3628                           
  3629                           ; BSR set to: 1
  3630                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3631  0011AC  5168               	movf	(_menu_st+23)& (0+255),w,b
  3632  0011AE  0D02               	mullw	2
  3633  0011B0  0E52               	movlw	low (_menu_st+1)
  3634  0011B2  24F3               	addwf	243,w,c
  3635  0011B4  6ED9               	movwf	fsr2l,c
  3636  0011B6  0E01               	movlw	high (_menu_st+1)
  3637  0011B8  20F4               	addwfc	prodh,w,c
  3638  0011BA  6EDA               	movwf	fsr2h,c
  3639  0011BC  50DF               	movf	indf2,w,c
  3640  0011BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3641  0011C0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3642  0011C2  0D02               	mullw	2
  3643  0011C4  0E51               	movlw	low _menu_st
  3644  0011C6  24F3               	addwf	243,w,c
  3645  0011C8  6ED9               	movwf	fsr2l,c
  3646  0011CA  0E01               	movlw	high _menu_st
  3647  0011CC  20F4               	addwfc	prodh,w,c
  3648  0011CE  6EDA               	movwf	fsr2h,c
  3649  0011D0  50DF               	movf	indf2,w,c
  3650  0011D2  ECB9  F047         	call	_SetSegmentValueMain
  3651  0011D6                     l22224:
  3652                           
  3653                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3654  0011D6  0E01               	movlw	1
  3655  0011D8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3656                           
  3657                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3658  0011DA  0012               	return	
  3659  0011DC                     l22226:
  3660                           
  3661                           ; BSR set to: 1
  3662  0011DC  0E17               	movlw	23
  3663  0011DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3664  0011E0  A4D8               	btfss	status,2,c
  3665  0011E2  D021               	goto	l22240
  3666                           
  3667                           ; BSR set to: 1
  3668                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3669  0011E4  0E00               	movlw	0
  3670  0011E6  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3671  0011E8  0E64               	movlw	100
  3672  0011EA  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3673                           
  3674                           ; BSR set to: 1
  3675                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3676  0011EC  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3677                           
  3678                           ; BSR set to: 1
  3679                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3680  0011EE  5167               	movf	(_menu_st+22)& (0+255),w,b
  3681  0011F0  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3682  0011F2  A0D8               	btfss	status,0,c
  3683  0011F4  D002               	goto	l22236
  3684                           
  3685                           ; BSR set to: 1
  3686                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3687  0011F6  0E00               	movlw	0
  3688  0011F8  6F68               	movwf	(_menu_st+23)& (0+255),b
  3689  0011FA                     l22236:
  3690                           
  3691                           ; BSR set to: 1
  3692                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3693  0011FA  5168               	movf	(_menu_st+23)& (0+255),w,b
  3694  0011FC  0D02               	mullw	2
  3695  0011FE  0E52               	movlw	low (_menu_st+1)
  3696  001200  24F3               	addwf	243,w,c
  3697  001202  6ED9               	movwf	fsr2l,c
  3698  001204  0E01               	movlw	high (_menu_st+1)
  3699  001206  20F4               	addwfc	prodh,w,c
  3700  001208  6EDA               	movwf	fsr2h,c
  3701  00120A  50DF               	movf	indf2,w,c
  3702  00120C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3703  00120E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3704  001210  0D02               	mullw	2
  3705  001212  0E51               	movlw	low _menu_st
  3706  001214  24F3               	addwf	243,w,c
  3707  001216  6ED9               	movwf	fsr2l,c
  3708  001218  0E01               	movlw	high _menu_st
  3709  00121A  20F4               	addwfc	prodh,w,c
  3710  00121C  6EDA               	movwf	fsr2h,c
  3711  00121E  50DF               	movf	indf2,w,c
  3712  001220  ECB9  F047         	call	_SetSegmentValueMain
  3713  001224  D7D8               	goto	l22224
  3714  001226                     l22240:
  3715                           
  3716                           ; BSR set to: 1
  3717  001226  0E0C               	movlw	12
  3718  001228  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3719  00122A  D09A               	goto	l22296
  3720                           
  3721                           ; BSR set to: 1
  3722                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0 && button_struct.timer>(( 500/50)) )
  3723  00122C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3724  00122E  A4D8               	btfss	status,2,c
  3725  001230  D053               	goto	l22262
  3726                           
  3727                           ; BSR set to: 1
  3728  001232  0E0A               	movlw	10
  3729  001234  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3730  001236  D050               	goto	l22262
  3731                           
  3732                           ; BSR set to: 1
  3733                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3734  001238  0E00               	movlw	0
  3735  00123A  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3736  00123C  0E64               	movlw	100
  3737  00123E  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3738                           
  3739                           ; BSR set to: 1
  3740                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3741  001240  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3742  001244  5166               	movf	(_menu_st+21)& (0+255),w,b
  3743  001246  ECD2  F014         	call	_setValueToEdit
  3744  00124A  0900               	iorlw	0
  3745  00124C  B4D8               	btfsc	status,2,c
  3746  00124E  D7C3               	goto	l22224
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3750  001250  0EBB               	movlw	low _menuConfiguration_stateMachine
  3751  001252  6E12               	movwf	sm_send_event@psm^0,c
  3752  001254  0E02               	movlw	high _menuConfiguration_stateMachine
  3753  001256  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3754  001258  0E00               	movlw	0
  3755  00125A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3756  00125C  0E01               	movlw	1
  3757  00125E  6E14               	movwf	sm_send_event@event^0,c
  3758  001260  EC01  F041         	call	_sm_send_event	;wreg free
  3759                           
  3760                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3761  001264  0E98               	movlw	_var_sys_NVM& (0+255)
  3762  001266  0F1C               	addlw	28
  3763  001268  0100               	movlb	0	; () banked
  3764  00126A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3765  00126C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3766  00126E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3767  001270  E101               	bnz	u26805
  3768  001272  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3769  001274                     u26805:
  3770  001274  B4D8               	btfsc	status,2,c
  3771  001276  D009               	goto	u26810
  3772                           
  3773                           ; BSR set to: 0
  3774  001278  0E98               	movlw	_var_sys_NVM& (0+255)
  3775  00127A  0F1B               	addlw	27
  3776  00127C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3777  00127E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3778  001280  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3779  001282  E101               	bnz	u26815
  3780  001284  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3781  001286                     u26815:
  3782  001286  A4D8               	btfss	status,2,c
  3783  001288  D016               	goto	l22258
  3784  00128A                     u26810:
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3788  00128A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3789  00128C  0D02               	mullw	2
  3790  00128E  0E52               	movlw	low (_menu_st+1)
  3791  001290  24F3               	addwf	243,w,c
  3792  001292  6ED9               	movwf	fsr2l,c
  3793  001294  0E01               	movlw	high (_menu_st+1)
  3794  001296  20F4               	addwfc	prodh,w,c
  3795  001298  6EDA               	movwf	fsr2h,c
  3796  00129A  50DF               	movf	indf2,w,c
  3797  00129C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3798  00129E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3799  0012A0  0D02               	mullw	2
  3800  0012A2  0E51               	movlw	low _menu_st
  3801  0012A4  24F3               	addwf	243,w,c
  3802  0012A6  6ED9               	movwf	fsr2l,c
  3803  0012A8  0E01               	movlw	high _menu_st
  3804  0012AA  20F4               	addwfc	prodh,w,c
  3805  0012AC  6EDA               	movwf	fsr2h,c
  3806  0012AE  50DF               	movf	indf2,w,c
  3807  0012B0  ECB9  F047         	call	_SetSegmentValueMain
  3808                           
  3809                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3810  0012B4  D790               	goto	l22224
  3811  0012B6                     l22258:
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3815  0012B6  0E0A               	movlw	10
  3816  0012B8  6E10               	movwf	___lbdiv@divisor^0,c
  3817  0012BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3818  0012BC  ECC5  F044         	call	___lbdiv
  3819  0012C0  0DF6               	mullw	246
  3820  0012C2  50F3               	movf	243,w,c
  3821  0012C4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3822  0012C6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3823  0012C8  0E0A               	movlw	10
  3824  0012CA  6E10               	movwf	___lbdiv@divisor^0,c
  3825  0012CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3826  0012CE  ECC5  F044         	call	___lbdiv
  3827  0012D2  ECB9  F047         	call	_SetSegmentValueMain
  3828  0012D6  D77F               	goto	l22224
  3829  0012D8                     l22262:
  3830                           
  3831                           ; BSR set to: 1
  3832  0012D8  BFAB               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3833  0012DA  D008               	goto	u26830
  3834  0012DC  51AB               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3835  0012DE  E103               	bnz	u26820
  3836  0012E0  05AA               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3837  0012E2  A0D8               	btfss	status,0,c
  3838  0012E4  D003               	goto	u26830
  3839  0012E6                     u26820:
  3840                           
  3841                           ; BSR set to: 1
  3842  0012E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3843  0012E8  A4D8               	btfss	status,2,c
  3844  0012EA  D01E               	goto	l22280
  3845  0012EC                     u26830:
  3846                           
  3847                           ; BSR set to: 1
  3848  0012EC  0E02               	movlw	2
  3849  0012EE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3850  0012F0  D01B               	goto	l22280
  3851                           
  3852                           ; BSR set to: 1
  3853                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3854  0012F2  0E00               	movlw	0
  3855  0012F4  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3856  0012F6  0E00               	movlw	0
  3857  0012F8  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3858                           
  3859                           ; BSR set to: 1
  3860                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3861  0012FA  0EEF               	movlw	low _main_stateMachine
  3862  0012FC  6E12               	movwf	sm_send_event@psm^0,c
  3863  0012FE  0E01               	movlw	high _main_stateMachine
  3864  001300  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3865  001302  0E00               	movlw	0
  3866  001304  6E15               	movwf	(sm_send_event@event+1)^0,c
  3867  001306  0E07               	movlw	7
  3868  001308  6E14               	movwf	sm_send_event@event^0,c
  3869  00130A  EC01  F041         	call	_sm_send_event	;wreg free
  3870                           
  3871                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3872  00130E  0E18               	movlw	24
  3873  001310  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3874  001312  0E18               	movlw	24
  3875  001314  ECB9  F047         	call	_SetSegmentValueMain
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3879  001318  0E00               	movlw	0
  3880  00131A  0101               	movlb	1	; () banked
  3881  00131C  6F69               	movwf	(_menu_st+24)& (0+255),b
  3882                           
  3883                           ; BSR set to: 1
  3884                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  3885  00131E  0E01               	movlw	1
  3886  001320  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3887                           
  3888                           ; BSR set to: 1
  3889                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  3890  001322  EC09  F049         	call	_ClearFlag_rfCMD	;wreg free
  3891                           
  3892                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  3893  001326  0012               	return	
  3894  001328                     l22280:
  3895                           
  3896                           ; BSR set to: 1
  3897  001328  BFAB               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3898  00132A  D008               	goto	u26860
  3899  00132C  51AB               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3900  00132E  E103               	bnz	u26850
  3901  001330  05AA               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3902  001332  A0D8               	btfss	status,0,c
  3903  001334  D003               	goto	u26860
  3904  001336                     u26850:
  3905                           
  3906                           ; BSR set to: 1
  3907  001336  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3908  001338  A4D8               	btfss	status,2,c
  3909  00133A  D004               	goto	l22288
  3910  00133C                     u26860:
  3911                           
  3912                           ; BSR set to: 1
  3913                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3914  00133C  5165               	movf	(_menu_st+20)& (0+255),w,b
  3915  00133E  EC5A  F01E         	call	_load_New_Menu
  3916  001342  D749               	goto	l22224
  3917  001344                     l22288:
  3918                           
  3919                           ; BSR set to: 1
  3920  001344  BFAB               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3921  001346  D005               	goto	u26870
  3922  001348  51AB               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3923  00134A  E102               	bnz	u26871
  3924  00134C  05AA               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3925  00134E  B0D8               	btfsc	status,0,c
  3926  001350                     u26871:
  3927  001350  0012               	return	
  3928  001352                     u26870:
  3929                           
  3930                           ; BSR set to: 1
  3931  001352  0E01               	movlw	1
  3932  001354  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  3933  001356  0012               	return	
  3934                           
  3935                           ; BSR set to: 1
  3936                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3937  001358  5165               	movf	(_menu_st+20)& (0+255),w,b
  3938  00135A  EC5A  F01E         	call	_load_New_Menu
  3939  00135E  D73B               	goto	l22224
  3940  001360                     l22296:
  3941                           
  3942                           ; BSR set to: 1
  3943  001360  0E27               	movlw	39
  3944  001362  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3945  001364  A4D8               	btfss	status,2,c
  3946  001366  D032               	goto	l22312
  3947                           
  3948                           ; BSR set to: 1
  3949  001368  0E0A               	movlw	10
  3950  00136A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3951  00136C  D02F               	goto	l22312
  3952                           
  3953                           ; BSR set to: 1
  3954  00136E  0E0D               	movlw	13
  3955  001370  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  3956  001372  B4D8               	btfsc	status,2,c
  3957  001374  D02B               	goto	l22312
  3958                           
  3959                           ; BSR set to: 1
  3960                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  3961  001376  0E00               	movlw	0
  3962  001378  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3963  00137A  0E64               	movlw	100
  3964  00137C  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3965                           
  3966                           ; BSR set to: 1
  3967                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3968  00137E  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3969  001382  5166               	movf	(_menu_st+21)& (0+255),w,b
  3970  001384  ECD2  F014         	call	_setValueToEdit
  3971  001388  0900               	iorlw	0
  3972  00138A  B4D8               	btfsc	status,2,c
  3973  00138C  D724               	goto	l22224
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  3977  00138E  0EBB               	movlw	low _menuConfiguration_stateMachine
  3978  001390  6E12               	movwf	sm_send_event@psm^0,c
  3979  001392  0E02               	movlw	high _menuConfiguration_stateMachine
  3980  001394  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3981  001396  0E00               	movlw	0
  3982  001398  6E15               	movwf	(sm_send_event@event+1)^0,c
  3983  00139A  0E08               	movlw	8
  3984  00139C  6E14               	movwf	sm_send_event@event^0,c
  3985  00139E  EC01  F041         	call	_sm_send_event	;wreg free
  3986                           
  3987                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  3988  0013A2  0E0A               	movlw	10
  3989  0013A4  6E10               	movwf	___lbdiv@divisor^0,c
  3990  0013A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3991  0013A8  ECC5  F044         	call	___lbdiv
  3992  0013AC  0DF6               	mullw	246
  3993  0013AE  50F3               	movf	243,w,c
  3994  0013B0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3995  0013B2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3996  0013B4  0E00               	movlw	0
  3997  0013B6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3998  0013B8  0E14               	movlw	20
  3999  0013BA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4000  0013BC  0E0A               	movlw	10
  4001  0013BE  6E10               	movwf	___lbdiv@divisor^0,c
  4002  0013C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4003  0013C2  ECC5  F044         	call	___lbdiv
  4004  0013C6  EC54  F048         	call	_SetSegmentValueIntermitentMain
  4005  0013CA  D705               	goto	l22224
  4006  0013CC                     l22312:
  4007                           
  4008                           ; BSR set to: 1
  4009  0013CC  0E0D               	movlw	13
  4010  0013CE  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4011  0013D0  A4D8               	btfss	status,2,c
  4012  0013D2  D027               	goto	l22330
  4013                           
  4014                           ; BSR set to: 1
  4015  0013D4  51A8               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4016  0013D6  11A9               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4017  0013D8  A4D8               	btfss	status,2,c
  4018  0013DA  D023               	goto	l22330
  4019                           
  4020                           ; BSR set to: 1
  4021                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4022  0013DC  0E00               	movlw	0
  4023  0013DE  0100               	movlb	0	; () banked
  4024  0013E0  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4025                           
  4026                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4027  0013E2  0E00               	movlw	0
  4028  0013E4  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4029                           
  4030                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4031  0013E6  0E00               	movlw	0
  4032  0013E8  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4036  0013EA  0E02               	movlw	2
  4037  0013EC  ECE2  F044         	call	_SaveNVM_VarSystem
  4038                           
  4039                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4040  0013F0  0EEF               	movlw	low _main_stateMachine
  4041  0013F2  6E12               	movwf	sm_send_event@psm^0,c
  4042  0013F4  0E01               	movlw	high _main_stateMachine
  4043  0013F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4044  0013F8  0E00               	movlw	0
  4045  0013FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4046  0013FC  0E07               	movlw	7
  4047  0013FE  6E14               	movwf	sm_send_event@event^0,c
  4048  001400  EC01  F041         	call	_sm_send_event	;wreg free
  4049                           
  4050                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4051  001404  0E18               	movlw	24
  4052  001406  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4053  001408  0E18               	movlw	24
  4054  00140A  ECB9  F047         	call	_SetSegmentValueMain
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4058  00140E  0E01               	movlw	1
  4059  001410  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4060  001412                     l22326:
  4061                           
  4062                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4063  001412  EC09  F049         	call	_ClearFlag_rfCMD	;wreg free
  4064  001416                     l22328:
  4065                           
  4066                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4067  001416  0E00               	movlw	0
  4068  001418  0101               	movlb	1	; () banked
  4069  00141A  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4070  00141C  0E00               	movlw	0
  4071  00141E  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4072                           
  4073                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4074  001420  0012               	return	
  4075  001422                     l22330:
  4076                           
  4077                           ; BSR set to: 1
  4078  001422  BFAB               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4079  001424  D008               	goto	u26960
  4080  001426  51AB               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4081  001428  E103               	bnz	u26950
  4082  00142A  05AA               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4083  00142C  A0D8               	btfss	status,0,c
  4084  00142E  D003               	goto	u26960
  4085  001430                     u26950:
  4086                           
  4087                           ; BSR set to: 1
  4088  001430  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4089  001432  A4D8               	btfss	status,2,c
  4090  001434  0012               	return	
  4091  001436                     u26960:
  4092                           
  4093                           ; BSR set to: 1
  4094                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4095  001436  0EEF               	movlw	low _main_stateMachine
  4096  001438  6E12               	movwf	sm_send_event@psm^0,c
  4097  00143A  0E01               	movlw	high _main_stateMachine
  4098  00143C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4099  00143E  0E00               	movlw	0
  4100  001440  6E15               	movwf	(sm_send_event@event+1)^0,c
  4101  001442  0E07               	movlw	7
  4102  001444  6E14               	movwf	sm_send_event@event^0,c
  4103  001446  EC01  F041         	call	_sm_send_event	;wreg free
  4104                           
  4105                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4106  00144A  0E18               	movlw	24
  4107  00144C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4108  00144E  0E18               	movlw	24
  4109  001450  ECB9  F047         	call	_SetSegmentValueMain
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4113  001454  EC09  F049         	call	_ClearFlag_rfCMD	;wreg free
  4114                           
  4115                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4116  001458  0E01               	movlw	1
  4117  00145A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4118  00145C  D7DC               	goto	l22328
  4119  00145E                     l22344:
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4123  00145E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4124  001460  A4D8               	btfss	status,2,c
  4125  001462  D047               	goto	l22364
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4129  001464  0E00               	movlw	0
  4130  001466  0101               	movlb	1	; () banked
  4131  001468  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4132  00146A  0E64               	movlw	100
  4133  00146C  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4134                           
  4135                           ; BSR set to: 1
  4136                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4137  00146E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4138  001470  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4139  001472  A0D8               	btfss	status,0,c
  4140  001474  D003               	goto	l22352
  4141                           
  4142                           ; BSR set to: 1
  4143                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4144  001476  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4145                           
  4146                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4147  00147A  D001               	goto	l22354
  4148  00147C                     l22352:
  4149                           
  4150                           ; BSR set to: 1
  4151                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4152  00147C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4153  00147E                     l22354:
  4154                           
  4155                           ; BSR set to: 1
  4156                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4157  00147E  0E98               	movlw	_var_sys_NVM& (0+255)
  4158  001480  0F1C               	addlw	28
  4159  001482  0100               	movlb	0	; () banked
  4160  001484  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4161  001486  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4162  001488  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4163  00148A  E101               	bnz	u26995
  4164  00148C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4165  00148E                     u26995:
  4166  00148E  B4D8               	btfsc	status,2,c
  4167  001490  D009               	goto	u27000
  4168                           
  4169                           ; BSR set to: 0
  4170  001492  0E98               	movlw	_var_sys_NVM& (0+255)
  4171  001494  0F1B               	addlw	27
  4172  001496  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4173  001498  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4174  00149A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4175  00149C  E101               	bnz	u27005
  4176  00149E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4177  0014A0                     u27005:
  4178  0014A0  A4D8               	btfss	status,2,c
  4179  0014A2  D016               	goto	l22360
  4180  0014A4                     u27000:
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4184  0014A4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4185  0014A6  0D02               	mullw	2
  4186  0014A8  0E52               	movlw	low (_menu_st+1)
  4187  0014AA  24F3               	addwf	243,w,c
  4188  0014AC  6ED9               	movwf	fsr2l,c
  4189  0014AE  0E01               	movlw	high (_menu_st+1)
  4190  0014B0  20F4               	addwfc	prodh,w,c
  4191  0014B2  6EDA               	movwf	fsr2h,c
  4192  0014B4  50DF               	movf	indf2,w,c
  4193  0014B6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4194  0014B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4195  0014BA  0D02               	mullw	2
  4196  0014BC  0E51               	movlw	low _menu_st
  4197  0014BE  24F3               	addwf	243,w,c
  4198  0014C0  6ED9               	movwf	fsr2l,c
  4199  0014C2  0E01               	movlw	high _menu_st
  4200  0014C4  20F4               	addwfc	prodh,w,c
  4201  0014C6  6EDA               	movwf	fsr2h,c
  4202  0014C8  50DF               	movf	indf2,w,c
  4203  0014CA  ECB9  F047         	call	_SetSegmentValueMain
  4204                           
  4205                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4206  0014CE  D683               	goto	l22224
  4207  0014D0                     l22360:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4211  0014D0  0E0A               	movlw	10
  4212  0014D2  6E10               	movwf	___lbdiv@divisor^0,c
  4213  0014D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4214  0014D6  ECC5  F044         	call	___lbdiv
  4215  0014DA  0DF6               	mullw	246
  4216  0014DC  50F3               	movf	243,w,c
  4217  0014DE  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4218  0014E0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4219  0014E2  0E0A               	movlw	10
  4220  0014E4  6E10               	movwf	___lbdiv@divisor^0,c
  4221  0014E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4222  0014E8  ECC5  F044         	call	___lbdiv
  4223  0014EC  ECB9  F047         	call	_SetSegmentValueMain
  4224  0014F0  D672               	goto	l22224
  4225  0014F2                     l22364:
  4226                           
  4227                           ; BSR set to: 0
  4228  0014F2  0E17               	movlw	23
  4229  0014F4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4230  0014F6  A4D8               	btfss	status,2,c
  4231  0014F8  D045               	goto	l22384
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4235  0014FA  0E00               	movlw	0
  4236  0014FC  0101               	movlb	1	; () banked
  4237  0014FE  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4238  001500  0E64               	movlw	100
  4239  001502  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4240                           
  4241                           ; BSR set to: 1
  4242                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4243  001504  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4244                           
  4245                           ; BSR set to: 1
  4246                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4247  001506  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4248  001508  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4249  00150A  A0D8               	btfss	status,0,c
  4250                           
  4251                           ; BSR set to: 1
  4252                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4253  00150C  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4254                           
  4255                           ; BSR set to: 1
  4256                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4257  001510  0E98               	movlw	_var_sys_NVM& (0+255)
  4258  001512  0F1C               	addlw	28
  4259  001514  0100               	movlb	0	; () banked
  4260  001516  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4261  001518  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4262  00151A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4263  00151C  E101               	bnz	u27035
  4264  00151E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4265  001520                     u27035:
  4266  001520  B4D8               	btfsc	status,2,c
  4267  001522  D009               	goto	u27040
  4268                           
  4269                           ; BSR set to: 0
  4270  001524  0E98               	movlw	_var_sys_NVM& (0+255)
  4271  001526  0F1B               	addlw	27
  4272  001528  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4273  00152A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4274  00152C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4275  00152E  E101               	bnz	u27045
  4276  001530  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4277  001532                     u27045:
  4278  001532  A4D8               	btfss	status,2,c
  4279  001534  D016               	goto	l22380
  4280  001536                     u27040:
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4284  001536  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4285  001538  0D02               	mullw	2
  4286  00153A  0E52               	movlw	low (_menu_st+1)
  4287  00153C  24F3               	addwf	243,w,c
  4288  00153E  6ED9               	movwf	fsr2l,c
  4289  001540  0E01               	movlw	high (_menu_st+1)
  4290  001542  20F4               	addwfc	prodh,w,c
  4291  001544  6EDA               	movwf	fsr2h,c
  4292  001546  50DF               	movf	indf2,w,c
  4293  001548  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4294  00154A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4295  00154C  0D02               	mullw	2
  4296  00154E  0E51               	movlw	low _menu_st
  4297  001550  24F3               	addwf	243,w,c
  4298  001552  6ED9               	movwf	fsr2l,c
  4299  001554  0E01               	movlw	high _menu_st
  4300  001556  20F4               	addwfc	prodh,w,c
  4301  001558  6EDA               	movwf	fsr2h,c
  4302  00155A  50DF               	movf	indf2,w,c
  4303  00155C  ECB9  F047         	call	_SetSegmentValueMain
  4304                           
  4305                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4306  001560  D63A               	goto	l22224
  4307  001562                     l22380:
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4311  001562  0E0A               	movlw	10
  4312  001564  6E10               	movwf	___lbdiv@divisor^0,c
  4313  001566  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4314  001568  ECC5  F044         	call	___lbdiv
  4315  00156C  0DF6               	mullw	246
  4316  00156E  50F3               	movf	243,w,c
  4317  001570  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4318  001572  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4319  001574  0E0A               	movlw	10
  4320  001576  6E10               	movwf	___lbdiv@divisor^0,c
  4321  001578  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4322  00157A  ECC5  F044         	call	___lbdiv
  4323  00157E  ECB9  F047         	call	_SetSegmentValueMain
  4324  001582  D629               	goto	l22224
  4325  001584                     l22384:
  4326                           
  4327                           ; BSR set to: 0
  4328  001584  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4329  001586  A4D8               	btfss	status,2,c
  4330  001588  D023               	goto	l22400
  4331                           
  4332                           ; BSR set to: 0
  4333  00158A  0E09               	movlw	9
  4334  00158C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4335  00158E  D020               	goto	l22400
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4339  001590  0E00               	movlw	0
  4340  001592  0101               	movlb	1	; () banked
  4341  001594  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4342  001596  0E64               	movlw	100
  4343  001598  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4344                           
  4345                           ; BSR set to: 1
  4346                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4347  00159A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4348  00159E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4349  0015A2  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4350                           
  4351                           ; BSR set to: 1
  4352                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4353  0015A6  0EBB               	movlw	low _menuConfiguration_stateMachine
  4354  0015A8  6E12               	movwf	sm_send_event@psm^0,c
  4355  0015AA  0E02               	movlw	high _menuConfiguration_stateMachine
  4356  0015AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4357  0015AE  0E00               	movlw	0
  4358  0015B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  4359  0015B2  0E02               	movlw	2
  4360  0015B4  6E14               	movwf	sm_send_event@event^0,c
  4361  0015B6  EC01  F041         	call	_sm_send_event	;wreg free
  4362                           
  4363                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4364  0015BA  0E01               	movlw	1
  4365  0015BC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4366  0015BE  0E19               	movlw	25
  4367  0015C0  ECB9  F047         	call	_SetSegmentValueMain
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4371  0015C4  0E00               	movlw	0
  4372  0015C6  0101               	movlb	1	; () banked
  4373  0015C8  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4374  0015CA  0E28               	movlw	40
  4375  0015CC  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4376  0015CE  D603               	goto	l22224
  4377  0015D0                     l22400:
  4378                           
  4379                           ; BSR set to: 0
  4380  0015D0  0101               	movlb	1	; () banked
  4381  0015D2  BFAB               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4382  0015D4  D008               	goto	u27080
  4383  0015D6  51AB               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4384  0015D8  E103               	bnz	u27070
  4385  0015DA  05AA               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4386  0015DC  A0D8               	btfss	status,0,c
  4387  0015DE  D003               	goto	u27080
  4388  0015E0                     u27070:
  4389                           
  4390                           ; BSR set to: 1
  4391  0015E0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4392  0015E2  A4D8               	btfss	status,2,c
  4393  0015E4  0012               	return	
  4394  0015E6                     u27080:
  4395                           
  4396                           ; BSR set to: 1
  4397                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4398  0015E6  0E00               	movlw	0
  4399  0015E8  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4400  0015EA  0E64               	movlw	100
  4401  0015EC  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4402                           
  4403                           ; BSR set to: 1
  4404                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4405  0015EE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4406  0015F0  EC5A  F01E         	call	_load_New_Menu
  4407                           
  4408                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4409  0015F4  0EBB               	movlw	low _menuConfiguration_stateMachine
  4410  0015F6  6E12               	movwf	sm_send_event@psm^0,c
  4411  0015F8  0E02               	movlw	high _menuConfiguration_stateMachine
  4412  0015FA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4413  0015FC  0E00               	movlw	0
  4414  0015FE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4415  001600  0E03               	movlw	3
  4416  001602  6E14               	movwf	sm_send_event@event^0,c
  4417  001604  EC01  F041         	call	_sm_send_event	;wreg free
  4418  001608  D5E6               	goto	l22224
  4419  00160A                     l22412:
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4423  00160A  0101               	movlb	1	; () banked
  4424  00160C  BFA9               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4425  00160E  D005               	goto	u27090
  4426  001610  51A9               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4427  001612  E102               	bnz	u27091
  4428  001614  05A8               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4429  001616  B0D8               	btfsc	status,0,c
  4430  001618                     u27091:
  4431  001618  0012               	return	
  4432  00161A                     u27090:
  4433                           
  4434                           ; BSR set to: 1
  4435                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4436  00161A  0E00               	movlw	0
  4437  00161C  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4438  00161E  0E64               	movlw	100
  4439  001620  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4440                           
  4441                           ; BSR set to: 1
  4442                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4443  001622  0566               	decf	(_menu_st+21)& (0+255),w,b
  4444  001624  A4D8               	btfss	status,2,c
  4445  001626  D004               	goto	u27110
  4446                           
  4447                           ; BSR set to: 1
  4448  001628  0E08               	movlw	8
  4449  00162A  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4450  00162C  B4D8               	btfsc	status,2,c
  4451  00162E  D00A               	goto	u27120
  4452  001630                     u27110:
  4453                           
  4454                           ; BSR set to: 1
  4455  001630  0E98               	movlw	_var_sys_NVM& (0+255)
  4456  001632  0F1C               	addlw	28
  4457  001634  0100               	movlb	0	; () banked
  4458  001636  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4459  001638  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4460  00163A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4461  00163C  E101               	bnz	u27125
  4462  00163E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4463  001640                     u27125:
  4464  001640  A4D8               	btfss	status,2,c
  4465  001642  D005               	goto	l22424
  4466  001644                     u27120:
  4467                           
  4468                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4469  001644  0100               	movlb	0	; () banked
  4470  001646  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4471  001648  EC8C  F02D         	call	_ResetDefaultMemory
  4472                           
  4473                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4474  00164C  D023               	goto	l22442
  4475  00164E                     l22424:
  4476                           
  4477                           ; BSR set to: 0
  4478  00164E  0101               	movlb	1	; () banked
  4479  001650  0566               	decf	(_menu_st+21)& (0+255),w,b
  4480  001652  B4D8               	btfsc	status,2,c
  4481  001654  D004               	goto	u27140
  4482                           
  4483                           ; BSR set to: 1
  4484  001656  0E0A               	movlw	10
  4485  001658  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4486  00165A  A4D8               	btfss	status,2,c
  4487  00165C  D004               	goto	l22430
  4488  00165E                     u27140:
  4489                           
  4490                           ; BSR set to: 1
  4491                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4492  00165E  0E01               	movlw	1
  4493  001660  ECE2  F044         	call	_SaveNVM_VarSystem
  4494                           
  4495                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4496  001664  D017               	goto	l22442
  4497  001666                     l22430:
  4498                           
  4499                           ; BSR set to: 1
  4500                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4501  001666  0568               	decf	(_menu_st+23)& (0+255),w,b
  4502  001668  A4D8               	btfss	status,2,c
  4503  00166A  D00E               	goto	l22438
  4504                           
  4505                           ; BSR set to: 1
  4506  00166C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4507  001670  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4508  001674  50DF               	movf	indf2,w,c
  4509  001676  B4D8               	btfsc	status,2,c
  4510  001678  D007               	goto	l22438
  4511                           
  4512                           ; BSR set to: 1
  4513  00167A  0E06               	movlw	6
  4514  00167C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4515  00167E  A4D8               	btfss	status,2,c
  4516  001680  D003               	goto	l22438
  4517                           
  4518                           ; BSR set to: 1
  4519                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4520  001682  0E09               	movlw	9
  4521  001684  0100               	movlb	0	; () banked
  4522  001686  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4523  001688                     l22438:
  4524                           
  4525                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4526  001688  0E01               	movlw	1
  4527  00168A  ECE2  F044         	call	_SaveNVM_VarSystem
  4528                           
  4529                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4530  00168E  0E00               	movlw	0
  4531  001690  ECE2  F044         	call	_SaveNVM_VarSystem
  4532  001694                     l22442:
  4533                           
  4534                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4535  001694  0EBB               	movlw	low _menuConfiguration_stateMachine
  4536  001696  6E12               	movwf	sm_send_event@psm^0,c
  4537  001698  0E02               	movlw	high _menuConfiguration_stateMachine
  4538  00169A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4539  00169C  0E00               	movlw	0
  4540  00169E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4541  0016A0  0E04               	movlw	4
  4542  0016A2  6E14               	movwf	sm_send_event@event^0,c
  4543  0016A4  EC01  F041         	call	_sm_send_event	;wreg free
  4544                           
  4545                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4546  0016A8  0101               	movlb	1	; () banked
  4547  0016AA  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4548                           
  4549                           ; BSR set to: 1
  4550                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4551  0016AC  0E02               	movlw	2
  4552  0016AE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4553  0016B0  D005               	goto	l22452
  4554                           
  4555                           ; BSR set to: 1
  4556                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4557  0016B2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4558                           
  4559                           ; BSR set to: 1
  4560                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4561  0016B4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4562  0016B6  EC5A  F01E         	call	_load_New_Menu
  4563                           
  4564                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4565  0016BA  0012               	return	
  4566  0016BC                     l22452:
  4567                           
  4568                           ; BSR set to: 1
  4569  0016BC  5167               	movf	(_menu_st+22)& (0+255),w,b
  4570  0016BE  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4571  0016C0  A0D8               	btfss	status,0,c
  4572  0016C2  D005               	goto	l22458
  4573                           
  4574                           ; BSR set to: 1
  4575                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4576  0016C4  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4577                           
  4578                           ; BSR set to: 1
  4579                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4580  0016C6  5165               	movf	(_menu_st+20)& (0+255),w,b
  4581  0016C8  EC5A  F01E         	call	_load_New_Menu
  4582                           
  4583                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4584  0016CC  0012               	return	
  4585  0016CE                     l22458:
  4586                           
  4587                           ; BSR set to: 1
  4588                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4589  0016CE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4590  0016D0  EC5A  F01E         	call	_load_New_Menu
  4591  0016D4  0012               	return	
  4592  0016D6                     l22460:
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4596  0016D6  0101               	movlb	1	; () banked
  4597  0016D8  BFAB               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4598  0016DA  D005               	goto	u27200
  4599  0016DC  51AB               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4600  0016DE  E102               	bnz	u27201
  4601  0016E0  05AA               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4602  0016E2  B0D8               	btfsc	status,0,c
  4603  0016E4                     u27201:
  4604  0016E4  0012               	return	
  4605  0016E6                     u27200:
  4606                           
  4607                           ; BSR set to: 1
  4608                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4609  0016E6  0100               	movlb	0	; () banked
  4610  0016E8  51F8               	movf	_auxCounter& (0+255),w,b
  4611  0016EA  11F9               	iorwf	(_auxCounter+1)& (0+255),w,b
  4612  0016EC  A4D8               	btfss	status,2,c
  4613  0016EE  D010               	goto	l22470
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4617  0016F0  0101               	movlb	1	; () banked
  4618  0016F2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4619                           
  4620                           ; BSR set to: 1
  4621                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4622  0016F4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4623  0016F6  EC5A  F01E         	call	_load_New_Menu
  4624                           
  4625                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4626  0016FA  0EBB               	movlw	low _menuConfiguration_stateMachine
  4627  0016FC  6E12               	movwf	sm_send_event@psm^0,c
  4628  0016FE  0E02               	movlw	high _menuConfiguration_stateMachine
  4629  001700  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4630  001702  0E00               	movlw	0
  4631  001704  6E15               	movwf	(sm_send_event@event+1)^0,c
  4632  001706  0E04               	movlw	4
  4633  001708  6E14               	movwf	sm_send_event@event^0,c
  4634  00170A  EC01  F041         	call	_sm_send_event	;wreg free
  4635                           
  4636                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4637  00170E  0012               	return	
  4638  001710                     l22470:
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4642  001710  0E00               	movlw	0
  4643  001712  0101               	movlb	1	; () banked
  4644  001714  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4645  001716  0E3C               	movlw	60
  4646  001718  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4647                           
  4648                           ; BSR set to: 1
  4649                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4650  00171A  C1FA  F010         	movff	_tempCounter,___lldiv@dividend
  4651  00171E  C1FB  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4652  001722  C1FC  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4653  001726  C1FD  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4654  00172A  C0F8  F014         	movff	_auxCounter,___lldiv@divisor
  4655  00172E  C0F9  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4656  001732  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4657  001734  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4658  001736  ECFE  F03C         	call	___lldiv	;wreg free
  4659  00173A  5010               	movf	?___lldiv^0,w,c
  4660  00173C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4661                           
  4662                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4663  00173E  C0F8  F014         	movff	_auxCounter,___lldiv@divisor
  4664  001742  C0F9  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4665  001746  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4666  001748  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4667  00174A  C1FA  F010         	movff	_tempCounter,___lldiv@dividend
  4668  00174E  C1FB  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4669  001752  C1FC  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4670  001756  C1FD  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4671  00175A  ECFE  F03C         	call	___lldiv	;wreg free
  4672  00175E  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4673  001762  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4674  001766  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4675  00176A  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4676  00176E  C0F8  F021         	movff	_auxCounter,___lmul@multiplicand
  4677  001772  C0F9  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4678  001776  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4679  001778  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4680  00177A  EC0F  F042         	call	___lmul	;wreg free
  4681  00177E  501D               	movf	?___lmul^0,w,c
  4682  001780  0101               	movlb	1	; () banked
  4683  001782  5DFA               	subwf	_tempCounter& (0+255),w,b
  4684  001784  6FFA               	movwf	_tempCounter& (0+255),b
  4685  001786  501E               	movf	(?___lmul+1)^0,w,c
  4686  001788  59FB               	subwfb	(_tempCounter+1)& (0+255),w,b
  4687  00178A  6FFB               	movwf	(_tempCounter+1)& (0+255),b
  4688  00178C  501F               	movf	(?___lmul+2)^0,w,c
  4689  00178E  59FC               	subwfb	(_tempCounter+2)& (0+255),w,b
  4690  001790  6FFC               	movwf	(_tempCounter+2)& (0+255),b
  4691  001792  5020               	movf	(?___lmul+3)^0,w,c
  4692  001794  59FD               	subwfb	(_tempCounter+3)& (0+255),w,b
  4693  001796  6FFD               	movwf	(_tempCounter+3)& (0+255),b
  4694                           
  4695                           ; BSR set to: 1
  4696                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4697  001798  C0F8  F010         	movff	_auxCounter,___lwdiv@dividend
  4698  00179C  C0F9  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4699  0017A0  0E00               	movlw	0
  4700  0017A2  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4701  0017A4  0E64               	movlw	100
  4702  0017A6  6E12               	movwf	___lwdiv@divisor^0,c
  4703  0017A8  EC8F  F042         	call	___lwdiv	;wreg free
  4704  0017AC  C010  F0F8         	movff	?___lwdiv,_auxCounter
  4705  0017B0  C011  F0F9         	movff	?___lwdiv+1,_auxCounter+1
  4706                           
  4707                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4708  0017B4  0E0A               	movlw	10
  4709  0017B6  6E10               	movwf	___lbdiv@divisor^0,c
  4710  0017B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4711  0017BA  ECC5  F044         	call	___lbdiv
  4712  0017BE  0DF6               	mullw	246
  4713  0017C0  50F3               	movf	243,w,c
  4714  0017C2  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4715  0017C4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4716  0017C6  0E00               	movlw	0
  4717  0017C8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4718  0017CA  0E0A               	movlw	10
  4719  0017CC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4720  0017CE  0E0A               	movlw	10
  4721  0017D0  6E10               	movwf	___lbdiv@divisor^0,c
  4722  0017D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4723  0017D4  ECC5  F044         	call	___lbdiv
  4724  0017D8  EC54  F048         	call	_SetSegmentValueIntermitentMain
  4725  0017DC  0012               	return	
  4726  0017DE                     l22480:
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4730  0017DE  0101               	movlb	1	; () banked
  4731  0017E0  05FE               	decf	_firstselectflag& (0+255),w,b
  4732  0017E2  A4D8               	btfss	status,2,c
  4733  0017E4  D004               	goto	l22484
  4734                           
  4735                           ; BSR set to: 1
  4736                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4737  0017E6  0E00               	movlw	0
  4738  0017E8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4739                           
  4740                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4741  0017EA  0E00               	movlw	0
  4742  0017EC  6FFE               	movwf	_firstselectflag& (0+255),b
  4743  0017EE                     l22484:
  4744                           
  4745                           ; BSR set to: 1
  4746                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4747  0017EE  EC4C  F019         	call	_controlSelectRemote	;wreg free
  4748                           
  4749                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4750  0017F2  0012               	return	
  4751  0017F4                     l22486:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4755  0017F4  ECA2  F038         	call	_controlSaveRemote	;wreg free
  4756                           
  4757                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4758  0017F8  0012               	return	
  4759  0017FA                     l22488:
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4763  0017FA  EC4A  F045         	call	_controlLearnDigit	;wreg free
  4764                           
  4765                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4766  0017FE  0101               	movlb	1	; () banked
  4767  001800  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4768  001802  A4D8               	btfss	status,2,c
  4769  001804  0012               	return	
  4770                           
  4771                           ; BSR set to: 1
  4772                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4773  001806  0EEF               	movlw	low _main_stateMachine
  4774  001808  6E12               	movwf	sm_send_event@psm^0,c
  4775  00180A  0E01               	movlw	high _main_stateMachine
  4776  00180C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4777  00180E  0E00               	movlw	0
  4778  001810  6E15               	movwf	(sm_send_event@event+1)^0,c
  4779  001812  0E07               	movlw	7
  4780  001814  6E14               	movwf	sm_send_event@event^0,c
  4781  001816  EC01  F041         	call	_sm_send_event	;wreg free
  4782                           
  4783                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4784  00181A  0EBB               	movlw	low _menuConfiguration_stateMachine
  4785  00181C  6E12               	movwf	sm_send_event@psm^0,c
  4786  00181E  0E02               	movlw	high _menuConfiguration_stateMachine
  4787  001820  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4788  001822  0E00               	movlw	0
  4789  001824  6E15               	movwf	(sm_send_event@event+1)^0,c
  4790  001826  0E04               	movlw	4
  4791  001828  6E14               	movwf	sm_send_event@event^0,c
  4792  00182A  EC01  F041         	call	_sm_send_event	;wreg free
  4793                           
  4794                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4795  00182E  0E18               	movlw	24
  4796  001830  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4797  001832  0E18               	movlw	24
  4798  001834  ECB9  F047         	call	_SetSegmentValueMain
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4802  001838  0E02               	movlw	2
  4803  00183A  ECE2  F044         	call	_SaveNVM_VarSystem
  4804  00183E  D5E9               	goto	l22326
  4805  001840                     l22504:
  4806  001840  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4807  001844  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4808  001848  50DF               	movf	indf2,w,c
  4809  00184A  0100               	movlb	0	; () banked
  4810  00184C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4811  00184E  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4812                           
  4813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4814                           ; Switch size 1, requested type "simple"
  4815                           ; Number of cases is 1, Range of values is 0 to 0
  4816                           ; switch strategies available:
  4817                           ; Name         Instructions Cycles
  4818                           ; simple_byte            4     3 (average)
  4819                           ;	Chosen strategy is simple_byte
  4820  001850  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4821  001852  0A00               	xorlw	0	; case 0
  4822  001854  A4D8               	btfss	status,2,c
  4823  001856  0012               	return	
  4824                           
  4825                           ; BSR set to: 0
  4826                           ; Switch size 1, requested type "simple"
  4827                           ; Number of cases is 7, Range of values is 0 to 6
  4828                           ; switch strategies available:
  4829                           ; Name         Instructions Cycles
  4830                           ; simple_byte           22    12 (average)
  4831                           ;	Chosen strategy is simple_byte
  4832  001858  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4833  00185A  0A00               	xorlw	0	; case 0
  4834  00185C  B4D8               	btfsc	status,2,c
  4835  00185E  D431               	goto	l22194
  4836  001860  0A01               	xorlw	1	; case 1
  4837  001862  B4D8               	btfsc	status,2,c
  4838  001864  D5FC               	goto	l22344
  4839  001866  0A03               	xorlw	3	; case 2
  4840  001868  B4D8               	btfsc	status,2,c
  4841  00186A  D6CF               	goto	l22412
  4842  00186C  0A01               	xorlw	1	; case 3
  4843  00186E  B4D8               	btfsc	status,2,c
  4844  001870  D732               	goto	l22460
  4845  001872  0A07               	xorlw	7	; case 4
  4846  001874  B4D8               	btfsc	status,2,c
  4847  001876  D7B3               	goto	l22480
  4848  001878  0A01               	xorlw	1	; case 5
  4849  00187A  B4D8               	btfsc	status,2,c
  4850  00187C  D7BB               	goto	l22486
  4851  00187E  0A03               	xorlw	3	; case 6
  4852  001880  A4D8               	btfss	status,2,c
  4853  001882  0012               	return	
  4854  001884  D7BA               	goto	l22488
  4855  001886                     __end_of_sm_execute_menuConfiguration:
  4856                           	callstack 0
  4857                           
  4858 ;; *************** function _setValueToEdit *****************
  4859 ;; Defined at:
  4860 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  menuType        1    wreg     enum E10813
  4863 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  menuType        1    6[BANK0 ] enum E10813
  4866 ;;  haveValueToE    1    7[BANK0 ] unsigned char 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      unsigned char 
  4869 ;; Registers used:
  4870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 3F/1
  4873 ;;		On exit  : 3F/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4876 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4877 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4878 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4880 ;;Total ram usage:        5 bytes
  4881 ;; Hardware stack levels used: 1
  4882 ;; Hardware stack levels required when called: 14
  4883 ;; This function calls:
  4884 ;;		_InitReceiver
  4885 ;;		_SaveNVM_VarSystem
  4886 ;;		_load_New_Menu
  4887 ;;		_sm_send_event
  4888 ;; This function is called by:
  4889 ;;		_sm_execute_menuConfiguration
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text3
  4894  0029A4                     __ptext3:
  4895                           	callstack 0
  4896  0029A4                     _setValueToEdit:
  4897                           	callstack 14
  4898                           
  4899                           ;incstack = 0
  4900                           ;setValueToEdit@menuType stored from wreg
  4901  0029A4  0100               	movlb	0	; () banked
  4902  0029A6  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  4903                           
  4904                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  4905  0029A8  0E00               	movlw	0
  4906  0029AA  0100               	movlb	0	; () banked
  4907  0029AC  6FDF               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4908                           
  4909                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  4910  0029AE  D236               	goto	l20752
  4911  0029B0                     l3353:
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  4915  0029B0  C168  F169         	movff	_menu_st+23,_menu_st+24
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  4919  0029B4  0E00               	movlw	0
  4920  0029B6  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  4921                           
  4922                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  4923  0029B8  D034               	goto	l20518
  4924  0029BA                     l20472:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  4928  0029BA  0E04               	movlw	4
  4929  0029BC  EC5A  F01E         	call	_load_New_Menu
  4930                           
  4931                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  4932  0029C0  D256               	goto	l20754
  4933  0029C2                     l20474:
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  4937  0029C2  0E05               	movlw	5
  4938  0029C4  EC5A  F01E         	call	_load_New_Menu
  4939                           
  4940                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  4941  0029C8  D252               	goto	l20754
  4942  0029CA                     l20476:
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  4946  0029CA  0E06               	movlw	6
  4947  0029CC  EC5A  F01E         	call	_load_New_Menu
  4948                           
  4949                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  4950  0029D0  D24E               	goto	l20754
  4951  0029D2                     l20478:
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  4955  0029D2  0E63               	movlw	99
  4956  0029D4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  4960  0029D6  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  4964  0029DA  0E9C               	movlw	low (_var_sys_NVM+4)
  4965  0029DC                     L13:
  4966  0029DC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  4967  0029DE  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  4971  0029E0  0E01               	movlw	1
  4972  0029E2  6FDF               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4973                           
  4974                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  4975  0029E4  D244               	goto	l20754
  4976  0029E6                     l20486:
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  4980  0029E6  0E07               	movlw	7
  4981  0029E8  EC5A  F01E         	call	_load_New_Menu
  4982                           
  4983                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  4984  0029EC  D240               	goto	l20754
  4985  0029EE                     l20488:
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  4989  0029EE  0E08               	movlw	8
  4990  0029F0  EC5A  F01E         	call	_load_New_Menu
  4991                           
  4992                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  4993  0029F4  D23C               	goto	l20754
  4994  0029F6                     l20490:
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  4998  0029F6  0E09               	movlw	9
  4999  0029F8  EC5A  F01E         	call	_load_New_Menu
  5000                           
  5001                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5002  0029FC  D238               	goto	l20754
  5003  0029FE                     l20492:
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5007  0029FE  0E02               	movlw	2
  5008  002A00  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5012  002A02  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5016  002A06  0EA4               	movlw	low (_var_sys_NVM+12)
  5017  002A08  D7E9               	goto	L13
  5018  002A0A                     l20500:
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5022  002A0A  0E03               	movlw	3
  5023  002A0C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5027  002A0E  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5031  002A12  0EA5               	movlw	low (_var_sys_NVM+13)
  5032  002A14  D7E3               	goto	L13
  5033  002A16                     l20508:
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5037  002A16  0E01               	movlw	1
  5038  002A18  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5042  002A1A  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5046  002A1E  0EA6               	movlw	low (_var_sys_NVM+14)
  5047  002A20  D7DD               	goto	L13
  5048  002A22                     l20518:
  5049                           
  5050                           ; BSR set to: 0
  5051  002A22  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5052  002A24  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5053  002A26  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5054                           
  5055                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5056                           ; Switch size 1, requested type "simple"
  5057                           ; Number of cases is 1, Range of values is 0 to 0
  5058                           ; switch strategies available:
  5059                           ; Name         Instructions Cycles
  5060                           ; simple_byte            4     3 (average)
  5061                           ;	Chosen strategy is simple_byte
  5062  002A28  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5063  002A2A  0A00               	xorlw	0	; case 0
  5064  002A2C  A4D8               	btfss	status,2,c
  5065  002A2E  D21F               	goto	l20754
  5066                           
  5067                           ; BSR set to: 0
  5068                           ; Switch size 1, requested type "simple"
  5069                           ; Number of cases is 10, Range of values is 0 to 9
  5070                           ; switch strategies available:
  5071                           ; Name         Instructions Cycles
  5072                           ; simple_byte           31    16 (average)
  5073                           ;	Chosen strategy is simple_byte
  5074  002A30  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5075  002A32  0A00               	xorlw	0	; case 0
  5076  002A34  B4D8               	btfsc	status,2,c
  5077  002A36  D7C1               	goto	l20472
  5078  002A38  0A01               	xorlw	1	; case 1
  5079  002A3A  B4D8               	btfsc	status,2,c
  5080  002A3C  D7C2               	goto	l20474
  5081  002A3E  0A03               	xorlw	3	; case 2
  5082  002A40  B4D8               	btfsc	status,2,c
  5083  002A42  D7C3               	goto	l20476
  5084  002A44  0A01               	xorlw	1	; case 3
  5085  002A46  B4D8               	btfsc	status,2,c
  5086  002A48  D7C4               	goto	l20478
  5087  002A4A  0A07               	xorlw	7	; case 4
  5088  002A4C  B4D8               	btfsc	status,2,c
  5089  002A4E  D7CB               	goto	l20486
  5090  002A50  0A01               	xorlw	1	; case 5
  5091  002A52  B4D8               	btfsc	status,2,c
  5092  002A54  D7CC               	goto	l20488
  5093  002A56  0A03               	xorlw	3	; case 6
  5094  002A58  B4D8               	btfsc	status,2,c
  5095  002A5A  D7CD               	goto	l20490
  5096  002A5C  0A01               	xorlw	1	; case 7
  5097  002A5E  B4D8               	btfsc	status,2,c
  5098  002A60  D7CE               	goto	l20492
  5099  002A62  0A0F               	xorlw	15	; case 8
  5100  002A64  B4D8               	btfsc	status,2,c
  5101  002A66  D7D1               	goto	l20500
  5102  002A68  0A01               	xorlw	1	; case 9
  5103  002A6A  B4D8               	btfsc	status,2,c
  5104  002A6C  D7D4               	goto	l20508
  5105  002A6E  D1FF               	goto	l20754
  5106  002A70                     l3367:
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5110  002A70  C168  F169         	movff	_menu_st+23,_menu_st+24
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5114  002A74  0E01               	movlw	1
  5115  002A76  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5116                           
  5117                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5118  002A78  0E00               	movlw	0
  5119  002A7A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5120                           
  5121                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5122  002A7C  D057               	goto	l20574
  5123  002A7E                     l20522:
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5127  002A7E  0E0A               	movlw	10
  5128  002A80  EC5A  F01E         	call	_load_New_Menu
  5129                           
  5130                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5131  002A84  D1F4               	goto	l20754
  5132  002A86                     l20524:
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5136  002A86  0E0B               	movlw	11
  5137  002A88  EC5A  F01E         	call	_load_New_Menu
  5138                           
  5139                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5140  002A8C  D1F0               	goto	l20754
  5141  002A8E                     l20526:
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5145  002A8E  0E63               	movlw	99
  5146  002A90  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5150  002A92  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5154  002A96  0EAC               	movlw	low (_var_sys_NVM+20)
  5155  002A98  D7A1               	goto	L13
  5156  002A9A                     l20534:
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5160  002A9A  0E09               	movlw	9
  5161  002A9C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5162                           
  5163                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5164  002A9E  0E01               	movlw	1
  5165  002AA0  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5169  002AA2  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5173  002AA6  0EAD               	movlw	low (_var_sys_NVM+21)
  5174  002AA8  D799               	goto	L13
  5175  002AAA                     l3375:
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5179  002AAA  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5183  002AAE  0EAF               	movlw	low (_var_sys_NVM+23)
  5184  002AB0  D795               	goto	L13
  5185  002AB2                     l20546:
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5189  002AB2  0E09               	movlw	9
  5190  002AB4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5191                           
  5192                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5193  002AB6  0E01               	movlw	1
  5194  002AB8  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5198  002ABA  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5202  002ABE  0EB0               	movlw	low (_var_sys_NVM+24)
  5203  002AC0  D78D               	goto	L13
  5204  002AC2                     l20554:
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5208  002AC2  0E00               	movlw	0
  5209  002AC4  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5210                           
  5211                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5212  002AC6  0E00               	movlw	0
  5213  002AC8  0101               	movlb	1	; () banked
  5214  002ACA  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5215  002ACC  0E00               	movlw	0
  5216  002ACE  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5217                           
  5218                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5219  002AD0  0E27               	movlw	39
  5220  002AD2  0100               	movlb	0	; () banked
  5221  002AD4  6FF9               	movwf	(_auxCounter+1)& (0+255),b
  5222  002AD6  0E10               	movlw	16
  5223  002AD8  6FF8               	movwf	_auxCounter& (0+255),b
  5224                           
  5225                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5226  002ADA  0E00               	movlw	0
  5227  002ADC  0101               	movlb	1	; () banked
  5228  002ADE  6FC3               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5229  002AE0  0E00               	movlw	0
  5230  002AE2  6FC2               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5231                           
  5232                           ; BSR set to: 1
  5233                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5234  002AE4  C13C  F1FA         	movff	_var_sys+60,_tempCounter	;volatile
  5235  002AE8  C13D  F1FB         	movff	_var_sys+61,_tempCounter+1	;volatile
  5236  002AEC  C13E  F1FC         	movff	_var_sys+62,_tempCounter+2	;volatile
  5237  002AF0  C13F  F1FD         	movff	_var_sys+63,_tempCounter+3	;volatile
  5238                           
  5239                           ; BSR set to: 1
  5240                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5241  002AF4  0EBB               	movlw	low _menuConfiguration_stateMachine
  5242  002AF6  6E12               	movwf	sm_send_event@psm^0,c
  5243  002AF8  0E02               	movlw	high _menuConfiguration_stateMachine
  5244  002AFA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5245  002AFC  0E00               	movlw	0
  5246  002AFE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5247  002B00  0E05               	movlw	5
  5248  002B02  6E14               	movwf	sm_send_event@event^0,c
  5249  002B04  EC01  F041         	call	_sm_send_event	;wreg free
  5250                           
  5251                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5252  002B08  D1B2               	goto	l20754
  5253  002B0A                     l20560:
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5257  002B0A  0E00               	movlw	0
  5258  002B0C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5259                           
  5260                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5261  002B0E  0E01               	movlw	1
  5262  002B10  6FDF               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5266  002B12  0E00               	movlw	0
  5267  002B14  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5268  002B16  0E00               	movlw	0
  5269  002B18  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5270                           
  5271                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5272  002B1A  D1A9               	goto	l20754
  5273  002B1C                     l20564:
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5277  002B1C  0E03               	movlw	3
  5278  002B1E  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5279                           
  5280                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5281  002B20  0E00               	movlw	0
  5282  002B22  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5286  002B24  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5290  002B28  0EB1               	movlw	low (_var_sys_NVM+25)
  5291  002B2A  D758               	goto	L13
  5292  002B2C                     l20574:
  5293                           
  5294                           ; BSR set to: 0
  5295  002B2C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5296  002B2E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5297  002B30  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5298                           
  5299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5300                           ; Switch size 1, requested type "simple"
  5301                           ; Number of cases is 1, Range of values is 0 to 0
  5302                           ; switch strategies available:
  5303                           ; Name         Instructions Cycles
  5304                           ; simple_byte            4     3 (average)
  5305                           ;	Chosen strategy is simple_byte
  5306  002B32  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5307  002B34  0A00               	xorlw	0	; case 0
  5308  002B36  A4D8               	btfss	status,2,c
  5309  002B38  D19A               	goto	l20754
  5310                           
  5311                           ; BSR set to: 0
  5312                           ; Switch size 1, requested type "simple"
  5313                           ; Number of cases is 10, Range of values is 0 to 9
  5314                           ; switch strategies available:
  5315                           ; Name         Instructions Cycles
  5316                           ; simple_byte           31    16 (average)
  5317                           ;	Chosen strategy is simple_byte
  5318  002B3A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5319  002B3C  0A00               	xorlw	0	; case 0
  5320  002B3E  B4D8               	btfsc	status,2,c
  5321  002B40  D79E               	goto	l20522
  5322  002B42  0A01               	xorlw	1	; case 1
  5323  002B44  B4D8               	btfsc	status,2,c
  5324  002B46  D79F               	goto	l20524
  5325  002B48  0A03               	xorlw	3	; case 2
  5326  002B4A  B4D8               	btfsc	status,2,c
  5327  002B4C  D7A0               	goto	l20526
  5328  002B4E  0A01               	xorlw	1	; case 3
  5329  002B50  B4D8               	btfsc	status,2,c
  5330  002B52  D7A3               	goto	l20534
  5331  002B54  0A07               	xorlw	7	; case 4
  5332  002B56  B4D8               	btfsc	status,2,c
  5333  002B58  D18A               	goto	l20754
  5334  002B5A  0A01               	xorlw	1	; case 5
  5335  002B5C  B4D8               	btfsc	status,2,c
  5336  002B5E  D7A5               	goto	l3375
  5337  002B60  0A03               	xorlw	3	; case 6
  5338  002B62  B4D8               	btfsc	status,2,c
  5339  002B64  D7A6               	goto	l20546
  5340  002B66  0A01               	xorlw	1	; case 7
  5341  002B68  B4D8               	btfsc	status,2,c
  5342  002B6A  D7AB               	goto	l20554
  5343  002B6C  0A0F               	xorlw	15	; case 8
  5344  002B6E  B4D8               	btfsc	status,2,c
  5345  002B70  D7CC               	goto	l20560
  5346  002B72  0A01               	xorlw	1	; case 9
  5347  002B74  B4D8               	btfsc	status,2,c
  5348  002B76  D7D2               	goto	l20564
  5349  002B78  D17A               	goto	l20754
  5350  002B7A                     l20576:
  5351                           
  5352                           ; BSR set to: 0
  5353                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5354  002B7A  0EBB               	movlw	low _menuConfiguration_stateMachine
  5355  002B7C  6E12               	movwf	sm_send_event@psm^0,c
  5356  002B7E  0E02               	movlw	high _menuConfiguration_stateMachine
  5357  002B80  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5358  002B82  0E00               	movlw	0
  5359  002B84  6E15               	movwf	(sm_send_event@event+1)^0,c
  5360  002B86  0E14               	movlw	20
  5361  002B88  6E14               	movwf	sm_send_event@event^0,c
  5362  002B8A  EC01  F041         	call	_sm_send_event	;wreg free
  5363                           
  5364                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5365  002B8E  0EE4               	movlw	low _controlGate_stateMachine
  5366  002B90  6E12               	movwf	sm_send_event@psm^0,c
  5367  002B92  0E01               	movlw	high _controlGate_stateMachine
  5368  002B94  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5369  002B96  0E00               	movlw	0
  5370  002B98  6E15               	movwf	(sm_send_event@event+1)^0,c
  5371  002B9A  0E14               	movlw	20
  5372  002B9C  6E14               	movwf	sm_send_event@event^0,c
  5373  002B9E  EC01  F041         	call	_sm_send_event	;wreg free
  5374                           
  5375                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5376  002BA2  0E01               	movlw	1
  5377  002BA4  0101               	movlb	1	; () banked
  5378  002BA6  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5379                           
  5380                           ; BSR set to: 1
  5381                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5382  002BA8  0E00               	movlw	0
  5383  002BAA  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5384                           
  5385                           ; BSR set to: 1
  5386                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5387  002BAC  0E01               	movlw	1
  5388  002BAE  ECE2  F044         	call	_SaveNVM_VarSystem
  5389                           
  5390                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5391  002BB2  D15D               	goto	l20754
  5392  002BB4                     l20584:
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5396  002BB4  0EBB               	movlw	low _menuConfiguration_stateMachine
  5397  002BB6  6E12               	movwf	sm_send_event@psm^0,c
  5398  002BB8  0E02               	movlw	high _menuConfiguration_stateMachine
  5399  002BBA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5400  002BBC  0E00               	movlw	0
  5401  002BBE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5402  002BC0  0E14               	movlw	20
  5403  002BC2  6E14               	movwf	sm_send_event@event^0,c
  5404  002BC4  EC01  F041         	call	_sm_send_event	;wreg free
  5405                           
  5406                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5407  002BC8  0EE4               	movlw	low _controlGate_stateMachine
  5408  002BCA  6E12               	movwf	sm_send_event@psm^0,c
  5409  002BCC  0E01               	movlw	high _controlGate_stateMachine
  5410  002BCE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5411  002BD0  0E00               	movlw	0
  5412  002BD2  6E15               	movwf	(sm_send_event@event+1)^0,c
  5413  002BD4  0E14               	movlw	20
  5414  002BD6  6E14               	movwf	sm_send_event@event^0,c
  5415  002BD8  EC01  F041         	call	_sm_send_event	;wreg free
  5416                           
  5417                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5418  002BDC  0E01               	movlw	1
  5419  002BDE  0101               	movlb	1	; () banked
  5420  002BE0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5421                           
  5422                           ; BSR set to: 1
  5423                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5424  002BE2  0E01               	movlw	1
  5425  002BE4  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5426                           
  5427                           ; BSR set to: 1
  5428                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5429  002BE6  0E01               	movlw	1
  5430  002BE8  ECE2  F044         	call	_SaveNVM_VarSystem
  5431                           
  5432                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5433  002BEC  D140               	goto	l20754
  5434  002BEE                     l3385:
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5438  002BEE  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5439                           
  5440                           ; BSR set to: 0
  5441                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5442  002BF2  0E03               	movlw	3
  5443  002BF4  EC5A  F01E         	call	_load_New_Menu
  5444                           
  5445                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5446  002BF8  0EB4               	movlw	low (_var_sys_NVM+28)
  5447  002BFA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5448  002BFC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5449                           
  5450                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5451  002BFE  0E01               	movlw	1
  5452  002C00  0100               	movlb	0	; () banked
  5453  002C02  6FDF               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5457  002C04  0E02               	movlw	2
  5458  002C06  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5462  002C08  0E00               	movlw	0
  5463  002C0A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5464                           
  5465                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5466  002C0C  D130               	goto	l20754
  5467  002C0E                     l3386:
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5471  002C0E  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5475  002C12  0E02               	movlw	2
  5476  002C14  EC5A  F01E         	call	_load_New_Menu
  5477                           
  5478                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5479  002C18  0EB3               	movlw	low (_var_sys_NVM+27)
  5480  002C1A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5481  002C1C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5482                           
  5483                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5484  002C1E  0E01               	movlw	1
  5485  002C20  0100               	movlb	0	; () banked
  5486  002C22  6FDF               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5490  002C24  0E01               	movlw	1
  5491  002C26  D7EF               	goto	L14
  5492  002C28                     l20614:
  5493                           
  5494                           ; BSR set to: 0
  5495  002C28  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5496  002C2A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5497  002C2C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5498                           
  5499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5500                           ; Switch size 1, requested type "simple"
  5501                           ; Number of cases is 1, Range of values is 0 to 0
  5502                           ; switch strategies available:
  5503                           ; Name         Instructions Cycles
  5504                           ; simple_byte            4     3 (average)
  5505                           ;	Chosen strategy is simple_byte
  5506  002C2E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5507  002C30  0A00               	xorlw	0	; case 0
  5508  002C32  A4D8               	btfss	status,2,c
  5509  002C34  D11C               	goto	l20754
  5510                           
  5511                           ; BSR set to: 0
  5512                           ; Switch size 1, requested type "simple"
  5513                           ; Number of cases is 4, Range of values is 0 to 3
  5514                           ; switch strategies available:
  5515                           ; Name         Instructions Cycles
  5516                           ; simple_byte           13     7 (average)
  5517                           ;	Chosen strategy is simple_byte
  5518  002C36  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5519  002C38  0A00               	xorlw	0	; case 0
  5520  002C3A  B4D8               	btfsc	status,2,c
  5521  002C3C  D79E               	goto	l20576
  5522  002C3E  0A01               	xorlw	1	; case 1
  5523  002C40  B4D8               	btfsc	status,2,c
  5524  002C42  D7B8               	goto	l20584
  5525  002C44  0A03               	xorlw	3	; case 2
  5526  002C46  B4D8               	btfsc	status,2,c
  5527  002C48  D7D2               	goto	l3385
  5528  002C4A  0A01               	xorlw	1	; case 3
  5529  002C4C  B4D8               	btfsc	status,2,c
  5530  002C4E  D7DF               	goto	l3386
  5531  002C50  D10E               	goto	l20754
  5532  002C52                     l20616:
  5533                           
  5534                           ; BSR set to: 0
  5535                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5536  002C52  0E98               	movlw	low _var_sys_NVM
  5537  002C54  D001               	goto	L15
  5538  002C56                     l20618:
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5542  002C56  0E99               	movlw	low (_var_sys_NVM+1)
  5543  002C58                     L15:
  5544  002C58  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5545  002C5A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5546                           
  5547                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5548  002C5C  D00E               	goto	l20624
  5549  002C5E                     l20622:
  5550                           
  5551                           ; BSR set to: 0
  5552  002C5E  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5553  002C60  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5554  002C62  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5555                           
  5556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5557                           ; Switch size 1, requested type "simple"
  5558                           ; Number of cases is 1, Range of values is 0 to 0
  5559                           ; switch strategies available:
  5560                           ; Name         Instructions Cycles
  5561                           ; simple_byte            4     3 (average)
  5562                           ;	Chosen strategy is simple_byte
  5563  002C64  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5564  002C66  0A00               	xorlw	0	; case 0
  5565  002C68  A4D8               	btfss	status,2,c
  5566  002C6A  D007               	goto	l20624
  5567                           
  5568                           ; BSR set to: 0
  5569                           ; Switch size 1, requested type "simple"
  5570                           ; Number of cases is 2, Range of values is 0 to 1
  5571                           ; switch strategies available:
  5572                           ; Name         Instructions Cycles
  5573                           ; simple_byte            7     4 (average)
  5574                           ;	Chosen strategy is simple_byte
  5575  002C6C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5576  002C6E  0A00               	xorlw	0	; case 0
  5577  002C70  B4D8               	btfsc	status,2,c
  5578  002C72  D7EF               	goto	l20616
  5579  002C74  0A01               	xorlw	1	; case 1
  5580  002C76  B4D8               	btfsc	status,2,c
  5581  002C78  D7EE               	goto	l20618
  5582  002C7A                     l20624:
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5586  002C7A  0E2D               	movlw	45
  5587  002C7C                     L29:
  5588  002C7C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5589                           
  5590                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5591  002C7E  0E00               	movlw	0
  5592  002C80  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5593  002C82                     L19:
  5594                           
  5595                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5596  002C82  0E01               	movlw	1
  5597  002C84  6FDF               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5601  002C86  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5602  002C8A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5603  002C8E  50DF               	movf	indf2,w,c
  5604  002C90  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5605                           
  5606                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5607  002C92  D0ED               	goto	l20754
  5608  002C94                     l20628:
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5612  002C94  0E09               	movlw	9
  5613  002C96  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5614                           
  5615                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5616  002C98  0E00               	movlw	0
  5617  002C9A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5618                           
  5619                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5620  002C9C  D00F               	goto	l20644
  5621  002C9E                     l20630:
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5625  002C9E  0E02               	movlw	2
  5626  002CA0  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5627  002CA2  D002               	goto	l20634
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5631  002CA4  0E00               	movlw	0
  5632  002CA6  D001               	goto	L16
  5633  002CA8                     l20634:
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5637  002CA8  0E09               	movlw	9
  5638  002CAA                     L16:
  5639  002CAA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5643  002CAC  0E9A               	movlw	low (_var_sys_NVM+2)
  5644  002CAE  D003               	goto	L18
  5645  002CB0                     l20638:
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5649  002CB0  0E9B               	movlw	low (_var_sys_NVM+3)
  5650  002CB2  D001               	goto	L18
  5651  002CB4                     l20640:
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5655  002CB4  0EA7               	movlw	low (_var_sys_NVM+15)
  5656  002CB6                     L18:
  5657  002CB6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5658  002CB8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5659                           
  5660                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5661  002CBA  D7E3               	goto	L19
  5662  002CBC                     l20644:
  5663                           
  5664                           ; BSR set to: 0
  5665  002CBC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5666  002CBE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5667  002CC0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5668                           
  5669                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5670                           ; Switch size 1, requested type "simple"
  5671                           ; Number of cases is 1, Range of values is 0 to 0
  5672                           ; switch strategies available:
  5673                           ; Name         Instructions Cycles
  5674                           ; simple_byte            4     3 (average)
  5675                           ;	Chosen strategy is simple_byte
  5676  002CC2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5677  002CC4  0A00               	xorlw	0	; case 0
  5678  002CC6  A4D8               	btfss	status,2,c
  5679  002CC8  D7DC               	goto	L19
  5680                           
  5681                           ; BSR set to: 0
  5682                           ; Switch size 1, requested type "simple"
  5683                           ; Number of cases is 3, Range of values is 0 to 2
  5684                           ; switch strategies available:
  5685                           ; Name         Instructions Cycles
  5686                           ; simple_byte           10     6 (average)
  5687                           ;	Chosen strategy is simple_byte
  5688  002CCA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5689  002CCC  0A00               	xorlw	0	; case 0
  5690  002CCE  B4D8               	btfsc	status,2,c
  5691  002CD0  D7E6               	goto	l20630
  5692  002CD2  0A01               	xorlw	1	; case 1
  5693  002CD4  B4D8               	btfsc	status,2,c
  5694  002CD6  D7EC               	goto	l20638
  5695  002CD8  0A03               	xorlw	3	; case 2
  5696  002CDA  B4D8               	btfsc	status,2,c
  5697  002CDC  D7EB               	goto	l20640
  5698  002CDE  D7D1               	goto	L19
  5699  002CE0                     l20650:
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5703  002CE0  0E9D               	movlw	low (_var_sys_NVM+5)
  5704  002CE2  D001               	goto	L20
  5705  002CE4                     l20652:
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5709  002CE4  0E9E               	movlw	low (_var_sys_NVM+6)
  5710  002CE6                     L20:
  5711  002CE6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5712  002CE8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5713                           
  5714                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5715  002CEA  D00E               	goto	l20658
  5716  002CEC                     l20656:
  5717                           
  5718                           ; BSR set to: 0
  5719  002CEC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5720  002CEE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5721  002CF0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5722                           
  5723                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5724                           ; Switch size 1, requested type "simple"
  5725                           ; Number of cases is 1, Range of values is 0 to 0
  5726                           ; switch strategies available:
  5727                           ; Name         Instructions Cycles
  5728                           ; simple_byte            4     3 (average)
  5729                           ;	Chosen strategy is simple_byte
  5730  002CF2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5731  002CF4  0A00               	xorlw	0	; case 0
  5732  002CF6  A4D8               	btfss	status,2,c
  5733  002CF8  D007               	goto	l20658
  5734                           
  5735                           ; BSR set to: 0
  5736                           ; Switch size 1, requested type "simple"
  5737                           ; Number of cases is 2, Range of values is 0 to 1
  5738                           ; switch strategies available:
  5739                           ; Name         Instructions Cycles
  5740                           ; simple_byte            7     4 (average)
  5741                           ;	Chosen strategy is simple_byte
  5742  002CFA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5743  002CFC  0A00               	xorlw	0	; case 0
  5744  002CFE  B4D8               	btfsc	status,2,c
  5745  002D00  D7EF               	goto	l20650
  5746  002D02  0A01               	xorlw	1	; case 1
  5747  002D04  B4D8               	btfsc	status,2,c
  5748  002D06  D7EE               	goto	l20652
  5749  002D08                     l20658:
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5753  002D08  0E63               	movlw	99
  5754  002D0A  D7B8               	goto	L29
  5755  002D0C                     l20662:
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5759  002D0C  0E9F               	movlw	low (_var_sys_NVM+7)
  5760  002D0E  D034               	goto	L125
  5761  002D10                     l20664:
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5765  002D10  0EA0               	movlw	low (_var_sys_NVM+8)
  5766  002D12  D032               	goto	L125
  5767  002D14                     l20668:
  5768                           
  5769                           ; BSR set to: 0
  5770  002D14  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5771  002D16  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5772  002D18  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5773                           
  5774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5775                           ; Switch size 1, requested type "simple"
  5776                           ; Number of cases is 1, Range of values is 0 to 0
  5777                           ; switch strategies available:
  5778                           ; Name         Instructions Cycles
  5779                           ; simple_byte            4     3 (average)
  5780                           ;	Chosen strategy is simple_byte
  5781  002D1A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5782  002D1C  0A00               	xorlw	0	; case 0
  5783  002D1E  A4D8               	btfss	status,2,c
  5784  002D20  D02D               	goto	L124
  5785                           
  5786                           ; BSR set to: 0
  5787                           ; Switch size 1, requested type "simple"
  5788                           ; Number of cases is 2, Range of values is 0 to 1
  5789                           ; switch strategies available:
  5790                           ; Name         Instructions Cycles
  5791                           ; simple_byte            7     4 (average)
  5792                           ;	Chosen strategy is simple_byte
  5793  002D22  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5794  002D24  0A00               	xorlw	0	; case 0
  5795  002D26  B4D8               	btfsc	status,2,c
  5796  002D28  D7F1               	goto	l20662
  5797  002D2A  0A01               	xorlw	1	; case 1
  5798  002D2C  B4D8               	btfsc	status,2,c
  5799  002D2E  D7F0               	goto	l20664
  5800  002D30  D025               	goto	L124
  5801  002D32                     l20674:
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5805  002D32  0EA1               	movlw	low (_var_sys_NVM+9)
  5806  002D34  D021               	goto	L125
  5807  002D36                     l20676:
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5811  002D36  0EA2               	movlw	low (_var_sys_NVM+10)
  5812  002D38  D01F               	goto	L125
  5813  002D3A                     l20678:
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5817  002D3A  0EA3               	movlw	low (_var_sys_NVM+11)
  5818  002D3C  D01D               	goto	L125
  5819  002D3E                     l20680:
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5823  002D3E  0EAE               	movlw	low (_var_sys_NVM+22)
  5824  002D40  D01B               	goto	L125
  5825  002D42                     l20684:
  5826                           
  5827                           ; BSR set to: 0
  5828  002D42  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5829  002D44  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5830  002D46  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5831                           
  5832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5833                           ; Switch size 1, requested type "simple"
  5834                           ; Number of cases is 1, Range of values is 0 to 0
  5835                           ; switch strategies available:
  5836                           ; Name         Instructions Cycles
  5837                           ; simple_byte            4     3 (average)
  5838                           ;	Chosen strategy is simple_byte
  5839  002D48  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5840  002D4A  0A00               	xorlw	0	; case 0
  5841  002D4C  A4D8               	btfss	status,2,c
  5842  002D4E  D016               	goto	L124
  5843                           
  5844                           ; BSR set to: 0
  5845                           ; Switch size 1, requested type "simple"
  5846                           ; Number of cases is 4, Range of values is 0 to 3
  5847                           ; switch strategies available:
  5848                           ; Name         Instructions Cycles
  5849                           ; simple_byte           13     7 (average)
  5850                           ;	Chosen strategy is simple_byte
  5851  002D50  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5852  002D52  0A00               	xorlw	0	; case 0
  5853  002D54  B4D8               	btfsc	status,2,c
  5854  002D56  D7ED               	goto	l20674
  5855  002D58  0A01               	xorlw	1	; case 1
  5856  002D5A  B4D8               	btfsc	status,2,c
  5857  002D5C  D7EC               	goto	l20676
  5858  002D5E  0A03               	xorlw	3	; case 2
  5859  002D60  B4D8               	btfsc	status,2,c
  5860  002D62  D7EB               	goto	l20678
  5861  002D64  0A01               	xorlw	1	; case 3
  5862  002D66  B4D8               	btfsc	status,2,c
  5863  002D68  D7EA               	goto	l20680
  5864  002D6A  D008               	goto	L124
  5865  002D6C                     l20690:
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5869  002D6C  0EA8               	movlw	low (_var_sys_NVM+16)
  5870  002D6E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5871  002D70  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5872                           
  5873                           ; BSR set to: 0
  5874                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5875  002D72  0E02               	movlw	2
  5876  002D74  D783               	goto	L29
  5877  002D76                     l20696:
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  5881  002D76  0EA9               	movlw	low (_var_sys_NVM+17)
  5882  002D78                     L125:
  5883  002D78  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5884  002D7A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5885  002D7C                     L124:
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  5889  002D7C  0E01               	movlw	1
  5890  002D7E  D77E               	goto	L29
  5891  002D80                     l20704:
  5892                           
  5893                           ; BSR set to: 0
  5894  002D80  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5895  002D82  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5896  002D84  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5897                           
  5898                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5899                           ; Switch size 1, requested type "simple"
  5900                           ; Number of cases is 1, Range of values is 0 to 0
  5901                           ; switch strategies available:
  5902                           ; Name         Instructions Cycles
  5903                           ; simple_byte            4     3 (average)
  5904                           ;	Chosen strategy is simple_byte
  5905  002D86  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5906  002D88  0A00               	xorlw	0	; case 0
  5907  002D8A  A4D8               	btfss	status,2,c
  5908  002D8C  D77A               	goto	L19
  5909                           
  5910                           ; BSR set to: 0
  5911                           ; Switch size 1, requested type "simple"
  5912                           ; Number of cases is 2, Range of values is 0 to 1
  5913                           ; switch strategies available:
  5914                           ; Name         Instructions Cycles
  5915                           ; simple_byte            7     4 (average)
  5916                           ;	Chosen strategy is simple_byte
  5917  002D8E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5918  002D90  0A00               	xorlw	0	; case 0
  5919  002D92  B4D8               	btfsc	status,2,c
  5920  002D94  D7EB               	goto	l20690
  5921  002D96  0A01               	xorlw	1	; case 1
  5922  002D98  B4D8               	btfsc	status,2,c
  5923  002D9A  D7ED               	goto	l20696
  5924  002D9C  D772               	goto	L19
  5925  002D9E                     l20710:
  5926                           
  5927                           ; BSR set to: 0
  5928                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  5929  002D9E  0EAA               	movlw	low (_var_sys_NVM+18)
  5930  002DA0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5931  002DA2  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  5935  002DA4  0E09               	movlw	9
  5936  002DA6  D76A               	goto	L29
  5937  002DA8                     l20716:
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  5941  002DA8  0EAB               	movlw	low (_var_sys_NVM+19)
  5942  002DAA  D7FA               	goto	L27
  5943  002DAC                     l20724:
  5944                           
  5945                           ; BSR set to: 0
  5946  002DAC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5947  002DAE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5948  002DB0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5949                           
  5950                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5951                           ; Switch size 1, requested type "simple"
  5952                           ; Number of cases is 1, Range of values is 0 to 0
  5953                           ; switch strategies available:
  5954                           ; Name         Instructions Cycles
  5955                           ; simple_byte            4     3 (average)
  5956                           ;	Chosen strategy is simple_byte
  5957  002DB2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5958  002DB4  0A00               	xorlw	0	; case 0
  5959  002DB6  A4D8               	btfss	status,2,c
  5960  002DB8  D764               	goto	L19
  5961                           
  5962                           ; BSR set to: 0
  5963                           ; Switch size 1, requested type "simple"
  5964                           ; Number of cases is 2, Range of values is 0 to 1
  5965                           ; switch strategies available:
  5966                           ; Name         Instructions Cycles
  5967                           ; simple_byte            7     4 (average)
  5968                           ;	Chosen strategy is simple_byte
  5969  002DBA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5970  002DBC  0A00               	xorlw	0	; case 0
  5971  002DBE  B4D8               	btfsc	status,2,c
  5972  002DC0  D7EE               	goto	l20710
  5973  002DC2  0A01               	xorlw	1	; case 1
  5974  002DC4  B4D8               	btfsc	status,2,c
  5975  002DC6  D7F0               	goto	l20716
  5976  002DC8  D75C               	goto	L19
  5977  002DCA                     l20730:
  5978                           
  5979                           ; BSR set to: 0
  5980                           ;sm_MenuConfiguration_MC50.c: 1067:                 {;sm_MenuConfiguration_MC50.c: 1068:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.positionRemotesFull;
  5981  002DCA  0EB8               	movlw	low (_var_sys_NVM+32)
  5982  002DCC  D001               	goto	L28
  5983  002DCE                     l20732:
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;sm_MenuConfiguration_MC50.c: 1072:                 {;sm_MenuConfiguration_MC50.c: 1073:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.positionRemotesWalk;
  5987  002DCE  0EB9               	movlw	low (_var_sys_NVM+33)
  5988  002DD0                     L28:
  5989  002DD0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5990  002DD2  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5991                           
  5992                           ;sm_MenuConfiguration_MC50.c: 1074:                 };sm_MenuConfiguration_MC50.c: 1075:
      +                                           break;
  5993  002DD4  D00E               	goto	l20738
  5994  002DD6                     l20736:
  5995                           
  5996                           ; BSR set to: 0
  5997  002DD6  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5998  002DD8  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5999  002DDA  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6000                           
  6001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6002                           ; Switch size 1, requested type "simple"
  6003                           ; Number of cases is 1, Range of values is 0 to 0
  6004                           ; switch strategies available:
  6005                           ; Name         Instructions Cycles
  6006                           ; simple_byte            4     3 (average)
  6007                           ;	Chosen strategy is simple_byte
  6008  002DDC  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6009  002DDE  0A00               	xorlw	0	; case 0
  6010  002DE0  A4D8               	btfss	status,2,c
  6011  002DE2  D007               	goto	l20738
  6012                           
  6013                           ; BSR set to: 0
  6014                           ; Switch size 1, requested type "simple"
  6015                           ; Number of cases is 2, Range of values is 0 to 1
  6016                           ; switch strategies available:
  6017                           ; Name         Instructions Cycles
  6018                           ; simple_byte            7     4 (average)
  6019                           ;	Chosen strategy is simple_byte
  6020  002DE4  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6021  002DE6  0A00               	xorlw	0	; case 0
  6022  002DE8  B4D8               	btfsc	status,2,c
  6023  002DEA  D7EF               	goto	l20730
  6024  002DEC  0A01               	xorlw	1	; case 1
  6025  002DEE  B4D8               	btfsc	status,2,c
  6026  002DF0  D7EE               	goto	l20732
  6027  002DF2                     l20738:
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;sm_MenuConfiguration_MC50.c: 1077:             edit_Param.Max=edit_Param.Value[0];
  6031  002DF2  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6032  002DF6  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6033  002DFA  50DF               	movf	indf2,w,c
  6034  002DFC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;sm_MenuConfiguration_MC50.c: 1078:             edit_Param.position=0;
  6038  002DFE  0E00               	movlw	0
  6039  002E00  6E46               	movwf	_edit_Param^0,c	;volatile
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;sm_MenuConfiguration_MC50.c: 1079:             edit_Param.Min=0;
  6043  002E02  0E00               	movlw	0
  6044  002E04  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;sm_MenuConfiguration_MC50.c: 1080:             haveValueToEdit=1;
  6048  002E06  0E01               	movlw	1
  6049  002E08  6FDF               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;sm_MenuConfiguration_MC50.c: 1081:             edit_Param.tempValue= edit_Param.Value[0
      +                          ];
  6053  002E0A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6054  002E0E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6055  002E12  50DF               	movf	indf2,w,c
  6056  002E14  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;sm_MenuConfiguration_MC50.c: 1082:             InitReceiver();
  6060  002E16  ECAC  F047         	call	_InitReceiver	;wreg free
  6061                           
  6062                           ;sm_MenuConfiguration_MC50.c: 1083:         };sm_MenuConfiguration_MC50.c: 1084:        
      +                           break;
  6063  002E1A  D029               	goto	l20754
  6064  002E1C                     l20752:
  6065                           
  6066                           ; BSR set to: 0
  6067  002E1C  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6068  002E1E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6069  002E20  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6070                           
  6071                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6072                           ; Switch size 1, requested type "simple"
  6073                           ; Number of cases is 1, Range of values is 0 to 0
  6074                           ; switch strategies available:
  6075                           ; Name         Instructions Cycles
  6076                           ; simple_byte            4     3 (average)
  6077                           ;	Chosen strategy is simple_byte
  6078  002E22  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6079  002E24  0A00               	xorlw	0	; case 0
  6080  002E26  A4D8               	btfss	status,2,c
  6081  002E28  D022               	goto	l20754
  6082                           
  6083                           ; BSR set to: 0
  6084                           ; Switch size 1, requested type "simple"
  6085                           ; Number of cases is 11, Range of values is 0 to 12
  6086                           ; switch strategies available:
  6087                           ; Name         Instructions Cycles
  6088                           ; simple_byte           34    18 (average)
  6089                           ;	Chosen strategy is simple_byte
  6090  002E2A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6091  002E2C  0A00               	xorlw	0	; case 0
  6092  002E2E  B4D8               	btfsc	status,2,c
  6093  002E30  D5BF               	goto	l3353
  6094  002E32  0A01               	xorlw	1	; case 1
  6095  002E34  B4D8               	btfsc	status,2,c
  6096  002E36  D61C               	goto	l3367
  6097  002E38  0A05               	xorlw	5	; case 4
  6098  002E3A  B4D8               	btfsc	status,2,c
  6099  002E3C  D6F5               	goto	l20614
  6100  002E3E  0A01               	xorlw	1	; case 5
  6101  002E40  B4D8               	btfsc	status,2,c
  6102  002E42  D70D               	goto	l20622
  6103  002E44  0A03               	xorlw	3	; case 6
  6104  002E46  B4D8               	btfsc	status,2,c
  6105  002E48  D725               	goto	l20628
  6106  002E4A  0A01               	xorlw	1	; case 7
  6107  002E4C  B4D8               	btfsc	status,2,c
  6108  002E4E  D74E               	goto	l20656
  6109  002E50  0A0F               	xorlw	15	; case 8
  6110  002E52  B4D8               	btfsc	status,2,c
  6111  002E54  D75F               	goto	l20668
  6112  002E56  0A01               	xorlw	1	; case 9
  6113  002E58  B4D8               	btfsc	status,2,c
  6114  002E5A  D773               	goto	l20684
  6115  002E5C  0A03               	xorlw	3	; case 10
  6116  002E5E  B4D8               	btfsc	status,2,c
  6117  002E60  D78F               	goto	l20704
  6118  002E62  0A01               	xorlw	1	; case 11
  6119  002E64  B4D8               	btfsc	status,2,c
  6120  002E66  D7A2               	goto	l20724
  6121  002E68  0A07               	xorlw	7	; case 12
  6122  002E6A  B4D8               	btfsc	status,2,c
  6123  002E6C  D7B4               	goto	l20736
  6124  002E6E                     l20754:
  6125                           
  6126                           ;sm_MenuConfiguration_MC50.c: 1087:     return haveValueToEdit;
  6127  002E6E  0100               	movlb	0	; () banked
  6128  002E70  51DF               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6129                           
  6130                           ; BSR set to: 0
  6131  002E72  0012               	return		;funcret
  6132  002E74                     __end_of_setValueToEdit:
  6133                           	callstack 0
  6134                           
  6135 ;; *************** function _load_New_Menu *****************
  6136 ;; Defined at:
  6137 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;  Menu            1    wreg     enum E10813
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  Menu            1   33[COMRAM] enum E10813
  6142 ;;  i               1   34[COMRAM] unsigned char 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      void 
  6145 ;; Registers used:
  6146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6154 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6155 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6156 ;;Total ram usage:        4 bytes
  6157 ;; Hardware stack levels used: 1
  6158 ;; Hardware stack levels required when called: 5
  6159 ;; This function calls:
  6160 ;;		_SetSegmentValueIntermitentMain
  6161 ;;		_SetSegmentValueMain
  6162 ;; This function is called by:
  6163 ;;		_sm_execute_main
  6164 ;;		_sm_execute_menuConfiguration
  6165 ;;		_setValueToEdit
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text4
  6170  003CB4                     __ptext4:
  6171                           	callstack 0
  6172  003CB4                     _load_New_Menu:
  6173                           	callstack 22
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;incstack = 0
  6177                           ;load_New_Menu@Menu stored from wreg
  6178  003CB4  6E22               	movwf	load_New_Menu@Menu^0,c
  6179                           
  6180                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6181  003CB6  0E00               	movlw	0
  6182  003CB8  0101               	movlb	1	; () banked
  6183  003CBA  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6184  003CBC  0E64               	movlw	100
  6185  003CBE  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6186                           
  6187                           ; BSR set to: 1
  6188                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6189  003CC0  5022               	movf	load_New_Menu@Menu^0,w,c
  6190  003CC2  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6191  003CC4  B4D8               	btfsc	status,2,c
  6192  003CC6  D006               	goto	l19772
  6193                           
  6194                           ; BSR set to: 1
  6195  003CC8  0E01               	movlw	1
  6196  003CCA  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6197  003CCC  D003               	goto	l19772
  6198                           
  6199                           ; BSR set to: 1
  6200                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6201  003CCE  0E00               	movlw	0
  6202  003CD0  6F68               	movwf	(_menu_st+23)& (0+255),b
  6203                           
  6204                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6205  003CD2  D005               	goto	l19776
  6206  003CD4                     l19772:
  6207                           
  6208                           ; BSR set to: 1
  6209  003CD4  0E02               	movlw	2
  6210  003CD6  6022               	cpfslt	load_New_Menu@Menu^0,c
  6211  003CD8  D002               	goto	l19776
  6212                           
  6213                           ; BSR set to: 1
  6214                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6215  003CDA  C169  F168         	movff	_menu_st+24,_menu_st+23
  6216  003CDE                     l19776:
  6217                           
  6218                           ; BSR set to: 1
  6219                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6220  003CDE  0E00               	movlw	0
  6221  003CE0  6F65               	movwf	(_menu_st+20)& (0+255),b
  6222                           
  6223                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6224  003CE2  D0F6               	goto	l19828
  6225  003CE4                     l19778:
  6226                           
  6227                           ; BSR set to: 1
  6228                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6229  003CE4  0E00               	movlw	0
  6230  003CE6  6F66               	movwf	(_menu_st+21)& (0+255),b
  6231                           
  6232                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6233  003CE8  0E0A               	movlw	10
  6234  003CEA  6F67               	movwf	(_menu_st+22)& (0+255),b
  6235                           
  6236                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6237  003CEC  0E00               	movlw	0
  6238  003CEE  6F69               	movwf	(_menu_st+24)& (0+255),b
  6239                           
  6240                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6241  003CF0  0E00               	movlw	0
  6242  003CF2  6E23               	movwf	load_New_Menu@i^0,c
  6243  003CF4                     l19784:
  6244                           
  6245                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6246  003CF4  5023               	movf	load_New_Menu@i^0,w,c
  6247  003CF6  0D02               	mullw	2
  6248  003CF8  0E51               	movlw	low _menu_st
  6249  003CFA  24F3               	addwf	243,w,c
  6250  003CFC  6ED9               	movwf	fsr2l,c
  6251  003CFE  0E01               	movlw	high _menu_st
  6252  003D00  20F4               	addwfc	prodh,w,c
  6253  003D02  6EDA               	movwf	fsr2h,c
  6254  003D04  0E10               	movlw	16
  6255  003D06  6EDF               	movwf	indf2,c
  6256                           
  6257                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6258  003D08  5023               	movf	load_New_Menu@i^0,w,c
  6259  003D0A  0D02               	mullw	2
  6260  003D0C  0E52               	movlw	low (_menu_st+1)
  6261  003D0E  24F3               	addwf	243,w,c
  6262  003D10  6ED9               	movwf	fsr2l,c
  6263  003D12  0E01               	movlw	high (_menu_st+1)
  6264  003D14  20F4               	addwfc	prodh,w,c
  6265  003D16  6EDA               	movwf	fsr2h,c
  6266  003D18  C023  FFDF         	movff	load_New_Menu@i,indf2
  6267                           
  6268                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6269  003D1C  2A23               	incf	load_New_Menu@i^0,f,c
  6270  003D1E  0E09               	movlw	9
  6271  003D20  6423               	cpfsgt	load_New_Menu@i^0,c
  6272  003D22  D7E8               	goto	l19784
  6273  003D24  D107               	goto	l19830
  6274  003D26                     l19790:
  6275                           
  6276                           ; BSR set to: 1
  6277                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6278  003D26  0E01               	movlw	1
  6279  003D28  6F66               	movwf	(_menu_st+21)& (0+255),b
  6280                           
  6281                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6282  003D2A  0E0A               	movlw	10
  6283  003D2C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6284                           
  6285                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6286  003D2E  0E00               	movlw	0
  6287  003D30  6F69               	movwf	(_menu_st+24)& (0+255),b
  6288                           
  6289                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6290  003D32  0E00               	movlw	0
  6291  003D34  6E23               	movwf	load_New_Menu@i^0,c
  6292  003D36                     l19796:
  6293                           
  6294                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6295  003D36  5023               	movf	load_New_Menu@i^0,w,c
  6296  003D38  0D02               	mullw	2
  6297  003D3A  0E51               	movlw	low _menu_st
  6298  003D3C  24F3               	addwf	243,w,c
  6299  003D3E  6ED9               	movwf	fsr2l,c
  6300  003D40  0E01               	movlw	high _menu_st
  6301  003D42  20F4               	addwfc	prodh,w,c
  6302  003D44  6EDA               	movwf	fsr2h,c
  6303  003D46  0E0E               	movlw	14
  6304  003D48  6EDF               	movwf	indf2,c
  6305                           
  6306                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6307  003D4A  5023               	movf	load_New_Menu@i^0,w,c
  6308  003D4C  0D02               	mullw	2
  6309  003D4E  0E52               	movlw	low (_menu_st+1)
  6310  003D50  24F3               	addwf	243,w,c
  6311  003D52  6ED9               	movwf	fsr2l,c
  6312  003D54  0E01               	movlw	high (_menu_st+1)
  6313  003D56  20F4               	addwfc	prodh,w,c
  6314  003D58  6EDA               	movwf	fsr2h,c
  6315  003D5A  C023  FFDF         	movff	load_New_Menu@i,indf2
  6316                           
  6317                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6318  003D5E  2A23               	incf	load_New_Menu@i^0,f,c
  6319  003D60  0E09               	movlw	9
  6320  003D62  6423               	cpfsgt	load_New_Menu@i^0,c
  6321  003D64  D7E8               	goto	l19796
  6322  003D66  D0E6               	goto	l19830
  6323  003D68                     l19802:
  6324                           
  6325                           ; BSR set to: 1
  6326                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6327  003D68  0E00               	movlw	0
  6328  003D6A  6F65               	movwf	(_menu_st+20)& (0+255),b
  6329                           
  6330                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6331  003D6C  0E04               	movlw	4
  6332  003D6E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6333                           
  6334                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6335  003D70  0E04               	movlw	4
  6336  003D72  6F67               	movwf	(_menu_st+22)& (0+255),b
  6337                           
  6338                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6339  003D74  0E0A               	movlw	10
  6340  003D76  6F51               	movwf	_menu_st& (0+255),b
  6341                           
  6342                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6343  003D78  0E13               	movlw	19
  6344  003D7A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6345                           
  6346                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6347  003D7C  0E17               	movlw	23
  6348  003D7E  6F53               	movwf	(_menu_st+2)& (0+255),b
  6349                           
  6350                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6351  003D80  0E0A               	movlw	10
  6352  003D82  6F54               	movwf	(_menu_st+3)& (0+255),b
  6353                           
  6354                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6355  003D84  0E05               	movlw	5
  6356  003D86  6F55               	movwf	(_menu_st+4)& (0+255),b
  6357                           
  6358                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6359  003D88  0E21               	movlw	33
  6360  003D8A  6F56               	movwf	(_menu_st+5)& (0+255),b
  6361                           
  6362                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6363  003D8C  0E0D               	movlw	13
  6364  003D8E  6F57               	movwf	(_menu_st+6)& (0+255),b
  6365                           
  6366                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6367  003D90  0E01               	movlw	1
  6368  003D92  D051               	goto	L31
  6369  003D94                     l19804:
  6370                           
  6371                           ; BSR set to: 1
  6372                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6373  003D94  0E00               	movlw	0
  6374  003D96  6F65               	movwf	(_menu_st+20)& (0+255),b
  6375                           
  6376                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6377  003D98  0E05               	movlw	5
  6378  003D9A  6F66               	movwf	(_menu_st+21)& (0+255),b
  6379                           
  6380                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6381  003D9C  0E02               	movlw	2
  6382  003D9E  6F67               	movwf	(_menu_st+22)& (0+255),b
  6383                           
  6384                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6385  003DA0  0E0D               	movlw	13
  6386  003DA2  6F51               	movwf	_menu_st& (0+255),b
  6387                           
  6388                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6389  003DA4  0E0A               	movlw	10
  6390  003DA6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6391                           
  6392                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6393  003DA8  0E0D               	movlw	13
  6394  003DAA  6F53               	movwf	(_menu_st+2)& (0+255),b
  6395                           
  6396                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6397  003DAC  0E0F               	movlw	15
  6398  003DAE  D08E               	goto	L38
  6399  003DB0                     l19806:
  6400                           
  6401                           ; BSR set to: 1
  6402                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6403  003DB0  0E00               	movlw	0
  6404  003DB2  6F65               	movwf	(_menu_st+20)& (0+255),b
  6405                           
  6406                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6407  003DB4  0E06               	movlw	6
  6408  003DB6  6F66               	movwf	(_menu_st+21)& (0+255),b
  6409                           
  6410                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6411  003DB8  0E03               	movlw	3
  6412  003DBA  6F67               	movwf	(_menu_st+22)& (0+255),b
  6413                           
  6414                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6415  003DBC  0E0F               	movlw	15
  6416  003DBE  6F51               	movwf	_menu_st& (0+255),b
  6417                           
  6418                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6419  003DC0  0E00               	movlw	0
  6420  003DC2  6F52               	movwf	(_menu_st+1)& (0+255),b
  6421                           
  6422                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6423  003DC4  0E0F               	movlw	15
  6424  003DC6  6F53               	movwf	(_menu_st+2)& (0+255),b
  6425                           
  6426                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6427  003DC8  0E05               	movlw	5
  6428  003DCA  6F54               	movwf	(_menu_st+3)& (0+255),b
  6429                           
  6430                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6431  003DCC  0E0F               	movlw	15
  6432  003DCE  6F55               	movwf	(_menu_st+4)& (0+255),b
  6433                           
  6434                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6435  003DD0  0E0D               	movlw	13
  6436  003DD2  D073               	goto	L33
  6437  003DD4                     l19808:
  6438                           
  6439                           ; BSR set to: 1
  6440                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6441  003DD4  0E00               	movlw	0
  6442  003DD6  6F65               	movwf	(_menu_st+20)& (0+255),b
  6443                           
  6444                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6445  003DD8  0E07               	movlw	7
  6446  003DDA  6F66               	movwf	(_menu_st+21)& (0+255),b
  6447                           
  6448                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6449  003DDC  0E02               	movlw	2
  6450  003DDE  6F67               	movwf	(_menu_st+22)& (0+255),b
  6451                           
  6452                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6453  003DE0  0E0A               	movlw	10
  6454  003DE2  6F51               	movwf	_menu_st& (0+255),b
  6455                           
  6456                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6457  003DE4  0E0F               	movlw	15
  6458  003DE6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6459                           
  6460                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6461  003DE8  0E0A               	movlw	10
  6462  003DEA  6F53               	movwf	(_menu_st+2)& (0+255),b
  6463                           
  6464                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6465  003DEC  0E10               	movlw	16
  6466  003DEE  D06E               	goto	L38
  6467  003DF0                     l19810:
  6468                           
  6469                           ; BSR set to: 1
  6470                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6471  003DF0  0E00               	movlw	0
  6472  003DF2  6F65               	movwf	(_menu_st+20)& (0+255),b
  6473                           
  6474                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6475  003DF4  0E08               	movlw	8
  6476  003DF6  6F66               	movwf	(_menu_st+21)& (0+255),b
  6477                           
  6478                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6479  003DF8  0E02               	movlw	2
  6480  003DFA  6F67               	movwf	(_menu_st+22)& (0+255),b
  6481                           
  6482                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6483  003DFC  0E12               	movlw	18
  6484  003DFE  6F51               	movwf	_menu_st& (0+255),b
  6485                           
  6486                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6487  003E00  0E0E               	movlw	14
  6488  003E02  6F52               	movwf	(_menu_st+1)& (0+255),b
  6489                           
  6490                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6491  003E04  0E11               	movlw	17
  6492  003E06  6F53               	movwf	(_menu_st+2)& (0+255),b
  6493                           
  6494                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6495  003E08  0E0C               	movlw	12
  6496  003E0A  D060               	goto	L38
  6497  003E0C                     l19812:
  6498                           
  6499                           ; BSR set to: 1
  6500                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6501  003E0C  0E00               	movlw	0
  6502  003E0E  6F65               	movwf	(_menu_st+20)& (0+255),b
  6503                           
  6504                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6505  003E10  0E09               	movlw	9
  6506  003E12  6F66               	movwf	(_menu_st+21)& (0+255),b
  6507                           
  6508                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6509  003E14  0E04               	movlw	4
  6510  003E16  6F67               	movwf	(_menu_st+22)& (0+255),b
  6511                           
  6512                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6513  003E18  0E12               	movlw	18
  6514  003E1A  6F51               	movwf	_menu_st& (0+255),b
  6515                           
  6516                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6517  003E1C  0E0A               	movlw	10
  6518  003E1E  6F52               	movwf	(_menu_st+1)& (0+255),b
  6519                           
  6520                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6521  003E20  0E11               	movlw	17
  6522  003E22  6F53               	movwf	(_menu_st+2)& (0+255),b
  6523                           
  6524                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6525  003E24  0E0A               	movlw	10
  6526  003E26  6F54               	movwf	(_menu_st+3)& (0+255),b
  6527                           
  6528                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6529  003E28  0E11               	movlw	17
  6530  003E2A  6F55               	movwf	(_menu_st+4)& (0+255),b
  6531                           
  6532                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6533  003E2C  0E12               	movlw	18
  6534  003E2E  6F56               	movwf	(_menu_st+5)& (0+255),b
  6535                           
  6536                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6537  003E30  0E05               	movlw	5
  6538  003E32  6F57               	movwf	(_menu_st+6)& (0+255),b
  6539                           
  6540                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6541  003E34  0E15               	movlw	21
  6542  003E36                     L31:
  6543  003E36  6F58               	movwf	(_menu_st+7)& (0+255),b
  6544                           
  6545                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6546  003E38  D07D               	goto	l19830
  6547  003E3A                     l19814:
  6548                           
  6549                           ; BSR set to: 1
  6550                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6551  003E3A  0E01               	movlw	1
  6552  003E3C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6553                           
  6554                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6555  003E3E  0E0A               	movlw	10
  6556  003E40  6F66               	movwf	(_menu_st+21)& (0+255),b
  6557                           
  6558                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6559  003E42  0E02               	movlw	2
  6560  003E44  6F67               	movwf	(_menu_st+22)& (0+255),b
  6561                           
  6562                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6563  003E46  0E11               	movlw	17
  6564  003E48  6F51               	movwf	_menu_st& (0+255),b
  6565                           
  6566                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6567  003E4A  0E10               	movlw	16
  6568  003E4C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6569                           
  6570                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6571  003E4E  0E10               	movlw	16
  6572  003E50  6F53               	movwf	(_menu_st+2)& (0+255),b
  6573                           
  6574                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6575  003E52  0E12               	movlw	18
  6576  003E54  D03B               	goto	L38
  6577  003E56                     l19816:
  6578                           
  6579                           ; BSR set to: 1
  6580                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6581  003E56  0E01               	movlw	1
  6582  003E58  6F65               	movwf	(_menu_st+20)& (0+255),b
  6583                           
  6584                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6585  003E5A  0E0B               	movlw	11
  6586  003E5C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6587                           
  6588                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6589  003E5E  0E02               	movlw	2
  6590  003E60  6F67               	movwf	(_menu_st+22)& (0+255),b
  6591                           
  6592                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6593  003E62  0E14               	movlw	20
  6594  003E64  6F51               	movwf	_menu_st& (0+255),b
  6595                           
  6596                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6597  003E66  0E24               	movlw	36
  6598  003E68  6F52               	movwf	(_menu_st+1)& (0+255),b
  6599                           
  6600                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6601  003E6A  0E14               	movlw	20
  6602  003E6C  6F53               	movwf	(_menu_st+2)& (0+255),b
  6603                           
  6604                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6605  003E6E  0E23               	movlw	35
  6606  003E70  D02D               	goto	L38
  6607  003E72                     l19818:
  6608                           
  6609                           ; BSR set to: 1
  6610                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6611  003E72  0E0C               	movlw	12
  6612  003E74  6F66               	movwf	(_menu_st+21)& (0+255),b
  6613                           
  6614                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6615  003E76  0E00               	movlw	0
  6616  003E78  6F68               	movwf	(_menu_st+23)& (0+255),b
  6617                           
  6618                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6619  003E7A  0E02               	movlw	2
  6620  003E7C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6621                           
  6622                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6623  003E7E  0E05               	movlw	5
  6624  003E80  6F51               	movwf	_menu_st& (0+255),b
  6625                           
  6626                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6627  003E82  0E13               	movlw	19
  6628  003E84  6F52               	movwf	(_menu_st+1)& (0+255),b
  6629                           
  6630                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6631  003E86  0E05               	movlw	5
  6632  003E88  D7B0               	goto	L39
  6633  003E8A                     l19820:
  6634                           
  6635                           ; BSR set to: 1
  6636                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6637  003E8A  0E0D               	movlw	13
  6638  003E8C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6639                           
  6640                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6641  003E8E  0E01               	movlw	1
  6642  003E90  6F67               	movwf	(_menu_st+22)& (0+255),b
  6643                           
  6644                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6645  003E92  0E0D               	movlw	13
  6646  003E94  6F51               	movwf	_menu_st& (0+255),b
  6647                           
  6648                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6649  003E96  0E12               	movlw	18
  6650  003E98  6F52               	movwf	(_menu_st+1)& (0+255),b
  6651                           
  6652                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6653  003E9A  0E00               	movlw	0
  6654  003E9C  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6655  003E9E  0E3C               	movlw	60
  6656  003EA0  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6657                           
  6658                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6659  003EA2  D048               	goto	l19830
  6660  003EA4                     l19822:
  6661                           
  6662                           ; BSR set to: 1
  6663                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6664  003EA4  0E05               	movlw	5
  6665  003EA6  6F51               	movwf	_menu_st& (0+255),b
  6666                           
  6667                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6668  003EA8  0E0C               	movlw	12
  6669  003EAA  6F52               	movwf	(_menu_st+1)& (0+255),b
  6670                           
  6671                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6672  003EAC  0E05               	movlw	5
  6673  003EAE  6F53               	movwf	(_menu_st+2)& (0+255),b
  6674                           
  6675                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6676  003EB0  0E0E               	movlw	14
  6677  003EB2  6F54               	movwf	(_menu_st+3)& (0+255),b
  6678                           
  6679                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6680  003EB4  0E22               	movlw	34
  6681  003EB6  6F55               	movwf	(_menu_st+4)& (0+255),b
  6682                           
  6683                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6684  003EB8  0E14               	movlw	20
  6685  003EBA                     L33:
  6686  003EBA  6F56               	movwf	(_menu_st+5)& (0+255),b
  6687                           
  6688                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6689  003EBC  D03B               	goto	l19830
  6690  003EBE                     l19824:
  6691                           
  6692                           ; BSR set to: 1
  6693                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6694  003EBE  0E12               	movlw	18
  6695  003EC0  6F51               	movwf	_menu_st& (0+255),b
  6696                           
  6697                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6698  003EC2  0E0E               	movlw	14
  6699  003EC4  6F52               	movwf	(_menu_st+1)& (0+255),b
  6700                           
  6701                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6702  003EC6  0E14               	movlw	20
  6703  003EC8  6F53               	movwf	(_menu_st+2)& (0+255),b
  6704                           
  6705                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6706  003ECA  0E15               	movlw	21
  6707  003ECC                     L38:
  6708  003ECC  6F54               	movwf	(_menu_st+3)& (0+255),b
  6709                           
  6710                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6711  003ECE  D032               	goto	l19830
  6712  003ED0                     l19828:
  6713                           
  6714                           ; BSR set to: 1
  6715  003ED0  5022               	movf	load_New_Menu@Menu^0,w,c
  6716  003ED2  6E20               	movwf	??_load_New_Menu^0,c
  6717  003ED4  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6718                           
  6719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6720                           ; Switch size 1, requested type "simple"
  6721                           ; Number of cases is 1, Range of values is 0 to 0
  6722                           ; switch strategies available:
  6723                           ; Name         Instructions Cycles
  6724                           ; simple_byte            4     3 (average)
  6725                           ;	Chosen strategy is simple_byte
  6726  003ED6  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6727  003ED8  0A00               	xorlw	0	; case 0
  6728  003EDA  A4D8               	btfss	status,2,c
  6729  003EDC  D02B               	goto	l19830
  6730                           
  6731                           ; BSR set to: 1
  6732                           ; Switch size 1, requested type "simple"
  6733                           ; Number of cases is 14, Range of values is 0 to 13
  6734                           ; switch strategies available:
  6735                           ; Name         Instructions Cycles
  6736                           ; simple_byte           43    22 (average)
  6737                           ;	Chosen strategy is simple_byte
  6738  003EDE  5020               	movf	??_load_New_Menu^0,w,c
  6739  003EE0  0A00               	xorlw	0	; case 0
  6740  003EE2  B4D8               	btfsc	status,2,c
  6741  003EE4  D6FF               	goto	l19778
  6742  003EE6  0A01               	xorlw	1	; case 1
  6743  003EE8  B4D8               	btfsc	status,2,c
  6744  003EEA  D71D               	goto	l19790
  6745  003EEC  0A03               	xorlw	3	; case 2
  6746  003EEE  B4D8               	btfsc	status,2,c
  6747  003EF0  D7E6               	goto	l19824
  6748  003EF2  0A01               	xorlw	1	; case 3
  6749  003EF4  B4D8               	btfsc	status,2,c
  6750  003EF6  D7D6               	goto	l19822
  6751  003EF8  0A07               	xorlw	7	; case 4
  6752  003EFA  B4D8               	btfsc	status,2,c
  6753  003EFC  D735               	goto	l19802
  6754  003EFE  0A01               	xorlw	1	; case 5
  6755  003F00  B4D8               	btfsc	status,2,c
  6756  003F02  D748               	goto	l19804
  6757  003F04  0A03               	xorlw	3	; case 6
  6758  003F06  B4D8               	btfsc	status,2,c
  6759  003F08  D753               	goto	l19806
  6760  003F0A  0A01               	xorlw	1	; case 7
  6761  003F0C  B4D8               	btfsc	status,2,c
  6762  003F0E  D762               	goto	l19808
  6763  003F10  0A0F               	xorlw	15	; case 8
  6764  003F12  B4D8               	btfsc	status,2,c
  6765  003F14  D76D               	goto	l19810
  6766  003F16  0A01               	xorlw	1	; case 9
  6767  003F18  B4D8               	btfsc	status,2,c
  6768  003F1A  D778               	goto	l19812
  6769  003F1C  0A03               	xorlw	3	; case 10
  6770  003F1E  B4D8               	btfsc	status,2,c
  6771  003F20  D78C               	goto	l19814
  6772  003F22  0A01               	xorlw	1	; case 11
  6773  003F24  B4D8               	btfsc	status,2,c
  6774  003F26  D797               	goto	l19816
  6775  003F28  0A07               	xorlw	7	; case 12
  6776  003F2A  B4D8               	btfsc	status,2,c
  6777  003F2C  D7A2               	goto	l19818
  6778  003F2E  0A01               	xorlw	1	; case 13
  6779  003F30  B4D8               	btfsc	status,2,c
  6780  003F32  D7AB               	goto	l19820
  6781  003F34                     l19830:
  6782                           
  6783                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6784  003F34  0101               	movlb	1	; () banked
  6785  003F36  5167               	movf	(_menu_st+22)& (0+255),w,b
  6786  003F38  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6787  003F3A  A0D8               	btfss	status,0,c
  6788  003F3C  D002               	goto	l19834
  6789                           
  6790                           ; BSR set to: 1
  6791                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6792  003F3E  0E00               	movlw	0
  6793  003F40  6F68               	movwf	(_menu_st+23)& (0+255),b
  6794  003F42                     l19834:
  6795                           
  6796                           ; BSR set to: 1
  6797                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6798  003F42  0E0D               	movlw	13
  6799  003F44  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6800  003F46  A4D8               	btfss	status,2,c
  6801  003F48  D01A               	goto	l19838
  6802                           
  6803                           ; BSR set to: 1
  6804                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6805  003F4A  5168               	movf	(_menu_st+23)& (0+255),w,b
  6806  003F4C  0D02               	mullw	2
  6807  003F4E  0E52               	movlw	low (_menu_st+1)
  6808  003F50  24F3               	addwf	243,w,c
  6809  003F52  6ED9               	movwf	fsr2l,c
  6810  003F54  0E01               	movlw	high (_menu_st+1)
  6811  003F56  20F4               	addwfc	prodh,w,c
  6812  003F58  6EDA               	movwf	fsr2h,c
  6813  003F5A  50DF               	movf	indf2,w,c
  6814  003F5C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  6815  003F5E  0E00               	movlw	0
  6816  003F60  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  6817  003F62  0E0A               	movlw	10
  6818  003F64  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  6819  003F66  5168               	movf	(_menu_st+23)& (0+255),w,b
  6820  003F68  0D02               	mullw	2
  6821  003F6A  0E51               	movlw	low _menu_st
  6822  003F6C  24F3               	addwf	243,w,c
  6823  003F6E  6ED9               	movwf	fsr2l,c
  6824  003F70  0E01               	movlw	high _menu_st
  6825  003F72  20F4               	addwfc	prodh,w,c
  6826  003F74  6EDA               	movwf	fsr2h,c
  6827  003F76  50DF               	movf	indf2,w,c
  6828  003F78  EC54  F048         	call	_SetSegmentValueIntermitentMain
  6829                           
  6830                           ;sm_MenuConfiguration_MC50.c: 640:     }
  6831  003F7C  0012               	return	
  6832  003F7E                     l19838:
  6833                           
  6834                           ; BSR set to: 1
  6835                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  6836  003F7E  5168               	movf	(_menu_st+23)& (0+255),w,b
  6837  003F80  0D02               	mullw	2
  6838  003F82  0E52               	movlw	low (_menu_st+1)
  6839  003F84  24F3               	addwf	243,w,c
  6840  003F86  6ED9               	movwf	fsr2l,c
  6841  003F88  0E01               	movlw	high (_menu_st+1)
  6842  003F8A  20F4               	addwfc	prodh,w,c
  6843  003F8C  6EDA               	movwf	fsr2h,c
  6844  003F8E  50DF               	movf	indf2,w,c
  6845  003F90  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  6846  003F92  5168               	movf	(_menu_st+23)& (0+255),w,b
  6847  003F94  0D02               	mullw	2
  6848  003F96  0E51               	movlw	low _menu_st
  6849  003F98  24F3               	addwf	243,w,c
  6850  003F9A  6ED9               	movwf	fsr2l,c
  6851  003F9C  0E01               	movlw	high _menu_st
  6852  003F9E  20F4               	addwfc	prodh,w,c
  6853  003FA0  6EDA               	movwf	fsr2h,c
  6854  003FA2  50DF               	movf	indf2,w,c
  6855  003FA4  ECB9  F047         	call	_SetSegmentValueMain
  6856  003FA8  0012               	return		;funcret
  6857  003FAA                     __end_of_load_New_Menu:
  6858                           	callstack 0
  6859                           
  6860 ;; *************** function _InitReceiver *****************
  6861 ;; Defined at:
  6862 ;;		line 207 in file "inputs_MC50.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  1    wreg      void 
  6869 ;; Registers used:
  6870 ;;		wreg, status,2
  6871 ;; Tracked objects:
  6872 ;;		On entry : 30/F
  6873 ;;		On exit  : 3F/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6880 ;;Total ram usage:        0 bytes
  6881 ;; Hardware stack levels used: 1
  6882 ;; Hardware stack levels required when called: 4
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_main
  6887 ;;		_setValueToEdit
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text5
  6892  008F58                     __ptext5:
  6893                           	callstack 0
  6894  008F58                     _InitReceiver:
  6895                           	callstack 23
  6896                           
  6897                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  6898                           
  6899                           ;incstack = 0
  6900  008F58  010E               	movlb	14	; () banked
  6901  008F5A  9BCA               	bcf	202,5,b	;volatile
  6902                           
  6903                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  6904  008F5C  8BC2               	bsf	194,5,b	;volatile
  6905                           
  6906                           ;inputs_MC50.c: 210:     GIE = 1;
  6907  008F5E  8EF2               	bsf	4082,7,c	;volatile
  6908                           
  6909                           ; BSR set to: 14
  6910                           ;inputs_MC50.c: 211:     RFstate = 0;
  6911  008F60  0E00               	movlw	0
  6912  008F62  0101               	movlb	1	; () banked
  6913  008F64  6F9A               	movwf	_RFstate& (0+255),b
  6914                           
  6915                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  6916  008F66  0E00               	movlw	0
  6917  008F68  0100               	movlb	0	; () banked
  6918  008F6A  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  6919                           
  6920                           ;inputs_MC50.c: 213:     RFFull = 0;
  6921  008F6C  0E00               	movlw	0
  6922  008F6E  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  6923                           
  6924                           ; BSR set to: 0
  6925  008F70  0012               	return		;funcret
  6926  008F72                     __end_of_InitReceiver:
  6927                           	callstack 0
  6928                           
  6929 ;; *************** function _controlSelectRemote *****************
  6930 ;; Defined at:
  6931 ;;		line 1090 in file "sm_MenuConfiguration_MC50.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;		None
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;  typeRemote      1   11[BANK0 ] enum E10392
  6936 ;;  pos             1   10[BANK0 ] unsigned char 
  6937 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  6938 ;;  temp            1   16[BANK0 ] unsigned char 
  6939 ;;  validSerial     1    9[BANK0 ] unsigned char 
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  1    wreg      void 
  6942 ;; Registers used:
  6943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6944 ;; Tracked objects:
  6945 ;;		On entry : 3F/1
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6950 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6951 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6952 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6953 ;;Total ram usage:        9 bytes
  6954 ;; Hardware stack levels used: 1
  6955 ;; Hardware stack levels required when called: 14
  6956 ;; This function calls:
  6957 ;;		_ClearFlag_rfCMD
  6958 ;;		_RemoveSerial
  6959 ;;		_SaveNVM_VarSystem
  6960 ;;		_SetSegmentValue
  6961 ;;		_SetSegmentValueIntermitentMain
  6962 ;;		_SetSegmentValueMain
  6963 ;;		___awdiv
  6964 ;;		___lbmod
  6965 ;;		_cmdMemoryIsEmpty
  6966 ;;		_getSerialCmd
  6967 ;;		_getTypeRemote
  6968 ;;		_saveNewSerial
  6969 ;;		_sm_send_event
  6970 ;;		_validateRemoteSerialNumber
  6971 ;; This function is called by:
  6972 ;;		_sm_execute_menuConfiguration
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text6
  6977  003298                     __ptext6:
  6978                           	callstack 0
  6979  003298                     _controlSelectRemote:
  6980                           	callstack 14
  6981                           
  6982                           ; BSR set to: 1
  6983                           ;sm_MenuConfiguration_MC50.c: 1091:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1092:     char temp=getSerialCmd(&tempSerial);
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;incstack = 0
  6987  003298  0EE4               	movlw	low controlSelectRemote@tempSerial
  6988  00329A  6E1B               	movwf	getSerialCmd@serial^0,c
  6989  00329C  EC08  F043         	call	_getSerialCmd	;wreg free
  6990  0032A0  0100               	movlb	0	; () banked
  6991  0032A2  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;sm_MenuConfiguration_MC50.c: 1093:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          094:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  6995  0032A4  0101               	movlb	1	; () banked
  6996  0032A6  BFAB               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  6997  0032A8  D008               	goto	u23820
  6998  0032AA  51AB               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  6999  0032AC  E103               	bnz	u23810
  7000  0032AE  05AA               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7001  0032B0  A0D8               	btfss	status,0,c
  7002  0032B2  D003               	goto	u23820
  7003  0032B4                     u23810:
  7004                           
  7005                           ; BSR set to: 1
  7006  0032B4  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7007  0032B6  A4D8               	btfss	status,2,c
  7008  0032B8  D028               	goto	l20898
  7009  0032BA                     u23820:
  7010                           
  7011                           ; BSR set to: 1
  7012                           ;sm_MenuConfiguration_MC50.c: 1095:     {;sm_MenuConfiguration_MC50.c: 1096:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7013  0032BA  0EEF               	movlw	low _main_stateMachine
  7014  0032BC  6E12               	movwf	sm_send_event@psm^0,c
  7015  0032BE  0E01               	movlw	high _main_stateMachine
  7016  0032C0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7017  0032C2  0E00               	movlw	0
  7018  0032C4  6E15               	movwf	(sm_send_event@event+1)^0,c
  7019  0032C6  0E07               	movlw	7
  7020  0032C8  6E14               	movwf	sm_send_event@event^0,c
  7021  0032CA  EC01  F041         	call	_sm_send_event	;wreg free
  7022                           
  7023                           ;sm_MenuConfiguration_MC50.c: 1097:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7024  0032CE  0EBB               	movlw	low _menuConfiguration_stateMachine
  7025  0032D0  6E12               	movwf	sm_send_event@psm^0,c
  7026  0032D2  0E02               	movlw	high _menuConfiguration_stateMachine
  7027  0032D4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7028  0032D6  0E00               	movlw	0
  7029  0032D8  6E15               	movwf	(sm_send_event@event+1)^0,c
  7030  0032DA  0E03               	movlw	3
  7031  0032DC  6E14               	movwf	sm_send_event@event^0,c
  7032  0032DE  EC01  F041         	call	_sm_send_event	;wreg free
  7033                           
  7034                           ;sm_MenuConfiguration_MC50.c: 1098:         var_sys.DistanceProgrammingActive=NO;
  7035  0032E2  0E00               	movlw	0
  7036  0032E4  0101               	movlb	1	; () banked
  7037  0032E6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7038                           
  7039                           ; BSR set to: 1
  7040                           ;sm_MenuConfiguration_MC50.c: 1099:         var_sys.ProgrammingDistanceIs=NoCMD;
  7041  0032E8  0E00               	movlw	0
  7042  0032EA  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7043                           
  7044                           ; BSR set to: 1
  7045                           ;sm_MenuConfiguration_MC50.c: 1100:         SetSegmentValueMain(dMinus,dMinus);
  7046  0032EC  0E18               	movlw	24
  7047  0032EE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7048  0032F0  0E18               	movlw	24
  7049  0032F2  ECB9  F047         	call	_SetSegmentValueMain
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;sm_MenuConfiguration_MC50.c: 1101:         ClearFlag_rfCMD();
  7053  0032F6  EC09  F049         	call	_ClearFlag_rfCMD	;wreg free
  7054                           
  7055                           ;sm_MenuConfiguration_MC50.c: 1102:         button_struct.processed=1;
  7056  0032FA  0E01               	movlw	1
  7057  0032FC  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7058                           
  7059                           ;sm_MenuConfiguration_MC50.c: 1103:         ts_system.timeoutMenu = 0;
  7060  0032FE  0E00               	movlw	0
  7061  003300  0101               	movlb	1	; () banked
  7062  003302  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7063  003304  0E00               	movlw	0
  7064  003306  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7065                           
  7066                           ;sm_MenuConfiguration_MC50.c: 1105:     }
  7067  003308  0012               	return	
  7068  00330A                     l20898:
  7069                           
  7070                           ; BSR set to: 1
  7071  00330A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7072  00330C  A4D8               	btfss	status,2,c
  7073  00330E  D05B               	goto	l20920
  7074                           
  7075                           ; BSR set to: 1
  7076  003310  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7077  003312  B4D8               	btfsc	status,2,c
  7078  003314  D058               	goto	l20920
  7079                           
  7080                           ; BSR set to: 1
  7081                           ;sm_MenuConfiguration_MC50.c: 1107:     {;sm_MenuConfiguration_MC50.c: 1108:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7082  003316  0E00               	movlw	0
  7083  003318  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7084  00331A  0E64               	movlw	100
  7085  00331C  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7086                           
  7087                           ; BSR set to: 1
  7088                           ;sm_MenuConfiguration_MC50.c: 1109:         if(edit_Param.tempValue<=edit_Param.Min)
  7089  00331E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7090  003320  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7091  003322  A0D8               	btfss	status,0,c
  7092  003324  D003               	goto	l20908
  7093                           
  7094                           ; BSR set to: 1
  7095                           ;sm_MenuConfiguration_MC50.c: 1110:         {;sm_MenuConfiguration_MC50.c: 1111:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7096  003326  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7097                           
  7098                           ;sm_MenuConfiguration_MC50.c: 1112:         }
  7099  00332A  D001               	goto	l20910
  7100  00332C                     l20908:
  7101                           
  7102                           ; BSR set to: 1
  7103                           ;sm_MenuConfiguration_MC50.c: 1114:         {;sm_MenuConfiguration_MC50.c: 1115:        
      +                               edit_Param.tempValue--;
  7104  00332C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7105  00332E                     l20910:
  7106                           
  7107                           ; BSR set to: 1
  7108                           ;sm_MenuConfiguration_MC50.c: 1117:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7109  00332E  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7110  003332  5168               	movf	(_menu_st+23)& (0+255),w,b
  7111  003334  EC90  F03A         	call	_cmdMemoryIsEmpty
  7112  003338  06E8               	decf	wreg,f,c
  7113  00333A  B4D8               	btfsc	status,2,c
  7114  00333C  D004               	goto	u23870
  7115  00333E  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7116  003340  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7117  003342  A4D8               	btfss	status,2,c
  7118  003344  D021               	goto	l20916
  7119  003346                     u23870:
  7120                           
  7121                           ;sm_MenuConfiguration_MC50.c: 1118:         {;sm_MenuConfiguration_MC50.c: 1119:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7122  003346  0E0A               	movlw	10
  7123  003348  6E10               	movwf	___lbmod@divisor^0,c
  7124  00334A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7125  00334C  EC81  F046         	call	___lbmod
  7126  003350  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7127  003352  0E00               	movlw	0
  7128  003354  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7129  003356  0E14               	movlw	20
  7130  003358  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7131  00335A  0E0A               	movlw	10
  7132  00335C  6E10               	movwf	___lbmod@divisor^0,c
  7133  00335E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7134  003360  EC81  F046         	call	___lbmod
  7135  003364  0100               	movlb	0	; () banked
  7136  003366  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7137  003368  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7138  00336A  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7139  00336C  6E14               	movwf	___awdiv@dividend^0,c
  7140  00336E  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7141  003370  A0D8               	btfss	status,0,c
  7142  003372  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7143  003374  0E00               	movlw	0
  7144  003376  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7145  003378  0E0A               	movlw	10
  7146  00337A  6E16               	movwf	___awdiv@divisor^0,c
  7147  00337C  EC7A  F03C         	call	___awdiv	;wreg free
  7148  003380  5014               	movf	?___awdiv^0,w,c
  7149  003382  EC54  F048         	call	_SetSegmentValueIntermitentMain
  7150                           
  7151                           ;sm_MenuConfiguration_MC50.c: 1120:         }
  7152  003386  D01C               	goto	l20918
  7153  003388                     l20916:
  7154                           
  7155                           ;sm_MenuConfiguration_MC50.c: 1122:         {;sm_MenuConfiguration_MC50.c: 1123:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7156  003388  0E0A               	movlw	10
  7157  00338A  6E10               	movwf	___lbmod@divisor^0,c
  7158  00338C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7159  00338E  EC81  F046         	call	___lbmod
  7160  003392  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7161  003394  0E0A               	movlw	10
  7162  003396  6E10               	movwf	___lbmod@divisor^0,c
  7163  003398  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7164  00339A  EC81  F046         	call	___lbmod
  7165  00339E  0100               	movlb	0	; () banked
  7166  0033A0  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7167  0033A2  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7168  0033A4  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7169  0033A6  6E14               	movwf	___awdiv@dividend^0,c
  7170  0033A8  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7171  0033AA  A0D8               	btfss	status,0,c
  7172  0033AC  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7173  0033AE  0E00               	movlw	0
  7174  0033B0  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7175  0033B2  0E0A               	movlw	10
  7176  0033B4  6E16               	movwf	___awdiv@divisor^0,c
  7177  0033B6  EC7A  F03C         	call	___awdiv	;wreg free
  7178  0033BA  5014               	movf	?___awdiv^0,w,c
  7179  0033BC  ECB9  F047         	call	_SetSegmentValueMain
  7180  0033C0                     l20918:
  7181                           
  7182                           ;sm_MenuConfiguration_MC50.c: 1125:         button_struct.processed=1;
  7183  0033C0  0E01               	movlw	1
  7184  0033C2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7185                           
  7186                           ;sm_MenuConfiguration_MC50.c: 1126:     }
  7187  0033C4  0012               	return	
  7188  0033C6                     l20920:
  7189                           
  7190                           ; BSR set to: 1
  7191  0033C6  0E17               	movlw	23
  7192  0033C8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7193  0033CA  A4D8               	btfss	status,2,c
  7194  0033CC  D057               	goto	l20942
  7195                           
  7196                           ; BSR set to: 1
  7197  0033CE  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7198  0033D0  B4D8               	btfsc	status,2,c
  7199  0033D2  D054               	goto	l20942
  7200                           
  7201                           ; BSR set to: 1
  7202                           ;sm_MenuConfiguration_MC50.c: 1128:     {;sm_MenuConfiguration_MC50.c: 1129:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7203  0033D4  0E00               	movlw	0
  7204  0033D6  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7205  0033D8  0E64               	movlw	100
  7206  0033DA  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7207                           
  7208                           ; BSR set to: 1
  7209                           ;sm_MenuConfiguration_MC50.c: 1130:         edit_Param.tempValue++;
  7210  0033DC  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7211                           
  7212                           ; BSR set to: 1
  7213                           ;sm_MenuConfiguration_MC50.c: 1131:         if(edit_Param.tempValue>edit_Param.Max)
  7214  0033DE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7215  0033E0  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7216  0033E2  A0D8               	btfss	status,0,c
  7217                           
  7218                           ; BSR set to: 1
  7219                           ;sm_MenuConfiguration_MC50.c: 1132:         {;sm_MenuConfiguration_MC50.c: 1133:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7220  0033E4  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7221                           
  7222                           ; BSR set to: 1
  7223                           ;sm_MenuConfiguration_MC50.c: 1135:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7224  0033E8  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7225  0033EC  5168               	movf	(_menu_st+23)& (0+255),w,b
  7226  0033EE  EC90  F03A         	call	_cmdMemoryIsEmpty
  7227  0033F2  06E8               	decf	wreg,f,c
  7228  0033F4  B4D8               	btfsc	status,2,c
  7229  0033F6  D004               	goto	u23920
  7230  0033F8  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7231  0033FA  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7232  0033FC  A4D8               	btfss	status,2,c
  7233  0033FE  D021               	goto	l20938
  7234  003400                     u23920:
  7235                           
  7236                           ;sm_MenuConfiguration_MC50.c: 1136:         {;sm_MenuConfiguration_MC50.c: 1137:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7237  003400  0E0A               	movlw	10
  7238  003402  6E10               	movwf	___lbmod@divisor^0,c
  7239  003404  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7240  003406  EC81  F046         	call	___lbmod
  7241  00340A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7242  00340C  0E00               	movlw	0
  7243  00340E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7244  003410  0E14               	movlw	20
  7245  003412  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7246  003414  0E0A               	movlw	10
  7247  003416  6E10               	movwf	___lbmod@divisor^0,c
  7248  003418  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7249  00341A  EC81  F046         	call	___lbmod
  7250  00341E  0100               	movlb	0	; () banked
  7251  003420  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7252  003422  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7253  003424  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7254  003426  6E14               	movwf	___awdiv@dividend^0,c
  7255  003428  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7256  00342A  A0D8               	btfss	status,0,c
  7257  00342C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7258  00342E  0E00               	movlw	0
  7259  003430  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7260  003432  0E0A               	movlw	10
  7261  003434  6E16               	movwf	___awdiv@divisor^0,c
  7262  003436  EC7A  F03C         	call	___awdiv	;wreg free
  7263  00343A  5014               	movf	?___awdiv^0,w,c
  7264  00343C  EC54  F048         	call	_SetSegmentValueIntermitentMain
  7265                           
  7266                           ;sm_MenuConfiguration_MC50.c: 1138:         }
  7267  003440  D7BF               	goto	l20918
  7268  003442                     l20938:
  7269                           
  7270                           ;sm_MenuConfiguration_MC50.c: 1140:         {;sm_MenuConfiguration_MC50.c: 1141:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7271  003442  0E0A               	movlw	10
  7272  003444  6E10               	movwf	___lbmod@divisor^0,c
  7273  003446  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7274  003448  EC81  F046         	call	___lbmod
  7275  00344C  6E1C               	movwf	SetSegmentValue@d2^0,c
  7276  00344E  0E0A               	movlw	10
  7277  003450  6E10               	movwf	___lbmod@divisor^0,c
  7278  003452  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7279  003454  EC81  F046         	call	___lbmod
  7280  003458  0100               	movlb	0	; () banked
  7281  00345A  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7282  00345C  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7283  00345E  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7284  003460  6E14               	movwf	___awdiv@dividend^0,c
  7285  003462  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7286  003464  A0D8               	btfss	status,0,c
  7287  003466  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7288  003468  0E00               	movlw	0
  7289  00346A  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7290  00346C  0E0A               	movlw	10
  7291  00346E  6E16               	movwf	___awdiv@divisor^0,c
  7292  003470  EC7A  F03C         	call	___awdiv	;wreg free
  7293  003474  5014               	movf	?___awdiv^0,w,c
  7294  003476  ECD3  F047         	call	_SetSegmentValue
  7295  00347A  D7A2               	goto	l20918
  7296  00347C                     l20942:
  7297                           
  7298                           ; BSR set to: 1
  7299  00347C  0E63               	movlw	99
  7300  00347E  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7301  003480  D01A               	goto	l20952
  7302                           
  7303                           ; BSR set to: 1
  7304  003482  0E63               	movlw	99
  7305  003484  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7306  003486  D017               	goto	l20952
  7307                           
  7308                           ; BSR set to: 1
  7309                           ;sm_MenuConfiguration_MC50.c: 1146:     {;sm_MenuConfiguration_MC50.c: 1147:         if(
      +                          menu_st.parameterSelected==0)
  7310  003488  5168               	movf	(_menu_st+23)& (0+255),w,b
  7311  00348A  A4D8               	btfss	status,2,c
  7312  00348C  D00A               	goto	l20950
  7313                           
  7314                           ; BSR set to: 1
  7315                           ;sm_MenuConfiguration_MC50.c: 1148:         {;sm_MenuConfiguration_MC50.c: 1149:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7316  00348E  0E13               	movlw	19
  7317  003490  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7318  003492  0E00               	movlw	0
  7319  003494  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7320  003496  0E0A               	movlw	10
  7321  003498  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7322  00349A  0E12               	movlw	18
  7323  00349C  EC54  F048         	call	_SetSegmentValueIntermitentMain
  7324                           
  7325                           ;sm_MenuConfiguration_MC50.c: 1150:         }
  7326  0034A0  0012               	return	
  7327  0034A2                     l20950:
  7328                           
  7329                           ; BSR set to: 1
  7330                           ;sm_MenuConfiguration_MC50.c: 1152:         {;sm_MenuConfiguration_MC50.c: 1153:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7331  0034A2  0E10               	movlw	16
  7332  0034A4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7333  0034A6  0E00               	movlw	0
  7334  0034A8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7335  0034AA  0E0A               	movlw	10
  7336  0034AC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7337  0034AE  0E12               	movlw	18
  7338  0034B0  EC54  F048         	call	_SetSegmentValueIntermitentMain
  7339  0034B4  0012               	return	
  7340  0034B6                     l20952:
  7341                           
  7342                           ; BSR set to: 1
  7343  0034B6  0100               	movlb	0	; () banked
  7344  0034B8  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7345  0034BA  B4D8               	btfsc	status,2,c
  7346  0034BC  D08E               	goto	l21004
  7347                           
  7348                           ; BSR set to: 0
  7349  0034BE  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7350  0034C0  B4D8               	btfsc	status,2,c
  7351  0034C2  D00F               	goto	u24010
  7352                           
  7353                           ; BSR set to: 0
  7354  0034C4  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7355  0034C6  B4D8               	btfsc	status,2,c
  7356  0034C8  D00C               	goto	u24010
  7357                           
  7358                           ; BSR set to: 0
  7359  0034CA  0E02               	movlw	2
  7360  0034CC  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7361  0034CE  B4D8               	btfsc	status,2,c
  7362  0034D0  D008               	goto	u24010
  7363                           
  7364                           ; BSR set to: 0
  7365  0034D2  0E04               	movlw	4
  7366  0034D4  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7367  0034D6  B4D8               	btfsc	status,2,c
  7368  0034D8  D004               	goto	u24010
  7369                           
  7370                           ; BSR set to: 0
  7371  0034DA  0E08               	movlw	8
  7372  0034DC  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7373  0034DE  A4D8               	btfss	status,2,c
  7374  0034E0  D07C               	goto	l21004
  7375  0034E2                     u24010:
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;sm_MenuConfiguration_MC50.c: 1157:     {;sm_MenuConfiguration_MC50.c: 1158:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1159:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7379  0034E2  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7380  0034E6  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7381  0034EA  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7382  0034EE  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7383  0034F2  0E00               	movlw	0
  7384  0034F4  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7385  0034F6  0EE2               	movlw	low controlSelectRemote@pos
  7386  0034F8  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7387  0034FA  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7388  0034FC  EC59  F02A         	call	_validateRemoteSerialNumber	;wreg free
  7389  003500  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;sm_MenuConfiguration_MC50.c: 1161:         TypeRemote_st typeRemote = getTypeRemote();
  7393  003502  EC06  F049         	call	_getTypeRemote	;wreg free
  7394  003506  0100               	movlb	0	; () banked
  7395  003508  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;sm_MenuConfiguration_MC50.c: 1162:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7399  00350A  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7400  00350C  A4D8               	btfss	status,2,c
  7401  00350E  0012               	return	
  7402                           
  7403                           ; BSR set to: 0
  7404  003510  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7405  003512  B4D8               	btfsc	status,2,c
  7406  003514  D003               	goto	u24040
  7407                           
  7408                           ; BSR set to: 0
  7409  003516  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7410  003518  A4D8               	btfss	status,2,c
  7411  00351A  0012               	return	
  7412  00351C                     u24040:
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;sm_MenuConfiguration_MC50.c: 1163:         {;sm_MenuConfiguration_MC50.c: 1164:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7416  00351C  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7417  003520  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7418  003524  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7419  003528  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7420  00352C  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7421  003530  0101               	movlb	1	; () banked
  7422  003532  5168               	movf	(_menu_st+23)& (0+255),w,b
  7423  003534  EC26  F03F         	call	_saveNewSerial
  7424                           
  7425                           ;sm_MenuConfiguration_MC50.c: 1165:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7426  003538  0EBB               	movlw	low _menuConfiguration_stateMachine
  7427  00353A  6E12               	movwf	sm_send_event@psm^0,c
  7428  00353C  0E02               	movlw	high _menuConfiguration_stateMachine
  7429  00353E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7430  003540  0E00               	movlw	0
  7431  003542  6E15               	movwf	(sm_send_event@event+1)^0,c
  7432  003544  0E08               	movlw	8
  7433  003546  6E14               	movwf	sm_send_event@event^0,c
  7434  003548  EC01  F041         	call	_sm_send_event	;wreg free
  7435                           
  7436                           ;sm_MenuConfiguration_MC50.c: 1166:             var_sys.DistanceProgrammingActive=NO;
  7437  00354C  0E00               	movlw	0
  7438  00354E  0101               	movlb	1	; () banked
  7439  003550  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7440                           
  7441                           ; BSR set to: 1
  7442                           ;sm_MenuConfiguration_MC50.c: 1167:             var_sys.ProgrammingDistanceIs=NoCMD;
  7443  003552  0E00               	movlw	0
  7444  003554  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7445                           
  7446                           ; BSR set to: 1
  7447                           ;sm_MenuConfiguration_MC50.c: 1168:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7448  003556  0E00               	movlw	0
  7449  003558  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7450  00355A  0E28               	movlw	40
  7451  00355C  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7452                           
  7453                           ; BSR set to: 1
  7454                           ;sm_MenuConfiguration_MC50.c: 1169:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7455  00355E  0E0A               	movlw	10
  7456  003560  6E10               	movwf	___lbmod@divisor^0,c
  7457  003562  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7458  003564  EC81  F046         	call	___lbmod
  7459  003568  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7460  00356A  0E00               	movlw	0
  7461  00356C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7462  00356E  0E04               	movlw	4
  7463  003570  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7464  003572  0E0A               	movlw	10
  7465  003574  6E10               	movwf	___lbmod@divisor^0,c
  7466  003576  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7467  003578  EC81  F046         	call	___lbmod
  7468  00357C  0100               	movlb	0	; () banked
  7469  00357E  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7470  003580  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7471  003582  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7472  003584  6E14               	movwf	___awdiv@dividend^0,c
  7473  003586  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7474  003588  A0D8               	btfss	status,0,c
  7475  00358A  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7476  00358C  0E00               	movlw	0
  7477  00358E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7478  003590  0E0A               	movlw	10
  7479  003592  6E16               	movwf	___awdiv@divisor^0,c
  7480  003594  EC7A  F03C         	call	___awdiv	;wreg free
  7481  003598  5014               	movf	?___awdiv^0,w,c
  7482  00359A  EC54  F048         	call	_SetSegmentValueIntermitentMain
  7483                           
  7484                           ;sm_MenuConfiguration_MC50.c: 1170:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7485  00359E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7486  0035A0  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7487  0035A2  B4D8               	btfsc	status,2,c
  7488  0035A4  D003               	goto	u24060
  7489  0035A6  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7490  0035A8  A4D8               	btfss	status,2,c
  7491  0035AA  0012               	return	
  7492  0035AC                     u24060:
  7493                           
  7494                           ;sm_MenuConfiguration_MC50.c: 1171:             {;sm_MenuConfiguration_MC50.c: 1175:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesFull==0
      +                           && typeRemote==Keeloq_RollingCode)
  7495  0035AC  0100               	movlb	0	; () banked
  7496  0035AE  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7497  0035B0  A4D8               	btfss	status,2,c
  7498  0035B2  D008               	goto	l20998
  7499                           
  7500                           ; BSR set to: 0
  7501  0035B4  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7502  0035B6  A4D8               	btfss	status,2,c
  7503  0035B8  D005               	goto	l20998
  7504                           
  7505                           ; BSR set to: 0
  7506  0035BA  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7507  0035BC  A4D8               	btfss	status,2,c
  7508  0035BE  D002               	goto	l20998
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;sm_MenuConfiguration_MC50.c: 1176:                 {;sm_MenuConfiguration_MC50.c: 1178:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7512  0035C0  0E01               	movlw	1
  7513  0035C2  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7514  0035C4                     l20998:
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;sm_MenuConfiguration_MC50.c: 1182:                 edit_Param.tempValue++;
  7518  0035C4  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;sm_MenuConfiguration_MC50.c: 1183:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7522  0035C6  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7523  0035CA  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7524  0035CE  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;sm_MenuConfiguration_MC50.c: 1184:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7528  0035D2  0E02               	movlw	2
  7529  0035D4  ECE2  F044         	call	_SaveNVM_VarSystem
  7530  0035D8  0012               	return	
  7531  0035DA                     l21004:
  7532                           
  7533                           ; BSR set to: 0
  7534  0035DA  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7535  0035DC  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7536  0035DE  B4D8               	btfsc	status,2,c
  7537  0035E0  0012               	return	
  7538                           
  7539                           ; BSR set to: 0
  7540  0035E2  0E27               	movlw	39
  7541  0035E4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7542  0035E6  A4D8               	btfss	status,2,c
  7543  0035E8  0012               	return	
  7544                           
  7545                           ; BSR set to: 0
  7546  0035EA  0E27               	movlw	39
  7547  0035EC  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7548  0035EE  0012               	return	
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;sm_MenuConfiguration_MC50.c: 1191:     {;sm_MenuConfiguration_MC50.c: 1192:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7552  0035F0  0E00               	movlw	0
  7553  0035F2  0101               	movlb	1	; () banked
  7554  0035F4  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7555  0035F6  0E64               	movlw	100
  7556  0035F8  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7557                           
  7558                           ; BSR set to: 1
  7559                           ;sm_MenuConfiguration_MC50.c: 1193:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7560  0035FA  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7561  0035FE  5168               	movf	(_menu_st+23)& (0+255),w,b
  7562  003600  EC3F  F03D         	call	_RemoveSerial
  7563                           
  7564                           ;sm_MenuConfiguration_MC50.c: 1194:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7565  003604  0E0A               	movlw	10
  7566  003606  6E10               	movwf	___lbmod@divisor^0,c
  7567  003608  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7568  00360A  EC81  F046         	call	___lbmod
  7569  00360E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7570  003610  0E00               	movlw	0
  7571  003612  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7572  003614  0E14               	movlw	20
  7573  003616  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7574  003618  0E0A               	movlw	10
  7575  00361A  6E10               	movwf	___lbmod@divisor^0,c
  7576  00361C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7577  00361E  EC81  F046         	call	___lbmod
  7578  003622  0100               	movlb	0	; () banked
  7579  003624  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7580  003626  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7581  003628  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7582  00362A  6E14               	movwf	___awdiv@dividend^0,c
  7583  00362C  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7584  00362E  A0D8               	btfss	status,0,c
  7585  003630  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7586  003632  0E00               	movlw	0
  7587  003634  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7588  003636  0E0A               	movlw	10
  7589  003638  6E16               	movwf	___awdiv@divisor^0,c
  7590  00363A  EC7A  F03C         	call	___awdiv	;wreg free
  7591  00363E  5014               	movf	?___awdiv^0,w,c
  7592  003640  EC54  F048         	call	_SetSegmentValueIntermitentMain
  7593  003644  0012               	return	
  7594  003646                     __end_of_controlSelectRemote:
  7595                           	callstack 0
  7596                           
  7597 ;; *************** function _saveNewSerial *****************
  7598 ;; Defined at:
  7599 ;;		line 81 in file "controlMemory_MC50.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;  cmdType         1    wreg     unsigned char 
  7602 ;;  tempSerial      4    0[BANK0 ] unsigned long 
  7603 ;;  position        1    4[BANK0 ] unsigned char 
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;  cmdType         1   57[COMRAM] unsigned char 
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  1    wreg      void 
  7608 ;; Registers used:
  7609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7610 ;; Tracked objects:
  7611 ;;		On entry : 3F/1
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7615 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7617 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7618 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7619 ;;Total ram usage:        8 bytes
  7620 ;; Hardware stack levels used: 1
  7621 ;; Hardware stack levels required when called: 13
  7622 ;; This function calls:
  7623 ;;		_i2c_writeNBytes
  7624 ;; This function is called by:
  7625 ;;		_controlSelectRemote
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           	psect	text7
  7630  007E4C                     __ptext7:
  7631                           	callstack 0
  7632  007E4C                     _saveNewSerial:
  7633                           	callstack 14
  7634                           
  7635                           ;incstack = 0
  7636                           ;saveNewSerial@cmdType stored from wreg
  7637  007E4C  6E3A               	movwf	saveNewSerial@cmdType^0,c
  7638                           
  7639                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
  7640  007E4E  503A               	movf	saveNewSerial@cmdType^0,w,c
  7641  007E50  A4D8               	btfss	status,2,c
  7642  007E52  D01A               	goto	l19558
  7643                           
  7644                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
  7645  007E54  0100               	movlb	0	; () banked
  7646  007E56  51DC               	movf	saveNewSerial@position& (0+255),w,b
  7647  007E58  6FDD               	movwf	??_saveNewSerial& (0+255),b
  7648  007E5A  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
  7649  007E5C  90D8               	bcf	status,0,c
  7650  007E5E  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7651  007E60  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7652  007E62  90D8               	bcf	status,0,c
  7653  007E64  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7654  007E66  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7655  007E68  0E00               	movlw	0
  7656  007E6A  25DD               	addwf	??_saveNewSerial& (0+255),w,b
  7657  007E6C  6E22               	movwf	i2c_writeNBytes@reg^0,c
  7658  007E6E  0E02               	movlw	2
  7659  007E70  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
  7660  007E72  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  7661  007E74  0ED8               	movlw	low saveNewSerial@tempSerial
  7662  007E76  6E24               	movwf	i2c_writeNBytes@data^0,c
  7663  007E78  0E00               	movlw	0
  7664  007E7A  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  7665  007E7C  0E04               	movlw	4
  7666  007E7E  6E25               	movwf	i2c_writeNBytes@len^0,c
  7667  007E80  0E50               	movlw	80
  7668  007E82  ECEC  F03E         	call	_i2c_writeNBytes
  7669                           
  7670                           ;controlMemory_MC50.c: 87:     }
  7671  007E86  0012               	return	
  7672  007E88                     l19558:
  7673                           
  7674                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
  7675  007E88  0100               	movlb	0	; () banked
  7676  007E8A  51DC               	movf	saveNewSerial@position& (0+255),w,b
  7677  007E8C  6FDD               	movwf	??_saveNewSerial& (0+255),b
  7678  007E8E  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
  7679  007E90  90D8               	bcf	status,0,c
  7680  007E92  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7681  007E94  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7682  007E96  90D8               	bcf	status,0,c
  7683  007E98  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7684  007E9A  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7685  007E9C  0E00               	movlw	0
  7686  007E9E  25DD               	addwf	??_saveNewSerial& (0+255),w,b
  7687  007EA0  6E22               	movwf	i2c_writeNBytes@reg^0,c
  7688  007EA2  0E05               	movlw	5
  7689  007EA4  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
  7690  007EA6  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  7691  007EA8  0ED8               	movlw	low saveNewSerial@tempSerial
  7692  007EAA  6E24               	movwf	i2c_writeNBytes@data^0,c
  7693  007EAC  0E00               	movlw	0
  7694  007EAE  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  7695  007EB0  0E04               	movlw	4
  7696  007EB2  6E25               	movwf	i2c_writeNBytes@len^0,c
  7697  007EB4  0E50               	movlw	80
  7698  007EB6  ECEC  F03E         	call	_i2c_writeNBytes
  7699  007EBA  0012               	return		;funcret
  7700  007EBC                     __end_of_saveNewSerial:
  7701                           	callstack 0
  7702                           
  7703 ;; *************** function _getTypeRemote *****************
  7704 ;; Defined at:
  7705 ;;		line 459 in file "inputs_MC50.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;		None
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;		None
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  1    wreg      enum E10559
  7712 ;; Registers used:
  7713 ;;		wreg, status,2
  7714 ;; Tracked objects:
  7715 ;;		On entry : 3F/0
  7716 ;;		On exit  : 3F/2
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7723 ;;Total ram usage:        0 bytes
  7724 ;; Hardware stack levels used: 1
  7725 ;; Hardware stack levels required when called: 4
  7726 ;; This function calls:
  7727 ;;		Nothing
  7728 ;; This function is called by:
  7729 ;;		_controlSelectRemote
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           	psect	text8
  7734  00920C                     __ptext8:
  7735                           	callstack 0
  7736  00920C                     _getTypeRemote:
  7737                           	callstack 23
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;inputs_MC50.c: 460:     return classic_data.type;
  7741                           
  7742                           ;incstack = 0
  7743  00920C  0102               	movlb	2	; () banked
  7744  00920E  519E               	movf	(_classic_data+14)& (0+255),w,b
  7745                           
  7746                           ; BSR set to: 2
  7747  009210  0012               	return		;funcret
  7748  009212                     __end_of_getTypeRemote:
  7749                           	callstack 0
  7750                           
  7751 ;; *************** function _getSerialCmd *****************
  7752 ;; Defined at:
  7753 ;;		line 442 in file "inputs_MC50.c"
  7754 ;; Parameters:    Size  Location     Type
  7755 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7756 ;;		 -> controlSelectRemote@tempSerial(4), 
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;  temp            1   27[COMRAM] char 
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  1    wreg      char 
  7761 ;; Registers used:
  7762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7763 ;; Tracked objects:
  7764 ;;		On entry : 3F/1
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7768 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7771 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7772 ;;Total ram usage:        2 bytes
  7773 ;; Hardware stack levels used: 1
  7774 ;; Hardware stack levels required when called: 5
  7775 ;; This function calls:
  7776 ;;		_memcpy
  7777 ;; This function is called by:
  7778 ;;		_controlSelectRemote
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text9
  7783  008610                     __ptext9:
  7784                           	callstack 0
  7785  008610                     _getSerialCmd:
  7786                           	callstack 22
  7787                           
  7788                           ; BSR set to: 1
  7789                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7790                           
  7791                           ; BSR set to: 2
  7792                           ;incstack = 0
  7793  008610  681C               	setf	getSerialCmd@temp^0,c
  7794                           
  7795                           ; BSR set to: 1
  7796                           ;inputs_MC50.c: 444:     if(RFFull)
  7797  008612  0100               	movlb	0	; () banked
  7798  008614  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7799  008616  B4D8               	btfsc	status,2,c
  7800  008618  D020               	goto	l19608
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7804  00861A  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7805  00861C  B4D8               	btfsc	status,2,c
  7806  00861E  D00E               	goto	l19604
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7810  008620  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7811  008624  6A11               	clrf	(memcpy@d1+1)^0,c
  7812  008626  0E94               	movlw	low (_classic_data+4)
  7813  008628  6E12               	movwf	memcpy@s1^0,c
  7814  00862A  0E02               	movlw	high (_classic_data+4)
  7815  00862C  6E13               	movwf	(memcpy@s1+1)^0,c
  7816  00862E  0E00               	movlw	0
  7817  008630  6E15               	movwf	(memcpy@n+1)^0,c
  7818  008632  0E04               	movlw	4
  7819  008634  6E14               	movwf	memcpy@n^0,c
  7820  008636  ECE4  F043         	call	_memcpy	;wreg free
  7821                           
  7822                           ;inputs_MC50.c: 449:         }
  7823  00863A  D00D               	goto	l19606
  7824  00863C                     l19604:
  7825                           
  7826                           ; BSR set to: 0
  7827                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7828  00863C  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7829  008640  6A11               	clrf	(memcpy@d1+1)^0,c
  7830  008642  0ECA               	movlw	low (_BufferRF+4)
  7831  008644  6E12               	movwf	memcpy@s1^0,c
  7832  008646  0E02               	movlw	high (_BufferRF+4)
  7833  008648  6E13               	movwf	(memcpy@s1+1)^0,c
  7834  00864A  0E00               	movlw	0
  7835  00864C  6E15               	movwf	(memcpy@n+1)^0,c
  7836  00864E  0E04               	movlw	4
  7837  008650  6E14               	movwf	memcpy@n^0,c
  7838  008652  ECE4  F043         	call	_memcpy	;wreg free
  7839  008656                     l19606:
  7840                           
  7841                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7842  008656  C29C  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7843  00865A                     l19608:
  7844                           
  7845                           ;inputs_MC50.c: 456:     return temp;
  7846  00865A  501C               	movf	getSerialCmd@temp^0,w,c
  7847  00865C  0012               	return		;funcret
  7848  00865E                     __end_of_getSerialCmd:
  7849                           	callstack 0
  7850                           
  7851 ;; *************** function _cmdMemoryIsEmpty *****************
  7852 ;; Defined at:
  7853 ;;		line 110 in file "controlMemory_MC50.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;  cmdType         1    wreg     unsigned char 
  7856 ;;  position        1   45[COMRAM] unsigned char 
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;  cmdType         1   48[COMRAM] unsigned char 
  7859 ;;  tempSerial      4   49[COMRAM] unsigned long 
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  1    wreg      unsigned char 
  7862 ;; Registers used:
  7863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7864 ;; Tracked objects:
  7865 ;;		On entry : 3F/1
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7869 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7870 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7872 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7873 ;;Total ram usage:        8 bytes
  7874 ;; Hardware stack levels used: 1
  7875 ;; Hardware stack levels required when called: 13
  7876 ;; This function calls:
  7877 ;;		_i2c_readDataBlock
  7878 ;; This function is called by:
  7879 ;;		_controlSelectRemote
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text10
  7884  007520                     __ptext10:
  7885                           	callstack 0
  7886  007520                     _cmdMemoryIsEmpty:
  7887                           	callstack 14
  7888                           
  7889                           ;incstack = 0
  7890                           ;cmdMemoryIsEmpty@cmdType stored from wreg
  7891  007520  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
  7892                           
  7893                           ;controlMemory_MC50.c: 110: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 111: {;controlMemory_MC50.c: 112:     unsigned long tempSerial=0;
  7894  007522  0E00               	movlw	0
  7895  007524  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
  7896  007526  0E00               	movlw	0
  7897  007528  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
  7898  00752A  0E00               	movlw	0
  7899  00752C  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
  7900  00752E  0E00               	movlw	0
  7901  007530  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
  7902                           
  7903                           ;controlMemory_MC50.c: 115:      if(cmdType==0)
  7904  007532  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
  7905  007534  A4D8               	btfss	status,2,c
  7906  007536  D01A               	goto	l19574
  7907                           
  7908                           ;controlMemory_MC50.c: 116:     {;controlMemory_MC50.c: 117:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
  7909  007538  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
  7910  00753A  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
  7911  00753C  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
  7912  00753E  90D8               	bcf	status,0,c
  7913  007540  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7914  007542  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7915  007544  90D8               	bcf	status,0,c
  7916  007546  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7917  007548  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7918  00754A  0E00               	movlw	0
  7919  00754C  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
  7920  00754E  6E22               	movwf	i2c_readDataBlock@reg^0,c
  7921  007550  0E02               	movlw	2
  7922  007552  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
  7923  007554  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
  7924  007556  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
  7925  007558  6E24               	movwf	i2c_readDataBlock@data^0,c
  7926  00755A  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
  7927  00755C  0E00               	movlw	0
  7928  00755E  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
  7929  007560  0E04               	movlw	4
  7930  007562  6E26               	movwf	i2c_readDataBlock@len^0,c
  7931  007564  0E50               	movlw	80
  7932  007566  ECB1  F03E         	call	_i2c_readDataBlock
  7933                           
  7934                           ;controlMemory_MC50.c: 118:     }
  7935  00756A  D019               	goto	l19576
  7936  00756C                     l19574:
  7937                           
  7938                           ;controlMemory_MC50.c: 120:     {;controlMemory_MC50.c: 121:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
  7939  00756C  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
  7940  00756E  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
  7941  007570  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
  7942  007572  90D8               	bcf	status,0,c
  7943  007574  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7944  007576  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7945  007578  90D8               	bcf	status,0,c
  7946  00757A  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7947  00757C  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7948  00757E  0E00               	movlw	0
  7949  007580  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
  7950  007582  6E22               	movwf	i2c_readDataBlock@reg^0,c
  7951  007584  0E05               	movlw	5
  7952  007586  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
  7953  007588  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
  7954  00758A  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
  7955  00758C  6E24               	movwf	i2c_readDataBlock@data^0,c
  7956  00758E  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
  7957  007590  0E00               	movlw	0
  7958  007592  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
  7959  007594  0E04               	movlw	4
  7960  007596  6E26               	movwf	i2c_readDataBlock@len^0,c
  7961  007598  0E50               	movlw	80
  7962  00759A  ECB1  F03E         	call	_i2c_readDataBlock
  7963  00759E                     l19576:
  7964                           
  7965                           ;controlMemory_MC50.c: 124:      if( tempSerial==0)
  7966  00759E  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
  7967  0075A0  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
  7968  0075A2  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
  7969  0075A4  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
  7970  0075A6  A4D8               	btfss	status,2,c
  7971  0075A8  D002               	goto	l19584
  7972                           
  7973                           ;controlMemory_MC50.c: 125:      {;controlMemory_MC50.c: 126:          return 1;
  7974  0075AA  0E01               	movlw	1
  7975  0075AC  0012               	return	
  7976  0075AE                     l19584:
  7977                           
  7978                           ;controlMemory_MC50.c: 129:      {;controlMemory_MC50.c: 130:          return 0;
  7979  0075AE  0E00               	movlw	0
  7980  0075B0  0012               	return		;funcret
  7981  0075B2                     __end_of_cmdMemoryIsEmpty:
  7982                           	callstack 0
  7983                           
  7984 ;; *************** function _RemoveSerial *****************
  7985 ;; Defined at:
  7986 ;;		line 95 in file "controlMemory_MC50.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;  cmdType         1    wreg     unsigned char 
  7989 ;;  position        1   57[COMRAM] unsigned char 
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;  cmdType         1    2[BANK0 ] unsigned char 
  7992 ;;  tempSerial      4    3[BANK0 ] unsigned long 
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7997 ;; Tracked objects:
  7998 ;;		On entry : 3F/1
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8002 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8003 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8004 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8005 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8006 ;;Total ram usage:        8 bytes
  8007 ;; Hardware stack levels used: 1
  8008 ;; Hardware stack levels required when called: 13
  8009 ;; This function calls:
  8010 ;;		_i2c_writeNBytes
  8011 ;; This function is called by:
  8012 ;;		_controlSelectRemote
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text11
  8017  007A7E                     __ptext11:
  8018                           	callstack 0
  8019  007A7E                     _RemoveSerial:
  8020                           	callstack 14
  8021                           
  8022                           ;incstack = 0
  8023                           ;RemoveSerial@cmdType stored from wreg
  8024  007A7E  0100               	movlb	0	; () banked
  8025  007A80  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
  8026                           
  8027                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
  8028  007A82  0E00               	movlw	0
  8029  007A84  0100               	movlb	0	; () banked
  8030  007A86  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
  8031  007A88  0E00               	movlw	0
  8032  007A8A  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
  8033  007A8C  0E00               	movlw	0
  8034  007A8E  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
  8035  007A90  0E00               	movlw	0
  8036  007A92  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
  8040  007A94  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
  8041  007A96  A4D8               	btfss	status,2,c
  8042  007A98  D019               	goto	l19566
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
  8046  007A9A  503A               	movf	RemoveSerial@position^0,w,c
  8047  007A9C  6FD8               	movwf	??_RemoveSerial& (0+255),b
  8048  007A9E  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
  8049  007AA0  90D8               	bcf	status,0,c
  8050  007AA2  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8051  007AA4  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8052  007AA6  90D8               	bcf	status,0,c
  8053  007AA8  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8054  007AAA  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8055  007AAC  0E00               	movlw	0
  8056  007AAE  25D8               	addwf	??_RemoveSerial& (0+255),w,b
  8057  007AB0  6E22               	movwf	i2c_writeNBytes@reg^0,c
  8058  007AB2  0E02               	movlw	2
  8059  007AB4  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
  8060  007AB6  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  8061  007AB8  0EDB               	movlw	low RemoveSerial@tempSerial
  8062  007ABA  6E24               	movwf	i2c_writeNBytes@data^0,c
  8063  007ABC  0E00               	movlw	0
  8064  007ABE  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  8065  007AC0  0E04               	movlw	4
  8066  007AC2  6E25               	movwf	i2c_writeNBytes@len^0,c
  8067  007AC4  0E50               	movlw	80
  8068  007AC6  ECEC  F03E         	call	_i2c_writeNBytes
  8069                           
  8070                           ;controlMemory_MC50.c: 103:     }
  8071  007ACA  0012               	return	
  8072  007ACC                     l19566:
  8073                           
  8074                           ; BSR set to: 0
  8075                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
  8076  007ACC  503A               	movf	RemoveSerial@position^0,w,c
  8077  007ACE  6FD8               	movwf	??_RemoveSerial& (0+255),b
  8078  007AD0  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
  8079  007AD2  90D8               	bcf	status,0,c
  8080  007AD4  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8081  007AD6  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8082  007AD8  90D8               	bcf	status,0,c
  8083  007ADA  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8084  007ADC  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8085  007ADE  0E00               	movlw	0
  8086  007AE0  25D8               	addwf	??_RemoveSerial& (0+255),w,b
  8087  007AE2  6E22               	movwf	i2c_writeNBytes@reg^0,c
  8088  007AE4  0E05               	movlw	5
  8089  007AE6  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
  8090  007AE8  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  8091  007AEA  0EDB               	movlw	low RemoveSerial@tempSerial
  8092  007AEC  6E24               	movwf	i2c_writeNBytes@data^0,c
  8093  007AEE  0E00               	movlw	0
  8094  007AF0  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  8095  007AF2  0E04               	movlw	4
  8096  007AF4  6E25               	movwf	i2c_writeNBytes@len^0,c
  8097  007AF6  0E50               	movlw	80
  8098  007AF8  ECEC  F03E         	call	_i2c_writeNBytes
  8099  007AFC  0012               	return		;funcret
  8100  007AFE                     __end_of_RemoveSerial:
  8101                           	callstack 0
  8102                           
  8103 ;; *************** function _controlSaveRemote *****************
  8104 ;; Defined at:
  8105 ;;		line 1199 in file "sm_MenuConfiguration_MC50.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;		None
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;		None
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  1    wreg      void 
  8112 ;; Registers used:
  8113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8114 ;; Tracked objects:
  8115 ;;		On entry : 3F/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8121 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8122 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8123 ;;Total ram usage:        1 bytes
  8124 ;; Hardware stack levels used: 1
  8125 ;; Hardware stack levels required when called: 6
  8126 ;; This function calls:
  8127 ;;		_ClearFlag_rfCMD
  8128 ;;		_SetSegmentValueIntermitentMain
  8129 ;;		_SetSegmentValueMain
  8130 ;;		___awdiv
  8131 ;;		___lbmod
  8132 ;;		_sm_send_event
  8133 ;; This function is called by:
  8134 ;;		_sm_execute_menuConfiguration
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text12
  8139  007144                     __ptext12:
  8140                           	callstack 0
  8141  007144                     _controlSaveRemote:
  8142                           	callstack 22
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;sm_MenuConfiguration_MC50.c: 1200:      if (ts_system.timeSinalizationDigit<=0)
  8146                           
  8147                           ;incstack = 0
  8148  007144  0101               	movlb	1	; () banked
  8149  007146  BFA9               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8150  007148  D005               	goto	u24130
  8151  00714A  51A9               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8152  00714C  E154               	bnz	l3476
  8153  00714E  05A8               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8154  007150  B0D8               	btfsc	status,0,c
  8155  007152  0012               	return	
  8156  007154                     u24130:
  8157                           
  8158                           ; BSR set to: 1
  8159                           ;sm_MenuConfiguration_MC50.c: 1201:      {;sm_MenuConfiguration_MC50.c: 1202:          i
      +                          f(edit_Param.Max==0)
  8160  007154  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8161  007156  A4D8               	btfss	status,2,c
  8162  007158  D02E               	goto	l21026
  8163                           
  8164                           ; BSR set to: 1
  8165                           ;sm_MenuConfiguration_MC50.c: 1203:          {;sm_MenuConfiguration_MC50.c: 1204:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  8166  00715A  0E00               	movlw	0
  8167  00715C  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8168  00715E  0EC8               	movlw	200
  8169  007160  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8170                           
  8171                           ; BSR set to: 1
  8172                           ;sm_MenuConfiguration_MC50.c: 1205:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  8173  007162  0EBB               	movlw	low _menuConfiguration_stateMachine
  8174  007164  6E12               	movwf	sm_send_event@psm^0,c
  8175  007166  0E02               	movlw	high _menuConfiguration_stateMachine
  8176  007168  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8177  00716A  0E00               	movlw	0
  8178  00716C  6E15               	movwf	(sm_send_event@event+1)^0,c
  8179  00716E  0E09               	movlw	9
  8180  007170  6E14               	movwf	sm_send_event@event^0,c
  8181  007172  EC01  F041         	call	_sm_send_event	;wreg free
  8182                           
  8183                           ;sm_MenuConfiguration_MC50.c: 1206:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  8184  007176  0E0A               	movlw	10
  8185  007178  6E10               	movwf	___lbmod@divisor^0,c
  8186  00717A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8187  00717C  EC81  F046         	call	___lbmod
  8188  007180  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8189  007182  0E00               	movlw	0
  8190  007184  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8191  007186  0E14               	movlw	20
  8192  007188  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8193  00718A  0E0A               	movlw	10
  8194  00718C  6E10               	movwf	___lbmod@divisor^0,c
  8195  00718E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8196  007190  EC81  F046         	call	___lbmod
  8197  007194  6E20               	movwf	??_controlSaveRemote^0,c
  8198  007196  5020               	movf	??_controlSaveRemote^0,w,c
  8199  007198  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8200  00719A  6E14               	movwf	___awdiv@dividend^0,c
  8201  00719C  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8202  00719E  A0D8               	btfss	status,0,c
  8203  0071A0  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8204  0071A2  0E00               	movlw	0
  8205  0071A4  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8206  0071A6  0E0A               	movlw	10
  8207  0071A8  6E16               	movwf	___awdiv@divisor^0,c
  8208  0071AA  EC7A  F03C         	call	___awdiv	;wreg free
  8209  0071AE  5014               	movf	?___awdiv^0,w,c
  8210  0071B0  EC54  F048         	call	_SetSegmentValueIntermitentMain
  8211                           
  8212                           ;sm_MenuConfiguration_MC50.c: 1207:          }
  8213  0071B4  0012               	return	
  8214  0071B6                     l21026:
  8215                           
  8216                           ; BSR set to: 1
  8217                           ;sm_MenuConfiguration_MC50.c: 1209:          {;sm_MenuConfiguration_MC50.c: 1210:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8218  0071B6  0EEF               	movlw	low _main_stateMachine
  8219  0071B8  6E12               	movwf	sm_send_event@psm^0,c
  8220  0071BA  0E01               	movlw	high _main_stateMachine
  8221  0071BC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8222  0071BE  0E00               	movlw	0
  8223  0071C0  6E15               	movwf	(sm_send_event@event+1)^0,c
  8224  0071C2  0E07               	movlw	7
  8225  0071C4  6E14               	movwf	sm_send_event@event^0,c
  8226  0071C6  EC01  F041         	call	_sm_send_event	;wreg free
  8227                           
  8228                           ;sm_MenuConfiguration_MC50.c: 1211:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8229  0071CA  0EBB               	movlw	low _menuConfiguration_stateMachine
  8230  0071CC  6E12               	movwf	sm_send_event@psm^0,c
  8231  0071CE  0E02               	movlw	high _menuConfiguration_stateMachine
  8232  0071D0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8233  0071D2  0E00               	movlw	0
  8234  0071D4  6E15               	movwf	(sm_send_event@event+1)^0,c
  8235  0071D6  0E04               	movlw	4
  8236  0071D8  6E14               	movwf	sm_send_event@event^0,c
  8237  0071DA  EC01  F041         	call	_sm_send_event	;wreg free
  8238                           
  8239                           ;sm_MenuConfiguration_MC50.c: 1212:             SetSegmentValueMain(dMinus,dMinus);
  8240  0071DE  0E18               	movlw	24
  8241  0071E0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8242  0071E2  0E18               	movlw	24
  8243  0071E4  ECB9  F047         	call	_SetSegmentValueMain
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;sm_MenuConfiguration_MC50.c: 1213:             ClearFlag_rfCMD();
  8247  0071E8  EC09  F049         	call	_ClearFlag_rfCMD	;wreg free
  8248                           
  8249                           ;sm_MenuConfiguration_MC50.c: 1214:             ts_system.timeoutMenu = 0;
  8250  0071EC  0E00               	movlw	0
  8251  0071EE  0101               	movlb	1	; () banked
  8252  0071F0  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8253  0071F2  0E00               	movlw	0
  8254  0071F4  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8255  0071F6                     l3476:
  8256  0071F6  0012               	return		;funcret
  8257  0071F8                     __end_of_controlSaveRemote:
  8258                           	callstack 0
  8259                           
  8260 ;; *************** function ___lbmod *****************
  8261 ;; Defined at:
  8262 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;  dividend        1    wreg     unsigned char 
  8265 ;;  divisor         1   15[COMRAM] unsigned char 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;  dividend        1   16[COMRAM] unsigned char 
  8268 ;;  rem             1   18[COMRAM] unsigned char 
  8269 ;;  counter         1   17[COMRAM] unsigned char 
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      unsigned char 
  8272 ;; Registers used:
  8273 ;;		wreg, status,2, status,0
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/1
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8279 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8280 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8282 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8283 ;;Total ram usage:        4 bytes
  8284 ;; Hardware stack levels used: 1
  8285 ;; Hardware stack levels required when called: 4
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_controlSelectRemote
  8290 ;;		_controlSaveRemote
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           	psect	text13
  8295  008D02                     __ptext13:
  8296                           	callstack 0
  8297  008D02                     ___lbmod:
  8298                           	callstack 23
  8299                           
  8300                           ;incstack = 0
  8301                           ;___lbmod@dividend stored from wreg
  8302  008D02  6E11               	movwf	___lbmod@dividend^0,c
  8303  008D04  0E08               	movlw	8
  8304  008D06  6E12               	movwf	___lbmod@counter^0,c
  8305  008D08  0E00               	movlw	0
  8306  008D0A  6E13               	movwf	___lbmod@rem^0,c
  8307  008D0C                     l12498:
  8308  008D0C  90D8               	bcf	status,0,c
  8309  008D0E  3411               	rlcf	___lbmod@dividend^0,w,c
  8310  008D10  3413               	rlcf	___lbmod@rem^0,w,c
  8311  008D12  6E13               	movwf	___lbmod@rem^0,c
  8312  008D14  90D8               	bcf	status,0,c
  8313  008D16  3611               	rlcf	___lbmod@dividend^0,f,c
  8314  008D18  5010               	movf	___lbmod@divisor^0,w,c
  8315  008D1A  5C13               	subwf	___lbmod@rem^0,w,c
  8316  008D1C  A0D8               	btfss	status,0,c
  8317  008D1E  D002               	goto	l12506
  8318  008D20  5010               	movf	___lbmod@divisor^0,w,c
  8319  008D22  5E13               	subwf	___lbmod@rem^0,f,c
  8320  008D24                     l12506:
  8321  008D24  2E12               	decfsz	___lbmod@counter^0,f,c
  8322  008D26  D7F2               	goto	l12498
  8323  008D28  5013               	movf	___lbmod@rem^0,w,c
  8324  008D2A  0012               	return		;funcret
  8325  008D2C                     __end_of___lbmod:
  8326                           	callstack 0
  8327                           
  8328 ;; *************** function ___awdiv *****************
  8329 ;; Defined at:
  8330 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  dividend        2   19[COMRAM] int 
  8333 ;;  divisor         2   21[COMRAM] int 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;  quotient        2   25[COMRAM] int 
  8336 ;;  sign            1   24[COMRAM] unsigned char 
  8337 ;;  counter         1   23[COMRAM] unsigned char 
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  2   19[COMRAM] int 
  8340 ;; Registers used:
  8341 ;;		wreg, status,2, status,0
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8348 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8350 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8351 ;;Total ram usage:        8 bytes
  8352 ;; Hardware stack levels used: 1
  8353 ;; Hardware stack levels required when called: 4
  8354 ;; This function calls:
  8355 ;;		Nothing
  8356 ;; This function is called by:
  8357 ;;		_controlSelectRemote
  8358 ;;		_controlSaveRemote
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362                           	psect	text14
  8363  0078F4                     __ptext14:
  8364                           	callstack 0
  8365  0078F4                     ___awdiv:
  8366                           	callstack 23
  8367                           
  8368                           ;incstack = 0
  8369  0078F4  0E00               	movlw	0
  8370  0078F6  6E19               	movwf	___awdiv@sign^0,c
  8371  0078F8  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8372  0078FA  D006               	goto	l12434
  8373  0078FC  6C16               	negf	___awdiv@divisor^0,c
  8374  0078FE  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8375  007900  B0D8               	btfsc	status,0,c
  8376  007902  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8377  007904  0E01               	movlw	1
  8378  007906  6E19               	movwf	___awdiv@sign^0,c
  8379  007908                     l12434:
  8380  007908  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8381  00790A  D006               	goto	l12440
  8382  00790C  6C14               	negf	___awdiv@dividend^0,c
  8383  00790E  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8384  007910  B0D8               	btfsc	status,0,c
  8385  007912  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8386  007914  0E01               	movlw	1
  8387  007916  1A19               	xorwf	___awdiv@sign^0,f,c
  8388  007918                     l12440:
  8389  007918  0E00               	movlw	0
  8390  00791A  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8391  00791C  0E00               	movlw	0
  8392  00791E  6E1A               	movwf	___awdiv@quotient^0,c
  8393  007920  5016               	movf	___awdiv@divisor^0,w,c
  8394  007922  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8395  007924  B4D8               	btfsc	status,2,c
  8396  007926  D01C               	goto	l12462
  8397  007928  0E01               	movlw	1
  8398  00792A  6E18               	movwf	___awdiv@counter^0,c
  8399  00792C  D004               	goto	l12448
  8400  00792E                     l12446:
  8401  00792E  90D8               	bcf	status,0,c
  8402  007930  3616               	rlcf	___awdiv@divisor^0,f,c
  8403  007932  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8404  007934  2A18               	incf	___awdiv@counter^0,f,c
  8405  007936                     l12448:
  8406  007936  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8407  007938  D7FA               	goto	l12446
  8408  00793A                     u12060:
  8409  00793A  90D8               	bcf	status,0,c
  8410  00793C  361A               	rlcf	___awdiv@quotient^0,f,c
  8411  00793E  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8412  007940  5016               	movf	___awdiv@divisor^0,w,c
  8413  007942  5C14               	subwf	___awdiv@dividend^0,w,c
  8414  007944  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8415  007946  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8416  007948  A0D8               	btfss	status,0,c
  8417  00794A  D005               	goto	l12458
  8418  00794C  5016               	movf	___awdiv@divisor^0,w,c
  8419  00794E  5E14               	subwf	___awdiv@dividend^0,f,c
  8420  007950  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8421  007952  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8422  007954  801A               	bsf	___awdiv@quotient^0,0,c
  8423  007956                     l12458:
  8424  007956  90D8               	bcf	status,0,c
  8425  007958  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8426  00795A  3216               	rrcf	___awdiv@divisor^0,f,c
  8427  00795C  2E18               	decfsz	___awdiv@counter^0,f,c
  8428  00795E  D7ED               	goto	u12060
  8429  007960                     l12462:
  8430  007960  5019               	movf	___awdiv@sign^0,w,c
  8431  007962  B4D8               	btfsc	status,2,c
  8432  007964  D004               	goto	l12466
  8433  007966  6C1A               	negf	___awdiv@quotient^0,c
  8434  007968  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8435  00796A  B0D8               	btfsc	status,0,c
  8436  00796C  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8437  00796E                     l12466:
  8438  00796E  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8439  007972  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8440  007976  0012               	return		;funcret
  8441  007978                     __end_of___awdiv:
  8442                           	callstack 0
  8443                           
  8444 ;; *************** function _SetSegmentValueMain *****************
  8445 ;; Defined at:
  8446 ;;		line 104 in file "outputs_MC50.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  d1              1    wreg     unsigned char 
  8449 ;;  d2              1   27[COMRAM] unsigned char 
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;  d1              1   28[COMRAM] unsigned char 
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      void 
  8454 ;; Registers used:
  8455 ;;		wreg, status,2
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 3F/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8461 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8462 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8465 ;;Total ram usage:        2 bytes
  8466 ;; Hardware stack levels used: 1
  8467 ;; Hardware stack levels required when called: 4
  8468 ;; This function calls:
  8469 ;;		Nothing
  8470 ;; This function is called by:
  8471 ;;		_sm_execute_main
  8472 ;;		_sm_execute_menuConfiguration
  8473 ;;		_load_New_Menu
  8474 ;;		_controlSelectRemote
  8475 ;;		_controlSaveRemote
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text15
  8480  008F72                     __ptext15:
  8481                           	callstack 0
  8482  008F72                     _SetSegmentValueMain:
  8483                           	callstack 22
  8484                           
  8485                           ;incstack = 0
  8486                           ;SetSegmentValueMain@d1 stored from wreg
  8487  008F72  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8488                           
  8489                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8490  008F74  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8491                           
  8492                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8493  008F78  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8494                           
  8495                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8496  008F7C  0E00               	movlw	0
  8497  008F7E  0100               	movlb	0	; () banked
  8498  008F80  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8499  008F82  0E00               	movlw	0
  8500  008F84  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8504  008F86  0E00               	movlw	0
  8505  008F88  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8506                           
  8507                           ; BSR set to: 0
  8508  008F8A  0012               	return		;funcret
  8509  008F8C                     __end_of_SetSegmentValueMain:
  8510                           	callstack 0
  8511                           
  8512 ;; *************** function _ClearFlag_rfCMD *****************
  8513 ;; Defined at:
  8514 ;;		line 463 in file "inputs_MC50.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;		None
  8517 ;; Auto vars:     Size  Location     Type
  8518 ;;		None
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  1    wreg      void 
  8521 ;; Registers used:
  8522 ;;		wreg, status,2
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/1
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8532 ;;Total ram usage:        0 bytes
  8533 ;; Hardware stack levels used: 1
  8534 ;; Hardware stack levels required when called: 4
  8535 ;; This function calls:
  8536 ;;		Nothing
  8537 ;; This function is called by:
  8538 ;;		_sm_execute_menuConfiguration
  8539 ;;		_controlSelectRemote
  8540 ;;		_controlSaveRemote
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           	psect	text16
  8545  009212                     __ptext16:
  8546                           	callstack 0
  8547  009212                     _ClearFlag_rfCMD:
  8548                           	callstack 23
  8549                           
  8550                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;incstack = 0
  8554  009212  0E01               	movlw	1
  8555  009214  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8556  009216  0012               	return		;funcret
  8557  009218                     __end_of_ClearFlag_rfCMD:
  8558                           	callstack 0
  8559                           
  8560 ;; *************** function _controlLearnDigit *****************
  8561 ;; Defined at:
  8562 ;;		line 1220 in file "sm_MenuConfiguration_MC50.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;		None
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;		None
  8567 ;; Return value:  Size  Location     Type
  8568 ;;                  1    wreg      void 
  8569 ;; Registers used:
  8570 ;;		wreg, status,2, status,0, cstack
  8571 ;; Tracked objects:
  8572 ;;		On entry : 3F/0
  8573 ;;		On exit  : 3E/0
  8574 ;;		Unchanged: 0/0
  8575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8580 ;;Total ram usage:        0 bytes
  8581 ;; Hardware stack levels used: 1
  8582 ;; Hardware stack levels required when called: 5
  8583 ;; This function calls:
  8584 ;;		_SetSegmentValueLearn
  8585 ;; This function is called by:
  8586 ;;		_sm_execute_menuConfiguration
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text17
  8591  008A94                     __ptext17:
  8592                           	callstack 0
  8593  008A94                     _controlLearnDigit:
  8594                           	callstack 23
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;sm_MenuConfiguration_MC50.c: 1222:     if(ts_system.timeSinalizationDigit<=0 )
  8598                           
  8599                           ;incstack = 0
  8600  008A94  0101               	movlb	1	; () banked
  8601  008A96  BFA9               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8602  008A98  D005               	goto	u13580
  8603  008A9A  51A9               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8604  008A9C  E112               	bnz	l3482
  8605  008A9E  05A8               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8606  008AA0  B0D8               	btfsc	status,0,c
  8607  008AA2  0012               	return	
  8608  008AA4                     u13580:
  8609                           
  8610                           ; BSR set to: 1
  8611                           ;sm_MenuConfiguration_MC50.c: 1223:     {;sm_MenuConfiguration_MC50.c: 1224:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8612  008AA4  0E00               	movlw	0
  8613  008AA6  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8614  008AA8  0E02               	movlw	2
  8615  008AAA  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8616                           
  8617                           ; BSR set to: 1
  8618                           ;sm_MenuConfiguration_MC50.c: 1225:         if(var_sys.StateMotor==InClose)
  8619  008AAC  0E03               	movlw	3
  8620  008AAE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8621  008AB0  A4D8               	btfss	status,2,c
  8622  008AB2  D004               	goto	l13804
  8623                           
  8624                           ; BSR set to: 1
  8625                           ;sm_MenuConfiguration_MC50.c: 1226:         {;sm_MenuConfiguration_MC50.c: 1227:        
      +                               SetSegmentValueLearn(Left);
  8626  008AB4  0E00               	movlw	0
  8627  008AB6  ECD9  F034         	call	_SetSegmentValueLearn
  8628                           
  8629                           ;sm_MenuConfiguration_MC50.c: 1228:         }
  8630  008ABA  0012               	return	
  8631  008ABC                     l13804:
  8632                           
  8633                           ; BSR set to: 1
  8634                           ;sm_MenuConfiguration_MC50.c: 1230:         {;sm_MenuConfiguration_MC50.c: 1231:        
      +                               SetSegmentValueLearn(Rigth);
  8635  008ABC  0E01               	movlw	1
  8636  008ABE  ECD9  F034         	call	_SetSegmentValueLearn
  8637  008AC2                     l3482:
  8638  008AC2  0012               	return		;funcret
  8639  008AC4                     __end_of_controlLearnDigit:
  8640                           	callstack 0
  8641                           
  8642 ;; *************** function _SetSegmentValueLearn *****************
  8643 ;; Defined at:
  8644 ;;		line 124 in file "outputs_MC50.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;  direction       1    wreg     enum E10602
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;  direction       1   17[COMRAM] enum E10602
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  1    wreg      void 
  8651 ;; Registers used:
  8652 ;;		wreg, status,2, status,0
  8653 ;; Tracked objects:
  8654 ;;		On entry : 3F/1
  8655 ;;		On exit  : 3F/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8661 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8662 ;;Total ram usage:        3 bytes
  8663 ;; Hardware stack levels used: 1
  8664 ;; Hardware stack levels required when called: 4
  8665 ;; This function calls:
  8666 ;;		Nothing
  8667 ;; This function is called by:
  8668 ;;		_controlLearnDigit
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           	psect	text18
  8673  0069B2                     __ptext18:
  8674                           	callstack 0
  8675  0069B2                     _SetSegmentValueLearn:
  8676                           	callstack 23
  8677                           
  8678                           ;incstack = 0
  8679                           ;SetSegmentValueLearn@direction stored from wreg
  8680  0069B2  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8681                           
  8682                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8683  0069B4  0E00               	movlw	0
  8684  0069B6  0100               	movlb	0	; () banked
  8685  0069B8  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8686  0069BA  0E00               	movlw	0
  8687  0069BC  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8688                           
  8689                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8690  0069BE  0E00               	movlw	0
  8691  0069C0  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8692                           
  8693                           ;outputs_MC50.c: 128:     switch (direction)
  8694  0069C2  D066               	goto	l12272
  8695  0069C4                     l12218:
  8696                           
  8697                           ; BSR set to: 0
  8698                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8699  0069C4  0E1A               	movlw	26
  8700  0069C6  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8701  0069C8  A4D8               	btfss	status,2,c
  8702  0069CA  D009               	goto	l12224
  8703                           
  8704                           ; BSR set to: 0
  8705  0069CC  0E20               	movlw	32
  8706  0069CE  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8707  0069D0  A4D8               	btfss	status,2,c
  8708  0069D2  D005               	goto	l12224
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8712  0069D4  0E20               	movlw	32
  8713  0069D6  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8714                           
  8715                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8716  0069D8  0E1A               	movlw	26
  8717  0069DA  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8718                           
  8719                           ;outputs_MC50.c: 135:             }
  8720  0069DC  0012               	return	
  8721  0069DE                     l12224:
  8722                           
  8723                           ; BSR set to: 0
  8724  0069DE  0E20               	movlw	32
  8725  0069E0  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8726  0069E2  A4D8               	btfss	status,2,c
  8727  0069E4  D009               	goto	l12230
  8728                           
  8729                           ; BSR set to: 0
  8730  0069E6  0E1D               	movlw	29
  8731  0069E8  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8732  0069EA  A4D8               	btfss	status,2,c
  8733  0069EC  D005               	goto	l12230
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8737  0069EE  0E1D               	movlw	29
  8738  0069F0  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8739                           
  8740                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8741  0069F2  0E20               	movlw	32
  8742  0069F4  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8743                           
  8744                           ;outputs_MC50.c: 140:             }
  8745  0069F6  0012               	return	
  8746  0069F8                     l12230:
  8747                           
  8748                           ; BSR set to: 0
  8749  0069F8  0E1F               	movlw	31
  8750  0069FA  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8751  0069FC  A4D8               	btfss	status,2,c
  8752  0069FE  D005               	goto	l12234
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8756  006A00  0E1A               	movlw	26
  8757  006A02  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8758                           
  8759                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8760  006A04  0E20               	movlw	32
  8761  006A06  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8762                           
  8763                           ;outputs_MC50.c: 145:             }
  8764  006A08  0012               	return	
  8765  006A0A                     l12234:
  8766                           
  8767                           ; BSR set to: 0
  8768  006A0A  0E20               	movlw	32
  8769  006A0C  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8770  006A0E  A4D8               	btfss	status,2,c
  8771  006A10  D002               	goto	l12238
  8772                           
  8773                           ; BSR set to: 0
  8774                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8775  006A12  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8776                           
  8777                           ;outputs_MC50.c: 149:             }
  8778  006A14  0012               	return	
  8779  006A16                     l12238:
  8780                           
  8781                           ; BSR set to: 0
  8782  006A16  0E20               	movlw	32
  8783  006A18  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8784  006A1A  A4D8               	btfss	status,2,c
  8785  006A1C  D002               	goto	l12242
  8786                           
  8787                           ; BSR set to: 0
  8788                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8789  006A1E  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8790                           
  8791                           ;outputs_MC50.c: 153:             }
  8792  006A20  0012               	return	
  8793  006A22                     l12242:
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8797  006A22  0E1A               	movlw	26
  8798  006A24  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8799                           
  8800                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8801  006A26  0E20               	movlw	32
  8802  006A28  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8803  006A2A  0012               	return	
  8804  006A2C                     l12244:
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8808  006A2C  0E1A               	movlw	26
  8809  006A2E  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8810  006A30  A4D8               	btfss	status,2,c
  8811  006A32  D009               	goto	l12250
  8812                           
  8813                           ; BSR set to: 0
  8814  006A34  0E20               	movlw	32
  8815  006A36  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8816  006A38  A4D8               	btfss	status,2,c
  8817  006A3A  D005               	goto	l12250
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8821  006A3C  0E1A               	movlw	26
  8822  006A3E  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8823                           
  8824                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8825  006A40  0E20               	movlw	32
  8826  006A42  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8827                           
  8828                           ;outputs_MC50.c: 165:             }
  8829  006A44  0012               	return	
  8830  006A46                     l12250:
  8831                           
  8832                           ; BSR set to: 0
  8833  006A46  0E20               	movlw	32
  8834  006A48  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8835  006A4A  A4D8               	btfss	status,2,c
  8836  006A4C  D009               	goto	l12256
  8837                           
  8838                           ; BSR set to: 0
  8839  006A4E  0E1D               	movlw	29
  8840  006A50  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8841  006A52  A4D8               	btfss	status,2,c
  8842  006A54  D005               	goto	l12256
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8846  006A56  0E20               	movlw	32
  8847  006A58  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8848                           
  8849                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8850  006A5A  0E1D               	movlw	29
  8851  006A5C  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8852                           
  8853                           ;outputs_MC50.c: 170:             }
  8854  006A5E  0012               	return	
  8855  006A60                     l12256:
  8856                           
  8857                           ; BSR set to: 0
  8858  006A60  0E1A               	movlw	26
  8859  006A62  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8860  006A64  A4D8               	btfss	status,2,c
  8861  006A66  D003               	goto	l12260
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8865  006A68  0E1F               	movlw	31
  8866  006A6A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8867                           
  8868                           ;outputs_MC50.c: 174:             }
  8869  006A6C  0012               	return	
  8870  006A6E                     l12260:
  8871                           
  8872                           ; BSR set to: 0
  8873  006A6E  0E20               	movlw	32
  8874  006A70  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8875  006A72  A4D8               	btfss	status,2,c
  8876  006A74  D002               	goto	l12264
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8880  006A76  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8881                           
  8882                           ;outputs_MC50.c: 178:             }
  8883  006A78  0012               	return	
  8884  006A7A                     l12264:
  8885                           
  8886                           ; BSR set to: 0
  8887  006A7A  0E20               	movlw	32
  8888  006A7C  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8889  006A7E  A4D8               	btfss	status,2,c
  8890  006A80  D002               	goto	l12268
  8891                           
  8892                           ; BSR set to: 0
  8893                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8894  006A82  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8895                           
  8896                           ;outputs_MC50.c: 182:             }
  8897  006A84  0012               	return	
  8898  006A86                     l12268:
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8902  006A86  0E1A               	movlw	26
  8903  006A88  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8904                           
  8905                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8906  006A8A  0E20               	movlw	32
  8907  006A8C  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8908  006A8E  0012               	return	
  8909  006A90                     l12272:
  8910                           
  8911                           ; BSR set to: 0
  8912  006A90  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8913  006A92  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8914  006A94  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8915                           
  8916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8917                           ; Switch size 1, requested type "simple"
  8918                           ; Number of cases is 1, Range of values is 0 to 0
  8919                           ; switch strategies available:
  8920                           ; Name         Instructions Cycles
  8921                           ; simple_byte            4     3 (average)
  8922                           ;	Chosen strategy is simple_byte
  8923  006A96  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8924  006A98  0A00               	xorlw	0	; case 0
  8925  006A9A  A4D8               	btfss	status,2,c
  8926  006A9C  0012               	return	
  8927                           
  8928                           ; BSR set to: 0
  8929                           ; Switch size 1, requested type "simple"
  8930                           ; Number of cases is 2, Range of values is 0 to 1
  8931                           ; switch strategies available:
  8932                           ; Name         Instructions Cycles
  8933                           ; simple_byte            7     4 (average)
  8934                           ;	Chosen strategy is simple_byte
  8935  006A9E  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8936  006AA0  0A00               	xorlw	0	; case 0
  8937  006AA2  B4D8               	btfsc	status,2,c
  8938  006AA4  D7C3               	goto	l12244
  8939  006AA6  0A01               	xorlw	1	; case 1
  8940  006AA8  A4D8               	btfss	status,2,c
  8941  006AAA  0012               	return	
  8942  006AAC  D78B               	goto	l12218
  8943  006AAE                     __end_of_SetSegmentValueLearn:
  8944                           	callstack 0
  8945                           
  8946 ;; *************** function ___lldiv *****************
  8947 ;; Defined at:
  8948 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8949 ;; Parameters:    Size  Location     Type
  8950 ;;  dividend        4   15[COMRAM] unsigned long 
  8951 ;;  divisor         4   19[COMRAM] unsigned long 
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;  quotient        4   23[COMRAM] unsigned long 
  8954 ;;  counter         1   27[COMRAM] unsigned char 
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  4   15[COMRAM] unsigned long 
  8957 ;; Registers used:
  8958 ;;		wreg, status,2, status,0
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/1
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8964 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8965 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8967 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8968 ;;Total ram usage:       13 bytes
  8969 ;; Hardware stack levels used: 1
  8970 ;; Hardware stack levels required when called: 4
  8971 ;; This function calls:
  8972 ;;		Nothing
  8973 ;; This function is called by:
  8974 ;;		_sm_execute_menuConfiguration
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           	psect	text19
  8979  0079FC                     __ptext19:
  8980                           	callstack 0
  8981  0079FC                     ___lldiv:
  8982                           	callstack 24
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;incstack = 0
  8986  0079FC  0E00               	movlw	0
  8987  0079FE  6E18               	movwf	___lldiv@quotient^0,c
  8988  007A00  0E00               	movlw	0
  8989  007A02  6E19               	movwf	(___lldiv@quotient+1)^0,c
  8990  007A04  0E00               	movlw	0
  8991  007A06  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  8992  007A08  0E00               	movlw	0
  8993  007A0A  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  8994  007A0C  5014               	movf	___lldiv@divisor^0,w,c
  8995  007A0E  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  8996  007A10  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  8997  007A12  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  8998  007A14  B4D8               	btfsc	status,2,c
  8999  007A16  D02A               	goto	l3668
  9000  007A18  0E01               	movlw	1
  9001  007A1A  6E1C               	movwf	___lldiv@counter^0,c
  9002  007A1C  D006               	goto	l13822
  9003  007A1E                     l13820:
  9004  007A1E  90D8               	bcf	status,0,c
  9005  007A20  3614               	rlcf	___lldiv@divisor^0,f,c
  9006  007A22  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  9007  007A24  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  9008  007A26  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  9009  007A28  2A1C               	incf	___lldiv@counter^0,f,c
  9010  007A2A                     l13822:
  9011  007A2A  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  9012  007A2C  D7F8               	goto	l13820
  9013  007A2E                     u13620:
  9014  007A2E  90D8               	bcf	status,0,c
  9015  007A30  3618               	rlcf	___lldiv@quotient^0,f,c
  9016  007A32  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  9017  007A34  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  9018  007A36  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  9019  007A38  5014               	movf	___lldiv@divisor^0,w,c
  9020  007A3A  5C10               	subwf	___lldiv@dividend^0,w,c
  9021  007A3C  5015               	movf	(___lldiv@divisor+1)^0,w,c
  9022  007A3E  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  9023  007A40  5016               	movf	(___lldiv@divisor+2)^0,w,c
  9024  007A42  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  9025  007A44  5017               	movf	(___lldiv@divisor+3)^0,w,c
  9026  007A46  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  9027  007A48  A0D8               	btfss	status,0,c
  9028  007A4A  D009               	goto	l13832
  9029  007A4C  5014               	movf	___lldiv@divisor^0,w,c
  9030  007A4E  5E10               	subwf	___lldiv@dividend^0,f,c
  9031  007A50  5015               	movf	(___lldiv@divisor+1)^0,w,c
  9032  007A52  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  9033  007A54  5016               	movf	(___lldiv@divisor+2)^0,w,c
  9034  007A56  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  9035  007A58  5017               	movf	(___lldiv@divisor+3)^0,w,c
  9036  007A5A  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  9037  007A5C  8018               	bsf	___lldiv@quotient^0,0,c
  9038  007A5E                     l13832:
  9039  007A5E  90D8               	bcf	status,0,c
  9040  007A60  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  9041  007A62  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  9042  007A64  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  9043  007A66  3214               	rrcf	___lldiv@divisor^0,f,c
  9044  007A68  2E1C               	decfsz	___lldiv@counter^0,f,c
  9045  007A6A  D7E1               	goto	u13620
  9046  007A6C                     l3668:
  9047  007A6C  C018  F010         	movff	___lldiv@quotient,?___lldiv
  9048  007A70  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  9049  007A74  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  9050  007A78  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  9051  007A7C  0012               	return		;funcret
  9052  007A7E                     __end_of___lldiv:
  9053                           	callstack 0
  9054                           
  9055 ;; *************** function _sm_execute_ControlGate *****************
  9056 ;; Defined at:
  9057 ;;		line 128 in file "sm_ControlGate_MC50.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;  psm             2   15[BANK0 ] PTR struct .
  9060 ;;		 -> controlGate_stateMachine(11), 
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      void 
  9065 ;; Registers used:
  9066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9067 ;; Tracked objects:
  9068 ;;		On entry : 3F/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9072 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9074 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9075 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9076 ;;Total ram usage:        5 bytes
  9077 ;; Hardware stack levels used: 1
  9078 ;; Hardware stack levels required when called: 15
  9079 ;; This function calls:
  9080 ;;		_GetOpenOrder
  9081 ;;		_SetSegmentValueIntermitent
  9082 ;;		_WaitPreFlash
  9083 ;;		_actionZone_Closed
  9084 ;;		_actionZone_Closing
  9085 ;;		_actionZone_Opened
  9086 ;;		_actionZone_Opening
  9087 ;;		_sm_execute_ControlLearning
  9088 ;;		_sm_send_event
  9089 ;; This function is called by:
  9090 ;;		_main
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text20
  9095  003646                     __ptext20:
  9096                           	callstack 0
  9097  003646                     _sm_execute_ControlGate:
  9098                           	callstack 15
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  9102                           
  9103                           ;incstack = 0
  9104  003646  0101               	movlb	1	; () banked
  9105  003648  05EF               	decf	_main_stateMachine& (0+255),w,b
  9106  00364A  11F0               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  9107  00364C  A4D8               	btfss	status,2,c
  9108  00364E  D006               	goto	l23058
  9109                           
  9110                           ; BSR set to: 1
  9111  003650  0E06               	movlw	6
  9112  003652  0102               	movlb	2	; () banked
  9113  003654  19BB               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  9114  003656  11BC               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  9115  003658  A4D8               	btfss	status,2,c
  9116  00365A  0012               	return	
  9117  00365C                     l23058:
  9118                           
  9119                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  9120  00365C  0101               	movlb	1	; () banked
  9121  00365E  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  9122  003660  A4D8               	btfss	status,2,c
  9123  003662  D0CE               	goto	l23132
  9124                           
  9125                           ; BSR set to: 1
  9126                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  9127  003664  EC5E  F03F         	call	_WaitPreFlash	;wreg free
  9128  003668  D0CB               	goto	l23132
  9129  00366A                     l23062:
  9130                           
  9131                           ; BSR set to: 0
  9132                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  9133  00366A  EE20 F004          	lfsr	2,4
  9134  00366E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9135  003670  26D9               	addwf	fsr2l,f,c
  9136  003672  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9137  003674  22DA               	addwfc	fsr2h,f,c
  9138  003676  0E0A               	movlw	10
  9139  003678  18DE               	xorwf	postinc2,w,c
  9140  00367A  10DE               	iorwf	postinc2,w,c
  9141  00367C  A4D8               	btfss	status,2,c
  9142  00367E  D006               	goto	l23066
  9143  003680                     u28470:
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  9147  003680  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9148  003684  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9149  003688  0E01               	movlw	1
  9150  00368A  D0B5               	goto	L55
  9151  00368C                     l23066:
  9152                           
  9153                           ; BSR set to: 0
  9154  00368C  EE20 F004          	lfsr	2,4
  9155  003690  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9156  003692  26D9               	addwf	fsr2l,f,c
  9157  003694  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9158  003696  22DA               	addwfc	fsr2h,f,c
  9159  003698  0E0B               	movlw	11
  9160  00369A  18DE               	xorwf	postinc2,w,c
  9161  00369C  10DE               	iorwf	postinc2,w,c
  9162  00369E  A4D8               	btfss	status,2,c
  9163  0036A0  D0CF               	goto	l23134
  9164  0036A2  D038               	goto	u28540
  9165  0036A4                     l23070:
  9166                           
  9167                           ; BSR set to: 0
  9168                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  9169  0036A4  EE20 F004          	lfsr	2,4
  9170  0036A8  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9171  0036AA  26D9               	addwf	fsr2l,f,c
  9172  0036AC  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9173  0036AE  22DA               	addwfc	fsr2h,f,c
  9174  0036B0  0E0C               	movlw	12
  9175  0036B2  18DE               	xorwf	postinc2,w,c
  9176  0036B4  10DE               	iorwf	postinc2,w,c
  9177  0036B6  A4D8               	btfss	status,2,c
  9178  0036B8  D072               	goto	l23118
  9179  0036BA                     u28490:
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  9183  0036BA  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9184  0036BE  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9185  0036C2  0E02               	movlw	2
  9186  0036C4  D098               	goto	L55
  9187  0036C6                     l23078:
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  9191  0036C6  EE20 F004          	lfsr	2,4
  9192  0036CA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9193  0036CC  26D9               	addwf	fsr2l,f,c
  9194  0036CE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9195  0036D0  22DA               	addwfc	fsr2h,f,c
  9196  0036D2  0E0D               	movlw	13
  9197  0036D4  18DE               	xorwf	postinc2,w,c
  9198  0036D6  10DE               	iorwf	postinc2,w,c
  9199  0036D8  B4D8               	btfsc	status,2,c
  9200  0036DA  D01C               	goto	u28540
  9201                           
  9202                           ; BSR set to: 0
  9203                           
  9204                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9208  0036DC  EE20 F004          	lfsr	2,4
  9209  0036E0  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9210  0036E2  26D9               	addwf	fsr2l,f,c
  9211  0036E4  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9212  0036E6  22DA               	addwfc	fsr2h,f,c
  9213  0036E8  0E0E               	movlw	14
  9214  0036EA  18DE               	xorwf	postinc2,w,c
  9215  0036EC  10DE               	iorwf	postinc2,w,c
  9216  0036EE  A4D8               	btfss	status,2,c
  9217  0036F0  D02D               	goto	L129
  9218  0036F2                     u28520:
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9222  0036F2  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9223  0036F6  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9224  0036FA  0E03               	movlw	3
  9225  0036FC  D07C               	goto	L55
  9226  0036FE                     l23090:
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9230  0036FE  EE20 F004          	lfsr	2,4
  9231  003702  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9232  003704  26D9               	addwf	fsr2l,f,c
  9233  003706  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9234  003708  22DA               	addwfc	fsr2h,f,c
  9235  00370A  0E0D               	movlw	13
  9236  00370C  18DE               	xorwf	postinc2,w,c
  9237  00370E  10DE               	iorwf	postinc2,w,c
  9238  003710  A4D8               	btfss	status,2,c
  9239  003712  D006               	goto	l23094
  9240  003714                     u28540:
  9241                           
  9242                           ; BSR set to: 0
  9243                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9244  003714  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9245  003718  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9246  00371C  0E04               	movlw	4
  9247  00371E  D06B               	goto	L55
  9248  003720                     l23094:
  9249                           
  9250                           ; BSR set to: 0
  9251  003720  EE20 F004          	lfsr	2,4
  9252  003724  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9253  003726  26D9               	addwf	fsr2l,f,c
  9254  003728  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9255  00372A  22DA               	addwfc	fsr2h,f,c
  9256  00372C  0E0F               	movlw	15
  9257  00372E  18DE               	xorwf	postinc2,w,c
  9258  003730  10DE               	iorwf	postinc2,w,c
  9259  003732  B4D8               	btfsc	status,2,c
  9260  003734  D7A5               	goto	u28470
  9261                           
  9262                           ; BSR set to: 0
  9263                           
  9264                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9265                           
  9266                           ; BSR set to: 0
  9267                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9268  003736  EE20 F004          	lfsr	2,4
  9269  00373A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9270  00373C  26D9               	addwf	fsr2l,f,c
  9271  00373E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9272  003740  22DA               	addwfc	fsr2h,f,c
  9273  003742  0E0C               	movlw	12
  9274  003744  18DE               	xorwf	postinc2,w,c
  9275  003746  10DE               	iorwf	postinc2,w,c
  9276  003748  B4D8               	btfsc	status,2,c
  9277  00374A  D7B7               	goto	u28490
  9278  00374C                     L129:
  9279                           
  9280                           ; BSR set to: 0
  9281                           
  9282                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9283                           
  9284                           ; BSR set to: 0
  9285                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9286  00374C  EE20 F004          	lfsr	2,4
  9287  003750  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9288  003752  26D9               	addwf	fsr2l,f,c
  9289  003754  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9290  003756  22DA               	addwfc	fsr2h,f,c
  9291  003758  0E10               	movlw	16
  9292  00375A  D044               	goto	L126
  9293  00375C                     l23106:
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9297  00375C  EE20 F004          	lfsr	2,4
  9298  003760  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9299  003762  26D9               	addwf	fsr2l,f,c
  9300  003764  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9301  003766  22DA               	addwfc	fsr2h,f,c
  9302  003768  0E0E               	movlw	14
  9303  00376A  18DE               	xorwf	postinc2,w,c
  9304  00376C  10DE               	iorwf	postinc2,w,c
  9305  00376E  B4D8               	btfsc	status,2,c
  9306  003770  D7C0               	goto	u28520
  9307                           
  9308                           ; BSR set to: 0
  9309                           
  9310                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9314  003772  EE20 F004          	lfsr	2,4
  9315  003776  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9316  003778  26D9               	addwf	fsr2l,f,c
  9317  00377A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9318  00377C  22DA               	addwfc	fsr2h,f,c
  9319  00377E  0E0C               	movlw	12
  9320  003780  18DE               	xorwf	postinc2,w,c
  9321  003782  10DE               	iorwf	postinc2,w,c
  9322  003784  B4D8               	btfsc	status,2,c
  9323  003786  D799               	goto	u28490
  9324                           
  9325                           ; BSR set to: 0
  9326                           
  9327                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9331  003788  EE20 F004          	lfsr	2,4
  9332  00378C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9333  00378E  26D9               	addwf	fsr2l,f,c
  9334  003790  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9335  003792  22DA               	addwfc	fsr2h,f,c
  9336  003794  0E10               	movlw	16
  9337  003796  18DE               	xorwf	postinc2,w,c
  9338  003798  10DE               	iorwf	postinc2,w,c
  9339  00379A  B4D8               	btfsc	status,2,c
  9340  00379C  D027               	goto	L127
  9341  00379E                     l23118:
  9342                           
  9343                           ; BSR set to: 0
  9344  00379E  EE20 F004          	lfsr	2,4
  9345  0037A2  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9346  0037A4  26D9               	addwf	fsr2l,f,c
  9347  0037A6  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9348  0037A8  22DA               	addwfc	fsr2h,f,c
  9349  0037AA  0E14               	movlw	20
  9350  0037AC  18DE               	xorwf	postinc2,w,c
  9351  0037AE  10DE               	iorwf	postinc2,w,c
  9352  0037B0  A4D8               	btfss	status,2,c
  9353  0037B2  D046               	goto	l23134
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9357  0037B4  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9358  0037B8  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9359  0037BC  0E05               	movlw	5
  9360  0037BE  D01B               	goto	L55
  9361  0037C0                     l23122:
  9362                           
  9363                           ; BSR set to: 0
  9364                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9365  0037C0  EE20 F004          	lfsr	2,4
  9366  0037C4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9367  0037C6  26D9               	addwf	fsr2l,f,c
  9368  0037C8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9369  0037CA  22DA               	addwfc	fsr2h,f,c
  9370  0037CC  0E13               	movlw	19
  9371  0037CE  18DE               	xorwf	postinc2,w,c
  9372  0037D0  10DE               	iorwf	postinc2,w,c
  9373  0037D2  B4D8               	btfsc	status,2,c
  9374  0037D4  D755               	goto	u28470
  9375                           
  9376                           ; BSR set to: 0
  9377                           
  9378                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9382  0037D6  EE20 F004          	lfsr	2,4
  9383  0037DA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9384  0037DC  26D9               	addwf	fsr2l,f,c
  9385  0037DE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9386  0037E0  22DA               	addwfc	fsr2h,f,c
  9387  0037E2  0E12               	movlw	18
  9388  0037E4                     L126:
  9389  0037E4  18DE               	xorwf	postinc2,w,c
  9390  0037E6  10DE               	iorwf	postinc2,w,c
  9391  0037E8  A4D8               	btfss	status,2,c
  9392  0037EA  D02A               	goto	l23134
  9393  0037EC                     L127:
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9397  0037EC  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9398  0037F0  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9399  0037F4  0E00               	movlw	0
  9400  0037F6                     L55:
  9401  0037F6  6EDE               	movwf	postinc2,c
  9402  0037F8  0E00               	movlw	0
  9403  0037FA  6EDD               	movwf	postdec2,c
  9404  0037FC  D021               	goto	l23134
  9405  0037FE                     l2648:
  9406                           
  9407                           ; BSR set to: 0
  9408  0037FE  D7FF               	goto	l2648
  9409  003800                     l23132:
  9410                           
  9411                           ; BSR set to: 1
  9412  003800  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9413  003804  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9414  003808  50DF               	movf	indf2,w,c
  9415  00380A  0100               	movlb	0	; () banked
  9416  00380C  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9417  00380E  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9418                           
  9419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9420                           ; Switch size 1, requested type "simple"
  9421                           ; Number of cases is 1, Range of values is 0 to 0
  9422                           ; switch strategies available:
  9423                           ; Name         Instructions Cycles
  9424                           ; simple_byte            4     3 (average)
  9425                           ;	Chosen strategy is simple_byte
  9426  003810  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9427  003812  0A00               	xorlw	0	; case 0
  9428  003814  A4D8               	btfss	status,2,c
  9429  003816  D7F3               	goto	l2648
  9430                           
  9431                           ; BSR set to: 0
  9432                           ; Switch size 1, requested type "simple"
  9433                           ; Number of cases is 6, Range of values is 0 to 5
  9434                           ; switch strategies available:
  9435                           ; Name         Instructions Cycles
  9436                           ; simple_byte           19    10 (average)
  9437                           ;	Chosen strategy is simple_byte
  9438  003818  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9439  00381A  0A00               	xorlw	0	; case 0
  9440  00381C  B4D8               	btfsc	status,2,c
  9441  00381E  D725               	goto	l23062
  9442  003820  0A01               	xorlw	1	; case 1
  9443  003822  B4D8               	btfsc	status,2,c
  9444  003824  D73F               	goto	l23070
  9445  003826  0A03               	xorlw	3	; case 2
  9446  003828  B4D8               	btfsc	status,2,c
  9447  00382A  D74D               	goto	l23078
  9448  00382C  0A01               	xorlw	1	; case 3
  9449  00382E  B4D8               	btfsc	status,2,c
  9450  003830  D766               	goto	l23090
  9451  003832  0A07               	xorlw	7	; case 4
  9452  003834  B4D8               	btfsc	status,2,c
  9453  003836  D792               	goto	l23106
  9454  003838  0A01               	xorlw	1	; case 5
  9455  00383A  B4D8               	btfsc	status,2,c
  9456  00383C  D7C1               	goto	l23122
  9457  00383E  D7DF               	goto	l2648
  9458  003840                     l23134:
  9459                           
  9460                           ; BSR set to: 0
  9461                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9462  003840  0EE4               	movlw	low _controlGate_stateMachine
  9463  003842  6E12               	movwf	sm_send_event@psm^0,c
  9464  003844  0E01               	movlw	high _controlGate_stateMachine
  9465  003846  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9466  003848  0E00               	movlw	0
  9467  00384A  6E15               	movwf	(sm_send_event@event+1)^0,c
  9468  00384C  0E00               	movlw	0
  9469  00384E  6E14               	movwf	sm_send_event@event^0,c
  9470  003850  EC01  F041         	call	_sm_send_event	;wreg free
  9471                           
  9472                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9473  003854  D07D               	goto	l23198
  9474  003856                     l23136:
  9475                           
  9476                           ; BSR set to: 0
  9477                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9478  003856  0E00               	movlw	0
  9479  003858  0101               	movlb	1	; () banked
  9480  00385A  6FDB               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9481  00385C  0E64               	movlw	100
  9482  00385E  6FDA               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9483                           
  9484                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9485  003860  0E01               	movlw	1
  9486  003862  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9487                           
  9488                           ; BSR set to: 1
  9489                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9490  003864  0E02               	movlw	2
  9491  003866  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9492  003868  B4D8               	btfsc	status,2,c
  9493  00386A  D003               	goto	u28650
  9494                           
  9495                           ; BSR set to: 1
  9496  00386C  0E03               	movlw	3
  9497  00386E  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9498  003870  D027               	goto	l23158
  9499  003872                     u28650:
  9500                           
  9501                           ; BSR set to: 1
  9502                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9503  003872  ECA5  F028         	call	_GetOpenOrder	;wreg free
  9504  003876  0100               	movlb	0	; () banked
  9505  003878  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9506                           
  9507                           ; BSR set to: 0
  9508                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9509  00387A  0E14               	movlw	20
  9510  00387C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9511  00387E  0E00               	movlw	0
  9512  003880  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9513  003882  0E14               	movlw	20
  9514  003884  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9515  003886  0E0E               	movlw	14
  9516  003888  EC79  F045         	call	_SetSegmentValueIntermitent
  9517                           
  9518                           ; BSR set to: 1
  9519                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9520  00388C  0E00               	movlw	0
  9521  00388E  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9522  003890  0E0A               	movlw	10
  9523  003892  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9524                           
  9525                           ; BSR set to: 1
  9526                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9527  003894  0100               	movlb	0	; () banked
  9528  003896  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9529  003898  A4D8               	btfss	status,2,c
  9530  00389A  D00A               	goto	u28690
  9531                           
  9532                           ; BSR set to: 0
  9533  00389C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9534  00389E  B4D8               	btfsc	status,2,c
  9535  0038A0  D007               	goto	u28690
  9536                           
  9537                           ; BSR set to: 0
  9538  0038A2  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9539  0038A4  B4D8               	btfsc	status,2,c
  9540  0038A6  D004               	goto	u28690
  9541                           
  9542                           ; BSR set to: 0
  9543  0038A8  0E17               	movlw	23
  9544  0038AA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9545  0038AC  A4D8               	btfss	status,2,c
  9546  0038AE  0012               	return	
  9547  0038B0                     u28690:
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9551  0038B0  0E00               	movlw	0
  9552  0038B2  0101               	movlb	1	; () banked
  9553  0038B4  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9554                           
  9555                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9556  0038B6  0E00               	movlw	0
  9557  0038B8  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9558                           
  9559                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9560  0038BA  0E01               	movlw	1
  9561  0038BC  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9562  0038BE  0012               	return	
  9563  0038C0                     l23158:
  9564                           
  9565                           ; BSR set to: 1
  9566                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9567  0038C0  0E01               	movlw	1
  9568  0038C2  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9569                           
  9570                           ; BSR set to: 1
  9571                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9572  0038C4  0E01               	movlw	1
  9573  0038C6  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9574  0038C8  0E00               	movlw	0
  9575  0038CA  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9576  0038CC  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9577  0038CE  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9578                           
  9579                           ; BSR set to: 1
  9580                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9581  0038D0  0E00               	movlw	0
  9582  0038D2  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9583                           
  9584                           ; BSR set to: 1
  9585                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9586  0038D4  0E00               	movlw	0
  9587  0038D6  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9588  0038D8  0E00               	movlw	0
  9589  0038DA  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9590  0038DC  0E00               	movlw	0
  9591  0038DE  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9592  0038E0  0E00               	movlw	0
  9593  0038E2  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9594                           
  9595                           ; BSR set to: 1
  9596                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9597  0038E4  0E00               	movlw	0
  9598  0038E6  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9599                           
  9600                           ; BSR set to: 1
  9601                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9602  0038E8  0E00               	movlw	0
  9603  0038EA  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9604                           
  9605                           ; BSR set to: 1
  9606                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9607  0038EC  0E00               	movlw	0
  9608  0038EE  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9609                           
  9610                           ; BSR set to: 1
  9611                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9612  0038F0  0E00               	movlw	0
  9613  0038F2  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9614  0038F4  0E28               	movlw	40
  9615  0038F6  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9616                           
  9617                           ; BSR set to: 1
  9618                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9619  0038F8  0E0C               	movlw	12
  9620  0038FA  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9621  0038FC  0E00               	movlw	0
  9622  0038FE  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9623  003900  0E04               	movlw	4
  9624  003902  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9625  003904  0E0F               	movlw	15
  9626  003906  EC79  F045         	call	_SetSegmentValueIntermitent
  9627                           
  9628                           ; BSR set to: 1
  9629                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9630  00390A  0EE4               	movlw	low _controlGate_stateMachine
  9631  00390C  6E12               	movwf	sm_send_event@psm^0,c
  9632  00390E  0E01               	movlw	high _controlGate_stateMachine
  9633  003910  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9634  003912  0E00               	movlw	0
  9635  003914  6E15               	movwf	(sm_send_event@event+1)^0,c
  9636  003916  0E0A               	movlw	10
  9637  003918  6E14               	movwf	sm_send_event@event^0,c
  9638  00391A  EC01  F041         	call	_sm_send_event	;wreg free
  9639  00391E  0012               	return	
  9640  003920                     l23178:
  9641                           
  9642                           ; BSR set to: 0
  9643                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9644  003920  ECFC  F038         	call	_actionZone_Closed	;wreg free
  9645                           
  9646                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9647  003924  0012               	return	
  9648  003926                     l23180:
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9652  003926  EC56  F022         	call	_actionZone_Opening	;wreg free
  9653  00392A                     l23182:
  9654                           
  9655                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9656  00392A  0E00               	movlw	0
  9657  00392C  0101               	movlb	1	; () banked
  9658  00392E  6FDB               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9659  003930  0E64               	movlw	100
  9660  003932  6FDA               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9661                           
  9662                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9663  003934  0012               	return	
  9664  003936                     l23184:
  9665                           
  9666                           ; BSR set to: 0
  9667                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9668  003936  ECC5  F026         	call	_actionZone_Opened	;wreg free
  9669  00393A  D7F7               	goto	l23182
  9670  00393C                     l23188:
  9671                           
  9672                           ; BSR set to: 0
  9673                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9674  00393C  ECD5  F01F         	call	_actionZone_Closing	;wreg free
  9675  003940  D7F4               	goto	l23182
  9676  003942                     l23192:
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9680  003942  0EB0               	movlw	low _controlLearning_stateMachine
  9681  003944  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9682  003946  0E02               	movlw	high _controlLearning_stateMachine
  9683  003948  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9684  00394A  EC43  F00C         	call	_sm_execute_ControlLearning	;wreg free
  9685  00394E  D7ED               	goto	l23182
  9686  003950                     l23198:
  9687  003950  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9688  003954  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9689  003958  50DF               	movf	indf2,w,c
  9690  00395A  0100               	movlb	0	; () banked
  9691  00395C  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9692  00395E  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9693                           
  9694                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9695                           ; Switch size 1, requested type "simple"
  9696                           ; Number of cases is 1, Range of values is 0 to 0
  9697                           ; switch strategies available:
  9698                           ; Name         Instructions Cycles
  9699                           ; simple_byte            4     3 (average)
  9700                           ;	Chosen strategy is simple_byte
  9701  003960  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9702  003962  0A00               	xorlw	0	; case 0
  9703  003964  A4D8               	btfss	status,2,c
  9704  003966  0012               	return	
  9705                           
  9706                           ; BSR set to: 0
  9707                           ; Switch size 1, requested type "simple"
  9708                           ; Number of cases is 6, Range of values is 0 to 5
  9709                           ; switch strategies available:
  9710                           ; Name         Instructions Cycles
  9711                           ; simple_byte           19    10 (average)
  9712                           ;	Chosen strategy is simple_byte
  9713  003968  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9714  00396A  0A00               	xorlw	0	; case 0
  9715  00396C  B4D8               	btfsc	status,2,c
  9716  00396E  D773               	goto	l23136
  9717  003970  0A01               	xorlw	1	; case 1
  9718  003972  B4D8               	btfsc	status,2,c
  9719  003974  D7D5               	goto	l23178
  9720  003976  0A03               	xorlw	3	; case 2
  9721  003978  B4D8               	btfsc	status,2,c
  9722  00397A  D7D5               	goto	l23180
  9723  00397C  0A01               	xorlw	1	; case 3
  9724  00397E  B4D8               	btfsc	status,2,c
  9725  003980  D7DD               	goto	l23188
  9726  003982  0A07               	xorlw	7	; case 4
  9727  003984  B4D8               	btfsc	status,2,c
  9728  003986  D7D7               	goto	l23184
  9729  003988  0A01               	xorlw	1	; case 5
  9730  00398A  A4D8               	btfss	status,2,c
  9731  00398C  0012               	return	
  9732  00398E  D7D9               	goto	l23192
  9733  003990                     __end_of_sm_execute_ControlGate:
  9734                           	callstack 0
  9735                           
  9736 ;; *************** function _sm_execute_ControlLearning *****************
  9737 ;; Defined at:
  9738 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9739 ;; Parameters:    Size  Location     Type
  9740 ;;  psm             2    4[BANK0 ] PTR struct .
  9741 ;;		 -> controlLearning_stateMachine(11), 
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  1    wreg      void 
  9746 ;; Registers used:
  9747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9748 ;; Tracked objects:
  9749 ;;		On entry : 3F/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9753 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9755 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9756 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9757 ;;Total ram usage:        5 bytes
  9758 ;; Hardware stack levels used: 1
  9759 ;; Hardware stack levels required when called: 14
  9760 ;; This function calls:
  9761 ;;		_GetOpenOrder
  9762 ;;		_SaveNVM_VarSystem
  9763 ;;		_calculateMean
  9764 ;;		_clearLearningValue
  9765 ;;		_generateErrorLearnig
  9766 ;;		_sm_send_event
  9767 ;; This function is called by:
  9768 ;;		_sm_execute_ControlGate
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           	psect	text21
  9773  001886                     __ptext21:
  9774                           	callstack 0
  9775  001886                     _sm_execute_ControlLearning:
  9776                           	callstack 15
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9780                           
  9781                           ;incstack = 0
  9782  001886  ECA5  F028         	call	_GetOpenOrder	;wreg free
  9783  00188A  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9784                           
  9785                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9786  00188C  D0B8               	goto	l21858
  9787  00188E                     l21784:
  9788                           
  9789                           ; BSR set to: 0
  9790                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9791  00188E  EE20 F004          	lfsr	2,4
  9792  001892  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9793  001894  26D9               	addwf	fsr2l,f,c
  9794  001896  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9795  001898  22DA               	addwfc	fsr2h,f,c
  9796  00189A  0E0A               	movlw	10
  9797  00189C  18DE               	xorwf	postinc2,w,c
  9798  00189E  10DE               	iorwf	postinc2,w,c
  9799  0018A0  A4D8               	btfss	status,2,c
  9800  0018A2  D00D               	goto	l21792
  9801                           
  9802                           ; BSR set to: 0
  9803  0018A4  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9804  0018A6  B4D8               	btfsc	status,2,c
  9805  0018A8  D00A               	goto	l21792
  9806                           
  9807                           ; BSR set to: 0
  9808  0018AA  0101               	movlb	1	; () banked
  9809  0018AC  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9810  0018AE  A4D8               	btfss	status,2,c
  9811  0018B0  D006               	goto	l21792
  9812  0018B2                     u25790:
  9813                           
  9814                           ; BSR set to: 1
  9815                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9816  0018B2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9817  0018B6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9818  0018BA  0E02               	movlw	2
  9819  0018BC  D08A               	goto	L66
  9820  0018BE                     l21792:
  9821  0018BE  0100               	movlb	0	; () banked
  9822  0018C0  EE20 F004          	lfsr	2,4
  9823  0018C4  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9824  0018C6  26D9               	addwf	fsr2l,f,c
  9825  0018C8  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9826  0018CA  22DA               	addwfc	fsr2h,f,c
  9827  0018CC  0E0A               	movlw	10
  9828  0018CE  18DE               	xorwf	postinc2,w,c
  9829  0018D0  10DE               	iorwf	postinc2,w,c
  9830  0018D2  A4D8               	btfss	status,2,c
  9831  0018D4  D00D               	goto	l21800
  9832                           
  9833                           ; BSR set to: 0
  9834  0018D6  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9835  0018D8  B4D8               	btfsc	status,2,c
  9836  0018DA  D004               	goto	u25820
  9837                           
  9838                           ; BSR set to: 0
  9839  0018DC  0101               	movlb	1	; () banked
  9840  0018DE  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9841  0018E0  A4D8               	btfss	status,2,c
  9842  0018E2  D006               	goto	l21800
  9843  0018E4                     u25820:
  9844                           
  9845                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9846  0018E4  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9847  0018E8  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9848  0018EC  0E04               	movlw	4
  9849  0018EE  D071               	goto	L66
  9850  0018F0                     l21800:
  9851  0018F0  0100               	movlb	0	; () banked
  9852  0018F2  EE20 F004          	lfsr	2,4
  9853  0018F6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9854  0018F8  26D9               	addwf	fsr2l,f,c
  9855  0018FA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9856  0018FC  22DA               	addwfc	fsr2h,f,c
  9857  0018FE  0E0B               	movlw	11
  9858  001900  18DE               	xorwf	postinc2,w,c
  9859  001902  10DE               	iorwf	postinc2,w,c
  9860  001904  A4D8               	btfss	status,2,c
  9861  001906  D09B               	goto	l21860
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9865  001908  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9866  00190C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9867  001910  0E01               	movlw	1
  9868  001912  D05F               	goto	L66
  9869  001914                     l21804:
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9873  001914  EE20 F004          	lfsr	2,4
  9874  001918  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9875  00191A  26D9               	addwf	fsr2l,f,c
  9876  00191C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9877  00191E  22DA               	addwfc	fsr2h,f,c
  9878  001920  0E0A               	movlw	10
  9879  001922  18DE               	xorwf	postinc2,w,c
  9880  001924  10DE               	iorwf	postinc2,w,c
  9881  001926  A4D8               	btfss	status,2,c
  9882  001928  D007               	goto	l21812
  9883                           
  9884                           ; BSR set to: 0
  9885  00192A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9886  00192C  B4D8               	btfsc	status,2,c
  9887  00192E  D004               	goto	l21812
  9888                           
  9889                           ; BSR set to: 0
  9890  001930  0101               	movlb	1	; () banked
  9891  001932  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9892  001934  B4D8               	btfsc	status,2,c
  9893  001936  D7BD               	goto	u25790
  9894  001938                     l21812:
  9895  001938  0100               	movlb	0	; () banked
  9896  00193A  EE20 F004          	lfsr	2,4
  9897  00193E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9898  001940  26D9               	addwf	fsr2l,f,c
  9899  001942  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9900  001944  22DA               	addwfc	fsr2h,f,c
  9901  001946  0E0A               	movlw	10
  9902  001948  18DE               	xorwf	postinc2,w,c
  9903  00194A  10DE               	iorwf	postinc2,w,c
  9904  00194C  A4D8               	btfss	status,2,c
  9905  00194E  D007               	goto	l21820
  9906                           
  9907                           ; BSR set to: 0
  9908  001950  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9909  001952  B4D8               	btfsc	status,2,c
  9910  001954  D7C7               	goto	u25820
  9911                           
  9912                           ; BSR set to: 0
  9913  001956  0101               	movlb	1	; () banked
  9914  001958  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9915  00195A  B4D8               	btfsc	status,2,c
  9916  00195C  D7C3               	goto	u25820
  9917  00195E                     l21820:
  9918  00195E  0100               	movlb	0	; () banked
  9919  001960                     L68:
  9920  001960  EE20 F004          	lfsr	2,4
  9921  001964  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9922  001966  26D9               	addwf	fsr2l,f,c
  9923  001968  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9924  00196A  22DA               	addwfc	fsr2h,f,c
  9925  00196C  0E10               	movlw	16
  9926  00196E  18DE               	xorwf	postinc2,w,c
  9927  001970  10DE               	iorwf	postinc2,w,c
  9928  001972  A4D8               	btfss	status,2,c
  9929  001974  D064               	goto	l21860
  9930  001976  D03C               	goto	L128
  9931  001978                     l21824:
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9935  001978  EE20 F004          	lfsr	2,4
  9936  00197C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9937  00197E  26D9               	addwf	fsr2l,f,c
  9938  001980  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9939  001982  22DA               	addwfc	fsr2h,f,c
  9940  001984  0E0B               	movlw	11
  9941  001986  18DE               	xorwf	postinc2,w,c
  9942  001988  10DE               	iorwf	postinc2,w,c
  9943  00198A  A4D8               	btfss	status,2,c
  9944  00198C  D7E9               	goto	L68
  9945                           
  9946                           ; BSR set to: 0
  9947                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
  9948  00198E  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9949  001992  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9950  001996  0E03               	movlw	3
  9951  001998  D01C               	goto	L66
  9952  00199A                     l21832:
  9953                           
  9954                           ; BSR set to: 0
  9955                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
  9956  00199A  EE20 F004          	lfsr	2,4
  9957  00199E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9958  0019A0  26D9               	addwf	fsr2l,f,c
  9959  0019A2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9960  0019A4  22DA               	addwfc	fsr2h,f,c
  9961  0019A6  0E0A               	movlw	10
  9962  0019A8  18DE               	xorwf	postinc2,w,c
  9963  0019AA  10DE               	iorwf	postinc2,w,c
  9964  0019AC  A4D8               	btfss	status,2,c
  9965  0019AE  D7D8               	goto	L68
  9966  0019B0  D799               	goto	u25820
  9967  0019B2                     l21840:
  9968                           
  9969                           ; BSR set to: 0
  9970                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
  9971  0019B2  EE20 F004          	lfsr	2,4
  9972  0019B6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9973  0019B8  26D9               	addwf	fsr2l,f,c
  9974  0019BA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9975  0019BC  22DA               	addwfc	fsr2h,f,c
  9976  0019BE  0E0B               	movlw	11
  9977  0019C0  18DE               	xorwf	postinc2,w,c
  9978  0019C2  10DE               	iorwf	postinc2,w,c
  9979  0019C4  A4D8               	btfss	status,2,c
  9980  0019C6  D7CC               	goto	L68
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
  9984  0019C8  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9985  0019CC  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9986  0019D0  0E05               	movlw	5
  9987  0019D2                     L66:
  9988  0019D2  6EDE               	movwf	postinc2,c
  9989  0019D4  0E00               	movlw	0
  9990  0019D6  6EDD               	movwf	postdec2,c
  9991  0019D8  D032               	goto	l21860
  9992  0019DA                     l21848:
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
  9996  0019DA  EE20 F004          	lfsr	2,4
  9997  0019DE  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9998  0019E0  26D9               	addwf	fsr2l,f,c
  9999  0019E2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10000  0019E4  22DA               	addwfc	fsr2h,f,c
 10001  0019E6  0E0A               	movlw	10
 10002  0019E8  18DE               	xorwf	postinc2,w,c
 10003  0019EA  10DE               	iorwf	postinc2,w,c
 10004  0019EC  A4D8               	btfss	status,2,c
 10005  0019EE  D7B8               	goto	L68
 10006  0019F0                     L128:
 10007                           
 10008                           ; BSR set to: 0
 10009                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
 10010  0019F0  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10011  0019F4  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10012  0019F8  0E00               	movlw	0
 10013  0019FA  D7EB               	goto	L66
 10014  0019FC                     l2907:
 10015                           
 10016                           ; BSR set to: 0
 10017  0019FC  D7FF               	goto	l2907
 10018  0019FE                     l21858:
 10019  0019FE  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10020  001A02  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10021  001A06  50DF               	movf	indf2,w,c
 10022  001A08  0100               	movlb	0	; () banked
 10023  001A0A  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10024  001A0C  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10025                           
 10026                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10027                           ; Switch size 1, requested type "simple"
 10028                           ; Number of cases is 1, Range of values is 0 to 0
 10029                           ; switch strategies available:
 10030                           ; Name         Instructions Cycles
 10031                           ; simple_byte            4     3 (average)
 10032                           ;	Chosen strategy is simple_byte
 10033  001A0E  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10034  001A10  0A00               	xorlw	0	; case 0
 10035  001A12  A4D8               	btfss	status,2,c
 10036  001A14  D7F3               	goto	l2907
 10037                           
 10038                           ; BSR set to: 0
 10039                           ; Switch size 1, requested type "simple"
 10040                           ; Number of cases is 6, Range of values is 0 to 5
 10041                           ; switch strategies available:
 10042                           ; Name         Instructions Cycles
 10043                           ; simple_byte           19    10 (average)
 10044                           ;	Chosen strategy is simple_byte
 10045  001A16  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10046  001A18  0A00               	xorlw	0	; case 0
 10047  001A1A  B4D8               	btfsc	status,2,c
 10048  001A1C  D738               	goto	l21784
 10049  001A1E  0A01               	xorlw	1	; case 1
 10050  001A20  B4D8               	btfsc	status,2,c
 10051  001A22  D778               	goto	l21804
 10052  001A24  0A03               	xorlw	3	; case 2
 10053  001A26  B4D8               	btfsc	status,2,c
 10054  001A28  D7A7               	goto	l21824
 10055  001A2A  0A01               	xorlw	1	; case 3
 10056  001A2C  B4D8               	btfsc	status,2,c
 10057  001A2E  D7B5               	goto	l21832
 10058  001A30  0A07               	xorlw	7	; case 4
 10059  001A32  B4D8               	btfsc	status,2,c
 10060  001A34  D7BE               	goto	l21840
 10061  001A36  0A01               	xorlw	1	; case 5
 10062  001A38  B4D8               	btfsc	status,2,c
 10063  001A3A  D7CF               	goto	l21848
 10064  001A3C  D7DF               	goto	l2907
 10065  001A3E                     l21860:
 10066                           
 10067                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
 10068  001A3E  0EB0               	movlw	low _controlLearning_stateMachine
 10069  001A40  6E12               	movwf	sm_send_event@psm^0,c
 10070  001A42  0E02               	movlw	high _controlLearning_stateMachine
 10071  001A44  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10072  001A46  0E00               	movlw	0
 10073  001A48  6E15               	movwf	(sm_send_event@event+1)^0,c
 10074  001A4A  0E00               	movlw	0
 10075  001A4C  6E14               	movwf	sm_send_event@event^0,c
 10076  001A4E  EC01  F041         	call	_sm_send_event	;wreg free
 10077                           
 10078                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
 10079  001A52  D280               	goto	l22116
 10080  001A54                     l21862:
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
 10084  001A54  0101               	movlb	1	; () banked
 10085  001A56  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10086  001A58  A4D8               	btfss	status,2,c
 10087  001A5A  D03A               	goto	l21880
 10088                           
 10089                           ; BSR set to: 1
 10090                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
 10091  001A5C  0E01               	movlw	1
 10092  001A5E  0100               	movlb	0	; () banked
 10093  001A60  6F81               	movwf	_control_limit_switch& (0+255),b
 10094                           
 10095                           ; BSR set to: 0
 10096                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10097  001A62  0EB0               	movlw	low _controlLearning_stateMachine
 10098  001A64  6E12               	movwf	sm_send_event@psm^0,c
 10099  001A66  0E02               	movlw	high _controlLearning_stateMachine
 10100  001A68  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10101  001A6A  0E00               	movlw	0
 10102  001A6C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10103  001A6E  0E0A               	movlw	10
 10104  001A70  6E14               	movwf	sm_send_event@event^0,c
 10105  001A72  EC01  F041         	call	_sm_send_event	;wreg free
 10106                           
 10107                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
 10108  001A76  0E01               	movlw	1
 10109  001A78  0101               	movlb	1	; () banked
 10110  001A7A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10111                           
 10112                           ; BSR set to: 1
 10113                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
 10114  001A7C  ECBE  F03D         	call	_clearLearningValue	;wreg free
 10115                           
 10116                           ; BSR set to: 0
 10117                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
 10118  001A80  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10119  001A82  B4D8               	btfsc	status,2,c
 10120  001A84  D016               	goto	l21878
 10121                           
 10122                           ; BSR set to: 0
 10123  001A86  0101               	movlb	1	; () banked
 10124  001A88  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10125  001A8A  A4D8               	btfss	status,2,c
 10126  001A8C  D012               	goto	l21878
 10127  001A8E                     u26010:
 10128                           
 10129                           ; BSR set to: 1
 10130                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
 10131  001A8E  0E01               	movlw	1
 10132  001A90  6FD3               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10133  001A92  0E2C               	movlw	44
 10134  001A94  6FD2               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10135                           
 10136                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
 10137  001A96  0E00               	movlw	0
 10138  001A98  6FD1               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10139  001A9A  0E78               	movlw	120
 10140  001A9C  6FD0               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10141                           
 10142                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10143  001A9E  0E00               	movlw	0
 10144  001AA0  6FE1               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10145  001AA2  0E14               	movlw	20
 10146  001AA4  6FE0               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10147                           
 10148                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
 10149  001AA6  0E01               	movlw	1
 10150  001AA8  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10151                           
 10152                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
 10153  001AAA  0E00               	movlw	0
 10154  001AAC  0100               	movlb	0	; () banked
 10155  001AAE  6F81               	movwf	_control_limit_switch& (0+255),b
 10156                           
 10157                           ;sm_ControlLearning_MC50.c: 148:                  }
 10158  001AB0  0012               	return	
 10159  001AB2                     l21878:
 10160                           
 10161                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
 10162  001AB2  0E00               	movlw	0
 10163  001AB4  0101               	movlb	1	; () banked
 10164  001AB6  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10165                           
 10166                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10167  001AB8  0E00               	movlw	0
 10168  001ABA  6FD1               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10169  001ABC  0E50               	movlw	80
 10170  001ABE  6FD0               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10171                           
 10172                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10173  001AC0  0E00               	movlw	0
 10174  001AC2  6FE1               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10175  001AC4  0E14               	movlw	20
 10176  001AC6  6FE0               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10177                           
 10178                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
 10179  001AC8  0E00               	movlw	0
 10180  001ACA  0100               	movlb	0	; () banked
 10181  001ACC  6F81               	movwf	_control_limit_switch& (0+255),b
 10182  001ACE  0012               	return	
 10183  001AD0                     l21880:
 10184                           
 10185                           ; BSR set to: 1
 10186                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10187  001AD0  0EB0               	movlw	low _controlLearning_stateMachine
 10188  001AD2  6E12               	movwf	sm_send_event@psm^0,c
 10189  001AD4  0E02               	movlw	high _controlLearning_stateMachine
 10190  001AD6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10191  001AD8  0E00               	movlw	0
 10192  001ADA  6E15               	movwf	(sm_send_event@event+1)^0,c
 10193  001ADC  0E0B               	movlw	11
 10194  001ADE  6E14               	movwf	sm_send_event@event^0,c
 10195  001AE0  EC01  F041         	call	_sm_send_event	;wreg free
 10196                           
 10197                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10198  001AE4  0E03               	movlw	3
 10199  001AE6  0101               	movlb	1	; () banked
 10200  001AE8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10201                           
 10202                           ; BSR set to: 1
 10203                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10204  001AEA  0E01               	movlw	1
 10205  001AEC  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10206                           
 10207                           ; BSR set to: 1
 10208                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10209                           
 10210                           ;sm_ControlLearning_MC50.c: 163:             }
 10211  001AEE  0012               	return	
 10212  001AF0                     l21886:
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10216  001AF0  0101               	movlb	1	; () banked
 10217  001AF2  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10218  001AF4  B4D8               	btfsc	status,2,c
 10219  001AF6  D00E               	goto	u26060
 10220                           
 10221                           ; BSR set to: 1
 10222  001AF8  0100               	movlb	0	; () banked
 10223  001AFA  0581               	decf	_control_limit_switch& (0+255),w,b
 10224  001AFC  B4D8               	btfsc	status,2,c
 10225  001AFE  D00A               	goto	u26060
 10226                           
 10227                           ; BSR set to: 0
 10228  001B00  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10229  001B02  B4D8               	btfsc	status,2,c
 10230  001B04  D003               	goto	u26050
 10231                           
 10232                           ; BSR set to: 0
 10233  001B06  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10234  001B08  A4D8               	btfss	status,2,c
 10235  001B0A  D028               	goto	l21914
 10236  001B0C                     u26050:
 10237                           
 10238                           ; BSR set to: 0
 10239  001B0C  0101               	movlb	1	; () banked
 10240  001B0E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10241  001B10  A4D8               	btfss	status,2,c
 10242  001B12  D024               	goto	l21914
 10243  001B14                     u26060:
 10244                           
 10245                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10246  001B14  0E01               	movlw	1
 10247  001B16  0100               	movlb	0	; () banked
 10248  001B18  6F81               	movwf	_control_limit_switch& (0+255),b
 10249                           
 10250                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10251  001B1A  0E00               	movlw	0
 10252  001B1C  0101               	movlb	1	; () banked
 10253  001B1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10254                           
 10255                           ; BSR set to: 1
 10256                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10257  001B20  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10258  001B22  D005               	goto	u26070
 10259  001B24  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10260  001B26  E102               	bnz	u26071
 10261  001B28  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10262  001B2A  B0D8               	btfsc	status,0,c
 10263  001B2C                     u26071:
 10264  001B2C  0012               	return	
 10265  001B2E                     u26070:
 10266                           
 10267                           ; BSR set to: 1
 10268                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10269  001B2E  0EB0               	movlw	low _controlLearning_stateMachine
 10270  001B30  6E12               	movwf	sm_send_event@psm^0,c
 10271  001B32  0E02               	movlw	high _controlLearning_stateMachine
 10272  001B34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10273  001B36  0E00               	movlw	0
 10274  001B38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10275  001B3A  0E0A               	movlw	10
 10276  001B3C  6E14               	movwf	sm_send_event@event^0,c
 10277  001B3E  EC01  F041         	call	_sm_send_event	;wreg free
 10278                           
 10279                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10280  001B42  0E01               	movlw	1
 10281  001B44  0101               	movlb	1	; () banked
 10282  001B46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10283                           
 10284                           ; BSR set to: 1
 10285                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10286  001B48  ECBE  F03D         	call	_clearLearningValue	;wreg free
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10290  001B4C  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10291  001B4E  B4D8               	btfsc	status,2,c
 10292  001B50  D7B0               	goto	l21878
 10293                           
 10294                           ; BSR set to: 0
 10295  001B52  0101               	movlb	1	; () banked
 10296  001B54  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10297  001B56  B4D8               	btfsc	status,2,c
 10298  001B58  D79A               	goto	u26010
 10299  001B5A  D7AB               	goto	l21878
 10300  001B5C                     l21914:
 10301  001B5C  0101               	movlb	1	; () banked
 10302  001B5E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10303  001B60  A4D8               	btfss	status,2,c
 10304  001B62  D003               	goto	l21918
 10305  001B64                     u26100:
 10306                           
 10307                           ; BSR set to: 1
 10308                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10309  001B64  EC3A  F040         	call	_generateErrorLearnig	;wreg free
 10310                           
 10311                           ;sm_ControlLearning_MC50.c: 198:             }
 10312  001B68  0012               	return	
 10313  001B6A                     l21918:
 10314                           
 10315                           ; BSR set to: 1
 10316                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10317  001B6A  0E00               	movlw	0
 10318  001B6C  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10319  001B6E  0E28               	movlw	40
 10320  001B70  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10321  001B72  0012               	return	
 10322  001B74                     l21920:
 10323                           
 10324                           ; BSR set to: 0
 10325                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10326  001B74  0101               	movlb	1	; () banked
 10327  001B76  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10328  001B78  A4D8               	btfss	status,2,c
 10329                           
 10330                           ; BSR set to: 1
 10331  001B7A  BFD3               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10332  001B7C  D009               	goto	u26130
 10333  001B7E  51D3               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10334  001B80  E103               	bnz	u26120
 10335  001B82  05D2               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10336  001B84  A0D8               	btfss	status,0,c
 10337  001B86  D004               	goto	u26130
 10338  001B88                     u26120:
 10339                           
 10340                           ; BSR set to: 1
 10341  001B88  0100               	movlb	0	; () banked
 10342  001B8A  0581               	decf	_control_limit_switch& (0+255),w,b
 10343  001B8C  A4D8               	btfss	status,2,c
 10344  001B8E  D02A               	goto	l21942
 10345  001B90                     u26130:
 10346                           
 10347                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10348  001B90  0E01               	movlw	1
 10349  001B92  0100               	movlb	0	; () banked
 10350  001B94  6F81               	movwf	_control_limit_switch& (0+255),b
 10351                           
 10352                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10353  001B96  0E00               	movlw	0
 10354  001B98  0101               	movlb	1	; () banked
 10355  001B9A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10356                           
 10357                           ; BSR set to: 1
 10358                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10359  001B9C  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10360  001B9E  D005               	goto	u26140
 10361  001BA0  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10362  001BA2  E102               	bnz	u26141
 10363  001BA4  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10364  001BA6  B0D8               	btfsc	status,0,c
 10365  001BA8                     u26141:
 10366  001BA8  0012               	return	
 10367  001BAA                     u26140:
 10368                           
 10369                           ; BSR set to: 1
 10370                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10371  001BAA  0EB0               	movlw	low _controlLearning_stateMachine
 10372  001BAC  6E12               	movwf	sm_send_event@psm^0,c
 10373  001BAE  0E02               	movlw	high _controlLearning_stateMachine
 10374  001BB0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10375  001BB2  0E00               	movlw	0
 10376  001BB4  6E15               	movwf	(sm_send_event@event+1)^0,c
 10377  001BB6  0E0B               	movlw	11
 10378  001BB8  6E14               	movwf	sm_send_event@event^0,c
 10379  001BBA  EC01  F041         	call	_sm_send_event	;wreg free
 10380                           
 10381                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10382  001BBE  0E03               	movlw	3
 10383  001BC0  0101               	movlb	1	; () banked
 10384  001BC2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10385                           
 10386                           ; BSR set to: 1
 10387                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10388  001BC4  0E00               	movlw	0
 10389  001BC6  6FD3               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10390  001BC8  0E64               	movlw	100
 10391  001BCA  6FD2               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10392                           
 10393                           ; BSR set to: 1
 10394                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10395  001BCC  0E00               	movlw	0
 10396  001BCE  6FD1               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10397  001BD0  0E64               	movlw	100
 10398  001BD2                     L67:
 10399  001BD2  6FD0               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10400                           
 10401                           ; BSR set to: 1
 10402                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10403  001BD4  0E00               	movlw	0
 10404  001BD6  6FE1               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10405  001BD8  0E14               	movlw	20
 10406  001BDA  6FE0               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10407                           
 10408                           ; BSR set to: 1
 10409                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10410  001BDC  0E00               	movlw	0
 10411  001BDE  0100               	movlb	0	; () banked
 10412  001BE0  6F81               	movwf	_control_limit_switch& (0+255),b
 10413  001BE2  0012               	return	
 10414  001BE4                     l21942:
 10415                           
 10416                           ; BSR set to: 0
 10417  001BE4  0101               	movlb	1	; () banked
 10418  001BE6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10419  001BE8  B4D8               	btfsc	status,2,c
 10420  001BEA  D7BC               	goto	u26100
 10421                           
 10422                           ; BSR set to: 1
 10423                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10424  001BEC  0E00               	movlw	0
 10425  001BEE  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10426  001BF0  0E28               	movlw	40
 10427  001BF2  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10428                           
 10429                           ; BSR set to: 1
 10430                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10431  001BF4  BFE1               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10432  001BF6  D005               	goto	u26160
 10433  001BF8  51E1               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10434  001BFA  E102               	bnz	u26161
 10435  001BFC  05E0               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10436  001BFE  B0D8               	btfsc	status,0,c
 10437  001C00                     u26161:
 10438  001C00  0012               	return	
 10439  001C02                     u26160:
 10440                           
 10441                           ; BSR set to: 1
 10442                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10443  001C02  BFD1               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10444  001C04  0012               	return	
 10445  001C06  51D1               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10446  001C08  E103               	bnz	u26170
 10447  001C0A  05D0               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10448  001C0C  A0D8               	btfss	status,0,c
 10449  001C0E  0012               	return	
 10450  001C10                     u26170:
 10451                           
 10452                           ; BSR set to: 1
 10453                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10454  001C10  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10455  001C14  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10456  001C18  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10457  001C1A  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10458  001C1C  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10459  001C20  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10460  001C24  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10461  001C28  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10462  001C2C  ECA1  F040         	call	_calculateMean	;wreg free
 10463  001C30  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10464  001C34  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10465  001C38  0012               	return	
 10466  001C3A                     l21954:
 10467                           
 10468                           ; BSR set to: 0
 10469                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10470  001C3A  0101               	movlb	1	; () banked
 10471  001C3C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10472  001C3E  B4D8               	btfsc	status,2,c
 10473  001C40  D004               	goto	u26190
 10474                           
 10475                           ; BSR set to: 1
 10476  001C42  0100               	movlb	0	; () banked
 10477  001C44  0581               	decf	_control_limit_switch& (0+255),w,b
 10478  001C46  A4D8               	btfss	status,2,c
 10479  001C48  D020               	goto	l21974
 10480  001C4A                     u26190:
 10481                           
 10482                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10483  001C4A  0E01               	movlw	1
 10484  001C4C  0100               	movlb	0	; () banked
 10485  001C4E  6F81               	movwf	_control_limit_switch& (0+255),b
 10486                           
 10487                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10488  001C50  0E00               	movlw	0
 10489  001C52  0101               	movlb	1	; () banked
 10490  001C54  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10491                           
 10492                           ; BSR set to: 1
 10493                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10494  001C56  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10495  001C58  D005               	goto	u26200
 10496  001C5A  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10497  001C5C  E102               	bnz	u26201
 10498  001C5E  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10499  001C60  B0D8               	btfsc	status,0,c
 10500  001C62                     u26201:
 10501  001C62  0012               	return	
 10502  001C64                     u26200:
 10503                           
 10504                           ; BSR set to: 1
 10505                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10506  001C64  0EB0               	movlw	low _controlLearning_stateMachine
 10507  001C66  6E12               	movwf	sm_send_event@psm^0,c
 10508  001C68  0E02               	movlw	high _controlLearning_stateMachine
 10509  001C6A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10510  001C6C  0E00               	movlw	0
 10511  001C6E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10512  001C70  0E0A               	movlw	10
 10513  001C72  6E14               	movwf	sm_send_event@event^0,c
 10514  001C74  EC01  F041         	call	_sm_send_event	;wreg free
 10515                           
 10516                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10517  001C78  0E01               	movlw	1
 10518  001C7A  0101               	movlb	1	; () banked
 10519  001C7C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10520                           
 10521                           ; BSR set to: 1
 10522                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10523  001C7E  0E00               	movlw	0
 10524  001C80  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10525                           
 10526                           ; BSR set to: 1
 10527                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10528  001C82  0E00               	movlw	0
 10529  001C84  6FD1               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10530  001C86  0E3C               	movlw	60
 10531  001C88  D7A4               	goto	L67
 10532  001C8A                     l21974:
 10533                           
 10534                           ; BSR set to: 0
 10535  001C8A  0101               	movlb	1	; () banked
 10536  001C8C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10537  001C8E  B4D8               	btfsc	status,2,c
 10538  001C90  D769               	goto	u26100
 10539                           
 10540                           ; BSR set to: 1
 10541                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10542  001C92  0E00               	movlw	0
 10543  001C94  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10544  001C96  0E28               	movlw	40
 10545  001C98  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10546                           
 10547                           ; BSR set to: 1
 10548                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10549  001C9A  BFE1               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10550  001C9C  D005               	goto	u26220
 10551  001C9E  51E1               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10552  001CA0  E102               	bnz	u26221
 10553  001CA2  05E0               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10554  001CA4  B0D8               	btfsc	status,0,c
 10555  001CA6                     u26221:
 10556  001CA6  0012               	return	
 10557  001CA8                     u26220:
 10558                           
 10559                           ; BSR set to: 1
 10560                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10561  001CA8  BFD1               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10562  001CAA  0012               	return	
 10563  001CAC  51D1               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10564  001CAE  E103               	bnz	u26230
 10565  001CB0  05D0               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10566  001CB2  A0D8               	btfss	status,0,c
 10567  001CB4  0012               	return	
 10568  001CB6                     u26230:
 10569                           
 10570                           ; BSR set to: 1
 10571                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10572  001CB6  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10573  001CBA  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10574  001CBE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10575  001CC0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10576  001CC2  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10577  001CC6  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10578  001CCA  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10579  001CCE  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10580  001CD2  ECA1  F040         	call	_calculateMean	;wreg free
 10581  001CD6  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10582  001CDA  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10583  001CDE  0012               	return	
 10584  001CE0                     l21986:
 10585                           
 10586                           ; BSR set to: 0
 10587                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.
      +                          programinAutomatic == 1))
 10588  001CE0  0101               	movlb	1	; () banked
 10589  001CE2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10590  001CE4  B4D8               	btfsc	status,2,c
 10591  001CE6  D011               	goto	u26290
 10592                           
 10593                           ; BSR set to: 1
 10594  001CE8  0100               	movlb	0	; () banked
 10595  001CEA  0581               	decf	_control_limit_switch& (0+255),w,b
 10596  001CEC  B4D8               	btfsc	status,2,c
 10597  001CEE  D00D               	goto	u26290
 10598                           
 10599                           ; BSR set to: 0
 10600  001CF0  0101               	movlb	1	; () banked
 10601  001CF2  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10602  001CF4  A4D8               	btfss	status,2,c
 10603  001CF6  D02C               	goto	l22012
 10604                           
 10605                           ; BSR set to: 1
 10606  001CF8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10607  001CFA  B4D8               	btfsc	status,2,c
 10608  001CFC  D003               	goto	u26280
 10609                           
 10610                           ; BSR set to: 1
 10611  001CFE  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10612  001D00  A4D8               	btfss	status,2,c
 10613  001D02  D026               	goto	l22012
 10614  001D04                     u26280:
 10615                           
 10616                           ; BSR set to: 1
 10617  001D04  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10618  001D06  A4D8               	btfss	status,2,c
 10619  001D08  D023               	goto	l22012
 10620  001D0A                     u26290:
 10621                           
 10622                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10623  001D0A  0E00               	movlw	0
 10624  001D0C  0101               	movlb	1	; () banked
 10625  001D0E  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10626                           
 10627                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10628  001D10  0E00               	movlw	0
 10629  001D12  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10630                           
 10631                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10632  001D14  0E01               	movlw	1
 10633  001D16  0100               	movlb	0	; () banked
 10634  001D18  6F81               	movwf	_control_limit_switch& (0+255),b
 10635                           
 10636                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10637  001D1A  0E00               	movlw	0
 10638  001D1C  0101               	movlb	1	; () banked
 10639  001D1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10640                           
 10641                           ; BSR set to: 1
 10642                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10643  001D20  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10644  001D22  D005               	goto	u26300
 10645  001D24  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10646  001D26  E102               	bnz	u26301
 10647  001D28  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10648  001D2A  B0D8               	btfsc	status,0,c
 10649  001D2C                     u26301:
 10650  001D2C  0012               	return	
 10651  001D2E                     u26300:
 10652                           
 10653                           ; BSR set to: 1
 10654                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10655  001D2E  0EB0               	movlw	low _controlLearning_stateMachine
 10656  001D30  6E12               	movwf	sm_send_event@psm^0,c
 10657  001D32  0E02               	movlw	high _controlLearning_stateMachine
 10658  001D34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10659  001D36  0E00               	movlw	0
 10660  001D38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10661  001D3A  0E0B               	movlw	11
 10662  001D3C  6E14               	movwf	sm_send_event@event^0,c
 10663  001D3E  EC01  F041         	call	_sm_send_event	;wreg free
 10664                           
 10665                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10666  001D42  0E03               	movlw	3
 10667  001D44  0101               	movlb	1	; () banked
 10668  001D46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10669                           
 10670                           ; BSR set to: 1
 10671                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10672  001D48  0E00               	movlw	0
 10673  001D4A  6FD1               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10674  001D4C  0E50               	movlw	80
 10675  001D4E  D741               	goto	L67
 10676  001D50                     l22012:
 10677                           
 10678                           ; BSR set to: 1
 10679  001D50  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10680  001D52  B4D8               	btfsc	status,2,c
 10681  001D54  D707               	goto	u26100
 10682                           
 10683                           ; BSR set to: 1
 10684  001D56  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10685  001D58  B4D8               	btfsc	status,2,c
 10686  001D5A  D003               	goto	u26330
 10687                           
 10688                           ; BSR set to: 1
 10689  001D5C  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10690  001D5E  A4D8               	btfss	status,2,c
 10691  001D60  D00F               	goto	l22026
 10692  001D62                     u26330:
 10693                           
 10694                           ; BSR set to: 1
 10695  001D62  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10696  001D64  A4D8               	btfss	status,2,c
 10697  001D66  D00C               	goto	l22026
 10698                           
 10699                           ; BSR set to: 1
 10700  001D68  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10701  001D6A  A4D8               	btfss	status,2,c
 10702  001D6C  D009               	goto	l22026
 10703  001D6E                     u26350:
 10704                           
 10705                           ; BSR set to: 1
 10706                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10707  001D6E  0E01               	movlw	1
 10708  001D70  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10709                           
 10710                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10711  001D72  0E01               	movlw	1
 10712  001D74  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10713                           
 10714                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10715  001D76  0E00               	movlw	0
 10716  001D78  6FD1               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10717  001D7A  0E50               	movlw	80
 10718  001D7C  6FD0               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10719                           
 10720                           ;sm_ControlLearning_MC50.c: 309:             }
 10721  001D7E  0012               	return	
 10722  001D80                     l22026:
 10723                           
 10724                           ; BSR set to: 1
 10725  001D80  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10726  001D82  A4D8               	btfss	status,2,c
 10727  001D84  D00C               	goto	l22034
 10728                           
 10729                           ; BSR set to: 1
 10730                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10731  001D86  0E00               	movlw	0
 10732  001D88  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10733  001D8A  0E28               	movlw	40
 10734  001D8C  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10735                           
 10736                           ; BSR set to: 1
 10737                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10738  001D8E  BFD1               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10739  001D90  0012               	return	
 10740  001D92  51D1               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10741  001D94  E103               	bnz	u26370
 10742  001D96  05D0               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10743  001D98  A0D8               	btfss	status,0,c
 10744  001D9A  0012               	return	
 10745  001D9C                     u26370:
 10746  001D9C  D739               	goto	u26170
 10747  001D9E                     l22034:
 10748                           
 10749                           ; BSR set to: 1
 10750                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10751  001D9E  0E01               	movlw	1
 10752  001DA0  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10753                           
 10754                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10755  001DA2  0E00               	movlw	0
 10756  001DA4  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10757  001DA6  0E28               	movlw	40
 10758  001DA8  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10759                           
 10760                           ; BSR set to: 1
 10761                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10762  001DAA  BFE1               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10763  001DAC  D005               	goto	u26380
 10764  001DAE  51E1               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10765  001DB0  E102               	bnz	u26381
 10766  001DB2  05E0               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10767  001DB4  B0D8               	btfsc	status,0,c
 10768  001DB6                     u26381:
 10769  001DB6  0012               	return	
 10770  001DB8                     u26380:
 10771                           
 10772                           ; BSR set to: 1
 10773                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10774  001DB8  BFD1               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10775  001DBA  0012               	return	
 10776  001DBC  51D1               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10777  001DBE  E103               	bnz	u26390
 10778  001DC0  05D0               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10779  001DC2  A0D8               	btfss	status,0,c
 10780  001DC4  0012               	return	
 10781  001DC6                     u26390:
 10782                           
 10783                           ; BSR set to: 1
 10784                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10785  001DC6  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10786  001DCA  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10787  001DCE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10788  001DD0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10789  001DD2  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10790  001DD6  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10791  001DDA  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10792  001DDC  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10793  001DDE  ECA1  F040         	call	_calculateMean	;wreg free
 10794  001DE2  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10795  001DE6  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10796  001DEA  0012               	return	
 10797  001DEC                     l22042:
 10798                           
 10799                           ; BSR set to: 0
 10800                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10801  001DEC  0101               	movlb	1	; () banked
 10802  001DEE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10803  001DF0  B4D8               	btfsc	status,2,c
 10804  001DF2  D00C               	goto	u26440
 10805                           
 10806                           ; BSR set to: 1
 10807  001DF4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10808  001DF6  A4D8               	btfss	status,2,c
 10809  001DF8  D06F               	goto	l22088
 10810                           
 10811                           ; BSR set to: 1
 10812  001DFA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10813  001DFC  B4D8               	btfsc	status,2,c
 10814  001DFE  D003               	goto	u26430
 10815                           
 10816                           ; BSR set to: 1
 10817  001E00  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10818  001E02  A4D8               	btfss	status,2,c
 10819  001E04  D069               	goto	l22088
 10820  001E06                     u26430:
 10821                           
 10822                           ; BSR set to: 1
 10823  001E06  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10824  001E08  A4D8               	btfss	status,2,c
 10825  001E0A  D066               	goto	l22088
 10826  001E0C                     u26440:
 10827                           
 10828                           ; BSR set to: 1
 10829                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10830  001E0C  0E01               	movlw	1
 10831  001E0E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10832                           
 10833                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10834  001E10  0E00               	movlw	0
 10835  001E12  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10836                           
 10837                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10838  001E14  0E00               	movlw	0
 10839  001E16  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10840                           
 10841                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10842  001E18  0E00               	movlw	0
 10843  001E1A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10844                           
 10845                           ; BSR set to: 1
 10846                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10847  001E1C  0EB0               	movlw	low _controlLearning_stateMachine
 10848  001E1E  6E12               	movwf	sm_send_event@psm^0,c
 10849  001E20  0E02               	movlw	high _controlLearning_stateMachine
 10850  001E22  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10851  001E24  0E00               	movlw	0
 10852  001E26  6E15               	movwf	(sm_send_event@event+1)^0,c
 10853  001E28  0E0A               	movlw	10
 10854  001E2A  6E14               	movwf	sm_send_event@event^0,c
 10855  001E2C  EC01  F041         	call	_sm_send_event	;wreg free
 10856                           
 10857                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10858  001E30  0EE4               	movlw	low _controlGate_stateMachine
 10859  001E32  6E12               	movwf	sm_send_event@psm^0,c
 10860  001E34  0E01               	movlw	high _controlGate_stateMachine
 10861  001E36  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10862  001E38  0E00               	movlw	0
 10863  001E3A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10864  001E3C  0E13               	movlw	19
 10865  001E3E  6E14               	movwf	sm_send_event@event^0,c
 10866  001E40  EC01  F041         	call	_sm_send_event	;wreg free
 10867                           
 10868                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10869  001E44  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10870  001E48  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10871  001E4C  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10872  001E50  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10873                           
 10874                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10875  001E54  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10876  001E58  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10877  001E5C  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10878  001E60  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10879                           
 10880                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10881  001E64  0101               	movlb	1	; () banked
 10882  001E66  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10883  001E68  A4D8               	btfss	status,2,c
 10884  001E6A  D005               	goto	l22066
 10885                           
 10886                           ; BSR set to: 1
 10887                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10888  001E6C  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10889                           
 10890                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10891  001E70  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10892                           
 10893                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10894  001E74  D005               	goto	l22068
 10895  001E76                     l22066:
 10896                           
 10897                           ; BSR set to: 1
 10898                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10899  001E76  0E04               	movlw	4
 10900  001E78  0100               	movlb	0	; () banked
 10901  001E7A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10902                           
 10903                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10904  001E7C  0E04               	movlw	4
 10905  001E7E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10906  001E80                     l22068:
 10907                           
 10908                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10909  001E80  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10910  001E84  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10911                           
 10912                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10913  001E88  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10914  001E8C  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10915                           
 10916                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10917  001E90  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10918  001E94  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10919  001E98  0100               	movlb	0	; () banked
 10920  001E9A  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10921  001E9C  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10922                           
 10923                           ; BSR set to: 0
 10924                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10925  001E9E  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10926  001EA2  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10927  001EA6  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10928  001EA8  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10929                           
 10930                           ; BSR set to: 0
 10931                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10932  001EAA  0E00               	movlw	0
 10933  001EAC  ECE2  F044         	call	_SaveNVM_VarSystem
 10934                           
 10935                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10936  001EB0  0E03               	movlw	3
 10937  001EB2  ECE2  F044         	call	_SaveNVM_VarSystem
 10938                           
 10939                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10940  001EB6  0E02               	movlw	2
 10941  001EB8  ECE2  F044         	call	_SaveNVM_VarSystem
 10942                           
 10943                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 10944  001EBC  0E00               	movlw	0
 10945  001EBE  0101               	movlb	1	; () banked
 10946  001EC0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10947                           
 10948                           ; BSR set to: 1
 10949                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 10950  001EC2  0E00               	movlw	0
 10951  001EC4  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 10952  001EC6  0E00               	movlw	0
 10953  001EC8  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 10954  001ECA  0E00               	movlw	0
 10955  001ECC  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 10956  001ECE  0E00               	movlw	0
 10957  001ED0  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 10958                           
 10959                           ; BSR set to: 1
 10960                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 10961  001ED2  0E00               	movlw	0
 10962  001ED4  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 10963                           
 10964                           ;sm_ControlLearning_MC50.c: 369:             }
 10965  001ED6  0012               	return	
 10966  001ED8                     l22088:
 10967                           
 10968                           ; BSR set to: 1
 10969  001ED8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10970  001EDA  B4D8               	btfsc	status,2,c
 10971  001EDC  D643               	goto	u26100
 10972                           
 10973                           ; BSR set to: 1
 10974  001EDE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10975  001EE0  B4D8               	btfsc	status,2,c
 10976  001EE2  D003               	goto	u26480
 10977                           
 10978                           ; BSR set to: 1
 10979  001EE4  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10980  001EE6  A4D8               	btfss	status,2,c
 10981  001EE8  D003               	goto	l22100
 10982  001EEA                     u26480:
 10983                           
 10984                           ; BSR set to: 1
 10985  001EEA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10986  001EEC  B4D8               	btfsc	status,2,c
 10987  001EEE  D73F               	goto	u26350
 10988  001EF0                     l22100:
 10989                           
 10990                           ; BSR set to: 1
 10991  001EF0  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10992  001EF2  A4D8               	btfss	status,2,c
 10993  001EF4  D008               	goto	l22106
 10994                           
 10995                           ; BSR set to: 1
 10996                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 10997  001EF6  BFD1               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10998  001EF8  0012               	return	
 10999  001EFA  51D1               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 11000  001EFC  E103               	bnz	u26510
 11001  001EFE  05D0               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 11002  001F00  A0D8               	btfss	status,0,c
 11003  001F02  0012               	return	
 11004  001F04                     u26510:
 11005  001F04  D6D8               	goto	u26230
 11006  001F06                     l22106:
 11007                           
 11008                           ; BSR set to: 1
 11009                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 11010  001F06  0E01               	movlw	1
 11011  001F08  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 11012                           
 11013                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 11014  001F0A  0E00               	movlw	0
 11015  001F0C  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11016  001F0E  0E28               	movlw	40
 11017  001F10  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11018                           
 11019                           ; BSR set to: 1
 11020                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 11021  001F12  BFE1               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 11022  001F14  D005               	goto	u26520
 11023  001F16  51E1               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 11024  001F18  E102               	bnz	u26521
 11025  001F1A  05E0               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 11026  001F1C  B0D8               	btfsc	status,0,c
 11027  001F1E                     u26521:
 11028  001F1E  0012               	return	
 11029  001F20                     u26520:
 11030                           
 11031                           ; BSR set to: 1
 11032                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 11033  001F20  BFD1               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 11034  001F22  0012               	return	
 11035  001F24  51D1               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 11036  001F26  E103               	bnz	u26530
 11037  001F28  05D0               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 11038  001F2A  A0D8               	btfss	status,0,c
 11039  001F2C  0012               	return	
 11040  001F2E                     u26530:
 11041                           
 11042                           ; BSR set to: 1
 11043                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 11044  001F2E  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 11045  001F32  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 11046  001F36  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 11047  001F38  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 11048  001F3A  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 11049  001F3E  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 11050  001F42  6A16               	clrf	(calculateMean@newValue+2)^0,c
 11051  001F44  6A17               	clrf	(calculateMean@newValue+3)^0,c
 11052  001F46  ECA1  F040         	call	_calculateMean	;wreg free
 11053  001F4A  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 11054  001F4E  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 11055  001F52  0012               	return	
 11056  001F54                     l22116:
 11057  001F54  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 11058  001F58  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 11059  001F5C  50DF               	movf	indf2,w,c
 11060  001F5E  0100               	movlb	0	; () banked
 11061  001F60  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 11062  001F62  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 11063                           
 11064                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11065                           ; Switch size 1, requested type "simple"
 11066                           ; Number of cases is 1, Range of values is 0 to 0
 11067                           ; switch strategies available:
 11068                           ; Name         Instructions Cycles
 11069                           ; simple_byte            4     3 (average)
 11070                           ;	Chosen strategy is simple_byte
 11071  001F64  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 11072  001F66  0A00               	xorlw	0	; case 0
 11073  001F68  A4D8               	btfss	status,2,c
 11074  001F6A  0012               	return	
 11075                           
 11076                           ; BSR set to: 0
 11077                           ; Switch size 1, requested type "simple"
 11078                           ; Number of cases is 6, Range of values is 0 to 5
 11079                           ; switch strategies available:
 11080                           ; Name         Instructions Cycles
 11081                           ; simple_byte           19    10 (average)
 11082                           ;	Chosen strategy is simple_byte
 11083  001F6C  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 11084  001F6E  0A00               	xorlw	0	; case 0
 11085  001F70  B4D8               	btfsc	status,2,c
 11086  001F72  D570               	goto	l21862
 11087  001F74  0A01               	xorlw	1	; case 1
 11088  001F76  B4D8               	btfsc	status,2,c
 11089  001F78  D5BB               	goto	l21886
 11090  001F7A  0A03               	xorlw	3	; case 2
 11091  001F7C  B4D8               	btfsc	status,2,c
 11092  001F7E  D5FA               	goto	l21920
 11093  001F80  0A01               	xorlw	1	; case 3
 11094  001F82  B4D8               	btfsc	status,2,c
 11095  001F84  D65A               	goto	l21954
 11096  001F86  0A07               	xorlw	7	; case 4
 11097  001F88  B4D8               	btfsc	status,2,c
 11098  001F8A  D6AA               	goto	l21986
 11099  001F8C  0A01               	xorlw	1	; case 5
 11100  001F8E  A4D8               	btfss	status,2,c
 11101  001F90  0012               	return	
 11102  001F92  D72C               	goto	l22042
 11103  001F94                     __end_of_sm_execute_ControlLearning:
 11104                           	callstack 0
 11105                           
 11106 ;; *************** function _generateErrorLearnig *****************
 11107 ;; Defined at:
 11108 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 11109 ;; Parameters:    Size  Location     Type
 11110 ;;		None
 11111 ;; Auto vars:     Size  Location     Type
 11112 ;;		None
 11113 ;; Return value:  Size  Location     Type
 11114 ;;                  1    wreg      void 
 11115 ;; Registers used:
 11116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11117 ;; Tracked objects:
 11118 ;;		On entry : 3E/1
 11119 ;;		On exit  : 0/0
 11120 ;;		Unchanged: 0/0
 11121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11126 ;;Total ram usage:        0 bytes
 11127 ;; Hardware stack levels used: 1
 11128 ;; Hardware stack levels required when called: 6
 11129 ;; This function calls:
 11130 ;;		_sm_init
 11131 ;; This function is called by:
 11132 ;;		_sm_execute_ControlLearning
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           
 11136                           	psect	text22
 11137  008074                     __ptext22:
 11138                           	callstack 0
 11139  008074                     _generateErrorLearnig:
 11140                           	callstack 22
 11141                           
 11142                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 11143                           
 11144                           ;incstack = 0
 11145  008074  0E00               	movlw	0
 11146  008076  0101               	movlb	1	; () banked
 11147  008078  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11148                           
 11149                           ; BSR set to: 1
 11150                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 11151  00807A  0EBB               	movlw	low _menuConfiguration_stateMachine
 11152  00807C  6E12               	movwf	sm_init@psm^0,c
 11153  00807E  0E02               	movlw	high _menuConfiguration_stateMachine
 11154  008080  6E13               	movwf	(sm_init@psm+1)^0,c
 11155  008082  0E00               	movlw	0
 11156  008084  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11157  008086  0E00               	movlw	0
 11158  008088  6E14               	movwf	sm_init@initial_state^0,c
 11159  00808A  0E00               	movlw	0
 11160  00808C  6E16               	movwf	sm_init@hist_mode^0,c
 11161  00808E  ECE4  F041         	call	_sm_init	;wreg free
 11162                           
 11163                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 11164  008092  0EEF               	movlw	low _main_stateMachine
 11165  008094  6E12               	movwf	sm_init@psm^0,c
 11166  008096  0E01               	movlw	high _main_stateMachine
 11167  008098  6E13               	movwf	(sm_init@psm+1)^0,c
 11168  00809A  0E00               	movlw	0
 11169  00809C  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11170  00809E  0E00               	movlw	0
 11171  0080A0  6E14               	movwf	sm_init@initial_state^0,c
 11172  0080A2  0E00               	movlw	0
 11173  0080A4  6E16               	movwf	sm_init@hist_mode^0,c
 11174  0080A6  ECE4  F041         	call	_sm_init	;wreg free
 11175                           
 11176                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 11177  0080AA  0EE4               	movlw	low _controlGate_stateMachine
 11178  0080AC  6E12               	movwf	sm_init@psm^0,c
 11179  0080AE  0E01               	movlw	high _controlGate_stateMachine
 11180  0080B0  6E13               	movwf	(sm_init@psm+1)^0,c
 11181  0080B2  0E00               	movlw	0
 11182  0080B4  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11183  0080B6  0E00               	movlw	0
 11184  0080B8  6E14               	movwf	sm_init@initial_state^0,c
 11185  0080BA  0E00               	movlw	0
 11186  0080BC  6E16               	movwf	sm_init@hist_mode^0,c
 11187  0080BE  ECE4  F041         	call	_sm_init	;wreg free
 11188                           
 11189                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 11190  0080C2  0EB0               	movlw	low _controlLearning_stateMachine
 11191  0080C4  6E12               	movwf	sm_init@psm^0,c
 11192  0080C6  0E02               	movlw	high _controlLearning_stateMachine
 11193  0080C8  6E13               	movwf	(sm_init@psm+1)^0,c
 11194  0080CA  0E00               	movlw	0
 11195  0080CC  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11196  0080CE  0E00               	movlw	0
 11197  0080D0  6E14               	movwf	sm_init@initial_state^0,c
 11198  0080D2  0E00               	movlw	0
 11199  0080D4  6E16               	movwf	sm_init@hist_mode^0,c
 11200  0080D6  ECE4  F041         	call	_sm_init	;wreg free
 11201  0080DA  0012               	return		;funcret
 11202  0080DC                     __end_of_generateErrorLearnig:
 11203                           	callstack 0
 11204                           
 11205 ;; *************** function _sm_init *****************
 11206 ;; Defined at:
 11207 ;;		line 12 in file "sm_common_MC50.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;  psm             2   17[COMRAM] PTR struct .
 11210 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11211 ;;  initial_stat    2   19[COMRAM] int 
 11212 ;;  hist_mode       1   21[COMRAM] enum E348
 11213 ;; Auto vars:     Size  Location     Type
 11214 ;;		None
 11215 ;; Return value:  Size  Location     Type
 11216 ;;                  1    wreg      void 
 11217 ;; Registers used:
 11218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11219 ;; Tracked objects:
 11220 ;;		On entry : 0/1
 11221 ;;		On exit  : 0/0
 11222 ;;		Unchanged: 0/0
 11223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11224 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11227 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11228 ;;Total ram usage:        5 bytes
 11229 ;; Hardware stack levels used: 1
 11230 ;; Hardware stack levels required when called: 5
 11231 ;; This function calls:
 11232 ;;		_sm_restart
 11233 ;; This function is called by:
 11234 ;;		_main
 11235 ;;		_generateErrorLearnig
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           
 11239                           	psect	text23
 11240  0083C8                     __ptext23:
 11241                           	callstack 0
 11242  0083C8                     _sm_init:
 11243                           	callstack 25
 11244                           
 11245                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11246                           
 11247                           ;incstack = 0
 11248  0083C8  EE20 F002          	lfsr	2,2
 11249  0083CC  5012               	movf	sm_init@psm^0,w,c
 11250  0083CE  26D9               	addwf	fsr2l,f,c
 11251  0083D0  5013               	movf	(sm_init@psm+1)^0,w,c
 11252  0083D2  22DA               	addwfc	fsr2h,f,c
 11253  0083D4  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11254  0083D8  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11255                           
 11256                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11257  0083DC  EE20 F006          	lfsr	2,6
 11258  0083E0  5012               	movf	sm_init@psm^0,w,c
 11259  0083E2  26D9               	addwf	fsr2l,f,c
 11260  0083E4  5013               	movf	(sm_init@psm+1)^0,w,c
 11261  0083E6  22DA               	addwfc	fsr2h,f,c
 11262  0083E8  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11263                           
 11264                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11265  0083EC  C012  FFD9         	movff	sm_init@psm,fsr2l
 11266  0083F0  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11267  0083F4  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11268  0083F8  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11269                           
 11270                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11271  0083FC  EE20 F007          	lfsr	2,7
 11272  008400  5012               	movf	sm_init@psm^0,w,c
 11273  008402  26D9               	addwf	fsr2l,f,c
 11274  008404  5013               	movf	(sm_init@psm+1)^0,w,c
 11275  008406  22DA               	addwfc	fsr2h,f,c
 11276  008408  0E00               	movlw	0
 11277  00840A  6EDE               	movwf	postinc2,c
 11278  00840C  0E00               	movlw	0
 11279  00840E  6EDD               	movwf	postdec2,c
 11280                           
 11281                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11282  008410  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11283  008414  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11284  008418  ECC2  F043         	call	_sm_restart	;wreg free
 11285  00841C  0012               	return		;funcret
 11286  00841E                     __end_of_sm_init:
 11287                           	callstack 0
 11288                           
 11289 ;; *************** function _sm_restart *****************
 11290 ;; Defined at:
 11291 ;;		line 23 in file "sm_common_MC50.c"
 11292 ;; Parameters:    Size  Location     Type
 11293 ;;  psm             2   15[COMRAM] PTR struct .
 11294 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;		None
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  1    wreg      void 
 11299 ;; Registers used:
 11300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11301 ;; Tracked objects:
 11302 ;;		On entry : 0/1
 11303 ;;		On exit  : 0/0
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11310 ;;Total ram usage:        2 bytes
 11311 ;; Hardware stack levels used: 1
 11312 ;; Hardware stack levels required when called: 4
 11313 ;; This function calls:
 11314 ;;		Nothing
 11315 ;; This function is called by:
 11316 ;;		_sm_init
 11317 ;; This function uses a non-reentrant model
 11318 ;;
 11319                           
 11320                           	psect	text24
 11321  008784                     __ptext24:
 11322                           	callstack 0
 11323  008784                     _sm_restart:
 11324                           	callstack 25
 11325                           
 11326                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11327                           
 11328                           ;incstack = 0
 11329  008784  EE20 F006          	lfsr	2,6
 11330  008788  5010               	movf	sm_restart@psm^0,w,c
 11331  00878A  26D9               	addwf	fsr2l,f,c
 11332  00878C  5011               	movf	(sm_restart@psm+1)^0,w,c
 11333  00878E  22DA               	addwfc	fsr2h,f,c
 11334  008790  50DF               	movf	indf2,w,c
 11335  008792  A4D8               	btfss	status,2,c
 11336  008794  D00E               	goto	l19502
 11337                           
 11338                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11339  008796  EE20 F002          	lfsr	2,2
 11340  00879A  5010               	movf	sm_restart@psm^0,w,c
 11341  00879C  26D9               	addwf	fsr2l,f,c
 11342  00879E  5011               	movf	(sm_restart@psm+1)^0,w,c
 11343  0087A0  22DA               	addwfc	fsr2h,f,c
 11344  0087A2  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11345  0087A6  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11346  0087AA  CFDE FFE6          	movff	postinc2,postinc1
 11347  0087AE  CFDD FFE5          	movff	postdec2,postdec1
 11348  0087B2                     l19502:
 11349                           
 11350                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11351  0087B2  EE20 F004          	lfsr	2,4
 11352  0087B6  5010               	movf	sm_restart@psm^0,w,c
 11353  0087B8  26D9               	addwf	fsr2l,f,c
 11354  0087BA  5011               	movf	(sm_restart@psm+1)^0,w,c
 11355  0087BC  22DA               	addwfc	fsr2h,f,c
 11356  0087BE  0E00               	movlw	0
 11357  0087C0  6EDE               	movwf	postinc2,c
 11358  0087C2  0E00               	movlw	0
 11359  0087C4  6EDD               	movwf	postdec2,c
 11360  0087C6  0012               	return		;funcret
 11361  0087C8                     __end_of_sm_restart:
 11362                           	callstack 0
 11363                           
 11364 ;; *************** function _clearLearningValue *****************
 11365 ;; Defined at:
 11366 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11367 ;; Parameters:    Size  Location     Type
 11368 ;;		None
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;		None
 11371 ;; Return value:  Size  Location     Type
 11372 ;;                  1    wreg      void 
 11373 ;; Registers used:
 11374 ;;		wreg, status,2
 11375 ;; Tracked objects:
 11376 ;;		On entry : 3F/1
 11377 ;;		On exit  : 3F/0
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11384 ;;Total ram usage:        0 bytes
 11385 ;; Hardware stack levels used: 1
 11386 ;; Hardware stack levels required when called: 4
 11387 ;; This function calls:
 11388 ;;		Nothing
 11389 ;; This function is called by:
 11390 ;;		_sm_execute_ControlLearning
 11391 ;; This function uses a non-reentrant model
 11392 ;;
 11393                           
 11394                           	psect	text25
 11395  007B7C                     __ptext25:
 11396                           	callstack 0
 11397  007B7C                     _clearLearningValue:
 11398                           	callstack 24
 11399                           
 11400                           ; BSR set to: 1
 11401                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11402                           
 11403                           ;incstack = 0
 11404  007B7C  0E00               	movlw	0
 11405  007B7E  0100               	movlb	0	; () banked
 11406  007B80  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11407  007B82  0E00               	movlw	0
 11408  007B84  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11409  007B86  0E00               	movlw	0
 11410  007B88  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11411  007B8A  0E00               	movlw	0
 11412  007B8C  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11413                           
 11414                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11415  007B8E  0E00               	movlw	0
 11416  007B90  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11417  007B92  0E00               	movlw	0
 11418  007B94  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11419  007B96  0E00               	movlw	0
 11420  007B98  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11421  007B9A  0E00               	movlw	0
 11422  007B9C  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11423                           
 11424                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11425  007B9E  0E00               	movlw	0
 11426  007BA0  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11427                           
 11428                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11429  007BA2  0E00               	movlw	0
 11430  007BA4  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11431                           
 11432                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11433  007BA6  0E00               	movlw	0
 11434  007BA8  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11435  007BAA  0E00               	movlw	0
 11436  007BAC  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11437                           
 11438                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11439  007BAE  0E00               	movlw	0
 11440  007BB0  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11441  007BB2  0E00               	movlw	0
 11442  007BB4  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11443                           
 11444                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11445  007BB6  0E00               	movlw	0
 11446  007BB8  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11447  007BBA  0E00               	movlw	0
 11448  007BBC  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11449                           
 11450                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11451  007BBE  0E00               	movlw	0
 11452  007BC0  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11453  007BC2  0E00               	movlw	0
 11454  007BC4  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11455                           
 11456                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11457  007BC6  0E00               	movlw	0
 11458  007BC8  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11459  007BCA  0E00               	movlw	0
 11460  007BCC  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11461                           
 11462                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11463  007BCE  0E00               	movlw	0
 11464  007BD0  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11465  007BD2  0E00               	movlw	0
 11466  007BD4  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11467                           
 11468                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11469  007BD6  0E00               	movlw	0
 11470  007BD8  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11471  007BDA  0E00               	movlw	0
 11472  007BDC  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11473  007BDE  0E00               	movlw	0
 11474  007BE0  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11475  007BE2  0E00               	movlw	0
 11476  007BE4  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11477                           
 11478                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11479  007BE6  0E00               	movlw	0
 11480  007BE8  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11481  007BEA  0E00               	movlw	0
 11482  007BEC  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11483  007BEE  0E00               	movlw	0
 11484  007BF0  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11485  007BF2  0E00               	movlw	0
 11486  007BF4  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11487                           
 11488                           ; BSR set to: 0
 11489  007BF6  0012               	return		;funcret
 11490  007BF8                     __end_of_clearLearningValue:
 11491                           	callstack 0
 11492                           
 11493 ;; *************** function _calculateMean *****************
 11494 ;; Defined at:
 11495 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11496 ;; Parameters:    Size  Location     Type
 11497 ;;  meanValue       4   15[COMRAM] unsigned long 
 11498 ;;  newValue        4   19[COMRAM] unsigned long 
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;		None
 11501 ;; Return value:  Size  Location     Type
 11502 ;;                  4   15[COMRAM] unsigned long 
 11503 ;; Registers used:
 11504 ;;		wreg, status,2, status,0
 11505 ;; Tracked objects:
 11506 ;;		On entry : 3E/1
 11507 ;;		On exit  : 3E/0
 11508 ;;		Unchanged: 3E/0
 11509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11510 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11512 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11513 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11514 ;;Total ram usage:       12 bytes
 11515 ;; Hardware stack levels used: 1
 11516 ;; Hardware stack levels required when called: 4
 11517 ;; This function calls:
 11518 ;;		Nothing
 11519 ;; This function is called by:
 11520 ;;		_sm_execute_ControlLearning
 11521 ;; This function uses a non-reentrant model
 11522 ;;
 11523                           
 11524                           	psect	text26
 11525  008142                     __ptext26:
 11526                           	callstack 0
 11527  008142                     _calculateMean:
 11528                           	callstack 24
 11529                           
 11530                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11531                           
 11532                           ; BSR set to: 0
 11533                           ;incstack = 0
 11534  008142  5010               	movf	calculateMean@meanValue^0,w,c
 11535  008144  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11536  008146  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11537  008148  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11538  00814A  A4D8               	btfss	status,2,c
 11539  00814C  D009               	goto	l20462
 11540                           
 11541                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11542  00814E  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11543  008152  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11544  008156  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11545  00815A  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11546                           
 11547                           ;sm_ControlLearning_MC50.c: 416:     }
 11548  00815E  D019               	goto	l20464
 11549  008160                     l20462:
 11550                           
 11551                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11552  008160  5014               	movf	calculateMean@newValue^0,w,c
 11553  008162  2410               	addwf	calculateMean@meanValue^0,w,c
 11554  008164  6E18               	movwf	??_calculateMean^0,c
 11555  008166  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11556  008168  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11557  00816A  6E19               	movwf	(??_calculateMean+1)^0,c
 11558  00816C  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11559  00816E  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11560  008170  6E1A               	movwf	(??_calculateMean+2)^0,c
 11561  008172  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11562  008174  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11563  008176  6E1B               	movwf	(??_calculateMean+3)^0,c
 11564  008178  90D8               	bcf	status,0,c
 11565  00817A  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11566  00817C  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11567  00817E  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11568  008180  3218               	rrcf	??_calculateMean^0,f,c
 11569  008182  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11570  008186  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11571  00818A  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11572  00818E  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11573  008192                     l20464:
 11574                           
 11575                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11576  008192  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11577  008196  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11578  00819A  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11579  00819E  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11580  0081A2  0012               	return		;funcret
 11581  0081A4                     __end_of_calculateMean:
 11582                           	callstack 0
 11583                           
 11584 ;; *************** function _actionZone_Opening *****************
 11585 ;; Defined at:
 11586 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11587 ;; Parameters:    Size  Location     Type
 11588 ;;		None
 11589 ;; Auto vars:     Size  Location     Type
 11590 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11591 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11592 ;;  securityClos    1   12[BANK0 ] enum E10397
 11593 ;; Return value:  Size  Location     Type
 11594 ;;                  1    wreg      void 
 11595 ;; Registers used:
 11596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11597 ;; Tracked objects:
 11598 ;;		On entry : 3F/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11603 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11605 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11606 ;;Total ram usage:        3 bytes
 11607 ;; Hardware stack levels used: 1
 11608 ;; Hardware stack levels required when called: 8
 11609 ;; This function calls:
 11610 ;;		_CloseOrder
 11611 ;;		_GetOpenOrder
 11612 ;;		_GetSecurityStateInClosing
 11613 ;;		_GetSecurityStateInOpening
 11614 ;;		_InitFullAutoTime
 11615 ;;		_InitWalkAutoTime
 11616 ;;		_SetSegmentValueIntermitent
 11617 ;;		_StopOrder
 11618 ;;		_VerifyFollowMe
 11619 ;;		_controlVelocity
 11620 ;;		_setPositionInvertionInClosing
 11621 ;;		_setPositionInvertionInOpening
 11622 ;;		_sm_send_event
 11623 ;; This function is called by:
 11624 ;;		_sm_execute_ControlGate
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           	psect	text27
 11629  0044AC                     __ptext27:
 11630                           	callstack 0
 11631  0044AC                     _actionZone_Opening:
 11632                           	callstack 21
 11633                           
 11634                           ; BSR set to: 0
 11635                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11636                           
 11637                           ;incstack = 0
 11638  0044AC  EC51  F039         	call	_GetSecurityStateInClosing	;wreg free
 11639  0044B0  0100               	movlb	0	; () banked
 11640  0044B2  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11641                           
 11642                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11643  0044B4  ECA4  F039         	call	_GetSecurityStateInOpening	;wreg free
 11644  0044B8  0100               	movlb	0	; () banked
 11645  0044BA  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11646                           
 11647                           ; BSR set to: 0
 11648                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11649  0044BC  ECA5  F028         	call	_GetOpenOrder	;wreg free
 11650  0044C0  0100               	movlb	0	; () banked
 11651  0044C2  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11652                           
 11653                           ; BSR set to: 0
 11654                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11655  0044C4  ECB6  F025         	call	_controlVelocity	;wreg free
 11656                           
 11657                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11658  0044C8  ECC6  F047         	call	_InitFullAutoTime	;wreg free
 11659                           
 11660                           ; BSR set to: 0
 11661                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11662  0044CC  0E00               	movlw	0
 11663  0044CE  0101               	movlb	1	; () banked
 11664  0044D0  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11665                           
 11666                           ; BSR set to: 1
 11667                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11668  0044D2  0100               	movlb	0	; () banked
 11669  0044D4  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11670  0044D6  EC1E  F047         	call	_VerifyFollowMe
 11671                           
 11672                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11673  0044DA  0E03               	movlw	3
 11674  0044DC  0101               	movlb	1	; () banked
 11675  0044DE  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11676  0044E0  D00D               	goto	l21318
 11677                           
 11678                           ; BSR set to: 1
 11679                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11680  0044E2  0E00               	movlw	0
 11681  0044E4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11682  0044E6                     l21316:
 11683                           
 11684                           ; BSR set to: 1
 11685                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11686  0044E6  0EE4               	movlw	low _controlGate_stateMachine
 11687  0044E8  6E12               	movwf	sm_send_event@psm^0,c
 11688  0044EA  0E01               	movlw	high _controlGate_stateMachine
 11689  0044EC  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11690  0044EE  0E00               	movlw	0
 11691  0044F0  6E15               	movwf	(sm_send_event@event+1)^0,c
 11692  0044F2  0E10               	movlw	16
 11693  0044F4  6E14               	movwf	sm_send_event@event^0,c
 11694  0044F6  EC01  F041         	call	_sm_send_event	;wreg free
 11695                           
 11696                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11697  0044FA  0012               	return	
 11698  0044FC                     l21318:
 11699                           
 11700                           ; BSR set to: 1
 11701  0044FC  0E02               	movlw	2
 11702  0044FE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11703  004500  A4D8               	btfss	status,2,c
 11704  004502  D013               	goto	l21332
 11705                           
 11706                           ; BSR set to: 1
 11707  004504  BFAD               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11708  004506  D005               	goto	u24720
 11709  004508  51AD               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11710  00450A  E10F               	bnz	l21332
 11711  00450C  05AC               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11712  00450E  B0D8               	btfsc	status,0,c
 11713  004510  D00C               	goto	l21332
 11714  004512                     u24720:
 11715                           
 11716                           ; BSR set to: 1
 11717                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11718  004512  EC48  F036         	call	_setPositionInvertionInOpening	;wreg free
 11719                           
 11720                           ; BSR set to: 1
 11721                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11722  004516  EC74  F047         	call	_StopOrder	;wreg free
 11723                           
 11724                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11725  00451A  EC4A  F048         	call	_InitWalkAutoTime	;wreg free
 11726                           
 11727                           ; BSR set to: 0
 11728                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11729  00451E  0E01               	movlw	1
 11730  004520  0101               	movlb	1	; () banked
 11731  004522  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11732                           
 11733                           ; BSR set to: 1
 11734                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11735  004524  0E01               	movlw	1
 11736  004526  6F8F               	movwf	_Abertura_pedonal& (0+255),b
 11737                           
 11738                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11739  004528  0012               	return	
 11740  00452A                     l21332:
 11741                           
 11742                           ; BSR set to: 1
 11743  00452A  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11744  00452C  B4D8               	btfsc	status,2,c
 11745  00452E  D010               	goto	u24770
 11746                           
 11747                           ; BSR set to: 1
 11748  004530  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11749  004532  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11750  004534  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11751  004536  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11752  004538  A4D8               	btfss	status,2,c
 11753  00453A  D02F               	goto	l21352
 11754                           
 11755                           ; BSR set to: 1
 11756  00453C  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11757  00453E  A4D8               	btfss	status,2,c
 11758  004540  D02C               	goto	l21352
 11759                           
 11760                           ; BSR set to: 1
 11761  004542  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11762  004544  A4D8               	btfss	status,2,c
 11763  004546  D029               	goto	l21352
 11764                           
 11765                           ; BSR set to: 1
 11766  004548  0E02               	movlw	2
 11767  00454A  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11768  00454C  A4D8               	btfss	status,2,c
 11769  00454E  D025               	goto	l21352
 11770  004550                     u24770:
 11771                           
 11772                           ; BSR set to: 1
 11773                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11774  004550  0E04               	movlw	4
 11775  004552  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11776                           
 11777                           ; BSR set to: 1
 11778                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11779  004554  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11780  004558  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11781  00455C  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11782  004560  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11783                           
 11784                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11785  004564  0E00               	movlw	0
 11786  004566  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11787                           
 11788                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11789  004568  0E00               	movlw	0
 11790  00456A  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11791                           
 11792                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11793  00456C  0E01               	movlw	1
 11794  00456E  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11795                           
 11796                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11797  004570  0E00               	movlw	0
 11798  004572  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11799                           
 11800                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11801  004574  0E00               	movlw	0
 11802  004576  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11803  004578  0E28               	movlw	40
 11804  00457A  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11805                           
 11806                           ; BSR set to: 1
 11807                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11808  00457C  0E00               	movlw	0
 11809  00457E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11810  004580  0E00               	movlw	0
 11811  004582  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11812  004584  0E04               	movlw	4
 11813  004586  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11814  004588  0E0F               	movlw	15
 11815  00458A  EC79  F045         	call	_SetSegmentValueIntermitent
 11816                           
 11817                           ; BSR set to: 1
 11818                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11819  00458E  EC74  F047         	call	_StopOrder	;wreg free
 11820                           
 11821                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11822  004592  0E01               	movlw	1
 11823  004594  0101               	movlb	1	; () banked
 11824  004596  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11825                           
 11826                           ;sm_ControlGate_MC50.c: 419:     }
 11827  004598  0012               	return	
 11828  00459A                     l21352:
 11829                           
 11830                           ; BSR set to: 1
 11831  00459A  0100               	movlb	0	; () banked
 11832  00459C  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11833  00459E  B4D8               	btfsc	status,2,c
 11834  0045A0  D012               	goto	u24810
 11835                           
 11836                           ; BSR set to: 0
 11837  0045A2  0101               	movlb	1	; () banked
 11838  0045A4  BFC7               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11839  0045A6  D025               	goto	l21372
 11840  0045A8  51C7               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11841  0045AA  E103               	bnz	u24790
 11842  0045AC  05C6               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11843  0045AE  A0D8               	btfss	status,0,c
 11844  0045B0  D020               	goto	l21372
 11845  0045B2                     u24790:
 11846                           
 11847                           ; BSR set to: 1
 11848  0045B2  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11849  0045B4  A4D8               	btfss	status,2,c
 11850  0045B6  D01D               	goto	l21372
 11851                           
 11852                           ; BSR set to: 1
 11853  0045B8  BFCD               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11854  0045BA  D005               	goto	u24810
 11855  0045BC  51CD               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11856  0045BE  E119               	bnz	l21372
 11857  0045C0  05CC               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11858  0045C2  B0D8               	btfsc	status,0,c
 11859  0045C4  D016               	goto	l21372
 11860  0045C6                     u24810:
 11861  0045C6  0101               	movlb	1	; () banked
 11862  0045C8  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11863  0045CA  A4D8               	btfss	status,2,c
 11864  0045CC  D012               	goto	l21372
 11865                           
 11866                           ; BSR set to: 1
 11867                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11868  0045CE  0100               	movlb	0	; () banked
 11869  0045D0  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11870  0045D2  B4D8               	btfsc	status,2,c
 11871  0045D4  D002               	goto	l21366
 11872                           
 11873                           ; BSR set to: 0
 11874                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11875  0045D6  0101               	movlb	1	; () banked
 11876  0045D8  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11877  0045DA                     l21366:
 11878                           
 11879                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11880  0045DA  0E01               	movlw	1
 11881  0045DC  0101               	movlb	1	; () banked
 11882  0045DE  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11883                           
 11884                           ; BSR set to: 1
 11885                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11886  0045E0  0E00               	movlw	0
 11887  0045E2  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11888  0045E4  0E0A               	movlw	10
 11889  0045E6  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11890                           
 11891                           ; BSR set to: 1
 11892                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11893  0045E8  0E00               	movlw	0
 11894  0045EA  6FDD               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11895  0045EC  0E1E               	movlw	30
 11896  0045EE  6FDC               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11897                           
 11898                           ;sm_ControlGate_MC50.c: 430:     }
 11899  0045F0  0012               	return	
 11900  0045F2                     l21372:
 11901                           
 11902                           ; BSR set to: 1
 11903  0045F2  BFC7               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11904  0045F4  D02D               	goto	l21402
 11905  0045F6  51C7               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11906  0045F8  E103               	bnz	u24840
 11907  0045FA  05C6               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11908  0045FC  A0D8               	btfss	status,0,c
 11909  0045FE  D028               	goto	l21402
 11910  004600                     u24840:
 11911                           
 11912                           ; BSR set to: 1
 11913  004600  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11914  004602  A4D8               	btfss	status,2,c
 11915  004604  D025               	goto	l21402
 11916                           
 11917                           ; BSR set to: 1
 11918                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11919  004606  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11920  004608  A4D8               	btfss	status,2,c
 11921  00460A  D005               	goto	l21384
 11922                           
 11923                           ; BSR set to: 1
 11924                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11925  00460C  0E00               	movlw	0
 11926  00460E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11927                           
 11928                           ; BSR set to: 1
 11929                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11930  004610  ECA1  F031         	call	_setPositionInvertionInClosing	;wreg free
 11931  004614  D768               	goto	l21316
 11932  004616                     l21384:
 11933                           
 11934                           ; BSR set to: 1
 11935  004616  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11936  004618  D005               	goto	u24870
 11937  00461A  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11938  00461C  E116               	bnz	l21400
 11939  00461E  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11940  004620  B0D8               	btfsc	status,0,c
 11941  004622  D013               	goto	l21400
 11942  004624                     u24870:
 11943                           
 11944                           ; BSR set to: 1
 11945                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 11946  004624  ECBF  F046         	call	_CloseOrder	;wreg free
 11947                           
 11948                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 11949  004628  EC48  F036         	call	_setPositionInvertionInOpening	;wreg free
 11950                           
 11951                           ; BSR set to: 1
 11952                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 11953  00462C  0E00               	movlw	0
 11954  00462E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11955                           
 11956                           ; BSR set to: 1
 11957                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 11958  004630  0E01               	movlw	1
 11959  004632  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 11960                           
 11961                           ; BSR set to: 1
 11962                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 11963  004634  0E00               	movlw	0
 11964  004636  6FCD               	movwf	(_ts_system+49)& (0+255),b	;volatile
 11965  004638  0E14               	movlw	20
 11966  00463A  6FCC               	movwf	(_ts_system+48)& (0+255),b	;volatile
 11967                           
 11968                           ; BSR set to: 1
 11969                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 11970  00463C  0E00               	movlw	0
 11971  00463E  6FCF               	movwf	(_ts_system+51)& (0+255),b	;volatile
 11972  004640  0E28               	movlw	40
 11973  004642  6FCE               	movwf	(_ts_system+50)& (0+255),b	;volatile
 11974                           
 11975                           ; BSR set to: 1
 11976                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 11977  004644  0E01               	movlw	1
 11978  004646  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 11979                           
 11980                           ;sm_ControlGate_MC50.c: 449:         } else
 11981  004648  0012               	return	
 11982  00464A                     l21400:
 11983                           
 11984                           ; BSR set to: 1
 11985                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 11986  00464A  0E00               	movlw	0
 11987  00464C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11988  00464E  0012               	return	
 11989  004650                     l21402:
 11990                           
 11991                           ; BSR set to: 1
 11992  004650  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11993  004652  A4D8               	btfss	status,2,c
 11994  004654  D00A               	goto	l21422
 11995                           
 11996                           ; BSR set to: 1
 11997                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 11998  004656  0E00               	movlw	0
 11999  004658  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12000                           
 12001                           ; BSR set to: 1
 12002                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 12003  00465A  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12004  00465C  D7E3               	goto	u24870
 12005  00465E  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12006  004660  E14E               	bnz	l2718
 12007  004662  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12008  004664  B0D8               	btfsc	status,0,c
 12009  004666  0012               	return	
 12010  004668  D7DD               	goto	u24870
 12011  00466A                     l21422:
 12012                           
 12013                           ; BSR set to: 1
 12014  00466A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12015  00466C  A4D8               	btfss	status,2,c
 12016  00466E  D018               	goto	l21440
 12017                           
 12018                           ; BSR set to: 1
 12019  004670  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12020  004672  D005               	goto	u24910
 12021  004674  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12022  004676  E114               	bnz	l21440
 12023  004678  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12024  00467A  B0D8               	btfsc	status,0,c
 12025  00467C  D011               	goto	l21440
 12026  00467E                     u24910:
 12027                           
 12028                           ; BSR set to: 1
 12029                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 12030  00467E  0E02               	movlw	2
 12031  004680  0100               	movlb	0	; () banked
 12032  004682  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 12033  004684  B4D8               	btfsc	status,2,c
 12034  004686  D007               	goto	l21436
 12035                           
 12036                           ; BSR set to: 0
 12037                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 12038  004688  0101               	movlb	1	; () banked
 12039  00468A  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 12040                           
 12041                           ; BSR set to: 1
 12042                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 12043  00468C  0E00               	movlw	0
 12044  00468E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12045                           
 12046                           ; BSR set to: 1
 12047                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 12048  004690  EC48  F036         	call	_setPositionInvertionInOpening	;wreg free
 12049  004694  D728               	goto	l21316
 12050  004696                     l21436:
 12051                           
 12052                           ; BSR set to: 0
 12053                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 12054  004696  EC48  F036         	call	_setPositionInvertionInOpening	;wreg free
 12055  00469A                     l21438:
 12056                           
 12057                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 12058  00469A  EC74  F047         	call	_StopOrder	;wreg free
 12059  00469E  0012               	return	
 12060  0046A0                     l21440:
 12061                           
 12062                           ; BSR set to: 1
 12063  0046A0  0100               	movlb	0	; () banked
 12064  0046A2  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 12065  0046A4  A4D8               	btfss	status,2,c
 12066  0046A6  D005               	goto	l21446
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 12070  0046A8  0E03               	movlw	3
 12071  0046AA  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12072  0046AC  B4D8               	btfsc	status,2,c
 12073  0046AE  0012               	return	
 12074  0046B0  D7F4               	goto	l21438
 12075  0046B2                     l21446:
 12076                           
 12077                           ; BSR set to: 0
 12078  0046B2  0E02               	movlw	2
 12079  0046B4  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12080  0046B6  A4D8               	btfss	status,2,c
 12081  0046B8  D011               	goto	l21458
 12082                           
 12083                           ; BSR set to: 0
 12084  0046BA  0E02               	movlw	2
 12085  0046BC  0101               	movlb	1	; () banked
 12086  0046BE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12087  0046C0  A4D8               	btfss	status,2,c
 12088  0046C2  D00C               	goto	l21458
 12089                           
 12090                           ; BSR set to: 1
 12091  0046C4  0E02               	movlw	2
 12092  0046C6  0100               	movlb	0	; () banked
 12093  0046C8  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12094  0046CA  B4D8               	btfsc	status,2,c
 12095  0046CC  D007               	goto	l21458
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 12099  0046CE  EC48  F036         	call	_setPositionInvertionInOpening	;wreg free
 12100                           
 12101                           ; BSR set to: 1
 12102                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 12103  0046D2  EC74  F047         	call	_StopOrder	;wreg free
 12104                           
 12105                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 12106  0046D6  EC4A  F048         	call	_InitWalkAutoTime	;wreg free
 12107                           
 12108                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 12109  0046DA  0012               	return	
 12110  0046DC                     l21458:
 12111  0046DC  0100               	movlb	0	; () banked
 12112  0046DE  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12113  0046E0  B4D8               	btfsc	status,2,c
 12114  0046E2  D008               	goto	u25000
 12115                           
 12116                           ; BSR set to: 0
 12117  0046E4  0E03               	movlw	3
 12118  0046E6  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12119  0046E8  B4D8               	btfsc	status,2,c
 12120  0046EA  D004               	goto	u25000
 12121                           
 12122                           ; BSR set to: 0
 12123  0046EC  0E04               	movlw	4
 12124  0046EE  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12125  0046F0  A4D8               	btfss	status,2,c
 12126  0046F2  0012               	return	
 12127  0046F4                     u25000:
 12128                           
 12129                           ; BSR set to: 0
 12130  0046F4  0E02               	movlw	2
 12131  0046F6  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12132  0046F8  B4D8               	btfsc	status,2,c
 12133  0046FA  0012               	return	
 12134  0046FC  D7CC               	goto	l21436
 12135  0046FE                     l2718:
 12136  0046FE  0012               	return		;funcret
 12137  004700                     __end_of_actionZone_Opening:
 12138                           	callstack 0
 12139                           
 12140 ;; *************** function _setPositionInvertionInOpening *****************
 12141 ;; Defined at:
 12142 ;;		line 894 in file "sm_ControlGate_MC50.c"
 12143 ;; Parameters:    Size  Location     Type
 12144 ;;		None
 12145 ;; Auto vars:     Size  Location     Type
 12146 ;;		None
 12147 ;; Return value:  Size  Location     Type
 12148 ;;                  1    wreg      void 
 12149 ;; Registers used:
 12150 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12151 ;; Tracked objects:
 12152 ;;		On entry : 3E/1
 12153 ;;		On exit  : 3F/1
 12154 ;;		Unchanged: 0/0
 12155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12158 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12159 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12160 ;;Total ram usage:        8 bytes
 12161 ;; Hardware stack levels used: 1
 12162 ;; Hardware stack levels required when called: 6
 12163 ;; This function calls:
 12164 ;;		_getTimeDecelaration
 12165 ;; This function is called by:
 12166 ;;		_actionZone_Opening
 12167 ;; This function uses a non-reentrant model
 12168 ;;
 12169                           
 12170                           	psect	text28
 12171  006C90                     __ptext28:
 12172                           	callstack 0
 12173  006C90                     _setPositionInvertionInOpening:
 12174                           	callstack 22
 12175                           
 12176                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 12177                           
 12178                           ;incstack = 0
 12179  006C90  0E02               	movlw	2
 12180  006C92  0100               	movlb	0	; () banked
 12181  006C94  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 12182  006C96  B4D8               	btfsc	status,2,c
 12183  006C98  D009               	goto	l20414
 12184                           
 12185                           ; BSR set to: 0
 12186                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 12187  006C9A  0EFE               	movlw	254
 12188  006C9C  0101               	movlb	1	; () banked
 12189  006C9E  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12190  006CA0  0EFF               	movlw	255
 12191  006CA2  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12192  006CA4  0EFF               	movlw	255
 12193  006CA6  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12194  006CA8  0EFF               	movlw	255
 12195  006CAA  D006               	goto	L69
 12196  006CAC                     l20414:
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12200  006CAC  0E01               	movlw	1
 12201  006CAE  0101               	movlb	1	; () banked
 12202  006CB0  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12203  006CB2  0E00               	movlw	0
 12204  006CB4  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12205  006CB6  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12206  006CB8                     L69:
 12207  006CB8  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12208                           
 12209                           ; BSR set to: 1
 12210                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12211  006CBA  0E03               	movlw	3
 12212  006CBC  ECD4  F035         	call	_getTimeDecelaration
 12213  006CC0  5029               	movf	?_getTimeDecelaration^0,w,c
 12214  006CC2  0101               	movlb	1	; () banked
 12215  006CC4  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12216  006CC6  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12217  006CC8  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12218  006CCA  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12219  006CCC  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12220  006CCE  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12221  006CD0  0A80               	xorlw	128
 12222  006CD2  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12223  006CD4  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12224  006CD6  0A80               	xorlw	128
 12225  006CD8  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12226  006CDA  B0D8               	btfsc	status,0,c
 12227  006CDC  D004               	goto	l20420
 12228                           
 12229                           ; BSR set to: 1
 12230                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12231  006CDE  0E03               	movlw	3
 12232  006CE0  ECD4  F035         	call	_getTimeDecelaration
 12233  006CE4  D015               	goto	L70
 12234  006CE6                     l20420:
 12235                           
 12236                           ; BSR set to: 1
 12237  006CE6  0E01               	movlw	1
 12238  006CE8  ECD4  F035         	call	_getTimeDecelaration
 12239  006CEC  0101               	movlb	1	; () banked
 12240  006CEE  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12241  006CF0  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12242  006CF2  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12243  006CF4  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12244  006CF6  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12245  006CF8  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12246  006CFA  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12247  006CFC  0A80               	xorlw	128
 12248  006CFE  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12249  006D00  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12250  006D02  0A80               	xorlw	128
 12251  006D04  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12252  006D06  B0D8               	btfsc	status,0,c
 12253  006D08  D00B               	goto	l20424
 12254                           
 12255                           ; BSR set to: 1
 12256                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12257  006D0A  0E01               	movlw	1
 12258  006D0C  ECD4  F035         	call	_getTimeDecelaration
 12259  006D10                     L70:
 12260  006D10  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12261  006D14  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12262  006D18  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12263  006D1C  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12264  006D20                     l20424:
 12265                           
 12266                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12267  006D20  0100               	movlb	0	; () banked
 12268  006D22  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12269  006D24  0D0A               	mullw	10
 12270  006D26  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12271  006D2A  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12272  006D2E  0E00               	movlw	0
 12273  006D30  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12274  006D32  0EFF               	movlw	255
 12275  006D34  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12276  006D36  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12277  006D38  0101               	movlb	1	; () banked
 12278  006D3A  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12279  006D3C  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12280  006D3E  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12281  006D40  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12282  006D42  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12283  006D44  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12284  006D46  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12285  006D48  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12286  006D4A  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12287  006D4C  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12288  006D4E  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12289  006D50  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12290  006D52  0EC8               	movlw	200
 12291  006D54  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12292  006D56  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12293  006D58  0E00               	movlw	0
 12294  006D5A  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12295  006D5C  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12296  006D5E  0E00               	movlw	0
 12297  006D60  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12298  006D62  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12299  006D64  0E00               	movlw	0
 12300  006D66  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12301  006D68  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12302                           
 12303                           ; BSR set to: 1
 12304  006D6A  0012               	return		;funcret
 12305  006D6C                     __end_of_setPositionInvertionInOpening:
 12306                           	callstack 0
 12307                           
 12308 ;; *************** function _controlVelocity *****************
 12309 ;; Defined at:
 12310 ;;		line 527 in file "outputs_MC50.c"
 12311 ;; Parameters:    Size  Location     Type
 12312 ;;		None
 12313 ;; Auto vars:     Size  Location     Type
 12314 ;;		None
 12315 ;; Return value:  Size  Location     Type
 12316 ;;                  1    wreg      void 
 12317 ;; Registers used:
 12318 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12319 ;; Tracked objects:
 12320 ;;		On entry : 3E/1
 12321 ;;		On exit  : 3E/0
 12322 ;;		Unchanged: 0/0
 12323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12326 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12327 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12328 ;;Total ram usage:        1 bytes
 12329 ;; Hardware stack levels used: 1
 12330 ;; Hardware stack levels required when called: 7
 12331 ;; This function calls:
 12332 ;;		_ControlDecelarationFactor
 12333 ;;		_InitSoftStop
 12334 ;;		_getStateOpenPosition
 12335 ;;		_getTimeDecelaration
 12336 ;; This function is called by:
 12337 ;;		_main
 12338 ;;		_actionZone_Opening
 12339 ;; This function uses a non-reentrant model
 12340 ;;
 12341                           
 12342                           	psect	text29
 12343  004B6C                     __ptext29:
 12344                           	callstack 0
 12345  004B6C                     _controlVelocity:
 12346                           	callstack 21
 12347                           
 12348                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12349                           
 12350                           ; BSR set to: 1
 12351                           ;incstack = 0
 12352  004B6C  0101               	movlb	1	; () banked
 12353  004B6E  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12354  004B70  A4D8               	btfss	status,2,c
 12355  004B72  D017               	goto	l20226
 12356                           
 12357                           ; BSR set to: 1
 12358  004B74  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12359  004B76  A4D8               	btfss	status,2,c
 12360  004B78  D014               	goto	l20226
 12361                           
 12362                           ; BSR set to: 1
 12363                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12364  004B7A  517B               	movf	_powerControl_st& (0+255),w,b
 12365  004B7C  A4D8               	btfss	status,2,c
 12366  004B7E  D008               	goto	l20220
 12367                           
 12368                           ; BSR set to: 1
 12369                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12370  004B80  0E00               	movlw	0
 12371  004B82  6FC9               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12372  004B84  0E0A               	movlw	10
 12373  004B86  6FC8               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12374                           
 12375                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12376  004B88  0E00               	movlw	0
 12377  004B8A  6FCB               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12378  004B8C  0E14               	movlw	20
 12379  004B8E  6FCA               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12380  004B90                     l20220:
 12381                           
 12382                           ; BSR set to: 1
 12383                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12384  004B90  ECED  F047         	call	_ControlDecelarationFactor	;wreg free
 12385                           
 12386                           ; BSR set to: 1
 12387                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12388  004B94  0E01               	movlw	1
 12389  004B96  6F7B               	movwf	_powerControl_st& (0+255),b
 12390                           
 12391                           ; BSR set to: 1
 12392                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12393  004B98  0E00               	movlw	0
 12394  004B9A  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12395  004B9C  0E00               	movlw	0
 12396  004B9E  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12397                           
 12398                           ;outputs_MC50.c: 541:     }
 12399  004BA0  0012               	return	
 12400  004BA2                     l20226:
 12401                           
 12402                           ; BSR set to: 1
 12403  004BA2  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12404  004BA4  B4D8               	btfsc	status,2,c
 12405  004BA6  D003               	goto	u23300
 12406                           
 12407                           ; BSR set to: 1
 12408  004BA8  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12409  004BAA  A4D8               	btfss	status,2,c
 12410  004BAC  D007               	goto	l20232
 12411  004BAE                     u23300:
 12412                           
 12413                           ; BSR set to: 1
 12414                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12415  004BAE  0E00               	movlw	0
 12416  004BB0  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12417  004BB2  0E00               	movlw	0
 12418  004BB4  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12419                           
 12420                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12421  004BB6  0E00               	movlw	0
 12422  004BB8  6F7B               	movwf	_powerControl_st& (0+255),b
 12423                           
 12424                           ;outputs_MC50.c: 547:     }
 12425  004BBA  0012               	return	
 12426  004BBC                     l20232:
 12427                           
 12428                           ; BSR set to: 1
 12429  004BBC  0E03               	movlw	3
 12430  004BBE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12431  004BC0  A4D8               	btfss	status,2,c
 12432  004BC2  D068               	goto	l20280
 12433                           
 12434                           ; BSR set to: 1
 12435  004BC4  0E03               	movlw	3
 12436  004BC6  ECD4  F035         	call	_getTimeDecelaration
 12437  004BCA  5029               	movf	?_getTimeDecelaration^0,w,c
 12438  004BCC  0101               	movlb	1	; () banked
 12439  004BCE  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12440  004BD0  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12441  004BD2  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12442  004BD4  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12443  004BD6  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12444  004BD8  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12445  004BDA  0A80               	xorlw	128
 12446  004BDC  0100               	movlb	0	; () banked
 12447  004BDE  6FDA               	movwf	??_controlVelocity& (0+255),b
 12448  004BE0  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12449  004BE2  0A80               	xorlw	128
 12450  004BE4  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12451  004BE6  A0D8               	btfss	status,0,c
 12452  004BE8  D004               	goto	u23330
 12453                           
 12454                           ; BSR set to: 0
 12455  004BEA  0101               	movlb	1	; () banked
 12456  004BEC  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12457  004BEE  A4D8               	btfss	status,2,c
 12458  004BF0  D051               	goto	l20280
 12459  004BF2                     u23330:
 12460  004BF2  0100               	movlb	0	; () banked
 12461  004BF4  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12462  004BF6  B4D8               	btfsc	status,2,c
 12463  004BF8  D004               	goto	u23350
 12464                           
 12465                           ; BSR set to: 0
 12466  004BFA  0101               	movlb	1	; () banked
 12467  004BFC  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12468  004BFE  B4D8               	btfsc	status,2,c
 12469  004C00  D00C               	goto	u23370
 12470  004C02                     u23350:
 12471  004C02  0101               	movlb	1	; () banked
 12472  004C04  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12473  004C06  D005               	goto	u23360
 12474  004C08  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12475  004C0A  E144               	bnz	l20280
 12476  004C0C  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12477  004C0E  B0D8               	btfsc	status,0,c
 12478  004C10  D041               	goto	l20280
 12479  004C12                     u23360:
 12480                           
 12481                           ; BSR set to: 1
 12482  004C12  0100               	movlb	0	; () banked
 12483  004C14  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12484  004C16  B4D8               	btfsc	status,2,c
 12485  004C18  D03D               	goto	l20280
 12486  004C1A                     u23370:
 12487                           
 12488                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12489  004C1A  0101               	movlb	1	; () banked
 12490  004C1C  517B               	movf	_powerControl_st& (0+255),w,b
 12491  004C1E  A4D8               	btfss	status,2,c
 12492  004C20  D022               	goto	l20266
 12493                           
 12494                           ; BSR set to: 1
 12495  004C22  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12496  004C24  A4D8               	btfss	status,2,c
 12497  004C26  D01F               	goto	l20266
 12498                           
 12499                           ; BSR set to: 1
 12500                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12501  004C28  0E00               	movlw	0
 12502  004C2A  6FCB               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12503  004C2C  0E14               	movlw	20
 12504  004C2E  6FCA               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12505                           
 12506                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12507  004C30  0100               	movlb	0	; () banked
 12508  004C32  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12509  004C34  B4D8               	btfsc	status,2,c
 12510  004C36  D008               	goto	l20256
 12511                           
 12512                           ; BSR set to: 0
 12513                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12514  004C38  0E00               	movlw	0
 12515  004C3A  0101               	movlb	1	; () banked
 12516  004C3C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12517                           
 12518                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12519  004C3E  0E01               	movlw	1
 12520  004C40  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12521                           
 12522                           ; BSR set to: 1
 12523                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12524  004C42  EC56  F043         	call	_InitSoftStop	;wreg free
 12525                           
 12526                           ;outputs_MC50.c: 563:                     }
 12527  004C46  D00F               	goto	l20266
 12528  004C48                     l20256:
 12529                           
 12530                           ; BSR set to: 0
 12531                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12532  004C48  0E00               	movlw	0
 12533  004C4A  0101               	movlb	1	; () banked
 12534  004C4C  6FC9               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12535  004C4E  0E0A               	movlw	10
 12536  004C50  6FC8               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12537                           
 12538                           ; BSR set to: 1
 12539                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12540  004C52  ECED  F047         	call	_ControlDecelarationFactor	;wreg free
 12541                           
 12542                           ; BSR set to: 1
 12543                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12544  004C56  0E01               	movlw	1
 12545  004C58  6F7B               	movwf	_powerControl_st& (0+255),b
 12546                           
 12547                           ; BSR set to: 1
 12548                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12549  004C5A  0E00               	movlw	0
 12550  004C5C  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12551  004C5E  0E00               	movlw	0
 12552  004C60  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12553                           
 12554                           ; BSR set to: 1
 12555                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12556  004C62  0E00               	movlw	0
 12557  004C64  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12558  004C66                     l20266:
 12559                           
 12560                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12561  004C66  0101               	movlb	1	; () banked
 12562  004C68  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12563  004C6A  D005               	goto	u23410
 12564  004C6C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12565  004C6E  E102               	bnz	u23411
 12566  004C70  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12567  004C72  B0D8               	btfsc	status,0,c
 12568  004C74                     u23411:
 12569  004C74  0012               	return	
 12570  004C76                     u23410:
 12571                           
 12572                           ; BSR set to: 1
 12573  004C76  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12574  004C78  A4D8               	btfss	status,2,c
 12575  004C7A  0012               	return	
 12576                           
 12577                           ; BSR set to: 1
 12578  004C7C  0100               	movlb	0	; () banked
 12579  004C7E  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12580  004C80  B4D8               	btfsc	status,2,c
 12581  004C82  0012               	return	
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12585  004C84  0E00               	movlw	0
 12586  004C86  0101               	movlb	1	; () banked
 12587  004C88  6FC9               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12588  004C8A  0E02               	movlw	2
 12589  004C8C  6FC8               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12590                           
 12591                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12592  004C8E  0E00               	movlw	0
 12593  004C90  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12594  004C92  D77E               	goto	l20220
 12595  004C94                     l20280:
 12596  004C94  0101               	movlb	1	; () banked
 12597  004C96  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12598  004C98  ECC7  F032         	call	_getStateOpenPosition
 12599  004C9C  06E8               	decf	wreg,f,c
 12600  004C9E  A4D8               	btfss	status,2,c
 12601  004CA0  D042               	goto	l20322
 12602                           
 12603                           ; BSR set to: 0
 12604  004CA2  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12605  004CA4  B4D8               	btfsc	status,2,c
 12606  004CA6  D004               	goto	u23460
 12607                           
 12608                           ; BSR set to: 0
 12609  004CA8  0101               	movlb	1	; () banked
 12610  004CAA  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12611  004CAC  B4D8               	btfsc	status,2,c
 12612  004CAE  D00C               	goto	u23480
 12613  004CB0                     u23460:
 12614  004CB0  0101               	movlb	1	; () banked
 12615  004CB2  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12616  004CB4  D005               	goto	u23470
 12617  004CB6  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12618  004CB8  E136               	bnz	l20322
 12619  004CBA  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12620  004CBC  B0D8               	btfsc	status,0,c
 12621  004CBE  D033               	goto	l20322
 12622  004CC0                     u23470:
 12623                           
 12624                           ; BSR set to: 1
 12625  004CC0  0100               	movlb	0	; () banked
 12626  004CC2  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12627  004CC4  B4D8               	btfsc	status,2,c
 12628  004CC6  D02F               	goto	l20322
 12629  004CC8                     u23480:
 12630                           
 12631                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12632  004CC8  0101               	movlb	1	; () banked
 12633  004CCA  517B               	movf	_powerControl_st& (0+255),w,b
 12634  004CCC  A4D8               	btfss	status,2,c
 12635  004CCE  D022               	goto	l20308
 12636                           
 12637                           ; BSR set to: 1
 12638  004CD0  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12639  004CD2  A4D8               	btfss	status,2,c
 12640  004CD4  D01F               	goto	l20308
 12641                           
 12642                           ; BSR set to: 1
 12643                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12644  004CD6  0E00               	movlw	0
 12645  004CD8  6FCB               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12646  004CDA  0E14               	movlw	20
 12647  004CDC  6FCA               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12648                           
 12649                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12650  004CDE  0100               	movlb	0	; () banked
 12651  004CE0  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12652  004CE2  B4D8               	btfsc	status,2,c
 12653  004CE4  D008               	goto	l20300
 12654                           
 12655                           ; BSR set to: 0
 12656                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12657  004CE6  0E00               	movlw	0
 12658  004CE8  0101               	movlb	1	; () banked
 12659  004CEA  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12660                           
 12661                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12662  004CEC  0E01               	movlw	1
 12663  004CEE  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12664                           
 12665                           ; BSR set to: 1
 12666                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12667  004CF0  EC56  F043         	call	_InitSoftStop	;wreg free
 12668                           
 12669                           ;outputs_MC50.c: 598:             }else{
 12670  004CF4  D00F               	goto	l20308
 12671  004CF6                     l20300:
 12672                           
 12673                           ; BSR set to: 0
 12674                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12675  004CF6  0E00               	movlw	0
 12676  004CF8  0101               	movlb	1	; () banked
 12677  004CFA  6FC9               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12678  004CFC  0E0A               	movlw	10
 12679  004CFE  6FC8               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12680                           
 12681                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12682  004D00  0E00               	movlw	0
 12683  004D02  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12684                           
 12685                           ; BSR set to: 1
 12686                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12687  004D04  ECED  F047         	call	_ControlDecelarationFactor	;wreg free
 12688                           
 12689                           ; BSR set to: 1
 12690                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12691  004D08  0E01               	movlw	1
 12692  004D0A  6F7B               	movwf	_powerControl_st& (0+255),b
 12693                           
 12694                           ; BSR set to: 1
 12695                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12696  004D0C  0E00               	movlw	0
 12697  004D0E  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12698  004D10  0E00               	movlw	0
 12699  004D12  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12700  004D14                     l20308:
 12701                           
 12702                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12703  004D14  0101               	movlb	1	; () banked
 12704  004D16  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12705  004D18  D7AE               	goto	u23410
 12706  004D1A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12707  004D1C  E135               	bnz	l2306
 12708  004D1E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12709  004D20  B0D8               	btfsc	status,0,c
 12710  004D22  0012               	return	
 12711  004D24  D7A8               	goto	u23410
 12712  004D26                     l20322:
 12713  004D26  0101               	movlb	1	; () banked
 12714  004D28  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12715  004D2A  D012               	goto	l20330
 12716  004D2C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12717  004D2E  E103               	bnz	u23550
 12718  004D30  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12719  004D32  A0D8               	btfss	status,0,c
 12720  004D34  D00D               	goto	l20330
 12721  004D36                     u23550:
 12722                           
 12723                           ; BSR set to: 1
 12724  004D36  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12725  004D38  B4D8               	btfsc	status,2,c
 12726  004D3A  D00A               	goto	l20330
 12727                           
 12728                           ; BSR set to: 1
 12729                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12730  004D3C  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12731  004D3E  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12732  004D40  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12733  004D42  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12734  004D44  A0D8               	btfss	status,0,c
 12735  004D46  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12736  004D48  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12737  004D4A                     l20328:
 12738                           
 12739                           ; BSR set to: 1
 12740                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12741  004D4A  0E00               	movlw	0
 12742  004D4C  6F7B               	movwf	_powerControl_st& (0+255),b
 12743                           
 12744                           ;outputs_MC50.c: 623:     }
 12745  004D4E  0012               	return	
 12746  004D50                     l20330:
 12747                           
 12748                           ; BSR set to: 1
 12749  004D50  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12750  004D52  D010               	goto	l20338
 12751  004D54  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12752  004D56  E103               	bnz	u23570
 12753  004D58  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12754  004D5A  A0D8               	btfss	status,0,c
 12755  004D5C  D00B               	goto	l20338
 12756  004D5E                     u23570:
 12757                           
 12758                           ; BSR set to: 1
 12759  004D5E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12760  004D60  B4D8               	btfsc	status,2,c
 12761  004D62  D008               	goto	l20338
 12762                           
 12763                           ; BSR set to: 1
 12764                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12765  004D64  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12766  004D66  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12767  004D68  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12768  004D6A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12769  004D6C  A0D8               	btfss	status,0,c
 12770  004D6E  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12771  004D70  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12772  004D72  D7EB               	goto	l20328
 12773  004D74                     l20338:
 12774                           
 12775                           ; BSR set to: 1
 12776                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12777  004D74  0E00               	movlw	0
 12778  004D76  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12779  004D78  0E00               	movlw	0
 12780  004D7A  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12781                           
 12782                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12783  004D7C  0E00               	movlw	0
 12784  004D7E  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12785  004D80  0E00               	movlw	0
 12786  004D82  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12787                           
 12788                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12789  004D84  0E00               	movlw	0
 12790  004D86  6F7B               	movwf	_powerControl_st& (0+255),b
 12791  004D88                     l2306:
 12792  004D88  0012               	return		;funcret
 12793  004D8A                     __end_of_controlVelocity:
 12794                           	callstack 0
 12795                           
 12796 ;; *************** function _getStateOpenPosition *****************
 12797 ;; Defined at:
 12798 ;;		line 470 in file "outputs_MC50.c"
 12799 ;; Parameters:    Size  Location     Type
 12800 ;;  stateMotor      1    wreg     enum E10381
 12801 ;; Auto vars:     Size  Location     Type
 12802 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12803 ;;  state           1    0[BANK0 ] _Bool 
 12804 ;; Return value:  Size  Location     Type
 12805 ;;                  1    wreg      _Bool 
 12806 ;; Registers used:
 12807 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12808 ;; Tracked objects:
 12809 ;;		On entry : 3F/1
 12810 ;;		On exit  : 3F/0
 12811 ;;		Unchanged: 0/0
 12812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12814 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12815 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12816 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12817 ;;Total ram usage:       11 bytes
 12818 ;; Hardware stack levels used: 1
 12819 ;; Hardware stack levels required when called: 6
 12820 ;; This function calls:
 12821 ;;		___lmul
 12822 ;;		_getTimeDecelaration
 12823 ;; This function is called by:
 12824 ;;		_controlVelocity
 12825 ;; This function uses a non-reentrant model
 12826 ;;
 12827                           
 12828                           	psect	text30
 12829  00658E                     __ptext30:
 12830                           	callstack 0
 12831  00658E                     _getStateOpenPosition:
 12832                           	callstack 21
 12833                           
 12834                           ;incstack = 0
 12835                           ;getStateOpenPosition@stateMotor stored from wreg
 12836  00658E  0100               	movlb	0	; () banked
 12837  006590  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12838                           
 12839                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12840  006592  0E00               	movlw	0
 12841  006594  0100               	movlb	0	; () banked
 12842  006596  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12843                           
 12844                           ; BSR set to: 0
 12845                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12846  006598  0101               	movlb	1	; () banked
 12847  00659A  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12848  00659C  A4D8               	btfss	status,2,c
 12849  00659E  D002               	goto	l19706
 12850  0065A0                     u22550:
 12851                           
 12852                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12853  0065A0  0E01               	movlw	1
 12854  0065A2  D046               	goto	L71
 12855  0065A4                     l19706:
 12856                           
 12857                           ; BSR set to: 1
 12858  0065A4  0100               	movlb	0	; () banked
 12859  0065A6  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12860  0065A8  0D14               	mullw	20
 12861  0065AA  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12862  0065AE  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12863  0065B2  0E00               	movlw	0
 12864  0065B4  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12865  0065B6  0EFF               	movlw	255
 12866  0065B8  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12867  0065BA  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12868  0065BC  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12869  0065BE  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12870  0065C0  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12871  0065C2  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12872  0065C4  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12873  0065C6  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12874  0065C8  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12875  0065CA  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12876  0065CC  B0D8               	btfsc	status,0,c
 12877  0065CE  D033               	goto	l19720
 12878                           
 12879                           ; BSR set to: 0
 12880  0065D0  0E02               	movlw	2
 12881  0065D2  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12882  0065D4  A4D8               	btfss	status,2,c
 12883  0065D6  D02F               	goto	l19720
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12887  0065D8  90D8               	bcf	status,0,c
 12888  0065DA  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12889  0065DC  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12890  0065DE  D001               	goto	l19714
 12891  0065E0  D7DF               	goto	u22550
 12892  0065E2                     l19714:
 12893                           
 12894                           ; BSR set to: 0
 12895  0065E2  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12896  0065E4  0D14               	mullw	20
 12897  0065E6  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12898  0065EA  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12899  0065EE  0E00               	movlw	0
 12900  0065F0  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12901  0065F2  0EFF               	movlw	255
 12902  0065F4  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12903  0065F6  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12904  0065F8  0ED8               	movlw	216
 12905  0065FA  2432               	addwf	??_getStateOpenPosition^0,w,c
 12906  0065FC  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12907  0065FE  0EFF               	movlw	255
 12908  006600  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12909  006602  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12910  006604  0EFF               	movlw	255
 12911  006606  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12912  006608  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12913  00660A  0EFF               	movlw	255
 12914  00660C  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12915  00660E  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12916  006610  0101               	movlb	1	; () banked
 12917  006612  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12918  006614  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12919  006616  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12920  006618  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12921  00661A  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12922  00661C  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12923  00661E  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12924  006620  0A80               	xorlw	128
 12925  006622  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12926  006624  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12927  006626  0A80               	xorlw	128
 12928  006628  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12929  00662A  A0D8               	btfss	status,0,c
 12930  00662C  D7B9               	goto	u22550
 12931                           
 12932                           ; BSR set to: 1
 12933                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12934  00662E  0E00               	movlw	0
 12935  006630                     L71:
 12936  006630  0100               	movlb	0	; () banked
 12937  006632  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12938  006634  D032               	goto	l2249
 12939  006636                     l19720:
 12940                           
 12941                           ; BSR set to: 0
 12942  006636  0E02               	movlw	2
 12943  006638  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12944  00663A  B4D8               	btfsc	status,2,c
 12945  00663C  D003               	goto	u22610
 12946                           
 12947                           ; BSR set to: 0
 12948  00663E  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 12949  006640  A4D8               	btfss	status,2,c
 12950  006642  D02B               	goto	l2249
 12951  006644                     u22610:
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 12955  006644  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12956  006646  6E1D               	movwf	___lmul@multiplier^0,c
 12957  006648  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 12958  00664A  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 12959  00664C  6A20               	clrf	(___lmul@multiplier+3)^0,c
 12960  00664E  0E0A               	movlw	10
 12961  006650  6E21               	movwf	___lmul@multiplicand^0,c
 12962  006652  0E00               	movlw	0
 12963  006654  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 12964  006656  0E00               	movlw	0
 12965  006658  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 12966  00665A  0E00               	movlw	0
 12967  00665C  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 12968  00665E  EC0F  F042         	call	___lmul	;wreg free
 12969  006662  501D               	movf	?___lmul^0,w,c
 12970  006664  0100               	movlb	0	; () banked
 12971  006666  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12972  006668  501E               	movf	(?___lmul+1)^0,w,c
 12973  00666A  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12974  00666C  501F               	movf	(?___lmul+2)^0,w,c
 12975  00666E  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12976  006670  5020               	movf	(?___lmul+3)^0,w,c
 12977  006672  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12978  006674  A0D8               	btfss	status,0,c
 12979  006676  D794               	goto	u22550
 12980                           
 12981                           ; BSR set to: 0
 12982  006678  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 12983  00667A  ECD4  F035         	call	_getTimeDecelaration
 12984  00667E  0101               	movlb	1	; () banked
 12985  006680  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12986  006682  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12987  006684  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12988  006686  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12989  006688  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12990  00668A  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12991  00668C  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12992  00668E  0A80               	xorlw	128
 12993  006690  6E32               	movwf	??_getStateOpenPosition^0,c
 12994  006692  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12995  006694  0A80               	xorlw	128
 12996  006696  5832               	subwfb	??_getStateOpenPosition^0,w,c
 12997  006698  D7C8               	goto	L72
 12998  00669A                     l2249:
 12999                           
 13000                           ; BSR set to: 0
 13001                           ;outputs_MC50.c: 507:     return state;
 13002  00669A  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 13003                           
 13004                           ; BSR set to: 0
 13005  00669C  0012               	return		;funcret
 13006  00669E                     __end_of_getStateOpenPosition:
 13007                           	callstack 0
 13008                           
 13009 ;; *************** function _InitSoftStop *****************
 13010 ;; Defined at:
 13011 ;;		line 849 in file "sm_ControlGate_MC50.c"
 13012 ;; Parameters:    Size  Location     Type
 13013 ;;		None
 13014 ;; Auto vars:     Size  Location     Type
 13015 ;;		None
 13016 ;; Return value:  Size  Location     Type
 13017 ;;                  1    wreg      void 
 13018 ;; Registers used:
 13019 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13020 ;; Tracked objects:
 13021 ;;		On entry : 3F/1
 13022 ;;		On exit  : 3E/0
 13023 ;;		Unchanged: 0/0
 13024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13027 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13029 ;;Total ram usage:        1 bytes
 13030 ;; Hardware stack levels used: 1
 13031 ;; Hardware stack levels required when called: 5
 13032 ;; This function calls:
 13033 ;;		_GetMotorPower
 13034 ;; This function is called by:
 13035 ;;		_controlVelocity
 13036 ;; This function uses a non-reentrant model
 13037 ;;
 13038                           
 13039                           	psect	text31
 13040  0086AC                     __ptext31:
 13041                           	callstack 0
 13042  0086AC                     _InitSoftStop:
 13043                           	callstack 22
 13044                           
 13045                           ; BSR set to: 1
 13046                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;incstack = 0
 13050  0086AC  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 13051  0086AE  B4D8               	btfsc	status,2,c
 13052  0086B0  D003               	goto	u22650
 13053                           
 13054                           ; BSR set to: 1
 13055  0086B2  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13056  0086B4  A4D8               	btfss	status,2,c
 13057  0086B6  0012               	return	
 13058  0086B8                     u22650:
 13059                           
 13060                           ; BSR set to: 1
 13061  0086B8  0100               	movlb	0	; () banked
 13062  0086BA  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13063  0086BC  B4D8               	btfsc	status,2,c
 13064  0086BE  0012               	return	
 13065                           
 13066                           ; BSR set to: 0
 13067                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 13068  0086C0  0E00               	movlw	0
 13069  0086C2  0101               	movlb	1	; () banked
 13070  0086C4  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 13071  0086C6  0E00               	movlw	0
 13072  0086C8  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 13073                           
 13074                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 13075  0086CA  0E00               	movlw	0
 13076  0086CC  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 13077  0086CE  0E00               	movlw	0
 13078  0086D0  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13079                           
 13080                           ; BSR set to: 1
 13081                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 13082  0086D2  EC81  F037         	call	_GetMotorPower	;wreg free
 13083  0086D6  6E14               	movwf	??_InitSoftStop^0,c
 13084  0086D8  5014               	movf	??_InitSoftStop^0,w,c
 13085  0086DA  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13086  0086DC  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 13087                           
 13088                           ; BSR set to: 1
 13089                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 13090  0086DE  0E01               	movlw	1
 13091  0086E0  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 13092  0086E2  6FB4               	movwf	(_ts_system+24)& (0+255),b	;volatile
 13093  0086E4  0E00               	movlw	0
 13094  0086E6  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 13095  0086E8  6FB5               	movwf	(_ts_system+25)& (0+255),b	;volatile
 13096                           
 13097                           ; BSR set to: 1
 13098                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 13099  0086EA  0100               	movlb	0	; () banked
 13100  0086EC  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13101  0086EE  080A               	sublw	10
 13102  0086F0  0101               	movlb	1	; () banked
 13103  0086F2  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 13104  0086F4  0012               	return		;funcret
 13105  0086F6                     __end_of_InitSoftStop:
 13106                           	callstack 0
 13107                           
 13108 ;; *************** function _ControlDecelarationFactor *****************
 13109 ;; Defined at:
 13110 ;;		line 463 in file "outputs_MC50.c"
 13111 ;; Parameters:    Size  Location     Type
 13112 ;;		None
 13113 ;; Auto vars:     Size  Location     Type
 13114 ;;		None
 13115 ;; Return value:  Size  Location     Type
 13116 ;;                  1    wreg      void 
 13117 ;; Registers used:
 13118 ;;		wreg, status,2, status,0, prodl, prodh
 13119 ;; Tracked objects:
 13120 ;;		On entry : 3E/1
 13121 ;;		On exit  : 3F/1
 13122 ;;		Unchanged: 0/0
 13123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13128 ;;Total ram usage:        0 bytes
 13129 ;; Hardware stack levels used: 1
 13130 ;; Hardware stack levels required when called: 4
 13131 ;; This function calls:
 13132 ;;		Nothing
 13133 ;; This function is called by:
 13134 ;;		_controlVelocity
 13135 ;; This function uses a non-reentrant model
 13136 ;;
 13137                           
 13138                           	psect	text32
 13139  008FDA                     __ptext32:
 13140                           	callstack 0
 13141  008FDA                     _ControlDecelarationFactor:
 13142                           	callstack 23
 13143                           
 13144                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 13145                           
 13146                           ;incstack = 0
 13147  008FDA  0E01               	movlw	1
 13148  008FDC  0101               	movlb	1	; () banked
 13149  008FDE  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 13150                           
 13151                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 13152  008FE0  0E02               	movlw	2
 13153  008FE2  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 13154                           
 13155                           ; BSR set to: 1
 13156                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 13157  008FE4  0100               	movlb	0	; () banked
 13158  008FE6  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 13159  008FE8  0101               	movlb	1	; () banked
 13160  008FEA  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 13161  008FEC  CFF3 F17E          	movff	prodl,_powerControl_st+3
 13162                           
 13163                           ; BSR set to: 1
 13164  008FF0  0012               	return		;funcret
 13165  008FF2                     __end_of_ControlDecelarationFactor:
 13166                           	callstack 0
 13167                           
 13168 ;; *************** function _actionZone_Opened *****************
 13169 ;; Defined at:
 13170 ;;		line 514 in file "sm_ControlGate_MC50.c"
 13171 ;; Parameters:    Size  Location     Type
 13172 ;;		None
 13173 ;; Auto vars:     Size  Location     Type
 13174 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 13175 ;;  securityClos    1   31[COMRAM] enum E10397
 13176 ;; Return value:  Size  Location     Type
 13177 ;;                  1    wreg      void 
 13178 ;; Registers used:
 13179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13180 ;; Tracked objects:
 13181 ;;		On entry : 3F/0
 13182 ;;		On exit  : 3E/0
 13183 ;;		Unchanged: 0/0
 13184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13188 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13189 ;;Total ram usage:        2 bytes
 13190 ;; Hardware stack levels used: 1
 13191 ;; Hardware stack levels required when called: 7
 13192 ;; This function calls:
 13193 ;;		_CloseOrder
 13194 ;;		_GetOpenOrder
 13195 ;;		_GetSecurityStateInClosing
 13196 ;;		_InitFullAutoTime
 13197 ;;		_InitWalkAutoTime
 13198 ;;		_OpenFullOrder
 13199 ;;		_OpenWalkOrder
 13200 ;;		_VerifyFollowMe
 13201 ;; This function is called by:
 13202 ;;		_sm_execute_ControlGate
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           	psect	text33
 13207  004D8A                     __ptext33:
 13208                           	callstack 0
 13209  004D8A                     _actionZone_Opened:
 13210                           	callstack 22
 13211                           
 13212                           ; BSR set to: 0
 13213                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13214                           
 13215                           ; BSR set to: 1
 13216                           ;incstack = 0
 13217  004D8A  EC51  F039         	call	_GetSecurityStateInClosing	;wreg free
 13218  004D8E  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13219                           
 13220                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13221  004D90  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13222  004D92  B4D8               	btfsc	status,2,c
 13223  004D94  D007               	goto	l21478
 13224  004D96  0101               	movlb	1	; () banked
 13225  004D98  518F               	movf	_Abertura_pedonal& (0+255),w,b
 13226  004D9A  A4D8               	btfss	status,2,c
 13227  004D9C  D003               	goto	l21478
 13228                           
 13229                           ; BSR set to: 1
 13230                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13231  004D9E  ECC6  F047         	call	_InitFullAutoTime	;wreg free
 13232                           
 13233                           ;sm_ControlGate_MC50.c: 519:     }
 13234  004DA2  D008               	goto	l2722
 13235  004DA4                     l21478:
 13236  004DA4  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13237  004DA6  B4D8               	btfsc	status,2,c
 13238  004DA8  D005               	goto	l2722
 13239  004DAA  0101               	movlb	1	; () banked
 13240  004DAC  058F               	decf	_Abertura_pedonal& (0+255),w,b
 13241  004DAE  B4D8               	btfsc	status,2,c
 13242                           
 13243                           ; BSR set to: 1
 13244                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13245  004DB0  EC4A  F048         	call	_InitWalkAutoTime	;wreg free
 13246  004DB4                     l2722:
 13247                           
 13248                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13249  004DB4  ECA5  F028         	call	_GetOpenOrder	;wreg free
 13250  004DB8  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13251                           
 13252                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13253  004DBA  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13254  004DBC  EC1E  F047         	call	_VerifyFollowMe
 13255                           
 13256                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13257  004DC0  B28E               	btfsc	142,1,c	;volatile
 13258  004DC2  D013               	goto	l2724
 13259  004DC4  0100               	movlb	0	; () banked
 13260  004DC6  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13261  004DC8  B4D8               	btfsc	status,2,c
 13262  004DCA  D00F               	goto	l2724
 13263                           
 13264                           ; BSR set to: 0
 13265  004DCC  0101               	movlb	1	; () banked
 13266  004DCE  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13267  004DD0  B4D8               	btfsc	status,2,c
 13268  004DD2  D00B               	goto	l2724
 13269                           
 13270                           ; BSR set to: 1
 13271  004DD4  0E35               	movlw	53
 13272  004DD6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13273  004DD8  B4D8               	btfsc	status,2,c
 13274  004DDA  D007               	goto	l2724
 13275                           
 13276                           ; BSR set to: 1
 13277  004DDC  0E02               	movlw	2
 13278  004DDE  0100               	movlb	0	; () banked
 13279  004DE0  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13280  004DE2  A4D8               	btfss	status,2,c
 13281  004DE4  D002               	goto	l2724
 13282                           
 13283                           ; BSR set to: 0
 13284                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13285  004DE6  0E00               	movlw	0
 13286  004DE8  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13287  004DEA                     l2724:
 13288                           
 13289                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13290  004DEA  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13291  004DEC  B4D8               	btfsc	status,2,c
 13292  004DEE  D05D               	goto	l2725
 13293                           
 13294                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13295  004DF0  0E00               	movlw	0
 13296  004DF2  0101               	movlb	1	; () banked
 13297  004DF4  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13298  004DF6  0E3C               	movlw	60
 13299  004DF8  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13300                           
 13301                           ; BSR set to: 1
 13302                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13303  004DFA  0E02               	movlw	2
 13304  004DFC  0100               	movlb	0	; () banked
 13305  004DFE  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13306  004E00  A4D8               	btfss	status,2,c
 13307  004E02  D00D               	goto	l21510
 13308                           
 13309                           ; BSR set to: 0
 13310  004E04  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13311  004E06  A4D8               	btfss	status,2,c
 13312  004E08  D00A               	goto	l21510
 13313                           
 13314                           ; BSR set to: 0
 13315  004E0A  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13316  004E0C  B4D8               	btfsc	status,2,c
 13317  004E0E  D004               	goto	u25150
 13318                           
 13319                           ; BSR set to: 0
 13320  004E10  0E04               	movlw	4
 13321  004E12  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13322  004E14  A4D8               	btfss	status,2,c
 13323  004E16  D003               	goto	l21510
 13324  004E18                     u25150:
 13325                           
 13326                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13327  004E18  ECBF  F046         	call	_CloseOrder	;wreg free
 13328                           
 13329                           ;sm_ControlGate_MC50.c: 546:         }
 13330  004E1C  0012               	return	
 13331  004E1E                     l21510:
 13332                           
 13333                           ; BSR set to: 0
 13334  004E1E  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13335  004E20  B4D8               	btfsc	status,2,c
 13336  004E22  D014               	goto	l21524
 13337                           
 13338                           ; BSR set to: 0
 13339                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13340  004E24  0E03               	movlw	3
 13341  004E26  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13342  004E28  A4D8               	btfss	status,2,c
 13343  004E2A  D00B               	goto	l21520
 13344                           
 13345                           ; BSR set to: 0
 13346  004E2C  0101               	movlb	1	; () banked
 13347  004E2E  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13348  004E30  A4D8               	btfss	status,2,c
 13349  004E32  D007               	goto	l21520
 13350                           
 13351                           ; BSR set to: 1
 13352  004E34  0E04               	movlw	4
 13353  004E36  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13354  004E38  B4D8               	btfsc	status,2,c
 13355  004E3A  D003               	goto	l21520
 13356  004E3C                     u25190:
 13357                           
 13358                           ; BSR set to: 1
 13359                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13360  004E3C  ECD2  F046         	call	_OpenFullOrder	;wreg free
 13361                           
 13362                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13363  004E40  0012               	return	
 13364  004E42                     l21520:
 13365  004E42  0E04               	movlw	4
 13366  004E44  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13367  004E46  A4D8               	btfss	status,2,c
 13368  004E48  0012               	return	
 13369  004E4A  D7E6               	goto	u25150
 13370  004E4C                     l21524:
 13371                           
 13372                           ; BSR set to: 0
 13373  004E4C  0E03               	movlw	3
 13374  004E4E  0101               	movlb	1	; () banked
 13375  004E50  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13376  004E52  A4D8               	btfss	status,2,c
 13377  004E54  D009               	goto	l21532
 13378                           
 13379                           ; BSR set to: 1
 13380  004E56  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13381  004E58  A4D8               	btfss	status,2,c
 13382  004E5A  D006               	goto	l21532
 13383  004E5C                     u25220:
 13384                           
 13385                           ; BSR set to: 1
 13386                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13387  004E5C  ECD2  F046         	call	_OpenFullOrder	;wreg free
 13388  004E60                     l21530:
 13389                           
 13390                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13391  004E60  0E00               	movlw	0
 13392  004E62  0101               	movlb	1	; () banked
 13393  004E64  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13394                           
 13395                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13396  004E66  0012               	return	
 13397  004E68                     l21532:
 13398                           
 13399                           ; BSR set to: 1
 13400  004E68  0E03               	movlw	3
 13401  004E6A  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13402  004E6C  A4D8               	btfss	status,2,c
 13403  004E6E  D007               	goto	l21540
 13404                           
 13405                           ; BSR set to: 1
 13406  004E70  0E02               	movlw	2
 13407  004E72  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13408  004E74  A4D8               	btfss	status,2,c
 13409  004E76  D003               	goto	l21540
 13410                           
 13411                           ; BSR set to: 1
 13412                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13413  004E78  EC96  F03F         	call	_OpenWalkOrder	;wreg free
 13414  004E7C  D7F1               	goto	l21530
 13415  004E7E                     l21540:
 13416                           
 13417                           ; BSR set to: 1
 13418  004E7E  0E03               	movlw	3
 13419  004E80  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13420  004E82  A4D8               	btfss	status,2,c
 13421  004E84  D005               	goto	l21550
 13422                           
 13423                           ; BSR set to: 1
 13424                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13425  004E86  0E04               	movlw	4
 13426  004E88  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13427  004E8A  B4D8               	btfsc	status,2,c
 13428  004E8C  0012               	return	
 13429  004E8E  D7E6               	goto	u25220
 13430  004E90                     l21550:
 13431                           
 13432                           ; BSR set to: 1
 13433  004E90  0100               	movlb	0	; () banked
 13434  004E92  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13435  004E94  B4D8               	btfsc	status,2,c
 13436  004E96  D007               	goto	l21556
 13437                           
 13438                           ; BSR set to: 0
 13439  004E98  0E02               	movlw	2
 13440  004E9A  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13441  004E9C  A4D8               	btfss	status,2,c
 13442  004E9E  D003               	goto	l21556
 13443                           
 13444                           ; BSR set to: 0
 13445                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13446  004EA0  ECC6  F047         	call	_InitFullAutoTime	;wreg free
 13447                           
 13448                           ;sm_ControlGate_MC50.c: 586:         }
 13449  004EA4  0012               	return	
 13450  004EA6                     l21556:
 13451                           
 13452                           ; BSR set to: 0
 13453  004EA6  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13454  004EA8  D7CE               	goto	L73
 13455  004EAA                     l2725:
 13456  004EAA  B28E               	btfsc	142,1,c	;volatile
 13457  004EAC  D00B               	goto	l21564
 13458  004EAE  0100               	movlb	0	; () banked
 13459  004EB0  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13460  004EB2  B4D8               	btfsc	status,2,c
 13461  004EB4  D007               	goto	l21564
 13462                           
 13463                           ; BSR set to: 0
 13464                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13465  004EB6  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13466  004EB8  0D14               	mullw	20
 13467  004EBA  CFF3 F1AE          	movff	prodl,_ts_system+18	;volatile
 13468  004EBE  CFF4 F1AF          	movff	prodh,_ts_system+19	;volatile
 13469                           
 13470                           ;sm_ControlGate_MC50.c: 599:     }
 13471  004EC2  0012               	return	
 13472  004EC4                     l21564:
 13473  004EC4  0101               	movlb	1	; () banked
 13474  004EC6  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13475  004EC8  A4D8               	btfss	status,2,c
 13476  004ECA  D00F               	goto	l21574
 13477                           
 13478                           ; BSR set to: 1
 13479  004ECC  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13480  004ECE  A4D8               	btfss	status,2,c
 13481  004ED0  D00C               	goto	l21574
 13482                           
 13483                           ; BSR set to: 1
 13484                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13485  004ED2  0E00               	movlw	0
 13486  004ED4  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13487                           
 13488                           ; BSR set to: 1
 13489                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13490  004ED6  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13491                           
 13492                           ; BSR set to: 1
 13493                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13494  004EDA  0100               	movlb	0	; () banked
 13495  004EDC  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13496  004EDE  0D14               	mullw	20
 13497  004EE0  CFF3 F1AE          	movff	prodl,_ts_system+18	;volatile
 13498  004EE4  CFF4 F1AF          	movff	prodh,_ts_system+19	;volatile
 13499                           
 13500                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13501  004EE8  0012               	return	
 13502  004EEA                     l21574:
 13503                           
 13504                           ; BSR set to: 1
 13505  004EEA  BFAF               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13506  004EEC  D005               	goto	u25340
 13507  004EEE  51AF               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13508  004EF0  E113               	bnz	l21586
 13509  004EF2  05AE               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13510  004EF4  B0D8               	btfsc	status,0,c
 13511  004EF6  D010               	goto	l21586
 13512  004EF8                     u25340:
 13513                           
 13514                           ; BSR set to: 1
 13515  004EF8  0100               	movlb	0	; () banked
 13516  004EFA  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13517  004EFC  A4D8               	btfss	status,2,c
 13518  004EFE  D00C               	goto	l21586
 13519                           
 13520                           ; BSR set to: 0
 13521  004F00  0101               	movlb	1	; () banked
 13522  004F02  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13523  004F04  A4D8               	btfss	status,2,c
 13524  004F06  D008               	goto	l21586
 13525                           
 13526                           ; BSR set to: 1
 13527  004F08  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13528  004F0A  B4D8               	btfsc	status,2,c
 13529  004F0C  D005               	goto	l21586
 13530                           
 13531                           ; BSR set to: 1
 13532                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13533  004F0E  0E00               	movlw	0
 13534  004F10  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13535                           
 13536                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13537  004F12  0E00               	movlw	0
 13538  004F14  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13539  004F16  D780               	goto	u25150
 13540  004F18                     l21586:
 13541  004F18  0101               	movlb	1	; () banked
 13542  004F1A  BFAF               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13543  004F1C  D005               	goto	u25380
 13544  004F1E  51AF               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13545  004F20  E119               	bnz	l21604
 13546  004F22  05AE               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13547  004F24  B0D8               	btfsc	status,0,c
 13548  004F26  D016               	goto	l21604
 13549  004F28                     u25380:
 13550                           
 13551                           ; BSR set to: 1
 13552  004F28  0100               	movlb	0	; () banked
 13553  004F2A  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13554  004F2C  B4D8               	btfsc	status,2,c
 13555  004F2E  D012               	goto	l21604
 13556                           
 13557                           ; BSR set to: 0
 13558  004F30  0101               	movlb	1	; () banked
 13559  004F32  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13560  004F34  B4D8               	btfsc	status,2,c
 13561  004F36  D00E               	goto	l21604
 13562                           
 13563                           ; BSR set to: 1
 13564                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13565  004F38  0E00               	movlw	0
 13566  004F3A  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13567                           
 13568                           ; BSR set to: 1
 13569                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13570  004F3C  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13571  004F3E  A4D8               	btfss	status,2,c
 13572  004F40  D003               	goto	l21600
 13573                           
 13574                           ; BSR set to: 1
 13575                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13576  004F42  0E00               	movlw	0
 13577  004F44  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13578  004F46  D77A               	goto	u25190
 13579  004F48                     l21600:
 13580                           
 13581                           ; BSR set to: 1
 13582                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13583  004F48  ECBF  F046         	call	_CloseOrder	;wreg free
 13584                           
 13585                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13586  004F4C  0E00               	movlw	0
 13587  004F4E  0101               	movlb	1	; () banked
 13588  004F50  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13589  004F52  0012               	return	
 13590  004F54                     l21604:
 13591  004F54  0101               	movlb	1	; () banked
 13592  004F56  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13593  004F58  A4D8               	btfss	status,2,c
 13594  004F5A  0012               	return	
 13595                           
 13596                           ; BSR set to: 1
 13597  004F5C  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13598  004F5E  A4D8               	btfss	status,2,c
 13599  004F60  0012               	return	
 13600                           
 13601                           ; BSR set to: 1
 13602                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13603  004F62  BFA9               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13604  004F64  D006               	goto	u25440
 13605  004F66  51A9               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13606  004F68  E103               	bnz	u25441
 13607  004F6A  0E02               	movlw	2
 13608  004F6C  5DA8               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13609  004F6E  B0D8               	btfsc	status,0,c
 13610  004F70                     u25441:
 13611  004F70  0012               	return	
 13612  004F72                     u25440:
 13613                           
 13614                           ; BSR set to: 1
 13615                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13616  004F72  0E00               	movlw	0
 13617  004F74  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13618  004F76  0012               	return		;funcret
 13619  004F78                     __end_of_actionZone_Opened:
 13620                           	callstack 0
 13621                           
 13622 ;; *************** function _VerifyFollowMe *****************
 13623 ;; Defined at:
 13624 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13625 ;; Parameters:    Size  Location     Type
 13626 ;;  securityClos    1    wreg     enum E10397
 13627 ;; Auto vars:     Size  Location     Type
 13628 ;;  securityClos    1   15[COMRAM] enum E10397
 13629 ;; Return value:  Size  Location     Type
 13630 ;;                  1    wreg      void 
 13631 ;; Registers used:
 13632 ;;		wreg, status,2, status,0
 13633 ;; Tracked objects:
 13634 ;;		On entry : 0/0
 13635 ;;		On exit  : 3E/0
 13636 ;;		Unchanged: 0/0
 13637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13641 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13642 ;;Total ram usage:        1 bytes
 13643 ;; Hardware stack levels used: 1
 13644 ;; Hardware stack levels required when called: 4
 13645 ;; This function calls:
 13646 ;;		Nothing
 13647 ;; This function is called by:
 13648 ;;		_actionZone_Opening
 13649 ;;		_actionZone_Opened
 13650 ;; This function uses a non-reentrant model
 13651 ;;
 13652                           
 13653                           	psect	text34
 13654  008E3C                     __ptext34:
 13655                           	callstack 0
 13656  008E3C                     _VerifyFollowMe:
 13657                           	callstack 24
 13658                           
 13659                           ;incstack = 0
 13660                           ;VerifyFollowMe@securityClose stored from wreg
 13661  008E3C  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13662                           
 13663                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13664  008E3E  0100               	movlb	0	; () banked
 13665  008E40  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13666  008E42  B4D8               	btfsc	status,2,c
 13667  008E44  0012               	return	
 13668                           
 13669                           ; BSR set to: 0
 13670  008E46  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13671  008E48  A4D8               	btfss	status,2,c
 13672  008E4A  0012               	return	
 13673                           
 13674                           ; BSR set to: 0
 13675                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13676  008E4C  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13677  008E4E  A4D8               	btfss	status,2,c
 13678  008E50  0012               	return	
 13679                           
 13680                           ; BSR set to: 0
 13681  008E52  0101               	movlb	1	; () banked
 13682  008E54  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13683  008E56  A4D8               	btfss	status,2,c
 13684  008E58  0012               	return	
 13685                           
 13686                           ; BSR set to: 1
 13687                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13688  008E5A  0E01               	movlw	1
 13689  008E5C  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13690  008E5E  0012               	return		;funcret
 13691  008E60                     __end_of_VerifyFollowMe:
 13692                           	callstack 0
 13693                           
 13694 ;; *************** function _CloseOrder *****************
 13695 ;; Defined at:
 13696 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13697 ;; Parameters:    Size  Location     Type
 13698 ;;		None
 13699 ;; Auto vars:     Size  Location     Type
 13700 ;;		None
 13701 ;; Return value:  Size  Location     Type
 13702 ;;                  1    wreg      void 
 13703 ;; Registers used:
 13704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13705 ;; Tracked objects:
 13706 ;;		On entry : 3E/1
 13707 ;;		On exit  : 3E/0
 13708 ;;		Unchanged: 0/0
 13709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13714 ;;Total ram usage:        0 bytes
 13715 ;; Hardware stack levels used: 1
 13716 ;; Hardware stack levels required when called: 6
 13717 ;; This function calls:
 13718 ;;		_InitSoftStart
 13719 ;;		_sm_send_event
 13720 ;; This function is called by:
 13721 ;;		_actionZone_Opening
 13722 ;;		_actionZone_Opened
 13723 ;; This function uses a non-reentrant model
 13724 ;;
 13725                           
 13726                           	psect	text35
 13727  008D7E                     __ptext35:
 13728                           	callstack 0
 13729  008D7E                     _CloseOrder:
 13730                           	callstack 22
 13731                           
 13732                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13733                           
 13734                           ;incstack = 0
 13735  008D7E  0E03               	movlw	3
 13736  008D80  0101               	movlb	1	; () banked
 13737  008D82  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13738                           
 13739                           ; BSR set to: 1
 13740                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13741  008D84  0EE4               	movlw	low _controlGate_stateMachine
 13742  008D86  6E12               	movwf	sm_send_event@psm^0,c
 13743  008D88  0E01               	movlw	high _controlGate_stateMachine
 13744  008D8A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13745  008D8C  0E00               	movlw	0
 13746  008D8E  6E15               	movwf	(sm_send_event@event+1)^0,c
 13747  008D90  0E0E               	movlw	14
 13748  008D92  6E14               	movwf	sm_send_event@event^0,c
 13749  008D94  EC01  F041         	call	_sm_send_event	;wreg free
 13750                           
 13751                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13752  008D98  0E03               	movlw	3
 13753  008D9A  0101               	movlb	1	; () banked
 13754  008D9C  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13755                           
 13756                           ; BSR set to: 1
 13757                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13758  008D9E  EC2F  F041         	call	_InitSoftStart	;wreg free
 13759  008DA2  0012               	return		;funcret
 13760  008DA4                     __end_of_CloseOrder:
 13761                           	callstack 0
 13762                           
 13763 ;; *************** function _actionZone_Closing *****************
 13764 ;; Defined at:
 13765 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13766 ;; Parameters:    Size  Location     Type
 13767 ;;		None
 13768 ;; Auto vars:     Size  Location     Type
 13769 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13770 ;;  securityClos    1   49[COMRAM] enum E10397
 13771 ;; Return value:  Size  Location     Type
 13772 ;;                  1    wreg      void 
 13773 ;; Registers used:
 13774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13775 ;; Tracked objects:
 13776 ;;		On entry : 3F/0
 13777 ;;		On exit  : 0/0
 13778 ;;		Unchanged: 0/0
 13779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13784 ;;Total ram usage:        2 bytes
 13785 ;; Hardware stack levels used: 1
 13786 ;; Hardware stack levels required when called: 7
 13787 ;; This function calls:
 13788 ;;		_GetOpenOrder
 13789 ;;		_GetSecurityStateInClosing
 13790 ;;		_InitFullAutoTime
 13791 ;;		_InitWalkAutoTime
 13792 ;;		_OpenFullOrder
 13793 ;;		_OpenWalkOrder
 13794 ;;		_SetSegmentValueIntermitent
 13795 ;;		_StopOrder
 13796 ;;		___lmul
 13797 ;;		_setPositionInvertionInClosing
 13798 ;;		_sm_send_event
 13799 ;; This function is called by:
 13800 ;;		_sm_execute_ControlGate
 13801 ;; This function uses a non-reentrant model
 13802 ;;
 13803                           
 13804                           	psect	text36
 13805  003FAA                     __ptext36:
 13806                           	callstack 0
 13807  003FAA                     _actionZone_Closing:
 13808                           	callstack 22
 13809                           
 13810                           ; BSR set to: 0
 13811                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13812                           
 13813                           ;incstack = 0
 13814  003FAA  ECA5  F028         	call	_GetOpenOrder	;wreg free
 13815  003FAE  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13816                           
 13817                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13818  003FB0  EC51  F039         	call	_GetSecurityStateInClosing	;wreg free
 13819  003FB4  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13820                           
 13821                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13822  003FB6  0E00               	movlw	0
 13823  003FB8  0101               	movlb	1	; () banked
 13824  003FBA  6F8F               	movwf	_Abertura_pedonal& (0+255),b
 13825                           
 13826                           ; BSR set to: 1
 13827                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13828  003FBC  ECC6  F047         	call	_InitFullAutoTime	;wreg free
 13829                           
 13830                           ; BSR set to: 0
 13831                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13832  003FC0  0E00               	movlw	0
 13833  003FC2  0101               	movlb	1	; () banked
 13834  003FC4  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13835                           
 13836                           ; BSR set to: 1
 13837                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13838  003FC6  0E03               	movlw	3
 13839  003FC8  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13840  003FCA  D00D               	goto	l21628
 13841                           
 13842                           ; BSR set to: 1
 13843                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13844  003FCC  0E00               	movlw	0
 13845  003FCE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13846  003FD0                     l21626:
 13847                           
 13848                           ; BSR set to: 1
 13849                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13850  003FD0  0EE4               	movlw	low _controlGate_stateMachine
 13851  003FD2  6E12               	movwf	sm_send_event@psm^0,c
 13852  003FD4  0E01               	movlw	high _controlGate_stateMachine
 13853  003FD6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13854  003FD8  0E00               	movlw	0
 13855  003FDA  6E15               	movwf	(sm_send_event@event+1)^0,c
 13856  003FDC  0E10               	movlw	16
 13857  003FDE  6E14               	movwf	sm_send_event@event^0,c
 13858  003FE0  EC01  F041         	call	_sm_send_event	;wreg free
 13859                           
 13860                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13861  003FE4  0012               	return	
 13862  003FE6                     l21628:
 13863                           
 13864                           ; BSR set to: 1
 13865  003FE6  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13866  003FE8  B4D8               	btfsc	status,2,c
 13867  003FEA  D00C               	goto	u25490
 13868                           
 13869                           ; BSR set to: 1
 13870  003FEC  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13871  003FEE  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13872  003FF0  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13873  003FF2  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13874  003FF4  A4D8               	btfss	status,2,c
 13875  003FF6  D05F               	goto	l21660
 13876                           
 13877                           ; BSR set to: 1
 13878  003FF8  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13879  003FFA  A4D8               	btfss	status,2,c
 13880  003FFC  D05C               	goto	l21660
 13881                           
 13882                           ; BSR set to: 1
 13883  003FFE  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13884  004000  A4D8               	btfss	status,2,c
 13885  004002  D059               	goto	l21660
 13886  004004                     u25490:
 13887                           
 13888                           ; BSR set to: 1
 13889                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13890  004004  0E02               	movlw	2
 13891  004006  0100               	movlb	0	; () banked
 13892  004008  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13893  00400A  A4D8               	btfss	status,2,c
 13894  00400C  D018               	goto	l21640
 13895                           
 13896                           ; BSR set to: 0
 13897                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13898  00400E  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13899  004010  6E1D               	movwf	___lmul@multiplier^0,c
 13900  004012  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13901  004014  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13902  004016  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13903  004018  0EB0               	movlw	176
 13904  00401A  6E21               	movwf	___lmul@multiplicand^0,c
 13905  00401C  0E04               	movlw	4
 13906  00401E  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13907  004020  0E00               	movlw	0
 13908  004022  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13909  004024  0E00               	movlw	0
 13910  004026  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13911  004028  EC0F  F042         	call	___lmul	;wreg free
 13912  00402C  C01D  F1BC         	movff	?___lmul,_ts_system+32	;volatile
 13913  004030  C01E  F1BD         	movff	?___lmul+1,_ts_system+33	;volatile
 13914  004034  C01F  F1BE         	movff	?___lmul+2,_ts_system+34	;volatile
 13915  004038  C020  F1BF         	movff	?___lmul+3,_ts_system+35	;volatile
 13916                           
 13917                           ;sm_ControlGate_MC50.c: 668:         }
 13918  00403C  D009               	goto	l2768
 13919  00403E                     l21640:
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13923  00403E  0E00               	movlw	0
 13924  004040  0101               	movlb	1	; () banked
 13925  004042  6FBC               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13926  004044  0E00               	movlw	0
 13927  004046  6FBD               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13928  004048  0E00               	movlw	0
 13929  00404A  6FBE               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13930  00404C  0E00               	movlw	0
 13931  00404E  6FBF               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13932  004050                     l2768:
 13933                           
 13934                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13935  004050  0E00               	movlw	0
 13936  004052  0101               	movlb	1	; () banked
 13937  004054  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13938                           
 13939                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13940  004056  0E01               	movlw	1
 13941  004058  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13942                           
 13943                           ; BSR set to: 1
 13944                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 13945  00405A  0E01               	movlw	1
 13946  00405C  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 13947  00405E  0E00               	movlw	0
 13948  004060  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 13949  004062  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 13950  004064  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 13951                           
 13952                           ; BSR set to: 1
 13953                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 13954  004066  0E00               	movlw	0
 13955  004068  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 13956                           
 13957                           ; BSR set to: 1
 13958                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 13959  00406A  0E00               	movlw	0
 13960  00406C  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 13961  00406E  0E00               	movlw	0
 13962  004070  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 13963  004072  0E00               	movlw	0
 13964  004074  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 13965  004076  0E00               	movlw	0
 13966  004078  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 13967                           
 13968                           ; BSR set to: 1
 13969                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 13970  00407A  0E00               	movlw	0
 13971  00407C  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13972                           
 13973                           ; BSR set to: 1
 13974                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 13975  00407E  0E00               	movlw	0
 13976  004080  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 13977                           
 13978                           ; BSR set to: 1
 13979                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 13980  004082  0E00               	movlw	0
 13981  004084  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13982                           
 13983                           ; BSR set to: 1
 13984                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 13985  004086  0E00               	movlw	0
 13986  004088  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13987  00408A  0E28               	movlw	40
 13988  00408C  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13989                           
 13990                           ; BSR set to: 1
 13991                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 13992  00408E  0E0C               	movlw	12
 13993  004090  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 13994  004092  0E00               	movlw	0
 13995  004094  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 13996  004096  0E04               	movlw	4
 13997  004098  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 13998  00409A  0E0F               	movlw	15
 13999  00409C  EC79  F045         	call	_SetSegmentValueIntermitent
 14000                           
 14001                           ; BSR set to: 1
 14002                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 14003  0040A0  0EE4               	movlw	low _controlGate_stateMachine
 14004  0040A2  6E12               	movwf	sm_send_event@psm^0,c
 14005  0040A4  0E01               	movlw	high _controlGate_stateMachine
 14006  0040A6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14007  0040A8  0E00               	movlw	0
 14008  0040AA  6E15               	movwf	(sm_send_event@event+1)^0,c
 14009  0040AC  0E0F               	movlw	15
 14010  0040AE  6E14               	movwf	sm_send_event@event^0,c
 14011  0040B0  EC01  F041         	call	_sm_send_event	;wreg free
 14012                           
 14013                           ;sm_ControlGate_MC50.c: 691:     }
 14014  0040B4  0012               	return	
 14015  0040B6                     l21660:
 14016                           
 14017                           ; BSR set to: 1
 14018  0040B6  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14019  0040B8  B4D8               	btfsc	status,2,c
 14020  0040BA  D011               	goto	u25540
 14021                           
 14022                           ; BSR set to: 1
 14023  0040BC  BFC7               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14024  0040BE  D021               	goto	l21680
 14025  0040C0  51C7               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14026  0040C2  E103               	bnz	u25520
 14027  0040C4  05C6               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14028  0040C6  A0D8               	btfss	status,0,c
 14029  0040C8  D01C               	goto	l21680
 14030  0040CA                     u25520:
 14031                           
 14032                           ; BSR set to: 1
 14033  0040CA  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 14034  0040CC  A4D8               	btfss	status,2,c
 14035  0040CE  D019               	goto	l21680
 14036                           
 14037                           ; BSR set to: 1
 14038  0040D0  BFCD               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 14039  0040D2  D005               	goto	u25540
 14040  0040D4  51CD               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 14041  0040D6  E115               	bnz	l21680
 14042  0040D8  05CC               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 14043  0040DA  B0D8               	btfsc	status,0,c
 14044  0040DC  D012               	goto	l21680
 14045  0040DE                     u25540:
 14046                           
 14047                           ; BSR set to: 1
 14048  0040DE  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 14049  0040E0  A4D8               	btfss	status,2,c
 14050  0040E2  D00F               	goto	l21680
 14051                           
 14052                           ; BSR set to: 1
 14053                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 14054  0040E4  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14055  0040E6  A4D8               	btfss	status,2,c
 14056                           
 14057                           ; BSR set to: 1
 14058                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 14059  0040E8  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14060                           
 14061                           ; BSR set to: 1
 14062                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 14063                           
 14064                           ;sm_ControlGate_MC50.c: 696:         }
 14065  0040EA  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14066                           
 14067                           ; BSR set to: 1
 14068                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 14069  0040EC  0E01               	movlw	1
 14070  0040EE  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14071                           
 14072                           ; BSR set to: 1
 14073                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 14074  0040F0  0E00               	movlw	0
 14075  0040F2  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14076  0040F4  0E0A               	movlw	10
 14077  0040F6  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14078                           
 14079                           ; BSR set to: 1
 14080                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 14081  0040F8  0E00               	movlw	0
 14082  0040FA  6FDD               	movwf	(_ts_system+65)& (0+255),b	;volatile
 14083  0040FC  0E1E               	movlw	30
 14084  0040FE  6FDC               	movwf	(_ts_system+64)& (0+255),b	;volatile
 14085                           
 14086                           ;sm_ControlGate_MC50.c: 702:     }
 14087  004100  0012               	return	
 14088  004102                     l21680:
 14089                           
 14090                           ; BSR set to: 1
 14091  004102  BFC7               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14092  004104  D02E               	goto	l21710
 14093  004106  51C7               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14094  004108  E103               	bnz	u25570
 14095  00410A  05C6               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14096  00410C  A0D8               	btfss	status,0,c
 14097  00410E  D029               	goto	l21710
 14098  004110                     u25570:
 14099                           
 14100                           ; BSR set to: 1
 14101  004110  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14102  004112  A4D8               	btfss	status,2,c
 14103  004114  D026               	goto	l21710
 14104                           
 14105                           ; BSR set to: 1
 14106                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 14107  004116  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 14108  004118  A4D8               	btfss	status,2,c
 14109  00411A  D005               	goto	l21692
 14110  00411C                     u25590:
 14111                           
 14112                           ; BSR set to: 1
 14113                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 14114  00411C  0E00               	movlw	0
 14115  00411E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14116                           
 14117                           ; BSR set to: 1
 14118                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 14119  004120  ECA1  F031         	call	_setPositionInvertionInClosing	;wreg free
 14120  004124  D755               	goto	l21626
 14121  004126                     l21692:
 14122                           
 14123                           ; BSR set to: 1
 14124  004126  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14125  004128  D005               	goto	u25600
 14126  00412A  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14127  00412C  E117               	bnz	l21708
 14128  00412E  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14129  004130  B0D8               	btfsc	status,0,c
 14130  004132  D014               	goto	l21708
 14131  004134                     u25600:
 14132                           
 14133                           ; BSR set to: 1
 14134                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 14135  004134  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14136  004136  A4D8               	btfss	status,2,c
 14137  004138  D003               	goto	l21698
 14138                           
 14139                           ; BSR set to: 1
 14140                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 14141  00413A  EC96  F03F         	call	_OpenWalkOrder	;wreg free
 14142                           
 14143                           ;sm_ControlGate_MC50.c: 713:             }
 14144  00413E  D004               	goto	l21702
 14145  004140                     l21698:
 14146                           
 14147                           ; BSR set to: 1
 14148                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 14149  004140  ECD2  F046         	call	_OpenFullOrder	;wreg free
 14150                           
 14151                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 14152  004144  ECA1  F031         	call	_setPositionInvertionInClosing	;wreg free
 14153  004148                     l21702:
 14154                           
 14155                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 14156  004148  0E00               	movlw	0
 14157  00414A  0101               	movlb	1	; () banked
 14158  00414C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14159                           
 14160                           ; BSR set to: 1
 14161                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 14162  00414E  0E01               	movlw	1
 14163  004150  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 14164                           
 14165                           ; BSR set to: 1
 14166                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 14167  004152  0E00               	movlw	0
 14168  004154  6FCD               	movwf	(_ts_system+49)& (0+255),b	;volatile
 14169  004156  0E14               	movlw	20
 14170  004158  6FCC               	movwf	(_ts_system+48)& (0+255),b	;volatile
 14171                           
 14172                           ;sm_ControlGate_MC50.c: 726:         } else
 14173  00415A  0012               	return	
 14174  00415C                     l21708:
 14175                           
 14176                           ; BSR set to: 1
 14177                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 14178  00415C  0E00               	movlw	0
 14179  00415E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14180  004160  0012               	return	
 14181  004162                     l21710:
 14182                           
 14183                           ; BSR set to: 1
 14184  004162  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14185  004164  A4D8               	btfss	status,2,c
 14186  004166  D017               	goto	l21726
 14187                           
 14188                           ; BSR set to: 1
 14189                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 14190  004168  0E00               	movlw	0
 14191  00416A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14192                           
 14193                           ; BSR set to: 1
 14194                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 14195  00416C  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14196  00416E  D005               	goto	u25630
 14197  004170  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14198  004172  E160               	bnz	l2805
 14199  004174  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14200  004176  B0D8               	btfsc	status,0,c
 14201  004178  0012               	return	
 14202  00417A                     u25630:
 14203                           
 14204                           ; BSR set to: 1
 14205                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14206  00417A  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14207  00417C  A4D8               	btfss	status,2,c
 14208  00417E  D003               	goto	l21720
 14209                           
 14210                           ; BSR set to: 1
 14211                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14212  004180  EC96  F03F         	call	_OpenWalkOrder	;wreg free
 14213                           
 14214                           ;sm_ControlGate_MC50.c: 741:             }
 14215  004184  D004               	goto	l21724
 14216  004186                     l21720:
 14217                           
 14218                           ; BSR set to: 1
 14219                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14220  004186  ECD2  F046         	call	_OpenFullOrder	;wreg free
 14221                           
 14222                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14223  00418A  ECA1  F031         	call	_setPositionInvertionInClosing	;wreg free
 14224  00418E                     l21724:
 14225                           
 14226                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14227  00418E  0E00               	movlw	0
 14228  004190  0101               	movlb	1	; () banked
 14229  004192  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14230  004194  0012               	return	
 14231  004196                     l21726:
 14232                           
 14233                           ; BSR set to: 1
 14234  004196  5100               	movf	_var_sys& (0+255),w,b	;volatile
 14235  004198  A4D8               	btfss	status,2,c
 14236  00419A  D00B               	goto	l21742
 14237                           
 14238                           ; BSR set to: 1
 14239                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14240  00419C  0E02               	movlw	2
 14241  00419E  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14242  0041A0  B4D8               	btfsc	status,2,c
 14243  0041A2  D002               	goto	l21738
 14244                           
 14245                           ; BSR set to: 1
 14246                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14247  0041A4  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14248  0041A6  D7BA               	goto	u25590
 14249  0041A8                     l21738:
 14250                           
 14251                           ; BSR set to: 1
 14252                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14253  0041A8  ECA1  F031         	call	_setPositionInvertionInClosing	;wreg free
 14254  0041AC                     l21740:
 14255                           
 14256                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14257  0041AC  EC74  F047         	call	_StopOrder	;wreg free
 14258  0041B0  0012               	return	
 14259  0041B2                     l21742:
 14260                           
 14261                           ; BSR set to: 1
 14262  0041B2  BFCF               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14263  0041B4  D005               	goto	u25670
 14264  0041B6  51CF               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14265  0041B8  E10B               	bnz	l21752
 14266  0041BA  05CE               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14267  0041BC  B0D8               	btfsc	status,0,c
 14268  0041BE  D008               	goto	l21752
 14269  0041C0                     u25670:
 14270                           
 14271                           ; BSR set to: 1
 14272  0041C0  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14273  0041C2  A4D8               	btfss	status,2,c
 14274  0041C4  D005               	goto	l21752
 14275                           
 14276                           ; BSR set to: 1
 14277                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14278  0041C6  ECA1  F031         	call	_setPositionInvertionInClosing	;wreg free
 14279                           
 14280                           ; BSR set to: 1
 14281                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14282  0041CA  0E00               	movlw	0
 14283  0041CC  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14284  0041CE  D7EE               	goto	l21740
 14285  0041D0                     l21752:
 14286                           
 14287                           ; BSR set to: 1
 14288  0041D0  0100               	movlb	0	; () banked
 14289  0041D2  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14290  0041D4  B4D8               	btfsc	status,2,c
 14291  0041D6  D004               	goto	u25700
 14292                           
 14293                           ; BSR set to: 0
 14294  0041D8  0E02               	movlw	2
 14295  0041DA  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14296  0041DC  A4D8               	btfss	status,2,c
 14297  0041DE  D005               	goto	l21760
 14298  0041E0                     u25700:
 14299                           
 14300                           ; BSR set to: 0
 14301                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14302  0041E0  0E04               	movlw	4
 14303  0041E2  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14304  0041E4  B4D8               	btfsc	status,2,c
 14305  0041E6  0012               	return	
 14306  0041E8  D7E1               	goto	l21740
 14307  0041EA                     l21760:
 14308                           
 14309                           ; BSR set to: 0
 14310  0041EA  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14311  0041EC  B4D8               	btfsc	status,2,c
 14312  0041EE  0012               	return	
 14313                           
 14314                           ; BSR set to: 0
 14315                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14316  0041F0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14317  0041F2  A4D8               	btfss	status,2,c
 14318  0041F4  D013               	goto	l21776
 14319                           
 14320                           ; BSR set to: 0
 14321                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14322  0041F6  ECA1  F031         	call	_setPositionInvertionInClosing	;wreg free
 14323                           
 14324                           ; BSR set to: 1
 14325                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14326  0041FA  EC74  F047         	call	_StopOrder	;wreg free
 14327                           
 14328                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14329  0041FE  0E02               	movlw	2
 14330  004200  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14331  004202  A4D8               	btfss	status,2,c
 14332  004204  0012               	return	
 14333  004206  0E02               	movlw	2
 14334  004208  0100               	movlb	0	; () banked
 14335  00420A  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14336  00420C  B4D8               	btfsc	status,2,c
 14337  00420E  0012               	return	
 14338                           
 14339                           ; BSR set to: 0
 14340                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14341  004210  EC4A  F048         	call	_InitWalkAutoTime	;wreg free
 14342                           
 14343                           ; BSR set to: 0
 14344                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14345  004214  0E01               	movlw	1
 14346  004216  0101               	movlb	1	; () banked
 14347  004218  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14348  00421A  0012               	return	
 14349  00421C                     l21776:
 14350                           
 14351                           ; BSR set to: 0
 14352                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14353  00421C  0E04               	movlw	4
 14354  00421E  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14355  004220  B4D8               	btfsc	status,2,c
 14356  004222  D7C4               	goto	l21740
 14357                           
 14358                           ; BSR set to: 0
 14359                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14360  004224  0E01               	movlw	1
 14361  004226  0101               	movlb	1	; () banked
 14362  004228  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14363                           
 14364                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14365  00422A  0E00               	movlw	0
 14366  00422C  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14367  00422E  0E0A               	movlw	10
 14368  004230  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14369                           
 14370                           ;sm_ControlGate_MC50.c: 806:             }
 14371  004232  0012               	return	
 14372  004234                     l2805:
 14373  004234  0012               	return		;funcret
 14374  004236                     __end_of_actionZone_Closing:
 14375                           	callstack 0
 14376                           
 14377 ;; *************** function _setPositionInvertionInClosing *****************
 14378 ;; Defined at:
 14379 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14380 ;; Parameters:    Size  Location     Type
 14381 ;;		None
 14382 ;; Auto vars:     Size  Location     Type
 14383 ;;		None
 14384 ;; Return value:  Size  Location     Type
 14385 ;;                  1    wreg      void 
 14386 ;; Registers used:
 14387 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14388 ;; Tracked objects:
 14389 ;;		On entry : 3E/1
 14390 ;;		On exit  : 3F/1
 14391 ;;		Unchanged: 0/0
 14392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14395 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14396 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14397 ;;Total ram usage:       12 bytes
 14398 ;; Hardware stack levels used: 1
 14399 ;; Hardware stack levels required when called: 6
 14400 ;; This function calls:
 14401 ;;		_getTimeDecelaration
 14402 ;; This function is called by:
 14403 ;;		_actionZone_Opening
 14404 ;;		_actionZone_Closing
 14405 ;; This function uses a non-reentrant model
 14406 ;;
 14407                           
 14408                           	psect	text37
 14409  006342                     __ptext37:
 14410                           	callstack 0
 14411  006342                     _setPositionInvertionInClosing:
 14412                           	callstack 22
 14413                           
 14414                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14415                           
 14416                           ;incstack = 0
 14417  006342  0E02               	movlw	2
 14418  006344  0100               	movlb	0	; () banked
 14419  006346  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14420  006348  B4D8               	btfsc	status,2,c
 14421  00634A  D007               	goto	l20430
 14422                           
 14423                           ; BSR set to: 0
 14424                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14425  00634C  0E02               	movlw	2
 14426  00634E  0101               	movlb	1	; () banked
 14427  006350  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14428  006352  0E00               	movlw	0
 14429  006354  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14430  006356  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14431  006358  D008               	goto	L74
 14432  00635A                     l20430:
 14433                           
 14434                           ; BSR set to: 0
 14435                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14436  00635A  0EFF               	movlw	255
 14437  00635C  0101               	movlb	1	; () banked
 14438  00635E  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14439  006360  0EFF               	movlw	255
 14440  006362  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14441  006364  0EFF               	movlw	255
 14442  006366  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14443  006368  0EFF               	movlw	255
 14444  00636A                     L74:
 14445  00636A  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14446                           
 14447                           ; BSR set to: 1
 14448                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14449  00636C  0E01               	movlw	1
 14450  00636E  ECD4  F035         	call	_getTimeDecelaration
 14451  006372  0101               	movlb	1	; () banked
 14452  006374  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14453  006376  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14454  006378  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14455  00637A  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14456  00637C  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14457  00637E  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14458  006380  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14459  006382  0A80               	xorlw	128
 14460  006384  0100               	movlb	0	; () banked
 14461  006386  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14462  006388  0101               	movlb	1	; () banked
 14463  00638A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14464  00638C  0A80               	xorlw	128
 14465  00638E  0100               	movlb	0	; () banked
 14466  006390  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14467  006392  B0D8               	btfsc	status,0,c
 14468  006394  D008               	goto	l20438
 14469                           
 14470                           ; BSR set to: 0
 14471  006396  0E02               	movlw	2
 14472  006398  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14473  00639A  B4D8               	btfsc	status,2,c
 14474  00639C  D004               	goto	l20438
 14475                           
 14476                           ; BSR set to: 0
 14477                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14478  00639E  0E01               	movlw	1
 14479  0063A0  ECD4  F035         	call	_getTimeDecelaration
 14480  0063A4  D01A               	goto	L75
 14481  0063A6                     l20438:
 14482                           
 14483                           ; BSR set to: 0
 14484  0063A6  0E03               	movlw	3
 14485  0063A8  ECD4  F035         	call	_getTimeDecelaration
 14486  0063AC  5029               	movf	?_getTimeDecelaration^0,w,c
 14487  0063AE  0101               	movlb	1	; () banked
 14488  0063B0  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14489  0063B2  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14490  0063B4  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14491  0063B6  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14492  0063B8  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14493  0063BA  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14494  0063BC  0A80               	xorlw	128
 14495  0063BE  0100               	movlb	0	; () banked
 14496  0063C0  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14497  0063C2  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14498  0063C4  0A80               	xorlw	128
 14499  0063C6  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14500  0063C8  B0D8               	btfsc	status,0,c
 14501  0063CA  D00F               	goto	l20444
 14502                           
 14503                           ; BSR set to: 0
 14504  0063CC  0E02               	movlw	2
 14505  0063CE  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14506  0063D0  B4D8               	btfsc	status,2,c
 14507  0063D2  D00B               	goto	l20444
 14508                           
 14509                           ; BSR set to: 0
 14510                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14511  0063D4  0E03               	movlw	3
 14512  0063D6  ECD4  F035         	call	_getTimeDecelaration
 14513  0063DA                     L75:
 14514  0063DA  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14515  0063DE  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14516  0063E2  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14517  0063E6  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14518  0063EA                     l20444:
 14519                           
 14520                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14521  0063EA  0100               	movlb	0	; () banked
 14522  0063EC  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14523  0063EE  0D0A               	mullw	10
 14524  0063F0  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14525  0063F4  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14526  0063F8  0E00               	movlw	0
 14527  0063FA  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14528  0063FC  0EFF               	movlw	255
 14529  0063FE  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14530  006400  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14531  006402  0101               	movlb	1	; () banked
 14532  006404  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14533  006406  0100               	movlb	0	; () banked
 14534  006408  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14535  00640A  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14536  00640C  0101               	movlb	1	; () banked
 14537  00640E  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14538  006410  0100               	movlb	0	; () banked
 14539  006412  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14540  006414  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14541  006416  0101               	movlb	1	; () banked
 14542  006418  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14543  00641A  0100               	movlb	0	; () banked
 14544  00641C  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14545  00641E  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14546  006420  0101               	movlb	1	; () banked
 14547  006422  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14548  006424  0100               	movlb	0	; () banked
 14549  006426  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14550  006428  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14551  00642A  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14552  00642C  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14553  00642E  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14554  006430  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14555  006432  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14556  006434  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14557  006436  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14558  006438  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14559  00643A  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14560  00643C  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14561  00643E  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14562  006440  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14563  006442  0EC8               	movlw	200
 14564  006444  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14565  006446  0101               	movlb	1	; () banked
 14566  006448  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14567  00644A  0E00               	movlw	0
 14568  00644C  0100               	movlb	0	; () banked
 14569  00644E  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14570  006450  0101               	movlb	1	; () banked
 14571  006452  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14572  006454  0E00               	movlw	0
 14573  006456  0100               	movlb	0	; () banked
 14574  006458  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14575  00645A  0101               	movlb	1	; () banked
 14576  00645C  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14577  00645E  0E00               	movlw	0
 14578  006460  0100               	movlb	0	; () banked
 14579  006462  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14580  006464  0101               	movlb	1	; () banked
 14581  006466  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14582                           
 14583                           ; BSR set to: 1
 14584  006468  0012               	return		;funcret
 14585  00646A                     __end_of_setPositionInvertionInClosing:
 14586                           	callstack 0
 14587                           
 14588 ;; *************** function _getTimeDecelaration *****************
 14589 ;; Defined at:
 14590 ;;		line 641 in file "outputs_MC50.c"
 14591 ;; Parameters:    Size  Location     Type
 14592 ;;  state           1    wreg     enum E10381
 14593 ;; Auto vars:     Size  Location     Type
 14594 ;;  state           1   48[COMRAM] enum E10381
 14595 ;; Return value:  Size  Location     Type
 14596 ;;                  4   40[COMRAM] long 
 14597 ;; Registers used:
 14598 ;;		wreg, status,2, status,0, cstack
 14599 ;; Tracked objects:
 14600 ;;		On entry : 3E/1
 14601 ;;		On exit  : 0/0
 14602 ;;		Unchanged: 0/0
 14603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14604 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14606 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14607 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14608 ;;Total ram usage:        9 bytes
 14609 ;; Hardware stack levels used: 1
 14610 ;; Hardware stack levels required when called: 5
 14611 ;; This function calls:
 14612 ;;		___lmul
 14613 ;; This function is called by:
 14614 ;;		_getStateOpenPosition
 14615 ;;		_controlVelocity
 14616 ;;		_setPositionInvertionInClosing
 14617 ;;		_setPositionInvertionInOpening
 14618 ;; This function uses a non-reentrant model
 14619 ;;
 14620                           
 14621                           	psect	text38
 14622  006BA8                     __ptext38:
 14623                           	callstack 0
 14624  006BA8                     _getTimeDecelaration:
 14625                           	callstack 22
 14626                           
 14627                           ; BSR set to: 1
 14628                           ;incstack = 0
 14629                           ;getTimeDecelaration@state stored from wreg
 14630  006BA8  6E31               	movwf	getTimeDecelaration@state^0,c
 14631                           
 14632                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14633  006BAA  0E03               	movlw	3
 14634  006BAC  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14635  006BAE  A4D8               	btfss	status,2,c
 14636  006BB0  D033               	goto	l19466
 14637                           
 14638                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14639  006BB2  0E02               	movlw	2
 14640  006BB4  0100               	movlb	0	; () banked
 14641  006BB6  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14642  006BB8  B4D8               	btfsc	status,2,c
 14643  006BBA  D018               	goto	l19462
 14644                           
 14645                           ; BSR set to: 0
 14646                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14647  006BBC  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14648  006BBE  6E1D               	movwf	___lmul@multiplier^0,c
 14649  006BC0  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14650  006BC2  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14651  006BC4  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14652  006BC6  0E0A               	movlw	10
 14653  006BC8  6E21               	movwf	___lmul@multiplicand^0,c
 14654  006BCA  0E00               	movlw	0
 14655  006BCC  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14656  006BCE  0E00               	movlw	0
 14657  006BD0  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14658  006BD2  0E00               	movlw	0
 14659  006BD4  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14660  006BD6  EC0F  F042         	call	___lmul	;wreg free
 14661  006BDA  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14662  006BDE  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14663  006BE2  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14664  006BE6  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14665  006BEA  0012               	return	
 14666  006BEC                     l19462:
 14667                           
 14668                           ; BSR set to: 0
 14669  006BEC  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14670  006BF0  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14671  006BF2  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14672  006BF4  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14673  006BF6  0E02               	movlw	2
 14674  006BF8                     u22265:
 14675  006BF8  90D8               	bcf	status,0,c
 14676  006BFA  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14677  006BFC  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14678  006BFE  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14679  006C00  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14680  006C02  2EE8               	decfsz	wreg,f,c
 14681  006C04  D7F9               	goto	u22265
 14682  006C06  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14683  006C0A  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14684  006C0E  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14685  006C12  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14686  006C16  0012               	return	
 14687  006C18                     l19466:
 14688                           
 14689                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14690  006C18  0E02               	movlw	2
 14691  006C1A  0100               	movlb	0	; () banked
 14692  006C1C  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14693  006C1E  B4D8               	btfsc	status,2,c
 14694  006C20  D01D               	goto	l19474
 14695                           
 14696                           ; BSR set to: 0
 14697                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14698  006C22  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14699  006C24  6E1D               	movwf	___lmul@multiplier^0,c
 14700  006C26  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14701  006C28  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14702  006C2A  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14703  006C2C  0EF6               	movlw	246
 14704  006C2E  6E21               	movwf	___lmul@multiplicand^0,c
 14705  006C30  0EFF               	movlw	255
 14706  006C32  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14707  006C34  0EFF               	movlw	255
 14708  006C36  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14709  006C38  0EFF               	movlw	255
 14710  006C3A  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14711  006C3C  EC0F  F042         	call	___lmul	;wreg free
 14712  006C40  0100               	movlb	0	; () banked
 14713  006C42  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14714  006C44  241D               	addwf	?___lmul^0,w,c
 14715  006C46  6E29               	movwf	?_getTimeDecelaration^0,c
 14716  006C48  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14717  006C4A  201E               	addwfc	(?___lmul+1)^0,w,c
 14718  006C4C  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14719  006C4E  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14720  006C50  201F               	addwfc	(?___lmul+2)^0,w,c
 14721  006C52  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14722  006C54  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14723  006C56  2020               	addwfc	(?___lmul+3)^0,w,c
 14724  006C58  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14725  006C5A  0012               	return	
 14726  006C5C                     l19474:
 14727                           
 14728                           ; BSR set to: 0
 14729  006C5C  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14730  006C60  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14731  006C62  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14732  006C64  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14733  006C66  0E02               	movlw	2
 14734  006C68                     u22285:
 14735  006C68  90D8               	bcf	status,0,c
 14736  006C6A  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14737  006C6C  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14738  006C6E  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14739  006C70  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14740  006C72  2EE8               	decfsz	wreg,f,c
 14741  006C74  D7F9               	goto	u22285
 14742  006C76  502D               	movf	??_getTimeDecelaration^0,w,c
 14743  006C78  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14744  006C7A  6E29               	movwf	?_getTimeDecelaration^0,c
 14745  006C7C  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14746  006C7E  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14747  006C80  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14748  006C82  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14749  006C84  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14750  006C86  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14751  006C88  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14752  006C8A  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14753  006C8C  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14754  006C8E  0012               	return		;funcret
 14755  006C90                     __end_of_getTimeDecelaration:
 14756                           	callstack 0
 14757                           
 14758 ;; *************** function ___lmul *****************
 14759 ;; Defined at:
 14760 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14761 ;; Parameters:    Size  Location     Type
 14762 ;;  multiplier      4   28[COMRAM] unsigned long 
 14763 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14764 ;; Auto vars:     Size  Location     Type
 14765 ;;  product         4   36[COMRAM] unsigned long 
 14766 ;; Return value:  Size  Location     Type
 14767 ;;                  4   28[COMRAM] unsigned long 
 14768 ;; Registers used:
 14769 ;;		wreg, status,2, status,0
 14770 ;; Tracked objects:
 14771 ;;		On entry : 0/1
 14772 ;;		On exit  : 0/0
 14773 ;;		Unchanged: 0/0
 14774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14775 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14776 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14778 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14779 ;;Total ram usage:       12 bytes
 14780 ;; Hardware stack levels used: 1
 14781 ;; Hardware stack levels required when called: 4
 14782 ;; This function calls:
 14783 ;;		Nothing
 14784 ;; This function is called by:
 14785 ;;		_getStateOpenPosition
 14786 ;;		_getTimeDecelaration
 14787 ;;		_actionZone_Closing
 14788 ;;		_sm_execute_menuConfiguration
 14789 ;; This function uses a non-reentrant model
 14790 ;;
 14791                           
 14792                           	psect	text39
 14793  00841E                     __ptext39:
 14794                           	callstack 0
 14795  00841E                     ___lmul:
 14796                           	callstack 24
 14797                           
 14798                           ;incstack = 0
 14799  00841E  0E00               	movlw	0
 14800  008420  6E25               	movwf	___lmul@product^0,c
 14801  008422  0E00               	movlw	0
 14802  008424  6E26               	movwf	(___lmul@product+1)^0,c
 14803  008426  0E00               	movlw	0
 14804  008428  6E27               	movwf	(___lmul@product+2)^0,c
 14805  00842A  0E00               	movlw	0
 14806  00842C  6E28               	movwf	(___lmul@product+3)^0,c
 14807  00842E                     l19352:
 14808  00842E  A01D               	btfss	___lmul@multiplier^0,0,c
 14809  008430  D008               	goto	l19356
 14810  008432  5021               	movf	___lmul@multiplicand^0,w,c
 14811  008434  2625               	addwf	___lmul@product^0,f,c
 14812  008436  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14813  008438  2226               	addwfc	(___lmul@product+1)^0,f,c
 14814  00843A  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14815  00843C  2227               	addwfc	(___lmul@product+2)^0,f,c
 14816  00843E  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14817  008440  2228               	addwfc	(___lmul@product+3)^0,f,c
 14818  008442                     l19356:
 14819  008442  90D8               	bcf	status,0,c
 14820  008444  3621               	rlcf	___lmul@multiplicand^0,f,c
 14821  008446  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14822  008448  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14823  00844A  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14824  00844C  90D8               	bcf	status,0,c
 14825  00844E  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14826  008450  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14827  008452  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14828  008454  321D               	rrcf	___lmul@multiplier^0,f,c
 14829  008456  501D               	movf	___lmul@multiplier^0,w,c
 14830  008458  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14831  00845A  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14832  00845C  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14833  00845E  A4D8               	btfss	status,2,c
 14834  008460  D7E6               	goto	l19352
 14835  008462  C025  F01D         	movff	___lmul@product,?___lmul
 14836  008466  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14837  00846A  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14838  00846E  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14839  008472  0012               	return		;funcret
 14840  008474                     __end_of___lmul:
 14841                           	callstack 0
 14842                           
 14843 ;; *************** function _StopOrder *****************
 14844 ;; Defined at:
 14845 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14846 ;; Parameters:    Size  Location     Type
 14847 ;;		None
 14848 ;; Auto vars:     Size  Location     Type
 14849 ;;		None
 14850 ;; Return value:  Size  Location     Type
 14851 ;;                  1    wreg      void 
 14852 ;; Registers used:
 14853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14854 ;; Tracked objects:
 14855 ;;		On entry : 3E/1
 14856 ;;		On exit  : 0/0
 14857 ;;		Unchanged: 0/0
 14858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14863 ;;Total ram usage:        0 bytes
 14864 ;; Hardware stack levels used: 1
 14865 ;; Hardware stack levels required when called: 6
 14866 ;; This function calls:
 14867 ;;		_sm_send_event
 14868 ;; This function is called by:
 14869 ;;		_actionZone_Opening
 14870 ;;		_actionZone_Closing
 14871 ;; This function uses a non-reentrant model
 14872 ;;
 14873                           
 14874                           	psect	text40
 14875  008EE8                     __ptext40:
 14876                           	callstack 0
 14877  008EE8                     _StopOrder:
 14878                           	callstack 22
 14879                           
 14880                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14881                           
 14882                           ;incstack = 0
 14883  008EE8  0E00               	movlw	0
 14884  008EEA  0101               	movlb	1	; () banked
 14885  008EEC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14886                           
 14887                           ; BSR set to: 1
 14888                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14889  008EEE  0EE4               	movlw	low _controlGate_stateMachine
 14890  008EF0  6E12               	movwf	sm_send_event@psm^0,c
 14891  008EF2  0E01               	movlw	high _controlGate_stateMachine
 14892  008EF4  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14893  008EF6  0E00               	movlw	0
 14894  008EF8  6E15               	movwf	(sm_send_event@event+1)^0,c
 14895  008EFA  0E0D               	movlw	13
 14896  008EFC  6E14               	movwf	sm_send_event@event^0,c
 14897  008EFE  EC01  F041         	call	_sm_send_event	;wreg free
 14898  008F02  0012               	return		;funcret
 14899  008F04                     __end_of_StopOrder:
 14900                           	callstack 0
 14901                           
 14902 ;; *************** function _GetSecurityStateInClosing *****************
 14903 ;; Defined at:
 14904 ;;		line 776 in file "inputs_MC50.c"
 14905 ;; Parameters:    Size  Location     Type
 14906 ;;		None
 14907 ;; Auto vars:     Size  Location     Type
 14908 ;;		None
 14909 ;; Return value:  Size  Location     Type
 14910 ;;                  1    wreg      enum E10564
 14911 ;; Registers used:
 14912 ;;		wreg, status,2, status,0, cstack
 14913 ;; Tracked objects:
 14914 ;;		On entry : 0/0
 14915 ;;		On exit  : 3E/0
 14916 ;;		Unchanged: 0/0
 14917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14922 ;;Total ram usage:        0 bytes
 14923 ;; Hardware stack levels used: 1
 14924 ;; Hardware stack levels required when called: 5
 14925 ;; This function calls:
 14926 ;;		_SetSegmentValueIntermitent
 14927 ;; This function is called by:
 14928 ;;		_actionZone_Opening
 14929 ;;		_actionZone_Opened
 14930 ;;		_actionZone_Closing
 14931 ;; This function uses a non-reentrant model
 14932 ;;
 14933                           
 14934                           	psect	text41
 14935  0072A2                     __ptext41:
 14936                           	callstack 0
 14937  0072A2                     _GetSecurityStateInClosing:
 14938                           	callstack 23
 14939                           
 14940                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14941                           
 14942                           ;incstack = 0
 14943  0072A2  0100               	movlb	0	; () banked
 14944  0072A4  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 14945  0072A6  A4D8               	btfss	status,2,c
 14946  0072A8  D01B               	goto	l20110
 14947                           
 14948                           ; BSR set to: 0
 14949  0072AA  0101               	movlb	1	; () banked
 14950  0072AC  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14951  0072AE  A4D8               	btfss	status,2,c
 14952  0072B0  D017               	goto	l20110
 14953                           
 14954                           ; BSR set to: 1
 14955  0072B2  0100               	movlb	0	; () banked
 14956  0072B4  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 14957  0072B6  A4D8               	btfss	status,2,c
 14958  0072B8  D013               	goto	l20110
 14959                           
 14960                           ; BSR set to: 0
 14961  0072BA  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14962  0072BC  A4D8               	btfss	status,2,c
 14963  0072BE  D010               	goto	l20110
 14964                           
 14965                           ; BSR set to: 0
 14966                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14967  0072C0  0E00               	movlw	0
 14968  0072C2  0101               	movlb	1	; () banked
 14969  0072C4  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14970  0072C6  0E04               	movlw	4
 14971  0072C8  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14972                           
 14973                           ; BSR set to: 1
 14974                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 14975  0072CA  0E0A               	movlw	10
 14976  0072CC  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14977  0072CE  0E00               	movlw	0
 14978  0072D0  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14979  0072D2  0E14               	movlw	20
 14980  0072D4  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14981  0072D6  0E12               	movlw	18
 14982  0072D8  EC79  F045         	call	_SetSegmentValueIntermitent
 14983  0072DC                     l20104:
 14984                           
 14985                           ; BSR set to: 1
 14986                           ;inputs_MC50.c: 792:         return YES;
 14987  0072DC  0E01               	movlw	1
 14988  0072DE  0012               	return	
 14989  0072E0                     l20110:
 14990  0072E0  0100               	movlb	0	; () banked
 14991  0072E2  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14992  0072E4  A4D8               	btfss	status,2,c
 14993  0072E6  D013               	goto	l20124
 14994                           
 14995                           ; BSR set to: 0
 14996  0072E8  0101               	movlb	1	; () banked
 14997  0072EA  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14998  0072EC  A4D8               	btfss	status,2,c
 14999  0072EE  D00F               	goto	l20124
 15000                           
 15001                           ; BSR set to: 1
 15002                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15003  0072F0  0E00               	movlw	0
 15004  0072F2  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15005  0072F4  0E04               	movlw	4
 15006  0072F6  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15007                           
 15008                           ; BSR set to: 1
 15009                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15010  0072F8  0E15               	movlw	21
 15011  0072FA  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15012  0072FC  0E00               	movlw	0
 15013  0072FE  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15014  007300  0E14               	movlw	20
 15015  007302  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15016  007304  0E05               	movlw	5
 15017  007306  EC79  F045         	call	_SetSegmentValueIntermitent
 15018                           
 15019                           ; BSR set to: 1
 15020                           ;inputs_MC50.c: 799:         return ST;
 15021  00730A  0E02               	movlw	2
 15022  00730C  0012               	return	
 15023  00730E                     l20124:
 15024  00730E  0100               	movlb	0	; () banked
 15025  007310  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15026  007312  A4D8               	btfss	status,2,c
 15027  007314  D017               	goto	l20140
 15028                           
 15029                           ; BSR set to: 0
 15030  007316  0101               	movlb	1	; () banked
 15031  007318  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15032  00731A  A4D8               	btfss	status,2,c
 15033  00731C  D013               	goto	l20140
 15034                           
 15035                           ; BSR set to: 1
 15036  00731E  0100               	movlb	0	; () banked
 15037  007320  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15038  007322  A4D8               	btfss	status,2,c
 15039  007324  D00F               	goto	l20140
 15040                           
 15041                           ; BSR set to: 0
 15042                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15043  007326  0E00               	movlw	0
 15044  007328  0101               	movlb	1	; () banked
 15045  00732A  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15046  00732C  0E04               	movlw	4
 15047  00732E  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15048                           
 15049                           ; BSR set to: 1
 15050                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15051  007330  0E0E               	movlw	14
 15052  007332  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15053  007334  0E00               	movlw	0
 15054  007336  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15055  007338  0E14               	movlw	20
 15056  00733A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15057  00733C  0E12               	movlw	18
 15058  00733E  EC79  F045         	call	_SetSegmentValueIntermitent
 15059  007342  D7CC               	goto	l20104
 15060  007344                     l20140:
 15061                           
 15062                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 15063  007344  0E00               	movlw	0
 15064  007346  0012               	return		;funcret
 15065  007348                     __end_of_GetSecurityStateInClosing:
 15066                           	callstack 0
 15067                           
 15068 ;; *************** function _actionZone_Closed *****************
 15069 ;; Defined at:
 15070 ;;		line 327 in file "sm_ControlGate_MC50.c"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;		None
 15073 ;; Auto vars:     Size  Location     Type
 15074 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 15075 ;;  securityOpen    1   31[COMRAM] enum E10397
 15076 ;; Return value:  Size  Location     Type
 15077 ;;                  1    wreg      void 
 15078 ;; Registers used:
 15079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15080 ;; Tracked objects:
 15081 ;;		On entry : 3F/0
 15082 ;;		On exit  : 0/0
 15083 ;;		Unchanged: 0/0
 15084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15089 ;;Total ram usage:        2 bytes
 15090 ;; Hardware stack levels used: 1
 15091 ;; Hardware stack levels required when called: 8
 15092 ;; This function calls:
 15093 ;;		_GetOpenOrder
 15094 ;;		_GetSecurityStateInOpening
 15095 ;;		_InitFullAutoTime
 15096 ;;		_InitWalkAutoTime
 15097 ;;		_OpenFullOrder
 15098 ;;		_OpenWalkOrder
 15099 ;;		_WaitPreFlash
 15100 ;;		_sm_send_event
 15101 ;; This function is called by:
 15102 ;;		_sm_execute_ControlGate
 15103 ;; This function uses a non-reentrant model
 15104 ;;
 15105                           
 15106                           	psect	text42
 15107  0071F8                     __ptext42:
 15108                           	callstack 0
 15109  0071F8                     _actionZone_Closed:
 15110                           	callstack 21
 15111                           
 15112                           ; BSR set to: 0
 15113                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 15114                           
 15115                           ;incstack = 0
 15116  0071F8  0101               	movlb	1	; () banked
 15117  0071FA  05EF               	decf	_main_stateMachine& (0+255),w,b
 15118  0071FC  11F0               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15119  0071FE  B4D8               	btfsc	status,2,c
 15120  007200  0012               	return	
 15121                           
 15122                           ; BSR set to: 1
 15123                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 15124  007202  ECA5  F028         	call	_GetOpenOrder	;wreg free
 15125  007206  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 15126                           
 15127                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 15128  007208  ECA4  F039         	call	_GetSecurityStateInOpening	;wreg free
 15129  00720C  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 15130                           
 15131                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 15132  00720E  0100               	movlb	0	; () banked
 15133  007210  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15134  007212  A4D8               	btfss	status,2,c
 15135  007214  D018               	goto	l21268
 15136                           
 15137                           ; BSR set to: 0
 15138                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 15139  007216  0E03               	movlw	3
 15140  007218  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15141  00721A  A4D8               	btfss	status,2,c
 15142  00721C  0012               	return	
 15143                           
 15144                           ; BSR set to: 0
 15145  00721E  0101               	movlb	1	; () banked
 15146  007220  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 15147  007222  A4D8               	btfss	status,2,c
 15148  007224  0012               	return	
 15149                           
 15150                           ; BSR set to: 1
 15151  007226  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15152  007228  A4D8               	btfss	status,2,c
 15153  00722A  0012               	return	
 15154                           
 15155                           ; BSR set to: 1
 15156                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 15157  00722C  ECD2  F046         	call	_OpenFullOrder	;wreg free
 15158  007230                     l21266:
 15159                           
 15160                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 15161  007230  0EEF               	movlw	low _main_stateMachine
 15162  007232  6E12               	movwf	sm_send_event@psm^0,c
 15163  007234  0E01               	movlw	high _main_stateMachine
 15164  007236  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15165  007238  0E00               	movlw	0
 15166  00723A  6E15               	movwf	(sm_send_event@event+1)^0,c
 15167  00723C  0E11               	movlw	17
 15168  00723E  6E14               	movwf	sm_send_event@event^0,c
 15169  007240  EC01  F041         	call	_sm_send_event	;wreg free
 15170  007244  0012               	return	
 15171  007246                     l21268:
 15172                           
 15173                           ; BSR set to: 0
 15174  007246  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 15175  007248  B4D8               	btfsc	status,2,c
 15176  00724A  D004               	goto	u24630
 15177                           
 15178                           ; BSR set to: 0
 15179  00724C  0E03               	movlw	3
 15180  00724E  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15181  007250  A4D8               	btfss	status,2,c
 15182  007252  D017               	goto	l21288
 15183  007254                     u24630:
 15184                           
 15185                           ; BSR set to: 0
 15186  007254  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15187  007256  A4D8               	btfss	status,2,c
 15188  007258  D014               	goto	l21288
 15189                           
 15190                           ; BSR set to: 0
 15191  00725A  0101               	movlb	1	; () banked
 15192  00725C  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 15193  00725E  A4D8               	btfss	status,2,c
 15194  007260  D010               	goto	l21288
 15195                           
 15196                           ; BSR set to: 1
 15197                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15198  007262  0E02               	movlw	2
 15199  007264  0100               	movlb	0	; () banked
 15200  007266  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15201  007268  A4D8               	btfss	status,2,c
 15202  00726A  D006               	goto	l21282
 15203                           
 15204                           ; BSR set to: 0
 15205                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15206  00726C  0E01               	movlw	1
 15207  00726E  0101               	movlb	1	; () banked
 15208  007270  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15209                           
 15210                           ; BSR set to: 1
 15211                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15212  007272  EC5E  F03F         	call	_WaitPreFlash	;wreg free
 15213                           
 15214                           ;sm_ControlGate_MC50.c: 356:             }
 15215  007276  0012               	return	
 15216  007278                     l21282:
 15217                           
 15218                           ; BSR set to: 0
 15219                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15220  007278  ECD2  F046         	call	_OpenFullOrder	;wreg free
 15221                           
 15222                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15223  00727C  ECC6  F047         	call	_InitFullAutoTime	;wreg free
 15224  007280  D7D7               	goto	l21266
 15225  007282                     l21288:
 15226  007282  0E02               	movlw	2
 15227  007284  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15228  007286  A4D8               	btfss	status,2,c
 15229  007288  0012               	return	
 15230  00728A  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15231  00728C  A4D8               	btfss	status,2,c
 15232  00728E  0012               	return	
 15233  007290  0100               	movlb	0	; () banked
 15234  007292  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15235  007294  B4D8               	btfsc	status,2,c
 15236  007296  0012               	return	
 15237                           
 15238                           ; BSR set to: 0
 15239                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15240  007298  EC96  F03F         	call	_OpenWalkOrder	;wreg free
 15241                           
 15242                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15243  00729C  EC4A  F048         	call	_InitWalkAutoTime	;wreg free
 15244  0072A0  D7C7               	goto	l21266
 15245  0072A2                     __end_of_actionZone_Closed:
 15246                           	callstack 0
 15247                           
 15248 ;; *************** function _WaitPreFlash *****************
 15249 ;; Defined at:
 15250 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15251 ;; Parameters:    Size  Location     Type
 15252 ;;		None
 15253 ;; Auto vars:     Size  Location     Type
 15254 ;;		None
 15255 ;; Return value:  Size  Location     Type
 15256 ;;                  1    wreg      void 
 15257 ;; Registers used:
 15258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15259 ;; Tracked objects:
 15260 ;;		On entry : 3F/1
 15261 ;;		On exit  : 3F/1
 15262 ;;		Unchanged: 0/0
 15263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15268 ;;Total ram usage:        0 bytes
 15269 ;; Hardware stack levels used: 1
 15270 ;; Hardware stack levels required when called: 7
 15271 ;; This function calls:
 15272 ;;		_InitFullAutoTime
 15273 ;;		_OpenFullOrder
 15274 ;;		_sm_send_event
 15275 ;; This function is called by:
 15276 ;;		_sm_execute_ControlGate
 15277 ;;		_actionZone_Closed
 15278 ;; This function uses a non-reentrant model
 15279 ;;
 15280                           
 15281                           	psect	text43
 15282  007EBC                     __ptext43:
 15283                           	callstack 0
 15284  007EBC                     _WaitPreFlash:
 15285                           	callstack 21
 15286                           
 15287                           ; BSR set to: 1
 15288                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15289                           
 15290                           ;incstack = 0
 15291  007EBC  0E02               	movlw	2
 15292  007EBE  0100               	movlb	0	; () banked
 15293  007EC0  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15294  007EC2  A4D8               	btfss	status,2,c
 15295  007EC4  D014               	goto	l20350
 15296                           
 15297                           ; BSR set to: 0
 15298  007EC6  0101               	movlb	1	; () banked
 15299  007EC8  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15300  007ECA  A4D8               	btfss	status,2,c
 15301  007ECC  D010               	goto	l20350
 15302                           
 15303                           ; BSR set to: 1
 15304  007ECE  BFE3               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15305  007ED0  D005               	goto	u23610
 15306  007ED2  51E3               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15307  007ED4  E10C               	bnz	l20350
 15308  007ED6  05E2               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15309  007ED8  B0D8               	btfsc	status,0,c
 15310  007EDA  D009               	goto	l20350
 15311  007EDC                     u23610:
 15312                           
 15313                           ; BSR set to: 1
 15314  007EDC  518E               	movf	_aux_i& (0+255),w,b
 15315  007EDE  A4D8               	btfss	status,2,c
 15316  007EE0  D006               	goto	l20350
 15317                           
 15318                           ; BSR set to: 1
 15319                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15320  007EE2  0E00               	movlw	0
 15321  007EE4  6FE3               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15322  007EE6  0E3C               	movlw	60
 15323  007EE8  6FE2               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15324                           
 15325                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15326  007EEA  0E01               	movlw	1
 15327  007EEC  6F8E               	movwf	_aux_i& (0+255),b
 15328  007EEE                     l20350:
 15329                           
 15330                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15331  007EEE  0101               	movlb	1	; () banked
 15332  007EF0  BFE3               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15333  007EF2  D005               	goto	u23630
 15334  007EF4  51E3               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15335  007EF6  E119               	bnz	l2580
 15336  007EF8  05E2               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15337  007EFA  B0D8               	btfsc	status,0,c
 15338  007EFC  0012               	return	
 15339  007EFE                     u23630:
 15340                           
 15341                           ; BSR set to: 1
 15342  007EFE  058E               	decf	_aux_i& (0+255),w,b
 15343  007F00  A4D8               	btfss	status,2,c
 15344  007F02  0012               	return	
 15345                           
 15346                           ; BSR set to: 1
 15347                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15348  007F04  0E00               	movlw	0
 15349  007F06  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15350                           
 15351                           ; BSR set to: 1
 15352                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15353  007F08  ECD2  F046         	call	_OpenFullOrder	;wreg free
 15354                           
 15355                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15356  007F0C  ECC6  F047         	call	_InitFullAutoTime	;wreg free
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15360  007F10  0EEF               	movlw	low _main_stateMachine
 15361  007F12  6E12               	movwf	sm_send_event@psm^0,c
 15362  007F14  0E01               	movlw	high _main_stateMachine
 15363  007F16  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15364  007F18  0E00               	movlw	0
 15365  007F1A  6E15               	movwf	(sm_send_event@event+1)^0,c
 15366  007F1C  0E11               	movlw	17
 15367  007F1E  6E14               	movwf	sm_send_event@event^0,c
 15368  007F20  EC01  F041         	call	_sm_send_event	;wreg free
 15369                           
 15370                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15371  007F24  0E00               	movlw	0
 15372  007F26  0101               	movlb	1	; () banked
 15373  007F28  6F8E               	movwf	_aux_i& (0+255),b
 15374  007F2A                     l2580:
 15375                           
 15376                           ; BSR set to: 1
 15377  007F2A  0012               	return		;funcret
 15378  007F2C                     __end_of_WaitPreFlash:
 15379                           	callstack 0
 15380                           
 15381 ;; *************** function _OpenFullOrder *****************
 15382 ;; Defined at:
 15383 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15384 ;; Parameters:    Size  Location     Type
 15385 ;;		None
 15386 ;; Auto vars:     Size  Location     Type
 15387 ;;		None
 15388 ;; Return value:  Size  Location     Type
 15389 ;;                  1    wreg      void 
 15390 ;; Registers used:
 15391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15392 ;; Tracked objects:
 15393 ;;		On entry : 3E/1
 15394 ;;		On exit  : 3E/0
 15395 ;;		Unchanged: 0/0
 15396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15401 ;;Total ram usage:        0 bytes
 15402 ;; Hardware stack levels used: 1
 15403 ;; Hardware stack levels required when called: 6
 15404 ;; This function calls:
 15405 ;;		_InitSoftStart
 15406 ;;		_sm_send_event
 15407 ;; This function is called by:
 15408 ;;		_WaitPreFlash
 15409 ;;		_actionZone_Closed
 15410 ;;		_actionZone_Opened
 15411 ;;		_actionZone_Closing
 15412 ;; This function uses a non-reentrant model
 15413 ;;
 15414                           
 15415                           	psect	text44
 15416  008DA4                     __ptext44:
 15417                           	callstack 0
 15418  008DA4                     _OpenFullOrder:
 15419                           	callstack 22
 15420                           
 15421                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15422                           
 15423                           ; BSR set to: 1
 15424                           ;incstack = 0
 15425  008DA4  0E01               	movlw	1
 15426  008DA6  0101               	movlb	1	; () banked
 15427  008DA8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15428                           
 15429                           ; BSR set to: 1
 15430                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15431  008DAA  0EE4               	movlw	low _controlGate_stateMachine
 15432  008DAC  6E12               	movwf	sm_send_event@psm^0,c
 15433  008DAE  0E01               	movlw	high _controlGate_stateMachine
 15434  008DB0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15435  008DB2  0E00               	movlw	0
 15436  008DB4  6E15               	movwf	(sm_send_event@event+1)^0,c
 15437  008DB6  0E0C               	movlw	12
 15438  008DB8  6E14               	movwf	sm_send_event@event^0,c
 15439  008DBA  EC01  F041         	call	_sm_send_event	;wreg free
 15440                           
 15441                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15442  008DBE  0E01               	movlw	1
 15443  008DC0  0101               	movlb	1	; () banked
 15444  008DC2  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15445                           
 15446                           ; BSR set to: 1
 15447                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15448  008DC4  EC2F  F041         	call	_InitSoftStart	;wreg free
 15449  008DC8  0012               	return		;funcret
 15450  008DCA                     __end_of_OpenFullOrder:
 15451                           	callstack 0
 15452                           
 15453 ;; *************** function _InitFullAutoTime *****************
 15454 ;; Defined at:
 15455 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15456 ;; Parameters:    Size  Location     Type
 15457 ;;		None
 15458 ;; Auto vars:     Size  Location     Type
 15459 ;;		None
 15460 ;; Return value:  Size  Location     Type
 15461 ;;                  1    wreg      void 
 15462 ;; Registers used:
 15463 ;;		wreg, status,2, status,0, prodl, prodh
 15464 ;; Tracked objects:
 15465 ;;		On entry : 3E/0
 15466 ;;		On exit  : 3F/0
 15467 ;;		Unchanged: 0/0
 15468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15473 ;;Total ram usage:        0 bytes
 15474 ;; Hardware stack levels used: 1
 15475 ;; Hardware stack levels required when called: 4
 15476 ;; This function calls:
 15477 ;;		Nothing
 15478 ;; This function is called by:
 15479 ;;		_WaitPreFlash
 15480 ;;		_actionZone_Closed
 15481 ;;		_actionZone_Opening
 15482 ;;		_actionZone_Opened
 15483 ;;		_actionZone_Closing
 15484 ;; This function uses a non-reentrant model
 15485 ;;
 15486                           
 15487                           	psect	text45
 15488  008F8C                     __ptext45:
 15489                           	callstack 0
 15490  008F8C                     _InitFullAutoTime:
 15491                           	callstack 24
 15492                           
 15493                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15494                           
 15495                           ;incstack = 0
 15496  008F8C  0100               	movlb	0	; () banked
 15497  008F8E  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15498  008F90  A4D8               	btfss	status,2,c
 15499  008F92  0012               	return	
 15500                           
 15501                           ; BSR set to: 0
 15502                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15503  008F94  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15504  008F96  0D14               	mullw	20
 15505  008F98  CFF3 F1AE          	movff	prodl,_ts_system+18	;volatile
 15506  008F9C  CFF4 F1AF          	movff	prodh,_ts_system+19	;volatile
 15507                           
 15508                           ; BSR set to: 0
 15509                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15510  008FA0  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15511                           
 15512                           ; BSR set to: 0
 15513  008FA4  0012               	return		;funcret
 15514  008FA6                     __end_of_InitFullAutoTime:
 15515                           	callstack 0
 15516                           
 15517 ;; *************** function _OpenWalkOrder *****************
 15518 ;; Defined at:
 15519 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15520 ;; Parameters:    Size  Location     Type
 15521 ;;		None
 15522 ;; Auto vars:     Size  Location     Type
 15523 ;;  diffTime        2   25[COMRAM] int 
 15524 ;; Return value:  Size  Location     Type
 15525 ;;                  1    wreg      void 
 15526 ;; Registers used:
 15527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15528 ;; Tracked objects:
 15529 ;;		On entry : 3E/1
 15530 ;;		On exit  : 3E/0
 15531 ;;		Unchanged: 0/0
 15532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15536 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15537 ;;Total ram usage:        4 bytes
 15538 ;; Hardware stack levels used: 1
 15539 ;; Hardware stack levels required when called: 6
 15540 ;; This function calls:
 15541 ;;		_InitSoftStart
 15542 ;;		_sm_send_event
 15543 ;; This function is called by:
 15544 ;;		_actionZone_Closed
 15545 ;;		_actionZone_Opened
 15546 ;;		_actionZone_Closing
 15547 ;; This function uses a non-reentrant model
 15548 ;;
 15549                           
 15550                           	psect	text46
 15551  007F2C                     __ptext46:
 15552                           	callstack 0
 15553  007F2C                     _OpenWalkOrder:
 15554                           	callstack 22
 15555                           
 15556                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15557                           
 15558                           ; BSR set to: 0
 15559                           ;incstack = 0
 15560  007F2C  0100               	movlb	0	; () banked
 15561  007F2E  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15562  007F30  0D14               	mullw	20
 15563  007F32  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15564  007F36  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15565  007F3A  0101               	movlb	1	; () banked
 15566  007F3C  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15567  007F3E  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15568  007F40  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15569  007F42  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15570  007F44  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15571  007F46  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15572                           
 15573                           ; BSR set to: 1
 15574                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15575  007F48  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15576  007F4A  D022               	goto	l20388
 15577  007F4C  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15578  007F4E  E103               	bnz	u23650
 15579  007F50  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15580  007F52  A0D8               	btfss	status,0,c
 15581  007F54  D01D               	goto	l20388
 15582  007F56                     u23650:
 15583                           
 15584                           ; BSR set to: 1
 15585                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15586  007F56  0EE4               	movlw	low _controlGate_stateMachine
 15587  007F58  6E12               	movwf	sm_send_event@psm^0,c
 15588  007F5A  0E01               	movlw	high _controlGate_stateMachine
 15589  007F5C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15590  007F5E  0E00               	movlw	0
 15591  007F60  6E15               	movwf	(sm_send_event@event+1)^0,c
 15592  007F62  0E0C               	movlw	12
 15593  007F64  6E14               	movwf	sm_send_event@event^0,c
 15594  007F66  EC01  F041         	call	_sm_send_event	;wreg free
 15595                           
 15596                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15597  007F6A  0101               	movlb	1	; () banked
 15598  007F6C  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15599  007F6E  A4D8               	btfss	status,2,c
 15600  007F70  D005               	goto	l20382
 15601                           
 15602                           ; BSR set to: 1
 15603                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15604  007F72  C01A  F1AC         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15605  007F76  C01B  F1AD         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15606                           
 15607                           ;sm_ControlGate_MC50.c: 79:         }
 15608  007F7A  D006               	goto	l20384
 15609  007F7C                     l20382:
 15610                           
 15611                           ; BSR set to: 1
 15612                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15613  007F7C  0E14               	movlw	20
 15614  007F7E  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15615  007F80  6FAC               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15616  007F82  0E00               	movlw	0
 15617  007F84  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15618  007F86  6FAD               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15619  007F88                     l20384:
 15620                           
 15621                           ; BSR set to: 1
 15622                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15623  007F88  0E02               	movlw	2
 15624  007F8A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15625                           
 15626                           ; BSR set to: 1
 15627                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15628  007F8C  0E01               	movlw	1
 15629  007F8E  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15630  007F90                     l20388:
 15631                           
 15632                           ; BSR set to: 1
 15633                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15634  007F90  0E02               	movlw	2
 15635  007F92  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15636                           
 15637                           ; BSR set to: 1
 15638                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15639  007F94  EC2F  F041         	call	_InitSoftStart	;wreg free
 15640  007F98  0012               	return		;funcret
 15641  007F9A                     __end_of_OpenWalkOrder:
 15642                           	callstack 0
 15643                           
 15644 ;; *************** function _sm_send_event *****************
 15645 ;; Defined at:
 15646 ;;		line 34 in file "sm_common_MC50.c"
 15647 ;; Parameters:    Size  Location     Type
 15648 ;;  psm             2   17[COMRAM] PTR struct .
 15649 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15650 ;;  event           2   19[COMRAM] int 
 15651 ;; Auto vars:     Size  Location     Type
 15652 ;;		None
 15653 ;; Return value:  Size  Location     Type
 15654 ;;                  1    wreg      void 
 15655 ;; Registers used:
 15656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15657 ;; Tracked objects:
 15658 ;;		On entry : 0/0
 15659 ;;		On exit  : 0/0
 15660 ;;		Unchanged: 0/0
 15661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15665 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15666 ;;Total ram usage:        6 bytes
 15667 ;; Hardware stack levels used: 1
 15668 ;; Hardware stack levels required when called: 5
 15669 ;; This function calls:
 15670 ;;		_sm_get_current_state
 15671 ;; This function is called by:
 15672 ;;		_OpenFullOrder
 15673 ;;		_WaitPreFlash
 15674 ;;		_CloseOrder
 15675 ;;		_OpenWalkOrder
 15676 ;;		_StopOrder
 15677 ;;		_sm_execute_ControlGate
 15678 ;;		_actionZone_Closed
 15679 ;;		_actionZone_Opening
 15680 ;;		_actionZone_Closing
 15681 ;;		_sm_execute_ControlLearning
 15682 ;;		_sm_execute_main
 15683 ;;		_sm_execute_menuConfiguration
 15684 ;;		_setValueToEdit
 15685 ;;		_controlSelectRemote
 15686 ;;		_controlSaveRemote
 15687 ;; This function uses a non-reentrant model
 15688 ;;
 15689                           
 15690                           	psect	text47
 15691  008202                     __ptext47:
 15692                           	callstack 0
 15693  008202                     _sm_send_event:
 15694                           	callstack 24
 15695                           
 15696                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15697                           
 15698                           ;incstack = 0
 15699  008202  EE20 F007          	lfsr	2,7
 15700  008206  5012               	movf	sm_send_event@psm^0,w,c
 15701  008208  26D9               	addwf	fsr2l,f,c
 15702  00820A  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15703  00820C  22DA               	addwfc	fsr2h,f,c
 15704  00820E  50DE               	movf	postinc2,w,c
 15705  008210  10DE               	iorwf	postinc2,w,c
 15706  008212  B4D8               	btfsc	status,2,c
 15707  008214  D019               	goto	u22300
 15708  008216  EE20 F007          	lfsr	2,7
 15709  00821A  5012               	movf	sm_send_event@psm^0,w,c
 15710  00821C  26D9               	addwf	fsr2l,f,c
 15711  00821E  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15712  008220  22DA               	addwfc	fsr2h,f,c
 15713  008222  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15714  008226  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15715  00822A  EC68  F048         	call	_sm_get_current_state	;wreg free
 15716  00822E  EE20 F009          	lfsr	2,9
 15717  008232  5012               	movf	sm_send_event@psm^0,w,c
 15718  008234  26D9               	addwf	fsr2l,f,c
 15719  008236  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15720  008238  22DA               	addwfc	fsr2h,f,c
 15721  00823A  50DE               	movf	postinc2,w,c
 15722  00823C  1810               	xorwf	?_sm_get_current_state^0,w,c
 15723  00823E  E10E               	bnz	l3500
 15724  008240  50DE               	movf	postinc2,w,c
 15725  008242  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15726  008244  A4D8               	btfss	status,2,c
 15727  008246  0012               	return	
 15728  008248                     u22300:
 15729                           
 15730                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15731  008248  EE20 F004          	lfsr	2,4
 15732  00824C  5012               	movf	sm_send_event@psm^0,w,c
 15733  00824E  26D9               	addwf	fsr2l,f,c
 15734  008250  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15735  008252  22DA               	addwfc	fsr2h,f,c
 15736  008254  C014  FFDE         	movff	sm_send_event@event,postinc2
 15737  008258  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15738  00825C                     l3500:
 15739  00825C  0012               	return		;funcret
 15740  00825E                     __end_of_sm_send_event:
 15741                           	callstack 0
 15742                           
 15743 ;; *************** function _sm_get_current_state *****************
 15744 ;; Defined at:
 15745 ;;		line 30 in file "sm_common_MC50.c"
 15746 ;; Parameters:    Size  Location     Type
 15747 ;;  psm             2   15[COMRAM] PTR struct .
 15748 ;;		 -> NULL(0), 
 15749 ;; Auto vars:     Size  Location     Type
 15750 ;;		None
 15751 ;; Return value:  Size  Location     Type
 15752 ;;                  2   15[COMRAM] int 
 15753 ;; Registers used:
 15754 ;;		fsr2l, fsr2h
 15755 ;; Tracked objects:
 15756 ;;		On entry : 0/0
 15757 ;;		On exit  : 0/0
 15758 ;;		Unchanged: 0/0
 15759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15763 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15764 ;;Total ram usage:        2 bytes
 15765 ;; Hardware stack levels used: 1
 15766 ;; Hardware stack levels required when called: 4
 15767 ;; This function calls:
 15768 ;;		Nothing
 15769 ;; This function is called by:
 15770 ;;		_sm_send_event
 15771 ;; This function uses a non-reentrant model
 15772 ;;
 15773                           
 15774                           	psect	text48
 15775  0090D0                     __ptext48:
 15776                           	callstack 0
 15777  0090D0                     _sm_get_current_state:
 15778                           	callstack 24
 15779                           
 15780                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15781                           
 15782                           ;incstack = 0
 15783  0090D0  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15784  0090D4  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15785  0090D8  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15786  0090DC  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15787  0090E0  0012               	return		;funcret
 15788  0090E2                     __end_of_sm_get_current_state:
 15789                           	callstack 0
 15790                           
 15791 ;; *************** function _InitSoftStart *****************
 15792 ;; Defined at:
 15793 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15794 ;; Parameters:    Size  Location     Type
 15795 ;;		None
 15796 ;; Auto vars:     Size  Location     Type
 15797 ;;		None
 15798 ;; Return value:  Size  Location     Type
 15799 ;;                  1    wreg      void 
 15800 ;; Registers used:
 15801 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15802 ;; Tracked objects:
 15803 ;;		On entry : 3F/1
 15804 ;;		On exit  : 3E/0
 15805 ;;		Unchanged: 0/0
 15806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15811 ;;Total ram usage:        1 bytes
 15812 ;; Hardware stack levels used: 1
 15813 ;; Hardware stack levels required when called: 5
 15814 ;; This function calls:
 15815 ;;		_GetMotorPower
 15816 ;; This function is called by:
 15817 ;;		_OpenFullOrder
 15818 ;;		_CloseOrder
 15819 ;;		_OpenWalkOrder
 15820 ;; This function uses a non-reentrant model
 15821 ;;
 15822                           
 15823                           	psect	text49
 15824  00825E                     __ptext49:
 15825                           	callstack 0
 15826  00825E                     _InitSoftStart:
 15827                           	callstack 22
 15828                           
 15829                           ; BSR set to: 1
 15830                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15831                           
 15832                           ;incstack = 0
 15833  00825E  0100               	movlb	0	; () banked
 15834  008260  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15835  008262  B4D8               	btfsc	status,2,c
 15836  008264  0012               	return	
 15837                           
 15838                           ; BSR set to: 0
 15839  008266  0101               	movlb	1	; () banked
 15840  008268  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15841  00826A  A4D8               	btfss	status,2,c
 15842  00826C  0012               	return	
 15843                           
 15844                           ; BSR set to: 1
 15845                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15846  00826E  0E00               	movlw	0
 15847  008270  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15848  008272  0E00               	movlw	0
 15849  008274  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15850                           
 15851                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15852  008276  0E00               	movlw	0
 15853  008278  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15854  00827A  0E00               	movlw	0
 15855  00827C  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15856                           
 15857                           ; BSR set to: 1
 15858                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15859  00827E  EC81  F037         	call	_GetMotorPower	;wreg free
 15860  008282  6E14               	movwf	??_InitSoftStart^0,c
 15861  008284  5014               	movf	??_InitSoftStart^0,w,c
 15862  008286  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15863  008288  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15864                           
 15865                           ; BSR set to: 1
 15866                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15867  00828A  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15868  00828C  D00A               	goto	l19496
 15869  00828E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15870  008290  E104               	bnz	u22330
 15871  008292  0E52               	movlw	82
 15872  008294  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15873  008296  A0D8               	btfss	status,0,c
 15874  008298  D004               	goto	l19496
 15875  00829A                     u22330:
 15876                           
 15877                           ; BSR set to: 1
 15878                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15879  00829A  0E00               	movlw	0
 15880  00829C  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15881  00829E  0E51               	movlw	81
 15882  0082A0  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15883  0082A2                     l19496:
 15884                           
 15885                           ; BSR set to: 1
 15886                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15887  0082A2  0E01               	movlw	1
 15888  0082A4  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15889  0082A6  6FB2               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15890  0082A8  0E00               	movlw	0
 15891  0082AA  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15892  0082AC  6FB3               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15893                           
 15894                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15895  0082AE  0100               	movlb	0	; () banked
 15896  0082B0  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15897  0082B2  080A               	sublw	10
 15898  0082B4  0101               	movlb	1	; () banked
 15899  0082B6  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15900  0082B8  0012               	return		;funcret
 15901  0082BA                     __end_of_InitSoftStart:
 15902                           	callstack 0
 15903                           
 15904 ;; *************** function _InitWalkAutoTime *****************
 15905 ;; Defined at:
 15906 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15907 ;; Parameters:    Size  Location     Type
 15908 ;;		None
 15909 ;; Auto vars:     Size  Location     Type
 15910 ;;		None
 15911 ;; Return value:  Size  Location     Type
 15912 ;;                  1    wreg      void 
 15913 ;; Registers used:
 15914 ;;		wreg, status,2, status,0, prodl, prodh
 15915 ;; Tracked objects:
 15916 ;;		On entry : 0/1
 15917 ;;		On exit  : 3F/0
 15918 ;;		Unchanged: 0/0
 15919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15924 ;;Total ram usage:        0 bytes
 15925 ;; Hardware stack levels used: 1
 15926 ;; Hardware stack levels required when called: 4
 15927 ;; This function calls:
 15928 ;;		Nothing
 15929 ;; This function is called by:
 15930 ;;		_actionZone_Closed
 15931 ;;		_actionZone_Opening
 15932 ;;		_actionZone_Opened
 15933 ;;		_actionZone_Closing
 15934 ;; This function uses a non-reentrant model
 15935 ;;
 15936                           
 15937                           	psect	text50
 15938  009094                     __ptext50:
 15939                           	callstack 0
 15940  009094                     _InitWalkAutoTime:
 15941                           	callstack 24
 15942                           
 15943                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 15944                           
 15945                           ;incstack = 0
 15946  009094  0100               	movlb	0	; () banked
 15947  009096  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 15948  009098  0D14               	mullw	20
 15949  00909A  CFF3 F1AE          	movff	prodl,_ts_system+18	;volatile
 15950  00909E  CFF4 F1AF          	movff	prodh,_ts_system+19	;volatile
 15951                           
 15952                           ; BSR set to: 0
 15953                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 15954  0090A2  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 15955                           
 15956                           ; BSR set to: 0
 15957  0090A6  0012               	return		;funcret
 15958  0090A8                     __end_of_InitWalkAutoTime:
 15959                           	callstack 0
 15960                           
 15961 ;; *************** function _GetSecurityStateInOpening *****************
 15962 ;; Defined at:
 15963 ;;		line 738 in file "inputs_MC50.c"
 15964 ;; Parameters:    Size  Location     Type
 15965 ;;		None
 15966 ;; Auto vars:     Size  Location     Type
 15967 ;;		None
 15968 ;; Return value:  Size  Location     Type
 15969 ;;                  1    wreg      enum E10564
 15970 ;; Registers used:
 15971 ;;		wreg, status,2, status,0, cstack
 15972 ;; Tracked objects:
 15973 ;;		On entry : 0/0
 15974 ;;		On exit  : 3E/0
 15975 ;;		Unchanged: 0/0
 15976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15981 ;;Total ram usage:        0 bytes
 15982 ;; Hardware stack levels used: 1
 15983 ;; Hardware stack levels required when called: 5
 15984 ;; This function calls:
 15985 ;;		_SetSegmentValueIntermitent
 15986 ;; This function is called by:
 15987 ;;		_actionZone_Closed
 15988 ;;		_actionZone_Opening
 15989 ;; This function uses a non-reentrant model
 15990 ;;
 15991                           
 15992                           	psect	text51
 15993  007348                     __ptext51:
 15994                           	callstack 0
 15995  007348                     _GetSecurityStateInOpening:
 15996                           	callstack 23
 15997                           
 15998                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 15999                           
 16000                           ; BSR set to: 0
 16001                           ;incstack = 0
 16002  007348  0100               	movlb	0	; () banked
 16003  00734A  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 16004  00734C  A4D8               	btfss	status,2,c
 16005  00734E  D01B               	goto	l20058
 16006                           
 16007                           ; BSR set to: 0
 16008  007350  0101               	movlb	1	; () banked
 16009  007352  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 16010  007354  A4D8               	btfss	status,2,c
 16011  007356  D017               	goto	l20058
 16012                           
 16013                           ; BSR set to: 1
 16014  007358  0100               	movlb	0	; () banked
 16015  00735A  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 16016  00735C  A4D8               	btfss	status,2,c
 16017  00735E  D013               	goto	l20058
 16018                           
 16019                           ; BSR set to: 0
 16020  007360  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 16021  007362  A4D8               	btfss	status,2,c
 16022  007364  D010               	goto	l20058
 16023                           
 16024                           ; BSR set to: 0
 16025                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16026  007366  0E00               	movlw	0
 16027  007368  0101               	movlb	1	; () banked
 16028  00736A  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16029  00736C  0E04               	movlw	4
 16030  00736E  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16031                           
 16032                           ; BSR set to: 1
 16033                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 16034  007370  0E0A               	movlw	10
 16035  007372  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16036  007374  0E00               	movlw	0
 16037  007376  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16038  007378  0E14               	movlw	20
 16039  00737A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16040  00737C  0E12               	movlw	18
 16041  00737E  EC79  F045         	call	_SetSegmentValueIntermitent
 16042  007382                     l20052:
 16043                           
 16044                           ; BSR set to: 1
 16045                           ;inputs_MC50.c: 752:         return YES;
 16046  007382  0E01               	movlw	1
 16047  007384  0012               	return	
 16048  007386                     l20058:
 16049  007386  0100               	movlb	0	; () banked
 16050  007388  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 16051  00738A  A4D8               	btfss	status,2,c
 16052  00738C  D013               	goto	l20072
 16053                           
 16054                           ; BSR set to: 0
 16055  00738E  0101               	movlb	1	; () banked
 16056  007390  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 16057  007392  A4D8               	btfss	status,2,c
 16058  007394  D00F               	goto	l20072
 16059                           
 16060                           ; BSR set to: 1
 16061                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16062  007396  0E00               	movlw	0
 16063  007398  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16064  00739A  0E04               	movlw	4
 16065  00739C  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16066                           
 16067                           ; BSR set to: 1
 16068                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 16069  00739E  0E15               	movlw	21
 16070  0073A0  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16071  0073A2  0E00               	movlw	0
 16072  0073A4  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16073  0073A6  0E14               	movlw	20
 16074  0073A8  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16075  0073AA  0E05               	movlw	5
 16076  0073AC  EC79  F045         	call	_SetSegmentValueIntermitent
 16077                           
 16078                           ; BSR set to: 1
 16079                           ;inputs_MC50.c: 760:         return ST;
 16080  0073B0  0E02               	movlw	2
 16081  0073B2  0012               	return	
 16082  0073B4                     l20072:
 16083  0073B4  0100               	movlb	0	; () banked
 16084  0073B6  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 16085  0073B8  A4D8               	btfss	status,2,c
 16086  0073BA  D017               	goto	l20088
 16087                           
 16088                           ; BSR set to: 0
 16089  0073BC  0101               	movlb	1	; () banked
 16090  0073BE  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 16091  0073C0  A4D8               	btfss	status,2,c
 16092  0073C2  D013               	goto	l20088
 16093                           
 16094                           ; BSR set to: 1
 16095  0073C4  0100               	movlb	0	; () banked
 16096  0073C6  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 16097  0073C8  A4D8               	btfss	status,2,c
 16098  0073CA  D00F               	goto	l20088
 16099                           
 16100                           ; BSR set to: 0
 16101                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16102  0073CC  0E00               	movlw	0
 16103  0073CE  0101               	movlb	1	; () banked
 16104  0073D0  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16105  0073D2  0E04               	movlw	4
 16106  0073D4  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16107                           
 16108                           ; BSR set to: 1
 16109                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 16110  0073D6  0E0E               	movlw	14
 16111  0073D8  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16112  0073DA  0E00               	movlw	0
 16113  0073DC  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16114  0073DE  0E14               	movlw	20
 16115  0073E0  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16116  0073E2  0E12               	movlw	18
 16117  0073E4  EC79  F045         	call	_SetSegmentValueIntermitent
 16118  0073E8  D7CC               	goto	l20052
 16119  0073EA                     l20088:
 16120                           
 16121                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 16122  0073EA  0E00               	movlw	0
 16123  0073EC  0012               	return		;funcret
 16124  0073EE                     __end_of_GetSecurityStateInOpening:
 16125                           	callstack 0
 16126                           
 16127 ;; *************** function _SetSegmentValueIntermitent *****************
 16128 ;; Defined at:
 16129 ;;		line 201 in file "outputs_MC50.c"
 16130 ;; Parameters:    Size  Location     Type
 16131 ;;  d1              1    wreg     unsigned char 
 16132 ;;  d2              1   15[COMRAM] unsigned char 
 16133 ;;  time            2   16[COMRAM] int 
 16134 ;; Auto vars:     Size  Location     Type
 16135 ;;  d1              1   18[COMRAM] unsigned char 
 16136 ;; Return value:  Size  Location     Type
 16137 ;;                  1    wreg      void 
 16138 ;; Registers used:
 16139 ;;		wreg, status,2, status,0
 16140 ;; Tracked objects:
 16141 ;;		On entry : 3E/0
 16142 ;;		On exit  : 3F/1
 16143 ;;		Unchanged: 0/0
 16144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16145 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16146 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16148 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16149 ;;Total ram usage:        4 bytes
 16150 ;; Hardware stack levels used: 1
 16151 ;; Hardware stack levels required when called: 4
 16152 ;; This function calls:
 16153 ;;		Nothing
 16154 ;; This function is called by:
 16155 ;;		_GetSecurityStateInOpening
 16156 ;;		_GetSecurityStateInClosing
 16157 ;;		_sm_execute_ControlGate
 16158 ;;		_actionZone_Opening
 16159 ;;		_actionZone_Closing
 16160 ;; This function uses a non-reentrant model
 16161 ;;
 16162                           
 16163                           	psect	text52
 16164  008AF2                     __ptext52:
 16165                           	callstack 0
 16166  008AF2                     _SetSegmentValueIntermitent:
 16167                           	callstack 24
 16168                           
 16169                           ;incstack = 0
 16170                           ;SetSegmentValueIntermitent@d1 stored from wreg
 16171  008AF2  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 16172                           
 16173                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 16174  008AF4  0101               	movlb	1	; () banked
 16175  008AF6  05EF               	decf	_main_stateMachine& (0+255),w,b
 16176  008AF8  11F0               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 16177  008AFA  B4D8               	btfsc	status,2,c
 16178  008AFC  0012               	return	
 16179                           
 16180                           ; BSR set to: 1
 16181  008AFE  51AA               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 16182  008B00  11AB               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 16183  008B02  A4D8               	btfss	status,2,c
 16184  008B04  0012               	return	
 16185                           
 16186                           ; BSR set to: 1
 16187  008B06  0E14               	movlw	20
 16188  008B08  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16189  008B0A  0012               	return	
 16190                           
 16191                           ; BSR set to: 1
 16192                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 16193  008B0C  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 16194                           
 16195                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 16196  008B10  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16197                           
 16198                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16199  008B14  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16200  008B18  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16201                           
 16202                           ; BSR set to: 1
 16203  008B1C  0012               	return		;funcret
 16204  008B1E                     __end_of_SetSegmentValueIntermitent:
 16205                           	callstack 0
 16206                           
 16207 ;; *************** function _GetOpenOrder *****************
 16208 ;; Defined at:
 16209 ;;		line 330 in file "inputs_MC50.c"
 16210 ;; Parameters:    Size  Location     Type
 16211 ;;		None
 16212 ;; Auto vars:     Size  Location     Type
 16213 ;;		None
 16214 ;; Return value:  Size  Location     Type
 16215 ;;                  1    wreg      enum E10539
 16216 ;; Registers used:
 16217 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16218 ;; Tracked objects:
 16219 ;;		On entry : 3E/1
 16220 ;;		On exit  : 0/0
 16221 ;;		Unchanged: 0/0
 16222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16227 ;;Total ram usage:        0 bytes
 16228 ;; Hardware stack levels used: 1
 16229 ;; Hardware stack levels required when called: 5
 16230 ;; This function calls:
 16231 ;;		_SetSegmentValueIntermitentMain
 16232 ;;		___lbdiv
 16233 ;; This function is called by:
 16234 ;;		_sm_execute_ControlGate
 16235 ;;		_actionZone_Closed
 16236 ;;		_actionZone_Opening
 16237 ;;		_actionZone_Opened
 16238 ;;		_actionZone_Closing
 16239 ;;		_sm_execute_ControlLearning
 16240 ;; This function uses a non-reentrant model
 16241 ;;
 16242                           
 16243                           	psect	text53
 16244  00514A                     __ptext53:
 16245                           	callstack 0
 16246  00514A                     _GetOpenOrder:
 16247                           	callstack 23
 16248                           
 16249                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16250                           
 16251                           ; BSR set to: 1
 16252                           ;incstack = 0
 16253  00514A  0101               	movlb	1	; () banked
 16254  00514C  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16255  00514E  A4D8               	btfss	status,2,c
 16256  005150  D0C0               	goto	l20028
 16257                           
 16258                           ; BSR set to: 1
 16259                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16260  005152  BFC7               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16261  005154  D019               	goto	l19920
 16262  005156  51C7               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16263  005158  E103               	bnz	u22860
 16264  00515A  05C6               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16265  00515C  A0D8               	btfss	status,0,c
 16266  00515E  D014               	goto	l19920
 16267  005160                     u22860:
 16268                           
 16269                           ; BSR set to: 1
 16270                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16271  005160  0E01               	movlw	1
 16272  005162  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16273  005164  0E00               	movlw	0
 16274  005166  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16275  005168  0E14               	movlw	20
 16276  00516A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16277  00516C  0E12               	movlw	18
 16278  00516E  EC54  F048         	call	_SetSegmentValueIntermitentMain
 16279                           
 16280                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16281  005172  0E00               	movlw	0
 16282  005174  0101               	movlb	1	; () banked
 16283  005176  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16284  005178  0E0A               	movlw	10
 16285  00517A  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16286                           
 16287                           ; BSR set to: 1
 16288                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16289  00517C  0E01               	movlw	1
 16290  00517E  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16291                           
 16292                           ; BSR set to: 1
 16293                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16294  005180  0E01               	movlw	1
 16295  005182  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16296  005184                     l19914:
 16297                           
 16298                           ;inputs_MC50.c: 341:             return NoCMD;
 16299  005184  0E00               	movlw	0
 16300  005186  0012               	return	
 16301  005188                     l19920:
 16302                           
 16303                           ; BSR set to: 1
 16304  005188  0100               	movlb	0	; () banked
 16305  00518A  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16306  00518C  B4D8               	btfsc	status,2,c
 16307  00518E  D02F               	goto	l19954
 16308                           
 16309                           ; BSR set to: 0
 16310                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16311  005190  0E35               	movlw	53
 16312  005192  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16313  005194  A4D8               	btfss	status,2,c
 16314  005196  D017               	goto	l19938
 16315                           
 16316                           ; BSR set to: 0
 16317                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16318  005198  0E00               	movlw	0
 16319  00519A  0101               	movlb	1	; () banked
 16320  00519C  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16321  00519E  0E0A               	movlw	10
 16322  0051A0  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16323                           
 16324                           ; BSR set to: 1
 16325                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16326  0051A2  0E00               	movlw	0
 16327  0051A4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16328  0051A6  0E00               	movlw	0
 16329  0051A8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16330  0051AA  0E04               	movlw	4
 16331  0051AC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16332  0051AE  0E12               	movlw	18
 16333  0051B0  EC54  F048         	call	_SetSegmentValueIntermitentMain
 16334                           
 16335                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16336  0051B4  0E02               	movlw	2
 16337  0051B6  0100               	movlb	0	; () banked
 16338  0051B8  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16339  0051BA  A4D8               	btfss	status,2,c
 16340  0051BC  D002               	goto	l19932
 16341  0051BE                     u22890:
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16345  0051BE  0E01               	movlw	1
 16346  0051C0  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16347  0051C2                     l19932:
 16348                           
 16349                           ; BSR set to: 0
 16350                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16351  0051C2  0E03               	movlw	3
 16352  0051C4  0012               	return	
 16353  0051C6                     l19938:
 16354                           
 16355                           ; BSR set to: 0
 16356  0051C6  0E33               	movlw	51
 16357  0051C8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16358  0051CA  A4D8               	btfss	status,2,c
 16359  0051CC  D7DB               	goto	l19914
 16360                           
 16361                           ; BSR set to: 0
 16362                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16363  0051CE  0E00               	movlw	0
 16364  0051D0  0101               	movlb	1	; () banked
 16365  0051D2  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16366  0051D4  0E0A               	movlw	10
 16367  0051D6  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16368                           
 16369                           ; BSR set to: 1
 16370                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16371  0051D8  0E05               	movlw	5
 16372  0051DA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16373  0051DC  0E00               	movlw	0
 16374  0051DE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16375  0051E0  0E04               	movlw	4
 16376  0051E2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16377  0051E4  0E12               	movlw	18
 16378  0051E6  EC54  F048         	call	_SetSegmentValueIntermitentMain
 16379  0051EA                     l19944:
 16380                           
 16381                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16382  0051EA  0E04               	movlw	4
 16383  0051EC  0012               	return	
 16384  0051EE                     l19954:
 16385                           
 16386                           ; BSR set to: 0
 16387  0051EE  0E35               	movlw	53
 16388  0051F0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16389  0051F2  A4D8               	btfss	status,2,c
 16390  0051F4  D016               	goto	l19976
 16391                           
 16392                           ; BSR set to: 0
 16393                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16394  0051F6  0E00               	movlw	0
 16395  0051F8  0101               	movlb	1	; () banked
 16396  0051FA  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16397  0051FC  0E28               	movlw	40
 16398  0051FE  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16399                           
 16400                           ; BSR set to: 1
 16401                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16402  005200  0E00               	movlw	0
 16403  005202  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16404  005204  0E00               	movlw	0
 16405  005206  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16406  005208  0E04               	movlw	4
 16407  00520A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16408  00520C  0E12               	movlw	18
 16409  00520E  EC54  F048         	call	_SetSegmentValueIntermitentMain
 16410                           
 16411                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16412  005212  0100               	movlb	0	; () banked
 16413  005214  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16414  005216  B4D8               	btfsc	status,2,c
 16415  005218  D7D2               	goto	u22890
 16416  00521A                     l19970:
 16417                           
 16418                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16419  00521A  0E01               	movlw	1
 16420  00521C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16421                           
 16422                           ;inputs_MC50.c: 382:                 return TypeFull;
 16423  00521E  0E01               	movlw	1
 16424  005220  0012               	return	
 16425  005222                     l19976:
 16426                           
 16427                           ; BSR set to: 0
 16428  005222  0E33               	movlw	51
 16429  005224  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16430  005226  A4D8               	btfss	status,2,c
 16431  005228  D019               	goto	l19998
 16432                           
 16433                           ; BSR set to: 0
 16434                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16435  00522A  0E00               	movlw	0
 16436  00522C  0101               	movlb	1	; () banked
 16437  00522E  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16438  005230  0E28               	movlw	40
 16439  005232  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16440                           
 16441                           ; BSR set to: 1
 16442                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16443  005234  0E05               	movlw	5
 16444  005236  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16445  005238  0E00               	movlw	0
 16446  00523A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16447  00523C  0E04               	movlw	4
 16448  00523E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16449  005240  0E12               	movlw	18
 16450  005242  EC54  F048         	call	_SetSegmentValueIntermitentMain
 16451                           
 16452                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16453  005246  0100               	movlb	0	; () banked
 16454  005248  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16455  00524A  A4D8               	btfss	status,2,c
 16456  00524C  D003               	goto	l19992
 16457                           
 16458                           ; BSR set to: 0
 16459                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16460  00524E  0E01               	movlw	1
 16461  005250  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16462  005252  D7CB               	goto	l19944
 16463  005254                     l19992:
 16464                           
 16465                           ; BSR set to: 0
 16466                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16467  005254  0E01               	movlw	1
 16468  005256  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16469                           
 16470                           ; BSR set to: 0
 16471                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16472  005258  0E02               	movlw	2
 16473  00525A  0012               	return	
 16474  00525C                     l19998:
 16475                           
 16476                           ; BSR set to: 0
 16477  00525C  0E36               	movlw	54
 16478  00525E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16479  005260  A4D8               	btfss	status,2,c
 16480  005262  D00F               	goto	l20012
 16481                           
 16482                           ; BSR set to: 0
 16483                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16484  005264  0E00               	movlw	0
 16485  005266  0101               	movlb	1	; () banked
 16486  005268  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16487  00526A  0E28               	movlw	40
 16488  00526C  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16489                           
 16490                           ; BSR set to: 1
 16491                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16492  00526E  0E13               	movlw	19
 16493  005270  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16494  005272  0E00               	movlw	0
 16495  005274  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16496  005276  0E04               	movlw	4
 16497  005278  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16498  00527A  0E10               	movlw	16
 16499  00527C  EC54  F048         	call	_SetSegmentValueIntermitentMain
 16500  005280  D7CC               	goto	l19970
 16501  005282                     l20012:
 16502                           
 16503                           ; BSR set to: 0
 16504                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16505  005282  503B               	movf	_rfCMD^0,w,c	;volatile
 16506  005284  B4D8               	btfsc	status,2,c
 16507  005286  D023               	goto	l20024
 16508                           
 16509                           ; BSR set to: 0
 16510  005288  0E06               	movlw	6
 16511  00528A  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16512  00528C  B4D8               	btfsc	status,2,c
 16513  00528E  D01F               	goto	l20024
 16514                           
 16515                           ; BSR set to: 0
 16516  005290  0E05               	movlw	5
 16517  005292  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16518  005294  B4D8               	btfsc	status,2,c
 16519  005296  D01B               	goto	l20024
 16520                           
 16521                           ; BSR set to: 0
 16522                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16523  005298  0E0A               	movlw	10
 16524  00529A  6E10               	movwf	___lbdiv@divisor^0,c
 16525  00529C  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16526  00529E  ECC5  F044         	call	___lbdiv
 16527  0052A2  0DF6               	mullw	246
 16528  0052A4  50F3               	movf	243,w,c
 16529  0052A6  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16530  0052A8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16531  0052AA  0E00               	movlw	0
 16532  0052AC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16533  0052AE  0E04               	movlw	4
 16534  0052B0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16535  0052B2  0E0A               	movlw	10
 16536  0052B4  6E10               	movwf	___lbdiv@divisor^0,c
 16537  0052B6  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16538  0052B8  ECC5  F044         	call	___lbdiv
 16539  0052BC  EC54  F048         	call	_SetSegmentValueIntermitentMain
 16540                           
 16541                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16542  0052C0  0E00               	movlw	0
 16543  0052C2  0101               	movlb	1	; () banked
 16544  0052C4  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16545  0052C6  0E28               	movlw	40
 16546  0052C8  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16547                           
 16548                           ; BSR set to: 1
 16549                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16550  0052CA  0E01               	movlw	1
 16551  0052CC  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16552  0052CE                     l20024:
 16553                           
 16554                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16555  0052CE  503B               	movf	_rfCMD^0,w,c	;volatile
 16556  0052D0  0012               	return	
 16557  0052D2                     l20028:
 16558                           
 16559                           ; BSR set to: 1
 16560                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16561  0052D2  503B               	movf	_rfCMD^0,w,c	;volatile
 16562  0052D4  B4D8               	btfsc	status,2,c
 16563  0052D6  D01B               	goto	l20036
 16564                           
 16565                           ; BSR set to: 1
 16566                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16567  0052D8  0E0A               	movlw	10
 16568  0052DA  6E10               	movwf	___lbdiv@divisor^0,c
 16569  0052DC  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16570  0052DE  ECC5  F044         	call	___lbdiv
 16571  0052E2  0DF6               	mullw	246
 16572  0052E4  50F3               	movf	243,w,c
 16573  0052E6  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16574  0052E8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16575  0052EA  0E00               	movlw	0
 16576  0052EC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16577  0052EE  0E04               	movlw	4
 16578  0052F0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16579  0052F2  0E0A               	movlw	10
 16580  0052F4  6E10               	movwf	___lbdiv@divisor^0,c
 16581  0052F6  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16582  0052F8  ECC5  F044         	call	___lbdiv
 16583  0052FC  EC54  F048         	call	_SetSegmentValueIntermitentMain
 16584                           
 16585                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16586  005300  0E00               	movlw	0
 16587  005302  0101               	movlb	1	; () banked
 16588  005304  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16589  005306  0E14               	movlw	20
 16590  005308  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16591                           
 16592                           ; BSR set to: 1
 16593                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16594  00530A  0E01               	movlw	1
 16595  00530C  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16596  00530E                     l20036:
 16597                           
 16598                           ; BSR set to: 1
 16599                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16600  00530E  503B               	movf	_rfCMD^0,w,c	;volatile
 16601  005310  0012               	return		;funcret
 16602  005312                     __end_of_GetOpenOrder:
 16603                           	callstack 0
 16604                           
 16605 ;; *************** function ___lbdiv *****************
 16606 ;; Defined at:
 16607 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16608 ;; Parameters:    Size  Location     Type
 16609 ;;  dividend        1    wreg     unsigned char 
 16610 ;;  divisor         1   15[COMRAM] unsigned char 
 16611 ;; Auto vars:     Size  Location     Type
 16612 ;;  dividend        1   16[COMRAM] unsigned char 
 16613 ;;  quotient        1   18[COMRAM] unsigned char 
 16614 ;;  counter         1   17[COMRAM] unsigned char 
 16615 ;; Return value:  Size  Location     Type
 16616 ;;                  1    wreg      unsigned char 
 16617 ;; Registers used:
 16618 ;;		wreg, status,2, status,0
 16619 ;; Tracked objects:
 16620 ;;		On entry : 0/0
 16621 ;;		On exit  : 0/0
 16622 ;;		Unchanged: 0/0
 16623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16624 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16625 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16627 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16628 ;;Total ram usage:        4 bytes
 16629 ;; Hardware stack levels used: 1
 16630 ;; Hardware stack levels required when called: 4
 16631 ;; This function calls:
 16632 ;;		Nothing
 16633 ;; This function is called by:
 16634 ;;		_GetOpenOrder
 16635 ;;		_sm_execute_menuConfiguration
 16636 ;; This function uses a non-reentrant model
 16637 ;;
 16638                           
 16639                           	psect	text54
 16640  00898A                     __ptext54:
 16641                           	callstack 0
 16642  00898A                     ___lbdiv:
 16643                           	callstack 24
 16644                           
 16645                           ;incstack = 0
 16646                           ;___lbdiv@dividend stored from wreg
 16647  00898A  6E11               	movwf	___lbdiv@dividend^0,c
 16648  00898C  0E00               	movlw	0
 16649  00898E  6E13               	movwf	___lbdiv@quotient^0,c
 16650  008990  5010               	movf	___lbdiv@divisor^0,w,c
 16651  008992  B4D8               	btfsc	status,2,c
 16652  008994  D015               	goto	l19866
 16653  008996  0E01               	movlw	1
 16654  008998  6E12               	movwf	___lbdiv@counter^0,c
 16655  00899A  D003               	goto	l19854
 16656  00899C                     l19850:
 16657  00899C  90D8               	bcf	status,0,c
 16658  00899E  3610               	rlcf	___lbdiv@divisor^0,f,c
 16659  0089A0  2A12               	incf	___lbdiv@counter^0,f,c
 16660  0089A2                     l19854:
 16661  0089A2  AE10               	btfss	___lbdiv@divisor^0,7,c
 16662  0089A4  D7FB               	goto	l19850
 16663  0089A6                     u22760:
 16664  0089A6  90D8               	bcf	status,0,c
 16665  0089A8  3613               	rlcf	___lbdiv@quotient^0,f,c
 16666  0089AA  5010               	movf	___lbdiv@divisor^0,w,c
 16667  0089AC  5C11               	subwf	___lbdiv@dividend^0,w,c
 16668  0089AE  A0D8               	btfss	status,0,c
 16669  0089B0  D003               	goto	l19862
 16670  0089B2  5010               	movf	___lbdiv@divisor^0,w,c
 16671  0089B4  5E11               	subwf	___lbdiv@dividend^0,f,c
 16672  0089B6  8013               	bsf	___lbdiv@quotient^0,0,c
 16673  0089B8                     l19862:
 16674  0089B8  90D8               	bcf	status,0,c
 16675  0089BA  3210               	rrcf	___lbdiv@divisor^0,f,c
 16676  0089BC  2E12               	decfsz	___lbdiv@counter^0,f,c
 16677  0089BE  D7F3               	goto	u22760
 16678  0089C0                     l19866:
 16679  0089C0  5013               	movf	___lbdiv@quotient^0,w,c
 16680  0089C2  0012               	return		;funcret
 16681  0089C4                     __end_of___lbdiv:
 16682                           	callstack 0
 16683                           
 16684 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16685 ;; Defined at:
 16686 ;;		line 193 in file "outputs_MC50.c"
 16687 ;; Parameters:    Size  Location     Type
 16688 ;;  d1              1    wreg     unsigned char 
 16689 ;;  d2              1   27[COMRAM] unsigned char 
 16690 ;;  time            2   28[COMRAM] int 
 16691 ;; Auto vars:     Size  Location     Type
 16692 ;;  d1              1   30[COMRAM] unsigned char 
 16693 ;; Return value:  Size  Location     Type
 16694 ;;                  1    wreg      void 
 16695 ;; Registers used:
 16696 ;;		wreg
 16697 ;; Tracked objects:
 16698 ;;		On entry : 0/1
 16699 ;;		On exit  : 0/0
 16700 ;;		Unchanged: 0/0
 16701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16702 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16705 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16706 ;;Total ram usage:        4 bytes
 16707 ;; Hardware stack levels used: 1
 16708 ;; Hardware stack levels required when called: 4
 16709 ;; This function calls:
 16710 ;;		Nothing
 16711 ;; This function is called by:
 16712 ;;		_GetOpenOrder
 16713 ;;		_sm_execute_main
 16714 ;;		_sm_execute_menuConfiguration
 16715 ;;		_load_New_Menu
 16716 ;;		_controlSelectRemote
 16717 ;;		_controlSaveRemote
 16718 ;; This function uses a non-reentrant model
 16719 ;;
 16720                           
 16721                           	psect	text55
 16722  0090A8                     __ptext55:
 16723                           	callstack 0
 16724  0090A8                     _SetSegmentValueIntermitentMain:
 16725                           	callstack 22
 16726                           
 16727                           ;incstack = 0
 16728                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16729  0090A8  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16730                           
 16731                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16732  0090AA  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16733                           
 16734                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16735  0090AE  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16736                           
 16737                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16738  0090B2  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16739  0090B6  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16740  0090BA  0012               	return		;funcret
 16741  0090BC                     __end_of_SetSegmentValueIntermitentMain:
 16742                           	callstack 0
 16743                           
 16744 ;; *************** function _readbutton *****************
 16745 ;; Defined at:
 16746 ;;		line 471 in file "inputs_MC50.c"
 16747 ;; Parameters:    Size  Location     Type
 16748 ;;		None
 16749 ;; Auto vars:     Size  Location     Type
 16750 ;;		None
 16751 ;; Return value:  Size  Location     Type
 16752 ;;                  1    wreg      void 
 16753 ;; Registers used:
 16754 ;;		wreg, status,2, status,0
 16755 ;; Tracked objects:
 16756 ;;		On entry : 3F/1
 16757 ;;		On exit  : 3F/1
 16758 ;;		Unchanged: 0/0
 16759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16764 ;;Total ram usage:        0 bytes
 16765 ;; Hardware stack levels used: 1
 16766 ;; Hardware stack levels required when called: 4
 16767 ;; This function calls:
 16768 ;;		Nothing
 16769 ;; This function is called by:
 16770 ;;		_main
 16771 ;; This function uses a non-reentrant model
 16772 ;;
 16773                           
 16774                           	psect	text56
 16775  008008                     __ptext56:
 16776                           	callstack 0
 16777  008008                     _readbutton:
 16778                           	callstack 26
 16779                           
 16780                           ; BSR set to: 1
 16781                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16782                           
 16783                           ;incstack = 0
 16784  008008  508E               	movf	142,w,c	;volatile
 16785  00800A  0B37               	andlw	55
 16786  00800C  6F98               	movwf	readbutton@key2& (0+255),b
 16787  00800E  F000               	nop		;# 
 16788  008010  F000               	nop		;# 
 16789  008012  F000               	nop		;# 
 16790                           
 16791                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16792  008014  508E               	movf	142,w,c	;volatile
 16793  008016  0B37               	andlw	55
 16794  008018  0100               	movlb	0	; () banked
 16795  00801A  6F86               	movwf	readbutton@key1& (0+255),b
 16796                           
 16797                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16798  00801C  5186               	movf	readbutton@key1& (0+255),w,b
 16799  00801E  0101               	movlb	1	; () banked
 16800  008020  1998               	xorwf	readbutton@key2& (0+255),w,b
 16801  008022  A4D8               	btfss	status,2,c
 16802  008024  D003               	goto	l16546
 16803                           
 16804                           ; BSR set to: 1
 16805                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16806  008026  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16807                           
 16808                           ;inputs_MC50.c: 488:  }
 16809  00802A  D002               	goto	l16548
 16810  00802C                     l16546:
 16811                           
 16812                           ; BSR set to: 1
 16813                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16814  00802C  0E37               	movlw	55
 16815  00802E  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16816  008030                     l16548:
 16817                           
 16818                           ; BSR set to: 1
 16819                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16820  008030  0E37               	movlw	55
 16821  008032  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16822  008034  B4D8               	btfsc	status,2,c
 16823  008036  D007               	goto	u19000
 16824                           
 16825                           ; BSR set to: 1
 16826  008038  504C               	movf	_button_struct^0,w,c	;volatile
 16827  00803A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16828  00803C  B4D8               	btfsc	status,2,c
 16829  00803E  D007               	goto	l16556
 16830                           
 16831                           ; BSR set to: 1
 16832  008040  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16833  008042  A4D8               	btfss	status,2,c
 16834  008044  D004               	goto	l16556
 16835  008046                     u19000:
 16836                           
 16837                           ; BSR set to: 1
 16838                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16839  008046  0E00               	movlw	0
 16840  008048  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16841                           
 16842                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16843  00804A  0E00               	movlw	0
 16844  00804C  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16845  00804E                     l16556:
 16846                           
 16847                           ; BSR set to: 1
 16848                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16849  00804E  0E37               	movlw	55
 16850  008050  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16851  008052  B4D8               	btfsc	status,2,c
 16852  008054  D007               	goto	l16564
 16853                           
 16854                           ; BSR set to: 1
 16855                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16856  008056  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16857                           
 16858                           ; BSR set to: 1
 16859                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16860  00805A  0EFA               	movlw	250
 16861  00805C  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16862  00805E  D004               	goto	l16566
 16863                           
 16864                           ; BSR set to: 1
 16865                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16866  008060  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16867  008062  D002               	goto	l16566
 16868  008064                     l16564:
 16869                           
 16870                           ; BSR set to: 1
 16871                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16872  008064  0E00               	movlw	0
 16873  008066  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16874  008068                     l16566:
 16875                           
 16876                           ; BSR set to: 1
 16877                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16878  008068  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16879  00806A  A4D8               	btfss	status,2,c
 16880  00806C  0012               	return	
 16881                           
 16882                           ; BSR set to: 1
 16883                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16884  00806E  0E37               	movlw	55
 16885  008070  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16886                           
 16887                           ; BSR set to: 1
 16888  008072  0012               	return		;funcret
 16889  008074                     __end_of_readbutton:
 16890                           	callstack 0
 16891                           
 16892 ;; *************** function _read_package *****************
 16893 ;; Defined at:
 16894 ;;		line 21 in file "eusartpackage.c"
 16895 ;; Parameters:    Size  Location     Type
 16896 ;;		None
 16897 ;; Auto vars:     Size  Location     Type
 16898 ;;  package         7   23[COMRAM] struct package_t
 16899 ;; Return value:  Size  Location     Type
 16900 ;;                  7   16[COMRAM] struct package_t
 16901 ;; Registers used:
 16902 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16903 ;; Tracked objects:
 16904 ;;		On entry : 3F/0
 16905 ;;		On exit  : 3F/E
 16906 ;;		Unchanged: 0/0
 16907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16908 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16909 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16911 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16912 ;;Total ram usage:       14 bytes
 16913 ;; Hardware stack levels used: 1
 16914 ;; Hardware stack levels required when called: 5
 16915 ;; This function calls:
 16916 ;;		_EUSART1_Read
 16917 ;; This function is called by:
 16918 ;;		_main
 16919 ;; This function uses a non-reentrant model
 16920 ;;
 16921                           
 16922                           	psect	text57
 16923  008570                     __ptext57:
 16924                           	callstack 0
 16925  008570                     _read_package:
 16926                           	callstack 25
 16927                           
 16928                           ; BSR set to: 0
 16929                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16930                           
 16931                           ; BSR set to: 1
 16932                           ;incstack = 0
 16933  008570  EC7B  F043         	call	_EUSART1_Read	;wreg free
 16934  008574  0A0A               	xorlw	10
 16935  008576  B4D8               	btfsc	status,2,c
 16936  008578  D00C               	goto	l16724
 16937  00857A                     u19530:
 16938                           
 16939                           ; BSR set to: 14
 16940                           ;eusartpackage.c: 25:             package.valid=0;
 16941  00857A  0E00               	movlw	0
 16942  00857C  6E1E               	movwf	(read_package@package+6)^0,c
 16943                           
 16944                           ; BSR set to: 14
 16945                           ;eusartpackage.c: 26:             return package;
 16946  00857E  EE20  F018         	lfsr	2,read_package@package
 16947  008582  EE00  F011         	lfsr	0,?_read_package
 16948  008586  0E06               	movlw	6
 16949  008588                     u19541:
 16950  008588  CFDB FFEB          	movff	plusw2,plusw0
 16951  00858C  06E8               	decf	wreg,f,c
 16952  00858E  E2FC               	bc	u19541
 16953  008590  0012               	return	
 16954  008592                     l16724:
 16955                           
 16956                           ; BSR set to: 14
 16957                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 16958  008592  0E0A               	movlw	10
 16959  008594  6E1C               	movwf	(read_package@package+4)^0,c
 16960                           
 16961                           ; BSR set to: 14
 16962                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 16963  008596  EC7B  F043         	call	_EUSART1_Read	;wreg free
 16964  00859A  6E18               	movwf	read_package@package^0,c
 16965                           
 16966                           ; BSR set to: 14
 16967                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 16968  00859C  EC7B  F043         	call	_EUSART1_Read	;wreg free
 16969  0085A0  6E19               	movwf	(read_package@package+1)^0,c
 16970                           
 16971                           ; BSR set to: 14
 16972                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 16973  0085A2  EC7B  F043         	call	_EUSART1_Read	;wreg free
 16974  0085A6  6E1A               	movwf	(read_package@package+2)^0,c
 16975                           
 16976                           ; BSR set to: 14
 16977                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 16978  0085A8  EC7B  F043         	call	_EUSART1_Read	;wreg free
 16979  0085AC  6E1B               	movwf	(read_package@package+3)^0,c
 16980                           
 16981                           ; BSR set to: 14
 16982                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 16983  0085AE  EC7B  F043         	call	_EUSART1_Read	;wreg free
 16984  0085B2  0A0D               	xorlw	13
 16985  0085B4  A4D8               	btfss	status,2,c
 16986  0085B6  D7E1               	goto	u19530
 16987                           
 16988                           ; BSR set to: 14
 16989                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 16990  0085B8  0E0D               	movlw	13
 16991  0085BA  6E1D               	movwf	(read_package@package+5)^0,c
 16992                           
 16993                           ; BSR set to: 14
 16994                           ;eusartpackage.c: 46:         package.valid=1;
 16995  0085BC  0E01               	movlw	1
 16996  0085BE  D7DE               	goto	L76
 16997  0085C0                     __end_of_read_package:
 16998                           	callstack 0
 16999                           
 17000 ;; *************** function _EUSART1_Read *****************
 17001 ;; Defined at:
 17002 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 17003 ;; Parameters:    Size  Location     Type
 17004 ;;		None
 17005 ;; Auto vars:     Size  Location     Type
 17006 ;;  readValue       1   15[COMRAM] unsigned char 
 17007 ;; Return value:  Size  Location     Type
 17008 ;;                  1    wreg      unsigned char 
 17009 ;; Registers used:
 17010 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17011 ;; Tracked objects:
 17012 ;;		On entry : 31/0
 17013 ;;		On exit  : 3F/E
 17014 ;;		Unchanged: 0/0
 17015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17020 ;;Total ram usage:        1 bytes
 17021 ;; Hardware stack levels used: 1
 17022 ;; Hardware stack levels required when called: 4
 17023 ;; This function calls:
 17024 ;;		Nothing
 17025 ;; This function is called by:
 17026 ;;		_read_package
 17027 ;; This function uses a non-reentrant model
 17028 ;;
 17029                           
 17030                           	psect	text58
 17031  0086F6                     __ptext58:
 17032                           	callstack 0
 17033  0086F6                     _EUSART1_Read:
 17034                           	callstack 25
 17035                           
 17036                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17037                           
 17038                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17039                           
 17040                           ; BSR set to: 14
 17041                           ;incstack = 0
 17042  0086F6  0100               	movlb	0	; () banked
 17043  0086F8  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 17044  0086FA  B4D8               	btfsc	status,2,c
 17045  0086FC  D7FC               	goto	__ptext58
 17046                           
 17047                           ; BSR set to: 0
 17048                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 17049  0086FE  0E74               	movlw	low _eusart1RxStatusBuffer
 17050  008700  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17051  008702  6ED9               	movwf	fsr2l,c
 17052  008704  6ADA               	clrf	fsr2h,c
 17053  008706  0E02               	movlw	high _eusart1RxStatusBuffer
 17054  008708  22DA               	addwfc	fsr2h,f,c
 17055  00870A  50DF               	movf	indf2,w,c
 17056  00870C  0101               	movlb	1	; () banked
 17057  00870E  6F9B               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 17058                           
 17059                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 17060  008710  0E7C               	movlw	low _eusart1RxBuffer
 17061  008712  0100               	movlb	0	; () banked
 17062  008714  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17063  008716  6ED9               	movwf	fsr2l,c
 17064  008718  6ADA               	clrf	fsr2h,c
 17065  00871A  0E02               	movlw	high _eusart1RxBuffer
 17066  00871C  22DA               	addwfc	fsr2h,f,c
 17067  00871E  50DF               	movf	indf2,w,c
 17068  008720  6E10               	movwf	EUSART1_Read@readValue^0,c
 17069                           
 17070                           ; BSR set to: 0
 17071  008722  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 17072                           
 17073                           ; BSR set to: 0
 17074                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 17075  008724  0E07               	movlw	7
 17076  008726  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 17077  008728  D002               	goto	l13960
 17078                           
 17079                           ; BSR set to: 0
 17080                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 17081  00872A  0E00               	movlw	0
 17082  00872C  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 17083  00872E                     l13960:
 17084                           
 17085                           ; BSR set to: 0
 17086                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 17087  00872E  010E               	movlb	14	; () banked
 17088  008730  9BC5               	bcf	197,5,b	;volatile
 17089                           
 17090                           ; BSR set to: 14
 17091                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 17092  008732  0100               	movlb	0	; () banked
 17093  008734  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 17094                           
 17095                           ; BSR set to: 0
 17096                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 17097  008736  010E               	movlb	14	; () banked
 17098  008738  8BC5               	bsf	197,5,b	;volatile
 17099                           
 17100                           ; BSR set to: 14
 17101                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 17102  00873A  5010               	movf	EUSART1_Read@readValue^0,w,c
 17103                           
 17104                           ; BSR set to: 14
 17105  00873C  0012               	return		;funcret
 17106  00873E                     __end_of_EUSART1_Read:
 17107                           	callstack 0
 17108                           
 17109 ;; *************** function _readRFButtons *****************
 17110 ;; Defined at:
 17111 ;;		line 231 in file "inputs_MC50.c"
 17112 ;; Parameters:    Size  Location     Type
 17113 ;;		None
 17114 ;; Auto vars:     Size  Location     Type
 17115 ;;		None
 17116 ;; Return value:  Size  Location     Type
 17117 ;;                  1    wreg      void 
 17118 ;; Registers used:
 17119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17120 ;; Tracked objects:
 17121 ;;		On entry : 3F/1
 17122 ;;		On exit  : 3E/0
 17123 ;;		Unchanged: 0/0
 17124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17129 ;;Total ram usage:        0 bytes
 17130 ;; Hardware stack levels used: 1
 17131 ;; Hardware stack levels required when called: 15
 17132 ;; This function calls:
 17133 ;;		_DecryptPacket_12BIT
 17134 ;;		_keeloqDecryptPacket
 17135 ;; This function is called by:
 17136 ;;		_main
 17137 ;; This function uses a non-reentrant model
 17138 ;;
 17139                           
 17140                           	psect	text59
 17141  005982                     __ptext59:
 17142                           	callstack 0
 17143  005982                     _readRFButtons:
 17144                           	callstack 15
 17145                           
 17146                           ; BSR set to: 1
 17147                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 17148                           
 17149                           ; BSR set to: 14
 17150                           ;incstack = 0
 17151  005982  0100               	movlb	0	; () banked
 17152  005984  518B               	movf	_RFFull& (0+255),w,b	;volatile
 17153  005986  B4D8               	btfsc	status,2,c
 17154  005988  D0B9               	goto	l22690
 17155                           
 17156                           ; BSR set to: 0
 17157                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 17158  00598A  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 17159  00598C  A4D8               	btfss	status,2,c
 17160  00598E  D00B               	goto	l22636
 17161                           
 17162                           ; BSR set to: 0
 17163                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 17164  005990  0EC6               	movlw	low _BufferRF
 17165  005992  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 17166  005994  0E02               	movlw	high _BufferRF
 17167  005996  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 17168  005998  0E90               	movlw	low _classic_data
 17169  00599A  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 17170  00599C  0E02               	movlw	high _classic_data
 17171  00599E  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 17172  0059A0  ECBC  F027         	call	_keeloqDecryptPacket	;wreg free
 17173  0059A4  D00A               	goto	L77
 17174  0059A6                     l22636:
 17175                           
 17176                           ; BSR set to: 0
 17177                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 17178  0059A6  0EC6               	movlw	low _BufferRF
 17179  0059A8  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 17180  0059AA  0E02               	movlw	high _BufferRF
 17181  0059AC  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 17182  0059AE  0E90               	movlw	low _classic_data
 17183  0059B0  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 17184  0059B2  0E02               	movlw	high _classic_data
 17185  0059B4  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 17186  0059B6  EC21  F03B         	call	_DecryptPacket_12BIT	;wreg free
 17187  0059BA                     L77:
 17188  0059BA  6F87               	movwf	readRFButtons@keyType& (0+255),b
 17189                           
 17190                           ; BSR set to: 0
 17191                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 17192  0059BC  C29C  F088         	movff	_classic_data+12,readRFButtons@key1
 17193                           
 17194                           ; BSR set to: 0
 17195                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 17196  0059C0  C294  F181         	movff	_classic_data+4,readRFButtons@serial
 17197  0059C4  C295  F182         	movff	_classic_data+5,readRFButtons@serial+1
 17198  0059C8  C296  F183         	movff	_classic_data+6,readRFButtons@serial+2
 17199  0059CC  C297  F184         	movff	_classic_data+7,readRFButtons@serial+3
 17200                           
 17201                           ; BSR set to: 0
 17202                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17203  0059D0  C298  F187         	movff	_classic_data+8,readRFButtons@rollingCode
 17204  0059D4  C299  F188         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17205                           
 17206                           ; BSR set to: 0
 17207                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17208  0059D8  C29E  F199         	movff	_classic_data+14,readRFButtons@typeRemote
 17209                           
 17210                           ; BSR set to: 0
 17211                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17212  0059DC  0101               	movlb	1	; () banked
 17213  0059DE  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17214  0059E0  A4D8               	btfss	status,2,c
 17215  0059E2  D01E               	goto	l22658
 17216                           
 17217                           ; BSR set to: 1
 17218                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17219  0059E4  0100               	movlb	0	; () banked
 17220  0059E6  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17221  0059E8  B4D8               	btfsc	status,2,c
 17222  0059EA  D044               	goto	u27560
 17223                           
 17224                           ; BSR set to: 0
 17225  0059EC  5188               	movf	readRFButtons@key1& (0+255),w,b
 17226  0059EE  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17227  0059F0  A4D8               	btfss	status,2,c
 17228  0059F2  D040               	goto	u27560
 17229                           
 17230                           ; BSR set to: 0
 17231  0059F4  0101               	movlb	1	; () banked
 17232  0059F6  5181               	movf	readRFButtons@serial& (0+255),w,b
 17233  0059F8  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17234  0059FA  E13C               	bnz	l22670
 17235  0059FC  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17236  0059FE  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17237  005A00  E139               	bnz	l22670
 17238  005A02  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17239  005A04  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17240  005A06  E136               	bnz	l22670
 17241  005A08  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17242  005A0A  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17243  005A0C  A4D8               	btfss	status,2,c
 17244  005A0E  D032               	goto	u27560
 17245                           
 17246                           ; BSR set to: 1
 17247  005A10  0100               	movlb	0	; () banked
 17248  005A12  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17249  005A14  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17250  005A16  A4D8               	btfss	status,2,c
 17251  005A18  D02D               	goto	u27560
 17252  005A1A                     l1649:
 17253                           
 17254                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17255  005A1A  0E00               	movlw	0
 17256  005A1C  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17257                           
 17258                           ;inputs_MC50.c: 275:         }
 17259  005A1E  D038               	goto	l1652
 17260  005A20                     l22658:
 17261                           
 17262                           ; BSR set to: 1
 17263  005A20  0100               	movlb	0	; () banked
 17264  005A22  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17265  005A24  B4D8               	btfsc	status,2,c
 17266  005A26  D026               	goto	u27560
 17267                           
 17268                           ; BSR set to: 0
 17269  005A28  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17270  005A2A  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17271  005A2C  B4D8               	btfsc	status,2,c
 17272  005A2E  D00F               	goto	u27540
 17273                           
 17274                           ; BSR set to: 0
 17275  005A30  0101               	movlb	1	; () banked
 17276  005A32  BFB1               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17277  005A34  D005               	goto	u27530
 17278  005A36  51B1               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17279  005A38  E10A               	bnz	l22666
 17280  005A3A  05B0               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17281  005A3C  B0D8               	btfsc	status,0,c
 17282  005A3E  D007               	goto	u27540
 17283  005A40                     u27530:
 17284                           
 17285                           ; BSR set to: 1
 17286  005A40  5187               	movf	readRFButtons@rollingCode& (0+255),w,b
 17287  005A42  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17288  005A44  E117               	bnz	l22670
 17289  005A46  5188               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17290  005A48  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17291  005A4A  A4D8               	btfss	status,2,c
 17292  005A4C  D013               	goto	u27560
 17293  005A4E                     u27540:
 17294  005A4E                     l22666:
 17295  005A4E  0100               	movlb	0	; () banked
 17296  005A50  5188               	movf	readRFButtons@key1& (0+255),w,b
 17297  005A52  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17298  005A54  A4D8               	btfss	status,2,c
 17299  005A56  D00E               	goto	u27560
 17300                           
 17301                           ; BSR set to: 0
 17302  005A58  0101               	movlb	1	; () banked
 17303  005A5A  5181               	movf	readRFButtons@serial& (0+255),w,b
 17304  005A5C  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17305  005A5E  E10A               	bnz	u27560
 17306  005A60  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17307  005A62  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17308  005A64  E107               	bnz	u27560
 17309  005A66  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17310  005A68  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17311  005A6A  E104               	bnz	u27560
 17312  005A6C  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17313  005A6E  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17314  005A70  B4D8               	btfsc	status,2,c
 17315  005A72  D003               	goto	l22672
 17316  005A74                     u27560:
 17317  005A74                     l22670:
 17318                           
 17319                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17320  005A74  0E00               	movlw	0
 17321  005A76  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17322  005A78  D7D0               	goto	l1649
 17323  005A7A                     l22672:
 17324                           
 17325                           ; BSR set to: 1
 17326  005A7A  BFB1               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17327  005A7C  D005               	goto	u27570
 17328  005A7E  51B1               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17329  005A80  E107               	bnz	l1652
 17330  005A82  05B0               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17331  005A84  B0D8               	btfsc	status,0,c
 17332  005A86  D004               	goto	l1652
 17333  005A88                     u27570:
 17334                           
 17335                           ; BSR set to: 1
 17336  005A88  0E02               	movlw	2
 17337  005A8A  1999               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17338  005A8C  B4D8               	btfsc	status,2,c
 17339  005A8E  D7F2               	goto	u27560
 17340  005A90                     l1652:
 17341                           
 17342                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17343  005A90  0E00               	movlw	0
 17344  005A92  0101               	movlb	1	; () banked
 17345  005A94  6FB1               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17346  005A96  0E0A               	movlw	10
 17347  005A98  6FB0               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17348                           
 17349                           ; BSR set to: 1
 17350                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17351  005A9A  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17352                           
 17353                           ;inputs_MC50.c: 292:         if
 17354  005A9E  503B               	movf	_rfCMD^0,w,c	;volatile
 17355  005AA0  B4D8               	btfsc	status,2,c
 17356  005AA2  D01A               	goto	u27620
 17357                           
 17358                           ; BSR set to: 1
 17359  005AA4  0100               	movlb	0	; () banked
 17360  005AA6  5188               	movf	readRFButtons@key1& (0+255),w,b
 17361  005AA8  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17362  005AAA  A4D8               	btfss	status,2,c
 17363  005AAC  D015               	goto	u27620
 17364                           
 17365                           ; BSR set to: 0
 17366  005AAE  0101               	movlb	1	; () banked
 17367  005AB0  5181               	movf	readRFButtons@serial& (0+255),w,b
 17368  005AB2  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17369  005AB4  E111               	bnz	l1662
 17370  005AB6  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17371  005AB8  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17372  005ABA  E10E               	bnz	l1662
 17373  005ABC  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17374  005ABE  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17375  005AC0  E10B               	bnz	l1662
 17376  005AC2  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17377  005AC4  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17378  005AC6  A4D8               	btfss	status,2,c
 17379  005AC8  D007               	goto	u27620
 17380                           
 17381                           ; BSR set to: 1
 17382  005ACA  5187               	movf	readRFButtons@rollingCode& (0+255),w,b
 17383  005ACC  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17384  005ACE  E104               	bnz	u27620
 17385  005AD0  5188               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17386  005AD2  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17387  005AD4  B4D8               	btfsc	status,2,c
 17388  005AD6  D00E               	goto	l22688
 17389  005AD8                     u27620:
 17390  005AD8                     l1662:
 17391                           
 17392                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17393  005AD8  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17394                           
 17395                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17396  005ADC  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17397  005AE0  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17398  005AE4  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17399  005AE8  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17400                           
 17401                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17402  005AEC  C29F  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17403                           
 17404                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17405  005AF0  0E00               	movlw	0
 17406  005AF2  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17407  005AF4                     l22688:
 17408                           
 17409                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17410  005AF4  C187  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17411  005AF8  C188  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17412  005AFC                     l22690:
 17413                           
 17414                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17415  005AFC  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17416  005AFE  A4D8               	btfss	status,2,c
 17417  005B00  D003               	goto	l22694
 17418                           
 17419                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17420  005B02  0E00               	movlw	0
 17421  005B04  6E3B               	movwf	_rfCMD^0,c	;volatile
 17422                           
 17423                           ;inputs_MC50.c: 313:     }
 17424  005B06  0012               	return	
 17425  005B08                     l22694:
 17426  005B08  503B               	movf	_rfCMD^0,w,c	;volatile
 17427  005B0A  B4D8               	btfsc	status,2,c
 17428  005B0C  0012               	return	
 17429                           
 17430                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17431  005B0E  0EFA               	movlw	250
 17432  005B10  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17433  005B12  0012               	return	
 17434                           
 17435                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17436  005B14  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17437  005B16  0012               	return		;funcret
 17438  005B18                     __end_of_readRFButtons:
 17439                           	callstack 0
 17440                           
 17441 ;; *************** function _keeloqDecryptPacket *****************
 17442 ;; Defined at:
 17443 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17444 ;; Parameters:    Size  Location     Type
 17445 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17446 ;;		 -> BufferRF(9), 
 17447 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17448 ;;		 -> classic_data(16), 
 17449 ;; Auto vars:     Size  Location     Type
 17450 ;;  commandType     1   17[BANK0 ] enum E10539
 17451 ;;  hop_error       1   16[BANK0 ] enum E10730
 17452 ;; Return value:  Size  Location     Type
 17453 ;;                  1    wreg      enum E10539
 17454 ;; Registers used:
 17455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17456 ;; Tracked objects:
 17457 ;;		On entry : 3F/0
 17458 ;;		On exit  : 3F/0
 17459 ;;		Unchanged: 0/0
 17460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17461 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17462 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17463 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17464 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17465 ;;Total ram usage:       10 bytes
 17466 ;; Hardware stack levels used: 1
 17467 ;; Hardware stack levels required when called: 14
 17468 ;; This function calls:
 17469 ;;		_DecCHK
 17470 ;;		_HopCHK
 17471 ;;		_keeloq_classic_decrypt_packet
 17472 ;;		_memcpy
 17473 ;;		_validateRemoteSerialNumber
 17474 ;;		_verifyProgramingMode
 17475 ;; This function is called by:
 17476 ;;		_readRFButtons
 17477 ;; This function uses a non-reentrant model
 17478 ;;
 17479                           
 17480                           	psect	text60
 17481  004F78                     __ptext60:
 17482                           	callstack 0
 17483  004F78                     _keeloqDecryptPacket:
 17484                           	callstack 15
 17485                           
 17486                           ; BSR set to: 0
 17487                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17488                           
 17489                           ;incstack = 0
 17490  004F78  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17491  004F7C  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17492  004F80  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17493  004F84  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17494  004F88  0E00               	movlw	0
 17495  004F8A  6E15               	movwf	(memcpy@n+1)^0,c
 17496  004F8C  0E08               	movlw	8
 17497  004F8E  6E14               	movwf	memcpy@n^0,c
 17498  004F90  ECE4  F043         	call	_memcpy	;wreg free
 17499                           
 17500                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17501  004F94  0E08               	movlw	8
 17502  004F96  0100               	movlb	0	; () banked
 17503  004F98  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17504  004F9A  6E10               	movwf	memcpy@d1^0,c
 17505  004F9C  0E00               	movlw	0
 17506  004F9E  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17507  004FA0  6E11               	movwf	(memcpy@d1+1)^0,c
 17508  004FA2  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17509  004FA6  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17510  004FAA  0E00               	movlw	0
 17511  004FAC  6E15               	movwf	(memcpy@n+1)^0,c
 17512  004FAE  0E04               	movlw	4
 17513  004FB0  6E14               	movwf	memcpy@n^0,c
 17514  004FB2  ECE4  F043         	call	_memcpy	;wreg free
 17515                           
 17516                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17517  004FB6  0100               	movlb	0	; () banked
 17518  004FB8  EE20 F00C          	lfsr	2,12
 17519  004FBC  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17520  004FBE  26D9               	addwf	fsr2l,f,c
 17521  004FC0  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17522  004FC2  22DA               	addwfc	fsr2h,f,c
 17523  004FC4  EE10 F007          	lfsr	1,7
 17524  004FC8  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17525  004FCA  26E1               	addwf	fsr1l,f,c
 17526  004FCC  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17527  004FCE  22E2               	addwfc	fsr1h,f,c
 17528  004FD0  50E7               	movf	indf1,w,c
 17529  004FD2  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17530  004FD4  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17531  004FD6  0B0F               	andlw	15
 17532  004FD8  6EDF               	movwf	indf2,c
 17533                           
 17534                           ; BSR set to: 0
 17535                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17536  004FDA  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17537  004FDE  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17538  004FE2  ECFE  F044         	call	_verifyProgramingMode	;wreg free
 17539  004FE6  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17540                           
 17541                           ; BSR set to: 0
 17542                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17543  004FE8  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17544  004FEA  A4D8               	btfss	status,2,c
 17545  004FEC  D019               	goto	l21174
 17546                           
 17547                           ; BSR set to: 0
 17548                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17549  004FEE  EE20 F004          	lfsr	2,4
 17550  004FF2  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17551  004FF4  26D9               	addwf	fsr2l,f,c
 17552  004FF6  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17553  004FF8  22DA               	addwfc	fsr2h,f,c
 17554  004FFA  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17555  004FFE  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17556  005002  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17557  005006  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17558  00500A  0E00               	movlw	0
 17559  00500C  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17560  00500E  0E0F               	movlw	15
 17561  005010  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17562  005012  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17563  005014  0E00               	movlw	0
 17564  005016  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17565  005018  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17566  00501A  EC59  F02A         	call	_validateRemoteSerialNumber	;wreg free
 17567  00501E  D004               	goto	L78
 17568  005020                     l21174:
 17569                           
 17570                           ; BSR set to: 0
 17571  005020  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17572  005022  A4D8               	btfss	status,2,c
 17573  005024  D002               	goto	l21178
 17574                           
 17575                           ; BSR set to: 0
 17576                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17577  005026  0E00               	movlw	0
 17578  005028                     L78:
 17579  005028  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17580  00502A                     l21178:
 17581                           
 17582                           ; BSR set to: 0
 17583                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17584  00502A  EE20 F004          	lfsr	2,4
 17585  00502E  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17586  005030  26D9               	addwf	fsr2l,f,c
 17587  005032  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17588  005034  22DA               	addwfc	fsr2h,f,c
 17589  005036  0EFF               	movlw	255
 17590  005038  14DE               	andwf	postinc2,w,c
 17591  00503A  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17592  00503C  0EFF               	movlw	255
 17593  00503E  14DE               	andwf	postinc2,w,c
 17594  005040  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17595  005042  0EFF               	movlw	255
 17596  005044  14DE               	andwf	postinc2,w,c
 17597  005046  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17598  005048  0E0F               	movlw	15
 17599  00504A  14DE               	andwf	postinc2,w,c
 17600  00504C  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17601  00504E  EE20 F004          	lfsr	2,4
 17602  005052  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17603  005054  26D9               	addwf	fsr2l,f,c
 17604  005056  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17605  005058  22DA               	addwfc	fsr2h,f,c
 17606  00505A  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17607  00505E  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17608  005062  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17609  005066  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17610                           
 17611                           ; BSR set to: 0
 17612                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17613  00506A  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17614  00506E  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17615  005072  ECB8  F041         	call	_keeloq_classic_decrypt_packet	;wreg free
 17616                           
 17617                           ; BSR set to: 0
 17618                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17619  005076  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17620  005078  A4D8               	btfss	status,2,c
 17621  00507A  D01B               	goto	l21196
 17622                           
 17623                           ; BSR set to: 0
 17624                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17625  00507C  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17626  005080  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17627  005084  EC18  F045         	call	_DecCHK	;wreg free
 17628  005088  0900               	iorlw	0
 17629  00508A  A4D8               	btfss	status,2,c
 17630  00508C  D008               	goto	l21188
 17631                           
 17632                           ; BSR set to: 0
 17633                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17634  00508E  EE20 F00E          	lfsr	2,14
 17635  005092  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17636  005094  26D9               	addwf	fsr2l,f,c
 17637  005096  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17638  005098  22DA               	addwfc	fsr2h,f,c
 17639  00509A  0E01               	movlw	1
 17640  00509C  D007               	goto	L79
 17641  00509E                     l21188:
 17642                           
 17643                           ; BSR set to: 0
 17644                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17645  00509E  EE20 F00E          	lfsr	2,14
 17646  0050A2  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17647  0050A4  26D9               	addwf	fsr2l,f,c
 17648  0050A6  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17649  0050A8  22DA               	addwfc	fsr2h,f,c
 17650  0050AA  0E00               	movlw	0
 17651  0050AC                     L79:
 17652  0050AC  6EDF               	movwf	indf2,c
 17653  0050AE                     l21190:
 17654                           
 17655                           ; BSR set to: 0
 17656                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17657  0050AE  0E00               	movlw	0
 17658  0050B0  0012               	return	
 17659  0050B2                     l21196:
 17660                           
 17661                           ; BSR set to: 0
 17662  0050B2  0E06               	movlw	6
 17663  0050B4  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17664  0050B6  B4D8               	btfsc	status,2,c
 17665  0050B8  D004               	goto	u24520
 17666                           
 17667                           ; BSR set to: 0
 17668  0050BA  0E05               	movlw	5
 17669  0050BC  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17670  0050BE  A4D8               	btfss	status,2,c
 17671  0050C0  D01B               	goto	l21206
 17672  0050C2                     u24520:
 17673                           
 17674                           ; BSR set to: 0
 17675                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17676  0050C2  EE20 F004          	lfsr	2,4
 17677  0050C6  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17678  0050C8  26D9               	addwf	fsr2l,f,c
 17679  0050CA  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17680  0050CC  22DA               	addwfc	fsr2h,f,c
 17681  0050CE  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17682  0050D2  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17683  0050D6  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17684  0050DA  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17685  0050DE  0E01               	movlw	1
 17686  0050E0  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17687  0050E2  0E0F               	movlw	15
 17688  0050E4  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17689  0050E6  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17690  0050E8  0E00               	movlw	0
 17691  0050EA  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17692  0050EC  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17693  0050EE  EC59  F02A         	call	_validateRemoteSerialNumber	;wreg free
 17694  0050F2  0900               	iorlw	0
 17695  0050F4  B4D8               	btfsc	status,2,c
 17696  0050F6  D7DB               	goto	l21190
 17697  0050F8                     l21206:
 17698                           
 17699                           ; BSR set to: 0
 17700                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17701  0050F8  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17702  0050FC  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17703  005100  EC18  F045         	call	_DecCHK	;wreg free
 17704  005104  0900               	iorlw	0
 17705  005106  A4D8               	btfss	status,2,c
 17706  005108  D00D               	goto	l21222
 17707                           
 17708                           ; BSR set to: 0
 17709                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17710  00510A  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17711  00510C  B4D8               	btfsc	status,2,c
 17712  00510E  D7CF               	goto	l21190
 17713                           
 17714                           ; BSR set to: 0
 17715                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17716  005110  EE20 F00E          	lfsr	2,14
 17717  005114  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17718  005116  26D9               	addwf	fsr2l,f,c
 17719  005118  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17720  00511A  22DA               	addwfc	fsr2h,f,c
 17721  00511C  0E01               	movlw	1
 17722  00511E  6EDF               	movwf	indf2,c
 17723                           
 17724                           ; BSR set to: 0
 17725                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17726  005120  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17727  005122  0012               	return	
 17728  005124                     l21222:
 17729                           
 17730                           ; BSR set to: 0
 17731                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17732  005124  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17733  005128  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17734  00512C  ECF3  F03B         	call	_HopCHK	;wreg free
 17735  005130  0100               	movlb	0	; () banked
 17736  005132  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17737                           
 17738                           ; BSR set to: 0
 17739                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17740  005134  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17741  005136  A4D8               	btfss	status,2,c
 17742  005138  D7BA               	goto	l21190
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17746  00513A  EE20 F00E          	lfsr	2,14
 17747  00513E  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17748  005140  26D9               	addwf	fsr2l,f,c
 17749  005142  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17750  005144  22DA               	addwfc	fsr2h,f,c
 17751  005146  0E00               	movlw	0
 17752  005148  D7EA               	goto	L80
 17753  00514A                     __end_of_keeloqDecryptPacket:
 17754                           	callstack 0
 17755                           
 17756 ;; *************** function _verifyProgramingMode *****************
 17757 ;; Defined at:
 17758 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17759 ;; Parameters:    Size  Location     Type
 17760 ;;  classic_data    2   15[COMRAM] PTR struct .
 17761 ;;		 -> classic_data(16), 
 17762 ;; Auto vars:     Size  Location     Type
 17763 ;;		None
 17764 ;; Return value:  Size  Location     Type
 17765 ;;                  1    wreg      enum E10539
 17766 ;; Registers used:
 17767 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17768 ;; Tracked objects:
 17769 ;;		On entry : 3F/0
 17770 ;;		On exit  : 3F/0
 17771 ;;		Unchanged: 3F/0
 17772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17773 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17776 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17777 ;;Total ram usage:        3 bytes
 17778 ;; Hardware stack levels used: 1
 17779 ;; Hardware stack levels required when called: 4
 17780 ;; This function calls:
 17781 ;;		Nothing
 17782 ;; This function is called by:
 17783 ;;		_keeloqDecryptPacket
 17784 ;; This function uses a non-reentrant model
 17785 ;;
 17786                           
 17787                           	psect	text61
 17788  0089FC                     __ptext61:
 17789                           	callstack 0
 17790  0089FC                     _verifyProgramingMode:
 17791                           	callstack 24
 17792                           
 17793                           ; BSR set to: 0
 17794                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17795                           
 17796                           ; BSR set to: 0
 17797                           ;incstack = 0
 17798  0089FC  EE20 F00C          	lfsr	2,12
 17799  008A00  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17800  008A02  26D9               	addwf	fsr2l,f,c
 17801  008A04  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17802  008A06  22DA               	addwfc	fsr2h,f,c
 17803  008A08  0E0A               	movlw	10
 17804  008A0A  18DE               	xorwf	postinc2,w,c
 17805  008A0C  A4D8               	btfss	status,2,c
 17806  008A0E  D002               	goto	l20196
 17807                           
 17808                           ; BSR set to: 0
 17809                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17810  008A10  0E06               	movlw	6
 17811  008A12  0012               	return	
 17812  008A14                     l20196:
 17813                           
 17814                           ; BSR set to: 0
 17815  008A14  EE20 F00C          	lfsr	2,12
 17816  008A18  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17817  008A1A  26D9               	addwf	fsr2l,f,c
 17818  008A1C  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17819  008A1E  22DA               	addwfc	fsr2h,f,c
 17820  008A20  0E05               	movlw	5
 17821  008A22  18DE               	xorwf	postinc2,w,c
 17822  008A24  A4D8               	btfss	status,2,c
 17823  008A26  D002               	goto	l20204
 17824                           
 17825                           ; BSR set to: 0
 17826                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17827  008A28  0E05               	movlw	5
 17828  008A2A  0012               	return	
 17829  008A2C                     l20204:
 17830                           
 17831                           ; BSR set to: 0
 17832                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17833  008A2C  0E00               	movlw	0
 17834                           
 17835                           ; BSR set to: 0
 17836  008A2E  0012               	return		;funcret
 17837  008A30                     __end_of_verifyProgramingMode:
 17838                           	callstack 0
 17839                           
 17840 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17841 ;; Defined at:
 17842 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17843 ;; Parameters:    Size  Location     Type
 17844 ;;  data            2   55[COMRAM] PTR struct .
 17845 ;;		 -> classic_data(16), 
 17846 ;; Auto vars:     Size  Location     Type
 17847 ;;		None
 17848 ;; Return value:  Size  Location     Type
 17849 ;;                  1    wreg      void 
 17850 ;; Registers used:
 17851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17852 ;; Tracked objects:
 17853 ;;		On entry : 3F/0
 17854 ;;		On exit  : 3F/0
 17855 ;;		Unchanged: 0/0
 17856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17859 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17860 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17861 ;;Total ram usage:        5 bytes
 17862 ;; Hardware stack levels used: 1
 17863 ;; Hardware stack levels required when called: 7
 17864 ;; This function calls:
 17865 ;;		_Decrypt
 17866 ;;		_NormalKeyGen
 17867 ;; This function is called by:
 17868 ;;		_keeloqDecryptPacket
 17869 ;; This function uses a non-reentrant model
 17870 ;;
 17871                           
 17872                           	psect	text62
 17873  008370                     __ptext62:
 17874                           	callstack 0
 17875  008370                     _keeloq_classic_decrypt_packet:
 17876                           	callstack 21
 17877                           
 17878                           ; BSR set to: 0
 17879                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17880                           
 17881                           ; BSR set to: 0
 17882                           ;incstack = 0
 17883  008370  0E04               	movlw	4
 17884  008372  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17885  008374  6E26               	movwf	NormalKeyGen@serial^0,c
 17886  008376  0E00               	movlw	0
 17887  008378  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17888  00837A  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17889  00837C  EC4F  F033         	call	_NormalKeyGen	;wreg free
 17890                           
 17891                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17892  008380  0E08               	movlw	8
 17893  008382  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17894  008384  6E1B               	movwf	Decrypt@packet^0,c
 17895  008386  0E00               	movlw	0
 17896  008388  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17897  00838A  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17898  00838C  ECB6  F036         	call	_Decrypt	;wreg free
 17899                           
 17900                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17901  008390  EE20 F00D          	lfsr	2,13
 17902  008394  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17903  008396  26D9               	addwf	fsr2l,f,c
 17904  008398  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17905  00839A  22DA               	addwfc	fsr2h,f,c
 17906  00839C  EE10 F00A          	lfsr	1,10
 17907  0083A0  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17908  0083A2  26E1               	addwf	fsr1l,f,c
 17909  0083A4  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17910  0083A6  22E2               	addwfc	fsr1h,f,c
 17911  0083A8  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17912  0083AC  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17913  0083B0  0E0C               	movlw	12
 17914  0083B2  0100               	movlb	0	; () banked
 17915  0083B4  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17916  0083B6                     u23255:
 17917  0083B6  90D8               	bcf	status,0,c
 17918  0083B8  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17919  0083BA  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17920  0083BC  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17921  0083BE  D7FB               	goto	u23255
 17922  0083C0  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17923  0083C2  0B0F               	andlw	15
 17924  0083C4  6EDF               	movwf	indf2,c
 17925                           
 17926                           ; BSR set to: 0
 17927  0083C6  0012               	return		;funcret
 17928  0083C8                     __end_of_keeloq_classic_decrypt_packet:
 17929                           	callstack 0
 17930                           
 17931 ;; *************** function _NormalKeyGen *****************
 17932 ;; Defined at:
 17933 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17934 ;; Parameters:    Size  Location     Type
 17935 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17936 ;;		 -> classic_data(16), 
 17937 ;; Auto vars:     Size  Location     Type
 17938 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17939 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17940 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17941 ;; Return value:  Size  Location     Type
 17942 ;;                  1    wreg      void 
 17943 ;; Registers used:
 17944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17945 ;; Tracked objects:
 17946 ;;		On entry : 3F/0
 17947 ;;		On exit  : 0/0
 17948 ;;		Unchanged: 0/0
 17949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17951 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17953 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17954 ;;Total ram usage:       18 bytes
 17955 ;; Hardware stack levels used: 1
 17956 ;; Hardware stack levels required when called: 6
 17957 ;; This function calls:
 17958 ;;		_Decrypt
 17959 ;;		_LoadManufCode
 17960 ;;		_memcpy
 17961 ;; This function is called by:
 17962 ;;		_keeloq_classic_decrypt_packet
 17963 ;; This function uses a non-reentrant model
 17964 ;;
 17965                           
 17966                           	psect	text63
 17967  00669E                     __ptext63:
 17968                           	callstack 0
 17969  00669E                     _NormalKeyGen:
 17970                           	callstack 21
 17971                           
 17972                           ; BSR set to: 0
 17973                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 17974                           
 17975                           ; BSR set to: 0
 17976                           ;incstack = 0
 17977  00669E  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17978  0066A0  6E10               	movwf	memcpy@d1^0,c
 17979  0066A2  6A11               	clrf	(memcpy@d1+1)^0,c
 17980  0066A4  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 17981  0066A8  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 17982  0066AC  0E00               	movlw	0
 17983  0066AE  6E15               	movwf	(memcpy@n+1)^0,c
 17984  0066B0  0E04               	movlw	4
 17985  0066B2  6E14               	movwf	memcpy@n^0,c
 17986  0066B4  ECE4  F043         	call	_memcpy	;wreg free
 17987                           
 17988                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 17989  0066B8  0E28               	movlw	low NormalKeyGen@HOPtemp
 17990  0066BA  6E10               	movwf	memcpy@d1^0,c
 17991  0066BC  6A11               	clrf	(memcpy@d1+1)^0,c
 17992  0066BE  0E30               	movlw	low NormalKeyGen@Buffer
 17993  0066C0  6E12               	movwf	memcpy@s1^0,c
 17994  0066C2  6A13               	clrf	(memcpy@s1+1)^0,c
 17995  0066C4  0E00               	movlw	0
 17996  0066C6  6E15               	movwf	(memcpy@n+1)^0,c
 17997  0066C8  0E04               	movlw	4
 17998  0066CA  6E14               	movwf	memcpy@n^0,c
 17999  0066CC  ECE4  F043         	call	_memcpy	;wreg free
 18000                           
 18001                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 18002  0066D0  0ED7               	movlw	low NormalKeyGen@SEED
 18003  0066D2  6E10               	movwf	memcpy@d1^0,c
 18004  0066D4  0E02               	movlw	high NormalKeyGen@SEED
 18005  0066D6  6E11               	movwf	(memcpy@d1+1)^0,c
 18006  0066D8  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 18007  0066DA  6E12               	movwf	memcpy@s1^0,c
 18008  0066DC  6A13               	clrf	(memcpy@s1+1)^0,c
 18009  0066DE  0E00               	movlw	0
 18010  0066E0  6E15               	movwf	(memcpy@n+1)^0,c
 18011  0066E2  0E04               	movlw	4
 18012  0066E4  6E14               	movwf	memcpy@n^0,c
 18013  0066E6  ECE4  F043         	call	_memcpy	;wreg free
 18014                           
 18015                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 18016  0066EA  0E0F               	movlw	15
 18017  0066EC  0102               	movlb	2	; () banked
 18018  0066EE  17DA               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 18019                           
 18020                           ; BSR set to: 2
 18021                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 18022  0066F0  0E30               	movlw	low NormalKeyGen@Buffer
 18023  0066F2  6E10               	movwf	memcpy@d1^0,c
 18024  0066F4  6A11               	clrf	(memcpy@d1+1)^0,c
 18025  0066F6  0ED7               	movlw	low NormalKeyGen@SEED
 18026  0066F8  6E12               	movwf	memcpy@s1^0,c
 18027  0066FA  0E02               	movlw	high NormalKeyGen@SEED
 18028  0066FC  6E13               	movwf	(memcpy@s1+1)^0,c
 18029  0066FE  0E00               	movlw	0
 18030  006700  6E15               	movwf	(memcpy@n+1)^0,c
 18031  006702  0E04               	movlw	4
 18032  006704  6E14               	movwf	memcpy@n^0,c
 18033  006706  ECE4  F043         	call	_memcpy	;wreg free
 18034                           
 18035                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 18036  00670A  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 18037                           
 18038                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 18039  00670C  EC30  F047         	call	_LoadManufCode	;wreg free
 18040                           
 18041                           ; BSR set to: 2
 18042                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 18043  006710  0E30               	movlw	low NormalKeyGen@Buffer
 18044  006712  6E1B               	movwf	Decrypt@packet^0,c
 18045  006714  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18046  006716  ECB6  F036         	call	_Decrypt	;wreg free
 18047                           
 18048                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 18049  00671A  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18050  00671C  6E10               	movwf	memcpy@d1^0,c
 18051  00671E  6A11               	clrf	(memcpy@d1+1)^0,c
 18052  006720  0E30               	movlw	low NormalKeyGen@Buffer
 18053  006722  6E12               	movwf	memcpy@s1^0,c
 18054  006724  6A13               	clrf	(memcpy@s1+1)^0,c
 18055  006726  0E00               	movlw	0
 18056  006728  6E15               	movwf	(memcpy@n+1)^0,c
 18057  00672A  0E04               	movlw	4
 18058  00672C  6E14               	movwf	memcpy@n^0,c
 18059  00672E  ECE4  F043         	call	_memcpy	;wreg free
 18060                           
 18061                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 18062  006732  0E30               	movlw	low NormalKeyGen@Buffer
 18063  006734  6E10               	movwf	memcpy@d1^0,c
 18064  006736  6A11               	clrf	(memcpy@d1+1)^0,c
 18065  006738  0ED7               	movlw	low NormalKeyGen@SEED
 18066  00673A  6E12               	movwf	memcpy@s1^0,c
 18067  00673C  0E02               	movlw	high NormalKeyGen@SEED
 18068  00673E  6E13               	movwf	(memcpy@s1+1)^0,c
 18069  006740  0E00               	movlw	0
 18070  006742  6E15               	movwf	(memcpy@n+1)^0,c
 18071  006744  0E04               	movlw	4
 18072  006746  6E14               	movwf	memcpy@n^0,c
 18073  006748  ECE4  F043         	call	_memcpy	;wreg free
 18074                           
 18075                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 18076  00674C  0E60               	movlw	96
 18077  00674E  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 18078                           
 18079                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 18080  006750  EC30  F047         	call	_LoadManufCode	;wreg free
 18081                           
 18082                           ; BSR set to: 2
 18083                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 18084  006754  0E30               	movlw	low NormalKeyGen@Buffer
 18085  006756  6E1B               	movwf	Decrypt@packet^0,c
 18086  006758  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18087  00675A  ECB6  F036         	call	_Decrypt	;wreg free
 18088                           
 18089                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 18090  00675E  0ED3               	movlw	low (_DKEY+4)
 18091  006760  6E10               	movwf	memcpy@d1^0,c
 18092  006762  0E02               	movlw	high (_DKEY+4)
 18093  006764  6E11               	movwf	(memcpy@d1+1)^0,c
 18094  006766  0E30               	movlw	low NormalKeyGen@Buffer
 18095  006768  6E12               	movwf	memcpy@s1^0,c
 18096  00676A  6A13               	clrf	(memcpy@s1+1)^0,c
 18097  00676C  0E00               	movlw	0
 18098  00676E  6E15               	movwf	(memcpy@n+1)^0,c
 18099  006770  0E04               	movlw	4
 18100  006772  6E14               	movwf	memcpy@n^0,c
 18101  006774  ECE4  F043         	call	_memcpy	;wreg free
 18102                           
 18103                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 18104  006778  0ECF               	movlw	low _DKEY
 18105  00677A  6E10               	movwf	memcpy@d1^0,c
 18106  00677C  0E02               	movlw	high _DKEY
 18107  00677E  6E11               	movwf	(memcpy@d1+1)^0,c
 18108  006780  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18109  006782  6E12               	movwf	memcpy@s1^0,c
 18110  006784  6A13               	clrf	(memcpy@s1+1)^0,c
 18111  006786  0E00               	movlw	0
 18112  006788  6E15               	movwf	(memcpy@n+1)^0,c
 18113  00678A  0E04               	movlw	4
 18114  00678C  6E14               	movwf	memcpy@n^0,c
 18115  00678E  ECE4  F043         	call	_memcpy	;wreg free
 18116                           
 18117                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 18118  006792  0E30               	movlw	low NormalKeyGen@Buffer
 18119  006794  6E10               	movwf	memcpy@d1^0,c
 18120  006796  6A11               	clrf	(memcpy@d1+1)^0,c
 18121  006798  0E28               	movlw	low NormalKeyGen@HOPtemp
 18122  00679A  6E12               	movwf	memcpy@s1^0,c
 18123  00679C  6A13               	clrf	(memcpy@s1+1)^0,c
 18124  00679E  0E00               	movlw	0
 18125  0067A0  6E15               	movwf	(memcpy@n+1)^0,c
 18126  0067A2  0E04               	movlw	4
 18127  0067A4  6E14               	movwf	memcpy@n^0,c
 18128  0067A6  ECE4  F043         	call	_memcpy	;wreg free
 18129  0067AA  0012               	return		;funcret
 18130  0067AC                     __end_of_NormalKeyGen:
 18131                           	callstack 0
 18132                           
 18133 ;; *************** function _LoadManufCode *****************
 18134 ;; Defined at:
 18135 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 18136 ;; Parameters:    Size  Location     Type
 18137 ;;		None
 18138 ;; Auto vars:     Size  Location     Type
 18139 ;;		None
 18140 ;; Return value:  Size  Location     Type
 18141 ;;                  1    wreg      void 
 18142 ;; Registers used:
 18143 ;;		wreg, status,2
 18144 ;; Tracked objects:
 18145 ;;		On entry : 0/2
 18146 ;;		On exit  : 3F/2
 18147 ;;		Unchanged: 0/0
 18148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18153 ;;Total ram usage:        0 bytes
 18154 ;; Hardware stack levels used: 1
 18155 ;; Hardware stack levels required when called: 4
 18156 ;; This function calls:
 18157 ;;		Nothing
 18158 ;; This function is called by:
 18159 ;;		_NormalKeyGen
 18160 ;; This function uses a non-reentrant model
 18161 ;;
 18162                           
 18163                           	psect	text64
 18164  008E60                     __ptext64:
 18165                           	callstack 0
 18166  008E60                     _LoadManufCode:
 18167                           	callstack 22
 18168                           
 18169                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 18170                           
 18171                           ;incstack = 0
 18172  008E60  0102               	movlb	2	; () banked
 18173  008E62  69CF               	setf	_DKEY& (0+255),b
 18174                           
 18175                           ; BSR set to: 2
 18176                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 18177  008E64  0ECA               	movlw	202
 18178  008E66  6FD0               	movwf	(_DKEY+1)& (0+255),b
 18179                           
 18180                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 18181  008E68  0E76               	movlw	118
 18182  008E6A  6FD1               	movwf	(_DKEY+2)& (0+255),b
 18183                           
 18184                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 18185  008E6C  0E94               	movlw	148
 18186  008E6E  6FD2               	movwf	(_DKEY+3)& (0+255),b
 18187                           
 18188                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 18189  008E70  0E22               	movlw	34
 18190  008E72  6FD3               	movwf	(_DKEY+4)& (0+255),b
 18191                           
 18192                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 18193  008E74  0E68               	movlw	104
 18194  008E76  6FD4               	movwf	(_DKEY+5)& (0+255),b
 18195                           
 18196                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18197  008E78  0E27               	movlw	39
 18198  008E7A  6FD5               	movwf	(_DKEY+6)& (0+255),b
 18199                           
 18200                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18201  008E7C  0E57               	movlw	87
 18202  008E7E  6FD6               	movwf	(_DKEY+7)& (0+255),b
 18203                           
 18204                           ; BSR set to: 2
 18205  008E80  0012               	return		;funcret
 18206  008E82                     __end_of_LoadManufCode:
 18207                           	callstack 0
 18208                           
 18209 ;; *************** function _Decrypt *****************
 18210 ;; Defined at:
 18211 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18212 ;; Parameters:    Size  Location     Type
 18213 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18214 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18215 ;; Auto vars:     Size  Location     Type
 18216 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18217 ;;  aux             1   32[COMRAM] unsigned char 
 18218 ;;  p               1   31[COMRAM] char 
 18219 ;;  j               1   30[COMRAM] unsigned char 
 18220 ;;  i               1   29[COMRAM] unsigned char 
 18221 ;;  key             1   28[COMRAM] unsigned char 
 18222 ;; Return value:  Size  Location     Type
 18223 ;;                  1    wreg      void 
 18224 ;; Registers used:
 18225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18226 ;; Tracked objects:
 18227 ;;		On entry : 0/0
 18228 ;;		On exit  : 0/0
 18229 ;;		Unchanged: 0/0
 18230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18232 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18234 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18235 ;;Total ram usage:       11 bytes
 18236 ;; Hardware stack levels used: 1
 18237 ;; Hardware stack levels required when called: 5
 18238 ;; This function calls:
 18239 ;;		_memcpy
 18240 ;; This function is called by:
 18241 ;;		_NormalKeyGen
 18242 ;;		_keeloq_classic_decrypt_packet
 18243 ;; This function uses a non-reentrant model
 18244 ;;
 18245                           
 18246                           	psect	text65
 18247  006D6C                     __ptext65:
 18248                           	callstack 0
 18249  006D6C                     _Decrypt:
 18250                           	callstack 21
 18251                           
 18252                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18253                           
 18254                           ; BSR set to: 2
 18255                           ;incstack = 0
 18256  006D6C  0E22               	movlw	low Decrypt@Buffer
 18257  006D6E  6E10               	movwf	memcpy@d1^0,c
 18258  006D70  6A11               	clrf	(memcpy@d1+1)^0,c
 18259  006D72  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18260  006D76  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18261  006D7A  0E00               	movlw	0
 18262  006D7C  6E15               	movwf	(memcpy@n+1)^0,c
 18263  006D7E  0E04               	movlw	4
 18264  006D80  6E14               	movwf	memcpy@n^0,c
 18265  006D82  ECE4  F043         	call	_memcpy	;wreg free
 18266                           
 18267                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18268  006D86  0E01               	movlw	1
 18269  006D88  6E20               	movwf	Decrypt@p^0,c
 18270                           
 18271                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18272  006D8A  0E42               	movlw	66
 18273  006D8C  6E1F               	movwf	Decrypt@j^0,c
 18274  006D8E                     l19408:
 18275                           
 18276                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18277  006D8E  0ECF               	movlw	low _DKEY
 18278  006D90  2420               	addwf	Decrypt@p^0,w,c
 18279  006D92  6ED9               	movwf	fsr2l,c
 18280  006D94  6ADA               	clrf	fsr2h,c
 18281  006D96  0E02               	movlw	high _DKEY
 18282  006D98  22DA               	addwfc	fsr2h,f,c
 18283  006D9A  50DF               	movf	indf2,w,c
 18284  006D9C  6E1D               	movwf	Decrypt@key^0,c
 18285  006D9E  0620               	decf	Decrypt@p^0,f,c
 18286                           
 18287                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18288  006DA0  AE20               	btfss	Decrypt@p^0,7,c
 18289  006DA2  D002               	goto	l19416
 18290                           
 18291                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18292  006DA4  0E08               	movlw	8
 18293  006DA6  2620               	addwf	Decrypt@p^0,f,c
 18294  006DA8                     l19416:
 18295                           
 18296                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18297  006DA8  0E08               	movlw	8
 18298  006DAA  6E1E               	movwf	Decrypt@i^0,c
 18299  006DAC                     l1854:
 18300                           
 18301                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18302  006DAC  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18303  006DAE  D006               	goto	l1856
 18304                           
 18305                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18306  006DB0  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18307  006DB2  D002               	goto	l19426
 18308                           
 18309                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18310  006DB4  0E3A               	movlw	58
 18311  006DB6  D007               	goto	L81
 18312  006DB8                     l19426:
 18313                           
 18314                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18315  006DB8  0E5C               	movlw	92
 18316  006DBA  D005               	goto	L81
 18317  006DBC                     l1856:
 18318                           
 18319                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18320  006DBC  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18321  006DBE  D002               	goto	l19430
 18322                           
 18323                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18324  006DC0  0E74               	movlw	116
 18325  006DC2  D001               	goto	L81
 18326  006DC4                     l19430:
 18327                           
 18328                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18329  006DC4  0E2E               	movlw	46
 18330  006DC6                     L81:
 18331  006DC6  6E21               	movwf	Decrypt@aux^0,c
 18332                           
 18333                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18334  006DC8  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18335                           
 18336                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18337  006DCA  3A21               	swapf	Decrypt@aux^0,f,c
 18338                           
 18339                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18340  006DCC  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18341  006DCE  D004               	goto	l19438
 18342                           
 18343                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18344  006DD0  90D8               	bcf	status,0,c
 18345  006DD2  3621               	rlcf	Decrypt@aux^0,f,c
 18346  006DD4  90D8               	bcf	status,0,c
 18347  006DD6  3621               	rlcf	Decrypt@aux^0,f,c
 18348  006DD8                     l19438:
 18349                           
 18350                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18351  006DD8  A022               	btfss	Decrypt@Buffer^0,0,c
 18352  006DDA  D002               	goto	l1864
 18353                           
 18354                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18355  006DDC  90D8               	bcf	status,0,c
 18356  006DDE  3621               	rlcf	Decrypt@aux^0,f,c
 18357  006DE0                     l1864:
 18358                           
 18359                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18360  006DE0  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18361  006DE2  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18362  006DE4  181D               	xorwf	Decrypt@key^0,w,c
 18363  006DE6  1A21               	xorwf	Decrypt@aux^0,f,c
 18364                           
 18365                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18366  006DE8  90D8               	bcf	status,0,c
 18367  006DEA  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18368  006DEC  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18369  006DEE  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18370                           
 18371                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18372  006DF0  90D8               	bcf	status,0,c
 18373  006DF2  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18374  006DF4  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18375  006DF6  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18376                           
 18377                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18378  006DF8  90D8               	bcf	status,0,c
 18379  006DFA  3422               	rlcf	Decrypt@Buffer^0,w,c
 18380  006DFC  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18381  006DFE  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18382                           
 18383                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18384  006E00  90D8               	bcf	status,0,c
 18385  006E02  3421               	rlcf	Decrypt@aux^0,w,c
 18386  006E04  3422               	rlcf	Decrypt@Buffer^0,w,c
 18387  006E06  6E22               	movwf	Decrypt@Buffer^0,c
 18388                           
 18389                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18390  006E08  90D8               	bcf	status,0,c
 18391  006E0A  361D               	rlcf	Decrypt@key^0,f,c
 18392                           
 18393                           ;keeloqDecrypt_MC50.c: 189:         }
 18394  006E0C  061E               	decf	Decrypt@i^0,f,c
 18395  006E0E  501E               	movf	Decrypt@i^0,w,c
 18396  006E10  A4D8               	btfss	status,2,c
 18397  006E12  D7CC               	goto	l1854
 18398                           
 18399                           ;keeloqDecrypt_MC50.c: 190:     }
 18400  006E14  061F               	decf	Decrypt@j^0,f,c
 18401  006E16  501F               	movf	Decrypt@j^0,w,c
 18402  006E18  A4D8               	btfss	status,2,c
 18403  006E1A  D7B9               	goto	l19408
 18404                           
 18405                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18406  006E1C  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18407  006E20  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18408  006E24  0E22               	movlw	low Decrypt@Buffer
 18409  006E26  6E12               	movwf	memcpy@s1^0,c
 18410  006E28  6A13               	clrf	(memcpy@s1+1)^0,c
 18411  006E2A  0E00               	movlw	0
 18412  006E2C  6E15               	movwf	(memcpy@n+1)^0,c
 18413  006E2E  0E04               	movlw	4
 18414  006E30  6E14               	movwf	memcpy@n^0,c
 18415  006E32  ECE4  F043         	call	_memcpy	;wreg free
 18416  006E36  0012               	return		;funcret
 18417  006E38                     __end_of_Decrypt:
 18418                           	callstack 0
 18419                           
 18420 ;; *************** function _HopCHK *****************
 18421 ;; Defined at:
 18422 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18423 ;; Parameters:    Size  Location     Type
 18424 ;;  data            2   35[COMRAM] PTR struct .
 18425 ;;		 -> classic_data(16), 
 18426 ;; Auto vars:     Size  Location     Type
 18427 ;;  hopDiff         2   37[COMRAM] short 
 18428 ;; Return value:  Size  Location     Type
 18429 ;;                  1    wreg      enum E10730
 18430 ;; Registers used:
 18431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18432 ;; Tracked objects:
 18433 ;;		On entry : 3F/0
 18434 ;;		On exit  : 3E/0
 18435 ;;		Unchanged: 0/0
 18436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18440 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18441 ;;Total ram usage:        4 bytes
 18442 ;; Hardware stack levels used: 1
 18443 ;; Hardware stack levels required when called: 6
 18444 ;; This function calls:
 18445 ;;		_ReqResync
 18446 ;;		_getHopCode
 18447 ;; This function is called by:
 18448 ;;		_keeloqDecryptPacket
 18449 ;; This function uses a non-reentrant model
 18450 ;;
 18451                           
 18452                           	psect	text66
 18453  0077E6                     __ptext66:
 18454                           	callstack 0
 18455  0077E6                     _HopCHK:
 18456                           	callstack 22
 18457                           
 18458                           ; BSR set to: 0
 18459                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18460                           
 18461                           ;incstack = 0
 18462  0077E6  EE20 F008          	lfsr	2,8
 18463  0077EA  5024               	movf	HopCHK@data^0,w,c
 18464  0077EC  26D9               	addwf	fsr2l,f,c
 18465  0077EE  5025               	movf	(HopCHK@data+1)^0,w,c
 18466  0077F0  22DA               	addwfc	fsr2h,f,c
 18467  0077F2  CFDE F07C          	movff	postinc2,_Hop
 18468  0077F6  CFDD F07D          	movff	postdec2,_Hop+1
 18469                           
 18470                           ; BSR set to: 0
 18471                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18472  0077FA  C024  F016         	movff	HopCHK@data,getHopCode@data
 18473  0077FE  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18474  007802  EC73  F030         	call	_getHopCode	;wreg free
 18475  007806  C016  F28C         	movff	?_getHopCode,_EHop
 18476  00780A  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18477                           
 18478                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18479  00780E  0101               	movlb	1	; () banked
 18480  007810  5197               	movf	_F2Chance& (0+255),w,b
 18481  007812  B4D8               	btfsc	status,2,c
 18482  007814  D00F               	goto	l20168
 18483                           
 18484                           ; BSR set to: 1
 18485                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18486  007816  0100               	movlb	0	; () banked
 18487  007818  517C               	movf	_Hop& (0+255),w,b
 18488  00781A  0101               	movlb	1	; () banked
 18489  00781C  1985               	xorwf	_NextHop& (0+255),w,b
 18490  00781E  E10A               	bnz	l20168
 18491  007820  0100               	movlb	0	; () banked
 18492  007822  517D               	movf	(_Hop+1)& (0+255),w,b
 18493  007824  0101               	movlb	1	; () banked
 18494  007826  1986               	xorwf	(_NextHop+1)& (0+255),w,b
 18495  007828  A4D8               	btfss	status,2,c
 18496  00782A  D004               	goto	l20168
 18497                           
 18498                           ; BSR set to: 1
 18499                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18500  00782C  0E00               	movlw	0
 18501  00782E  6F97               	movwf	_F2Chance& (0+255),b
 18502  007830                     l20164:
 18503                           
 18504                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18505  007830  0E01               	movlw	1
 18506  007832  0012               	return	
 18507  007834                     l20168:
 18508                           
 18509                           ; BSR set to: 1
 18510                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18511  007834  0102               	movlb	2	; () banked
 18512  007836  518C               	movf	_EHop& (0+255),w,b
 18513  007838  0100               	movlb	0	; () banked
 18514  00783A  5D7C               	subwf	_Hop& (0+255),w,b
 18515  00783C  6E26               	movwf	HopCHK@hopDiff^0,c
 18516  00783E  0102               	movlb	2	; () banked
 18517  007840  518D               	movf	(_EHop+1)& (0+255),w,b
 18518  007842  0100               	movlb	0	; () banked
 18519  007844  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18520  007846  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18521                           
 18522                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18523  007848  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18524  00784A  D002               	goto	l20176
 18525                           
 18526                           ; BSR set to: 0
 18527                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18528  00784C  0E0A               	movlw	10
 18529  00784E  0012               	return	
 18530  007850                     l20176:
 18531                           
 18532                           ; BSR set to: 0
 18533  007850  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18534  007852  D7EE               	goto	l20164
 18535  007854  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18536  007856  E104               	bnz	u23220
 18537  007858  0E11               	movlw	17
 18538  00785A  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18539  00785C  A0D8               	btfss	status,0,c
 18540  00785E  D7E8               	goto	l20164
 18541  007860                     u23220:
 18542                           
 18543                           ; BSR set to: 0
 18544                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18545  007860  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18546  007864  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18547  007868  EC29  F048         	call	_ReqResync	;wreg free
 18548  00786C  0012               	return		;funcret
 18549  00786E                     __end_of_HopCHK:
 18550                           	callstack 0
 18551                           
 18552 ;; *************** function _getHopCode *****************
 18553 ;; Defined at:
 18554 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18555 ;; Parameters:    Size  Location     Type
 18556 ;;  data            2   21[COMRAM] PTR struct .
 18557 ;;		 -> classic_data(16), 
 18558 ;; Auto vars:     Size  Location     Type
 18559 ;;  tempHop         2   31[COMRAM] unsigned short 
 18560 ;;  i               1   34[COMRAM] unsigned char 
 18561 ;;  tempPos         1   33[COMRAM] char 
 18562 ;; Return value:  Size  Location     Type
 18563 ;;                  2   21[COMRAM] unsigned short 
 18564 ;; Registers used:
 18565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18566 ;; Tracked objects:
 18567 ;;		On entry : 3F/0
 18568 ;;		On exit  : 3E/0
 18569 ;;		Unchanged: 0/0
 18570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18572 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18573 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18574 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18575 ;;Total ram usage:       14 bytes
 18576 ;; Hardware stack levels used: 1
 18577 ;; Hardware stack levels required when called: 5
 18578 ;; This function calls:
 18579 ;;		_ReqResync
 18580 ;;		___wmul
 18581 ;; This function is called by:
 18582 ;;		_HopCHK
 18583 ;; This function uses a non-reentrant model
 18584 ;;
 18585                           
 18586                           	psect	text67
 18587  0060E6                     __ptext67:
 18588                           	callstack 0
 18589  0060E6                     _getHopCode:
 18590                           	callstack 22
 18591                           
 18592                           ; BSR set to: 0
 18593                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18594                           
 18595                           ;incstack = 0
 18596  0060E6  0E00               	movlw	0
 18597  0060E8  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18598  0060EA  0E00               	movlw	0
 18599  0060EC  6E20               	movwf	getHopCode@tempHop^0,c
 18600                           
 18601                           ; BSR set to: 0
 18602                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18603  0060EE  6822               	setf	getHopCode@tempPos^0,c
 18604                           
 18605                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18606  0060F0  0E00               	movlw	0
 18607  0060F2  6E23               	movwf	getHopCode@i^0,c
 18608  0060F4                     l19656:
 18609                           
 18610                           ; BSR set to: 0
 18611                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18612  0060F4  EE20 F004          	lfsr	2,4
 18613  0060F8  5016               	movf	getHopCode@data^0,w,c
 18614  0060FA  26D9               	addwf	fsr2l,f,c
 18615  0060FC  5017               	movf	(getHopCode@data+1)^0,w,c
 18616  0060FE  22DA               	addwfc	fsr2h,f,c
 18617  006100  5023               	movf	getHopCode@i^0,w,c
 18618  006102  0D06               	mullw	6
 18619  006104  0E00               	movlw	low _listSyncValues
 18620  006106  24F3               	addwf	243,w,c
 18621  006108  6EE1               	movwf	fsr1l,c
 18622  00610A  0E03               	movlw	high _listSyncValues
 18623  00610C  20F4               	addwfc	prodh,w,c
 18624  00610E  6EE2               	movwf	fsr1h,c
 18625  006110  50DE               	movf	postinc2,w,c
 18626  006112  18E6               	xorwf	postinc1,w,c
 18627  006114  E118               	bnz	l19662
 18628  006116  50DE               	movf	postinc2,w,c
 18629  006118  18E6               	xorwf	postinc1,w,c
 18630  00611A  E115               	bnz	l19662
 18631  00611C  50DE               	movf	postinc2,w,c
 18632  00611E  18E6               	xorwf	postinc1,w,c
 18633  006120  E112               	bnz	l19662
 18634  006122  50DE               	movf	postinc2,w,c
 18635  006124  18E6               	xorwf	postinc1,w,c
 18636  006126  A4D8               	btfss	status,2,c
 18637  006128  D00E               	goto	l19662
 18638                           
 18639                           ; BSR set to: 0
 18640                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18641  00612A  5023               	movf	getHopCode@i^0,w,c
 18642  00612C  0D06               	mullw	6
 18643  00612E  0E04               	movlw	low (_listSyncValues+4)
 18644  006130  24F3               	addwf	243,w,c
 18645  006132  6ED9               	movwf	fsr2l,c
 18646  006134  0E03               	movlw	high (_listSyncValues+4)
 18647  006136  20F4               	addwfc	prodh,w,c
 18648  006138  6EDA               	movwf	fsr2h,c
 18649  00613A  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18650  00613E  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18651                           
 18652                           ; BSR set to: 0
 18653                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18654  006142  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18655  006146                     l19662:
 18656                           
 18657                           ; BSR set to: 0
 18658                           ;keeloqDecrypt_MC50.c: 278:     }
 18659  006146  2A23               	incf	getHopCode@i^0,f,c
 18660                           
 18661                           ; BSR set to: 0
 18662  006148  0E18               	movlw	24
 18663  00614A  6423               	cpfsgt	getHopCode@i^0,c
 18664  00614C  D7D3               	goto	l19656
 18665                           
 18666                           ; BSR set to: 0
 18667                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18668  00614E  AE22               	btfss	getHopCode@tempPos^0,7,c
 18669  006150  D050               	goto	l19682
 18670                           
 18671                           ; BSR set to: 0
 18672                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18673  006152  EE20 F004          	lfsr	2,4
 18674  006156  5016               	movf	getHopCode@data^0,w,c
 18675  006158  26D9               	addwf	fsr2l,f,c
 18676  00615A  5017               	movf	(getHopCode@data+1)^0,w,c
 18677  00615C  22DA               	addwfc	fsr2h,f,c
 18678  00615E  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18679  006162  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18680  006166  0E00               	movlw	0
 18681  006168  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18682  00616A  0E06               	movlw	6
 18683  00616C  6E12               	movwf	___wmul@multiplicand^0,c
 18684  00616E  ECE5  F046         	call	___wmul	;wreg free
 18685  006172  0E00               	movlw	low _listSyncValues
 18686  006174  2410               	addwf	?___wmul^0,w,c
 18687  006176  6EE1               	movwf	fsr1l,c
 18688  006178  0E03               	movlw	high _listSyncValues
 18689  00617A  2011               	addwfc	(?___wmul+1)^0,w,c
 18690  00617C  6EE2               	movwf	fsr1h,c
 18691  00617E  CFDE FFE6          	movff	postinc2,postinc1
 18692  006182  CFDE FFE6          	movff	postinc2,postinc1
 18693  006186  CFDE FFE6          	movff	postinc2,postinc1
 18694  00618A  CFDE FFE6          	movff	postinc2,postinc1
 18695                           
 18696                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18697  00618E  EE20 F008          	lfsr	2,8
 18698  006192  5016               	movf	getHopCode@data^0,w,c
 18699  006194  26D9               	addwf	fsr2l,f,c
 18700  006196  5017               	movf	(getHopCode@data+1)^0,w,c
 18701  006198  22DA               	addwfc	fsr2h,f,c
 18702  00619A  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18703  00619E  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18704  0061A2  0E00               	movlw	0
 18705  0061A4  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18706  0061A6  0E06               	movlw	6
 18707  0061A8  6E12               	movwf	___wmul@multiplicand^0,c
 18708  0061AA  ECE5  F046         	call	___wmul	;wreg free
 18709  0061AE  0E04               	movlw	low (_listSyncValues+4)
 18710  0061B0  2410               	addwf	?___wmul^0,w,c
 18711  0061B2  6EE1               	movwf	fsr1l,c
 18712  0061B4  0E03               	movlw	high (_listSyncValues+4)
 18713  0061B6  2011               	addwfc	(?___wmul+1)^0,w,c
 18714  0061B8  6EE2               	movwf	fsr1h,c
 18715  0061BA  CFDE FFE6          	movff	postinc2,postinc1
 18716  0061BE  CFDD FFE5          	movff	postdec2,postdec1
 18717                           
 18718                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18719  0061C2  0100               	movlb	0	; () banked
 18720  0061C4  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18721  0061C6  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18722                           
 18723                           ; BSR set to: 0
 18724                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18725  0061C8  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18726  0061CA  E104               	bnz	u22540
 18727  0061CC  0E19               	movlw	25
 18728  0061CE  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18729  0061D0  A0D8               	btfss	status,0,c
 18730  0061D2  D004               	goto	l19676
 18731  0061D4                     u22540:
 18732                           
 18733                           ; BSR set to: 0
 18734                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18735  0061D4  0E00               	movlw	0
 18736  0061D6  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18737  0061D8  0E00               	movlw	0
 18738  0061DA  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18739  0061DC                     l19676:
 18740                           
 18741                           ; BSR set to: 0
 18742                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18743  0061DC  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18744  0061E0  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18745  0061E4  EC29  F048         	call	_ReqResync	;wreg free
 18746  0061E8  6E18               	movwf	??_getHopCode^0,c
 18747  0061EA  5018               	movf	??_getHopCode^0,w,c
 18748  0061EC  6E16               	movwf	?_getHopCode^0,c
 18749  0061EE  6A17               	clrf	(?_getHopCode+1)^0,c
 18750  0061F0  0012               	return	
 18751  0061F2                     l19682:
 18752                           
 18753                           ; BSR set to: 0
 18754                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18755  0061F2  5022               	movf	getHopCode@tempPos^0,w,c
 18756  0061F4  0D06               	mullw	6
 18757  0061F6  0E04               	movlw	low (_listSyncValues+4)
 18758  0061F8  24F3               	addwf	243,w,c
 18759  0061FA  6ED9               	movwf	fsr2l,c
 18760  0061FC  0E03               	movlw	high (_listSyncValues+4)
 18761  0061FE  20F4               	addwfc	prodh,w,c
 18762  006200  6EDA               	movwf	fsr2h,c
 18763  006202  C07C  FFDE         	movff	_Hop,postinc2
 18764  006206  C07D  FFDD         	movff	_Hop+1,postdec2
 18765                           
 18766                           ; BSR set to: 0
 18767                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18768  00620A  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18769  00620E  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18770  006212  0012               	return		;funcret
 18771  006214                     __end_of_getHopCode:
 18772                           	callstack 0
 18773                           
 18774 ;; *************** function _ReqResync *****************
 18775 ;; Defined at:
 18776 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18777 ;; Parameters:    Size  Location     Type
 18778 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18779 ;; Auto vars:     Size  Location     Type
 18780 ;;		None
 18781 ;; Return value:  Size  Location     Type
 18782 ;;                  1    wreg      enum E10730
 18783 ;; Registers used:
 18784 ;;		wreg, status,2, status,0
 18785 ;; Tracked objects:
 18786 ;;		On entry : 3F/0
 18787 ;;		On exit  : 3F/1
 18788 ;;		Unchanged: 0/0
 18789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18794 ;;Total ram usage:        2 bytes
 18795 ;; Hardware stack levels used: 1
 18796 ;; Hardware stack levels required when called: 4
 18797 ;; This function calls:
 18798 ;;		Nothing
 18799 ;; This function is called by:
 18800 ;;		_HopCHK
 18801 ;;		_getHopCode
 18802 ;; This function uses a non-reentrant model
 18803 ;;
 18804                           
 18805                           	psect	text68
 18806  009052                     __ptext68:
 18807                           	callstack 0
 18808  009052                     _ReqResync:
 18809                           	callstack 22
 18810                           
 18811                           ; BSR set to: 0
 18812                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18813                           
 18814                           ;incstack = 0
 18815  009052  0E01               	movlw	1
 18816  009054  0101               	movlb	1	; () banked
 18817  009056  6F97               	movwf	_F2Chance& (0+255),b
 18818                           
 18819                           ; BSR set to: 1
 18820                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18821  009058  0E01               	movlw	1
 18822  00905A  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18823  00905C  6F85               	movwf	_NextHop& (0+255),b
 18824  00905E  0E00               	movlw	0
 18825  009060  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18826  009062  6F86               	movwf	(_NextHop+1)& (0+255),b
 18827                           
 18828                           ; BSR set to: 1
 18829                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18830  009064  0E09               	movlw	9
 18831                           
 18832                           ; BSR set to: 1
 18833  009066  0012               	return		;funcret
 18834  009068                     __end_of_ReqResync:
 18835                           	callstack 0
 18836                           
 18837 ;; *************** function _DecCHK *****************
 18838 ;; Defined at:
 18839 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18840 ;; Parameters:    Size  Location     Type
 18841 ;;  data            2   15[COMRAM] PTR struct .
 18842 ;;		 -> classic_data(16), 
 18843 ;; Auto vars:     Size  Location     Type
 18844 ;;		None
 18845 ;; Return value:  Size  Location     Type
 18846 ;;                  1    wreg      _Bool 
 18847 ;; Registers used:
 18848 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18849 ;; Tracked objects:
 18850 ;;		On entry : 3F/0
 18851 ;;		On exit  : 3F/0
 18852 ;;		Unchanged: 3F/0
 18853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18856 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18857 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18858 ;;Total ram usage:        4 bytes
 18859 ;; Hardware stack levels used: 1
 18860 ;; Hardware stack levels required when called: 4
 18861 ;; This function calls:
 18862 ;;		Nothing
 18863 ;; This function is called by:
 18864 ;;		_keeloqDecryptPacket
 18865 ;; This function uses a non-reentrant model
 18866 ;;
 18867                           
 18868                           	psect	text69
 18869  008A30                     __ptext69:
 18870                           	callstack 0
 18871  008A30                     _DecCHK:
 18872                           	callstack 24
 18873                           
 18874                           ; BSR set to: 0
 18875                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18876                           
 18877                           ; BSR set to: 1
 18878                           ;incstack = 0
 18879  008A30  EE20 F00D          	lfsr	2,13
 18880  008A34  5010               	movf	DecCHK@data^0,w,c
 18881  008A36  26D9               	addwf	fsr2l,f,c
 18882  008A38  5011               	movf	(DecCHK@data+1)^0,w,c
 18883  008A3A  22DA               	addwfc	fsr2h,f,c
 18884  008A3C  50DF               	movf	indf2,w,c
 18885  008A3E  6E12               	movwf	??_DecCHK^0,c
 18886  008A40  EE20 F00C          	lfsr	2,12
 18887  008A44  5010               	movf	DecCHK@data^0,w,c
 18888  008A46  26D9               	addwf	fsr2l,f,c
 18889  008A48  5011               	movf	(DecCHK@data+1)^0,w,c
 18890  008A4A  22DA               	addwfc	fsr2h,f,c
 18891  008A4C  50DF               	movf	indf2,w,c
 18892  008A4E  1812               	xorwf	??_DecCHK^0,w,c
 18893  008A50  6E13               	movwf	(??_DecCHK+1)^0,c
 18894  008A52  0E0F               	movlw	15
 18895  008A54  1613               	andwf	(??_DecCHK+1)^0,f,c
 18896  008A56  B4D8               	btfsc	status,2,c
 18897  008A58  D002               	goto	l20150
 18898                           
 18899                           ; BSR set to: 0
 18900                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18901  008A5A  0E00               	movlw	0
 18902  008A5C  0012               	return	
 18903  008A5E                     l20150:
 18904                           
 18905                           ; BSR set to: 0
 18906                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18907  008A5E  0E01               	movlw	1
 18908                           
 18909                           ; BSR set to: 0
 18910  008A60  0012               	return		;funcret
 18911  008A62                     __end_of_DecCHK:
 18912                           	callstack 0
 18913                           
 18914 ;; *************** function _DecryptPacket_12BIT *****************
 18915 ;; Defined at:
 18916 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18917 ;; Parameters:    Size  Location     Type
 18918 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18919 ;;		 -> BufferRF(9), 
 18920 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18921 ;;		 -> classic_data(16), 
 18922 ;; Auto vars:     Size  Location     Type
 18923 ;;  commandType     1   12[BANK0 ] enum E10539
 18924 ;; Return value:  Size  Location     Type
 18925 ;;                  1    wreg      enum E10539
 18926 ;; Registers used:
 18927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18928 ;; Tracked objects:
 18929 ;;		On entry : 3F/0
 18930 ;;		On exit  : 3F/0
 18931 ;;		Unchanged: 0/0
 18932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18933 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18934 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18936 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18937 ;;Total ram usage:        5 bytes
 18938 ;; Hardware stack levels used: 1
 18939 ;; Hardware stack levels required when called: 14
 18940 ;; This function calls:
 18941 ;;		_memcpy
 18942 ;;		_validateRemoteSerialNumber
 18943 ;; This function is called by:
 18944 ;;		_readRFButtons
 18945 ;; This function uses a non-reentrant model
 18946 ;;
 18947                           
 18948                           	psect	text70
 18949  007642                     __ptext70:
 18950                           	callstack 0
 18951  007642                     _DecryptPacket_12BIT:
 18952                           	callstack 15
 18953                           
 18954                           ; BSR set to: 0
 18955                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 18956                           
 18957                           ; BSR set to: 0
 18958                           ;incstack = 0
 18959  007642  0E04               	movlw	4
 18960  007644  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18961  007646  6E10               	movwf	memcpy@d1^0,c
 18962  007648  0E00               	movlw	0
 18963  00764A  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18964  00764C  6E11               	movwf	(memcpy@d1+1)^0,c
 18965  00764E  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 18966  007652  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 18967  007656  0E00               	movlw	0
 18968  007658  6E15               	movwf	(memcpy@n+1)^0,c
 18969  00765A  0E04               	movlw	4
 18970  00765C  6E14               	movwf	memcpy@n^0,c
 18971  00765E  ECE4  F043         	call	_memcpy	;wreg free
 18972                           
 18973                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 18974  007662  0100               	movlb	0	; () banked
 18975  007664  EE20 F004          	lfsr	2,4
 18976  007668  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18977  00766A  26D9               	addwf	fsr2l,f,c
 18978  00766C  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18979  00766E  22DA               	addwfc	fsr2h,f,c
 18980  007670  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 18981  007674  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 18982  007678  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 18983  00767C  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 18984  007680  0E00               	movlw	0
 18985  007682  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 18986  007684  0E0F               	movlw	15
 18987  007686  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18988  007688  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 18989  00768A  0E00               	movlw	0
 18990  00768C  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18991  00768E  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 18992  007690  EC59  F02A         	call	_validateRemoteSerialNumber	;wreg free
 18993  007694  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 18994                           
 18995                           ; BSR set to: 0
 18996                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 18997  007696  EE20 F00C          	lfsr	2,12
 18998  00769A  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18999  00769C  26D9               	addwf	fsr2l,f,c
 19000  00769E  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19001  0076A0  22DA               	addwfc	fsr2h,f,c
 19002  0076A2  0E00               	movlw	0
 19003  0076A4  6EDF               	movwf	indf2,c
 19004                           
 19005                           ; BSR set to: 0
 19006                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 19007  0076A6  EE20 F008          	lfsr	2,8
 19008  0076AA  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19009  0076AC  26D9               	addwf	fsr2l,f,c
 19010  0076AE  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19011  0076B0  22DA               	addwfc	fsr2h,f,c
 19012  0076B2  0E00               	movlw	0
 19013  0076B4  6EDE               	movwf	postinc2,c
 19014  0076B6  0E00               	movlw	0
 19015  0076B8  6EDD               	movwf	postdec2,c
 19016                           
 19017                           ; BSR set to: 0
 19018                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 19019  0076BA  EE20 F00E          	lfsr	2,14
 19020  0076BE  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19021  0076C0  26D9               	addwf	fsr2l,f,c
 19022  0076C2  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19023  0076C4  22DA               	addwfc	fsr2h,f,c
 19024  0076C6  0E02               	movlw	2
 19025  0076C8  6EDF               	movwf	indf2,c
 19026                           
 19027                           ; BSR set to: 0
 19028                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 19029  0076CA  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 19030                           
 19031                           ; BSR set to: 0
 19032  0076CC  0012               	return		;funcret
 19033  0076CE                     __end_of_DecryptPacket_12BIT:
 19034                           	callstack 0
 19035                           
 19036 ;; *************** function _validateRemoteSerialNumber *****************
 19037 ;; Defined at:
 19038 ;;		line 27 in file "controlMemory_MC50.c"
 19039 ;; Parameters:    Size  Location     Type
 19040 ;;  serial          4   45[COMRAM] unsigned long 
 19041 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 19042 ;;  position        2   50[COMRAM] PTR unsigned char 
 19043 ;;		 -> controlSelectRemote@pos(1), classic_data(16), 
 19044 ;; Auto vars:     Size  Location     Type
 19045 ;;  mask            4   52[COMRAM] unsigned long 
 19046 ;;  i               1   57[COMRAM] unsigned char 
 19047 ;;  j               1   56[COMRAM] unsigned char 
 19048 ;; Return value:  Size  Location     Type
 19049 ;;                  1    wreg      enum E10539
 19050 ;; Registers used:
 19051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19052 ;; Tracked objects:
 19053 ;;		On entry : 3F/0
 19054 ;;		On exit  : 3F/0
 19055 ;;		Unchanged: 0/0
 19056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19057 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19058 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19059 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19060 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19061 ;;Total ram usage:       21 bytes
 19062 ;; Hardware stack levels used: 1
 19063 ;; Hardware stack levels required when called: 13
 19064 ;; This function calls:
 19065 ;;		_i2c_readDataBlock
 19066 ;; This function is called by:
 19067 ;;		_keeloqDecryptPacket
 19068 ;;		_DecryptPacket_12BIT
 19069 ;;		_controlSelectRemote
 19070 ;; This function uses a non-reentrant model
 19071 ;;
 19072                           
 19073                           	psect	text71
 19074  0054B2                     __ptext71:
 19075                           	callstack 0
 19076  0054B2                     _validateRemoteSerialNumber:
 19077                           	callstack 14
 19078                           
 19079                           ; BSR set to: 0
 19080                           ;controlMemory_MC50.c: 29:     char j=0;
 19081                           
 19082                           ; BSR set to: 0
 19083                           ;incstack = 0
 19084  0054B2  0E00               	movlw	0
 19085  0054B4  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19086                           
 19087                           ; BSR set to: 0
 19088                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 19089  0054B6  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 19090  0054B8  A4D8               	btfss	status,2,c
 19091  0054BA  D009               	goto	l1436
 19092                           
 19093                           ; BSR set to: 0
 19094                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 19095  0054BC  0EFF               	movlw	255
 19096  0054BE  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 19097  0054C0  0EFF               	movlw	255
 19098  0054C2  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 19099  0054C4  0EFF               	movlw	255
 19100  0054C6  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 19101  0054C8  0E0F               	movlw	15
 19102  0054CA  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 19103                           
 19104                           ;controlMemory_MC50.c: 36:     }
 19105  0054CC  D004               	goto	l19510
 19106  0054CE                     l1436:
 19107                           
 19108                           ; BSR set to: 0
 19109                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 19110  0054CE  6835               	setf	validateRemoteSerialNumber@mask^0,c
 19111  0054D0  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 19112  0054D2  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 19113  0054D4  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 19114  0054D6                     l19510:
 19115                           
 19116                           ; BSR set to: 0
 19117                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 19118  0054D6  0E00               	movlw	0
 19119  0054D8  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 19120  0054DA  D056               	goto	l19528
 19121  0054DC                     l19512:
 19122                           
 19123                           ; BSR set to: 0
 19124                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 19125  0054DC  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 19126  0054E0  0E03               	movlw	3
 19127  0054E2  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 19128  0054E4  A4D8               	btfss	status,2,c
 19129  0054E6  D01C               	goto	l19518
 19130                           
 19131                           ; BSR set to: 0
 19132                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 19133  0054E8  0E00               	movlw	0
 19134  0054EA  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19135                           
 19136                           ; BSR set to: 0
 19137                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 19138  0054EC  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 19139  0054EE  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 19140  0054F0  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 19141  0054F2  90D8               	bcf	status,0,c
 19142  0054F4  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19143  0054F6  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19144  0054F8  90D8               	bcf	status,0,c
 19145  0054FA  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19146  0054FC  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19147  0054FE  0E00               	movlw	0
 19148  005500  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 19149  005502  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19150  005504  0E02               	movlw	2
 19151  005506  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19152  005508  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19153  00550A  0EA0               	movlw	low _memoryTEMP
 19154  00550C  6E24               	movwf	i2c_readDataBlock@data^0,c
 19155  00550E  0E02               	movlw	high _memoryTEMP
 19156  005510  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19157  005512  0E00               	movlw	0
 19158  005514  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19159  005516  0E10               	movlw	16
 19160  005518  6E26               	movwf	i2c_readDataBlock@len^0,c
 19161  00551A  0E50               	movlw	80
 19162  00551C  ECB1  F03E         	call	_i2c_readDataBlock
 19163  005520                     l19518:
 19164                           
 19165                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 19166  005520  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 19167  005522  0D04               	mullw	4
 19168  005524  0EA0               	movlw	low _memoryTEMP
 19169  005526  24F3               	addwf	243,w,c
 19170  005528  6ED9               	movwf	fsr2l,c
 19171  00552A  0E02               	movlw	high _memoryTEMP
 19172  00552C  20F4               	addwfc	prodh,w,c
 19173  00552E  6EDA               	movwf	fsr2h,c
 19174  005530  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 19175  005534  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 19176  005538  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 19177  00553C  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 19178  005540  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 19179  005542  0100               	movlb	0	; () banked
 19180  005544  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 19181  005546  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 19182  005548  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 19183  00554A  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19184  00554C  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 19185  00554E  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 19186  005550  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 19187  005552  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 19188  005554  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 19189  005556  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 19190  005558  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 19191  00555A  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 19192  00555C  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 19193  00555E  E112               	bnz	l19526
 19194  005560  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 19195  005562  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 19196  005564  E10F               	bnz	l19526
 19197  005566  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 19198  005568  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 19199  00556A  E10C               	bnz	l19526
 19200  00556C  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 19201  00556E  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 19202  005570  A4D8               	btfss	status,2,c
 19203  005572  D008               	goto	l19526
 19204                           
 19205                           ; BSR set to: 0
 19206                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 19207  005574  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 19208  005578  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 19209  00557C  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 19210                           
 19211                           ; BSR set to: 0
 19212                           ;controlMemory_MC50.c: 54:             return TypeFull;
 19213  005580  0E01               	movlw	1
 19214  005582  0012               	return	
 19215  005584                     l19526:
 19216                           
 19217                           ; BSR set to: 0
 19218                           ;controlMemory_MC50.c: 57:         j++;
 19219  005584  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 19220                           
 19221                           ;controlMemory_MC50.c: 59:     }
 19222  005586  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 19223  005588                     l19528:
 19224                           
 19225                           ; BSR set to: 0
 19226  005588  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 19227  00558A  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 19228  00558C  A0D8               	btfss	status,0,c
 19229  00558E  D7A6               	goto	l19512
 19230                           
 19231                           ; BSR set to: 0
 19232                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 19233  005590  0E00               	movlw	0
 19234  005592  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 19235  005594  D056               	goto	l19548
 19236  005596                     l19532:
 19237                           
 19238                           ; BSR set to: 0
 19239                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 19240  005596  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 19241  00559A  0E03               	movlw	3
 19242  00559C  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 19243  00559E  A4D8               	btfss	status,2,c
 19244  0055A0  D01C               	goto	l19538
 19245                           
 19246                           ; BSR set to: 0
 19247                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 19248  0055A2  0E00               	movlw	0
 19249  0055A4  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19250                           
 19251                           ; BSR set to: 0
 19252                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 19253  0055A6  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 19254  0055A8  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 19255  0055AA  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 19256  0055AC  90D8               	bcf	status,0,c
 19257  0055AE  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19258  0055B0  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19259  0055B2  90D8               	bcf	status,0,c
 19260  0055B4  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19261  0055B6  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19262  0055B8  0E00               	movlw	0
 19263  0055BA  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 19264  0055BC  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19265  0055BE  0E05               	movlw	5
 19266  0055C0  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19267  0055C2  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19268  0055C4  0EA0               	movlw	low _memoryTEMP
 19269  0055C6  6E24               	movwf	i2c_readDataBlock@data^0,c
 19270  0055C8  0E02               	movlw	high _memoryTEMP
 19271  0055CA  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19272  0055CC  0E00               	movlw	0
 19273  0055CE  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19274  0055D0  0E10               	movlw	16
 19275  0055D2  6E26               	movwf	i2c_readDataBlock@len^0,c
 19276  0055D4  0E50               	movlw	80
 19277  0055D6  ECB1  F03E         	call	_i2c_readDataBlock
 19278  0055DA                     l19538:
 19279                           
 19280                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 19281  0055DA  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 19282  0055DC  0D04               	mullw	4
 19283  0055DE  0EA0               	movlw	low _memoryTEMP
 19284  0055E0  24F3               	addwf	243,w,c
 19285  0055E2  6ED9               	movwf	fsr2l,c
 19286  0055E4  0E02               	movlw	high _memoryTEMP
 19287  0055E6  20F4               	addwfc	prodh,w,c
 19288  0055E8  6EDA               	movwf	fsr2h,c
 19289  0055EA  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 19290  0055EE  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 19291  0055F2  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 19292  0055F6  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 19293  0055FA  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 19294  0055FC  0100               	movlb	0	; () banked
 19295  0055FE  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 19296  005600  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 19297  005602  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 19298  005604  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19299  005606  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 19300  005608  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 19301  00560A  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 19302  00560C  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 19303  00560E  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 19304  005610  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 19305  005612  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 19306  005614  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 19307  005616  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 19308  005618  E112               	bnz	l19546
 19309  00561A  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 19310  00561C  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 19311  00561E  E10F               	bnz	l19546
 19312  005620  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 19313  005622  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 19314  005624  E10C               	bnz	l19546
 19315  005626  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 19316  005628  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 19317  00562A  A4D8               	btfss	status,2,c
 19318  00562C  D008               	goto	l19546
 19319                           
 19320                           ; BSR set to: 0
 19321                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 19322  00562E  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 19323  005632  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 19324  005636  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 19325                           
 19326                           ; BSR set to: 0
 19327                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 19328  00563A  0E02               	movlw	2
 19329  00563C  0012               	return	
 19330  00563E                     l19546:
 19331                           
 19332                           ; BSR set to: 0
 19333                           ;controlMemory_MC50.c: 75:         j++;
 19334  00563E  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 19335                           
 19336                           ;controlMemory_MC50.c: 76:     }
 19337  005640  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 19338  005642                     l19548:
 19339                           
 19340                           ; BSR set to: 0
 19341  005642  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 19342  005644  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 19343  005646  A0D8               	btfss	status,0,c
 19344  005648  D7A6               	goto	l19532
 19345                           
 19346                           ; BSR set to: 0
 19347                           ;controlMemory_MC50.c: 78:     return NoCMD;
 19348  00564A  0E00               	movlw	0
 19349                           
 19350                           ; BSR set to: 0
 19351  00564C  0012               	return		;funcret
 19352  00564E                     __end_of_validateRemoteSerialNumber:
 19353                           	callstack 0
 19354                           
 19355 ;; *************** function _readInputs *****************
 19356 ;; Defined at:
 19357 ;;		line 528 in file "inputs_MC50.c"
 19358 ;; Parameters:    Size  Location     Type
 19359 ;;		None
 19360 ;; Auto vars:     Size  Location     Type
 19361 ;;		None
 19362 ;; Return value:  Size  Location     Type
 19363 ;;                  1    wreg      void 
 19364 ;; Registers used:
 19365 ;;		wreg, status,2, status,0
 19366 ;; Tracked objects:
 19367 ;;		On entry : 3F/1
 19368 ;;		On exit  : 3E/0
 19369 ;;		Unchanged: 0/0
 19370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19375 ;;Total ram usage:        0 bytes
 19376 ;; Hardware stack levels used: 1
 19377 ;; Hardware stack levels required when called: 4
 19378 ;; This function calls:
 19379 ;;		Nothing
 19380 ;; This function is called by:
 19381 ;;		_main
 19382 ;; This function uses a non-reentrant model
 19383 ;;
 19384                           
 19385                           	psect	text72
 19386  0067AC                     __ptext72:
 19387                           	callstack 0
 19388  0067AC                     _readInputs:
 19389                           	callstack 26
 19390                           
 19391                           ; BSR set to: 1
 19392                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 19393                           
 19394                           ; BSR set to: 0
 19395                           ;incstack = 0
 19396  0067AC  0100               	movlb	0	; () banked
 19397  0067AE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19398  0067B0  A4D8               	btfss	status,2,c
 19399  0067B2  D006               	goto	l16574
 19400                           
 19401                           ; BSR set to: 0
 19402  0067B4  0E00               	movlw	0
 19403  0067B6  B28D               	btfsc	141,1,c	;volatile
 19404  0067B8  0E01               	movlw	1
 19405  0067BA  0101               	movlb	1	; () banked
 19406  0067BC  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19407  0067BE  D005               	goto	l16576
 19408  0067C0                     l16574:
 19409                           
 19410                           ; BSR set to: 0
 19411  0067C0  0E00               	movlw	0
 19412  0067C2  B48D               	btfsc	141,2,c	;volatile
 19413  0067C4  0E01               	movlw	1
 19414  0067C6  0101               	movlb	1	; () banked
 19415  0067C8  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19416  0067CA                     l16576:
 19417                           
 19418                           ; BSR set to: 1
 19419                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 19420  0067CA  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 19421  0067CC  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 19422  0067CE  A4D8               	btfss	status,2,c
 19423  0067D0  D002               	goto	l1726
 19424                           
 19425                           ; BSR set to: 1
 19426                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 19427  0067D2  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 19428                           
 19429                           ;inputs_MC50.c: 544:     }
 19430  0067D4  D004               	goto	l1727
 19431  0067D6                     l1726:
 19432                           
 19433                           ; BSR set to: 1
 19434                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 19435  0067D6  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 19436                           
 19437                           ; BSR set to: 1
 19438                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 19439  0067DA  0E00               	movlw	0
 19440  0067DC  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 19441  0067DE                     l1727:
 19442                           
 19443                           ; BSR set to: 1
 19444                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 19445  0067DE  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 19446  0067E0  A4D8               	btfss	status,2,c
 19447                           
 19448                           ; BSR set to: 1
 19449                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 19450  0067E2  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 19451                           
 19452                           ; BSR set to: 1
 19453                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 19454  0067E6  0100               	movlb	0	; () banked
 19455  0067E8  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19456  0067EA  A4D8               	btfss	status,2,c
 19457  0067EC  D006               	goto	l16588
 19458                           
 19459                           ; BSR set to: 0
 19460  0067EE  0E00               	movlw	0
 19461  0067F0  B48D               	btfsc	141,2,c	;volatile
 19462  0067F2  0E01               	movlw	1
 19463  0067F4  0101               	movlb	1	; () banked
 19464  0067F6  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19465  0067F8  D005               	goto	l16590
 19466  0067FA                     l16588:
 19467                           
 19468                           ; BSR set to: 0
 19469  0067FA  0E00               	movlw	0
 19470  0067FC  B28D               	btfsc	141,1,c	;volatile
 19471  0067FE  0E01               	movlw	1
 19472  006800  0101               	movlb	1	; () banked
 19473  006802  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19474  006804                     l16590:
 19475                           
 19476                           ; BSR set to: 1
 19477                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 19478  006804  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 19479  006806  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 19480  006808  A4D8               	btfss	status,2,c
 19481  00680A  D002               	goto	l1731
 19482                           
 19483                           ; BSR set to: 1
 19484                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 19485  00680C  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 19486                           
 19487                           ;inputs_MC50.c: 573:     }
 19488  00680E  D004               	goto	l1732
 19489  006810                     l1731:
 19490                           
 19491                           ; BSR set to: 1
 19492                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 19493  006810  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 19494                           
 19495                           ; BSR set to: 1
 19496                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 19497  006814  0E00               	movlw	0
 19498  006816  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 19499  006818                     l1732:
 19500                           
 19501                           ; BSR set to: 1
 19502                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 19503  006818  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 19504  00681A  A4D8               	btfss	status,2,c
 19505                           
 19506                           ; BSR set to: 1
 19507                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 19508  00681C  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 19509                           
 19510                           ; BSR set to: 1
 19511                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 19512  006820  0E00               	movlw	0
 19513  006822  B88D               	btfsc	141,4,c	;volatile
 19514  006824  0E01               	movlw	1
 19515  006826  6F6A               	movwf	_security& (0+255),b	;volatile
 19516                           
 19517                           ; BSR set to: 1
 19518                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19519  006828  516A               	movf	_security& (0+255),w,b	;volatile
 19520  00682A  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19521  00682C  A4D8               	btfss	status,2,c
 19522  00682E  D002               	goto	l1734
 19523                           
 19524                           ; BSR set to: 1
 19525                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19526  006830  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 19527                           
 19528                           ;inputs_MC50.c: 597:     }
 19529  006832  D004               	goto	l1735
 19530  006834                     l1734:
 19531                           
 19532                           ; BSR set to: 1
 19533                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19534  006834  C16A  F16B         	movff	_security,_security+1	;volatile
 19535                           
 19536                           ; BSR set to: 1
 19537                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19538  006838  0E00               	movlw	0
 19539  00683A  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 19540  00683C                     l1735:
 19541                           
 19542                           ; BSR set to: 1
 19543                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19544  00683C  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 19545  00683E  A4D8               	btfss	status,2,c
 19546                           
 19547                           ; BSR set to: 1
 19548                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19549  006840  C16A  F101         	movff	_security,_var_sys+1	;volatile
 19550                           
 19551                           ; BSR set to: 1
 19552                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19553  006844  0E00               	movlw	0
 19554  006846  BA8D               	btfsc	141,5,c	;volatile
 19555  006848  0E01               	movlw	1
 19556  00684A  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 19557                           
 19558                           ; BSR set to: 1
 19559                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19560  00684C  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19561  00684E  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19562  006850  A4D8               	btfss	status,2,c
 19563  006852  D002               	goto	l1737
 19564                           
 19565                           ; BSR set to: 1
 19566                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19567  006854  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19568                           
 19569                           ;inputs_MC50.c: 619:     }
 19570  006856  D004               	goto	l1738
 19571  006858                     l1737:
 19572                           
 19573                           ; BSR set to: 1
 19574                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19575  006858  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19576                           
 19577                           ; BSR set to: 1
 19578                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19579  00685C  0E00               	movlw	0
 19580  00685E  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19581  006860                     l1738:
 19582                           
 19583                           ; BSR set to: 1
 19584                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19585  006860  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19586  006862  A4D8               	btfss	status,2,c
 19587                           
 19588                           ; BSR set to: 1
 19589                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19590  006864  C16D  F170         	movff	_security+3,_security+6	;volatile
 19591                           
 19592                           ; BSR set to: 1
 19593                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19594  006868  0E00               	movlw	0
 19595  00686A  BC8D               	btfsc	141,6,c	;volatile
 19596  00686C  0E01               	movlw	1
 19597  00686E  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19598                           
 19599                           ; BSR set to: 1
 19600                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19601  006870  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19602  006872  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19603  006874  A4D8               	btfss	status,2,c
 19604  006876  D002               	goto	l1740
 19605                           
 19606                           ; BSR set to: 1
 19607                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19608  006878  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19609                           
 19610                           ;inputs_MC50.c: 640:     }
 19611  00687A  D004               	goto	l1741
 19612  00687C                     l1740:
 19613                           
 19614                           ; BSR set to: 1
 19615                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19616  00687C  C171  F172         	movff	_security+7,_security+8	;volatile
 19617                           
 19618                           ; BSR set to: 1
 19619                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19620  006880  0E00               	movlw	0
 19621  006882  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19622  006884                     l1741:
 19623                           
 19624                           ; BSR set to: 1
 19625                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19626  006884  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19627  006886  A4D8               	btfss	status,2,c
 19628                           
 19629                           ; BSR set to: 1
 19630                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19631  006888  C171  F174         	movff	_security+7,_security+10	;volatile
 19632                           
 19633                           ; BSR set to: 1
 19634                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19635  00688C  0100               	movlb	0	; () banked
 19636  00688E  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19637  006890  A4D8               	btfss	status,2,c
 19638  006892  D00D               	goto	l1743
 19639                           
 19640                           ; BSR set to: 0
 19641                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19642  006894  0101               	movlb	1	; () banked
 19643  006896  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19644  006898  A4D8               	btfss	status,2,c
 19645  00689A  D006               	goto	l16636
 19646                           
 19647                           ; BSR set to: 1
 19648  00689C  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19649  00689E  A4D8               	btfss	status,2,c
 19650  0068A0  D003               	goto	l16636
 19651                           
 19652                           ; BSR set to: 1
 19653                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19654  0068A2  0E00               	movlw	0
 19655  0068A4  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19656                           
 19657                           ;inputs_MC50.c: 660:         }
 19658  0068A6  0012               	return	
 19659  0068A8                     l16636:
 19660                           
 19661                           ; BSR set to: 1
 19662                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19663  0068A8  0E01               	movlw	1
 19664  0068AA  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19665  0068AC  0012               	return	
 19666  0068AE                     l1743:
 19667                           
 19668                           ; BSR set to: 0
 19669                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19670  0068AE  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19671  0068B2  0012               	return		;funcret
 19672  0068B4                     __end_of_readInputs:
 19673                           	callstack 0
 19674                           
 19675 ;; *************** function _loadNVM_VarSystem *****************
 19676 ;; Defined at:
 19677 ;;		line 139 in file "controlMemory_MC50.c"
 19678 ;; Parameters:    Size  Location     Type
 19679 ;;		None
 19680 ;; Auto vars:     Size  Location     Type
 19681 ;;		None
 19682 ;; Return value:  Size  Location     Type
 19683 ;;                  1    wreg      void 
 19684 ;; Registers used:
 19685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19686 ;; Tracked objects:
 19687 ;;		On entry : 3F/0
 19688 ;;		On exit  : 0/0
 19689 ;;		Unchanged: 0/0
 19690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19695 ;;Total ram usage:        0 bytes
 19696 ;; Hardware stack levels used: 1
 19697 ;; Hardware stack levels required when called: 15
 19698 ;; This function calls:
 19699 ;;		_I2C1_Read1ByteRegister
 19700 ;;		_ResetDefaultMemory
 19701 ;;		_SaveNVM_VarSystem
 19702 ;;		_checkNVM_VarSystem
 19703 ;;		_i2c_readDataBlock
 19704 ;; This function is called by:
 19705 ;;		_main
 19706 ;; This function uses a non-reentrant model
 19707 ;;
 19708                           
 19709                           	psect	text73
 19710  006214                     __ptext73:
 19711                           	callstack 0
 19712  006214                     _loadNVM_VarSystem:
 19713                           	callstack 15
 19714                           
 19715                           ; BSR set to: 0
 19716                           ;controlMemory_MC50.c: 141:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19717                           
 19718                           ;incstack = 0
 19719  006214  0E00               	movlw	0
 19720  006216  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19721  006218  0E50               	movlw	80
 19722  00621A  EC5D  F041         	call	_I2C1_Read1ByteRegister
 19723  00621E  0AFF               	xorlw	255
 19724  006220  A4D8               	btfss	status,2,c
 19725  006222  D04C               	goto	l22608
 19726  006224  0E10               	movlw	16
 19727  006226  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19728  006228  0E50               	movlw	80
 19729  00622A  EC5D  F041         	call	_I2C1_Read1ByteRegister
 19730  00622E  0AFF               	xorlw	255
 19731  006230  A4D8               	btfss	status,2,c
 19732  006232  D044               	goto	l22608
 19733                           
 19734                           ;controlMemory_MC50.c: 142:     {;controlMemory_MC50.c: 143:         ResetDefaultMemory(
      +                          SC);
 19735  006234  0E00               	movlw	0
 19736  006236  EC8C  F02D         	call	_ResetDefaultMemory
 19737                           
 19738                           ;controlMemory_MC50.c: 144:         var_sys_NVM.learningTimeToClose = 0;
 19739  00623A  0E00               	movlw	0
 19740  00623C  0100               	movlb	0	; () banked
 19741  00623E  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19742  006240  0E00               	movlw	0
 19743  006242  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19744  006244  0E00               	movlw	0
 19745  006246  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19746  006248  0E00               	movlw	0
 19747  00624A  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19748                           
 19749                           ; BSR set to: 0
 19750                           ;controlMemory_MC50.c: 145:         var_sys_NVM.learningTimeToOpen = 0;
 19751  00624C  0E00               	movlw	0
 19752  00624E  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19753  006250  0E00               	movlw	0
 19754  006252  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19755  006254  0E00               	movlw	0
 19756  006256  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19757  006258  0E00               	movlw	0
 19758  00625A  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19759                           
 19760                           ; BSR set to: 0
 19761                           ;controlMemory_MC50.c: 146:         var_sys_NVM.learningCurrentNormalClose = 0;
 19762  00625C  0E00               	movlw	0
 19763  00625E  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19764  006260  0E00               	movlw	0
 19765  006262  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19766                           
 19767                           ; BSR set to: 0
 19768                           ;controlMemory_MC50.c: 147:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19769  006264  0E00               	movlw	0
 19770  006266  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19771  006268  0E00               	movlw	0
 19772  00626A  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19773                           
 19774                           ; BSR set to: 0
 19775                           ;controlMemory_MC50.c: 148:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19776  00626C  0E00               	movlw	0
 19777  00626E  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19778  006270  0E00               	movlw	0
 19779  006272  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19780  006274  0E00               	movlw	0
 19781  006276  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19782  006278  0E00               	movlw	0
 19783  00627A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19784                           
 19785                           ; BSR set to: 0
 19786                           ;controlMemory_MC50.c: 149:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19787  00627C  0E00               	movlw	0
 19788  00627E  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19789  006280  0E00               	movlw	0
 19790  006282  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19791  006284  0E00               	movlw	0
 19792  006286  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19793  006288  0E00               	movlw	0
 19794  00628A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19795                           
 19796                           ;controlMemory_MC50.c: 150:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19797  00628C  0E03               	movlw	3
 19798  00628E  ECE2  F044         	call	_SaveNVM_VarSystem
 19799                           
 19800                           ;controlMemory_MC50.c: 151:         var_sys_NVM.positionRemotesFull = 0;
 19801  006292  0E00               	movlw	0
 19802  006294  0100               	movlb	0	; () banked
 19803  006296  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19804                           
 19805                           ; BSR set to: 0
 19806                           ;controlMemory_MC50.c: 152:         var_sys_NVM.positionRemotesWalk = 0;
 19807  006298  0E00               	movlw	0
 19808  00629A  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19809                           
 19810                           ; BSR set to: 0
 19811                           ;controlMemory_MC50.c: 153:         var_sys_NVM.OnlyRollingCode = NO;
 19812  00629C  0E00               	movlw	0
 19813  00629E  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19814                           
 19815                           ; BSR set to: 0
 19816                           ;controlMemory_MC50.c: 154:         var_sys_NVM.counterMoves = 0;
 19817  0062A0  0E00               	movlw	0
 19818  0062A2  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19819  0062A4  0E00               	movlw	0
 19820  0062A6  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19821  0062A8  0E00               	movlw	0
 19822  0062AA  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19823  0062AC  0E00               	movlw	0
 19824  0062AE  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19825                           
 19826                           ;controlMemory_MC50.c: 155:        SaveNVM_VarSystem(pageMemoryCounters);
 19827  0062B0  0E02               	movlw	2
 19828  0062B2  ECE2  F044         	call	_SaveNVM_VarSystem
 19829                           
 19830                           ;controlMemory_MC50.c: 157:          var_sys_NVM.TypeofMotor = 0;
 19831  0062B6  0E00               	movlw	0
 19832  0062B8  0100               	movlb	0	; () banked
 19833  0062BA  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19834  0062BC                     l22608:
 19835                           
 19836                           ;controlMemory_MC50.c: 160:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19837  0062BC  0E00               	movlw	0
 19838  0062BE  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19839  0062C0  0E00               	movlw	0
 19840  0062C2  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19841  0062C4  0E98               	movlw	low _var_sys_NVM
 19842  0062C6  6E24               	movwf	i2c_readDataBlock@data^0,c
 19843  0062C8  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19844  0062CA  0E00               	movlw	0
 19845  0062CC  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19846  0062CE  0E10               	movlw	16
 19847  0062D0  6E26               	movwf	i2c_readDataBlock@len^0,c
 19848  0062D2  0E50               	movlw	80
 19849  0062D4  ECB1  F03E         	call	_i2c_readDataBlock
 19850                           
 19851                           ;controlMemory_MC50.c: 161:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19852  0062D8  0E00               	movlw	0
 19853  0062DA  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19854  0062DC  0E10               	movlw	16
 19855  0062DE  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19856  0062E0  0EA8               	movlw	low (_var_sys_NVM+16)
 19857  0062E2  6E24               	movwf	i2c_readDataBlock@data^0,c
 19858  0062E4  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19859  0062E6  0E00               	movlw	0
 19860  0062E8  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19861  0062EA  0E10               	movlw	16
 19862  0062EC  6E26               	movwf	i2c_readDataBlock@len^0,c
 19863  0062EE  0E50               	movlw	80
 19864  0062F0  ECB1  F03E         	call	_i2c_readDataBlock
 19865                           
 19866                           ;controlMemory_MC50.c: 162:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19867  0062F4  0E00               	movlw	0
 19868  0062F6  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19869  0062F8  0E20               	movlw	32
 19870  0062FA  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19871  0062FC  0EB8               	movlw	low (_var_sys_NVM+32)
 19872  0062FE  6E24               	movwf	i2c_readDataBlock@data^0,c
 19873  006300  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19874  006302  0E00               	movlw	0
 19875  006304  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19876  006306  0E10               	movlw	16
 19877  006308  6E26               	movwf	i2c_readDataBlock@len^0,c
 19878  00630A  0E50               	movlw	80
 19879  00630C  ECB1  F03E         	call	_i2c_readDataBlock
 19880                           
 19881                           ;controlMemory_MC50.c: 163:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19882  006310  0E00               	movlw	0
 19883  006312  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19884  006314  0E30               	movlw	48
 19885  006316  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19886  006318  0EC8               	movlw	low (_var_sys_NVM+48)
 19887  00631A  6E24               	movwf	i2c_readDataBlock@data^0,c
 19888  00631C  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19889  00631E  0E00               	movlw	0
 19890  006320  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19891  006322  0E10               	movlw	16
 19892  006324  6E26               	movwf	i2c_readDataBlock@len^0,c
 19893  006326  0E50               	movlw	80
 19894  006328  ECB1  F03E         	call	_i2c_readDataBlock
 19895                           
 19896                           ;controlMemory_MC50.c: 166:     checkNVM_VarSystem();
 19897  00632C  EC89  F029         	call	_checkNVM_VarSystem	;wreg free
 19898                           
 19899                           ;controlMemory_MC50.c: 168:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19900  006330  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19901  006334  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19902  006338  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19903  00633C  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19904  006340  0012               	return		;funcret
 19905  006342                     __end_of_loadNVM_VarSystem:
 19906                           	callstack 0
 19907                           
 19908 ;; *************** function _i2c_readDataBlock *****************
 19909 ;; Defined at:
 19910 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19911 ;; Parameters:    Size  Location     Type
 19912 ;;  address         1    wreg     unsigned char 
 19913 ;;  reg             2   33[COMRAM] unsigned short 
 19914 ;;  data            2   35[COMRAM] PTR void 
 19915 ;;		 -> var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemotesFull(1), memoryTEMP(16)
      +, 
 19916 ;;		 -> var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 19917 ;;  len             2   37[COMRAM] unsigned int 
 19918 ;; Auto vars:     Size  Location     Type
 19919 ;;  address         1   40[COMRAM] unsigned char 
 19920 ;;  d               4   41[COMRAM] struct .
 19921 ;; Return value:  Size  Location     Type
 19922 ;;                  1    wreg      void 
 19923 ;; Registers used:
 19924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19925 ;; Tracked objects:
 19926 ;;		On entry : 0/1
 19927 ;;		On exit  : 0/0
 19928 ;;		Unchanged: 0/0
 19929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19930 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19931 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19932 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19933 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19934 ;;Total ram usage:       12 bytes
 19935 ;; Hardware stack levels used: 1
 19936 ;; Hardware stack levels required when called: 12
 19937 ;; This function calls:
 19938 ;;		_I2C1_Close
 19939 ;;		_I2C1_MasterWrite
 19940 ;;		_I2C1_Open
 19941 ;;		_I2C1_SetAddressNackCallback
 19942 ;;		_I2C1_SetBuffer
 19943 ;;		_I2C1_SetDataCompleteCallback
 19944 ;; This function is called by:
 19945 ;;		_validateRemoteSerialNumber
 19946 ;;		_cmdMemoryIsEmpty
 19947 ;;		_loadNVM_VarSystem
 19948 ;; This function uses a non-reentrant model
 19949 ;;
 19950                           
 19951                           	psect	text74
 19952  007D62                     __ptext74:
 19953                           	callstack 0
 19954  007D62                     _i2c_readDataBlock:
 19955                           	callstack 14
 19956                           
 19957                           ;incstack = 0
 19958                           ;i2c_readDataBlock@address stored from wreg
 19959  007D62  6E29               	movwf	i2c_readDataBlock@address^0,c
 19960                           
 19961                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 19962  007D64  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 19963  007D68  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 19964                           
 19965                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 19966  007D6C  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 19967  007D70  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 19968  007D74                     l19378:
 19969  007D74  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 19970  007D76  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 19971  007D78  ECBC  F03C         	call	_I2C1_Open
 19972  007D7C  0900               	iorlw	0
 19973  007D7E  B4D8               	btfsc	status,2,c
 19974  007D80  D7F9               	goto	l19378
 19975                           
 19976                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 19977  007D82  0ECE               	movlw	low _rdBlkRegCompleteHandler
 19978  007D84  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 19979  007D86  0E88               	movlw	high _rdBlkRegCompleteHandler
 19980  007D88  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 19981  007D8A  0E2A               	movlw	low i2c_readDataBlock@d
 19982  007D8C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 19983  007D8E  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 19984  007D90  EC1D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 19985                           
 19986                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 19987  007D94  0E22               	movlw	low i2c_readDataBlock@reg
 19988  007D96  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 19989  007D98  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 19990  007D9A  0E00               	movlw	0
 19991  007D9C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 19992  007D9E  0E01               	movlw	1
 19993  007DA0  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 19994  007DA2  ECE0  F047         	call	_I2C1_SetBuffer	;wreg free
 19995                           
 19996                           ; BSR set to: 2
 19997                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 19998  007DA6  0E00               	movlw	0
 19999  007DA8  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20000  007DAA  0E00               	movlw	0
 20001  007DAC  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20002  007DAE  0E00               	movlw	0
 20003  007DB0  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20004  007DB2  0E00               	movlw	0
 20005  007DB4  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20006  007DB6  EC05  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 20007                           
 20008                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 20009  007DBA  ECDE  F048         	call	_I2C1_MasterWrite	;wreg free
 20010  007DBE                     l19388:
 20011  007DBE  EC52  F047         	call	_I2C1_Close	;wreg free
 20012  007DC2  06E8               	decf	wreg,f,c
 20013  007DC4  B4D8               	btfsc	status,2,c
 20014  007DC6  D7FB               	goto	l19388
 20015                           
 20016                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 20017  007DC8  0ED0               	movlw	208
 20018  007DCA  6E28               	movwf	??_i2c_readDataBlock^0,c
 20019  007DCC  0ECA               	movlw	202
 20020  007DCE                     u28777:
 20021  007DCE  2EE8               	decfsz	wreg,f,c
 20022  007DD0  D7FE               	bra	u28777
 20023  007DD2  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 20024  007DD4  D7FC               	bra	u28777
 20025  007DD6  0012               	return		;funcret
 20026  007DD8                     __end_of_i2c_readDataBlock:
 20027                           	callstack 0
 20028                           
 20029 ;; *************** function _checkNVM_VarSystem *****************
 20030 ;; Defined at:
 20031 ;;		line 314 in file "controlMemory_MC50.c"
 20032 ;; Parameters:    Size  Location     Type
 20033 ;;		None
 20034 ;; Auto vars:     Size  Location     Type
 20035 ;;  saveParam       1   57[COMRAM] unsigned char 
 20036 ;; Return value:  Size  Location     Type
 20037 ;;                  1    wreg      void 
 20038 ;; Registers used:
 20039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20040 ;; Tracked objects:
 20041 ;;		On entry : 0/2
 20042 ;;		On exit  : 0/0
 20043 ;;		Unchanged: 0/0
 20044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20048 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20049 ;;Total ram usage:        1 bytes
 20050 ;; Hardware stack levels used: 1
 20051 ;; Hardware stack levels required when called: 14
 20052 ;; This function calls:
 20053 ;;		_SaveNVM_VarSystem
 20054 ;; This function is called by:
 20055 ;;		_loadNVM_VarSystem
 20056 ;; This function uses a non-reentrant model
 20057 ;;
 20058                           
 20059                           	psect	text75
 20060  005312                     __ptext75:
 20061                           	callstack 0
 20062  005312                     _checkNVM_VarSystem:
 20063                           	callstack 15
 20064                           
 20065                           ;controlMemory_MC50.c: 316:     char saveParam;;controlMemory_MC50.c: 319:     saveParam
      +                           = 0;
 20066                           
 20067                           ;incstack = 0
 20068  005312  0E00               	movlw	0
 20069  005314  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20070                           
 20071                           ;controlMemory_MC50.c: 327:     if ( var_sys_NVM.decelarationOpen>45 )
 20072  005316  0E2D               	movlw	45
 20073  005318  0100               	movlb	0	; () banked
 20074  00531A  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 20075  00531C  D004               	goto	l21058
 20076                           
 20077                           ; BSR set to: 0
 20078                           ;controlMemory_MC50.c: 328:     {;controlMemory_MC50.c: 330:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 20079  00531E  0E03               	movlw	3
 20080  005320  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20081                           
 20082                           ;controlMemory_MC50.c: 331:         saveParam=1;
 20083  005322  0E01               	movlw	1
 20084  005324  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20085  005326                     l21058:
 20086                           
 20087                           ; BSR set to: 0
 20088                           ;controlMemory_MC50.c: 334:     if ( var_sys_NVM.decelarationClose>45 )
 20089  005326  0E2D               	movlw	45
 20090  005328  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 20091  00532A  D004               	goto	l1490
 20092                           
 20093                           ; BSR set to: 0
 20094                           ;controlMemory_MC50.c: 335:     {;controlMemory_MC50.c: 337:         var_sys_NVM.decelar
      +                          ationClose = 3;
 20095  00532C  0E03               	movlw	3
 20096  00532E  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20097                           
 20098                           ;controlMemory_MC50.c: 338:         saveParam=1;
 20099  005330  0E01               	movlw	1
 20100  005332  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20101  005334                     l1490:
 20102                           
 20103                           ; BSR set to: 0
 20104                           ;controlMemory_MC50.c: 341:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 20105  005334  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 20106  005336  B4D8               	btfsc	status,2,c
 20107  005338  D003               	goto	u24200
 20108                           
 20109                           ; BSR set to: 0
 20110  00533A  0E09               	movlw	9
 20111  00533C  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 20112  00533E  D004               	goto	l21066
 20113  005340                     u24200:
 20114                           
 20115                           ; BSR set to: 0
 20116                           ;controlMemory_MC50.c: 342:     {;controlMemory_MC50.c: 344:         var_sys_NVM.motorPo
      +                          wer = 9;
 20117  005340  0E09               	movlw	9
 20118  005342  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20119                           
 20120                           ;controlMemory_MC50.c: 345:         saveParam=1;
 20121  005344  0E01               	movlw	1
 20122  005346  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20123  005348                     l21066:
 20124                           
 20125                           ; BSR set to: 0
 20126                           ;controlMemory_MC50.c: 348:     if ( var_sys_NVM.motorSensitivity>9 )
 20127  005348  0E09               	movlw	9
 20128  00534A  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 20129  00534C  D004               	goto	l21070
 20130                           
 20131                           ; BSR set to: 0
 20132                           ;controlMemory_MC50.c: 349:     {;controlMemory_MC50.c: 351:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 20133  00534E  0E00               	movlw	0
 20134  005350  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20135                           
 20136                           ;controlMemory_MC50.c: 352:         saveParam=1;
 20137  005352  0E01               	movlw	1
 20138  005354  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20139  005356                     l21070:
 20140                           
 20141                           ; BSR set to: 0
 20142                           ;controlMemory_MC50.c: 355:     if ( var_sys_NVM.walkTime>99 )
 20143  005356  0E63               	movlw	99
 20144  005358  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 20145  00535A  D004               	goto	l21074
 20146                           
 20147                           ; BSR set to: 0
 20148                           ;controlMemory_MC50.c: 356:     {;controlMemory_MC50.c: 358:         var_sys_NVM.walkTim
      +                          e = 10;
 20149  00535C  0E0A               	movlw	10
 20150  00535E  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20151                           
 20152                           ;controlMemory_MC50.c: 359:         saveParam=1;
 20153  005360  0E01               	movlw	1
 20154  005362  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20155  005364                     l21074:
 20156                           
 20157                           ; BSR set to: 0
 20158                           ;controlMemory_MC50.c: 362:     if ( var_sys_NVM.autoTimeFullClose>99 )
 20159  005364  0E63               	movlw	99
 20160  005366  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 20161  005368  D004               	goto	l21078
 20162                           
 20163                           ; BSR set to: 0
 20164                           ;controlMemory_MC50.c: 363:     {;controlMemory_MC50.c: 365:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 20165  00536A  0E00               	movlw	0
 20166  00536C  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20167                           
 20168                           ;controlMemory_MC50.c: 366:         saveParam=1;
 20169  00536E  0E01               	movlw	1
 20170  005370  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20171  005372                     l21078:
 20172                           
 20173                           ; BSR set to: 0
 20174                           ;controlMemory_MC50.c: 369:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 20175  005372  0E63               	movlw	99
 20176  005374  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 20177  005376  D004               	goto	l21082
 20178                           
 20179                           ; BSR set to: 0
 20180                           ;controlMemory_MC50.c: 370:     {;controlMemory_MC50.c: 372:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 20181  005378  0E00               	movlw	0
 20182  00537A  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20183                           
 20184                           ;controlMemory_MC50.c: 373:         saveParam=1;
 20185  00537C  0E01               	movlw	1
 20186  00537E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20187  005380                     l21082:
 20188                           
 20189                           ; BSR set to: 0
 20190                           ;controlMemory_MC50.c: 376:     if ( var_sys_NVM.photoCellIsON>1 )
 20191  005380  0E01               	movlw	1
 20192  005382  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 20193  005384  D004               	goto	l21086
 20194                           
 20195                           ; BSR set to: 0
 20196                           ;controlMemory_MC50.c: 377:     {;controlMemory_MC50.c: 379:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 20197  005386  0E00               	movlw	0
 20198  005388  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20199                           
 20200                           ;controlMemory_MC50.c: 380:         saveParam=1;
 20201  00538A  0E01               	movlw	1
 20202  00538C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20203  00538E                     l21086:
 20204                           
 20205                           ; BSR set to: 0
 20206                           ;controlMemory_MC50.c: 383:     if ( var_sys_NVM.photoCellInOpen>1 )
 20207  00538E  0E01               	movlw	1
 20208  005390  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 20209  005392  D004               	goto	l21090
 20210                           
 20211                           ; BSR set to: 0
 20212                           ;controlMemory_MC50.c: 384:     {;controlMemory_MC50.c: 386:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 20213  005394  0E00               	movlw	0
 20214  005396  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20215                           
 20216                           ;controlMemory_MC50.c: 387:         saveParam=1;
 20217  005398  0E01               	movlw	1
 20218  00539A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20219  00539C                     l21090:
 20220                           
 20221                           ; BSR set to: 0
 20222                           ;controlMemory_MC50.c: 390:     if ( var_sys_NVM.securityBandIsON>1 )
 20223  00539C  0E01               	movlw	1
 20224  00539E  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 20225  0053A0  D004               	goto	l21094
 20226                           
 20227                           ; BSR set to: 0
 20228                           ;controlMemory_MC50.c: 391:     {;controlMemory_MC50.c: 393:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 20229  0053A2  0E00               	movlw	0
 20230  0053A4  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20231                           
 20232                           ;controlMemory_MC50.c: 394:         saveParam=1;
 20233  0053A6  0E01               	movlw	1
 20234  0053A8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20235  0053AA                     l21094:
 20236                           
 20237                           ; BSR set to: 0
 20238                           ;controlMemory_MC50.c: 397:     if ( var_sys_NVM.securityBandType>1 )
 20239  0053AA  0E01               	movlw	1
 20240  0053AC  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 20241  0053AE  D004               	goto	l21098
 20242                           
 20243                           ; BSR set to: 0
 20244                           ;controlMemory_MC50.c: 398:     {;controlMemory_MC50.c: 400:         var_sys_NVM.securit
      +                          yBandType = 1;
 20245  0053B0  0E01               	movlw	1
 20246  0053B2  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20247                           
 20248                           ;controlMemory_MC50.c: 401:         saveParam=1;
 20249  0053B4  0E01               	movlw	1
 20250  0053B6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20251  0053B8                     l21098:
 20252                           
 20253                           ; BSR set to: 0
 20254                           ;controlMemory_MC50.c: 404:     if ( var_sys_NVM.securityBandInOpen>1 )
 20255  0053B8  0E01               	movlw	1
 20256  0053BA  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 20257  0053BC  D004               	goto	l21102
 20258                           
 20259                           ; BSR set to: 0
 20260                           ;controlMemory_MC50.c: 405:     {;controlMemory_MC50.c: 407:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 20261  0053BE  0E00               	movlw	0
 20262  0053C0  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20263                           
 20264                           ;controlMemory_MC50.c: 408:         saveParam=1;
 20265  0053C2  0E01               	movlw	1
 20266  0053C4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20267  0053C6                     l21102:
 20268                           
 20269                           ; BSR set to: 0
 20270                           ;controlMemory_MC50.c: 411:     if ( var_sys_NVM.operationMode>2 )
 20271  0053C6  0E02               	movlw	2
 20272  0053C8  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 20273  0053CA  D004               	goto	l21106
 20274                           
 20275                           ; BSR set to: 0
 20276                           ;controlMemory_MC50.c: 412:     {;controlMemory_MC50.c: 414:         var_sys_NVM.operati
      +                          onMode = 0;
 20277  0053CC  0E00               	movlw	0
 20278  0053CE  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20279                           
 20280                           ;controlMemory_MC50.c: 415:         saveParam=1;
 20281  0053D0  0E01               	movlw	1
 20282  0053D2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20283  0053D4                     l21106:
 20284                           
 20285                           ; BSR set to: 0
 20286                           ;controlMemory_MC50.c: 418:     if ( var_sys_NVM.flashLightMode>3 )
 20287  0053D4  0E03               	movlw	3
 20288  0053D6  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 20289  0053D8  D004               	goto	l21110
 20290                           
 20291                           ; BSR set to: 0
 20292                           ;controlMemory_MC50.c: 419:     {;controlMemory_MC50.c: 421:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 20293  0053DA  0E00               	movlw	0
 20294  0053DC  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20295                           
 20296                           ;controlMemory_MC50.c: 422:         saveParam=1;
 20297  0053DE  0E01               	movlw	1
 20298  0053E0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20299  0053E2                     l21110:
 20300                           
 20301                           ; BSR set to: 0
 20302                           ;controlMemory_MC50.c: 425:     if ( var_sys_NVM.programmingDistance>1 )
 20303  0053E2  0E01               	movlw	1
 20304  0053E4  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 20305  0053E6  D004               	goto	l21114
 20306                           
 20307                           ; BSR set to: 0
 20308                           ;controlMemory_MC50.c: 426:     {;controlMemory_MC50.c: 428:         var_sys_NVM.program
      +                          mingDistance = 0;
 20309  0053E8  0E00               	movlw	0
 20310  0053EA  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20311                           
 20312                           ;controlMemory_MC50.c: 429:         saveParam=1;
 20313  0053EC  0E01               	movlw	1
 20314  0053EE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20315  0053F0                     l21114:
 20316                           
 20317                           ; BSR set to: 0
 20318                           ;controlMemory_MC50.c: 432:     if ( var_sys_NVM.decelarationSensivity>9 )
 20319  0053F0  0E09               	movlw	9
 20320  0053F2  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 20321  0053F4  D004               	goto	l21118
 20322                           
 20323                           ; BSR set to: 0
 20324                           ;controlMemory_MC50.c: 433:     {;controlMemory_MC50.c: 435:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 20325  0053F6  0E00               	movlw	0
 20326  0053F8  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20327                           
 20328                           ;controlMemory_MC50.c: 436:         saveParam=1;
 20329  0053FA  0E01               	movlw	1
 20330  0053FC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20331  0053FE                     l21118:
 20332                           
 20333                           ; BSR set to: 0
 20334                           ;controlMemory_MC50.c: 441:     if ( var_sys_NVM.homemPresente>2 )
 20335  0053FE  0E02               	movlw	2
 20336  005400  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 20337  005402  D004               	goto	l21122
 20338                           
 20339                           ; BSR set to: 0
 20340                           ;controlMemory_MC50.c: 442:     {;controlMemory_MC50.c: 444:         var_sys_NVM.homemPr
      +                          esente = 0;
 20341  005404  0E00               	movlw	0
 20342  005406  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20343                           
 20344                           ;controlMemory_MC50.c: 445:         saveParam=1;
 20345  005408  0E01               	movlw	1
 20346  00540A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20347  00540C                     l21122:
 20348                           
 20349                           ; BSR set to: 0
 20350                           ;controlMemory_MC50.c: 448:     if ( var_sys_NVM.logicDigital>1 )
 20351  00540C  0E01               	movlw	1
 20352  00540E  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 20353  005410  D004               	goto	l21126
 20354                           
 20355                           ; BSR set to: 0
 20356                           ;controlMemory_MC50.c: 449:     {;controlMemory_MC50.c: 451:         var_sys_NVM.logicDi
      +                          gital = 0;
 20357  005412  0E00               	movlw	0
 20358  005414  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20359                           
 20360                           ;controlMemory_MC50.c: 452:         saveParam=1;
 20361  005416  0E01               	movlw	1
 20362  005418  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20363  00541A                     l21126:
 20364                           
 20365                           ; BSR set to: 0
 20366                           ;controlMemory_MC50.c: 455:     if ( var_sys_NVM.softStart>9 )
 20367  00541A  0E09               	movlw	9
 20368  00541C  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 20369  00541E  D004               	goto	l21130
 20370                           
 20371                           ; BSR set to: 0
 20372                           ;controlMemory_MC50.c: 456:     {;controlMemory_MC50.c: 458:         var_sys_NVM.softSta
      +                          rt = 0;
 20373  005420  0E00               	movlw	0
 20374  005422  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20375                           
 20376                           ;controlMemory_MC50.c: 459:         saveParam=1;
 20377  005424  0E01               	movlw	1
 20378  005426  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20379  005428                     l21130:
 20380                           
 20381                           ; BSR set to: 0
 20382                           ;controlMemory_MC50.c: 463:     if ( var_sys_NVM.ligthTime>99 )
 20383  005428  0E63               	movlw	99
 20384  00542A  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 20385  00542C  D004               	goto	l21134
 20386                           
 20387                           ; BSR set to: 0
 20388                           ;controlMemory_MC50.c: 464:     {;controlMemory_MC50.c: 466:         var_sys_NVM.ligthTi
      +                          me = 3;
 20389  00542E  0E03               	movlw	3
 20390  005430  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20391                           
 20392                           ;controlMemory_MC50.c: 467:         saveParam=1;
 20393  005432  0E01               	movlw	1
 20394  005434  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20395  005436                     l21134:
 20396                           
 20397                           ; BSR set to: 0
 20398                           ;controlMemory_MC50.c: 470:     if ( var_sys_NVM.folow_me>9 )
 20399  005436  0E09               	movlw	9
 20400  005438  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 20401  00543A  D004               	goto	l21138
 20402                           
 20403                           ; BSR set to: 0
 20404                           ;controlMemory_MC50.c: 471:     {;controlMemory_MC50.c: 473:         var_sys_NVM.folow_m
      +                          e = 0;
 20405  00543C  0E00               	movlw	0
 20406  00543E  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20407                           
 20408                           ;controlMemory_MC50.c: 474:         saveParam=1;
 20409  005440  0E01               	movlw	1
 20410  005442  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20411  005444                     l21138:
 20412                           
 20413                           ; BSR set to: 0
 20414                           ;controlMemory_MC50.c: 479:     if ( var_sys_NVM.electricBrake>1 )
 20415  005444  0E01               	movlw	1
 20416  005446  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 20417  005448  D004               	goto	l1512
 20418                           
 20419                           ; BSR set to: 0
 20420                           ;controlMemory_MC50.c: 480:     {;controlMemory_MC50.c: 482:         var_sys_NVM.electri
      +                          cBrake = 0;
 20421  00544A  0E00               	movlw	0
 20422  00544C  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20423                           
 20424                           ;controlMemory_MC50.c: 483:         saveParam=1;
 20425  00544E  0E01               	movlw	1
 20426  005450  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20427  005452                     l1512:
 20428                           
 20429                           ; BSR set to: 0
 20430                           ;controlMemory_MC50.c: 486:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 20431  005452  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 20432  005454  B4D8               	btfsc	status,2,c
 20433  005456  D003               	goto	u24410
 20434                           
 20435                           ; BSR set to: 0
 20436  005458  0E09               	movlw	9
 20437  00545A  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 20438  00545C  D004               	goto	l21146
 20439  00545E                     u24410:
 20440                           
 20441                           ; BSR set to: 0
 20442                           ;controlMemory_MC50.c: 487:     {;controlMemory_MC50.c: 489:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 20443  00545E  0E05               	movlw	5
 20444  005460  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20445                           
 20446                           ;controlMemory_MC50.c: 490:         saveParam=1;
 20447  005462  0E01               	movlw	1
 20448  005464  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20449  005466                     l21146:
 20450                           
 20451                           ; BSR set to: 0
 20452                           ;controlMemory_MC50.c: 493:     if ( var_sys_NVM.flashRGBMode>3 )
 20453  005466  0E03               	movlw	3
 20454  005468  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 20455  00546A  D004               	goto	l21150
 20456                           
 20457                           ; BSR set to: 0
 20458                           ;controlMemory_MC50.c: 494:     {;controlMemory_MC50.c: 496:         var_sys_NVM.flashRG
      +                          BMode = 3;
 20459  00546C  0E03               	movlw	3
 20460  00546E  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20461                           
 20462                           ;controlMemory_MC50.c: 497:         saveParam=1;
 20463  005470  0E01               	movlw	1
 20464  005472  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20465  005474                     l21150:
 20466                           
 20467                           ; BSR set to: 0
 20468                           ;controlMemory_MC50.c: 499:         if ( var_sys_NVM.Stopboton > 1 )
 20469  005474  0E01               	movlw	1
 20470  005476  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 20471  005478  D004               	goto	l21154
 20472                           
 20473                           ; BSR set to: 0
 20474                           ;controlMemory_MC50.c: 500:     {;controlMemory_MC50.c: 502:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 20475  00547A  0E00               	movlw	0
 20476  00547C  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20477                           
 20478                           ;controlMemory_MC50.c: 503:         saveParam=1;
 20479  00547E  0E01               	movlw	1
 20480  005480  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20481  005482                     l21154:
 20482                           
 20483                           ; BSR set to: 0
 20484                           ;controlMemory_MC50.c: 505:         if ( var_sys_NVM.Direction_motor>1 )
 20485  005482  0E01               	movlw	1
 20486  005484  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 20487  005486  D004               	goto	l21158
 20488                           
 20489                           ; BSR set to: 0
 20490                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.Directi
      +                          on_motor = 1;
 20491  005488  0E01               	movlw	1
 20492  00548A  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20493                           
 20494                           ;controlMemory_MC50.c: 509:         saveParam=1;
 20495  00548C  0E01               	movlw	1
 20496  00548E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20497  005490                     l21158:
 20498                           
 20499                           ; BSR set to: 0
 20500                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.softstop>9 )
 20501  005490  0E09               	movlw	9
 20502  005492  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 20503  005494  D004               	goto	l1519
 20504                           
 20505                           ; BSR set to: 0
 20506                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.softsto
      +                          p = 0;
 20507  005496  0E00               	movlw	0
 20508  005498  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20509                           
 20510                           ;controlMemory_MC50.c: 515:         saveParam=1;
 20511  00549A  0E01               	movlw	1
 20512  00549C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20513  00549E                     l1519:
 20514                           
 20515                           ; BSR set to: 0
 20516                           ;controlMemory_MC50.c: 540:     if ( saveParam != 0 )
 20517  00549E  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 20518  0054A0  B4D8               	btfsc	status,2,c
 20519  0054A2  0012               	return	
 20520                           
 20521                           ; BSR set to: 0
 20522                           ;controlMemory_MC50.c: 541:     {;controlMemory_MC50.c: 542:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 20523  0054A4  0E00               	movlw	0
 20524  0054A6  ECE2  F044         	call	_SaveNVM_VarSystem
 20525                           
 20526                           ;controlMemory_MC50.c: 543:         SaveNVM_VarSystem(pageMemoryE);
 20527  0054AA  0E01               	movlw	1
 20528  0054AC  ECE2  F044         	call	_SaveNVM_VarSystem
 20529  0054B0  0012               	return		;funcret
 20530  0054B2                     __end_of_checkNVM_VarSystem:
 20531                           	callstack 0
 20532                           
 20533 ;; *************** function _ResetDefaultMemory *****************
 20534 ;; Defined at:
 20535 ;;		line 186 in file "controlMemory_MC50.c"
 20536 ;; Parameters:    Size  Location     Type
 20537 ;;  type            1    wreg     unsigned char 
 20538 ;; Auto vars:     Size  Location     Type
 20539 ;;  type            1   57[COMRAM] unsigned char 
 20540 ;; Return value:  Size  Location     Type
 20541 ;;                  1    wreg      void 
 20542 ;; Registers used:
 20543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20544 ;; Tracked objects:
 20545 ;;		On entry : 31/0
 20546 ;;		On exit  : 0/0
 20547 ;;		Unchanged: 0/0
 20548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20552 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20553 ;;Total ram usage:        1 bytes
 20554 ;; Hardware stack levels used: 1
 20555 ;; Hardware stack levels required when called: 14
 20556 ;; This function calls:
 20557 ;;		_SaveNVM_VarSystem
 20558 ;; This function is called by:
 20559 ;;		_loadNVM_VarSystem
 20560 ;;		_sm_execute_menuConfiguration
 20561 ;; This function uses a non-reentrant model
 20562 ;;
 20563                           
 20564                           	psect	text76
 20565  005B18                     __ptext76:
 20566                           	callstack 0
 20567  005B18                     _ResetDefaultMemory:
 20568                           	callstack 14
 20569                           
 20570                           ;incstack = 0
 20571                           ;ResetDefaultMemory@type stored from wreg
 20572  005B18  6E3A               	movwf	ResetDefaultMemory@type^0,c
 20573                           
 20574                           ;controlMemory_MC50.c: 186: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 187: {;controlMemory_MC50.c: 190:     var_sys_NVM.decelarationOpen = 3;
 20575  005B1A  0E03               	movlw	3
 20576  005B1C  0100               	movlb	0	; () banked
 20577  005B1E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20578                           
 20579                           ;controlMemory_MC50.c: 191:     var_sys_NVM.motorPower = 9;
 20580  005B20  0E09               	movlw	9
 20581  005B22  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20582                           
 20583                           ;controlMemory_MC50.c: 192:     var_sys_NVM.decelarationClose = 3;
 20584  005B24  0E03               	movlw	3
 20585  005B26  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20586                           
 20587                           ;controlMemory_MC50.c: 193:     var_sys_NVM.photoCellIsON = 0;
 20588  005B28  0E00               	movlw	0
 20589  005B2A  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20590                           
 20591                           ;controlMemory_MC50.c: 194:     var_sys_NVM.photoCellInOpen = 0;
 20592  005B2C  0E00               	movlw	0
 20593  005B2E  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20594                           
 20595                           ;controlMemory_MC50.c: 195:     var_sys_NVM.securityBandIsON = 0 ;
 20596  005B30  0E00               	movlw	0
 20597  005B32  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20598                           
 20599                           ;controlMemory_MC50.c: 196:     var_sys_NVM.securityBandType = 1;
 20600  005B34  0E01               	movlw	1
 20601  005B36  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20602                           
 20603                           ;controlMemory_MC50.c: 197:     var_sys_NVM.securityBandInOpen = 0;
 20604  005B38  0E00               	movlw	0
 20605  005B3A  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20606                           
 20607                           ;controlMemory_MC50.c: 198:     var_sys_NVM.flashLightMode = 0;
 20608  005B3C  0E00               	movlw	0
 20609  005B3E  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20610                           
 20611                           ;controlMemory_MC50.c: 199:     var_sys_NVM.programmingDistance = 0;
 20612  005B40  0E00               	movlw	0
 20613  005B42  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20614                           
 20615                           ;controlMemory_MC50.c: 200:     var_sys_NVM.decelarationSensivity = 0;
 20616  005B44  0E00               	movlw	0
 20617  005B46  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20618                           
 20619                           ;controlMemory_MC50.c: 201:     var_sys_NVM.homemPresente = 0;
 20620  005B48  0E00               	movlw	0
 20621  005B4A  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20622                           
 20623                           ;controlMemory_MC50.c: 202:     var_sys_NVM.autoTimeWalkClose = 0;
 20624  005B4C  0E00               	movlw	0
 20625  005B4E  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20626                           
 20627                           ;controlMemory_MC50.c: 203:     var_sys_NVM.ligthTime = 3;
 20628  005B50  0E03               	movlw	3
 20629  005B52  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20630                           
 20631                           ;controlMemory_MC50.c: 204:     var_sys_NVM.folow_me = 0;
 20632  005B54  0E00               	movlw	0
 20633  005B56  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20634                           
 20635                           ;controlMemory_MC50.c: 205:     var_sys_NVM.electricBrake = 0;
 20636  005B58  0E00               	movlw	0
 20637  005B5A  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20638                           
 20639                           ;controlMemory_MC50.c: 206:     var_sys_NVM.autoTimeWalkClose = 0;
 20640  005B5C  0E00               	movlw	0
 20641  005B5E  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20642                           
 20643                           ;controlMemory_MC50.c: 207:     var_sys_NVM.Direction_motor = 1 ;
 20644  005B60  0E01               	movlw	1
 20645  005B62  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20646                           
 20647                           ; BSR set to: 0
 20648                           ;controlMemory_MC50.c: 210:     if (type == SC){
 20649  005B64  503A               	movf	ResetDefaultMemory@type^0,w,c
 20650  005B66  A4D8               	btfss	status,2,c
 20651  005B68  D014               	goto	l19876
 20652                           
 20653                           ; BSR set to: 0
 20654                           ;controlMemory_MC50.c: 212:         var_sys_NVM.motorSensitivity = 0;
 20655  005B6A  0E00               	movlw	0
 20656  005B6C  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20657                           
 20658                           ;controlMemory_MC50.c: 213:         var_sys_NVM.logicDigital = 0;
 20659  005B6E  0E00               	movlw	0
 20660  005B70  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20661                           
 20662                           ;controlMemory_MC50.c: 214:         var_sys_NVM.Stopboton = 0;
 20663  005B72  0E00               	movlw	0
 20664  005B74  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20665                           
 20666                           ;controlMemory_MC50.c: 215:         var_sys_NVM.autoTimeFullClose = 0;
 20667  005B76  0E00               	movlw	0
 20668  005B78  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20669                           
 20670                           ;controlMemory_MC50.c: 216:         var_sys_NVM.operationMode = 0;
 20671  005B7A  0E00               	movlw	0
 20672  005B7C  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20673                           
 20674                           ;controlMemory_MC50.c: 217:         var_sys_NVM.velocityDecelaration = 5;
 20675  005B7E  0E05               	movlw	5
 20676  005B80  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20677                           
 20678                           ;controlMemory_MC50.c: 218:         var_sys_NVM.flashRGBMode = 3;
 20679  005B82  0E03               	movlw	3
 20680  005B84  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20681                           
 20682                           ;controlMemory_MC50.c: 219:         var_sys_NVM.softstop = 0;
 20683  005B86  0E00               	movlw	0
 20684  005B88  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20685                           
 20686                           ;controlMemory_MC50.c: 220:         var_sys_NVM.softStart = 0;
 20687  005B8A  0E00               	movlw	0
 20688  005B8C  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20689                           
 20690                           ;controlMemory_MC50.c: 221:         var_sys_NVM.walkTime = 10;
 20691  005B8E  0E0A               	movlw	10
 20692  005B90  D039               	goto	L82
 20693  005B92                     l19876:
 20694                           
 20695                           ; BSR set to: 0
 20696  005B92  043A               	decf	ResetDefaultMemory@type^0,w,c
 20697  005B94  A4D8               	btfss	status,2,c
 20698  005B96  D01B               	goto	l19880
 20699                           
 20700                           ; BSR set to: 0
 20701                           ;controlMemory_MC50.c: 225:         var_sys_NVM.decelarationClose = 4;
 20702  005B98  0E04               	movlw	4
 20703  005B9A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20704                           
 20705                           ;controlMemory_MC50.c: 226:         var_sys_NVM.decelarationOpen = 4;
 20706  005B9C  0E04               	movlw	4
 20707  005B9E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20708                           
 20709                           ;controlMemory_MC50.c: 227:         var_sys_NVM.motorSensitivity = 4;
 20710  005BA0  0E04               	movlw	4
 20711  005BA2  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20712                           
 20713                           ;controlMemory_MC50.c: 228:         var_sys_NVM.logicDigital = 1;
 20714  005BA4  0E01               	movlw	1
 20715  005BA6  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20716                           
 20717                           ;controlMemory_MC50.c: 229:         var_sys_NVM.Stopboton = 1;
 20718  005BA8  0E01               	movlw	1
 20719  005BAA  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20720                           
 20721                           ;controlMemory_MC50.c: 230:         var_sys_NVM.autoTimeFullClose = 0;
 20722  005BAC  0E00               	movlw	0
 20723  005BAE  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20724                           
 20725                           ;controlMemory_MC50.c: 231:         var_sys_NVM.operationMode = 0;
 20726  005BB0  0E00               	movlw	0
 20727  005BB2  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20728                           
 20729                           ;controlMemory_MC50.c: 232:         var_sys_NVM.velocityDecelaration = 5;
 20730  005BB4  0E05               	movlw	5
 20731  005BB6  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20732                           
 20733                           ;controlMemory_MC50.c: 233:         var_sys_NVM.flashRGBMode = 3;
 20734  005BB8  0E03               	movlw	3
 20735  005BBA  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20736                           
 20737                           ;controlMemory_MC50.c: 234:         var_sys_NVM.softstop = 0;
 20738  005BBC  0E00               	movlw	0
 20739  005BBE  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20740                           
 20741                           ;controlMemory_MC50.c: 235:         var_sys_NVM.softStart = 5;
 20742  005BC0  0E05               	movlw	5
 20743  005BC2  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20744                           
 20745                           ;controlMemory_MC50.c: 236:         var_sys_NVM.walkTime = 0;
 20746  005BC4  0E00               	movlw	0
 20747  005BC6  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20748                           
 20749                           ;controlMemory_MC50.c: 237:         var_sys_NVM.Direction_motor = 0 ;
 20750  005BC8  0E00               	movlw	0
 20751  005BCA  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20752                           
 20753                           ;controlMemory_MC50.c: 239:     }
 20754  005BCC  D01C               	goto	l19884
 20755  005BCE                     l19880:
 20756                           
 20757                           ; BSR set to: 0
 20758  005BCE  0E02               	movlw	2
 20759  005BD0  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20760  005BD2  A4D8               	btfss	status,2,c
 20761  005BD4  D018               	goto	l19884
 20762                           
 20763                           ; BSR set to: 0
 20764                           ;controlMemory_MC50.c: 241:         var_sys_NVM.decelarationClose = 6;
 20765  005BD6  0E06               	movlw	6
 20766  005BD8  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20767                           
 20768                           ;controlMemory_MC50.c: 242:         var_sys_NVM.decelarationOpen = 2;
 20769  005BDA  0E02               	movlw	2
 20770  005BDC  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20771                           
 20772                           ;controlMemory_MC50.c: 243:         var_sys_NVM.motorSensitivity = 0;
 20773  005BDE  0E00               	movlw	0
 20774  005BE0  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20775                           
 20776                           ;controlMemory_MC50.c: 244:         var_sys_NVM.logicDigital = 0;
 20777  005BE2  0E00               	movlw	0
 20778  005BE4  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20779                           
 20780                           ;controlMemory_MC50.c: 245:         var_sys_NVM.Stopboton = 0;
 20781  005BE6  0E00               	movlw	0
 20782  005BE8  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20783                           
 20784                           ;controlMemory_MC50.c: 246:         var_sys_NVM.autoTimeFullClose = 0;
 20785  005BEA  0E00               	movlw	0
 20786  005BEC  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20787                           
 20788                           ;controlMemory_MC50.c: 247:         var_sys_NVM.operationMode = 2;
 20789  005BEE  0E02               	movlw	2
 20790  005BF0  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20791                           
 20792                           ;controlMemory_MC50.c: 248:         var_sys_NVM.velocityDecelaration = 5;
 20793  005BF2  0E05               	movlw	5
 20794  005BF4  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20795                           
 20796                           ;controlMemory_MC50.c: 249:         var_sys_NVM.flashRGBMode = 1;
 20797  005BF6  0E01               	movlw	1
 20798  005BF8  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20799                           
 20800                           ;controlMemory_MC50.c: 250:         var_sys_NVM.softstop = 5;
 20801  005BFA  0E05               	movlw	5
 20802  005BFC  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20803                           
 20804                           ;controlMemory_MC50.c: 251:         var_sys_NVM.softStart = 0;
 20805  005BFE  0E00               	movlw	0
 20806  005C00  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20807                           
 20808                           ;controlMemory_MC50.c: 252:         var_sys_NVM.walkTime = 0;
 20809  005C02  0E00               	movlw	0
 20810  005C04                     L82:
 20811  005C04  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20812  005C06                     l19884:
 20813                           
 20814                           ; BSR set to: 0
 20815                           ;controlMemory_MC50.c: 260:     SaveNVM_VarSystem(pageMemoryE);
 20816  005C06  0E01               	movlw	1
 20817  005C08  ECE2  F044         	call	_SaveNVM_VarSystem
 20818                           
 20819                           ;controlMemory_MC50.c: 261:     SaveNVM_VarSystem(pageMemoryP);
 20820  005C0C  0E00               	movlw	0
 20821  005C0E  ECE2  F044         	call	_SaveNVM_VarSystem
 20822                           
 20823                           ;controlMemory_MC50.c: 266:     var_sys_NVM.learningTimeToClose = 0;
 20824  005C12  0E00               	movlw	0
 20825  005C14  0100               	movlb	0	; () banked
 20826  005C16  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20827  005C18  0E00               	movlw	0
 20828  005C1A  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20829  005C1C  0E00               	movlw	0
 20830  005C1E  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20831  005C20  0E00               	movlw	0
 20832  005C22  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20833                           
 20834                           ;controlMemory_MC50.c: 267:     var_sys_NVM.learningTimeToOpen = 0;
 20835  005C24  0E00               	movlw	0
 20836  005C26  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20837  005C28  0E00               	movlw	0
 20838  005C2A  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20839  005C2C  0E00               	movlw	0
 20840  005C2E  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20841  005C30  0E00               	movlw	0
 20842  005C32  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20843                           
 20844                           ;controlMemory_MC50.c: 268:     var_sys_NVM.learningCurrentNormalClose = 0;
 20845  005C34  0E00               	movlw	0
 20846  005C36  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20847  005C38  0E00               	movlw	0
 20848  005C3A  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20849                           
 20850                           ;controlMemory_MC50.c: 269:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20851  005C3C  0E00               	movlw	0
 20852  005C3E  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20853  005C40  0E00               	movlw	0
 20854  005C42  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20855                           
 20856                           ;controlMemory_MC50.c: 270:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20857  005C44  0E00               	movlw	0
 20858  005C46  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20859  005C48  0E00               	movlw	0
 20860  005C4A  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20861  005C4C  0E00               	movlw	0
 20862  005C4E  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20863  005C50  0E00               	movlw	0
 20864  005C52  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20865                           
 20866                           ;controlMemory_MC50.c: 271:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20867  005C54  0E00               	movlw	0
 20868  005C56  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20869  005C58  0E00               	movlw	0
 20870  005C5A  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20871  005C5C  0E00               	movlw	0
 20872  005C5E  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20873  005C60  0E00               	movlw	0
 20874  005C62  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20875                           
 20876                           ; BSR set to: 0
 20877                           ;controlMemory_MC50.c: 277:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20878  005C64  A48D               	btfss	141,2,c	;volatile
 20879                           
 20880                           ; BSR set to: 0
 20881  005C66  B28D               	btfsc	141,1,c	;volatile
 20882  005C68  D015               	goto	l19898
 20883                           
 20884                           ; BSR set to: 0
 20885  005C6A  A08E               	btfss	142,0,c	;volatile
 20886                           
 20887                           ; BSR set to: 0
 20888  005C6C  BA8D               	btfsc	141,5,c	;volatile
 20889  005C6E  D012               	goto	l19898
 20890                           
 20891                           ; BSR set to: 0
 20892                           ;controlMemory_MC50.c: 278:      var_sys.actualCounterMoves = 0;
 20893  005C70  0E00               	movlw	0
 20894  005C72  0101               	movlb	1	; () banked
 20895  005C74  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20896  005C76  0E00               	movlw	0
 20897  005C78  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20898  005C7A  0E00               	movlw	0
 20899  005C7C  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20900  005C7E  0E00               	movlw	0
 20901  005C80  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20902                           
 20903                           ;controlMemory_MC50.c: 279:      var_sys_NVM.counterMoves = 0;
 20904  005C82  0E00               	movlw	0
 20905  005C84  0100               	movlb	0	; () banked
 20906  005C86  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20907  005C88  0E00               	movlw	0
 20908  005C8A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20909  005C8C  0E00               	movlw	0
 20910  005C8E  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20911  005C90  0E00               	movlw	0
 20912  005C92  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20913  005C94                     l19898:
 20914                           
 20915                           ; BSR set to: 0
 20916                           ;controlMemory_MC50.c: 284:     SaveNVM_VarSystem(pageMemoryCounters);
 20917  005C94  0E02               	movlw	2
 20918  005C96  ECE2  F044         	call	_SaveNVM_VarSystem
 20919                           
 20920                           ;controlMemory_MC50.c: 285:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20921  005C9A  0E03               	movlw	3
 20922  005C9C  ECE2  F044         	call	_SaveNVM_VarSystem
 20923  005CA0  0012               	return		;funcret
 20924  005CA2                     __end_of_ResetDefaultMemory:
 20925                           	callstack 0
 20926                           
 20927 ;; *************** function _I2C1_Read1ByteRegister *****************
 20928 ;; Defined at:
 20929 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20930 ;; Parameters:    Size  Location     Type
 20931 ;;  address         1    wreg     unsigned char 
 20932 ;;  reg             1   33[COMRAM] unsigned char 
 20933 ;; Auto vars:     Size  Location     Type
 20934 ;;  address         1   34[COMRAM] unsigned char 
 20935 ;;  returnValue     1   35[COMRAM] unsigned char 
 20936 ;; Return value:  Size  Location     Type
 20937 ;;                  1    wreg      unsigned char 
 20938 ;; Registers used:
 20939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20940 ;; Tracked objects:
 20941 ;;		On entry : 31/0
 20942 ;;		On exit  : 33/2
 20943 ;;		Unchanged: 0/0
 20944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20945 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20948 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20949 ;;Total ram usage:        3 bytes
 20950 ;; Hardware stack levels used: 1
 20951 ;; Hardware stack levels required when called: 12
 20952 ;; This function calls:
 20953 ;;		_I2C1_Close
 20954 ;;		_I2C1_MasterWrite
 20955 ;;		_I2C1_Open
 20956 ;;		_I2C1_SetAddressNackCallback
 20957 ;;		_I2C1_SetBuffer
 20958 ;;		_I2C1_SetDataCompleteCallback
 20959 ;; This function is called by:
 20960 ;;		_loadNVM_VarSystem
 20961 ;; This function uses a non-reentrant model
 20962 ;;
 20963                           
 20964                           	psect	text77
 20965  0082BA                     __ptext77:
 20966                           	callstack 0
 20967  0082BA                     _I2C1_Read1ByteRegister:
 20968                           	callstack 17
 20969                           
 20970                           ;incstack = 0
 20971                           ;I2C1_Read1ByteRegister@address stored from wreg
 20972  0082BA  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 20973                           
 20974                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 20975  0082BC  0E00               	movlw	0
 20976  0082BE  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 20977  0082C0                     l21036:
 20978  0082C0  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 20979  0082C2  ECBC  F03C         	call	_I2C1_Open
 20980  0082C6  0900               	iorlw	0
 20981  0082C8  B4D8               	btfsc	status,2,c
 20982  0082CA  D7FA               	goto	l21036
 20983                           
 20984                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 20985  0082CC  0EFA               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 20986  0082CE  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20987  0082D0  0E8B               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 20988  0082D2  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20989  0082D4  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 20990  0082D6  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20991  0082D8  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20992  0082DA  EC1D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20993                           
 20994                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 20995  0082DE  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 20996  0082E0  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20997  0082E2  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20998  0082E4  0E00               	movlw	0
 20999  0082E6  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 21000  0082E8  0E01               	movlw	1
 21001  0082EA  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 21002  0082EC  ECE0  F047         	call	_I2C1_SetBuffer	;wreg free
 21003                           
 21004                           ; BSR set to: 2
 21005                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 21006  0082F0  0E00               	movlw	0
 21007  0082F2  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 21008  0082F4  0E00               	movlw	0
 21009  0082F6  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 21010  0082F8  0E00               	movlw	0
 21011  0082FA  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 21012  0082FC  0E00               	movlw	0
 21013  0082FE  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 21014  008300  EC05  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 21015                           
 21016                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 21017  008304  ECDE  F048         	call	_I2C1_MasterWrite	;wreg free
 21018  008308                     l21046:
 21019  008308  EC52  F047         	call	_I2C1_Close	;wreg free
 21020  00830C  06E8               	decf	wreg,f,c
 21021  00830E  B4D8               	btfsc	status,2,c
 21022  008310  D7FB               	goto	l21046
 21023                           
 21024                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 21025  008312  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 21026  008314  0012               	return		;funcret
 21027  008316                     __end_of_I2C1_Read1ByteRegister:
 21028                           	callstack 0
 21029                           
 21030 ;; *************** function _getKeyPressed *****************
 21031 ;; Defined at:
 21032 ;;		line 217 in file "inputs_MC50.c"
 21033 ;; Parameters:    Size  Location     Type
 21034 ;;		None
 21035 ;; Auto vars:     Size  Location     Type
 21036 ;;  temp            1   15[COMRAM] char 
 21037 ;; Return value:  Size  Location     Type
 21038 ;;                  1    wreg      char 
 21039 ;; Registers used:
 21040 ;;		wreg, status,2, status,0
 21041 ;; Tracked objects:
 21042 ;;		On entry : 3E/1
 21043 ;;		On exit  : 3D/0
 21044 ;;		Unchanged: 0/0
 21045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21049 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21050 ;;Total ram usage:        1 bytes
 21051 ;; Hardware stack levels used: 1
 21052 ;; Hardware stack levels required when called: 4
 21053 ;; This function calls:
 21054 ;;		Nothing
 21055 ;; This function is called by:
 21056 ;;		_main
 21057 ;; This function uses a non-reentrant model
 21058 ;;
 21059                           
 21060                           	psect	text78
 21061  008FF2                     __ptext78:
 21062                           	callstack 0
 21063  008FF2                     _getKeyPressed:
 21064                           	callstack 26
 21065                           
 21066                           ;inputs_MC50.c: 218:     signed char temp=-1;
 21067                           
 21068                           ;incstack = 0
 21069  008FF2  6810               	setf	getKeyPressed@temp^0,c
 21070                           
 21071                           ;inputs_MC50.c: 219:     if(RFFull)
 21072  008FF4  0100               	movlb	0	; () banked
 21073  008FF6  518B               	movf	_RFFull& (0+255),w,b	;volatile
 21074  008FF8  B4D8               	btfsc	status,2,c
 21075  008FFA  D005               	goto	l16468
 21076                           
 21077                           ; BSR set to: 0
 21078                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 21079  008FFC  0102               	movlb	2	; () banked
 21080  008FFE  39CD               	swapf	(_BufferRF+7)& (0+255),w,b
 21081  009000  0B0F               	andlw	15
 21082  009002  0B0F               	andlw	15
 21083  009004  6E10               	movwf	getKeyPressed@temp^0,c
 21084  009006                     l16468:
 21085                           
 21086                           ;inputs_MC50.c: 223:     return temp;
 21087  009006  5010               	movf	getKeyPressed@temp^0,w,c
 21088  009008  0012               	return		;funcret
 21089  00900A                     __end_of_getKeyPressed:
 21090                           	callstack 0
 21091                           
 21092 ;; *************** function _eusartparser *****************
 21093 ;; Defined at:
 21094 ;;		line 441 in file "eusartparser.c"
 21095 ;; Parameters:    Size  Location     Type
 21096 ;;  package         1   57[COMRAM] PTR struct package_t
 21097 ;;		 -> main@package(7), 
 21098 ;; Auto vars:     Size  Location     Type
 21099 ;;  a               7    0        struct package_t
 21100 ;; Return value:  Size  Location     Type
 21101 ;;                  1    wreg      void 
 21102 ;; Registers used:
 21103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 21104 ;; Tracked objects:
 21105 ;;		On entry : 3F/E
 21106 ;;		On exit  : 0/0
 21107 ;;		Unchanged: 0/0
 21108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21109 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21111 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21112 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21113 ;;Total ram usage:        3 bytes
 21114 ;; Hardware stack levels used: 1
 21115 ;; Hardware stack levels required when called: 14
 21116 ;; This function calls:
 21117 ;;		_SaveNVM_VarSystem
 21118 ;;		_read_eusartparser
 21119 ;;		_write_eusartparser
 21120 ;;		_write_package
 21121 ;; This function is called by:
 21122 ;;		_main
 21123 ;; This function uses a non-reentrant model
 21124 ;;
 21125                           
 21126                           	psect	text79
 21127  006E38                     __ptext79:
 21128                           	callstack 0
 21129  006E38                     _eusartparser:
 21130                           	callstack 16
 21131                           
 21132                           ; BSR set to: 14
 21133                           ;eusartparser.c: 442:         struct package_t a;;eusartparser.c: 443:         switch(pa
      +                          ckage->functioncode){
 21134                           
 21135                           ;incstack = 0
 21136  006E38  D04E               	goto	l22730
 21137  006E3A                     l22702:
 21138                           
 21139                           ; BSR set to: 0
 21140                           ;eusartparser.c: 445:                 if(programmer_enable)
 21141  006E3A  5185               	movf	_programmer_enable& (0+255),w,b
 21142  006E3C  B4D8               	btfsc	status,2,c
 21143  006E3E  0012               	return	
 21144                           
 21145                           ; BSR set to: 0
 21146                           ;eusartparser.c: 446:                     read_eusartparser(package);
 21147  006E40  C03A  F018         	movff	eusartparser@package,read_eusartparser@package
 21148  006E44  EC4E  F012         	call	_read_eusartparser	;wreg free
 21149  006E48  0012               	return	
 21150  006E4A                     l22706:
 21151                           
 21152                           ; BSR set to: 0
 21153                           ;eusartparser.c: 450:                 if(programmer_enable)
 21154  006E4A  5185               	movf	_programmer_enable& (0+255),w,b
 21155  006E4C  B4D8               	btfsc	status,2,c
 21156  006E4E  0012               	return	
 21157                           
 21158                           ; BSR set to: 0
 21159                           ;eusartparser.c: 451:                     write_eusartparser(*package);
 21160  006E50  503A               	movf	eusartparser@package^0,w,c
 21161  006E52  6ED9               	movwf	fsr2l,c
 21162  006E54  6ADA               	clrf	fsr2h,c
 21163  006E56  EE00  F010         	lfsr	0,write_eusartparser@package
 21164  006E5A  0E06               	movlw	6
 21165  006E5C                     u27681:
 21166  006E5C  CFDB FFEB          	movff	plusw2,plusw0
 21167  006E60  06E8               	decf	wreg,f,c
 21168  006E62  E2FC               	bc	u27681
 21169  006E64  EC3A  F017         	call	_write_eusartparser	;wreg free
 21170  006E68  0012               	return	
 21171  006E6A                     l22710:
 21172                           
 21173                           ; BSR set to: 0
 21174                           ;eusartparser.c: 455:                 if(programmer_enable){
 21175  006E6A  5185               	movf	_programmer_enable& (0+255),w,b
 21176  006E6C  B4D8               	btfsc	status,2,c
 21177  006E6E  D008               	goto	l22716
 21178                           
 21179                           ; BSR set to: 0
 21180                           ;eusartparser.c: 456:                     SaveNVM_VarSystem(pageMemoryE);
 21181  006E70  0E01               	movlw	1
 21182  006E72  ECE2  F044         	call	_SaveNVM_VarSystem
 21183                           
 21184                           ;eusartparser.c: 457:                     SaveNVM_VarSystem(pageMemoryP);
 21185  006E76  0E00               	movlw	0
 21186  006E78  ECE2  F044         	call	_SaveNVM_VarSystem
 21187                           
 21188                           ;eusartparser.c: 458:                     programmer_enable=0;
 21189  006E7C  0E00               	movlw	0
 21190  006E7E  D005               	goto	L83
 21191  006E80                     l22716:
 21192                           
 21193                           ; BSR set to: 0
 21194                           ;eusartparser.c: 461:                     if((sm_state_Main_t)main_stateMachine.current_
      +                          state==st_standBy)
 21195  006E80  0101               	movlb	1	; () banked
 21196  006E82  51EF               	movf	_main_stateMachine& (0+255),w,b
 21197  006E84  A4D8               	btfss	status,2,c
 21198  006E86  D004               	goto	l22720
 21199                           
 21200                           ; BSR set to: 1
 21201                           ;eusartparser.c: 462:                         programmer_enable=1;
 21202  006E88  0E01               	movlw	1
 21203  006E8A                     L83:
 21204  006E8A  0100               	movlb	0	; () banked
 21205  006E8C  6F85               	movwf	_programmer_enable& (0+255),b
 21206  006E8E  D016               	goto	l22724
 21207  006E90                     l22720:
 21208                           
 21209                           ; BSR set to: 1
 21210                           ;eusartparser.c: 464:                         package->data.data16=(uint16_t)2;
 21211  006E90  503A               	movf	eusartparser@package^0,w,c
 21212  006E92  6ED9               	movwf	fsr2l,c
 21213  006E94  6ADA               	clrf	fsr2h,c
 21214  006E96  0E02               	movlw	2
 21215  006E98  26D9               	addwf	fsr2l,f,c
 21216  006E9A  0E02               	movlw	2
 21217  006E9C  6EDE               	movwf	postinc2,c
 21218  006E9E  0E00               	movlw	0
 21219  006EA0  6EDD               	movwf	postdec2,c
 21220  006EA2                     l22722:
 21221                           
 21222                           ;eusartparser.c: 465:                         write_package(*package);
 21223  006EA2  503A               	movf	eusartparser@package^0,w,c
 21224  006EA4  6ED9               	movwf	fsr2l,c
 21225  006EA6  6ADA               	clrf	fsr2h,c
 21226  006EA8  EE00  F011         	lfsr	0,write_package@package
 21227  006EAC  0E06               	movlw	6
 21228  006EAE                     u27711:
 21229  006EAE  CFDB FFEB          	movff	plusw2,plusw0
 21230  006EB2  06E8               	decf	wreg,f,c
 21231  006EB4  E2FC               	bc	u27711
 21232  006EB6  EC8F  F045         	call	_write_package	;wreg free
 21233                           
 21234                           ;eusartparser.c: 466:                         break;
 21235  006EBA  0012               	return	
 21236  006EBC                     l22724:
 21237                           
 21238                           ; BSR set to: 0
 21239                           ;eusartparser.c: 470:                 package->data.data16=(uint16_t)programmer_enable;
 21240  006EBC  5185               	movf	_programmer_enable& (0+255),w,b
 21241  006EBE  6FDC               	movwf	??_eusartparser& (0+255),b
 21242  006EC0  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21243  006EC2  503A               	movf	eusartparser@package^0,w,c
 21244  006EC4  6ED9               	movwf	fsr2l,c
 21245  006EC6  6ADA               	clrf	fsr2h,c
 21246  006EC8  0E02               	movlw	2
 21247  006ECA  26D9               	addwf	fsr2l,f,c
 21248  006ECC  C0DC  FFDE         	movff	??_eusartparser,postinc2
 21249  006ED0  C0DD  FFDD         	movff	??_eusartparser+1,postdec2
 21250  006ED4  D7E6               	goto	l22722
 21251  006ED6                     l22730:
 21252                           
 21253                           ; BSR set to: 14
 21254  006ED6  503A               	movf	eusartparser@package^0,w,c
 21255  006ED8  6ED9               	movwf	fsr2l,c
 21256  006EDA  6ADA               	clrf	fsr2h,c
 21257  006EDC  50DF               	movf	indf2,w,c
 21258  006EDE  0100               	movlb	0	; () banked
 21259  006EE0  6FDC               	movwf	??_eusartparser& (0+255),b
 21260  006EE2  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21261                           
 21262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21263                           ; Switch size 1, requested type "simple"
 21264                           ; Number of cases is 1, Range of values is 0 to 0
 21265                           ; switch strategies available:
 21266                           ; Name         Instructions Cycles
 21267                           ; simple_byte            4     3 (average)
 21268                           ;	Chosen strategy is simple_byte
 21269  006EE4  51DD               	movf	(??_eusartparser+1)& (0+255),w,b
 21270  006EE6  0A00               	xorlw	0	; case 0
 21271  006EE8  A4D8               	btfss	status,2,c
 21272  006EEA  0012               	return	
 21273                           
 21274                           ; BSR set to: 0
 21275                           ; Switch size 1, requested type "simple"
 21276                           ; Number of cases is 3, Range of values is 0 to 2
 21277                           ; switch strategies available:
 21278                           ; Name         Instructions Cycles
 21279                           ; simple_byte           10     6 (average)
 21280                           ;	Chosen strategy is simple_byte
 21281  006EEC  51DC               	movf	??_eusartparser& (0+255),w,b
 21282  006EEE  0A00               	xorlw	0	; case 0
 21283  006EF0  B4D8               	btfsc	status,2,c
 21284  006EF2  D7A3               	goto	l22702
 21285  006EF4  0A01               	xorlw	1	; case 1
 21286  006EF6  B4D8               	btfsc	status,2,c
 21287  006EF8  D7A8               	goto	l22706
 21288  006EFA  0A03               	xorlw	3	; case 2
 21289  006EFC  A4D8               	btfss	status,2,c
 21290  006EFE  0012               	return	
 21291  006F00  D7B4               	goto	l22710
 21292  006F02                     __end_of_eusartparser:
 21293                           	callstack 0
 21294                           
 21295 ;; *************** function _write_eusartparser *****************
 21296 ;; Defined at:
 21297 ;;		line 241 in file "eusartparser.c"
 21298 ;; Parameters:    Size  Location     Type
 21299 ;;  package         7   15[COMRAM] struct package_t
 21300 ;; Auto vars:     Size  Location     Type
 21301 ;;  debug2          2   32[COMRAM] volatile int 
 21302 ;;  debug           2   30[COMRAM] volatile int 
 21303 ;; Return value:  Size  Location     Type
 21304 ;;                  1    wreg      void 
 21305 ;; Registers used:
 21306 ;;		wreg, status,2, status,0
 21307 ;; Tracked objects:
 21308 ;;		On entry : 3F/0
 21309 ;;		On exit  : 3F/0
 21310 ;;		Unchanged: 0/0
 21311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21312 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21313 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21314 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21315 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21316 ;;Total ram usage:       19 bytes
 21317 ;; Hardware stack levels used: 1
 21318 ;; Hardware stack levels required when called: 4
 21319 ;; This function calls:
 21320 ;;		Nothing
 21321 ;; This function is called by:
 21322 ;;		_eusartparser
 21323 ;; This function uses a non-reentrant model
 21324 ;;
 21325                           
 21326                           	psect	text80
 21327  002E74                     __ptext80:
 21328                           	callstack 0
 21329  002E74                     _write_eusartparser:
 21330                           	callstack 25
 21331                           
 21332                           ; BSR set to: 0
 21333                           ;eusartparser.c: 242:         volatile int debug=(uint8_t)package.address;
 21334                           
 21335                           ;incstack = 0
 21336  002E74  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 21337  002E78  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 21338                           
 21339                           ; BSR set to: 0
 21340                           ;eusartparser.c: 243:         volatile int debug2=0x10;
 21341  002E7A  0E00               	movlw	0
 21342  002E7C  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 21343  002E7E  0E10               	movlw	16
 21344  002E80  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 21345                           
 21346                           ;eusartparser.c: 244:         switch((uint8_t)package.address){
 21347  002E82  D180               	goto	l16160
 21348  002E84                     l3580:
 21349                           
 21350                           ; BSR set to: 0
 21351                           ;eusartparser.c: 249:                 var_sys_NVM.decelarationOpen=package.data.data8[0]
      +                          ;
 21352  002E84  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 21353                           
 21354                           ;eusartparser.c: 250:                 var_sys_NVM.decelarationClose=package.data.data8[1
      +                          ];
 21355  002E88  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 21356                           
 21357                           ;eusartparser.c: 251:                 break;
 21358  002E8C  0012               	return	
 21359  002E8E                     l3582:
 21360                           
 21361                           ; BSR set to: 0
 21362                           ;eusartparser.c: 255:                 var_sys_NVM.motorPower=package.data.data8[0];
 21363  002E8E  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 21364                           
 21365                           ;eusartparser.c: 256:                 var_sys_NVM.motorSensitivity=package.data.data8[1]
      +                          ;
 21366  002E92  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 21367                           
 21368                           ;eusartparser.c: 257:                 break;
 21369  002E96  0012               	return	
 21370  002E98                     l3583:
 21371                           
 21372                           ; BSR set to: 0
 21373                           ;eusartparser.c: 261:                 var_sys_NVM.walkTime=package.data.data8[1];
 21374  002E98  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 21375                           
 21376                           ;eusartparser.c: 262:                 break;
 21377  002E9C  0012               	return	
 21378  002E9E                     l3585:
 21379                           
 21380                           ; BSR set to: 0
 21381                           ;eusartparser.c: 267:                 var_sys_NVM.autoTimeFullClose=package.data.data8[0
      +                          ];
 21382  002E9E  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 21383                           
 21384                           ;eusartparser.c: 268:                 var_sys_NVM.autoTimeWalkClose=package.data.data8[1
      +                          ];
 21385  002EA2  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 21386                           
 21387                           ;eusartparser.c: 269:                 break;
 21388  002EA6  0012               	return	
 21389  002EA8                     l3587:
 21390                           
 21391                           ; BSR set to: 0
 21392                           ;eusartparser.c: 274:                 var_sys_NVM.photoCellIsON=package.data.data8[0];
 21393  002EA8  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 21394                           
 21395                           ;eusartparser.c: 275:                 var_sys_NVM.photoCellInOpen=package.data.data8[1];
 21396  002EAC  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 21397                           
 21398                           ;eusartparser.c: 276:                 break;
 21399  002EB0  0012               	return	
 21400  002EB2                     l3588:
 21401                           
 21402                           ; BSR set to: 0
 21403                           ;eusartparser.c: 280:                 var_sys_NVM.securityBandIsON=package.data.data8[0]
      +                          ;
 21404  002EB2  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 21405                           
 21406                           ;eusartparser.c: 281:                 var_sys_NVM.securityBandType=package.data.data8[1]
      +                          ;
 21407  002EB6  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 21408                           
 21409                           ;eusartparser.c: 282:                 break;
 21410  002EBA  0012               	return	
 21411  002EBC                     l3589:
 21412                           
 21413                           ; BSR set to: 0
 21414                           ;eusartparser.c: 286:                 var_sys_NVM.securityBandInOpen=package.data.data8[
      +                          1];
 21415  002EBC  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 21416                           
 21417                           ;eusartparser.c: 287:                 break;
 21418  002EC0  0012               	return	
 21419  002EC2                     l3590:
 21420                           
 21421                           ; BSR set to: 0
 21422                           ;eusartparser.c: 291:                 var_sys_NVM.operationMode=package.data.data8[1];
 21423  002EC2  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 21424                           
 21425                           ;eusartparser.c: 292:                 break;
 21426  002EC6  0012               	return	
 21427  002EC8                     l3591:
 21428                           
 21429                           ; BSR set to: 0
 21430                           ;eusartparser.c: 296:                 var_sys_NVM.flashLightMode=package.data.data8[1];
 21431  002EC8  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 21432                           
 21433                           ;eusartparser.c: 297:                 break;
 21434  002ECC  0012               	return	
 21435  002ECE                     l3592:
 21436                           
 21437                           ; BSR set to: 0
 21438                           ;eusartparser.c: 301:                 var_sys_NVM.programmingDistance=package.data.data8
      +                          [1];
 21439  002ECE  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 21440                           
 21441                           ;eusartparser.c: 302:                 break;
 21442  002ED2  0012               	return	
 21443  002ED4                     l3593:
 21444                           
 21445                           ; BSR set to: 0
 21446                           ;eusartparser.c: 306:                 var_sys_NVM.decelarationSensivity=package.data.dat
      +                          a8[1];
 21447  002ED4  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 21448                           
 21449                           ;eusartparser.c: 307:                 break;
 21450  002ED8  0012               	return	
 21451  002EDA                     l3594:
 21452                           
 21453                           ; BSR set to: 0
 21454                           ;eusartparser.c: 312:                 var_sys_NVM.homemPresente=package.data.data8[1];
 21455  002EDA  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 21456                           
 21457                           ;eusartparser.c: 313:                 break;
 21458  002EDE  0012               	return	
 21459  002EE0                     l3596:
 21460                           
 21461                           ; BSR set to: 0
 21462                           ;eusartparser.c: 318:                 var_sys_NVM.logicDigital=package.data.data8[1];
 21463  002EE0  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 21464                           
 21465                           ;eusartparser.c: 319:                 break;
 21466  002EE4  0012               	return	
 21467  002EE6                     l3597:
 21468                           
 21469                           ; BSR set to: 0
 21470                           ;eusartparser.c: 323:                 var_sys_NVM.softStart=package.data.data8[0];
 21471  002EE6  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 21472                           
 21473                           ;eusartparser.c: 324:                 var_sys_NVM.softstop=package.data.data8[1];
 21474  002EEA  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 21475                           
 21476                           ;eusartparser.c: 325:                 break;
 21477  002EEE  0012               	return	
 21478  002EF0                     l3599:
 21479                           
 21480                           ; BSR set to: 0
 21481                           ;eusartparser.c: 330:                 var_sys_NVM.ligthTime=package.data.data8[1];
 21482  002EF0  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 21483                           
 21484                           ;eusartparser.c: 331:                 break;
 21485  002EF4  0012               	return	
 21486  002EF6                     l3601:
 21487                           
 21488                           ; BSR set to: 0
 21489                           ;eusartparser.c: 336:                 var_sys_NVM.folow_me=package.data.data8[1];
 21490  002EF6  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 21491                           
 21492                           ;eusartparser.c: 337:                 break;
 21493  002EFA  0012               	return	
 21494  002EFC                     l3602:
 21495                           
 21496                           ; BSR set to: 0
 21497                           ;eusartparser.c: 341:                 var_sys_NVM.Stopboton=package.data.data8[1];
 21498  002EFC  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 21499                           
 21500                           ;eusartparser.c: 342:                 break;
 21501  002F00  0012               	return	
 21502  002F02                     l3603:
 21503                           
 21504                           ; BSR set to: 0
 21505                           ;eusartparser.c: 346:                 var_sys_NVM.electricBrake=package.data.data8[1];
 21506  002F02  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 21507                           
 21508                           ;eusartparser.c: 347:                 break;
 21509  002F06  0012               	return	
 21510  002F08                     l3604:
 21511                           
 21512                           ; BSR set to: 0
 21513                           ;eusartparser.c: 351:                 var_sys_NVM.velocityDecelaration=package.data.data
      +                          8[1];
 21514  002F08  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 21515                           
 21516                           ;eusartparser.c: 352:                 break;
 21517  002F0C  0012               	return	
 21518  002F0E                     l3606:
 21519                           
 21520                           ; BSR set to: 0
 21521                           ;eusartparser.c: 357:                 var_sys_NVM.flashRGBMode=package.data.data8[1];
 21522  002F0E  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 21523                           
 21524                           ;eusartparser.c: 358:                 break;
 21525  002F12  0012               	return	
 21526  002F14                     l3607:
 21527                           
 21528                           ; BSR set to: 0
 21529                           ;eusartparser.c: 362:                 var_sys_NVM.Direction_motor=package.data.data8[1];
 21530  002F14  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 21531                           
 21532                           ;eusartparser.c: 363:                 break;
 21533  002F18  0012               	return	
 21534  002F1A                     l3608:
 21535                           
 21536                           ; BSR set to: 0
 21537                           ;eusartparser.c: 367:                 var_sys_NVM.TypeofMotor=package.data.data8[1];
 21538  002F1A  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 21539                           
 21540                           ;eusartparser.c: 368:                 break;
 21541  002F1E  0012               	return	
 21542  002F20                     l3609:
 21543                           
 21544                           ; BSR set to: 0
 21545                           ;eusartparser.c: 372:                 var_sys_NVM.positionRemotesFull=package.data.data8
      +                          [0];
 21546  002F20  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 21547                           
 21548                           ;eusartparser.c: 373:                 var_sys_NVM.positionRemotesWalk=package.data.data8
      +                          [1];
 21549  002F24  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 21550                           
 21551                           ;eusartparser.c: 374:                 break;
 21552  002F28  0012               	return	
 21553  002F2A                     l16138:
 21554                           
 21555                           ; BSR set to: 0
 21556                           ;eusartparser.c: 377:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21557  002F2A  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21558  002F2C  6E17               	movwf	??_write_eusartparser^0,c
 21559  002F2E  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21560  002F30  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21561  002F32  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21562  002F34  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21563  002F36  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21564  002F3A  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21565  002F3E  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21566  002F40  6A17               	clrf	??_write_eusartparser^0,c
 21567  002F42  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21568  002F44  1017               	iorwf	??_write_eusartparser^0,w,c
 21569  002F46  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21570  002F48  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21571  002F4A  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21572  002F4C  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21573  002F4E  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21574  002F50  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21575  002F52  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21576  002F54  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21577  002F56  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21578  002F58  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21579                           
 21580                           ;eusartparser.c: 378:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21581  002F5A  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21582  002F5C  6E17               	movwf	??_write_eusartparser^0,c
 21583  002F5E  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21584  002F60  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21585  002F62  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21586  002F64  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21587  002F66  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21588  002F6A  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21589  002F6E  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21590  002F70  6A17               	clrf	??_write_eusartparser^0,c
 21591  002F72  1C17               	comf	??_write_eusartparser^0,w,c
 21592  002F74  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21593  002F76  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21594  002F78  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21595  002F7A  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21596  002F7C  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21597  002F7E  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21598  002F80  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21599  002F82  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21600  002F84  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21601  002F86  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21602  002F88  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21603  002F8A  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21604  002F8C  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21605  002F8E  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21606  002F90  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21607  002F92  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21608  002F94  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21609  002F96  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21610  002F98  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21611                           
 21612                           ;eusartparser.c: 379:                 break;
 21613  002F9A  0012               	return	
 21614  002F9C                     l16140:
 21615                           
 21616                           ; BSR set to: 0
 21617                           ;eusartparser.c: 381:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21618  002F9C  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21619  002F9E  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21620  002FA0  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21621  002FA2  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21622  002FA4  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21623  002FA6  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21624  002FA8  0E00               	movlw	0
 21625  002FAA  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21626  002FAC  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21627  002FAE  0E00               	movlw	0
 21628  002FB0  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21629  002FB2  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21630                           
 21631                           ;eusartparser.c: 382:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21632  002FB4  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21633  002FB6  6E17               	movwf	??_write_eusartparser^0,c
 21634  002FB8  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21635  002FBA  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21636  002FBC  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21637  002FBE  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21638  002FC0  1C17               	comf	??_write_eusartparser^0,w,c
 21639  002FC2  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21640  002FC4  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21641  002FC6  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21642  002FC8  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21643  002FCA  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21644  002FCC  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21645  002FCE  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21646  002FD0  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21647  002FD2  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21648  002FD4  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21649  002FD6  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21650  002FD8  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21651  002FDA  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21652  002FDC  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21653  002FDE  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21654  002FE0  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21655  002FE2  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21656  002FE4  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21657  002FE6  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21658                           
 21659                           ;eusartparser.c: 383:                 break;
 21660  002FE8  0012               	return	
 21661  002FEA                     l3612:
 21662                           
 21663                           ; BSR set to: 0
 21664                           ;eusartparser.c: 388:                 var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 21665  002FEA  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 21666                           
 21667                           ;eusartparser.c: 389:                 break;
 21668  002FEE  0012               	return	
 21669  002FF0                     l16142:
 21670                           
 21671                           ; BSR set to: 0
 21672                           ;eusartparser.c: 392:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21673  002FF0  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21674  002FF2  6E17               	movwf	??_write_eusartparser^0,c
 21675  002FF4  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21676  002FF6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21677  002FF8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21678  002FFA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21679  002FFC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21680  003000  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21681  003004  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21682  003006  6A17               	clrf	??_write_eusartparser^0,c
 21683  003008  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21684  00300A  1017               	iorwf	??_write_eusartparser^0,w,c
 21685  00300C  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21686  00300E  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21687  003010  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21688  003012  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21689  003014  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21690  003016  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21691  003018  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21692  00301A  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21693  00301C  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21694  00301E  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21695                           
 21696                           ;eusartparser.c: 393:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 21697  003020  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21698  003022  6E17               	movwf	??_write_eusartparser^0,c
 21699  003024  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21700  003026  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21701  003028  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21702  00302A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21703  00302C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21704  003030  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21705  003034  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21706  003036  6A17               	clrf	??_write_eusartparser^0,c
 21707  003038  1C17               	comf	??_write_eusartparser^0,w,c
 21708  00303A  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21709  00303C  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21710  00303E  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21711  003040  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21712  003042  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21713  003044  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21714  003046  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21715  003048  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21716  00304A  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21717  00304C  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21718  00304E  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21719  003050  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21720  003052  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21721  003054  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21722  003056  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21723  003058  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21724  00305A  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21725  00305C  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21726  00305E  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21727                           
 21728                           ;eusartparser.c: 394:                 break;
 21729  003060  0012               	return	
 21730  003062                     l16144:
 21731                           
 21732                           ; BSR set to: 0
 21733                           ;eusartparser.c: 396:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21734  003062  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21735  003064  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21736  003066  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21737  003068  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21738  00306A  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21739  00306C  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21740  00306E  0E00               	movlw	0
 21741  003070  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21742  003072  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21743  003074  0E00               	movlw	0
 21744  003076  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21745  003078  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21746                           
 21747                           ;eusartparser.c: 397:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(0*16));
 21748  00307A  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21749  00307C  6E17               	movwf	??_write_eusartparser^0,c
 21750  00307E  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21751  003080  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21752  003082  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21753  003084  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21754  003086  1C17               	comf	??_write_eusartparser^0,w,c
 21755  003088  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21756  00308A  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21757  00308C  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21758  00308E  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21759  003090  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21760  003092  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21761  003094  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21762  003096  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21763  003098  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21764  00309A  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21765  00309C  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21766  00309E  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21767  0030A0  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21768  0030A2  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21769  0030A4  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21770  0030A6  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21771  0030A8  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21772  0030AA  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21773  0030AC  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21774                           
 21775                           ;eusartparser.c: 398:                 break;
 21776  0030AE  0012               	return	
 21777  0030B0                     l16146:
 21778                           
 21779                           ; BSR set to: 0
 21780                           ;eusartparser.c: 401:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 21781  0030B0  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21782  0030B2  6E17               	movwf	??_write_eusartparser^0,c
 21783  0030B4  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21784  0030B6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21785  0030B8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21786  0030BA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21787  0030BC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21788  0030C0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21789  0030C4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21790  0030C6  6A17               	clrf	??_write_eusartparser^0,c
 21791  0030C8  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21792  0030CA  1017               	iorwf	??_write_eusartparser^0,w,c
 21793  0030CC  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21794  0030CE  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21795  0030D0  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21796  0030D2  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21797  0030D4  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21798  0030D6  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21799  0030D8  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21800  0030DA  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21801  0030DC  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21802  0030DE  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21803                           
 21804                           ;eusartparser.c: 402:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21805  0030E0  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21806  0030E2  6E17               	movwf	??_write_eusartparser^0,c
 21807  0030E4  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21808  0030E6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21809  0030E8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21810  0030EA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21811  0030EC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21812  0030F0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21813  0030F4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21814  0030F6  6A17               	clrf	??_write_eusartparser^0,c
 21815  0030F8  1C17               	comf	??_write_eusartparser^0,w,c
 21816  0030FA  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21817  0030FC  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21818  0030FE  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21819  003100  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21820  003102  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21821  003104  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21822  003106  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21823  003108  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21824  00310A  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21825  00310C  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21826  00310E  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21827  003110  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21828  003112  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21829  003114  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21830  003116  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21831  003118  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21832  00311A  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21833  00311C  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21834  00311E  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21835                           
 21836                           ;eusartparser.c: 403:                 break;
 21837  003120  0012               	return	
 21838  003122                     l16148:
 21839                           
 21840                           ; BSR set to: 0
 21841                           ;eusartparser.c: 405:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 21842  003122  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21843  003124  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21844  003126  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21845  003128  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21846  00312A  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21847  00312C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21848  00312E  0E00               	movlw	0
 21849  003130  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21850  003132  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21851  003134  0E00               	movlw	0
 21852  003136  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21853  003138  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21854                           
 21855                           ;eusartparser.c: 406:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21856  00313A  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21857  00313C  6E17               	movwf	??_write_eusartparser^0,c
 21858  00313E  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21859  003140  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21860  003142  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21861  003144  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21862  003146  1C17               	comf	??_write_eusartparser^0,w,c
 21863  003148  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21864  00314A  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21865  00314C  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21866  00314E  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21867  003150  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21868  003152  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21869  003154  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21870  003156  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21871  003158  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21872  00315A  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21873  00315C  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21874  00315E  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21875  003160  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21876  003162  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21877  003164  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21878  003166  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21879  003168  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21880  00316A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21881  00316C  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21882                           
 21883                           ;eusartparser.c: 407:                 break;
 21884  00316E  0012               	return	
 21885  003170                     l3617:
 21886                           
 21887                           ; BSR set to: 0
 21888                           ;eusartparser.c: 410:                 var_sys_NVM.learningCurrentNormalClose=package.dat
      +                          a.data16;
 21889  003170  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 21890  003174  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 21891                           
 21892                           ;eusartparser.c: 411:                 break;
 21893  003178  0012               	return	
 21894  00317A                     l3618:
 21895                           
 21896                           ; BSR set to: 0
 21897                           ;eusartparser.c: 414:                 var_sys_NVM.learningCurrentNormalOpen=package.data
      +                          .data16;
 21898  00317A  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 21899  00317E  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 21900                           
 21901                           ;eusartparser.c: 415:                 break;
 21902  003182  0012               	return	
 21903  003184                     l16160:
 21904                           
 21905                           ; BSR set to: 0
 21906  003184  5011               	movf	(write_eusartparser@package+1)^0,w,c
 21907  003186  6E17               	movwf	??_write_eusartparser^0,c
 21908  003188  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21909                           
 21910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21911                           ; Switch size 1, requested type "simple"
 21912                           ; Number of cases is 1, Range of values is 0 to 0
 21913                           ; switch strategies available:
 21914                           ; Name         Instructions Cycles
 21915                           ; simple_byte            4     3 (average)
 21916                           ;	Chosen strategy is simple_byte
 21917  00318A  5018               	movf	(??_write_eusartparser+1)^0,w,c
 21918  00318C  0A00               	xorlw	0	; case 0
 21919  00318E  A4D8               	btfss	status,2,c
 21920  003190  0012               	return	
 21921                           
 21922                           ; BSR set to: 0
 21923                           ; Switch size 1, requested type "simple"
 21924                           ; Number of cases is 43, Range of values is 0 to 51
 21925                           ; switch strategies available:
 21926                           ; Name         Instructions Cycles
 21927                           ; simple_byte          130    66 (average)
 21928                           ;	Chosen strategy is simple_byte
 21929  003192  5017               	movf	??_write_eusartparser^0,w,c
 21930  003194  0A00               	xorlw	0	; case 0
 21931  003196  B4D8               	btfsc	status,2,c
 21932  003198  D675               	goto	l3580
 21933  00319A  0A02               	xorlw	2	; case 2
 21934  00319C  B4D8               	btfsc	status,2,c
 21935  00319E  D67F               	goto	l3585
 21936  0031A0  0A01               	xorlw	1	; case 3
 21937  0031A2  B4D8               	btfsc	status,2,c
 21938  0031A4  D6A5               	goto	l3599
 21939  0031A6  0A06               	xorlw	6	; case 5
 21940  0031A8  B4D8               	btfsc	status,2,c
 21941  0031AA  D67E               	goto	l3587
 21942  0031AC  0A02               	xorlw	2	; case 7
 21943  0031AE  B4D8               	btfsc	status,2,c
 21944  0031B0  D697               	goto	l3596
 21945  0031B2  0A0F               	xorlw	15	; case 8
 21946  0031B4  B4D8               	btfsc	status,2,c
 21947  0031B6  D6AB               	goto	l3606
 21948  0031B8  0A02               	xorlw	2	; case 10
 21949  0031BA  B4D8               	btfsc	status,2,c
 21950  0031BC  D69C               	goto	l3601
 21951  0031BE  0A1A               	xorlw	26	; case 16
 21952  0031C0  B4D8               	btfsc	status,2,c
 21953  0031C2  D660               	goto	l3580
 21954  0031C4  0A01               	xorlw	1	; case 17
 21955  0031C6  B4D8               	btfsc	status,2,c
 21956  0031C8  D662               	goto	l3582
 21957  0031CA  0A03               	xorlw	3	; case 18
 21958  0031CC  B4D8               	btfsc	status,2,c
 21959  0031CE  D664               	goto	l3583
 21960  0031D0  0A01               	xorlw	1	; case 19
 21961  0031D2  B4D8               	btfsc	status,2,c
 21962  0031D4  D664               	goto	l3585
 21963  0031D6  0A07               	xorlw	7	; case 20
 21964  0031D8  B4D8               	btfsc	status,2,c
 21965  0031DA  D666               	goto	l3587
 21966  0031DC  0A01               	xorlw	1	; case 21
 21967  0031DE  B4D8               	btfsc	status,2,c
 21968  0031E0  D668               	goto	l3588
 21969  0031E2  0A03               	xorlw	3	; case 22
 21970  0031E4  B4D8               	btfsc	status,2,c
 21971  0031E6  D66A               	goto	l3589
 21972  0031E8  0A01               	xorlw	1	; case 23
 21973  0031EA  B4D8               	btfsc	status,2,c
 21974  0031EC  D66A               	goto	l3590
 21975  0031EE  0A0F               	xorlw	15	; case 24
 21976  0031F0  B4D8               	btfsc	status,2,c
 21977  0031F2  D66A               	goto	l3591
 21978  0031F4  0A01               	xorlw	1	; case 25
 21979  0031F6  B4D8               	btfsc	status,2,c
 21980  0031F8  D66A               	goto	l3592
 21981  0031FA  0A03               	xorlw	3	; case 26
 21982  0031FC  B4D8               	btfsc	status,2,c
 21983  0031FE  D66A               	goto	l3593
 21984  003200  0A01               	xorlw	1	; case 27
 21985  003202  B4D8               	btfsc	status,2,c
 21986  003204  D66A               	goto	l3594
 21987  003206  0A07               	xorlw	7	; case 28
 21988  003208  B4D8               	btfsc	status,2,c
 21989  00320A  D66A               	goto	l3596
 21990  00320C  0A01               	xorlw	1	; case 29
 21991  00320E  B4D8               	btfsc	status,2,c
 21992  003210  D66A               	goto	l3597
 21993  003212  0A03               	xorlw	3	; case 30
 21994  003214  B4D8               	btfsc	status,2,c
 21995  003216  D66C               	goto	l3599
 21996  003218  0A01               	xorlw	1	; case 31
 21997  00321A  B4D8               	btfsc	status,2,c
 21998  00321C  D66C               	goto	l3601
 21999  00321E  0A3F               	xorlw	63	; case 32
 22000  003220  B4D8               	btfsc	status,2,c
 22001  003222  D66C               	goto	l3602
 22002  003224  0A01               	xorlw	1	; case 33
 22003  003226  B4D8               	btfsc	status,2,c
 22004  003228  D66C               	goto	l3603
 22005  00322A  0A03               	xorlw	3	; case 34
 22006  00322C  B4D8               	btfsc	status,2,c
 22007  00322E  D66C               	goto	l3604
 22008  003230  0A01               	xorlw	1	; case 35
 22009  003232  B4D8               	btfsc	status,2,c
 22010  003234  D66C               	goto	l3606
 22011  003236  0A07               	xorlw	7	; case 36
 22012  003238  B4D8               	btfsc	status,2,c
 22013  00323A  D66C               	goto	l3607
 22014  00323C  0A01               	xorlw	1	; case 37
 22015  00323E  B4D8               	btfsc	status,2,c
 22016  003240  D66C               	goto	l3608
 22017  003242  0A03               	xorlw	3	; case 38
 22018  003244  B4D8               	btfsc	status,2,c
 22019  003246  D66C               	goto	l3609
 22020  003248  0A01               	xorlw	1	; case 39
 22021  00324A  B4D8               	btfsc	status,2,c
 22022  00324C  D66E               	goto	l16138
 22023  00324E  0A0F               	xorlw	15	; case 40
 22024  003250  B4D8               	btfsc	status,2,c
 22025  003252  D6A4               	goto	l16140
 22026  003254  0A01               	xorlw	1	; case 41
 22027  003256  B4D8               	btfsc	status,2,c
 22028  003258  D6C8               	goto	l3612
 22029  00325A  0A03               	xorlw	3	; case 42
 22030  00325C  B4D8               	btfsc	status,2,c
 22031  00325E  D6C8               	goto	l16142
 22032  003260  0A01               	xorlw	1	; case 43
 22033  003262  B4D8               	btfsc	status,2,c
 22034  003264  D6FE               	goto	l16144
 22035  003266  0A07               	xorlw	7	; case 44
 22036  003268  B4D8               	btfsc	status,2,c
 22037  00326A  D722               	goto	l16146
 22038  00326C  0A01               	xorlw	1	; case 45
 22039  00326E  B4D8               	btfsc	status,2,c
 22040  003270  D758               	goto	l16148
 22041  003272  0A03               	xorlw	3	; case 46
 22042  003274  B4D8               	btfsc	status,2,c
 22043  003276  D77C               	goto	l3617
 22044  003278  0A01               	xorlw	1	; case 47
 22045  00327A  B4D8               	btfsc	status,2,c
 22046  00327C  D77E               	goto	l3618
 22047  00327E  0A1F               	xorlw	31	; case 48
 22048  003280  B4D8               	btfsc	status,2,c
 22049  003282  D716               	goto	l16146
 22050  003284  0A01               	xorlw	1	; case 49
 22051  003286  B4D8               	btfsc	status,2,c
 22052  003288  D74C               	goto	l16148
 22053  00328A  0A03               	xorlw	3	; case 50
 22054  00328C  B4D8               	btfsc	status,2,c
 22055  00328E  D710               	goto	l16146
 22056  003290  0A01               	xorlw	1	; case 51
 22057  003292  A4D8               	btfss	status,2,c
 22058  003294  0012               	return	
 22059  003296  D745               	goto	l16148
 22060  003298                     __end_of_write_eusartparser:
 22061                           	callstack 0
 22062                           
 22063 ;; *************** function _read_eusartparser *****************
 22064 ;; Defined at:
 22065 ;;		line 5 in file "eusartparser.c"
 22066 ;; Parameters:    Size  Location     Type
 22067 ;;  package         1   23[COMRAM] PTR struct package_t
 22068 ;;		 -> main@package(7), 
 22069 ;; Auto vars:     Size  Location     Type
 22070 ;;		None
 22071 ;; Return value:  Size  Location     Type
 22072 ;;                  1    wreg      void 
 22073 ;; Registers used:
 22074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22075 ;; Tracked objects:
 22076 ;;		On entry : 3F/0
 22077 ;;		On exit  : 0/0
 22078 ;;		Unchanged: 0/0
 22079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22080 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22083 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22084 ;;Total ram usage:        3 bytes
 22085 ;; Hardware stack levels used: 1
 22086 ;; Hardware stack levels required when called: 6
 22087 ;; This function calls:
 22088 ;;		_write_package
 22089 ;; This function is called by:
 22090 ;;		_eusartparser
 22091 ;; This function uses a non-reentrant model
 22092 ;;
 22093                           
 22094                           	psect	text81
 22095  00249C                     __ptext81:
 22096                           	callstack 0
 22097  00249C                     _read_eusartparser:
 22098                           	callstack 23
 22099                           
 22100                           ; BSR set to: 0
 22101                           ;eusartparser.c: 6:         switch(package->address){
 22102                           
 22103                           ; BSR set to: 0
 22104                           ;incstack = 0
 22105  00249C  D203               	goto	l16128
 22106  00249E                     l15992:
 22107                           
 22108                           ; BSR set to: 0
 22109                           ;eusartparser.c: 11:                 package->data.data8[1]=var_sys_NVM.decelarationClos
      +                          e;
 22110  00249E  5018               	movf	read_eusartparser@package^0,w,c
 22111  0024A0  6ED9               	movwf	fsr2l,c
 22112  0024A2  6ADA               	clrf	fsr2h,c
 22113  0024A4  0E03               	movlw	3
 22114  0024A6  26D9               	addwf	fsr2l,f,c
 22115  0024A8  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 22116                           
 22117                           ;eusartparser.c: 12:                 package->data.data8[0]=var_sys_NVM.decelarationOpen
      +                          ;
 22118  0024AC  5018               	movf	read_eusartparser@package^0,w,c
 22119  0024AE  6ED9               	movwf	fsr2l,c
 22120  0024B0  6ADA               	clrf	fsr2h,c
 22121  0024B2  0E02               	movlw	2
 22122  0024B4  26D9               	addwf	fsr2l,f,c
 22123  0024B6  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 22124  0024BA                     l15994:
 22125                           
 22126                           ; BSR set to: 0
 22127                           ;eusartparser.c: 13:                 write_package(*package);
 22128  0024BA  5018               	movf	read_eusartparser@package^0,w,c
 22129  0024BC  6ED9               	movwf	fsr2l,c
 22130  0024BE  6ADA               	clrf	fsr2h,c
 22131  0024C0  EE00  F011         	lfsr	0,write_package@package
 22132  0024C4  0E06               	movlw	6
 22133  0024C6                     u18021:
 22134  0024C6  CFDB FFEB          	movff	plusw2,plusw0
 22135  0024CA  06E8               	decf	wreg,f,c
 22136  0024CC  E2FC               	bc	u18021
 22137  0024CE  EC8F  F045         	call	_write_package	;wreg free
 22138                           
 22139                           ;eusartparser.c: 14:                 break;
 22140  0024D2  0012               	return	
 22141  0024D4                     l15996:
 22142                           
 22143                           ; BSR set to: 0
 22144                           ;eusartparser.c: 18:                 package->data.data8[1]=var_sys_NVM.motorSensitivity
      +                          ;
 22145  0024D4  5018               	movf	read_eusartparser@package^0,w,c
 22146  0024D6  6ED9               	movwf	fsr2l,c
 22147  0024D8  6ADA               	clrf	fsr2h,c
 22148  0024DA  0E03               	movlw	3
 22149  0024DC  26D9               	addwf	fsr2l,f,c
 22150  0024DE  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 22151                           
 22152                           ;eusartparser.c: 19:                 package->data.data8[0]=var_sys_NVM.motorPower;
 22153  0024E2  5018               	movf	read_eusartparser@package^0,w,c
 22154  0024E4  6ED9               	movwf	fsr2l,c
 22155  0024E6  6ADA               	clrf	fsr2h,c
 22156  0024E8  0E02               	movlw	2
 22157  0024EA  26D9               	addwf	fsr2l,f,c
 22158  0024EC  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 22159  0024F0  D7E4               	goto	l15994
 22160  0024F2                     l16000:
 22161                           
 22162                           ; BSR set to: 0
 22163                           ;eusartparser.c: 25:                 package->data.data8[1]=var_sys_NVM.walkTime;
 22164  0024F2  5018               	movf	read_eusartparser@package^0,w,c
 22165  0024F4  6ED9               	movwf	fsr2l,c
 22166  0024F6  6ADA               	clrf	fsr2h,c
 22167  0024F8  0E03               	movlw	3
 22168  0024FA  26D9               	addwf	fsr2l,f,c
 22169  0024FC  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 22170  002500  D0F9               	goto	L99
 22171  002502                     l16004:
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;eusartparser.c: 33:                 package->data.data8[1]=var_sys_NVM.autoTimeWalkClos
      +                          e;
 22175  002502  5018               	movf	read_eusartparser@package^0,w,c
 22176  002504  6ED9               	movwf	fsr2l,c
 22177  002506  6ADA               	clrf	fsr2h,c
 22178  002508  0E03               	movlw	3
 22179  00250A  26D9               	addwf	fsr2l,f,c
 22180  00250C  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 22181                           
 22182                           ;eusartparser.c: 34:                 package->data.data8[0]=var_sys_NVM.autoTimeFullClos
      +                          e;
 22183  002510  5018               	movf	read_eusartparser@package^0,w,c
 22184  002512  6ED9               	movwf	fsr2l,c
 22185  002514  6ADA               	clrf	fsr2h,c
 22186  002516  0E02               	movlw	2
 22187  002518  26D9               	addwf	fsr2l,f,c
 22188  00251A  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 22189  00251E  D7CD               	goto	l15994
 22190  002520                     l16008:
 22191                           
 22192                           ; BSR set to: 0
 22193                           ;eusartparser.c: 41:                 package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 22194  002520  5018               	movf	read_eusartparser@package^0,w,c
 22195  002522  6ED9               	movwf	fsr2l,c
 22196  002524  6ADA               	clrf	fsr2h,c
 22197  002526  0E03               	movlw	3
 22198  002528  26D9               	addwf	fsr2l,f,c
 22199  00252A  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 22200                           
 22201                           ;eusartparser.c: 42:                 package->data.data8[0]=var_sys_NVM.photoCellIsON;
 22202  00252E  5018               	movf	read_eusartparser@package^0,w,c
 22203  002530  6ED9               	movwf	fsr2l,c
 22204  002532  6ADA               	clrf	fsr2h,c
 22205  002534  0E02               	movlw	2
 22206  002536  26D9               	addwf	fsr2l,f,c
 22207  002538  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 22208  00253C  D7BE               	goto	l15994
 22209  00253E                     l16012:
 22210                           
 22211                           ; BSR set to: 0
 22212                           ;eusartparser.c: 48:                 package->data.data8[1]=var_sys_NVM.securityBandType
      +                          ;
 22213  00253E  5018               	movf	read_eusartparser@package^0,w,c
 22214  002540  6ED9               	movwf	fsr2l,c
 22215  002542  6ADA               	clrf	fsr2h,c
 22216  002544  0E03               	movlw	3
 22217  002546  26D9               	addwf	fsr2l,f,c
 22218  002548  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 22219                           
 22220                           ;eusartparser.c: 49:                 package->data.data8[0]=var_sys_NVM.securityBandIsON
      +                          ;
 22221  00254C  5018               	movf	read_eusartparser@package^0,w,c
 22222  00254E  6ED9               	movwf	fsr2l,c
 22223  002550  6ADA               	clrf	fsr2h,c
 22224  002552  0E02               	movlw	2
 22225  002554  26D9               	addwf	fsr2l,f,c
 22226  002556  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 22227  00255A  D7AF               	goto	l15994
 22228  00255C                     l16016:
 22229                           
 22230                           ; BSR set to: 0
 22231                           ;eusartparser.c: 55:                 package->data.data8[1]=var_sys_NVM.securityBandInOp
      +                          en;
 22232  00255C  5018               	movf	read_eusartparser@package^0,w,c
 22233  00255E  6ED9               	movwf	fsr2l,c
 22234  002560  6ADA               	clrf	fsr2h,c
 22235  002562  0E03               	movlw	3
 22236  002564  26D9               	addwf	fsr2l,f,c
 22237  002566  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 22238  00256A  D0C4               	goto	L99
 22239  00256C                     l16020:
 22240                           
 22241                           ; BSR set to: 0
 22242                           ;eusartparser.c: 62:                 package->data.data8[1]=var_sys_NVM.operationMode;
 22243  00256C  5018               	movf	read_eusartparser@package^0,w,c
 22244  00256E  6ED9               	movwf	fsr2l,c
 22245  002570  6ADA               	clrf	fsr2h,c
 22246  002572  0E03               	movlw	3
 22247  002574  26D9               	addwf	fsr2l,f,c
 22248  002576  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 22249  00257A  D0BC               	goto	L99
 22250  00257C                     l16024:
 22251                           
 22252                           ; BSR set to: 0
 22253                           ;eusartparser.c: 69:                 package->data.data8[1]=var_sys_NVM.flashLightMode;
 22254  00257C  5018               	movf	read_eusartparser@package^0,w,c
 22255  00257E  6ED9               	movwf	fsr2l,c
 22256  002580  6ADA               	clrf	fsr2h,c
 22257  002582  0E03               	movlw	3
 22258  002584  26D9               	addwf	fsr2l,f,c
 22259  002586  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 22260  00258A  D0B4               	goto	L99
 22261  00258C                     l16028:
 22262                           
 22263                           ; BSR set to: 0
 22264                           ;eusartparser.c: 76:                 package->data.data8[1]=var_sys_NVM.programmingDista
      +                          nce;
 22265  00258C  5018               	movf	read_eusartparser@package^0,w,c
 22266  00258E  6ED9               	movwf	fsr2l,c
 22267  002590  6ADA               	clrf	fsr2h,c
 22268  002592  0E03               	movlw	3
 22269  002594  26D9               	addwf	fsr2l,f,c
 22270  002596  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 22271  00259A  D0AC               	goto	L99
 22272  00259C                     l16032:
 22273                           
 22274                           ; BSR set to: 0
 22275                           ;eusartparser.c: 83:                 package->data.data8[1]=var_sys_NVM.decelarationSens
      +                          ivity;
 22276  00259C  5018               	movf	read_eusartparser@package^0,w,c
 22277  00259E  6ED9               	movwf	fsr2l,c
 22278  0025A0  6ADA               	clrf	fsr2h,c
 22279  0025A2  0E03               	movlw	3
 22280  0025A4  26D9               	addwf	fsr2l,f,c
 22281  0025A6  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 22282  0025AA  D0A4               	goto	L99
 22283  0025AC                     l16036:
 22284                           
 22285                           ; BSR set to: 0
 22286                           ;eusartparser.c: 91:                 package->data.data8[1]=var_sys_NVM.homemPresente;
 22287  0025AC  5018               	movf	read_eusartparser@package^0,w,c
 22288  0025AE  6ED9               	movwf	fsr2l,c
 22289  0025B0  6ADA               	clrf	fsr2h,c
 22290  0025B2  0E03               	movlw	3
 22291  0025B4  26D9               	addwf	fsr2l,f,c
 22292  0025B6  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 22293  0025BA  D09C               	goto	L99
 22294  0025BC                     l16040:
 22295                           
 22296                           ; BSR set to: 0
 22297                           ;eusartparser.c: 99:                 package->data.data8[1]=var_sys_NVM.logicDigital;
 22298  0025BC  5018               	movf	read_eusartparser@package^0,w,c
 22299  0025BE  6ED9               	movwf	fsr2l,c
 22300  0025C0  6ADA               	clrf	fsr2h,c
 22301  0025C2  0E03               	movlw	3
 22302  0025C4  26D9               	addwf	fsr2l,f,c
 22303  0025C6  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 22304  0025CA  D094               	goto	L99
 22305  0025CC                     l16044:
 22306                           
 22307                           ; BSR set to: 0
 22308                           ;eusartparser.c: 106:                 package->data.data8[1]=var_sys_NVM.softstop;
 22309  0025CC  5018               	movf	read_eusartparser@package^0,w,c
 22310  0025CE  6ED9               	movwf	fsr2l,c
 22311  0025D0  6ADA               	clrf	fsr2h,c
 22312  0025D2  0E03               	movlw	3
 22313  0025D4  26D9               	addwf	fsr2l,f,c
 22314  0025D6  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 22315                           
 22316                           ;eusartparser.c: 107:                 package->data.data8[0]=var_sys_NVM.softStart;
 22317  0025DA  5018               	movf	read_eusartparser@package^0,w,c
 22318  0025DC  6ED9               	movwf	fsr2l,c
 22319  0025DE  6ADA               	clrf	fsr2h,c
 22320  0025E0  0E02               	movlw	2
 22321  0025E2  26D9               	addwf	fsr2l,f,c
 22322  0025E4  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 22323  0025E8  D768               	goto	l15994
 22324  0025EA                     l16048:
 22325                           
 22326                           ; BSR set to: 0
 22327                           ;eusartparser.c: 114:                 package->data.data8[1]=var_sys_NVM.ligthTime;
 22328  0025EA  5018               	movf	read_eusartparser@package^0,w,c
 22329  0025EC  6ED9               	movwf	fsr2l,c
 22330  0025EE  6ADA               	clrf	fsr2h,c
 22331  0025F0  0E03               	movlw	3
 22332  0025F2  26D9               	addwf	fsr2l,f,c
 22333  0025F4  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 22334  0025F8  D07D               	goto	L99
 22335  0025FA                     l16052:
 22336                           
 22337                           ; BSR set to: 0
 22338                           ;eusartparser.c: 122:                 package->data.data8[1]=var_sys_NVM.folow_me;
 22339  0025FA  5018               	movf	read_eusartparser@package^0,w,c
 22340  0025FC  6ED9               	movwf	fsr2l,c
 22341  0025FE  6ADA               	clrf	fsr2h,c
 22342  002600  0E03               	movlw	3
 22343  002602  26D9               	addwf	fsr2l,f,c
 22344  002604  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 22345  002608  D075               	goto	L99
 22346  00260A                     l16056:
 22347                           
 22348                           ; BSR set to: 0
 22349                           ;eusartparser.c: 129:                 package->data.data8[1]=var_sys_NVM.Stopboton;
 22350  00260A  5018               	movf	read_eusartparser@package^0,w,c
 22351  00260C  6ED9               	movwf	fsr2l,c
 22352  00260E  6ADA               	clrf	fsr2h,c
 22353  002610  0E03               	movlw	3
 22354  002612  26D9               	addwf	fsr2l,f,c
 22355  002614  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 22356  002618  D06D               	goto	L99
 22357  00261A                     l16060:
 22358                           
 22359                           ; BSR set to: 0
 22360                           ;eusartparser.c: 136:                 package->data.data8[1]=var_sys_NVM.electricBrake;
 22361  00261A  5018               	movf	read_eusartparser@package^0,w,c
 22362  00261C  6ED9               	movwf	fsr2l,c
 22363  00261E  6ADA               	clrf	fsr2h,c
 22364  002620  0E03               	movlw	3
 22365  002622  26D9               	addwf	fsr2l,f,c
 22366  002624  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 22367  002628  D065               	goto	L99
 22368  00262A                     l16064:
 22369                           
 22370                           ; BSR set to: 0
 22371                           ;eusartparser.c: 143:                 package->data.data8[1]=var_sys_NVM.velocityDecelar
      +                          ation;
 22372  00262A  5018               	movf	read_eusartparser@package^0,w,c
 22373  00262C  6ED9               	movwf	fsr2l,c
 22374  00262E  6ADA               	clrf	fsr2h,c
 22375  002630  0E03               	movlw	3
 22376  002632  26D9               	addwf	fsr2l,f,c
 22377  002634  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 22378  002638  D05D               	goto	L99
 22379  00263A                     l16068:
 22380                           
 22381                           ; BSR set to: 0
 22382                           ;eusartparser.c: 151:                 package->data.data8[1]=var_sys_NVM.flashRGBMode;
 22383  00263A  5018               	movf	read_eusartparser@package^0,w,c
 22384  00263C  6ED9               	movwf	fsr2l,c
 22385  00263E  6ADA               	clrf	fsr2h,c
 22386  002640  0E03               	movlw	3
 22387  002642  26D9               	addwf	fsr2l,f,c
 22388  002644  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 22389  002648  D055               	goto	L99
 22390  00264A                     l16072:
 22391                           
 22392                           ; BSR set to: 0
 22393                           ;eusartparser.c: 158:                 package->data.data8[1]=var_sys_NVM.Direction_motor
      +                          ;
 22394  00264A  5018               	movf	read_eusartparser@package^0,w,c
 22395  00264C  6ED9               	movwf	fsr2l,c
 22396  00264E  6ADA               	clrf	fsr2h,c
 22397  002650  0E03               	movlw	3
 22398  002652  26D9               	addwf	fsr2l,f,c
 22399  002654  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 22400  002658  D04D               	goto	L99
 22401  00265A                     l16076:
 22402                           
 22403                           ; BSR set to: 0
 22404                           ;eusartparser.c: 165:                 package->data.data8[1]=var_sys_NVM.TypeofMotor;
 22405  00265A  5018               	movf	read_eusartparser@package^0,w,c
 22406  00265C  6ED9               	movwf	fsr2l,c
 22407  00265E  6ADA               	clrf	fsr2h,c
 22408  002660  0E03               	movlw	3
 22409  002662  26D9               	addwf	fsr2l,f,c
 22410  002664  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 22411  002668  D045               	goto	L99
 22412  00266A                     l16080:
 22413                           
 22414                           ; BSR set to: 0
 22415                           ;eusartparser.c: 172:                 package->data.data8[1]=var_sys_NVM.positionRemotes
      +                          Walk;
 22416  00266A  5018               	movf	read_eusartparser@package^0,w,c
 22417  00266C  6ED9               	movwf	fsr2l,c
 22418  00266E  6ADA               	clrf	fsr2h,c
 22419  002670  0E03               	movlw	3
 22420  002672  26D9               	addwf	fsr2l,f,c
 22421  002674  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 22422                           
 22423                           ;eusartparser.c: 173:                 package->data.data8[0]=var_sys_NVM.positionRemotes
      +                          Full;
 22424  002678  5018               	movf	read_eusartparser@package^0,w,c
 22425  00267A  6ED9               	movwf	fsr2l,c
 22426  00267C  6ADA               	clrf	fsr2h,c
 22427  00267E  0E02               	movlw	2
 22428  002680  26D9               	addwf	fsr2l,f,c
 22429  002682  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 22430  002686  D719               	goto	l15994
 22431  002688                     l16084:
 22432                           
 22433                           ; BSR set to: 0
 22434                           ;eusartparser.c: 179:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+1);
 22435  002688  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 22436  00268C  5018               	movf	read_eusartparser@package^0,w,c
 22437  00268E  6EE1               	movwf	fsr1l,c
 22438  002690  6AE2               	clrf	fsr1h,c
 22439  002692  0E02               	movlw	2
 22440  002694  26E1               	addwf	fsr1l,f,c
 22441  002696  CFDE FFE6          	movff	postinc2,postinc1
 22442  00269A  CFDD FFE5          	movff	postdec2,postdec1
 22443                           
 22444                           ; BSR set to: 0
 22445                           ;eusartparser.c: 180:                 write_package(*package);
 22446  00269E  5018               	movf	read_eusartparser@package^0,w,c
 22447  0026A0  6ED9               	movwf	fsr2l,c
 22448  0026A2  6ADA               	clrf	fsr2h,c
 22449  0026A4  EE00  F011         	lfsr	0,write_package@package
 22450  0026A8  0E06               	movlw	6
 22451  0026AA                     u18031:
 22452  0026AA  CFDB FFEB          	movff	plusw2,plusw0
 22453  0026AE  06E8               	decf	wreg,f,c
 22454  0026B0  E2FC               	bc	u18031
 22455  0026B2  EC8F  F045         	call	_write_package	;wreg free
 22456                           
 22457                           ;eusartparser.c: 181:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+0);
 22458  0026B6  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 22459  0026BA  5018               	movf	read_eusartparser@package^0,w,c
 22460  0026BC  6EE1               	movwf	fsr1l,c
 22461  0026BE  6AE2               	clrf	fsr1h,c
 22462  0026C0  0E02               	movlw	2
 22463  0026C2  26E1               	addwf	fsr1l,f,c
 22464  0026C4  CFDE FFE6          	movff	postinc2,postinc1
 22465  0026C8  CFDD FFE5          	movff	postdec2,postdec1
 22466                           
 22467                           ;eusartparser.c: 182:                 write_package(*package);
 22468  0026CC  5018               	movf	read_eusartparser@package^0,w,c
 22469  0026CE  6ED9               	movwf	fsr2l,c
 22470  0026D0  6ADA               	clrf	fsr2h,c
 22471  0026D2  EE00  F011         	lfsr	0,write_package@package
 22472  0026D6  0E06               	movlw	6
 22473  0026D8                     u18041:
 22474  0026D8  CFDB FFEB          	movff	plusw2,plusw0
 22475  0026DC  06E8               	decf	wreg,f,c
 22476  0026DE  E2FC               	bc	u18041
 22477  0026E0  EC8F  F045         	call	_write_package	;wreg free
 22478                           
 22479                           ;eusartparser.c: 183:                 break;
 22480  0026E4  0012               	return	
 22481  0026E6                     l16090:
 22482                           
 22483                           ; BSR set to: 0
 22484                           ;eusartparser.c: 187:                 package->data.data8[1]=var_sys_NVM.OnlyRollingCode
      +                          ;
 22485  0026E6  5018               	movf	read_eusartparser@package^0,w,c
 22486  0026E8  6ED9               	movwf	fsr2l,c
 22487  0026EA  6ADA               	clrf	fsr2h,c
 22488  0026EC  0E03               	movlw	3
 22489  0026EE  26D9               	addwf	fsr2l,f,c
 22490  0026F0  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 22491  0026F4                     L99:
 22492                           
 22493                           ;eusartparser.c: 188:                 package->data.data8[0]=0x00;
 22494  0026F4  5018               	movf	read_eusartparser@package^0,w,c
 22495  0026F6  6ED9               	movwf	fsr2l,c
 22496  0026F8  6ADA               	clrf	fsr2h,c
 22497  0026FA  0E02               	movlw	2
 22498  0026FC  26D9               	addwf	fsr2l,f,c
 22499  0026FE  0E00               	movlw	0
 22500  002700  6EDF               	movwf	indf2,c
 22501  002702  D6DB               	goto	l15994
 22502  002704                     l16094:
 22503                           
 22504                           ; BSR set to: 0
 22505                           ;eusartparser.c: 194:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+1);
 22506  002704  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 22507  002708  5018               	movf	read_eusartparser@package^0,w,c
 22508  00270A  6EE1               	movwf	fsr1l,c
 22509  00270C  6AE2               	clrf	fsr1h,c
 22510  00270E  0E02               	movlw	2
 22511  002710  26E1               	addwf	fsr1l,f,c
 22512  002712  CFDE FFE6          	movff	postinc2,postinc1
 22513  002716  CFDD FFE5          	movff	postdec2,postdec1
 22514                           
 22515                           ; BSR set to: 0
 22516                           ;eusartparser.c: 195:                 write_package(*package);
 22517  00271A  5018               	movf	read_eusartparser@package^0,w,c
 22518  00271C  6ED9               	movwf	fsr2l,c
 22519  00271E  6ADA               	clrf	fsr2h,c
 22520  002720  EE00  F011         	lfsr	0,write_package@package
 22521  002724  0E06               	movlw	6
 22522  002726                     u18051:
 22523  002726  CFDB FFEB          	movff	plusw2,plusw0
 22524  00272A  06E8               	decf	wreg,f,c
 22525  00272C  E2FC               	bc	u18051
 22526  00272E  EC8F  F045         	call	_write_package	;wreg free
 22527                           
 22528                           ;eusartparser.c: 196:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+0);
 22529  002732  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 22530  002736  5018               	movf	read_eusartparser@package^0,w,c
 22531  002738  6EE1               	movwf	fsr1l,c
 22532  00273A  6AE2               	clrf	fsr1h,c
 22533  00273C  0E02               	movlw	2
 22534  00273E  26E1               	addwf	fsr1l,f,c
 22535  002740  CFDE FFE6          	movff	postinc2,postinc1
 22536  002744  CFDD FFE5          	movff	postdec2,postdec1
 22537                           
 22538                           ;eusartparser.c: 197:                 write_package(*package);
 22539  002748  5018               	movf	read_eusartparser@package^0,w,c
 22540  00274A  6ED9               	movwf	fsr2l,c
 22541  00274C  6ADA               	clrf	fsr2h,c
 22542  00274E  EE00  F011         	lfsr	0,write_package@package
 22543  002752  0E06               	movlw	6
 22544  002754                     u18061:
 22545  002754  CFDB FFEB          	movff	plusw2,plusw0
 22546  002758  06E8               	decf	wreg,f,c
 22547  00275A  E2FC               	bc	u18061
 22548  00275C  EC8F  F045         	call	_write_package	;wreg free
 22549                           
 22550                           ;eusartparser.c: 198:                 break;
 22551  002760  0012               	return	
 22552  002762                     l16100:
 22553                           
 22554                           ; BSR set to: 0
 22555                           ;eusartparser.c: 202:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+1);
 22556  002762  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 22557  002766  5018               	movf	read_eusartparser@package^0,w,c
 22558  002768  6EE1               	movwf	fsr1l,c
 22559  00276A  6AE2               	clrf	fsr1h,c
 22560  00276C  0E02               	movlw	2
 22561  00276E  26E1               	addwf	fsr1l,f,c
 22562  002770  CFDE FFE6          	movff	postinc2,postinc1
 22563  002774  CFDD FFE5          	movff	postdec2,postdec1
 22564                           
 22565                           ; BSR set to: 0
 22566                           ;eusartparser.c: 203:                 write_package(*package);
 22567  002778  5018               	movf	read_eusartparser@package^0,w,c
 22568  00277A  6ED9               	movwf	fsr2l,c
 22569  00277C  6ADA               	clrf	fsr2h,c
 22570  00277E  EE00  F011         	lfsr	0,write_package@package
 22571  002782  0E06               	movlw	6
 22572  002784                     u18071:
 22573  002784  CFDB FFEB          	movff	plusw2,plusw0
 22574  002788  06E8               	decf	wreg,f,c
 22575  00278A  E2FC               	bc	u18071
 22576  00278C  EC8F  F045         	call	_write_package	;wreg free
 22577                           
 22578                           ;eusartparser.c: 204:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+0);
 22579  002790  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 22580  002794  5018               	movf	read_eusartparser@package^0,w,c
 22581  002796  6EE1               	movwf	fsr1l,c
 22582  002798  6AE2               	clrf	fsr1h,c
 22583  00279A  0E02               	movlw	2
 22584  00279C  26E1               	addwf	fsr1l,f,c
 22585  00279E  CFDE FFE6          	movff	postinc2,postinc1
 22586  0027A2  CFDD FFE5          	movff	postdec2,postdec1
 22587                           
 22588                           ;eusartparser.c: 205:                 write_package(*package);
 22589  0027A6  5018               	movf	read_eusartparser@package^0,w,c
 22590  0027A8  6ED9               	movwf	fsr2l,c
 22591  0027AA  6ADA               	clrf	fsr2h,c
 22592  0027AC  EE00  F011         	lfsr	0,write_package@package
 22593  0027B0  0E06               	movlw	6
 22594  0027B2                     u18081:
 22595  0027B2  CFDB FFEB          	movff	plusw2,plusw0
 22596  0027B6  06E8               	decf	wreg,f,c
 22597  0027B8  E2FC               	bc	u18081
 22598  0027BA  EC8F  F045         	call	_write_package	;wreg free
 22599                           
 22600                           ;eusartparser.c: 206:                 break;
 22601  0027BE  0012               	return	
 22602  0027C0                     l16106:
 22603                           
 22604                           ; BSR set to: 0
 22605                           ;eusartparser.c: 210:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalClose;
 22606  0027C0  5018               	movf	read_eusartparser@package^0,w,c
 22607  0027C2  6ED9               	movwf	fsr2l,c
 22608  0027C4  6ADA               	clrf	fsr2h,c
 22609  0027C6  0E02               	movlw	2
 22610  0027C8  26D9               	addwf	fsr2l,f,c
 22611  0027CA  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 22612  0027CE  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 22613  0027D2  D673               	goto	l15994
 22614  0027D4                     l16110:
 22615                           
 22616                           ; BSR set to: 0
 22617                           ;eusartparser.c: 216:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalOpen;
 22618  0027D4  5018               	movf	read_eusartparser@package^0,w,c
 22619  0027D6  6ED9               	movwf	fsr2l,c
 22620  0027D8  6ADA               	clrf	fsr2h,c
 22621  0027DA  0E02               	movlw	2
 22622  0027DC  26D9               	addwf	fsr2l,f,c
 22623  0027DE  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 22624  0027E2  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 22625  0027E6  D669               	goto	l15994
 22626  0027E8                     l16114:
 22627                           
 22628                           ; BSR set to: 0
 22629                           ;eusartparser.c: 222:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+1);
 22630  0027E8  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 22631  0027EC  5018               	movf	read_eusartparser@package^0,w,c
 22632  0027EE  6EE1               	movwf	fsr1l,c
 22633  0027F0  6AE2               	clrf	fsr1h,c
 22634  0027F2  0E02               	movlw	2
 22635  0027F4  26E1               	addwf	fsr1l,f,c
 22636  0027F6  CFDE FFE6          	movff	postinc2,postinc1
 22637  0027FA  CFDD FFE5          	movff	postdec2,postdec1
 22638                           
 22639                           ; BSR set to: 0
 22640                           ;eusartparser.c: 223:                 write_package(*package);
 22641  0027FE  5018               	movf	read_eusartparser@package^0,w,c
 22642  002800  6ED9               	movwf	fsr2l,c
 22643  002802  6ADA               	clrf	fsr2h,c
 22644  002804  EE00  F011         	lfsr	0,write_package@package
 22645  002808  0E06               	movlw	6
 22646  00280A                     u18091:
 22647  00280A  CFDB FFEB          	movff	plusw2,plusw0
 22648  00280E  06E8               	decf	wreg,f,c
 22649  002810  E2FC               	bc	u18091
 22650  002812  EC8F  F045         	call	_write_package	;wreg free
 22651                           
 22652                           ;eusartparser.c: 224:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+0);
 22653  002816  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 22654  00281A  5018               	movf	read_eusartparser@package^0,w,c
 22655  00281C  6EE1               	movwf	fsr1l,c
 22656  00281E  6AE2               	clrf	fsr1h,c
 22657  002820  0E02               	movlw	2
 22658  002822  26E1               	addwf	fsr1l,f,c
 22659  002824  CFDE FFE6          	movff	postinc2,postinc1
 22660  002828  CFDD FFE5          	movff	postdec2,postdec1
 22661                           
 22662                           ;eusartparser.c: 225:                 write_package(*package);
 22663  00282C  5018               	movf	read_eusartparser@package^0,w,c
 22664  00282E  6ED9               	movwf	fsr2l,c
 22665  002830  6ADA               	clrf	fsr2h,c
 22666  002832  EE00  F011         	lfsr	0,write_package@package
 22667  002836  0E06               	movlw	6
 22668  002838                     u18101:
 22669  002838  CFDB FFEB          	movff	plusw2,plusw0
 22670  00283C  06E8               	decf	wreg,f,c
 22671  00283E  E2FC               	bc	u18101
 22672  002840  EC8F  F045         	call	_write_package	;wreg free
 22673                           
 22674                           ;eusartparser.c: 226:                 break;
 22675  002844  0012               	return	
 22676  002846                     l16120:
 22677                           
 22678                           ; BSR set to: 0
 22679                           ;eusartparser.c: 230:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+1);
 22680  002846  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 22681  00284A  5018               	movf	read_eusartparser@package^0,w,c
 22682  00284C  6EE1               	movwf	fsr1l,c
 22683  00284E  6AE2               	clrf	fsr1h,c
 22684  002850  0E02               	movlw	2
 22685  002852  26E1               	addwf	fsr1l,f,c
 22686  002854  CFDE FFE6          	movff	postinc2,postinc1
 22687  002858  CFDD FFE5          	movff	postdec2,postdec1
 22688                           
 22689                           ; BSR set to: 0
 22690                           ;eusartparser.c: 231:                 write_package(*package);
 22691  00285C  5018               	movf	read_eusartparser@package^0,w,c
 22692  00285E  6ED9               	movwf	fsr2l,c
 22693  002860  6ADA               	clrf	fsr2h,c
 22694  002862  EE00  F011         	lfsr	0,write_package@package
 22695  002866  0E06               	movlw	6
 22696  002868                     u18111:
 22697  002868  CFDB FFEB          	movff	plusw2,plusw0
 22698  00286C  06E8               	decf	wreg,f,c
 22699  00286E  E2FC               	bc	u18111
 22700  002870  EC8F  F045         	call	_write_package	;wreg free
 22701                           
 22702                           ;eusartparser.c: 232:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+0);
 22703  002874  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 22704  002878  5018               	movf	read_eusartparser@package^0,w,c
 22705  00287A  6EE1               	movwf	fsr1l,c
 22706  00287C  6AE2               	clrf	fsr1h,c
 22707  00287E  0E02               	movlw	2
 22708  002880  26E1               	addwf	fsr1l,f,c
 22709  002882  CFDE FFE6          	movff	postinc2,postinc1
 22710  002886  CFDD FFE5          	movff	postdec2,postdec1
 22711                           
 22712                           ;eusartparser.c: 233:                 write_package(*package);
 22713  00288A  5018               	movf	read_eusartparser@package^0,w,c
 22714  00288C  6ED9               	movwf	fsr2l,c
 22715  00288E  6ADA               	clrf	fsr2h,c
 22716  002890  EE00  F011         	lfsr	0,write_package@package
 22717  002894  0E06               	movlw	6
 22718  002896                     u18121:
 22719  002896  CFDB FFEB          	movff	plusw2,plusw0
 22720  00289A  06E8               	decf	wreg,f,c
 22721  00289C  E2FC               	bc	u18121
 22722  00289E  EC8F  F045         	call	_write_package	;wreg free
 22723                           
 22724                           ;eusartparser.c: 234:                 break;
 22725  0028A2  0012               	return	
 22726  0028A4                     l16128:
 22727                           
 22728                           ; BSR set to: 0
 22729  0028A4  5018               	movf	read_eusartparser@package^0,w,c
 22730  0028A6  6ED9               	movwf	fsr2l,c
 22731  0028A8  6ADA               	clrf	fsr2h,c
 22732  0028AA  0E01               	movlw	1
 22733  0028AC  26D9               	addwf	fsr2l,f,c
 22734  0028AE  50DF               	movf	indf2,w,c
 22735  0028B0  6E19               	movwf	??_read_eusartparser^0,c
 22736  0028B2  6A1A               	clrf	(??_read_eusartparser+1)^0,c
 22737                           
 22738                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22739                           ; Switch size 1, requested type "simple"
 22740                           ; Number of cases is 1, Range of values is 0 to 0
 22741                           ; switch strategies available:
 22742                           ; Name         Instructions Cycles
 22743                           ; simple_byte            4     3 (average)
 22744                           ;	Chosen strategy is simple_byte
 22745  0028B4  501A               	movf	(??_read_eusartparser+1)^0,w,c
 22746  0028B6  0A00               	xorlw	0	; case 0
 22747  0028B8  A4D8               	btfss	status,2,c
 22748  0028BA  0012               	return	
 22749                           
 22750                           ; BSR set to: 0
 22751                           ; Switch size 1, requested type "simple"
 22752                           ; Number of cases is 38, Range of values is 0 to 50
 22753                           ; switch strategies available:
 22754                           ; Name         Instructions Cycles
 22755                           ; simple_byte          115    58 (average)
 22756                           ;	Chosen strategy is simple_byte
 22757  0028BC  5019               	movf	??_read_eusartparser^0,w,c
 22758  0028BE  0A00               	xorlw	0	; case 0
 22759  0028C0  B4D8               	btfsc	status,2,c
 22760  0028C2  D5ED               	goto	l15992
 22761  0028C4  0A02               	xorlw	2	; case 2
 22762  0028C6  B4D8               	btfsc	status,2,c
 22763  0028C8  D61C               	goto	l16004
 22764  0028CA  0A01               	xorlw	1	; case 3
 22765  0028CC  B4D8               	btfsc	status,2,c
 22766  0028CE  D68D               	goto	l16048
 22767  0028D0  0A06               	xorlw	6	; case 5
 22768  0028D2  B4D8               	btfsc	status,2,c
 22769  0028D4  D625               	goto	l16008
 22770  0028D6  0A02               	xorlw	2	; case 7
 22771  0028D8  B4D8               	btfsc	status,2,c
 22772  0028DA  D670               	goto	l16040
 22773  0028DC  0A0F               	xorlw	15	; case 8
 22774  0028DE  B4D8               	btfsc	status,2,c
 22775  0028E0  D6AC               	goto	l16068
 22776  0028E2  0A02               	xorlw	2	; case 10
 22777  0028E4  B4D8               	btfsc	status,2,c
 22778  0028E6  D689               	goto	l16052
 22779  0028E8  0A1A               	xorlw	26	; case 16
 22780  0028EA  B4D8               	btfsc	status,2,c
 22781  0028EC  D5D8               	goto	l15992
 22782  0028EE  0A01               	xorlw	1	; case 17
 22783  0028F0  B4D8               	btfsc	status,2,c
 22784  0028F2  D5F0               	goto	l15996
 22785  0028F4  0A03               	xorlw	3	; case 18
 22786  0028F6  B4D8               	btfsc	status,2,c
 22787  0028F8  D5FC               	goto	l16000
 22788  0028FA  0A01               	xorlw	1	; case 19
 22789  0028FC  B4D8               	btfsc	status,2,c
 22790  0028FE  D601               	goto	l16004
 22791  002900  0A07               	xorlw	7	; case 20
 22792  002902  B4D8               	btfsc	status,2,c
 22793  002904  D60D               	goto	l16008
 22794  002906  0A01               	xorlw	1	; case 21
 22795  002908  B4D8               	btfsc	status,2,c
 22796  00290A  D619               	goto	l16012
 22797  00290C  0A03               	xorlw	3	; case 22
 22798  00290E  B4D8               	btfsc	status,2,c
 22799  002910  D625               	goto	l16016
 22800  002912  0A01               	xorlw	1	; case 23
 22801  002914  B4D8               	btfsc	status,2,c
 22802  002916  D62A               	goto	l16020
 22803  002918  0A0F               	xorlw	15	; case 24
 22804  00291A  B4D8               	btfsc	status,2,c
 22805  00291C  D62F               	goto	l16024
 22806  00291E  0A01               	xorlw	1	; case 25
 22807  002920  B4D8               	btfsc	status,2,c
 22808  002922  D634               	goto	l16028
 22809  002924  0A03               	xorlw	3	; case 26
 22810  002926  B4D8               	btfsc	status,2,c
 22811  002928  D639               	goto	l16032
 22812  00292A  0A01               	xorlw	1	; case 27
 22813  00292C  B4D8               	btfsc	status,2,c
 22814  00292E  D63E               	goto	l16036
 22815  002930  0A07               	xorlw	7	; case 28
 22816  002932  B4D8               	btfsc	status,2,c
 22817  002934  D643               	goto	l16040
 22818  002936  0A01               	xorlw	1	; case 29
 22819  002938  B4D8               	btfsc	status,2,c
 22820  00293A  D648               	goto	l16044
 22821  00293C  0A03               	xorlw	3	; case 30
 22822  00293E  B4D8               	btfsc	status,2,c
 22823  002940  D654               	goto	l16048
 22824  002942  0A01               	xorlw	1	; case 31
 22825  002944  B4D8               	btfsc	status,2,c
 22826  002946  D659               	goto	l16052
 22827  002948  0A3F               	xorlw	63	; case 32
 22828  00294A  B4D8               	btfsc	status,2,c
 22829  00294C  D65E               	goto	l16056
 22830  00294E  0A01               	xorlw	1	; case 33
 22831  002950  B4D8               	btfsc	status,2,c
 22832  002952  D663               	goto	l16060
 22833  002954  0A03               	xorlw	3	; case 34
 22834  002956  B4D8               	btfsc	status,2,c
 22835  002958  D668               	goto	l16064
 22836  00295A  0A01               	xorlw	1	; case 35
 22837  00295C  B4D8               	btfsc	status,2,c
 22838  00295E  D66D               	goto	l16068
 22839  002960  0A07               	xorlw	7	; case 36
 22840  002962  B4D8               	btfsc	status,2,c
 22841  002964  D672               	goto	l16072
 22842  002966  0A01               	xorlw	1	; case 37
 22843  002968  B4D8               	btfsc	status,2,c
 22844  00296A  D677               	goto	l16076
 22845  00296C  0A03               	xorlw	3	; case 38
 22846  00296E  B4D8               	btfsc	status,2,c
 22847  002970  D67C               	goto	l16080
 22848  002972  0A01               	xorlw	1	; case 39
 22849  002974  B4D8               	btfsc	status,2,c
 22850  002976  D688               	goto	l16084
 22851  002978  0A0E               	xorlw	14	; case 41
 22852  00297A  B4D8               	btfsc	status,2,c
 22853  00297C  D6B4               	goto	l16090
 22854  00297E  0A03               	xorlw	3	; case 42
 22855  002980  B4D8               	btfsc	status,2,c
 22856  002982  D6C0               	goto	l16094
 22857  002984  0A06               	xorlw	6	; case 44
 22858  002986  B4D8               	btfsc	status,2,c
 22859  002988  D6EC               	goto	l16100
 22860  00298A  0A02               	xorlw	2	; case 46
 22861  00298C  B4D8               	btfsc	status,2,c
 22862  00298E  D718               	goto	l16106
 22863  002990  0A01               	xorlw	1	; case 47
 22864  002992  B4D8               	btfsc	status,2,c
 22865  002994  D71F               	goto	l16110
 22866  002996  0A1F               	xorlw	31	; case 48
 22867  002998  B4D8               	btfsc	status,2,c
 22868  00299A  D726               	goto	l16114
 22869  00299C  0A02               	xorlw	2	; case 50
 22870  00299E  A4D8               	btfss	status,2,c
 22871  0029A0  0012               	return	
 22872  0029A2  D751               	goto	l16120
 22873  0029A4                     __end_of_read_eusartparser:
 22874                           	callstack 0
 22875                           
 22876 ;; *************** function _write_package *****************
 22877 ;; Defined at:
 22878 ;;		line 50 in file "eusartpackage.c"
 22879 ;; Parameters:    Size  Location     Type
 22880 ;;  package         7   16[COMRAM] const struct package_t
 22881 ;; Auto vars:     Size  Location     Type
 22882 ;;		None
 22883 ;; Return value:  Size  Location     Type
 22884 ;;                  1    wreg      void 
 22885 ;; Registers used:
 22886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22887 ;; Tracked objects:
 22888 ;;		On entry : 0/1
 22889 ;;		On exit  : 0/0
 22890 ;;		Unchanged: 0/0
 22891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22892 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22895 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22896 ;;Total ram usage:        7 bytes
 22897 ;; Hardware stack levels used: 1
 22898 ;; Hardware stack levels required when called: 5
 22899 ;; This function calls:
 22900 ;;		_EUSART1_Write
 22901 ;; This function is called by:
 22902 ;;		_read_eusartparser
 22903 ;;		_eusartparser
 22904 ;; This function uses a non-reentrant model
 22905 ;;
 22906                           
 22907                           	psect	text82
 22908  008B1E                     __ptext82:
 22909                           	callstack 0
 22910  008B1E                     _write_package:
 22911                           	callstack 24
 22912                           
 22913                           ;eusartpackage.c: 52:         if(package.valid==0)
 22914                           
 22915                           ;incstack = 0
 22916  008B1E  5017               	movf	(write_package@package+6)^0,w,c
 22917  008B20  B4D8               	btfsc	status,2,c
 22918  008B22  0012               	return	
 22919                           
 22920                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 22921  008B24  5015               	movf	(write_package@package+4)^0,w,c
 22922  008B26  EC27  F044         	call	_EUSART1_Write
 22923                           
 22924                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 22925  008B2A  5011               	movf	write_package@package^0,w,c
 22926  008B2C  EC27  F044         	call	_EUSART1_Write
 22927                           
 22928                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 22929  008B30  5012               	movf	(write_package@package+1)^0,w,c
 22930  008B32  EC27  F044         	call	_EUSART1_Write
 22931                           
 22932                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 22933  008B36  5013               	movf	(write_package@package+2)^0,w,c
 22934  008B38  EC27  F044         	call	_EUSART1_Write
 22935                           
 22936                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 22937  008B3C  5014               	movf	(write_package@package+3)^0,w,c
 22938  008B3E  EC27  F044         	call	_EUSART1_Write
 22939                           
 22940                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 22941  008B42  5016               	movf	(write_package@package+5)^0,w,c
 22942  008B44  EC27  F044         	call	_EUSART1_Write
 22943  008B48  0012               	return		;funcret
 22944  008B4A                     __end_of_write_package:
 22945                           	callstack 0
 22946                           
 22947 ;; *************** function _EUSART1_Write *****************
 22948 ;; Defined at:
 22949 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 22950 ;; Parameters:    Size  Location     Type
 22951 ;;  txData          1    wreg     unsigned char 
 22952 ;; Auto vars:     Size  Location     Type
 22953 ;;  txData          1   15[COMRAM] unsigned char 
 22954 ;; Return value:  Size  Location     Type
 22955 ;;                  1    wreg      void 
 22956 ;; Registers used:
 22957 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22958 ;; Tracked objects:
 22959 ;;		On entry : 0/1
 22960 ;;		On exit  : 3F/E
 22961 ;;		Unchanged: 0/0
 22962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22966 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22967 ;;Total ram usage:        1 bytes
 22968 ;; Hardware stack levels used: 1
 22969 ;; Hardware stack levels required when called: 4
 22970 ;; This function calls:
 22971 ;;		Nothing
 22972 ;; This function is called by:
 22973 ;;		_write_package
 22974 ;; This function uses a non-reentrant model
 22975 ;;
 22976                           
 22977                           	psect	text83
 22978  00884E                     __ptext83:
 22979                           	callstack 0
 22980  00884E                     _EUSART1_Write:
 22981                           	callstack 24
 22982                           
 22983                           ;incstack = 0
 22984                           ;EUSART1_Write@txData stored from wreg
 22985  00884E  6E10               	movwf	EUSART1_Write@txData^0,c
 22986  008850                     
 22987                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 22988                           
 22989                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 22990  008850  0101               	movlb	1	; () banked
 22991  008852  51FF               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 22992  008854  B4D8               	btfsc	status,2,c
 22993  008856  D7FC               	goto	l11988
 22994                           
 22995                           ; BSR set to: 1
 22996                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 22997  008858  010E               	movlb	14	; () banked
 22998  00885A  B9C5               	btfsc	197,4,b	;volatile
 22999  00885C  D003               	goto	l100
 23000                           
 23001                           ; BSR set to: 14
 23002                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23003  00885E  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 23004                           
 23005                           ;mcc_generated_files/eusart1.c: 182:     }
 23006  008862  D012               	goto	l12004
 23007  008864                     l100:
 23008                           
 23009                           ; BSR set to: 14
 23010                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23011  008864  99C5               	bcf	197,4,b	;volatile
 23012                           
 23013                           ; BSR set to: 14
 23014                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23015  008866  0E84               	movlw	low _eusart1TxBuffer
 23016  008868  0100               	movlb	0	; () banked
 23017  00886A  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 23018  00886C  6ED9               	movwf	fsr2l,c
 23019  00886E  6ADA               	clrf	fsr2h,c
 23020  008870  0E02               	movlw	high _eusart1TxBuffer
 23021  008872  22DA               	addwfc	fsr2h,f,c
 23022  008874  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 23023                           
 23024                           ; BSR set to: 0
 23025  008878  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 23026                           
 23027                           ; BSR set to: 0
 23028                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23029  00887A  0E07               	movlw	7
 23030  00887C  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 23031  00887E  D002               	goto	l12002
 23032                           
 23033                           ; BSR set to: 0
 23034                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23035  008880  0E00               	movlw	0
 23036  008882  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 23037  008884                     l12002:
 23038                           
 23039                           ; BSR set to: 0
 23040                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23041  008884  0101               	movlb	1	; () banked
 23042  008886  07FF               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 23043  008888                     l12004:
 23044                           
 23045                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23046  008888  010E               	movlb	14	; () banked
 23047  00888A  89C5               	bsf	197,4,b	;volatile
 23048                           
 23049                           ; BSR set to: 14
 23050  00888C  0012               	return		;funcret
 23051  00888E                     __end_of_EUSART1_Write:
 23052                           	callstack 0
 23053                           
 23054 ;; *************** function _WWDT_TimerClear *****************
 23055 ;; Defined at:
 23056 ;;		line 128 in file "mcc_generated_files/mcc.c"
 23057 ;; Parameters:    Size  Location     Type
 23058 ;;		None
 23059 ;; Auto vars:     Size  Location     Type
 23060 ;;  state           1   15[COMRAM] _Bool 
 23061 ;;  readBack        1    0        unsigned char 
 23062 ;; Return value:  Size  Location     Type
 23063 ;;                  1    wreg      void 
 23064 ;; Registers used:
 23065 ;;		wreg, status,2
 23066 ;; Tracked objects:
 23067 ;;		On entry : 0/0
 23068 ;;		On exit  : 0/0
 23069 ;;		Unchanged: 0/0
 23070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23074 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23075 ;;Total ram usage:        1 bytes
 23076 ;; Hardware stack levels used: 1
 23077 ;; Hardware stack levels required when called: 4
 23078 ;; This function calls:
 23079 ;;		Nothing
 23080 ;; This function is called by:
 23081 ;;		_main
 23082 ;; This function uses a non-reentrant model
 23083 ;;
 23084                           
 23085                           	psect	text84
 23086  008F04                     __ptext84:
 23087                           	callstack 0
 23088  008F04                     _WWDT_TimerClear:
 23089                           	callstack 26
 23090                           
 23091                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 23092                           
 23093                           ; BSR set to: 14
 23094                           ;incstack = 0
 23095  008F04  0E00               	movlw	0
 23096  008F06  BEF2               	btfsc	4082,7,c	;volatile
 23097  008F08  0E01               	movlw	1
 23098  008F0A  6E10               	movwf	WWDT_TimerClear@state^0,c
 23099                           
 23100                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 23101  008F0C  9EF2               	bcf	4082,7,c	;volatile
 23102  008F0E  010E               	movlb	14	; () banked
 23103  008F10  51D2               	movf	210,w,b	;volatile
 23104  008F12  0004               	clrwdt		;# 
 23105                           
 23106                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 23107  008F14  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 23108  008F16  D002               	bra	u18535
 23109  008F18  9EF2               	bcf	4082,7,c	;volatile
 23110  008F1A  D001               	bra	u18536
 23111  008F1C                     u18535:
 23112  008F1C  8EF2               	bsf	4082,7,c	;volatile
 23113  008F1E                     u18536:
 23114  008F1E  0012               	return		;funcret
 23115  008F20                     __end_of_WWDT_TimerClear:
 23116                           	callstack 0
 23117                           
 23118 ;; *************** function _WWDT_SoftEnable *****************
 23119 ;; Defined at:
 23120 ;;		line 104 in file "mcc_generated_files/mcc.c"
 23121 ;; Parameters:    Size  Location     Type
 23122 ;;		None
 23123 ;; Auto vars:     Size  Location     Type
 23124 ;;		None
 23125 ;; Return value:  Size  Location     Type
 23126 ;;                  1    wreg      void 
 23127 ;; Registers used:
 23128 ;;		None
 23129 ;; Tracked objects:
 23130 ;;		On entry : 3F/E
 23131 ;;		On exit  : 3F/E
 23132 ;;		Unchanged: 0/0
 23133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23138 ;;Total ram usage:        0 bytes
 23139 ;; Hardware stack levels used: 1
 23140 ;; Hardware stack levels required when called: 4
 23141 ;; This function calls:
 23142 ;;		Nothing
 23143 ;; This function is called by:
 23144 ;;		_main
 23145 ;; This function uses a non-reentrant model
 23146 ;;
 23147                           
 23148                           	psect	text85
 23149  009242                     __ptext85:
 23150                           	callstack 0
 23151  009242                     _WWDT_SoftEnable:
 23152                           	callstack 26
 23153                           
 23154                           ; BSR set to: 14
 23155                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 23156                           
 23157                           ;incstack = 0
 23158  009242  81D2               	bsf	210,0,b	;volatile
 23159                           
 23160                           ; BSR set to: 14
 23161  009244  0012               	return		;funcret
 23162  009246                     __end_of_WWDT_SoftEnable:
 23163                           	callstack 0
 23164                           
 23165 ;; *************** function _ShowVersion *****************
 23166 ;; Defined at:
 23167 ;;		line 254 in file "main_MC50.c"
 23168 ;; Parameters:    Size  Location     Type
 23169 ;;		None
 23170 ;; Auto vars:     Size  Location     Type
 23171 ;;		None
 23172 ;; Return value:  Size  Location     Type
 23173 ;;                  1    wreg      void 
 23174 ;; Registers used:
 23175 ;;		wreg, status,2, status,0, cstack
 23176 ;; Tracked objects:
 23177 ;;		On entry : 3F/1
 23178 ;;		On exit  : 3F/1
 23179 ;;		Unchanged: 0/0
 23180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23185 ;;Total ram usage:        0 bytes
 23186 ;; Hardware stack levels used: 1
 23187 ;; Hardware stack levels required when called: 5
 23188 ;; This function calls:
 23189 ;;		_SetSegmentValue
 23190 ;; This function is called by:
 23191 ;;		_main
 23192 ;; This function uses a non-reentrant model
 23193 ;;
 23194                           
 23195                           	psect	text86
 23196  0080DC                     __ptext86:
 23197                           	callstack 0
 23198  0080DC                     _ShowVersion:
 23199                           	callstack 25
 23200                           
 23201                           ; BSR set to: 1
 23202                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 23203                           
 23204                           ; BSR set to: 14
 23205                           ;incstack = 0
 23206  0080DC  BFD9               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 23207  0080DE  D005               	goto	u19620
 23208  0080E0  51D9               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 23209  0080E2  E12E               	bnz	l2039
 23210  0080E4  05D8               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 23211  0080E6  B0D8               	btfsc	status,0,c
 23212  0080E8  0012               	return	
 23213  0080EA                     u19620:
 23214                           
 23215                           ; BSR set to: 1
 23216                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 23217  0080EA  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 23218  0080EC  A4D8               	btfss	status,2,c
 23219  0080EE  D006               	goto	l16792
 23220                           
 23221                           ; BSR set to: 1
 23222                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 23223  0080F0  0E01               	movlw	1
 23224  0080F2  6E1C               	movwf	SetSegmentValue@d2^0,c
 23225  0080F4  0E00               	movlw	0
 23226  0080F6  ECD3  F047         	call	_SetSegmentValue
 23227                           
 23228                           ;main_MC50.c: 262:             }
 23229  0080FA  D01C               	goto	l2034
 23230  0080FC                     l16792:
 23231                           
 23232                           ; BSR set to: 1
 23233  0080FC  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 23234  0080FE  A4D8               	btfss	status,2,c
 23235  008100  D006               	goto	l16796
 23236                           
 23237                           ; BSR set to: 1
 23238                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 23239  008102  0E01               	movlw	1
 23240  008104  6E1C               	movwf	SetSegmentValue@d2^0,c
 23241  008106  0E14               	movlw	20
 23242  008108  ECD3  F047         	call	_SetSegmentValue
 23243                           
 23244                           ;main_MC50.c: 266:             }
 23245  00810C  D013               	goto	l2034
 23246  00810E                     l16796:
 23247                           
 23248                           ; BSR set to: 1
 23249  00810E  0E02               	movlw	2
 23250  008110  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 23251  008112  A4D8               	btfss	status,2,c
 23252  008114  D006               	goto	l16800
 23253                           
 23254                           ; BSR set to: 1
 23255                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 23256  008116  0E00               	movlw	0
 23257  008118  6E1C               	movwf	SetSegmentValue@d2^0,c
 23258  00811A  0E08               	movlw	8
 23259  00811C  ECD3  F047         	call	_SetSegmentValue
 23260                           
 23261                           ;main_MC50.c: 270:             }
 23262  008120  D009               	goto	l2034
 23263  008122                     l16800:
 23264                           
 23265                           ; BSR set to: 1
 23266  008122  0E03               	movlw	3
 23267  008124  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 23268  008126  A4D8               	btfss	status,2,c
 23269  008128  D005               	goto	l2034
 23270                           
 23271                           ; BSR set to: 1
 23272                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 23273  00812A  0E02               	movlw	2
 23274  00812C  6E1C               	movwf	SetSegmentValue@d2^0,c
 23275  00812E  0E14               	movlw	20
 23276  008130  ECD3  F047         	call	_SetSegmentValue
 23277  008134                     l2034:
 23278                           
 23279                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 23280                           
 23281                           ; BSR set to: 1
 23282  008134  0101               	movlb	1	; () banked
 23283  008136  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 23284                           
 23285                           ; BSR set to: 1
 23286                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 23287  008138  0E00               	movlw	0
 23288  00813A  6FD9               	movwf	(_ts_system+61)& (0+255),b	;volatile
 23289  00813C  0E14               	movlw	20
 23290  00813E  6FD8               	movwf	(_ts_system+60)& (0+255),b	;volatile
 23291  008140                     l2039:
 23292                           
 23293                           ; BSR set to: 1
 23294  008140  0012               	return		;funcret
 23295  008142                     __end_of_ShowVersion:
 23296                           	callstack 0
 23297                           
 23298 ;; *************** function _SetSegmentValue *****************
 23299 ;; Defined at:
 23300 ;;		line 112 in file "outputs_MC50.c"
 23301 ;; Parameters:    Size  Location     Type
 23302 ;;  d1              1    wreg     unsigned char 
 23303 ;;  d2              1   27[COMRAM] unsigned char 
 23304 ;; Auto vars:     Size  Location     Type
 23305 ;;  d1              1   28[COMRAM] unsigned char 
 23306 ;; Return value:  Size  Location     Type
 23307 ;;                  1    wreg      void 
 23308 ;; Registers used:
 23309 ;;		wreg, status,2
 23310 ;; Tracked objects:
 23311 ;;		On entry : 0/0
 23312 ;;		On exit  : 3F/0
 23313 ;;		Unchanged: 0/0
 23314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23315 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23318 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23319 ;;Total ram usage:        2 bytes
 23320 ;; Hardware stack levels used: 1
 23321 ;; Hardware stack levels required when called: 4
 23322 ;; This function calls:
 23323 ;;		Nothing
 23324 ;; This function is called by:
 23325 ;;		_main
 23326 ;;		_ShowVersion
 23327 ;;		_controlSelectRemote
 23328 ;; This function uses a non-reentrant model
 23329 ;;
 23330                           
 23331                           	psect	text87
 23332  008FA6                     __ptext87:
 23333                           	callstack 0
 23334  008FA6                     _SetSegmentValue:
 23335                           	callstack 23
 23336                           
 23337                           ; BSR set to: 1
 23338                           ;incstack = 0
 23339                           ;SetSegmentValue@d1 stored from wreg
 23340  008FA6  6E1D               	movwf	SetSegmentValue@d1^0,c
 23341                           
 23342                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 23343  008FA8  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 23344                           
 23345                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 23346  008FAC  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 23347                           
 23348                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 23349  008FB0  0E00               	movlw	0
 23350  008FB2  0100               	movlb	0	; () banked
 23351  008FB4  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 23352  008FB6  0E00               	movlw	0
 23353  008FB8  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 23354                           
 23355                           ; BSR set to: 0
 23356                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 23357  008FBA  0E00               	movlw	0
 23358  008FBC  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 23359                           
 23360                           ; BSR set to: 0
 23361  008FBE  0012               	return		;funcret
 23362  008FC0                     __end_of_SetSegmentValue:
 23363                           	callstack 0
 23364                           
 23365 ;; *************** function _SYSTEM_Initialize *****************
 23366 ;; Defined at:
 23367 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23368 ;; Parameters:    Size  Location     Type
 23369 ;;		None
 23370 ;; Auto vars:     Size  Location     Type
 23371 ;;		None
 23372 ;; Return value:  Size  Location     Type
 23373 ;;                  1    wreg      void 
 23374 ;; Registers used:
 23375 ;;		wreg, status,2, status,0, cstack
 23376 ;; Tracked objects:
 23377 ;;		On entry : 3F/0
 23378 ;;		On exit  : 3F/E
 23379 ;;		Unchanged: 0/0
 23380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23385 ;;Total ram usage:        0 bytes
 23386 ;; Hardware stack levels used: 1
 23387 ;; Hardware stack levels required when called: 6
 23388 ;; This function calls:
 23389 ;;		_ADCC_Initialize
 23390 ;;		_EUSART1_Initialize
 23391 ;;		_I2C1_Initialize
 23392 ;;		_INTERRUPT_Initialize
 23393 ;;		_OSCILLATOR_Initialize
 23394 ;;		_PIN_MANAGER_Initialize
 23395 ;;		_PMD_Initialize
 23396 ;;		_TMR0_Initialize
 23397 ;;		_TMR1_Initialize
 23398 ;;		_TMR2_Initialize
 23399 ;;		_WWDT_Initialize
 23400 ;; This function is called by:
 23401 ;;		_main
 23402 ;; This function uses a non-reentrant model
 23403 ;;
 23404                           
 23405                           	psect	text88
 23406  008AC4                     __ptext88:
 23407                           	callstack 0
 23408  008AC4                     _SYSTEM_Initialize:
 23409                           	callstack 24
 23410                           
 23411                           ; BSR set to: 0
 23412                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23413                           
 23414                           ; BSR set to: 0
 23415                           ;incstack = 0
 23416  008AC4  EC23  F049         	call	_INTERRUPT_Initialize	;wreg free
 23417                           
 23418                           ; BSR set to: 0
 23419                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23420  008AC8  EC90  F047         	call	_PMD_Initialize	;wreg free
 23421                           
 23422                           ; BSR set to: 14
 23423                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 23424  008ACC  EC5E  F048         	call	_I2C1_Initialize	;wreg free
 23425                           
 23426                           ; BSR set to: 14
 23427                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 23428  008AD0  EC44  F03A         	call	_PIN_MANAGER_Initialize	;wreg free
 23429                           
 23430                           ; BSR set to: 14
 23431                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 23432  008AD4  EC34  F048         	call	_OSCILLATOR_Initialize	;wreg free
 23433                           
 23434                           ; BSR set to: 14
 23435                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 23436  008AD8  ECA2  F048         	call	_WWDT_Initialize	;wreg free
 23437                           
 23438                           ; BSR set to: 14
 23439                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 23440  008ADC  ECE0  F042         	call	_ADCC_Initialize	;wreg free
 23441                           
 23442                           ; BSR set to: 15
 23443                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23444  008AE0  ECA5  F045         	call	_TMR2_Initialize	;wreg free
 23445                           
 23446                           ; BSR set to: 14
 23447                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 23448  008AE4  EC06  F044         	call	_TMR1_Initialize	;wreg free
 23449                           
 23450                           ; BSR set to: 14
 23451                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 23452  008AE8  EC41  F047         	call	_TMR0_Initialize	;wreg free
 23453                           
 23454                           ; BSR set to: 14
 23455                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 23456  008AEC  EC7F  F03D         	call	_EUSART1_Initialize	;wreg free
 23457                           
 23458                           ; BSR set to: 14
 23459  008AF0  0012               	return		;funcret
 23460  008AF2                     __end_of_SYSTEM_Initialize:
 23461                           	callstack 0
 23462                           
 23463 ;; *************** function _WWDT_Initialize *****************
 23464 ;; Defined at:
 23465 ;;		line 96 in file "mcc_generated_files/mcc.c"
 23466 ;; Parameters:    Size  Location     Type
 23467 ;;		None
 23468 ;; Auto vars:     Size  Location     Type
 23469 ;;		None
 23470 ;; Return value:  Size  Location     Type
 23471 ;;                  1    wreg      void 
 23472 ;; Registers used:
 23473 ;;		wreg, status,2
 23474 ;; Tracked objects:
 23475 ;;		On entry : 3F/E
 23476 ;;		On exit  : 3F/E
 23477 ;;		Unchanged: 0/0
 23478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23483 ;;Total ram usage:        0 bytes
 23484 ;; Hardware stack levels used: 1
 23485 ;; Hardware stack levels required when called: 4
 23486 ;; This function calls:
 23487 ;;		Nothing
 23488 ;; This function is called by:
 23489 ;;		_SYSTEM_Initialize
 23490 ;; This function uses a non-reentrant model
 23491 ;;
 23492                           
 23493                           	psect	text89
 23494  009144                     __ptext89:
 23495                           	callstack 0
 23496  009144                     _WWDT_Initialize:
 23497                           	callstack 25
 23498                           
 23499                           ; BSR set to: 14
 23500                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 23501                           
 23502                           ; BSR set to: 14
 23503                           ;incstack = 0
 23504  009144  0E16               	movlw	22
 23505  009146  6FD2               	movwf	210,b	;volatile
 23506                           
 23507                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 23508  009148  0E27               	movlw	39
 23509  00914A  6FD3               	movwf	211,b	;volatile
 23510                           
 23511                           ; BSR set to: 14
 23512  00914C  0012               	return		;funcret
 23513  00914E                     __end_of_WWDT_Initialize:
 23514                           	callstack 0
 23515                           
 23516 ;; *************** function _TMR2_Initialize *****************
 23517 ;; Defined at:
 23518 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 23519 ;; Parameters:    Size  Location     Type
 23520 ;;		None
 23521 ;; Auto vars:     Size  Location     Type
 23522 ;;		None
 23523 ;; Return value:  Size  Location     Type
 23524 ;;                  1    wreg      void 
 23525 ;; Registers used:
 23526 ;;		wreg, status,2, status,0, cstack
 23527 ;; Tracked objects:
 23528 ;;		On entry : 3F/F
 23529 ;;		On exit  : 3F/E
 23530 ;;		Unchanged: 0/0
 23531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23536 ;;Total ram usage:        0 bytes
 23537 ;; Hardware stack levels used: 1
 23538 ;; Hardware stack levels required when called: 5
 23539 ;; This function calls:
 23540 ;;		_TMR2_SetInterruptHandler
 23541 ;; This function is called by:
 23542 ;;		_SYSTEM_Initialize
 23543 ;; This function uses a non-reentrant model
 23544 ;;
 23545                           
 23546                           	psect	text90
 23547  008B4A                     __ptext90:
 23548                           	callstack 0
 23549  008B4A                     _TMR2_Initialize:
 23550                           	callstack 24
 23551                           
 23552                           ; BSR set to: 15
 23553                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 23554                           
 23555                           ; BSR set to: 14
 23556                           ;incstack = 0
 23557  008B4A  0E02               	movlw	2
 23558  008B4C  6EBF               	movwf	191,c	;volatile
 23559                           
 23560                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 23561  008B4E  0E40               	movlw	64
 23562  008B50  6EBE               	movwf	190,c	;volatile
 23563                           
 23564                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 23565  008B52  0E00               	movlw	0
 23566  008B54  6EC0               	movwf	192,c	;volatile
 23567                           
 23568                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 23569  008B56  0EC7               	movlw	199
 23570  008B58  6EBC               	movwf	188,c	;volatile
 23571                           
 23572                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 23573  008B5A  0E00               	movlw	0
 23574  008B5C  6EBB               	movwf	187,c	;volatile
 23575                           
 23576                           ; BSR set to: 15
 23577                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 23578  008B5E  010E               	movlb	14	; () banked
 23579  008B60  93CE               	bcf	206,1,b	;volatile
 23580                           
 23581                           ; BSR set to: 14
 23582                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 23583  008B62  83C6               	bsf	198,1,b	;volatile
 23584                           
 23585                           ; BSR set to: 14
 23586                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 23587  008B64  0E72               	movlw	low _TMR2_DefaultInterruptHandler
 23588  008B66  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 23589  008B68  0E92               	movlw	high _TMR2_DefaultInterruptHandler
 23590  008B6A  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 23591  008B6C  ECA7  F048         	call	_TMR2_SetInterruptHandler	;wreg free
 23592                           
 23593                           ; BSR set to: 14
 23594                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 23595  008B70  0ED9               	movlw	217
 23596  008B72  6EBD               	movwf	189,c	;volatile
 23597                           
 23598                           ; BSR set to: 14
 23599  008B74  0012               	return		;funcret
 23600  008B76                     __end_of_TMR2_Initialize:
 23601                           	callstack 0
 23602                           
 23603 ;; *************** function _TMR2_SetInterruptHandler *****************
 23604 ;; Defined at:
 23605 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 23606 ;; Parameters:    Size  Location     Type
 23607 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23608 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 23609 ;; Auto vars:     Size  Location     Type
 23610 ;;		None
 23611 ;; Return value:  Size  Location     Type
 23612 ;;                  1    wreg      void 
 23613 ;; Registers used:
 23614 ;;		wreg, status,2, status,0
 23615 ;; Tracked objects:
 23616 ;;		On entry : 3F/E
 23617 ;;		On exit  : 3F/E
 23618 ;;		Unchanged: 3F/0
 23619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23624 ;;Total ram usage:        2 bytes
 23625 ;; Hardware stack levels used: 1
 23626 ;; Hardware stack levels required when called: 4
 23627 ;; This function calls:
 23628 ;;		Nothing
 23629 ;; This function is called by:
 23630 ;;		_TMR2_Initialize
 23631 ;; This function uses a non-reentrant model
 23632 ;;
 23633                           
 23634                           	psect	text91
 23635  00914E                     __ptext91:
 23636                           	callstack 0
 23637  00914E                     _TMR2_SetInterruptHandler:
 23638                           	callstack 24
 23639                           
 23640                           ; BSR set to: 14
 23641                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 23642                           
 23643                           ; BSR set to: 14
 23644                           ;incstack = 0
 23645  00914E  C010  F2DB         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 23646  009152  C011  F2DC         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 23647                           
 23648                           ; BSR set to: 14
 23649  009156  0012               	return		;funcret
 23650  009158                     __end_of_TMR2_SetInterruptHandler:
 23651                           	callstack 0
 23652                           
 23653 ;; *************** function _TMR1_Initialize *****************
 23654 ;; Defined at:
 23655 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 23656 ;; Parameters:    Size  Location     Type
 23657 ;;		None
 23658 ;; Auto vars:     Size  Location     Type
 23659 ;;		None
 23660 ;; Return value:  Size  Location     Type
 23661 ;;                  1    wreg      void 
 23662 ;; Registers used:
 23663 ;;		wreg, status,2, status,0, cstack
 23664 ;; Tracked objects:
 23665 ;;		On entry : 3F/E
 23666 ;;		On exit  : 3F/E
 23667 ;;		Unchanged: 0/0
 23668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23671 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23673 ;;Total ram usage:        2 bytes
 23674 ;; Hardware stack levels used: 1
 23675 ;; Hardware stack levels required when called: 5
 23676 ;; This function calls:
 23677 ;;		_TMR1_SetInterruptHandler
 23678 ;; This function is called by:
 23679 ;;		_SYSTEM_Initialize
 23680 ;; This function uses a non-reentrant model
 23681 ;;
 23682                           
 23683                           	psect	text92
 23684  00880C                     __ptext92:
 23685                           	callstack 0
 23686  00880C                     _TMR1_Initialize:
 23687                           	callstack 24
 23688                           
 23689                           ; BSR set to: 14
 23690                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 23691                           
 23692                           ; BSR set to: 14
 23693                           ;incstack = 0
 23694  00880C  0E00               	movlw	0
 23695  00880E  6ED0               	movwf	208,c	;volatile
 23696                           
 23697                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 23698  008810  0E00               	movlw	0
 23699  008812  6ED1               	movwf	209,c	;volatile
 23700                           
 23701                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 23702  008814  0E01               	movlw	1
 23703  008816  6ED2               	movwf	210,c	;volatile
 23704                           
 23705                           ; BSR set to: 14
 23706                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 23707  008818  68CE               	setf	206,c	;volatile
 23708                           
 23709                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 23710  00881A  0E38               	movlw	56
 23711  00881C  6ECD               	movwf	205,c	;volatile
 23712                           
 23713                           ; BSR set to: 14
 23714                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 23715  00881E  91CE               	bcf	206,0,b	;volatile
 23716                           
 23717                           ; BSR set to: 14
 23718                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 23719  008820  50CD               	movf	205,w,c	;volatile
 23720  008822  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 23721  008826  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 23722  008828  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 23723  00882C  6A12               	clrf	??_TMR1_Initialize^0,c
 23724  00882E  1012               	iorwf	??_TMR1_Initialize^0,w,c
 23725  008830  0102               	movlb	2	; () banked
 23726  008832  6FDF               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 23727  008834  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 23728  008836  6FE0               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 23729                           
 23730                           ; BSR set to: 2
 23731                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 23732  008838  010E               	movlb	14	; () banked
 23733  00883A  81C6               	bsf	198,0,b	;volatile
 23734                           
 23735                           ; BSR set to: 14
 23736                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 23737  00883C  0E74               	movlw	low _TMR1_DefaultInterruptHandler
 23738  00883E  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 23739  008840  0E92               	movlw	high _TMR1_DefaultInterruptHandler
 23740  008842  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 23741  008844  ECAC  F048         	call	_TMR1_SetInterruptHandler	;wreg free
 23742                           
 23743                           ; BSR set to: 14
 23744                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 23745  008848  0E31               	movlw	49
 23746  00884A  6ECF               	movwf	207,c	;volatile
 23747                           
 23748                           ; BSR set to: 14
 23749  00884C  0012               	return		;funcret
 23750  00884E                     __end_of_TMR1_Initialize:
 23751                           	callstack 0
 23752                           
 23753 ;; *************** function _TMR1_SetInterruptHandler *****************
 23754 ;; Defined at:
 23755 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 23756 ;; Parameters:    Size  Location     Type
 23757 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23758 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 23759 ;; Auto vars:     Size  Location     Type
 23760 ;;		None
 23761 ;; Return value:  Size  Location     Type
 23762 ;;                  1    wreg      void 
 23763 ;; Registers used:
 23764 ;;		wreg, status,2, status,0
 23765 ;; Tracked objects:
 23766 ;;		On entry : 3F/E
 23767 ;;		On exit  : 3F/E
 23768 ;;		Unchanged: 3F/0
 23769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23774 ;;Total ram usage:        2 bytes
 23775 ;; Hardware stack levels used: 1
 23776 ;; Hardware stack levels required when called: 4
 23777 ;; This function calls:
 23778 ;;		Nothing
 23779 ;; This function is called by:
 23780 ;;		_TMR1_Initialize
 23781 ;; This function uses a non-reentrant model
 23782 ;;
 23783                           
 23784                           	psect	text93
 23785  009158                     __ptext93:
 23786                           	callstack 0
 23787  009158                     _TMR1_SetInterruptHandler:
 23788                           	callstack 24
 23789                           
 23790                           ; BSR set to: 14
 23791                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 23792                           
 23793                           ; BSR set to: 14
 23794                           ;incstack = 0
 23795  009158  C010  F2DD         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 23796  00915C  C011  F2DE         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 23797                           
 23798                           ; BSR set to: 14
 23799  009160  0012               	return		;funcret
 23800  009162                     __end_of_TMR1_SetInterruptHandler:
 23801                           	callstack 0
 23802                           
 23803 ;; *************** function _TMR0_Initialize *****************
 23804 ;; Defined at:
 23805 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 23806 ;; Parameters:    Size  Location     Type
 23807 ;;		None
 23808 ;; Auto vars:     Size  Location     Type
 23809 ;;		None
 23810 ;; Return value:  Size  Location     Type
 23811 ;;                  1    wreg      void 
 23812 ;; Registers used:
 23813 ;;		wreg, status,2, status,0, cstack
 23814 ;; Tracked objects:
 23815 ;;		On entry : 3F/E
 23816 ;;		On exit  : 3F/E
 23817 ;;		Unchanged: 0/0
 23818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23823 ;;Total ram usage:        0 bytes
 23824 ;; Hardware stack levels used: 1
 23825 ;; Hardware stack levels required when called: 5
 23826 ;; This function calls:
 23827 ;;		_TMR0_SetInterruptHandler
 23828 ;; This function is called by:
 23829 ;;		_SYSTEM_Initialize
 23830 ;; This function uses a non-reentrant model
 23831 ;;
 23832                           
 23833                           	psect	text94
 23834  008E82                     __ptext94:
 23835                           	callstack 0
 23836  008E82                     _TMR0_Initialize:
 23837                           	callstack 24
 23838                           
 23839                           ; BSR set to: 14
 23840                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 23841                           
 23842                           ; BSR set to: 14
 23843                           ;incstack = 0
 23844  008E82  0E41               	movlw	65
 23845  008E84  6ED6               	movwf	214,c	;volatile
 23846                           
 23847                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 23848  008E86  0E84               	movlw	132
 23849  008E88  6ED4               	movwf	212,c	;volatile
 23850                           
 23851                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 23852  008E8A  0E00               	movlw	0
 23853  008E8C  6ED3               	movwf	211,c	;volatile
 23854                           
 23855                           ; BSR set to: 14
 23856                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 23857  008E8E  9BCA               	bcf	202,5,b	;volatile
 23858                           
 23859                           ; BSR set to: 14
 23860                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 23861  008E90  8BC2               	bsf	194,5,b	;volatile
 23862                           
 23863                           ; BSR set to: 14
 23864                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 23865  008E92  0E76               	movlw	low _TMR0_DefaultInterruptHandler
 23866  008E94  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 23867  008E96  0E92               	movlw	high _TMR0_DefaultInterruptHandler
 23868  008E98  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 23869  008E9A  ECB1  F048         	call	_TMR0_SetInterruptHandler	;wreg free
 23870                           
 23871                           ; BSR set to: 14
 23872                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 23873  008E9E  0E87               	movlw	135
 23874  008EA0  6ED5               	movwf	213,c	;volatile
 23875                           
 23876                           ; BSR set to: 14
 23877  008EA2  0012               	return		;funcret
 23878  008EA4                     __end_of_TMR0_Initialize:
 23879                           	callstack 0
 23880                           
 23881 ;; *************** function _TMR0_SetInterruptHandler *****************
 23882 ;; Defined at:
 23883 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 23884 ;; Parameters:    Size  Location     Type
 23885 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23886 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 23887 ;; Auto vars:     Size  Location     Type
 23888 ;;		None
 23889 ;; Return value:  Size  Location     Type
 23890 ;;                  1    wreg      void 
 23891 ;; Registers used:
 23892 ;;		wreg, status,2, status,0
 23893 ;; Tracked objects:
 23894 ;;		On entry : 3F/E
 23895 ;;		On exit  : 3F/E
 23896 ;;		Unchanged: 3F/0
 23897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23901 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23902 ;;Total ram usage:        2 bytes
 23903 ;; Hardware stack levels used: 1
 23904 ;; Hardware stack levels required when called: 4
 23905 ;; This function calls:
 23906 ;;		Nothing
 23907 ;; This function is called by:
 23908 ;;		_TMR0_Initialize
 23909 ;; This function uses a non-reentrant model
 23910 ;;
 23911                           
 23912                           	psect	text95
 23913  009162                     __ptext95:
 23914                           	callstack 0
 23915  009162                     _TMR0_SetInterruptHandler:
 23916                           	callstack 24
 23917                           
 23918                           ; BSR set to: 14
 23919                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 23920                           
 23921                           ; BSR set to: 14
 23922                           ;incstack = 0
 23923  009162  C010  F2E1         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 23924  009166  C011  F2E2         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 23925                           
 23926                           ; BSR set to: 14
 23927  00916A  0012               	return		;funcret
 23928  00916C                     __end_of_TMR0_SetInterruptHandler:
 23929                           	callstack 0
 23930                           
 23931 ;; *************** function _PMD_Initialize *****************
 23932 ;; Defined at:
 23933 ;;		line 79 in file "mcc_generated_files/mcc.c"
 23934 ;; Parameters:    Size  Location     Type
 23935 ;;		None
 23936 ;; Auto vars:     Size  Location     Type
 23937 ;;		None
 23938 ;; Return value:  Size  Location     Type
 23939 ;;                  1    wreg      void 
 23940 ;; Registers used:
 23941 ;;		wreg, status,2
 23942 ;; Tracked objects:
 23943 ;;		On entry : 3F/0
 23944 ;;		On exit  : 3F/E
 23945 ;;		Unchanged: 0/0
 23946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23951 ;;Total ram usage:        0 bytes
 23952 ;; Hardware stack levels used: 1
 23953 ;; Hardware stack levels required when called: 4
 23954 ;; This function calls:
 23955 ;;		Nothing
 23956 ;; This function is called by:
 23957 ;;		_SYSTEM_Initialize
 23958 ;; This function uses a non-reentrant model
 23959 ;;
 23960                           
 23961                           	psect	text96
 23962  008F20                     __ptext96:
 23963                           	callstack 0
 23964  008F20                     _PMD_Initialize:
 23965                           	callstack 25
 23966                           
 23967                           ; BSR set to: 0
 23968                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 23969                           
 23970                           ; BSR set to: 14
 23971                           ;incstack = 0
 23972  008F20  0E00               	movlw	0
 23973  008F22  010E               	movlb	14	; () banked
 23974  008F24  6FE1               	movwf	225,b	;volatile
 23975                           
 23976                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 23977  008F26  0E00               	movlw	0
 23978  008F28  6FE2               	movwf	226,b	;volatile
 23979                           
 23980                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 23981  008F2A  0E00               	movlw	0
 23982  008F2C  6FE3               	movwf	227,b	;volatile
 23983                           
 23984                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 23985  008F2E  0E00               	movlw	0
 23986  008F30  6FE4               	movwf	228,b	;volatile
 23987                           
 23988                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 23989  008F32  0E00               	movlw	0
 23990  008F34  6FE5               	movwf	229,b	;volatile
 23991                           
 23992                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 23993  008F36  0E00               	movlw	0
 23994  008F38  6FE6               	movwf	230,b	;volatile
 23995                           
 23996                           ; BSR set to: 14
 23997  008F3A  0012               	return		;funcret
 23998  008F3C                     __end_of_PMD_Initialize:
 23999                           	callstack 0
 24000                           
 24001 ;; *************** function _PIN_MANAGER_Initialize *****************
 24002 ;; Defined at:
 24003 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 24004 ;; Parameters:    Size  Location     Type
 24005 ;;		None
 24006 ;; Auto vars:     Size  Location     Type
 24007 ;;		None
 24008 ;; Return value:  Size  Location     Type
 24009 ;;                  1    wreg      void 
 24010 ;; Registers used:
 24011 ;;		wreg, status,2
 24012 ;; Tracked objects:
 24013 ;;		On entry : 3F/E
 24014 ;;		On exit  : 3F/E
 24015 ;;		Unchanged: 0/0
 24016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24021 ;;Total ram usage:        0 bytes
 24022 ;; Hardware stack levels used: 1
 24023 ;; Hardware stack levels required when called: 4
 24024 ;; This function calls:
 24025 ;;		Nothing
 24026 ;; This function is called by:
 24027 ;;		_SYSTEM_Initialize
 24028 ;; This function uses a non-reentrant model
 24029 ;;
 24030                           
 24031                           	psect	text97
 24032  007488                     __ptext97:
 24033                           	callstack 0
 24034  007488                     _PIN_MANAGER_Initialize:
 24035                           	callstack 25
 24036                           
 24037                           ; BSR set to: 14
 24038                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 24039                           
 24040                           ; BSR set to: 14
 24041                           ;incstack = 0
 24042  007488  0E00               	movlw	0
 24043  00748A  6E87               	movwf	135,c	;volatile
 24044                           
 24045                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 24046  00748C  0E00               	movlw	0
 24047  00748E  6E86               	movwf	134,c	;volatile
 24048                           
 24049                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 24050  007490  0E00               	movlw	0
 24051  007492  6E83               	movwf	131,c	;volatile
 24052                           
 24053                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 24054  007494  0E00               	movlw	0
 24055  007496  6E84               	movwf	132,c	;volatile
 24056                           
 24057                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 24058  007498  0E00               	movlw	0
 24059  00749A  6E85               	movwf	133,c	;volatile
 24060                           
 24061                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 24062  00749C  0E00               	movlw	0
 24063  00749E  6E8C               	movwf	140,c	;volatile
 24064                           
 24065                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 24066  0074A0  0E7F               	movlw	127
 24067  0074A2  6E88               	movwf	136,c	;volatile
 24068                           
 24069                           ; BSR set to: 14
 24070                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 24071  0074A4  6889               	setf	137,c	;volatile
 24072                           
 24073                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 24074  0074A6  0E58               	movlw	88
 24075  0074A8  6E8A               	movwf	138,c	;volatile
 24076                           
 24077                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 24078  0074AA  0E00               	movlw	0
 24079  0074AC  6E8B               	movwf	139,c	;volatile
 24080                           
 24081                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 24082  0074AE  0E00               	movlw	0
 24083  0074B0  010F               	movlb	15	; () banked
 24084  0074B2  6F26               	movwf	38,b	;volatile
 24085                           
 24086                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 24087  0074B4  0E00               	movlw	0
 24088  0074B6  6F21               	movwf	33,b	;volatile
 24089                           
 24090                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 24091  0074B8  0E00               	movlw	0
 24092  0074BA  6F19               	movwf	25,b	;volatile
 24093                           
 24094                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 24095  0074BC  0E00               	movlw	0
 24096  0074BE  6F2E               	movwf	46,b	;volatile
 24097                           
 24098                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 24099  0074C0  0E01               	movlw	1
 24100  0074C2  6F11               	movwf	17,b	;volatile
 24101                           
 24102                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 24103  0074C4  0E00               	movlw	0
 24104  0074C6  6F25               	movwf	37,b	;volatile
 24105                           
 24106                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 24107  0074C8  0E00               	movlw	0
 24108  0074CA  6F2D               	movwf	45,b	;volatile
 24109                           
 24110                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 24111  0074CC  0EF7               	movlw	247
 24112  0074CE  6F18               	movwf	24,b	;volatile
 24113                           
 24114                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 24115  0074D0  0E00               	movlw	0
 24116  0074D2  6F10               	movwf	16,b	;volatile
 24117                           
 24118                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 24119  0074D4  0E00               	movlw	0
 24120  0074D6  6F20               	movwf	32,b	;volatile
 24121                           
 24122                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 24123  0074D8  0E00               	movlw	0
 24124  0074DA  6F2C               	movwf	44,b	;volatile
 24125                           
 24126                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 24127  0074DC  0E00               	movlw	0
 24128  0074DE  6F0F               	movwf	15,b	;volatile
 24129                           
 24130                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 24131  0074E0  0E00               	movlw	0
 24132  0074E2  6F17               	movwf	23,b	;volatile
 24133                           
 24134                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 24135  0074E4  0E00               	movlw	0
 24136  0074E6  6F1F               	movwf	31,b	;volatile
 24137                           
 24138                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 24139  0074E8  0E00               	movlw	0
 24140  0074EA  6F24               	movwf	36,b	;volatile
 24141                           
 24142                           ; BSR set to: 15
 24143                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 24144  0074EC  690E               	setf	14,b	;volatile
 24145                           
 24146                           ; BSR set to: 15
 24147                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 24148  0074EE  6916               	setf	22,b	;volatile
 24149                           
 24150                           ; BSR set to: 15
 24151                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 24152  0074F0  691E               	setf	30,b	;volatile
 24153                           
 24154                           ; BSR set to: 15
 24155                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 24156  0074F2  6923               	setf	35,b	;volatile
 24157                           
 24158                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 24159  0074F4  0E07               	movlw	7
 24160  0074F6  6F2B               	movwf	43,b	;volatile
 24161                           
 24162                           ; BSR set to: 15
 24163                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 24164  0074F8  690D               	setf	13,b	;volatile
 24165                           
 24166                           ; BSR set to: 15
 24167                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 24168  0074FA  6915               	setf	21,b	;volatile
 24169                           
 24170                           ; BSR set to: 15
 24171                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 24172  0074FC  691D               	setf	29,b	;volatile
 24173                           
 24174                           ; BSR set to: 15
 24175                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 24176  0074FE  6922               	setf	34,b	;volatile
 24177                           
 24178                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 24179  007500  0E0F               	movlw	15
 24180  007502  6F2A               	movwf	42,b	;volatile
 24181                           
 24182                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 24183  007504  0E13               	movlw	19
 24184  007506  010E               	movlb	14	; () banked
 24185  007508  6FB7               	movwf	183,b	;volatile
 24186                           
 24187                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 24188  00750A  0E16               	movlw	22
 24189  00750C  6FB5               	movwf	181,b	;volatile
 24190                           
 24191                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 24192  00750E  0E0F               	movlw	15
 24193  007510  6FFA               	movwf	250,b	;volatile
 24194                           
 24195                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 24196  007512  0E10               	movlw	16
 24197  007514  6FFB               	movwf	251,b	;volatile
 24198                           
 24199                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 24200  007516  0E09               	movlw	9
 24201  007518  6FFE               	movwf	254,b	;volatile
 24202                           
 24203                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 24204  00751A  0E14               	movlw	20
 24205  00751C  6FB8               	movwf	184,b	;volatile
 24206                           
 24207                           ; BSR set to: 14
 24208  00751E  0012               	return		;funcret
 24209  007520                     __end_of_PIN_MANAGER_Initialize:
 24210                           	callstack 0
 24211                           
 24212 ;; *************** function _OSCILLATOR_Initialize *****************
 24213 ;; Defined at:
 24214 ;;		line 65 in file "mcc_generated_files/mcc.c"
 24215 ;; Parameters:    Size  Location     Type
 24216 ;;		None
 24217 ;; Auto vars:     Size  Location     Type
 24218 ;;		None
 24219 ;; Return value:  Size  Location     Type
 24220 ;;                  1    wreg      void 
 24221 ;; Registers used:
 24222 ;;		wreg, status,2
 24223 ;; Tracked objects:
 24224 ;;		On entry : 3F/E
 24225 ;;		On exit  : 3F/E
 24226 ;;		Unchanged: 0/0
 24227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24232 ;;Total ram usage:        0 bytes
 24233 ;; Hardware stack levels used: 1
 24234 ;; Hardware stack levels required when called: 4
 24235 ;; This function calls:
 24236 ;;		Nothing
 24237 ;; This function is called by:
 24238 ;;		_SYSTEM_Initialize
 24239 ;; This function uses a non-reentrant model
 24240 ;;
 24241                           
 24242                           	psect	text98
 24243  009068                     __ptext98:
 24244                           	callstack 0
 24245  009068                     _OSCILLATOR_Initialize:
 24246                           	callstack 25
 24247                           
 24248                           ; BSR set to: 14
 24249                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 24250                           
 24251                           ; BSR set to: 14
 24252                           ;incstack = 0
 24253  009068  0E60               	movlw	96
 24254  00906A  6FD8               	movwf	216,b	;volatile
 24255                           
 24256                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 24257  00906C  0E00               	movlw	0
 24258  00906E  6FDA               	movwf	218,b	;volatile
 24259                           
 24260                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 24261  009070  0E00               	movlw	0
 24262  009072  6FDC               	movwf	220,b	;volatile
 24263                           
 24264                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 24265  009074  0E08               	movlw	8
 24266  009076  6FDE               	movwf	222,b	;volatile
 24267                           
 24268                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 24269  009078  0E00               	movlw	0
 24270  00907A  6FDD               	movwf	221,b	;volatile
 24271                           
 24272                           ; BSR set to: 14
 24273  00907C  0012               	return		;funcret
 24274  00907E                     __end_of_OSCILLATOR_Initialize:
 24275                           	callstack 0
 24276                           
 24277 ;; *************** function _INTERRUPT_Initialize *****************
 24278 ;; Defined at:
 24279 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24280 ;; Parameters:    Size  Location     Type
 24281 ;;		None
 24282 ;; Auto vars:     Size  Location     Type
 24283 ;;		None
 24284 ;; Return value:  Size  Location     Type
 24285 ;;                  1    wreg      void 
 24286 ;; Registers used:
 24287 ;;		None
 24288 ;; Tracked objects:
 24289 ;;		On entry : 3F/0
 24290 ;;		On exit  : 3F/0
 24291 ;;		Unchanged: 3F/0
 24292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24297 ;;Total ram usage:        0 bytes
 24298 ;; Hardware stack levels used: 1
 24299 ;; Hardware stack levels required when called: 4
 24300 ;; This function calls:
 24301 ;;		Nothing
 24302 ;; This function is called by:
 24303 ;;		_SYSTEM_Initialize
 24304 ;; This function uses a non-reentrant model
 24305 ;;
 24306                           
 24307                           	psect	text99
 24308  009246                     __ptext99:
 24309                           	callstack 0
 24310  009246                     _INTERRUPT_Initialize:
 24311                           	callstack 25
 24312                           
 24313                           ; BSR set to: 0
 24314                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 24315                           
 24316                           ; BSR set to: 14
 24317                           ;incstack = 0
 24318  009246  9AF2               	bcf	242,5,c	;volatile
 24319                           
 24320                           ; BSR set to: 0
 24321  009248  0012               	return		;funcret
 24322  00924A                     __end_of_INTERRUPT_Initialize:
 24323                           	callstack 0
 24324                           
 24325 ;; *************** function _I2C1_Initialize *****************
 24326 ;; Defined at:
 24327 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 24328 ;; Parameters:    Size  Location     Type
 24329 ;;		None
 24330 ;; Auto vars:     Size  Location     Type
 24331 ;;		None
 24332 ;; Return value:  Size  Location     Type
 24333 ;;                  1    wreg      void 
 24334 ;; Registers used:
 24335 ;;		wreg, status,2
 24336 ;; Tracked objects:
 24337 ;;		On entry : 3F/E
 24338 ;;		On exit  : 3F/E
 24339 ;;		Unchanged: 3F/0
 24340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24345 ;;Total ram usage:        0 bytes
 24346 ;; Hardware stack levels used: 1
 24347 ;; Hardware stack levels required when called: 4
 24348 ;; This function calls:
 24349 ;;		Nothing
 24350 ;; This function is called by:
 24351 ;;		_SYSTEM_Initialize
 24352 ;; This function uses a non-reentrant model
 24353 ;;
 24354                           
 24355                           	psect	text100
 24356  0090BC                     __ptext100:
 24357                           	callstack 0
 24358  0090BC                     _I2C1_Initialize:
 24359                           	callstack 25
 24360                           
 24361                           ; BSR set to: 14
 24362                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 24363                           
 24364                           ; BSR set to: 0
 24365                           ;incstack = 0
 24366  0090BC  0E80               	movlw	128
 24367  0090BE  6E95               	movwf	149,c	;volatile
 24368                           
 24369                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 24370  0090C0  0E08               	movlw	8
 24371  0090C2  6E96               	movwf	150,c	;volatile
 24372                           
 24373                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 24374  0090C4  0E00               	movlw	0
 24375  0090C6  6E97               	movwf	151,c	;volatile
 24376                           
 24377                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 24378  0090C8  0E9F               	movlw	159
 24379  0090CA  6E93               	movwf	147,c	;volatile
 24380                           
 24381                           ; BSR set to: 14
 24382                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 24383  0090CC  9A96               	bcf	150,5,c	;volatile
 24384                           
 24385                           ; BSR set to: 14
 24386  0090CE  0012               	return		;funcret
 24387  0090D0                     __end_of_I2C1_Initialize:
 24388                           	callstack 0
 24389                           
 24390 ;; *************** function _EUSART1_Initialize *****************
 24391 ;; Defined at:
 24392 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 24393 ;; Parameters:    Size  Location     Type
 24394 ;;		None
 24395 ;; Auto vars:     Size  Location     Type
 24396 ;;		None
 24397 ;; Return value:  Size  Location     Type
 24398 ;;                  1    wreg      void 
 24399 ;; Registers used:
 24400 ;;		wreg, status,2, status,0, cstack
 24401 ;; Tracked objects:
 24402 ;;		On entry : 3F/E
 24403 ;;		On exit  : 3F/E
 24404 ;;		Unchanged: 0/0
 24405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24410 ;;Total ram usage:        0 bytes
 24411 ;; Hardware stack levels used: 1
 24412 ;; Hardware stack levels required when called: 5
 24413 ;; This function calls:
 24414 ;;		_EUSART1_SetErrorHandler
 24415 ;;		_EUSART1_SetFramingErrorHandler
 24416 ;;		_EUSART1_SetOverrunErrorHandler
 24417 ;;		_EUSART1_SetRxInterruptHandler
 24418 ;;		_EUSART1_SetTxInterruptHandler
 24419 ;; This function is called by:
 24420 ;;		_SYSTEM_Initialize
 24421 ;; This function uses a non-reentrant model
 24422 ;;
 24423                           
 24424                           	psect	text101
 24425  007AFE                     __ptext101:
 24426                           	callstack 0
 24427  007AFE                     _EUSART1_Initialize:
 24428                           	callstack 24
 24429                           
 24430                           ; BSR set to: 14
 24431                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 24432                           
 24433                           ; BSR set to: 14
 24434                           ;incstack = 0
 24435  007AFE  9BC5               	bcf	197,5,b	;volatile
 24436                           
 24437                           ; BSR set to: 14
 24438                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 24439  007B00  0EEE               	movlw	low _EUSART1_Receive_ISR
 24440  007B02  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 24441  007B04  0E73               	movlw	high _EUSART1_Receive_ISR
 24442  007B06  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 24443  007B08  ECBB  F048         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 24444                           
 24445                           ; BSR set to: 14
 24446                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 24447  007B0C  99C5               	bcf	197,4,b	;volatile
 24448                           
 24449                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 24450  007B0E  0E62               	movlw	low _EUSART1_Transmit_ISR
 24451  007B10  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 24452  007B12  0E8A               	movlw	high _EUSART1_Transmit_ISR
 24453  007B14  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 24454  007B16  ECB6  F048         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 24455                           
 24456                           ; BSR set to: 14
 24457                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 24458  007B1A  0E08               	movlw	8
 24459  007B1C  6E9F               	movwf	159,c	;volatile
 24460                           
 24461                           ; BSR set to: 14
 24462                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 24463  007B1E  0E90               	movlw	144
 24464  007B20  6E9D               	movwf	157,c	;volatile
 24465                           
 24466                           ; BSR set to: 14
 24467                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 24468  007B22  0E24               	movlw	36
 24469  007B24  6E9E               	movwf	158,c	;volatile
 24470                           
 24471                           ; BSR set to: 14
 24472                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 24473  007B26  0E82               	movlw	130
 24474  007B28  6E9B               	movwf	155,c	;volatile
 24475                           
 24476                           ; BSR set to: 14
 24477                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 24478  007B2A  0E06               	movlw	6
 24479  007B2C  6E9C               	movwf	156,c	;volatile
 24480                           
 24481                           ; BSR set to: 14
 24482                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 24483  007B2E  0E78               	movlw	low _EUSART1_DefaultFramingErrorHandler
 24484  007B30  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 24485  007B32  0E92               	movlw	high _EUSART1_DefaultFramingErrorHandler
 24486  007B34  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 24487  007B36  ECC5  F048         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 24488                           
 24489                           ; BSR set to: 14
 24490                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 24491  007B3A  0E30               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 24492  007B3C  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 24493  007B3E  0E92               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 24494  007B40  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 24495  007B42  ECC0  F048         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 24496                           
 24497                           ; BSR set to: 14
 24498                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 24499  007B46  0E36               	movlw	low _EUSART1_DefaultErrorHandler
 24500  007B48  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 24501  007B4A  0E92               	movlw	high _EUSART1_DefaultErrorHandler
 24502  007B4C  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 24503  007B4E  ECCA  F048         	call	_EUSART1_SetErrorHandler	;wreg free
 24504                           
 24505                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 24506  007B52  0E00               	movlw	0
 24507  007B54  0101               	movlb	1	; () banked
 24508  007B56  6F9B               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 24509                           
 24510                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 24511  007B58  0E00               	movlw	0
 24512  007B5A  0100               	movlb	0	; () banked
 24513  007B5C  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 24514                           
 24515                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 24516  007B5E  0E00               	movlw	0
 24517  007B60  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 24518                           
 24519                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 24520  007B62  0E08               	movlw	8
 24521  007B64  0101               	movlb	1	; () banked
 24522  007B66  6FFF               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 24523                           
 24524                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 24525  007B68  0E00               	movlw	0
 24526  007B6A  0100               	movlb	0	; () banked
 24527  007B6C  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 24528                           
 24529                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 24530  007B6E  0E00               	movlw	0
 24531  007B70  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 24532                           
 24533                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 24534  007B72  0E00               	movlw	0
 24535  007B74  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 24536                           
 24537                           ; BSR set to: 0
 24538                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 24539  007B76  010E               	movlb	14	; () banked
 24540  007B78  8BC5               	bsf	197,5,b	;volatile
 24541                           
 24542                           ; BSR set to: 14
 24543  007B7A  0012               	return		;funcret
 24544  007B7C                     __end_of_EUSART1_Initialize:
 24545                           	callstack 0
 24546                           
 24547 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 24548 ;; Defined at:
 24549 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 24550 ;; Parameters:    Size  Location     Type
 24551 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24552 ;;		 -> EUSART1_Transmit_ISR(1), 
 24553 ;; Auto vars:     Size  Location     Type
 24554 ;;		None
 24555 ;; Return value:  Size  Location     Type
 24556 ;;                  1    wreg      void 
 24557 ;; Registers used:
 24558 ;;		wreg, status,2, status,0
 24559 ;; Tracked objects:
 24560 ;;		On entry : 3F/E
 24561 ;;		On exit  : 3F/E
 24562 ;;		Unchanged: 3F/0
 24563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24568 ;;Total ram usage:        2 bytes
 24569 ;; Hardware stack levels used: 1
 24570 ;; Hardware stack levels required when called: 4
 24571 ;; This function calls:
 24572 ;;		Nothing
 24573 ;; This function is called by:
 24574 ;;		_EUSART1_Initialize
 24575 ;; This function uses a non-reentrant model
 24576 ;;
 24577                           
 24578                           	psect	text102
 24579  00916C                     __ptext102:
 24580                           	callstack 0
 24581  00916C                     _EUSART1_SetTxInterruptHandler:
 24582                           	callstack 24
 24583                           
 24584                           ; BSR set to: 14
 24585                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 24586                           
 24587                           ; BSR set to: 14
 24588                           ;incstack = 0
 24589  00916C  C010  F2EB         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 24590  009170  C011  F2EC         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 24591                           
 24592                           ; BSR set to: 14
 24593  009174  0012               	return		;funcret
 24594  009176                     __end_of_EUSART1_SetTxInterruptHandler:
 24595                           	callstack 0
 24596                           
 24597 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 24598 ;; Defined at:
 24599 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 24600 ;; Parameters:    Size  Location     Type
 24601 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24602 ;;		 -> EUSART1_Receive_ISR(1), 
 24603 ;; Auto vars:     Size  Location     Type
 24604 ;;		None
 24605 ;; Return value:  Size  Location     Type
 24606 ;;                  1    wreg      void 
 24607 ;; Registers used:
 24608 ;;		wreg, status,2, status,0
 24609 ;; Tracked objects:
 24610 ;;		On entry : 3F/E
 24611 ;;		On exit  : 3F/E
 24612 ;;		Unchanged: 3F/0
 24613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24618 ;;Total ram usage:        2 bytes
 24619 ;; Hardware stack levels used: 1
 24620 ;; Hardware stack levels required when called: 4
 24621 ;; This function calls:
 24622 ;;		Nothing
 24623 ;; This function is called by:
 24624 ;;		_EUSART1_Initialize
 24625 ;; This function uses a non-reentrant model
 24626 ;;
 24627                           
 24628                           	psect	text103
 24629  009176                     __ptext103:
 24630                           	callstack 0
 24631  009176                     _EUSART1_SetRxInterruptHandler:
 24632                           	callstack 24
 24633                           
 24634                           ; BSR set to: 14
 24635                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 24636                           
 24637                           ; BSR set to: 14
 24638                           ;incstack = 0
 24639  009176  C010  F2E9         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 24640  00917A  C011  F2EA         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 24641                           
 24642                           ; BSR set to: 14
 24643  00917E  0012               	return		;funcret
 24644  009180                     __end_of_EUSART1_SetRxInterruptHandler:
 24645                           	callstack 0
 24646                           
 24647 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 24648 ;; Defined at:
 24649 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 24650 ;; Parameters:    Size  Location     Type
 24651 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24652 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 24653 ;; Auto vars:     Size  Location     Type
 24654 ;;		None
 24655 ;; Return value:  Size  Location     Type
 24656 ;;                  1    wreg      void 
 24657 ;; Registers used:
 24658 ;;		wreg, status,2, status,0
 24659 ;; Tracked objects:
 24660 ;;		On entry : 3F/E
 24661 ;;		On exit  : 3F/E
 24662 ;;		Unchanged: 3F/0
 24663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24668 ;;Total ram usage:        2 bytes
 24669 ;; Hardware stack levels used: 1
 24670 ;; Hardware stack levels required when called: 4
 24671 ;; This function calls:
 24672 ;;		Nothing
 24673 ;; This function is called by:
 24674 ;;		_EUSART1_Initialize
 24675 ;; This function uses a non-reentrant model
 24676 ;;
 24677                           
 24678                           	psect	text104
 24679  009180                     __ptext104:
 24680                           	callstack 0
 24681  009180                     _EUSART1_SetOverrunErrorHandler:
 24682                           	callstack 24
 24683                           
 24684                           ; BSR set to: 14
 24685                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 24686                           
 24687                           ; BSR set to: 14
 24688                           ;incstack = 0
 24689  009180  C010  F2E5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 24690  009184  C011  F2E6         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 24691                           
 24692                           ; BSR set to: 14
 24693  009188  0012               	return		;funcret
 24694  00918A                     __end_of_EUSART1_SetOverrunErrorHandler:
 24695                           	callstack 0
 24696                           
 24697 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 24698 ;; Defined at:
 24699 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 24700 ;; Parameters:    Size  Location     Type
 24701 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24702 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 24703 ;; Auto vars:     Size  Location     Type
 24704 ;;		None
 24705 ;; Return value:  Size  Location     Type
 24706 ;;                  1    wreg      void 
 24707 ;; Registers used:
 24708 ;;		wreg, status,2, status,0
 24709 ;; Tracked objects:
 24710 ;;		On entry : 3F/E
 24711 ;;		On exit  : 3F/E
 24712 ;;		Unchanged: 3F/0
 24713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24718 ;;Total ram usage:        2 bytes
 24719 ;; Hardware stack levels used: 1
 24720 ;; Hardware stack levels required when called: 4
 24721 ;; This function calls:
 24722 ;;		Nothing
 24723 ;; This function is called by:
 24724 ;;		_EUSART1_Initialize
 24725 ;; This function uses a non-reentrant model
 24726 ;;
 24727                           
 24728                           	psect	text105
 24729  00918A                     __ptext105:
 24730                           	callstack 0
 24731  00918A                     _EUSART1_SetFramingErrorHandler:
 24732                           	callstack 24
 24733                           
 24734                           ; BSR set to: 14
 24735                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 24736                           
 24737                           ; BSR set to: 14
 24738                           ;incstack = 0
 24739  00918A  C010  F2E7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 24740  00918E  C011  F2E8         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 24741                           
 24742                           ; BSR set to: 14
 24743  009192  0012               	return		;funcret
 24744  009194                     __end_of_EUSART1_SetFramingErrorHandler:
 24745                           	callstack 0
 24746                           
 24747 ;; *************** function _EUSART1_SetErrorHandler *****************
 24748 ;; Defined at:
 24749 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 24750 ;; Parameters:    Size  Location     Type
 24751 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24752 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 24753 ;; Auto vars:     Size  Location     Type
 24754 ;;		None
 24755 ;; Return value:  Size  Location     Type
 24756 ;;                  1    wreg      void 
 24757 ;; Registers used:
 24758 ;;		wreg, status,2, status,0
 24759 ;; Tracked objects:
 24760 ;;		On entry : 3F/E
 24761 ;;		On exit  : 3F/E
 24762 ;;		Unchanged: 3F/0
 24763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24768 ;;Total ram usage:        2 bytes
 24769 ;; Hardware stack levels used: 1
 24770 ;; Hardware stack levels required when called: 4
 24771 ;; This function calls:
 24772 ;;		Nothing
 24773 ;; This function is called by:
 24774 ;;		_EUSART1_Initialize
 24775 ;; This function uses a non-reentrant model
 24776 ;;
 24777                           
 24778                           	psect	text106
 24779  009194                     __ptext106:
 24780                           	callstack 0
 24781  009194                     _EUSART1_SetErrorHandler:
 24782                           	callstack 24
 24783                           
 24784                           ; BSR set to: 14
 24785                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 24786                           
 24787                           ; BSR set to: 14
 24788                           ;incstack = 0
 24789  009194  C010  F2E3         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 24790  009198  C011  F2E4         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 24791                           
 24792                           ; BSR set to: 14
 24793  00919C  0012               	return		;funcret
 24794  00919E                     __end_of_EUSART1_SetErrorHandler:
 24795                           	callstack 0
 24796                           
 24797 ;; *************** function _ADCC_Initialize *****************
 24798 ;; Defined at:
 24799 ;;		line 62 in file "mcc_generated_files/adcc.c"
 24800 ;; Parameters:    Size  Location     Type
 24801 ;;		None
 24802 ;; Auto vars:     Size  Location     Type
 24803 ;;		None
 24804 ;; Return value:  Size  Location     Type
 24805 ;;                  1    wreg      void 
 24806 ;; Registers used:
 24807 ;;		wreg, status,2
 24808 ;; Tracked objects:
 24809 ;;		On entry : 3F/E
 24810 ;;		On exit  : 3F/F
 24811 ;;		Unchanged: 0/0
 24812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24817 ;;Total ram usage:        0 bytes
 24818 ;; Hardware stack levels used: 1
 24819 ;; Hardware stack levels required when called: 4
 24820 ;; This function calls:
 24821 ;;		Nothing
 24822 ;; This function is called by:
 24823 ;;		_SYSTEM_Initialize
 24824 ;; This function uses a non-reentrant model
 24825 ;;
 24826                           
 24827                           	psect	text107
 24828  0085C0                     __ptext107:
 24829                           	callstack 0
 24830  0085C0                     _ADCC_Initialize:
 24831                           	callstack 25
 24832                           
 24833                           ; BSR set to: 14
 24834                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 24835                           
 24836                           ; BSR set to: 14
 24837                           ;incstack = 0
 24838  0085C0  0E00               	movlw	0
 24839  0085C2  6E6A               	movwf	106,c	;volatile
 24840                           
 24841                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 24842  0085C4  0E00               	movlw	0
 24843  0085C6  6E6B               	movwf	107,c	;volatile
 24844                           
 24845                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 24846  0085C8  0E00               	movlw	0
 24847  0085CA  6E6C               	movwf	108,c	;volatile
 24848                           
 24849                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 24850  0085CC  0E00               	movlw	0
 24851  0085CE  6E6D               	movwf	109,c	;volatile
 24852                           
 24853                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 24854  0085D0  0E00               	movlw	0
 24855  0085D2  6E68               	movwf	104,c	;volatile
 24856                           
 24857                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 24858  0085D4  0E00               	movlw	0
 24859  0085D6  6E69               	movwf	105,c	;volatile
 24860                           
 24861                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 24862  0085D8  0E00               	movlw	0
 24863  0085DA  6E66               	movwf	102,c	;volatile
 24864                           
 24865                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 24866  0085DC  0E00               	movlw	0
 24867  0085DE  010F               	movlb	15	; () banked
 24868  0085E0  6F5F               	movwf	95,b	;volatile
 24869                           
 24870                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 24871  0085E2  0E00               	movlw	0
 24872  0085E4  6F5D               	movwf	93,b	;volatile
 24873                           
 24874                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 24875  0085E6  0E00               	movlw	0
 24876  0085E8  6F5E               	movwf	94,b	;volatile
 24877                           
 24878                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 24879  0085EA  0E00               	movlw	0
 24880  0085EC  6F59               	movwf	89,b	;volatile
 24881                           
 24882                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 24883  0085EE  0E00               	movlw	0
 24884  0085F0  6F5A               	movwf	90,b	;volatile
 24885                           
 24886                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 24887  0085F2  0E00               	movlw	0
 24888  0085F4  6F5B               	movwf	91,b	;volatile
 24889                           
 24890                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 24891  0085F6  0E00               	movlw	0
 24892  0085F8  6E65               	movwf	101,c	;volatile
 24893                           
 24894                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 24895  0085FA  0E00               	movlw	0
 24896  0085FC  6F58               	movwf	88,b	;volatile
 24897                           
 24898                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 24899  0085FE  0E00               	movlw	0
 24900  008600  6F56               	movwf	86,b	;volatile
 24901                           
 24902                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 24903  008602  0E3F               	movlw	63
 24904  008604  6F57               	movwf	87,b	;volatile
 24905                           
 24906                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 24907  008606  0E80               	movlw	128
 24908  008608  6E60               	movwf	96,c	;volatile
 24909                           
 24910                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 24911  00860A  0E00               	movlw	0
 24912  00860C  6F5C               	movwf	92,b	;volatile
 24913                           
 24914                           ; BSR set to: 15
 24915  00860E  0012               	return		;funcret
 24916  008610                     __end_of_ADCC_Initialize:
 24917                           	callstack 0
 24918                           
 24919 ;; *************** function _EUSART1_is_rx_ready *****************
 24920 ;; Defined at:
 24921 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 24922 ;; Parameters:    Size  Location     Type
 24923 ;;		None
 24924 ;; Auto vars:     Size  Location     Type
 24925 ;;		None
 24926 ;; Return value:  Size  Location     Type
 24927 ;;                  1    wreg      _Bool 
 24928 ;; Registers used:
 24929 ;;		wreg, status,2
 24930 ;; Tracked objects:
 24931 ;;		On entry : 0/1
 24932 ;;		On exit  : 3F/0
 24933 ;;		Unchanged: 0/0
 24934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24939 ;;Total ram usage:        0 bytes
 24940 ;; Hardware stack levels used: 1
 24941 ;; Hardware stack levels required when called: 4
 24942 ;; This function calls:
 24943 ;;		Nothing
 24944 ;; This function is called by:
 24945 ;;		_main
 24946 ;; This function uses a non-reentrant model
 24947 ;;
 24948                           
 24949                           	psect	text108
 24950  0090E2                     __ptext108:
 24951                           	callstack 0
 24952  0090E2                     _EUSART1_is_rx_ready:
 24953                           	callstack 26
 24954                           
 24955                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 24956                           
 24957                           ; BSR set to: 15
 24958                           ;incstack = 0
 24959  0090E2  0100               	movlb	0	; () banked
 24960  0090E4  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 24961  0090E6  B4D8               	btfsc	status,2,c
 24962  0090E8  D002               	goto	u18130
 24963  0090EA  0E01               	movlw	1
 24964  0090EC  0012               	return	
 24965  0090EE                     u18130:
 24966  0090EE  0E00               	movlw	0
 24967                           
 24968                           ; BSR set to: 0
 24969  0090F0  0012               	return		;funcret
 24970  0090F2                     __end_of_EUSART1_is_rx_ready:
 24971                           	callstack 0
 24972                           
 24973 ;; *************** function _ControlMotor *****************
 24974 ;; Defined at:
 24975 ;;		line 703 in file "outputs_MC50.c"
 24976 ;; Parameters:    Size  Location     Type
 24977 ;;		None
 24978 ;; Auto vars:     Size  Location     Type
 24979 ;;  stateMotor      1   23[COMRAM] enum E10381
 24980 ;; Return value:  Size  Location     Type
 24981 ;;                  1    wreg      void 
 24982 ;; Registers used:
 24983 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 24984 ;; Tracked objects:
 24985 ;;		On entry : 3E/1
 24986 ;;		On exit  : 3E/0
 24987 ;;		Unchanged: 0/0
 24988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24991 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24992 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24993 ;;Total ram usage:        7 bytes
 24994 ;; Hardware stack levels used: 1
 24995 ;; Hardware stack levels required when called: 5
 24996 ;; This function calls:
 24997 ;;		_VerifyElectricalBrake
 24998 ;; This function is called by:
 24999 ;;		_main
 25000 ;; This function uses a non-reentrant model
 25001 ;;
 25002                           
 25003                           	psect	text109
 25004  004700                     __ptext109:
 25005                           	callstack 0
 25006  004700                     _ControlMotor:
 25007                           	callstack 25
 25008                           
 25009                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 25010                           
 25011                           ; BSR set to: 0
 25012                           ;incstack = 0
 25013  004700  0101               	movlb	1	; () banked
 25014  004702  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 25015  004704  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 25016  004706  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 25017  004708  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 25018  00470A  A4D8               	btfss	status,2,c
 25019  00470C  D00D               	goto	l16818
 25020                           
 25021                           ; BSR set to: 1
 25022  00470E  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 25023  004710  B4D8               	btfsc	status,2,c
 25024  004712  D00A               	goto	l16818
 25025                           
 25026                           ; BSR set to: 1
 25027  004714  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 25028  004716  A4D8               	btfss	status,2,c
 25029  004718  D007               	goto	l16818
 25030                           
 25031                           ; BSR set to: 1
 25032  00471A  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 25033  00471C  A4D8               	btfss	status,2,c
 25034  00471E  D004               	goto	l16818
 25035                           
 25036                           ; BSR set to: 1
 25037                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 25038  004720  0E00               	movlw	0
 25039  004722  6F00               	movwf	_var_sys& (0+255),b	;volatile
 25040                           
 25041                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 25042  004724  0E02               	movlw	2
 25043  004726  D007               	goto	L100
 25044  004728                     l16818:
 25045                           
 25046                           ; BSR set to: 1
 25047  004728  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 25048  00472A  A4D8               	btfss	status,2,c
 25049  00472C  D005               	goto	l16824
 25050                           
 25051                           ; BSR set to: 1
 25052  00472E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25053  004730  A4D8               	btfss	status,2,c
 25054  004732  D002               	goto	l16824
 25055                           
 25056                           ; BSR set to: 1
 25057                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 25058  004734  0E00               	movlw	0
 25059  004736                     L100:
 25060  004736  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 25061  004738                     l16824:
 25062                           
 25063                           ; BSR set to: 1
 25064                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 25065  004738  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25066  00473A  EC39  F03E         	call	_VerifyElectricalBrake
 25067  00473E  6E18               	movwf	ControlMotor@stateMotor^0,c
 25068                           
 25069                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 25070  004740  5018               	movf	ControlMotor@stateMotor^0,w,c
 25071  004742  A4D8               	btfss	status,2,c
 25072  004744  D00A               	goto	l16834
 25073                           
 25074                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 25075  004746  0E01               	movlw	1
 25076  004748  0101               	movlb	1	; () banked
 25077  00474A  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25078                           
 25079                           ; BSR set to: 1
 25080                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 25081  00474C  BFA3               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 25082  00474E  0012               	return	
 25083                           
 25084                           ; BSR set to: 1
 25085                           
 25086                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 25087  004750  9287               	bcf	135,1,c	;volatile
 25088                           
 25089                           ; BSR set to: 1
 25090                           
 25091                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 25092  004752  9087               	bcf	135,0,c	;volatile
 25093  004754                     l16832:
 25094                           
 25095                           ; BSR set to: 1
 25096                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 25097  004754  0E00               	movlw	0
 25098  004756  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25099  004758  0012               	return	
 25100  00475A                     l16834:
 25101  00475A  0100               	movlb	0	; () banked
 25102  00475C  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 25103  00475E  A4D8               	btfss	status,2,c
 25104  004760  D022               	goto	l16850
 25105                           
 25106                           ; BSR set to: 0
 25107  004762  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 25108  004764  A4D8               	btfss	status,2,c
 25109  004766  D01F               	goto	l16850
 25110                           
 25111                           ; BSR set to: 0
 25112  004768  0101               	movlb	1	; () banked
 25113  00476A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25114  00476C  A4D8               	btfss	status,2,c
 25115  00476E  D01B               	goto	l16850
 25116                           
 25117                           ; BSR set to: 1
 25118  004770  5018               	movf	ControlMotor@stateMotor^0,w,c
 25119  004772  A4D8               	btfss	status,2,c
 25120                           
 25121                           ; BSR set to: 1
 25122  004774  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25123  004776  D017               	goto	l16850
 25124  004778  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25125  00477A  E103               	bnz	u19790
 25126  00477C  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 25127  00477E  A0D8               	btfss	status,0,c
 25128  004780  D012               	goto	l16850
 25129  004782                     u19790:
 25130                           
 25131                           ; BSR set to: 1
 25132  004782  BFDD               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 25133  004784  D005               	goto	u19800
 25134  004786  51DD               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 25135  004788  E10E               	bnz	l16850
 25136  00478A  05DC               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 25137  00478C  B0D8               	btfsc	status,0,c
 25138  00478E  D00B               	goto	l16850
 25139  004790                     u19800:
 25140                           
 25141                           ; BSR set to: 1
 25142                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 25143  004790  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25144  004792  D006               	goto	u19810
 25145  004794  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25146  004796  E103               	bnz	u19811
 25147  004798  0E12               	movlw	18
 25148  00479A  5DC4               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 25149  00479C  B0D8               	btfsc	status,0,c
 25150  00479E                     u19811:
 25151  00479E  0012               	return	
 25152  0047A0                     u19810:
 25153                           
 25154                           ; BSR set to: 1
 25155                           
 25156                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 25157  0047A0  8287               	bsf	135,1,c	;volatile
 25158                           
 25159                           ; BSR set to: 1
 25160                           
 25161                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 25162  0047A2  8087               	bsf	135,0,c	;volatile
 25163  0047A4  D7D7               	goto	l16832
 25164  0047A6                     l16850:
 25165  0047A6  0418               	decf	ControlMotor@stateMotor^0,w,c
 25166  0047A8  B4D8               	btfsc	status,2,c
 25167  0047AA  D004               	goto	u19830
 25168  0047AC  0E02               	movlw	2
 25169  0047AE  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 25170  0047B0  A4D8               	btfss	status,2,c
 25171  0047B2  D063               	goto	l16880
 25172  0047B4                     u19830:
 25173  0047B4  0101               	movlb	1	; () banked
 25174  0047B6  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 25175  0047B8  A4D8               	btfss	status,2,c
 25176  0047BA  D05F               	goto	l16880
 25177                           
 25178                           ; BSR set to: 1
 25179                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 25180  0047BC  B291               	btfsc	145,1,c	;volatile
 25181  0047BE  D004               	goto	u19860
 25182                           
 25183                           ; BSR set to: 1
 25184  0047C0  0100               	movlb	0	; () banked
 25185  0047C2  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25186  0047C4  B4D8               	btfsc	status,2,c
 25187  0047C6  D006               	goto	u19880
 25188  0047C8                     u19860:
 25189  0047C8  B091               	btfsc	145,0,c	;volatile
 25190  0047CA  D04F               	goto	l2348
 25191  0047CC  0100               	movlb	0	; () banked
 25192  0047CE  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25193  0047D0  A4D8               	btfss	status,2,c
 25194  0047D2  D04B               	goto	l2348
 25195  0047D4                     u19880:
 25196                           
 25197                           ; BSR set to: 0
 25198                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 25199  0047D4  B091               	btfsc	145,0,c	;volatile
 25200  0047D6  D003               	goto	u19900
 25201                           
 25202                           ; BSR set to: 0
 25203  0047D8  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25204  0047DA  B4D8               	btfsc	status,2,c
 25205  0047DC  D005               	goto	u19920
 25206  0047DE                     u19900:
 25207                           
 25208                           ; BSR set to: 0
 25209  0047DE  B291               	btfsc	145,1,c	;volatile
 25210  0047E0  D03A               	goto	l16876
 25211                           
 25212                           ; BSR set to: 0
 25213  0047E2  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25214  0047E4  A4D8               	btfss	status,2,c
 25215  0047E6  D037               	goto	l16876
 25216  0047E8                     u19920:
 25217                           
 25218                           ; BSR set to: 0
 25219                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 25220  0047E8  0E00               	movlw	0
 25221  0047EA  0101               	movlb	1	; () banked
 25222  0047EC  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25223                           
 25224                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 25225  0047EE  0E00               	movlw	0
 25226  0047F0  6FA3               	movwf	(_ts_system+7)& (0+255),b	;volatile
 25227  0047F2  0EC8               	movlw	200
 25228  0047F4  6FA2               	movwf	(_ts_system+6)& (0+255),b	;volatile
 25229                           
 25230                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 25231  0047F6  0E00               	movlw	0
 25232  0047F8  6FB7               	movwf	(_ts_system+27)& (0+255),b	;volatile
 25233  0047FA  0E14               	movlw	20
 25234  0047FC  6FB6               	movwf	(_ts_system+26)& (0+255),b	;volatile
 25235                           
 25236                           ; BSR set to: 1
 25237                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 25238  0047FE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 25239  004800  B4D8               	btfsc	status,2,c
 25240  004802  D003               	goto	u19940
 25241                           
 25242                           ; BSR set to: 1
 25243  004804  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 25244  004806  A4D8               	btfss	status,2,c
 25245  004808  D024               	goto	l16874
 25246  00480A                     u19940:
 25247                           
 25248                           ; BSR set to: 1
 25249                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 25250  00480A  0100               	movlb	0	; () banked
 25251  00480C  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 25252  00480E  0D0A               	mullw	10
 25253  004810  CFF3 F012          	movff	prodl,??_ControlMotor
 25254  004814  CFF4 F013          	movff	prodh,??_ControlMotor+1
 25255  004818  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 25256  00481A  2612               	addwf	??_ControlMotor^0,f,c
 25257  00481C  0E00               	movlw	0
 25258  00481E  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 25259  004820  5012               	movf	??_ControlMotor^0,w,c
 25260  004822  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 25261  004824  6E14               	movwf	(??_ControlMotor+2)^0,c
 25262  004826  5013               	movf	(??_ControlMotor+1)^0,w,c
 25263  004828  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 25264  00482A  6E15               	movwf	(??_ControlMotor+3)^0,c
 25265  00482C  0E00               	movlw	0
 25266  00482E  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 25267  004830  6E16               	movwf	(??_ControlMotor+4)^0,c
 25268  004832  0E00               	movlw	0
 25269  004834  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 25270  004836  6E17               	movwf	(??_ControlMotor+5)^0,c
 25271  004838  0E50               	movlw	80
 25272  00483A  2414               	addwf	(??_ControlMotor+2)^0,w,c
 25273  00483C  0101               	movlb	1	; () banked
 25274  00483E  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 25275  004840  0E00               	movlw	0
 25276  004842  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 25277  004844  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 25278  004846  0E00               	movlw	0
 25279  004848  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 25280  00484A  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 25281  00484C  0E00               	movlw	0
 25282  00484E  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 25283  004850  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 25284  004852                     l16874:
 25285                           
 25286                           ; BSR set to: 1
 25287                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 25288  004852  0E02               	movlw	2
 25289  004854  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 25290  004856                     l16876:
 25291                           
 25292                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 25293  004856  0100               	movlb	0	; () banked
 25294  004858  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25295  00485A  A4D8               	btfss	status,2,c
 25296  00485C  D002               	goto	l2365
 25297                           
 25298                           ; BSR set to: 0
 25299  00485E  8087               	bsf	135,0,c	;volatile
 25300  004860  D001               	goto	l16878
 25301  004862                     l2365:
 25302                           
 25303                           ; BSR set to: 0
 25304  004862  8287               	bsf	135,1,c	;volatile
 25305  004864                     l16878:
 25306                           
 25307                           ; BSR set to: 0
 25308                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 25309  004864  0E01               	movlw	1
 25310  004866  0101               	movlb	1	; () banked
 25311  004868  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25312  00486A                     l2348:
 25313                           
 25314                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 25315  00486A  0100               	movlb	0	; () banked
 25316  00486C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25317  00486E  A4D8               	btfss	status,2,c
 25318  004870  D002               	goto	l2371
 25319                           
 25320                           ; BSR set to: 0
 25321  004872  9287               	bcf	135,1,c	;volatile
 25322  004874  0012               	return	
 25323  004876                     l2371:
 25324                           
 25325                           ; BSR set to: 0
 25326  004876  9087               	bcf	135,0,c	;volatile
 25327  004878  0012               	return	
 25328  00487A                     l16880:
 25329  00487A  0E03               	movlw	3
 25330  00487C  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 25331  00487E  A4D8               	btfss	status,2,c
 25332  004880  0012               	return	
 25333  004882  0101               	movlb	1	; () banked
 25334  004884  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 25335  004886  A4D8               	btfss	status,2,c
 25336  004888  0012               	return	
 25337                           
 25338                           ; BSR set to: 1
 25339                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 25340  00488A  B091               	btfsc	145,0,c	;volatile
 25341  00488C  D004               	goto	u20000
 25342                           
 25343                           ; BSR set to: 1
 25344  00488E  0100               	movlb	0	; () banked
 25345  004890  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25346  004892  B4D8               	btfsc	status,2,c
 25347  004894  D006               	goto	u20020
 25348  004896                     u20000:
 25349  004896  B291               	btfsc	145,1,c	;volatile
 25350  004898  D050               	goto	l2375
 25351  00489A  0100               	movlb	0	; () banked
 25352  00489C  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25353  00489E  A4D8               	btfss	status,2,c
 25354  0048A0  D04C               	goto	l2375
 25355  0048A2                     u20020:
 25356                           
 25357                           ; BSR set to: 0
 25358                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 25359  0048A2  B291               	btfsc	145,1,c	;volatile
 25360  0048A4  D003               	goto	u20040
 25361                           
 25362                           ; BSR set to: 0
 25363  0048A6  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25364  0048A8  B4D8               	btfsc	status,2,c
 25365  0048AA  D005               	goto	u20060
 25366  0048AC                     u20040:
 25367                           
 25368                           ; BSR set to: 0
 25369  0048AC  B091               	btfsc	145,0,c	;volatile
 25370  0048AE  D03B               	goto	l16904
 25371                           
 25372                           ; BSR set to: 0
 25373  0048B0  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25374  0048B2  A4D8               	btfss	status,2,c
 25375  0048B4  D038               	goto	l16904
 25376  0048B6                     u20060:
 25377                           
 25378                           ; BSR set to: 0
 25379                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 25380  0048B6  0E00               	movlw	0
 25381  0048B8  0101               	movlb	1	; () banked
 25382  0048BA  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25383                           
 25384                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 25385  0048BC  0E00               	movlw	0
 25386  0048BE  6FA3               	movwf	(_ts_system+7)& (0+255),b	;volatile
 25387  0048C0  0EC8               	movlw	200
 25388  0048C2  6FA2               	movwf	(_ts_system+6)& (0+255),b	;volatile
 25389                           
 25390                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 25391  0048C4  0E00               	movlw	0
 25392  0048C6  6FB7               	movwf	(_ts_system+27)& (0+255),b	;volatile
 25393  0048C8  0E14               	movlw	20
 25394  0048CA  6FB6               	movwf	(_ts_system+26)& (0+255),b	;volatile
 25395                           
 25396                           ; BSR set to: 1
 25397                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 25398  0048CC  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 25399  0048CE  B4D8               	btfsc	status,2,c
 25400  0048D0  D004               	goto	u20080
 25401                           
 25402                           ; BSR set to: 1
 25403  0048D2  0E04               	movlw	4
 25404  0048D4  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 25405  0048D6  A4D8               	btfss	status,2,c
 25406  0048D8  D024               	goto	l16902
 25407  0048DA                     u20080:
 25408                           
 25409                           ; BSR set to: 1
 25410                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 25411  0048DA  0100               	movlb	0	; () banked
 25412  0048DC  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 25413  0048DE  0D0A               	mullw	10
 25414  0048E0  CFF3 F012          	movff	prodl,??_ControlMotor
 25415  0048E4  CFF4 F013          	movff	prodh,??_ControlMotor+1
 25416  0048E8  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 25417  0048EA  2612               	addwf	??_ControlMotor^0,f,c
 25418  0048EC  0E00               	movlw	0
 25419  0048EE  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 25420  0048F0  5012               	movf	??_ControlMotor^0,w,c
 25421  0048F2  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 25422  0048F4  6E14               	movwf	(??_ControlMotor+2)^0,c
 25423  0048F6  5013               	movf	(??_ControlMotor+1)^0,w,c
 25424  0048F8  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 25425  0048FA  6E15               	movwf	(??_ControlMotor+3)^0,c
 25426  0048FC  0E00               	movlw	0
 25427  0048FE  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 25428  004900  6E16               	movwf	(??_ControlMotor+4)^0,c
 25429  004902  0E00               	movlw	0
 25430  004904  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 25431  004906  6E17               	movwf	(??_ControlMotor+5)^0,c
 25432  004908  0E50               	movlw	80
 25433  00490A  2414               	addwf	(??_ControlMotor+2)^0,w,c
 25434  00490C  0101               	movlb	1	; () banked
 25435  00490E  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 25436  004910  0E00               	movlw	0
 25437  004912  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 25438  004914  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 25439  004916  0E00               	movlw	0
 25440  004918  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 25441  00491A  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 25442  00491C  0E00               	movlw	0
 25443  00491E  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 25444  004920  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 25445  004922                     l16902:
 25446                           
 25447                           ; BSR set to: 1
 25448                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 25449  004922  0E03               	movlw	3
 25450  004924  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 25451  004926                     l16904:
 25452                           
 25453                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 25454  004926  0100               	movlb	0	; () banked
 25455  004928  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25456  00492A  A4D8               	btfss	status,2,c
 25457  00492C  D002               	goto	l2392
 25458                           
 25459                           ; BSR set to: 0
 25460  00492E  8287               	bsf	135,1,c	;volatile
 25461  004930  D001               	goto	l16906
 25462  004932                     l2392:
 25463                           
 25464                           ; BSR set to: 0
 25465  004932  8087               	bsf	135,0,c	;volatile
 25466  004934                     l16906:
 25467                           
 25468                           ; BSR set to: 0
 25469                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 25470  004934  0E02               	movlw	2
 25471  004936  0101               	movlb	1	; () banked
 25472  004938  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25473  00493A                     l2375:
 25474                           
 25475                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 25476  00493A  0100               	movlb	0	; () banked
 25477  00493C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25478  00493E  A4D8               	btfss	status,2,c
 25479  004940  D002               	goto	l2398
 25480                           
 25481                           ; BSR set to: 0
 25482  004942  9087               	bcf	135,0,c	;volatile
 25483  004944  0012               	return	
 25484  004946                     l2398:
 25485                           
 25486                           ; BSR set to: 0
 25487  004946  9287               	bcf	135,1,c	;volatile
 25488  004948  0012               	return		;funcret
 25489  00494A                     __end_of_ControlMotor:
 25490                           	callstack 0
 25491                           
 25492 ;; *************** function _VerifyElectricalBrake *****************
 25493 ;; Defined at:
 25494 ;;		line 658 in file "outputs_MC50.c"
 25495 ;; Parameters:    Size  Location     Type
 25496 ;;  actualState     1    wreg     enum E10381
 25497 ;; Auto vars:     Size  Location     Type
 25498 ;;  actualState     1   16[COMRAM] enum E10381
 25499 ;;  tempState       1   15[COMRAM] enum E10381
 25500 ;; Return value:  Size  Location     Type
 25501 ;;                  1    wreg      enum E10381
 25502 ;; Registers used:
 25503 ;;		wreg, status,2, status,0
 25504 ;; Tracked objects:
 25505 ;;		On entry : 3F/1
 25506 ;;		On exit  : 3E/0
 25507 ;;		Unchanged: 0/0
 25508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25510 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25513 ;;Total ram usage:        2 bytes
 25514 ;; Hardware stack levels used: 1
 25515 ;; Hardware stack levels required when called: 4
 25516 ;; This function calls:
 25517 ;;		Nothing
 25518 ;; This function is called by:
 25519 ;;		_ControlMotor
 25520 ;; This function uses a non-reentrant model
 25521 ;;
 25522                           
 25523                           	psect	text110
 25524  007C72                     __ptext110:
 25525                           	callstack 0
 25526  007C72                     _VerifyElectricalBrake:
 25527                           	callstack 25
 25528                           
 25529                           ;incstack = 0
 25530                           ;VerifyElectricalBrake@actualState stored from wreg
 25531  007C72  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 25532                           
 25533                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 25534  007C74  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 25535                           
 25536                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 25537  007C78  0100               	movlb	0	; () banked
 25538  007C7A  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 25539  007C7C  A4D8               	btfss	status,2,c
 25540  007C7E  D02E               	goto	l2318
 25541                           
 25542                           ; BSR set to: 0
 25543  007C80  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 25544  007C82  A4D8               	btfss	status,2,c
 25545  007C84  D02B               	goto	l2318
 25546                           
 25547                           ; BSR set to: 0
 25548  007C86  0101               	movlb	1	; () banked
 25549  007C88  BFDD               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 25550  007C8A  D005               	goto	u15210
 25551  007C8C  51DD               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 25552  007C8E  E126               	bnz	l2318
 25553  007C90  05DC               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 25554  007C92  B0D8               	btfsc	status,0,c
 25555  007C94  D023               	goto	l2318
 25556  007C96                     u15210:
 25557                           
 25558                           ; BSR set to: 1
 25559                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 25560  007C96  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 25561  007C98  0100               	movlb	0	; () banked
 25562  007C9A  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 25563  007C9C  B4D8               	btfsc	status,2,c
 25564  007C9E  D00B               	goto	l14666
 25565                           
 25566                           ; BSR set to: 0
 25567  007CA0  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 25568  007CA2  A4D8               	btfss	status,2,c
 25569  007CA4  D008               	goto	l14666
 25570                           
 25571                           ; BSR set to: 0
 25572                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 25573  007CA6  0E01               	movlw	1
 25574  007CA8  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 25575                           
 25576                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 25577  007CAA  0E00               	movlw	0
 25578  007CAC  0101               	movlb	1	; () banked
 25579  007CAE  6FC5               	movwf	(_ts_system+41)& (0+255),b	;volatile
 25580  007CB0  0E16               	movlw	22
 25581  007CB2  6FC4               	movwf	(_ts_system+40)& (0+255),b	;volatile
 25582                           
 25583                           ;outputs_MC50.c: 670:         }
 25584  007CB4  D018               	goto	l2323
 25585  007CB6                     l14666:
 25586                           
 25587                           ; BSR set to: 0
 25588  007CB6  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 25589  007CB8  A4D8               	btfss	status,2,c
 25590  007CBA  D00B               	goto	l14672
 25591                           
 25592                           ; BSR set to: 0
 25593  007CBC  0101               	movlb	1	; () banked
 25594  007CBE  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25595  007CC0  D008               	goto	l14672
 25596  007CC2  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25597  007CC4  E103               	bnz	u15250
 25598  007CC6  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 25599  007CC8  A0D8               	btfss	status,0,c
 25600  007CCA  D003               	goto	l14672
 25601  007CCC                     u15250:
 25602                           
 25603                           ; BSR set to: 1
 25604                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 25605  007CCC  0E01               	movlw	1
 25606  007CCE  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 25607                           
 25608                           ;outputs_MC50.c: 686:         }
 25609  007CD0  D00A               	goto	l2323
 25610  007CD2                     l14672:
 25611                           
 25612                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 25613  007CD2  0E00               	movlw	0
 25614  007CD4  0100               	movlb	0	; () banked
 25615  007CD6  6F78               	movwf	_brakeElectric_st& (0+255),b
 25616                           
 25617                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 25618  007CD8  0E00               	movlw	0
 25619  007CDA  D004               	goto	L101
 25620  007CDC                     l2318:
 25621                           
 25622                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 25623  007CDC  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 25624                           
 25625                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 25626  007CE0  0E00               	movlw	0
 25627  007CE2  0100               	movlb	0	; () banked
 25628  007CE4                     L101:
 25629  007CE4  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 25630  007CE6                     l2323:
 25631                           
 25632                           ;outputs_MC50.c: 700:     return tempState;
 25633  007CE6  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 25634  007CE8  0012               	return		;funcret
 25635  007CEA                     __end_of_VerifyElectricalBrake:
 25636                           	callstack 0
 25637                           
 25638 ;; *************** function _ControlLights *****************
 25639 ;; Defined at:
 25640 ;;		line 816 in file "outputs_MC50.c"
 25641 ;; Parameters:    Size  Location     Type
 25642 ;;		None
 25643 ;; Auto vars:     Size  Location     Type
 25644 ;;		None
 25645 ;; Return value:  Size  Location     Type
 25646 ;;                  1    wreg      void 
 25647 ;; Registers used:
 25648 ;;		wreg, status,2, status,0, cstack
 25649 ;; Tracked objects:
 25650 ;;		On entry : 3E/1
 25651 ;;		On exit  : 3E/0
 25652 ;;		Unchanged: 0/0
 25653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25658 ;;Total ram usage:        0 bytes
 25659 ;; Hardware stack levels used: 1
 25660 ;; Hardware stack levels required when called: 6
 25661 ;; This function calls:
 25662 ;;		_setFlashLigth_ON
 25663 ;;		_setRGB_ON
 25664 ;; This function is called by:
 25665 ;;		_main
 25666 ;; This function uses a non-reentrant model
 25667 ;;
 25668                           
 25669                           	psect	text111
 25670  003990                     __ptext111:
 25671                           	callstack 0
 25672  003990                     _ControlLights:
 25673                           	callstack 24
 25674                           
 25675                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 25676                           
 25677                           ;incstack = 0
 25678  003990  0101               	movlb	1	; () banked
 25679  003992  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 25680  003994  A4D8               	btfss	status,2,c
 25681  003996  D007               	goto	l16912
 25682                           
 25683                           ; BSR set to: 1
 25684                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 25685  003998  0E00               	movlw	0
 25686  00399A  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25687  00399C  0E14               	movlw	20
 25688  00399E  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25689  0039A0  ECA7  F044         	call	_setFlashLigth_ON	;wreg free
 25690                           
 25691                           ;outputs_MC50.c: 821:     }
 25692  0039A4  D010               	goto	l16918
 25693  0039A6                     l16912:
 25694                           
 25695                           ; BSR set to: 1
 25696  0039A6  51E4               	movf	_controlGate_stateMachine& (0+255),w,b
 25697  0039A8  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25698  0039AA  A4D8               	btfss	status,2,c
 25699  0039AC  D00C               	goto	l16918
 25700                           
 25701                           ; BSR set to: 1
 25702                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 25703  0039AE  0E00               	movlw	0
 25704  0039B0  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 25705                           
 25706                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 25707  0039B2  0E00               	movlw	0
 25708  0039B4  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 25709                           
 25710                           ; BSR set to: 1
 25711                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 25712  0039B6  0E03               	movlw	3
 25713  0039B8  0100               	movlb	0	; () banked
 25714  0039BA  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 25715  0039BC  B4D8               	btfsc	status,2,c
 25716  0039BE  D002               	goto	l2410
 25717                           
 25718                           ; BSR set to: 0
 25719                           
 25720                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 25721  0039C0  9487               	bcf	135,2,c	;volatile
 25722  0039C2  D001               	goto	l16918
 25723  0039C4                     l2410:
 25724                           
 25725                           ; BSR set to: 0
 25726  0039C4  8487               	bsf	135,2,c	;volatile
 25727  0039C6                     l16918:
 25728                           
 25729                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 25730  0039C6  0101               	movlb	1	; () banked
 25731  0039C8  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 25732  0039CA  B4D8               	btfsc	status,2,c
 25733  0039CC  D005               	goto	u20150
 25734                           
 25735                           ; BSR set to: 1
 25736  0039CE  0E04               	movlw	4
 25737  0039D0  19E4               	xorwf	_controlGate_stateMachine& (0+255),w,b
 25738  0039D2  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25739  0039D4  A4D8               	btfss	status,2,c
 25740  0039D6  D01C               	goto	l16930
 25741  0039D8                     u20150:
 25742                           
 25743                           ; BSR set to: 1
 25744  0039D8  BFAF               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 25745  0039DA  D01A               	goto	l16930
 25746  0039DC  51AF               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 25747  0039DE  E103               	bnz	u20160
 25748  0039E0  05AE               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 25749  0039E2  A0D8               	btfss	status,0,c
 25750  0039E4  D015               	goto	l16930
 25751  0039E6                     u20160:
 25752                           
 25753                           ; BSR set to: 1
 25754  0039E6  BFAF               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 25755  0039E8  D006               	goto	u20170
 25756  0039EA  51AF               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 25757  0039EC  E111               	bnz	l16930
 25758  0039EE  0E3D               	movlw	61
 25759  0039F0  5DAE               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 25760  0039F2  B0D8               	btfsc	status,0,c
 25761  0039F4  D00D               	goto	l16930
 25762  0039F6                     u20170:
 25763                           
 25764                           ; BSR set to: 1
 25765  0039F6  0E02               	movlw	2
 25766  0039F8  0100               	movlb	0	; () banked
 25767  0039FA  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25768  0039FC  A4D8               	btfss	status,2,c
 25769  0039FE  D008               	goto	l16930
 25770                           
 25771                           ; BSR set to: 0
 25772                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 25773  003A00  0E00               	movlw	0
 25774  003A02  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25775  003A04  0E04               	movlw	4
 25776  003A06  6E11               	movwf	setRGB_ON@Freq^0,c
 25777  003A08  0E01               	movlw	1
 25778  003A0A  ECD9  F03A         	call	_setRGB_ON
 25779                           
 25780                           ;outputs_MC50.c: 838:     }
 25781  003A0E  0012               	return	
 25782  003A10                     l16930:
 25783  003A10  0E03               	movlw	3
 25784  003A12  0101               	movlb	1	; () banked
 25785  003A14  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 25786  003A16  A4D8               	btfss	status,2,c
 25787  003A18  D04F               	goto	l16960
 25788                           
 25789                           ; BSR set to: 1
 25790                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 25791  003A1A  0E00               	movlw	0
 25792  003A1C  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 25793                           
 25794                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 25795  003A1E  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 25796  003A20  A4D8               	btfss	status,2,c
 25797  003A22  D013               	goto	l16942
 25798                           
 25799                           ; BSR set to: 1
 25800  003A24  0E03               	movlw	3
 25801  003A26  0100               	movlb	0	; () banked
 25802  003A28  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25803  003A2A  A4D8               	btfss	status,2,c
 25804  003A2C  D00E               	goto	l16942
 25805                           
 25806                           ; BSR set to: 0
 25807                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 25808  003A2E  0E00               	movlw	0
 25809  003A30  0101               	movlb	1	; () banked
 25810  003A32  6FDF               	movwf	(_ts_system+67)& (0+255),b	;volatile
 25811  003A34  0E28               	movlw	40
 25812  003A36  6FDE               	movwf	(_ts_system+66)& (0+255),b	;volatile
 25813                           
 25814                           ; BSR set to: 1
 25815                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 25816  003A38  0E00               	movlw	0
 25817  003A3A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25818  003A3C  0E00               	movlw	0
 25819  003A3E  6E11               	movwf	setRGB_ON@Freq^0,c
 25820  003A40  0E04               	movlw	4
 25821  003A42  ECD9  F03A         	call	_setRGB_ON
 25822                           
 25823                           ; BSR set to: 1
 25824                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 25825  003A46  0E01               	movlw	1
 25826  003A48  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 25827  003A4A                     l16942:
 25828                           
 25829                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 25830  003A4A  0101               	movlb	1	; () banked
 25831  003A4C  BFDF               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 25832  003A4E  D005               	goto	u20220
 25833  003A50  51DF               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 25834  003A52  E105               	bnz	l16946
 25835  003A54  05DE               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 25836  003A56  B0D8               	btfsc	status,0,c
 25837  003A58  D002               	goto	l16946
 25838  003A5A                     u20220:
 25839                           
 25840                           ; BSR set to: 1
 25841  003A5A  0100               	movlb	0	; () banked
 25842  003A5C  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25843  003A5E                     l16946:
 25844                           
 25845                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 25846  003A5E  0100               	movlb	0	; () banked
 25847  003A60  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25848  003A62  A4D8               	btfss	status,2,c
 25849  003A64  D010               	goto	l16952
 25850                           
 25851                           ; BSR set to: 0
 25852  003A66  0101               	movlb	1	; () banked
 25853  003A68  BFDF               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 25854  003A6A  D005               	goto	u20240
 25855  003A6C  51DF               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 25856  003A6E  E10B               	bnz	l16952
 25857  003A70  05DE               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 25858  003A72  B0D8               	btfsc	status,0,c
 25859  003A74  D008               	goto	l16952
 25860  003A76                     u20240:
 25861                           
 25862                           ; BSR set to: 1
 25863                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 25864  003A76  0E00               	movlw	0
 25865  003A78  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25866  003A7A  0E05               	movlw	5
 25867  003A7C  6E11               	movwf	setRGB_ON@Freq^0,c
 25868  003A7E  0E03               	movlw	3
 25869  003A80  ECD9  F03A         	call	_setRGB_ON
 25870                           
 25871                           ;outputs_MC50.c: 862:         }
 25872  003A84  D007               	goto	l16954
 25873  003A86                     l16952:
 25874                           
 25875                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 25876  003A86  0E00               	movlw	0
 25877  003A88  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25878  003A8A  0E00               	movlw	0
 25879  003A8C  6E11               	movwf	setRGB_ON@Freq^0,c
 25880  003A8E  0E03               	movlw	3
 25881  003A90  ECD9  F03A         	call	_setRGB_ON
 25882  003A94                     l16954:
 25883                           
 25884                           ; BSR set to: 1
 25885                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 25886  003A94  0100               	movlb	0	; () banked
 25887  003A96  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 25888  003A98  A4D8               	btfss	status,2,c
 25889  003A9A  D007               	goto	l16958
 25890                           
 25891                           ; BSR set to: 0
 25892                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 25893  003A9C  0E00               	movlw	0
 25894  003A9E  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25895  003AA0  0E0A               	movlw	10
 25896  003AA2  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25897  003AA4  ECA7  F044         	call	_setFlashLigth_ON	;wreg free
 25898                           
 25899                           ;outputs_MC50.c: 873:         }
 25900  003AA8  0012               	return	
 25901  003AAA                     l16958:
 25902                           
 25903                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 25904  003AAA  0E00               	movlw	0
 25905  003AAC  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25906  003AAE  0E00               	movlw	0
 25907  003AB0  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25908  003AB2  ECA7  F044         	call	_setFlashLigth_ON	;wreg free
 25909  003AB6  0012               	return	
 25910  003AB8                     l16960:
 25911                           
 25912                           ; BSR set to: 1
 25913  003AB8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25914  003ABA  A4D8               	btfss	status,2,c
 25915  003ABC  D042               	goto	l16988
 25916                           
 25917                           ; BSR set to: 1
 25918  003ABE  05E4               	decf	_controlGate_stateMachine& (0+255),w,b
 25919  003AC0  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25920  003AC2  A4D8               	btfss	status,2,c
 25921  003AC4  D03E               	goto	l16988
 25922                           
 25923                           ; BSR set to: 1
 25924                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 25925  003AC6  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 25926  003AC8  A4D8               	btfss	status,2,c
 25927                           
 25928                           ; BSR set to: 1
 25929                           
 25930                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 25931  003ACA  8E83               	bsf	131,7,c	;volatile
 25932                           
 25933                           ; BSR set to: 1
 25934                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 25935  003ACC  0100               	movlb	0	; () banked
 25936  003ACE  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25937  003AD0  A4D8               	btfss	status,2,c
 25938  003AD2  D017               	goto	l16976
 25939                           
 25940                           ; BSR set to: 0
 25941                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 25942  003AD4  0E02               	movlw	2
 25943  003AD6  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 25944  003AD8  B4D8               	btfsc	status,2,c
 25945  003ADA  D003               	goto	u20310
 25946                           
 25947                           ; BSR set to: 0
 25948  003ADC  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 25949  003ADE  A4D8               	btfss	status,2,c
 25950  003AE0  D008               	goto	l16974
 25951  003AE2                     u20310:
 25952                           
 25953                           ; BSR set to: 0
 25954  003AE2  0E00               	movlw	0
 25955  003AE4  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25956  003AE6  0E00               	movlw	0
 25957  003AE8  6E11               	movwf	setRGB_ON@Freq^0,c
 25958  003AEA  0E04               	movlw	4
 25959  003AEC  ECD9  F03A         	call	_setRGB_ON
 25960  003AF0  D013               	goto	l16980
 25961  003AF2                     l16974:
 25962                           
 25963                           ; BSR set to: 0
 25964  003AF2  0E00               	movlw	0
 25965  003AF4  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25966  003AF6  0E28               	movlw	40
 25967  003AF8  6E11               	movwf	setRGB_ON@Freq^0,c
 25968  003AFA  0E04               	movlw	4
 25969  003AFC  ECD9  F03A         	call	_setRGB_ON
 25970  003B00  D00B               	goto	l16980
 25971  003B02                     l16976:
 25972                           
 25973                           ; BSR set to: 0
 25974  003B02  0E03               	movlw	3
 25975  003B04  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25976  003B06  B4D8               	btfsc	status,2,c
 25977  003B08  D007               	goto	l16980
 25978                           
 25979                           ; BSR set to: 0
 25980  003B0A  0E00               	movlw	0
 25981  003B0C  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25982  003B0E  0E00               	movlw	0
 25983  003B10  6E11               	movwf	setRGB_ON@Freq^0,c
 25984  003B12  0E04               	movlw	4
 25985  003B14  ECD9  F03A         	call	_setRGB_ON
 25986  003B18                     l16980:
 25987                           
 25988                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 25989  003B18  0E03               	movlw	3
 25990  003B1A  0100               	movlb	0	; () banked
 25991  003B1C  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 25992  003B1E  B4D8               	btfsc	status,2,c
 25993  003B20  0012               	return	
 25994                           
 25995                           ; BSR set to: 0
 25996                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 25997  003B22  0101               	movlb	1	; () banked
 25998  003B24  BFBF               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 25999  003B26  D007               	goto	l2438
 26000  003B28  51BF               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 26001  003B2A  11BE               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 26002  003B2C  11BD               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 26003  003B2E  E1BD               	bnz	l16958
 26004  003B30  05BC               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 26005  003B32  B0D8               	btfsc	status,0,c
 26006  003B34  D7BA               	goto	l16958
 26007  003B36                     l2438:
 26008                           
 26009                           ; BSR set to: 1
 26010  003B36  9487               	bcf	135,2,c	;volatile
 26011                           
 26012                           ; BSR set to: 1
 26013                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 26014  003B38  0E00               	movlw	0
 26015  003B3A  6FBB               	movwf	(_ts_system+31)& (0+255),b	;volatile
 26016  003B3C  0E00               	movlw	0
 26017  003B3E  6FBA               	movwf	(_ts_system+30)& (0+255),b	;volatile
 26018                           
 26019                           ; BSR set to: 0
 26020                           ;outputs_MC50.c: 907:     }
 26021                           
 26022                           ;outputs_MC50.c: 906:         }
 26023  003B40  0012               	return	
 26024  003B42                     l16988:
 26025                           
 26026                           ; BSR set to: 1
 26027  003B42  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26028  003B44  A4D8               	btfss	status,2,c
 26029  003B46  D048               	goto	l17022
 26030                           
 26031                           ; BSR set to: 1
 26032                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 26033  003B48  0100               	movlb	0	; () banked
 26034  003B4A  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26035  003B4C  A4D8               	btfss	status,2,c
 26036  003B4E  D004               	goto	u20370
 26037                           
 26038                           ; BSR set to: 0
 26039  003B50  0101               	movlb	1	; () banked
 26040  003B52  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26041  003B54  B4D8               	btfsc	status,2,c
 26042  003B56  D00C               	goto	u20400
 26043  003B58                     u20370:
 26044  003B58  0100               	movlb	0	; () banked
 26045  003B5A  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26046  003B5C  A4D8               	btfss	status,2,c
 26047  003B5E  D017               	goto	l17006
 26048                           
 26049                           ; BSR set to: 0
 26050  003B60  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26051  003B62  B4D8               	btfsc	status,2,c
 26052  003B64  D014               	goto	l17006
 26053                           
 26054                           ; BSR set to: 0
 26055  003B66  0E02               	movlw	2
 26056  003B68  0101               	movlb	1	; () banked
 26057  003B6A  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26058  003B6C  A4D8               	btfss	status,2,c
 26059  003B6E  D00F               	goto	l17006
 26060  003B70                     u20400:
 26061                           
 26062                           ; BSR set to: 1
 26063                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26064  003B70  0E00               	movlw	0
 26065  003B72  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26066                           
 26067                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 26068  003B74  0E00               	movlw	0
 26069  003B76  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26070                           
 26071                           ; BSR set to: 1
 26072                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 26073  003B78  0E03               	movlw	3
 26074  003B7A  0100               	movlb	0	; () banked
 26075  003B7C  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26076  003B7E  B4D8               	btfsc	status,2,c
 26077  003B80  0012               	return	
 26078                           
 26079                           ; BSR set to: 0
 26080  003B82  0E02               	movlw	2
 26081  003B84  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26082  003B86  B4D8               	btfsc	status,2,c
 26083  003B88  0012               	return	
 26084                           
 26085                           ; BSR set to: 0
 26086                           
 26087                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 26088  003B8A  9487               	bcf	135,2,c	;volatile
 26089  003B8C  0012               	return	
 26090  003B8E                     l17006:
 26091                           
 26092                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26093  003B8E  0100               	movlb	0	; () banked
 26094  003B90  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26095  003B92  A4D8               	btfss	status,2,c
 26096  003B94  D008               	goto	l17010
 26097                           
 26098                           ; BSR set to: 0
 26099                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 26100  003B96  0E00               	movlw	0
 26101  003B98  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26102  003B9A  0E14               	movlw	20
 26103  003B9C  6E11               	movwf	setRGB_ON@Freq^0,c
 26104  003B9E  0E01               	movlw	1
 26105  003BA0  ECD9  F03A         	call	_setRGB_ON
 26106                           
 26107                           ;outputs_MC50.c: 932:             }
 26108  003BA4  D007               	goto	l17012
 26109  003BA6                     l17010:
 26110                           
 26111                           ; BSR set to: 0
 26112                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 26113  003BA6  0E00               	movlw	0
 26114  003BA8  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26115  003BAA  0E00               	movlw	0
 26116  003BAC  6E11               	movwf	setRGB_ON@Freq^0,c
 26117  003BAE  0E01               	movlw	1
 26118  003BB0  ECD9  F03A         	call	_setRGB_ON
 26119  003BB4                     l17012:
 26120                           
 26121                           ; BSR set to: 1
 26122                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 26123  003BB4  0100               	movlb	0	; () banked
 26124  003BB6  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26125  003BB8  B4D8               	btfsc	status,2,c
 26126  003BBA  D004               	goto	u20450
 26127                           
 26128                           ; BSR set to: 0
 26129  003BBC  0E03               	movlw	3
 26130  003BBE  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26131  003BC0  A4D8               	btfss	status,2,c
 26132  003BC2  D002               	goto	l17016
 26133  003BC4                     u20450:
 26134                           
 26135                           ; BSR set to: 0
 26136                           
 26137                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 26138  003BC4  9487               	bcf	135,2,c	;volatile
 26139  003BC6  0012               	return	
 26140  003BC8                     l17016:
 26141                           
 26142                           ; BSR set to: 0
 26143  003BC8  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26144  003BCA  B4D8               	btfsc	status,2,c
 26145  003BCC  D76E               	goto	l16958
 26146                           
 26147                           ; BSR set to: 0
 26148  003BCE  0E02               	movlw	2
 26149  003BD0  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26150  003BD2  A4D8               	btfss	status,2,c
 26151  003BD4  0012               	return	
 26152  003BD6  D769               	goto	l16958
 26153  003BD8                     l17022:
 26154                           
 26155                           ; BSR set to: 1
 26156                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 26157  003BD8  0E00               	movlw	0
 26158  003BDA  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26159                           
 26160                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 26161  003BDC  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 26162  003BDE  A4D8               	btfss	status,2,c
 26163  003BE0  D00C               	goto	l17028
 26164                           
 26165                           ; BSR set to: 1
 26166  003BE2  0E03               	movlw	3
 26167  003BE4  0100               	movlb	0	; () banked
 26168  003BE6  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26169  003BE8  A4D8               	btfss	status,2,c
 26170  003BEA  D007               	goto	l17028
 26171                           
 26172                           ; BSR set to: 0
 26173                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 26174  003BEC  0E00               	movlw	0
 26175  003BEE  0101               	movlb	1	; () banked
 26176  003BF0  6FDF               	movwf	(_ts_system+67)& (0+255),b	;volatile
 26177  003BF2  0E28               	movlw	40
 26178  003BF4  6FDE               	movwf	(_ts_system+66)& (0+255),b	;volatile
 26179                           
 26180                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 26181  003BF6  0E01               	movlw	1
 26182  003BF8  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26183  003BFA                     l17028:
 26184                           
 26185                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 26186  003BFA  0101               	movlb	1	; () banked
 26187  003BFC  BFDF               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26188  003BFE  D005               	goto	u20500
 26189  003C00  51DF               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26190  003C02  E105               	bnz	l17032
 26191  003C04  05DE               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26192  003C06  B0D8               	btfsc	status,0,c
 26193  003C08  D002               	goto	l17032
 26194  003C0A                     u20500:
 26195                           
 26196                           ; BSR set to: 1
 26197  003C0A  0100               	movlb	0	; () banked
 26198  003C0C  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26199  003C0E                     l17032:
 26200                           
 26201                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 26202  003C0E  0E04               	movlw	4
 26203  003C10  0101               	movlb	1	; () banked
 26204  003C12  19E4               	xorwf	_controlGate_stateMachine& (0+255),w,b
 26205  003C14  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26206  003C16  A4D8               	btfss	status,2,c
 26207  003C18  D01B               	goto	l17044
 26208                           
 26209                           ; BSR set to: 1
 26210                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26211  003C1A  0E00               	movlw	0
 26212  003C1C  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26213                           
 26214                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 26215  003C1E  0E00               	movlw	0
 26216  003C20  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26217                           
 26218                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 26219  003C22  0100               	movlb	0	; () banked
 26220  003C24  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26221  003C26  A4D8               	btfss	status,2,c
 26222  003C28  D00A               	goto	u20550
 26223                           
 26224                           ; BSR set to: 0
 26225  003C2A  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26226  003C2C  B4D8               	btfsc	status,2,c
 26227  003C2E  D003               	goto	u20540
 26228                           
 26229                           ; BSR set to: 0
 26230  003C30  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26231  003C32  A4D8               	btfss	status,2,c
 26232  003C34  D004               	goto	u20550
 26233  003C36                     u20540:
 26234                           
 26235                           ; BSR set to: 0
 26236  003C36  0E02               	movlw	2
 26237  003C38  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 26238  003C3A  A4D8               	btfss	status,2,c
 26239  003C3C  D007               	goto	l2472
 26240  003C3E                     u20550:
 26241                           
 26242                           ; BSR set to: 0
 26243                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 26244  003C3E  0E00               	movlw	0
 26245  003C40  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26246  003C42  0E00               	movlw	0
 26247  003C44  6E11               	movwf	setRGB_ON@Freq^0,c
 26248  003C46  0E01               	movlw	1
 26249  003C48  ECD9  F03A         	call	_setRGB_ON
 26250  003C4C                     l2472:
 26251  003C4C  9487               	bcf	135,2,c	;volatile
 26252  003C4E  0012               	return	
 26253  003C50                     l17044:
 26254                           
 26255                           ; BSR set to: 1
 26256                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26257  003C50  0100               	movlb	0	; () banked
 26258  003C52  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26259  003C54  A4D8               	btfss	status,2,c
 26260  003C56  D008               	goto	l17048
 26261                           
 26262                           ; BSR set to: 0
 26263                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 26264  003C58  0E00               	movlw	0
 26265  003C5A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26266  003C5C  0E0A               	movlw	10
 26267  003C5E  6E11               	movwf	setRGB_ON@Freq^0,c
 26268  003C60  0E02               	movlw	2
 26269  003C62  ECD9  F03A         	call	_setRGB_ON
 26270                           
 26271                           ;outputs_MC50.c: 999:             }
 26272  003C66  D007               	goto	l17050
 26273  003C68                     l17048:
 26274                           
 26275                           ; BSR set to: 0
 26276                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 26277  003C68  0E00               	movlw	0
 26278  003C6A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26279  003C6C  0E00               	movlw	0
 26280  003C6E  6E11               	movwf	setRGB_ON@Freq^0,c
 26281  003C70  0E02               	movlw	2
 26282  003C72  ECD9  F03A         	call	_setRGB_ON
 26283  003C76                     l17050:
 26284                           
 26285                           ; BSR set to: 1
 26286                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 26287  003C76  0100               	movlb	0	; () banked
 26288  003C78  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26289  003C7A  A4D8               	btfss	status,2,c
 26290  003C7C  D007               	goto	l17054
 26291                           
 26292                           ; BSR set to: 0
 26293                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 26294  003C7E  0E00               	movlw	0
 26295  003C80  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26296  003C82  0E14               	movlw	20
 26297  003C84  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26298  003C86  ECA7  F044         	call	_setFlashLigth_ON	;wreg free
 26299                           
 26300                           ;outputs_MC50.c: 1011:             }
 26301  003C8A  D00D               	goto	l17060
 26302  003C8C                     l17054:
 26303                           
 26304                           ; BSR set to: 0
 26305  003C8C  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26306  003C8E  B4D8               	btfsc	status,2,c
 26307  003C90  D004               	goto	u20590
 26308                           
 26309                           ; BSR set to: 0
 26310  003C92  0E02               	movlw	2
 26311  003C94  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26312  003C96  A4D8               	btfss	status,2,c
 26313  003C98  D006               	goto	l17060
 26314  003C9A                     u20590:
 26315                           
 26316                           ; BSR set to: 0
 26317                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 26318  003C9A  0E00               	movlw	0
 26319  003C9C  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26320  003C9E  0E00               	movlw	0
 26321  003CA0  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26322  003CA2  ECA7  F044         	call	_setFlashLigth_ON	;wreg free
 26323  003CA6                     l17060:
 26324                           
 26325                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 26326  003CA6  0E03               	movlw	3
 26327  003CA8  0100               	movlb	0	; () banked
 26328  003CAA  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26329  003CAC  A4D8               	btfss	status,2,c
 26330  003CAE  0012               	return	
 26331                           
 26332                           ; BSR set to: 0
 26333                           
 26334                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 26335  003CB0  9487               	bcf	135,2,c	;volatile
 26336  003CB2  0012               	return		;funcret
 26337  003CB4                     __end_of_ControlLights:
 26338                           	callstack 0
 26339                           
 26340 ;; *************** function _setRGB_ON *****************
 26341 ;; Defined at:
 26342 ;;		line 1028 in file "outputs_MC50.c"
 26343 ;; Parameters:    Size  Location     Type
 26344 ;;  RGBLigth        1    wreg     enum E10611
 26345 ;;  Freq            2   16[COMRAM] int 
 26346 ;; Auto vars:     Size  Location     Type
 26347 ;;  RGBLigth        1   20[COMRAM] enum E10611
 26348 ;; Return value:  Size  Location     Type
 26349 ;;                  1    wreg      void 
 26350 ;; Registers used:
 26351 ;;		wreg, status,2, status,0, cstack
 26352 ;; Tracked objects:
 26353 ;;		On entry : 3E/0
 26354 ;;		On exit  : 3F/1
 26355 ;;		Unchanged: 0/0
 26356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26360 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26361 ;;Total ram usage:        5 bytes
 26362 ;; Hardware stack levels used: 1
 26363 ;; Hardware stack levels required when called: 5
 26364 ;; This function calls:
 26365 ;;		_RGB_Set
 26366 ;; This function is called by:
 26367 ;;		_ControlLights
 26368 ;; This function uses a non-reentrant model
 26369 ;;
 26370                           
 26371                           	psect	text112
 26372  0075B2                     __ptext112:
 26373                           	callstack 0
 26374  0075B2                     _setRGB_ON:
 26375                           	callstack 24
 26376                           
 26377                           ;incstack = 0
 26378                           ;setRGB_ON@RGBLigth stored from wreg
 26379  0075B2  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 26380                           
 26381                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 26382  0075B4  8E83               	bsf	131,7,c	;volatile
 26383                           
 26384                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 26385  0075B6  5011               	movf	setRGB_ON@Freq^0,w,c
 26386  0075B8  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 26387  0075BA  B4D8               	btfsc	status,2,c
 26388  0075BC  D015               	goto	l14704
 26389  0075BE  0101               	movlb	1	; () banked
 26390  0075C0  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 26391  0075C2  B4D8               	btfsc	status,2,c
 26392  0075C4  D011               	goto	l14704
 26393  0075C6  D024               	goto	l14706
 26394  0075C8                     l14694:
 26395                           
 26396                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 26397  0075C8  0E20               	movlw	32
 26398  0075CA  EC81  F048         	call	_RGB_Set
 26399                           
 26400                           ;outputs_MC50.c: 1044:             break;
 26401  0075CE  D020               	goto	l14706
 26402  0075D0                     l14696:
 26403                           
 26404                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 26405  0075D0  0E04               	movlw	4
 26406  0075D2  EC81  F048         	call	_RGB_Set
 26407                           
 26408                           ;outputs_MC50.c: 1048:             break;
 26409  0075D6  D01C               	goto	l14706
 26410  0075D8                     l14698:
 26411                           
 26412                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 26413  0075D8  0E00               	movlw	0
 26414  0075DA  EC81  F048         	call	_RGB_Set
 26415                           
 26416                           ;outputs_MC50.c: 1052:             break;
 26417  0075DE  D018               	goto	l14706
 26418  0075E0                     l14700:
 26419                           
 26420                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 26421  0075E0  0E24               	movlw	36
 26422  0075E2  EC81  F048         	call	_RGB_Set
 26423                           
 26424                           ;outputs_MC50.c: 1056:             break;
 26425  0075E6  D014               	goto	l14706
 26426  0075E8                     l14704:
 26427  0075E8  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 26428  0075EA  6E13               	movwf	??_setRGB_ON^0,c
 26429  0075EC  6A14               	clrf	(??_setRGB_ON+1)^0,c
 26430                           
 26431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26432                           ; Switch size 1, requested type "simple"
 26433                           ; Number of cases is 1, Range of values is 0 to 0
 26434                           ; switch strategies available:
 26435                           ; Name         Instructions Cycles
 26436                           ; simple_byte            4     3 (average)
 26437                           ;	Chosen strategy is simple_byte
 26438  0075EE  5014               	movf	(??_setRGB_ON+1)^0,w,c
 26439  0075F0  0A00               	xorlw	0	; case 0
 26440  0075F2  A4D8               	btfss	status,2,c
 26441  0075F4  D00D               	goto	l14706
 26442                           
 26443                           ; Switch size 1, requested type "simple"
 26444                           ; Number of cases is 4, Range of values is 1 to 4
 26445                           ; switch strategies available:
 26446                           ; Name         Instructions Cycles
 26447                           ; simple_byte           13     7 (average)
 26448                           ;	Chosen strategy is simple_byte
 26449  0075F6  5013               	movf	??_setRGB_ON^0,w,c
 26450  0075F8  0A01               	xorlw	1	; case 1
 26451  0075FA  B4D8               	btfsc	status,2,c
 26452  0075FC  D7ED               	goto	l14698
 26453  0075FE  0A03               	xorlw	3	; case 2
 26454  007600  B4D8               	btfsc	status,2,c
 26455  007602  D7E6               	goto	l14696
 26456  007604  0A01               	xorlw	1	; case 3
 26457  007606  B4D8               	btfsc	status,2,c
 26458  007608  D7DF               	goto	l14694
 26459  00760A  0A07               	xorlw	7	; case 4
 26460  00760C  B4D8               	btfsc	status,2,c
 26461  00760E  D7E8               	goto	l14700
 26462  007610                     l14706:
 26463                           
 26464                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 26465  007610  0101               	movlb	1	; () banked
 26466  007612  BFB9               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 26467  007614  D005               	goto	u15320
 26468  007616  51B9               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 26469  007618  E113               	bnz	l2502
 26470  00761A  05B8               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 26471  00761C  B0D8               	btfsc	status,0,c
 26472  00761E  0012               	return	
 26473  007620                     u15320:
 26474                           
 26475                           ; BSR set to: 1
 26476  007620  5011               	movf	setRGB_ON@Freq^0,w,c
 26477  007622  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 26478  007624  B4D8               	btfsc	status,2,c
 26479  007626  0012               	return	
 26480                           
 26481                           ; BSR set to: 1
 26482                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 26483  007628  C011  F1B8         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 26484  00762C  C012  F1B9         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 26485                           
 26486                           ; BSR set to: 1
 26487                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 26488  007630  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 26489  007632  A4D8               	btfss	status,2,c
 26490  007634  D003               	goto	l14716
 26491                           
 26492                           ; BSR set to: 1
 26493                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 26494  007636  0E00               	movlw	0
 26495  007638  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 26496                           
 26497                           ;outputs_MC50.c: 1067:         }
 26498  00763A  0012               	return	
 26499  00763C                     l14716:
 26500                           
 26501                           ; BSR set to: 1
 26502                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 26503  00763C  0E01               	movlw	1
 26504  00763E  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 26505  007640                     l2502:
 26506                           
 26507                           ; BSR set to: 1
 26508  007640  0012               	return		;funcret
 26509  007642                     __end_of_setRGB_ON:
 26510                           	callstack 0
 26511                           
 26512 ;; *************** function _RGB_Set *****************
 26513 ;; Defined at:
 26514 ;;		line 98 in file "outputs_MC50.c"
 26515 ;; Parameters:    Size  Location     Type
 26516 ;;  value           1    wreg     unsigned char 
 26517 ;; Auto vars:     Size  Location     Type
 26518 ;;  value           1   15[COMRAM] unsigned char 
 26519 ;; Return value:  Size  Location     Type
 26520 ;;                  1    wreg      void 
 26521 ;; Registers used:
 26522 ;;		wreg, status,2, status,0
 26523 ;; Tracked objects:
 26524 ;;		On entry : 0/0
 26525 ;;		On exit  : 0/0
 26526 ;;		Unchanged: 0/0
 26527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26531 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26532 ;;Total ram usage:        1 bytes
 26533 ;; Hardware stack levels used: 1
 26534 ;; Hardware stack levels required when called: 4
 26535 ;; This function calls:
 26536 ;;		Nothing
 26537 ;; This function is called by:
 26538 ;;		_setRGB_ON
 26539 ;; This function uses a non-reentrant model
 26540 ;;
 26541                           
 26542                           	psect	text113
 26543  009102                     __ptext113:
 26544                           	callstack 0
 26545  009102                     _RGB_Set:
 26546                           	callstack 24
 26547                           
 26548                           ; BSR set to: 1
 26549                           ;incstack = 0
 26550                           ;RGB_Set@value stored from wreg
 26551  009102  6E10               	movwf	RGB_Set@value^0,c
 26552                           
 26553                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 26554  009104  0EDB               	movlw	219
 26555  009106  1685               	andwf	133,f,c	;volatile
 26556                           
 26557                           ;outputs_MC50.c: 101:    LATC |= value;
 26558  009108  5010               	movf	RGB_Set@value^0,w,c	;volatile
 26559  00910A  1285               	iorwf	133,f,c	;volatile
 26560  00910C  9E83               	bcf	131,7,c	;volatile
 26561  00910E  0012               	return		;funcret
 26562  009110                     __end_of_RGB_Set:
 26563                           	callstack 0
 26564                           
 26565 ;; *************** function _setFlashLigth_ON *****************
 26566 ;; Defined at:
 26567 ;;		line 1077 in file "outputs_MC50.c"
 26568 ;; Parameters:    Size  Location     Type
 26569 ;;  Freq            2   15[COMRAM] int 
 26570 ;; Auto vars:     Size  Location     Type
 26571 ;;		None
 26572 ;; Return value:  Size  Location     Type
 26573 ;;                  1    wreg      void 
 26574 ;; Registers used:
 26575 ;;		wreg, status,2, status,0
 26576 ;; Tracked objects:
 26577 ;;		On entry : 3E/1
 26578 ;;		On exit  : 3F/1
 26579 ;;		Unchanged: 0/0
 26580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26584 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26585 ;;Total ram usage:        2 bytes
 26586 ;; Hardware stack levels used: 1
 26587 ;; Hardware stack levels required when called: 4
 26588 ;; This function calls:
 26589 ;;		Nothing
 26590 ;; This function is called by:
 26591 ;;		_ControlLights
 26592 ;; This function uses a non-reentrant model
 26593 ;;
 26594                           
 26595                           	psect	text114
 26596  00894E                     __ptext114:
 26597                           	callstack 0
 26598  00894E                     _setFlashLigth_ON:
 26599                           	callstack 25
 26600                           
 26601                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 26602                           
 26603                           ;incstack = 0
 26604  00894E  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 26605  008950  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 26606  008952  B4D8               	btfsc	status,2,c
 26607  008954  D004               	goto	u15270
 26608  008956  0101               	movlb	1	; () banked
 26609  008958  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 26610  00895A  A4D8               	btfss	status,2,c
 26611  00895C  D002               	goto	l2511
 26612  00895E                     u15270:
 26613                           
 26614                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 26615  00895E  8487               	bsf	135,2,c	;volatile
 26616  008960  D001               	goto	l14682
 26617  008962                     l2511:
 26618                           
 26619                           ; BSR set to: 1
 26620  008962  9487               	bcf	135,2,c	;volatile
 26621  008964                     l14682:
 26622                           
 26623                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 26624  008964  0101               	movlb	1	; () banked
 26625  008966  BFBB               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 26626  008968  D005               	goto	u15280
 26627  00896A  51BB               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 26628  00896C  E10D               	bnz	l2514
 26629  00896E  05BA               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 26630  008970  B0D8               	btfsc	status,0,c
 26631  008972  0012               	return	
 26632  008974                     u15280:
 26633                           
 26634                           ; BSR set to: 1
 26635  008974  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 26636  008976  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 26637  008978  B4D8               	btfsc	status,2,c
 26638  00897A  0012               	return	
 26639                           
 26640                           ; BSR set to: 1
 26641                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 26642  00897C  C010  F1BA         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 26643  008980  C011  F1BB         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 26644                           
 26645                           ; BSR set to: 1
 26646                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 26647  008984  0E01               	movlw	1
 26648  008986  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 26649  008988                     l2514:
 26650                           
 26651                           ; BSR set to: 1
 26652  008988  0012               	return		;funcret
 26653  00898A                     __end_of_setFlashLigth_ON:
 26654                           	callstack 0
 26655                           
 26656 ;; *************** function _ControlInputs *****************
 26657 ;; Defined at:
 26658 ;;		line 674 in file "inputs_MC50.c"
 26659 ;; Parameters:    Size  Location     Type
 26660 ;;		None
 26661 ;; Auto vars:     Size  Location     Type
 26662 ;;		None
 26663 ;; Return value:  Size  Location     Type
 26664 ;;                  1    wreg      void 
 26665 ;; Registers used:
 26666 ;;		wreg, status,2, status,0
 26667 ;; Tracked objects:
 26668 ;;		On entry : 3E/1
 26669 ;;		On exit  : 3E/0
 26670 ;;		Unchanged: 0/0
 26671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26676 ;;Total ram usage:        0 bytes
 26677 ;; Hardware stack levels used: 1
 26678 ;; Hardware stack levels required when called: 4
 26679 ;; This function calls:
 26680 ;;		Nothing
 26681 ;; This function is called by:
 26682 ;;		_main
 26683 ;; This function uses a non-reentrant model
 26684 ;;
 26685                           
 26686                           	psect	text115
 26687  00646A                     __ptext115:
 26688                           	callstack 0
 26689  00646A                     _ControlInputs:
 26690                           	callstack 26
 26691                           
 26692                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 26693                           
 26694                           ; BSR set to: 1
 26695                           ;incstack = 0
 26696  00646A  0E03               	movlw	3
 26697  00646C  0101               	movlb	1	; () banked
 26698  00646E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26699  006470  B4D8               	btfsc	status,2,c
 26700  006472  D00C               	goto	u19230
 26701                           
 26702                           ; BSR set to: 1
 26703  006474  A291               	btfss	145,1,c	;volatile
 26704  006476  D004               	goto	u19210
 26705                           
 26706                           ; BSR set to: 1
 26707  006478  0100               	movlb	0	; () banked
 26708  00647A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26709  00647C  B4D8               	btfsc	status,2,c
 26710  00647E  D006               	goto	u19230
 26711  006480                     u19210:
 26712  006480  A091               	btfss	145,0,c	;volatile
 26713  006482  D00A               	goto	l16650
 26714  006484  0100               	movlb	0	; () banked
 26715  006486  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26716  006488  A4D8               	btfss	status,2,c
 26717  00648A  D006               	goto	l16650
 26718  00648C                     u19230:
 26719  00648C  0101               	movlb	1	; () banked
 26720  00648E  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 26721  006490  A4D8               	btfss	status,2,c
 26722  006492  D002               	goto	l16650
 26723                           
 26724                           ; BSR set to: 1
 26725                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 26726  006494  0E00               	movlw	0
 26727  006496  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26728  006498                     l16650:
 26729                           
 26730                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 26731  006498  0101               	movlb	1	; () banked
 26732  00649A  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26733  00649C  B4D8               	btfsc	status,2,c
 26734  00649E  D010               	goto	u19300
 26735                           
 26736                           ; BSR set to: 1
 26737  0064A0  0E02               	movlw	2
 26738  0064A2  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26739  0064A4  B4D8               	btfsc	status,2,c
 26740  0064A6  D00C               	goto	u19300
 26741                           
 26742                           ; BSR set to: 1
 26743  0064A8  A091               	btfss	145,0,c	;volatile
 26744  0064AA  D004               	goto	u19280
 26745                           
 26746                           ; BSR set to: 1
 26747  0064AC  0100               	movlb	0	; () banked
 26748  0064AE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26749  0064B0  B4D8               	btfsc	status,2,c
 26750  0064B2  D006               	goto	u19300
 26751  0064B4                     u19280:
 26752  0064B4  A291               	btfss	145,1,c	;volatile
 26753  0064B6  D00A               	goto	l16664
 26754  0064B8  0100               	movlb	0	; () banked
 26755  0064BA  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26756  0064BC  A4D8               	btfss	status,2,c
 26757  0064BE  D006               	goto	l16664
 26758  0064C0                     u19300:
 26759  0064C0  0101               	movlb	1	; () banked
 26760  0064C2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 26761  0064C4  A4D8               	btfss	status,2,c
 26762  0064C6  D002               	goto	l16664
 26763                           
 26764                           ; BSR set to: 1
 26765                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 26766  0064C8  0E00               	movlw	0
 26767  0064CA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26768  0064CC                     l16664:
 26769                           
 26770                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 26771  0064CC  0101               	movlb	1	; () banked
 26772  0064CE  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 26773  0064D0  B4D8               	btfsc	status,2,c
 26774  0064D2  0012               	return	
 26775                           
 26776                           ; BSR set to: 1
 26777                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 26778  0064D4  0100               	movlb	0	; () banked
 26779  0064D6  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 26780  0064D8  A4D8               	btfss	status,2,c
 26781  0064DA  D02B               	goto	l16690
 26782                           
 26783                           ; BSR set to: 0
 26784  0064DC  0101               	movlb	1	; () banked
 26785  0064DE  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 26786  0064E0  A4D8               	btfss	status,2,c
 26787  0064E2  D027               	goto	l16690
 26788                           
 26789                           ; BSR set to: 1
 26790  0064E4  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 26791  0064E6  A4D8               	btfss	status,2,c
 26792  0064E8  D024               	goto	l16690
 26793                           
 26794                           ; BSR set to: 1
 26795                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 26796  0064EA  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26797  0064EC  B4D8               	btfsc	status,2,c
 26798  0064EE  D004               	goto	u19370
 26799                           
 26800                           ; BSR set to: 1
 26801  0064F0  0E02               	movlw	2
 26802  0064F2  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26803  0064F4  A4D8               	btfss	status,2,c
 26804  0064F6  D007               	goto	l16680
 26805  0064F8                     u19370:
 26806                           
 26807                           ; BSR set to: 1
 26808  0064F8  0100               	movlb	0	; () banked
 26809  0064FA  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 26810  0064FC  A4D8               	btfss	status,2,c
 26811  0064FE  D003               	goto	l16680
 26812                           
 26813                           ; BSR set to: 0
 26814                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 26815  006500  0E00               	movlw	0
 26816  006502  0101               	movlb	1	; () banked
 26817  006504  D015               	goto	L102
 26818  006506                     l16680:
 26819  006506  0E03               	movlw	3
 26820  006508  0101               	movlb	1	; () banked
 26821  00650A  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26822  00650C  A4D8               	btfss	status,2,c
 26823  00650E  D011               	goto	l16690
 26824                           
 26825                           ; BSR set to: 1
 26826  006510  0100               	movlb	0	; () banked
 26827  006512  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 26828  006514  A4D8               	btfss	status,2,c
 26829  006516  D00D               	goto	l16690
 26830                           
 26831                           ; BSR set to: 0
 26832  006518  0101               	movlb	1	; () banked
 26833  00651A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 26834  00651C  D005               	goto	u19410
 26835  00651E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 26836  006520  E108               	bnz	l16690
 26837  006522  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 26838  006524  B0D8               	btfsc	status,0,c
 26839  006526  D005               	goto	l16690
 26840  006528                     u19410:
 26841                           
 26842                           ; BSR set to: 1
 26843  006528  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 26844  00652A  A4D8               	btfss	status,2,c
 26845  00652C  D002               	goto	l16690
 26846                           
 26847                           ; BSR set to: 1
 26848                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 26849  00652E  0E00               	movlw	0
 26850  006530                     L102:
 26851  006530  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26852  006532                     l16690:
 26853                           
 26854                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 26855  006532  0100               	movlb	0	; () banked
 26856  006534  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 26857  006536  B4D8               	btfsc	status,2,c
 26858  006538  D003               	goto	u19440
 26859                           
 26860                           ; BSR set to: 0
 26861  00653A  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 26862  00653C  A4D8               	btfss	status,2,c
 26863  00653E  0012               	return	
 26864  006540                     u19440:
 26865                           
 26866                           ; BSR set to: 0
 26867  006540  0101               	movlb	1	; () banked
 26868  006542  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 26869  006544  A4D8               	btfss	status,2,c
 26870  006546  0012               	return	
 26871                           
 26872                           ; BSR set to: 1
 26873  006548  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 26874  00654A  A4D8               	btfss	status,2,c
 26875  00654C  0012               	return	
 26876                           
 26877                           ; BSR set to: 1
 26878                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 26879  00654E  0E03               	movlw	3
 26880  006550  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26881  006552  A4D8               	btfss	status,2,c
 26882  006554  D008               	goto	l16704
 26883                           
 26884                           ; BSR set to: 1
 26885  006556  0100               	movlb	0	; () banked
 26886  006558  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 26887  00655A  A4D8               	btfss	status,2,c
 26888  00655C  D004               	goto	l16704
 26889                           
 26890                           ; BSR set to: 0
 26891                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 26892  00655E  0E00               	movlw	0
 26893  006560  0101               	movlb	1	; () banked
 26894  006562  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26895                           
 26896                           ;inputs_MC50.c: 727:             }
 26897  006564  0012               	return	
 26898  006566                     l16704:
 26899  006566  0101               	movlb	1	; () banked
 26900  006568  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26901  00656A  B4D8               	btfsc	status,2,c
 26902  00656C  D004               	goto	u19500
 26903                           
 26904                           ; BSR set to: 1
 26905  00656E  0E02               	movlw	2
 26906  006570  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26907  006572  A4D8               	btfss	status,2,c
 26908  006574  D004               	goto	u19510
 26909  006576                     u19500:
 26910                           
 26911                           ; BSR set to: 1
 26912  006576  0100               	movlb	0	; () banked
 26913  006578  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 26914  00657A  B4D8               	btfsc	status,2,c
 26915  00657C  D004               	goto	u19520
 26916  00657E                     u19510:
 26917  00657E  0100               	movlb	0	; () banked
 26918  006580  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 26919  006582  A4D8               	btfss	status,2,c
 26920  006584  0012               	return	
 26921  006586                     u19520:
 26922                           
 26923                           ; BSR set to: 0
 26924                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 26925  006586  0E00               	movlw	0
 26926  006588  0101               	movlb	1	; () banked
 26927  00658A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26928  00658C  0012               	return	
 26929  00658E                     __end_of_ControlInputs:
 26930                           	callstack 0
 26931                           
 26932 ;; *************** function _ControlCurrent *****************
 26933 ;; Defined at:
 26934 ;;		line 342 in file "controlCurrent_MC50.c"
 26935 ;; Parameters:    Size  Location     Type
 26936 ;;		None
 26937 ;; Auto vars:     Size  Location     Type
 26938 ;;		None
 26939 ;; Return value:  Size  Location     Type
 26940 ;;                  1    wreg      void 
 26941 ;; Registers used:
 26942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26943 ;; Tracked objects:
 26944 ;;		On entry : 3E/1
 26945 ;;		On exit  : 3E/0
 26946 ;;		Unchanged: 0/0
 26947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26950 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26951 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26952 ;;Total ram usage:        4 bytes
 26953 ;; Hardware stack levels used: 1
 26954 ;; Hardware stack levels required when called: 6
 26955 ;; This function calls:
 26956 ;;		_GetMotorPower
 26957 ;;		_getCurrentComparator
 26958 ;;		_refreshADCZeroOffset
 26959 ;;		_refreshCurrent
 26960 ;; This function is called by:
 26961 ;;		_main
 26962 ;; This function uses a non-reentrant model
 26963 ;;
 26964                           
 26965                           	psect	text116
 26966  005E24                     __ptext116:
 26967                           	callstack 0
 26968  005E24                     _ControlCurrent:
 26969                           	callstack 24
 26970                           
 26971                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 26972                           
 26973                           ;incstack = 0
 26974  005E24  EC9F  F043         	call	_refreshCurrent	;wreg free
 26975                           
 26976                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 26977  005E28  EC5A  F034         	call	_refreshADCZeroOffset	;wreg free
 26978                           
 26979                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 26980  005E2C  EC81  F037         	call	_GetMotorPower	;wreg free
 26981  005E30  6E23               	movwf	??_ControlCurrent^0,c
 26982  005E32  5023               	movf	??_ControlCurrent^0,w,c
 26983  005E34  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 26984  005E36  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 26985                           
 26986                           ; BSR set to: 1
 26987                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 26988  005E38  EC27  F02B         	call	_getCurrentComparator	;wreg free
 26989  005E3C  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 26990  005E40  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 26991  005E44  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 26992  005E48  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 26993                           
 26994                           ; BSR set to: 1
 26995                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 26996  005E4C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26997  005E4E  A4D8               	btfss	status,2,c
 26998  005E50  D00F               	goto	l22528
 26999                           
 27000                           ; BSR set to: 1
 27001                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 27002  005E52  0E00               	movlw	0
 27003  005E54  0100               	movlb	0	; () banked
 27004  005E56  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27005                           
 27006                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 27007  005E58  0E00               	movlw	0
 27008  005E5A  0101               	movlb	1	; () banked
 27009  005E5C  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27010                           
 27011                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 27012  005E5E  0E00               	movlw	0
 27013  005E60  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27014                           
 27015                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 27016  005E62  0E00               	movlw	0
 27017  005E64  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27018                           
 27019                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 27020  005E66  0E00               	movlw	0
 27021  005E68  6FD5               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27022  005E6A  0E14               	movlw	20
 27023  005E6C  6FD4               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27024                           
 27025                           ;controlCurrent_MC50.c: 365:     }
 27026  005E6E  0012               	return	
 27027  005E70                     l22528:
 27028                           
 27029                           ; BSR set to: 1
 27030  005E70  517B               	movf	_powerControl_st& (0+255),w,b
 27031  005E72  A4D8               	btfss	status,2,c
 27032  005E74  D05D               	goto	l22562
 27033                           
 27034                           ; BSR set to: 1
 27035                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 27036  005E76  0E00               	movlw	0
 27037  005E78  6FD5               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27038  005E7A  0E14               	movlw	20
 27039  005E7C  6FD4               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27040                           
 27041                           ; BSR set to: 1
 27042                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 27043  005E7E  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 27044  005E80  6E23               	movwf	??_ControlCurrent^0,c
 27045  005E82  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 27046  005E84  6E24               	movwf	(??_ControlCurrent+1)^0,c
 27047  005E86  6A25               	clrf	(??_ControlCurrent+2)^0,c
 27048  005E88  6A26               	clrf	(??_ControlCurrent+3)^0,c
 27049  005E8A  5023               	movf	??_ControlCurrent^0,w,c
 27050  005E8C  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 27051  005E8E  5024               	movf	(??_ControlCurrent+1)^0,w,c
 27052  005E90  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 27053  005E92  5025               	movf	(??_ControlCurrent+2)^0,w,c
 27054  005E94  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 27055  005E96  5026               	movf	(??_ControlCurrent+3)^0,w,c
 27056  005E98  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 27057  005E9A  B0D8               	btfsc	status,0,c
 27058  005E9C  D03E               	goto	l22560
 27059                           
 27060                           ; BSR set to: 1
 27061  005E9E  BFB7               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27062  005EA0  D005               	goto	u27270
 27063  005EA2  51B7               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27064  005EA4  E13A               	bnz	l22560
 27065  005EA6  05B6               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27066  005EA8  B0D8               	btfsc	status,0,c
 27067  005EAA  D037               	goto	l22560
 27068  005EAC                     u27270:
 27069                           
 27070                           ; BSR set to: 1
 27071  005EAC  0100               	movlb	0	; () banked
 27072  005EAE  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 27073  005EB0  B4D8               	btfsc	status,2,c
 27074  005EB2  D033               	goto	l22560
 27075                           
 27076                           ; BSR set to: 0
 27077  005EB4  0101               	movlb	1	; () banked
 27078  005EB6  BFDF               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27079  005EB8  D005               	goto	u27290
 27080  005EBA  51DF               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27081  005EBC  E12E               	bnz	l22560
 27082  005EBE  05DE               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27083  005EC0  B0D8               	btfsc	status,0,c
 27084  005EC2  D02B               	goto	l22560
 27085  005EC4                     u27290:
 27086                           
 27087                           ; BSR set to: 1
 27088                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 27089  005EC4  0100               	movlb	0	; () banked
 27090  005EC6  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 27091  005EC8  B4D8               	btfsc	status,2,c
 27092  005ECA  D00B               	goto	l22546
 27093                           
 27094                           ; BSR set to: 0
 27095                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 27096  005ECC  0101               	movlb	1	; () banked
 27097  005ECE  518B               	movf	_erroranterior& (0+255),w,b	;volatile
 27098  005ED0  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 27099  005ED2  518C               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 27100  005ED4  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 27101  005ED6  B0D8               	btfsc	status,0,c
 27102  005ED8  D004               	goto	l22546
 27103                           
 27104                           ; BSR set to: 1
 27105                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 27106  005EDA  0E00               	movlw	0
 27107  005EDC  0100               	movlb	0	; () banked
 27108  005EDE  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27109                           
 27110                           ;controlCurrent_MC50.c: 384:                  }
 27111  005EE0  D002               	goto	l22548
 27112  005EE2                     l22546:
 27113                           
 27114                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 27115  005EE2  0100               	movlb	0	; () banked
 27116  005EE4  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 27117  005EE6                     l22548:
 27118                           
 27119                           ; BSR set to: 0
 27120                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 27121  005EE6  C12E  F18B         	movff	_var_sys+46,_erroranterior	;volatile
 27122  005EEA  C12F  F18C         	movff	_var_sys+47,_erroranterior+1	;volatile
 27123                           
 27124                           ; BSR set to: 0
 27125                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 27126                           
 27127                           ;controlCurrent_MC50.c: 390:              }
 27128  005EEE  0101               	movlb	1	; () banked
 27129  005EF0  BFCB               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 27130  005EF2  D005               	goto	u27320
 27131  005EF4  51CB               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 27132  005EF6  E14F               	bnz	l1405
 27133  005EF8  05CA               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 27134  005EFA  B0D8               	btfsc	status,0,c
 27135  005EFC  0012               	return	
 27136  005EFE                     u27320:
 27137                           
 27138                           ; BSR set to: 1
 27139  005EFE  0E01               	movlw	1
 27140  005F00  0100               	movlb	0	; () banked
 27141  005F02  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 27142  005F04  0012               	return	
 27143                           
 27144                           ; BSR set to: 0
 27145                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 27146  005F06  0E00               	movlw	0
 27147  005F08  0101               	movlb	1	; () banked
 27148  005F0A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27149                           
 27150                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 27151  005F0C  0E00               	movlw	0
 27152  005F0E  6FC7               	movwf	(_ts_system+43)& (0+255),b	;volatile
 27153  005F10  0EC8               	movlw	200
 27154  005F12  6FC6               	movwf	(_ts_system+42)& (0+255),b	;volatile
 27155                           
 27156                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 27157  005F14  0E01               	movlw	1
 27158  005F16  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27159  005F18  0012               	return	
 27160  005F1A                     l22560:
 27161                           
 27162                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 27163  005F1A  0E00               	movlw	0
 27164  005F1C  0100               	movlb	0	; () banked
 27165  005F1E  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27166                           
 27167                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 27168  005F20  0E00               	movlw	0
 27169  005F22  0101               	movlb	1	; () banked
 27170  005F24  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27171                           
 27172                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 27173  005F26  0E00               	movlw	0
 27174  005F28  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27175                           
 27176                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 27177  005F2A  0E00               	movlw	0
 27178  005F2C  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27179  005F2E  0012               	return	
 27180  005F30                     l22562:
 27181                           
 27182                           ; BSR set to: 1
 27183                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 27184  005F30  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 27185  005F32  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 27186  005F34  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 27187  005F36  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 27188  005F38  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 27189  005F3A  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 27190  005F3C  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 27191  005F3E  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 27192  005F40  B0D8               	btfsc	status,0,c
 27193  005F42  D7EB               	goto	l22560
 27194                           
 27195                           ; BSR set to: 1
 27196  005F44  BFB7               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27197  005F46  D005               	goto	u27350
 27198  005F48  51B7               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27199  005F4A  E1E7               	bnz	l22560
 27200  005F4C  05B6               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27201  005F4E  B0D8               	btfsc	status,0,c
 27202  005F50  D7E4               	goto	l22560
 27203  005F52                     u27350:
 27204                           
 27205                           ; BSR set to: 1
 27206  005F52  BFD5               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 27207  005F54  D005               	goto	u27360
 27208  005F56  51D5               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 27209  005F58  E1E0               	bnz	l22560
 27210  005F5A  05D4               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 27211  005F5C  B0D8               	btfsc	status,0,c
 27212  005F5E  D7DD               	goto	l22560
 27213  005F60                     u27360:
 27214                           
 27215                           ; BSR set to: 1
 27216  005F60  0100               	movlb	0	; () banked
 27217  005F62  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 27218  005F64  B4D8               	btfsc	status,2,c
 27219  005F66  D7D9               	goto	l22560
 27220                           
 27221                           ; BSR set to: 0
 27222                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 27223  005F68  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 27224                           
 27225                           ; BSR set to: 0
 27226                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 27227  005F6A  0101               	movlb	1	; () banked
 27228  005F6C  BFCB               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 27229  005F6E  D005               	goto	u27380
 27230  005F70  51CB               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 27231  005F72  E111               	bnz	l1405
 27232  005F74  05CA               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 27233  005F76  B0D8               	btfsc	status,0,c
 27234  005F78  0012               	return	
 27235  005F7A                     u27380:
 27236                           
 27237                           ; BSR set to: 1
 27238  005F7A  0E02               	movlw	2
 27239  005F7C  0100               	movlb	0	; () banked
 27240  005F7E  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 27241  005F80  0012               	return	
 27242                           
 27243                           ; BSR set to: 0
 27244                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 27245  005F82  0E00               	movlw	0
 27246  005F84  0101               	movlb	1	; () banked
 27247  005F86  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27248                           
 27249                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 27250  005F88  0E00               	movlw	0
 27251  005F8A  6FC7               	movwf	(_ts_system+43)& (0+255),b	;volatile
 27252  005F8C  0EC8               	movlw	200
 27253  005F8E  6FC6               	movwf	(_ts_system+42)& (0+255),b	;volatile
 27254                           
 27255                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 27256  005F90  0E01               	movlw	1
 27257  005F92  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27258  005F94  0012               	return	
 27259  005F96                     l1405:
 27260  005F96  0012               	return		;funcret
 27261  005F98                     __end_of_ControlCurrent:
 27262                           	callstack 0
 27263                           
 27264 ;; *************** function _refreshCurrent *****************
 27265 ;; Defined at:
 27266 ;;		line 233 in file "controlCurrent_MC50.c"
 27267 ;; Parameters:    Size  Location     Type
 27268 ;;		None
 27269 ;; Auto vars:     Size  Location     Type
 27270 ;;		None
 27271 ;; Return value:  Size  Location     Type
 27272 ;;                  1    wreg      void 
 27273 ;; Registers used:
 27274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27275 ;; Tracked objects:
 27276 ;;		On entry : 3E/1
 27277 ;;		On exit  : 3F/0
 27278 ;;		Unchanged: 0/0
 27279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27284 ;;Total ram usage:        0 bytes
 27285 ;; Hardware stack levels used: 1
 27286 ;; Hardware stack levels required when called: 5
 27287 ;; This function calls:
 27288 ;;		_saveEnergyADCHist
 27289 ;;		_sumEnergyADC
 27290 ;;		_sumHIST
 27291 ;; This function is called by:
 27292 ;;		_ControlCurrent
 27293 ;; This function uses a non-reentrant model
 27294 ;;
 27295                           
 27296                           	psect	text117
 27297  00873E                     __ptext117:
 27298                           	callstack 0
 27299  00873E                     _refreshCurrent:
 27300                           	callstack 24
 27301                           
 27302                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 27303                           
 27304                           ;incstack = 0
 27305  00873E  0100               	movlb	0	; () banked
 27306  008740  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27307  008742  A4D8               	btfss	status,2,c
 27308  008744  D008               	goto	l14412
 27309                           
 27310                           ; BSR set to: 0
 27311  008746  0101               	movlb	1	; () banked
 27312  008748  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27313  00874A  D005               	goto	l14412
 27314  00874C  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27315  00874E  E109               	bnz	l1372
 27316  008750  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27317  008752  B0D8               	btfsc	status,0,c
 27318  008754  D006               	goto	l1372
 27319  008756                     l14412:
 27320                           
 27321                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 27322  008756  EC67  F03B         	call	_sumEnergyADC	;wreg free
 27323  00875A  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 27324  00875E  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 27325  008762                     l1372:
 27326                           
 27327                           ; BSR set to: 1
 27328                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 27329  008762  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 27330  008766  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 27331  00876A  ECAB  F046         	call	_saveEnergyADCHist	;wreg free
 27332                           
 27333                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 27334  00876E  EC57  F035         	call	_sumHIST	;wreg free
 27335  008772  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 27336  008776  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 27337  00877A  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 27338  00877E  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 27339                           
 27340                           ; BSR set to: 0
 27341  008782  0012               	return		;funcret
 27342  008784                     __end_of_refreshCurrent:
 27343                           	callstack 0
 27344                           
 27345 ;; *************** function _sumHIST *****************
 27346 ;; Defined at:
 27347 ;;		line 199 in file "controlCurrent_MC50.c"
 27348 ;; Parameters:    Size  Location     Type
 27349 ;;		None
 27350 ;; Auto vars:     Size  Location     Type
 27351 ;;  sumH            4   27[COMRAM] unsigned long 
 27352 ;;  min             2   25[COMRAM] unsigned int 
 27353 ;;  max             2   23[COMRAM] unsigned int 
 27354 ;;  i               1   31[COMRAM] unsigned char 
 27355 ;; Return value:  Size  Location     Type
 27356 ;;                  4   15[COMRAM] unsigned long 
 27357 ;; Registers used:
 27358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27359 ;; Tracked objects:
 27360 ;;		On entry : 3F/0
 27361 ;;		On exit  : 3F/0
 27362 ;;		Unchanged: 3F/0
 27363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27364 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27365 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27366 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27367 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27368 ;;Total ram usage:       17 bytes
 27369 ;; Hardware stack levels used: 1
 27370 ;; Hardware stack levels required when called: 4
 27371 ;; This function calls:
 27372 ;;		Nothing
 27373 ;; This function is called by:
 27374 ;;		_refreshCurrent
 27375 ;; This function uses a non-reentrant model
 27376 ;;
 27377                           
 27378                           	psect	text118
 27379  006AAE                     __ptext118:
 27380                           	callstack 0
 27381  006AAE                     _sumHIST:
 27382                           	callstack 24
 27383                           
 27384                           ; BSR set to: 0
 27385                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 27386                           
 27387                           ; BSR set to: 0
 27388                           ;incstack = 0
 27389  006AAE  0E00               	movlw	0
 27390  006AB0  6E1C               	movwf	sumHIST@sumH^0,c
 27391  006AB2  0E00               	movlw	0
 27392  006AB4  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27393  006AB6  0E00               	movlw	0
 27394  006AB8  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27395  006ABA  0E00               	movlw	0
 27396  006ABC  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27397                           
 27398                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 27399  006ABE  0E00               	movlw	0
 27400  006AC0  6E19               	movwf	(sumHIST@max+1)^0,c
 27401  006AC2  0E00               	movlw	0
 27402  006AC4  6E18               	movwf	sumHIST@max^0,c
 27403                           
 27404                           ; BSR set to: 0
 27405                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 27406  006AC6  681A               	setf	sumHIST@min^0,c
 27407  006AC8  681B               	setf	(sumHIST@min+1)^0,c
 27408                           
 27409                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 27410  006ACA  0E00               	movlw	0
 27411  006ACC  6E20               	movwf	sumHIST@i^0,c
 27412  006ACE                     l12582:
 27413                           
 27414                           ; BSR set to: 0
 27415                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 27416  006ACE  5020               	movf	sumHIST@i^0,w,c
 27417  006AD0  0D02               	mullw	2
 27418  006AD2  0E60               	movlw	low _SumEnergyADCHist_array
 27419  006AD4  24F3               	addwf	243,w,c
 27420  006AD6  6ED9               	movwf	fsr2l,c
 27421  006AD8  0E02               	movlw	high _SumEnergyADCHist_array
 27422  006ADA  20F4               	addwfc	prodh,w,c
 27423  006ADC  6EDA               	movwf	fsr2h,c
 27424  006ADE  CFDE F014          	movff	postinc2,??_sumHIST
 27425  006AE2  CFDD F015          	movff	postdec2,??_sumHIST+1
 27426  006AE6  5014               	movf	??_sumHIST^0,w,c
 27427  006AE8  241C               	addwf	sumHIST@sumH^0,w,c
 27428  006AEA  6E1C               	movwf	sumHIST@sumH^0,c
 27429  006AEC  5015               	movf	(??_sumHIST+1)^0,w,c
 27430  006AEE  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 27431  006AF0  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27432  006AF2  0E00               	movlw	0
 27433  006AF4  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 27434  006AF6  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27435  006AF8  0E00               	movlw	0
 27436  006AFA  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 27437  006AFC  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27438                           
 27439                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 27440  006AFE  5020               	movf	sumHIST@i^0,w,c
 27441  006B00  0D02               	mullw	2
 27442  006B02  0E60               	movlw	low _SumEnergyADCHist_array
 27443  006B04  24F3               	addwf	243,w,c
 27444  006B06  6ED9               	movwf	fsr2l,c
 27445  006B08  0E02               	movlw	high _SumEnergyADCHist_array
 27446  006B0A  20F4               	addwfc	prodh,w,c
 27447  006B0C  6EDA               	movwf	fsr2h,c
 27448  006B0E  50DE               	movf	postinc2,w,c
 27449  006B10  5C18               	subwf	sumHIST@max^0,w,c
 27450  006B12  50DE               	movf	postinc2,w,c
 27451  006B14  5819               	subwfb	(sumHIST@max+1)^0,w,c
 27452  006B16  B0D8               	btfsc	status,0,c
 27453  006B18  D00C               	goto	l1366
 27454                           
 27455                           ; BSR set to: 0
 27456                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 27457  006B1A  5020               	movf	sumHIST@i^0,w,c
 27458  006B1C  0D02               	mullw	2
 27459  006B1E  0E60               	movlw	low _SumEnergyADCHist_array
 27460  006B20  24F3               	addwf	243,w,c
 27461  006B22  6ED9               	movwf	fsr2l,c
 27462  006B24  0E02               	movlw	high _SumEnergyADCHist_array
 27463  006B26  20F4               	addwfc	prodh,w,c
 27464  006B28  6EDA               	movwf	fsr2h,c
 27465  006B2A  CFDE F018          	movff	postinc2,sumHIST@max
 27466  006B2E  CFDD F019          	movff	postdec2,sumHIST@max+1
 27467  006B32                     l1366:
 27468                           
 27469                           ; BSR set to: 0
 27470                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 27471  006B32  5020               	movf	sumHIST@i^0,w,c
 27472  006B34  0D02               	mullw	2
 27473  006B36  0E60               	movlw	low _SumEnergyADCHist_array
 27474  006B38  24F3               	addwf	243,w,c
 27475  006B3A  6ED9               	movwf	fsr2l,c
 27476  006B3C  0E02               	movlw	high _SumEnergyADCHist_array
 27477  006B3E  20F4               	addwfc	prodh,w,c
 27478  006B40  6EDA               	movwf	fsr2h,c
 27479  006B42  501A               	movf	sumHIST@min^0,w,c
 27480  006B44  5CDE               	subwf	postinc2,w,c
 27481  006B46  501B               	movf	(sumHIST@min+1)^0,w,c
 27482  006B48  58DE               	subwfb	postinc2,w,c
 27483  006B4A  B0D8               	btfsc	status,0,c
 27484  006B4C  D00C               	goto	l12588
 27485                           
 27486                           ; BSR set to: 0
 27487                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 27488  006B4E  5020               	movf	sumHIST@i^0,w,c
 27489  006B50  0D02               	mullw	2
 27490  006B52  0E60               	movlw	low _SumEnergyADCHist_array
 27491  006B54  24F3               	addwf	243,w,c
 27492  006B56  6ED9               	movwf	fsr2l,c
 27493  006B58  0E02               	movlw	high _SumEnergyADCHist_array
 27494  006B5A  20F4               	addwfc	prodh,w,c
 27495  006B5C  6EDA               	movwf	fsr2h,c
 27496  006B5E  CFDE F01A          	movff	postinc2,sumHIST@min
 27497  006B62  CFDD F01B          	movff	postdec2,sumHIST@min+1
 27498  006B66                     l12588:
 27499                           
 27500                           ; BSR set to: 0
 27501                           ;controlCurrent_MC50.c: 222:     }
 27502  006B66  2A20               	incf	sumHIST@i^0,f,c
 27503                           
 27504                           ; BSR set to: 0
 27505  006B68  0E09               	movlw	9
 27506  006B6A  6420               	cpfsgt	sumHIST@i^0,c
 27507  006B6C  D7B0               	goto	l12582
 27508                           
 27509                           ; BSR set to: 0
 27510                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 27511  006B6E  501A               	movf	sumHIST@min^0,w,c
 27512  006B70  2418               	addwf	sumHIST@max^0,w,c
 27513  006B72  6E14               	movwf	??_sumHIST^0,c
 27514  006B74  501B               	movf	(sumHIST@min+1)^0,w,c
 27515  006B76  2019               	addwfc	(sumHIST@max+1)^0,w,c
 27516  006B78  6E15               	movwf	(??_sumHIST+1)^0,c
 27517  006B7A  6A16               	clrf	(??_sumHIST+2)^0,c
 27518  006B7C  6A17               	clrf	(??_sumHIST+3)^0,c
 27519  006B7E  5014               	movf	??_sumHIST^0,w,c
 27520  006B80  5C1C               	subwf	sumHIST@sumH^0,w,c
 27521  006B82  6E1C               	movwf	sumHIST@sumH^0,c
 27522  006B84  5015               	movf	(??_sumHIST+1)^0,w,c
 27523  006B86  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 27524  006B88  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27525  006B8A  5016               	movf	(??_sumHIST+2)^0,w,c
 27526  006B8C  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 27527  006B8E  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27528  006B90  5017               	movf	(??_sumHIST+3)^0,w,c
 27529  006B92  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 27530  006B94  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27531                           
 27532                           ; BSR set to: 0
 27533                           ;controlCurrent_MC50.c: 226:     return sumH;
 27534  006B96  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 27535  006B9A  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 27536  006B9E  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 27537  006BA2  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 27538                           
 27539                           ; BSR set to: 0
 27540  006BA6  0012               	return		;funcret
 27541  006BA8                     __end_of_sumHIST:
 27542                           	callstack 0
 27543                           
 27544 ;; *************** function _sumEnergyADC *****************
 27545 ;; Defined at:
 27546 ;;		line 59 in file "controlCurrent_MC50.c"
 27547 ;; Parameters:    Size  Location     Type
 27548 ;;		None
 27549 ;; Auto vars:     Size  Location     Type
 27550 ;;  auxValue        2   21[COMRAM] unsigned int 
 27551 ;;  sumE            2   19[COMRAM] unsigned int 
 27552 ;;  i               1   23[COMRAM] unsigned char 
 27553 ;; Return value:  Size  Location     Type
 27554 ;;                  2   15[COMRAM] unsigned int 
 27555 ;; Registers used:
 27556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27557 ;; Tracked objects:
 27558 ;;		On entry : 3E/0
 27559 ;;		On exit  : 3F/1
 27560 ;;		Unchanged: 0/0
 27561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27563 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27564 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27565 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27566 ;;Total ram usage:        9 bytes
 27567 ;; Hardware stack levels used: 1
 27568 ;; Hardware stack levels required when called: 4
 27569 ;; This function calls:
 27570 ;;		Nothing
 27571 ;; This function is called by:
 27572 ;;		_refreshCurrent
 27573 ;; This function uses a non-reentrant model
 27574 ;;
 27575                           
 27576                           	psect	text119
 27577  0076CE                     __ptext119:
 27578                           	callstack 0
 27579  0076CE                     _sumEnergyADC:
 27580                           	callstack 24
 27581                           
 27582                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 27583                           
 27584                           ; BSR set to: 0
 27585                           ;incstack = 0
 27586  0076CE  0E00               	movlw	0
 27587  0076D0  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 27588  0076D2  0E00               	movlw	0
 27589  0076D4  6E14               	movwf	sumEnergyADC@sumE^0,c
 27590                           
 27591                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 27592  0076D6  0E00               	movlw	0
 27593  0076D8  6E18               	movwf	sumEnergyADC@i^0,c
 27594  0076DA                     l12554:
 27595                           
 27596                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 27597  0076DA  5018               	movf	sumEnergyADC@i^0,w,c
 27598  0076DC  0D02               	mullw	2
 27599  0076DE  0E00               	movlw	low _ADC_array
 27600  0076E0  24F3               	addwf	243,w,c
 27601  0076E2  6ED9               	movwf	fsr2l,c
 27602  0076E4  0E02               	movlw	high _ADC_array
 27603  0076E6  20F4               	addwfc	prodh,w,c
 27604  0076E8  6EDA               	movwf	fsr2h,c
 27605  0076EA  50DE               	movf	postinc2,w,c
 27606  0076EC  0101               	movlb	1	; () banked
 27607  0076EE  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 27608  0076F0  50DE               	movf	postinc2,w,c
 27609  0076F2  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 27610  0076F4  B0D8               	btfsc	status,0,c
 27611  0076F6  D012               	goto	l12558
 27612                           
 27613                           ; BSR set to: 1
 27614                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 27615  0076F8  5018               	movf	sumEnergyADC@i^0,w,c
 27616  0076FA  0D02               	mullw	2
 27617  0076FC  0E00               	movlw	low _ADC_array
 27618  0076FE  24F3               	addwf	243,w,c
 27619  007700  6ED9               	movwf	fsr2l,c
 27620  007702  0E02               	movlw	high _ADC_array
 27621  007704  20F4               	addwfc	prodh,w,c
 27622  007706  6EDA               	movwf	fsr2h,c
 27623  007708  CFDE F012          	movff	postinc2,??_sumEnergyADC
 27624  00770C  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 27625  007710  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 27626  007712  5C12               	subwf	??_sumEnergyADC^0,w,c
 27627  007714  6E16               	movwf	sumEnergyADC@auxValue^0,c
 27628  007716  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 27629  007718  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 27630  00771A  D011               	goto	L103
 27631  00771C                     l12558:
 27632                           
 27633                           ; BSR set to: 1
 27634                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 27635  00771C  5018               	movf	sumEnergyADC@i^0,w,c
 27636  00771E  0D02               	mullw	2
 27637  007720  0E00               	movlw	low _ADC_array
 27638  007722  24F3               	addwf	243,w,c
 27639  007724  6ED9               	movwf	fsr2l,c
 27640  007726  0E02               	movlw	high _ADC_array
 27641  007728  20F4               	addwfc	prodh,w,c
 27642  00772A  6EDA               	movwf	fsr2h,c
 27643  00772C  CFDE F012          	movff	postinc2,??_sumEnergyADC
 27644  007730  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 27645  007734  5012               	movf	??_sumEnergyADC^0,w,c
 27646  007736  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 27647  007738  6E16               	movwf	sumEnergyADC@auxValue^0,c
 27648  00773A  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 27649  00773C  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 27650  00773E                     L103:
 27651  00773E  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 27652                           
 27653                           ; BSR set to: 1
 27654                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 27655  007740  5016               	movf	sumEnergyADC@auxValue^0,w,c
 27656  007742  2614               	addwf	sumEnergyADC@sumE^0,f,c
 27657  007744  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 27658  007746  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 27659                           
 27660                           ; BSR set to: 1
 27661                           ;controlCurrent_MC50.c: 94:     }
 27662  007748  2A18               	incf	sumEnergyADC@i^0,f,c
 27663                           
 27664                           ; BSR set to: 1
 27665  00774A  0E1D               	movlw	29
 27666  00774C  6418               	cpfsgt	sumEnergyADC@i^0,c
 27667  00774E  D7C5               	goto	l12554
 27668                           
 27669                           ; BSR set to: 1
 27670                           ;controlCurrent_MC50.c: 96:     return sumE;
 27671  007750  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 27672  007754  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 27673                           
 27674                           ; BSR set to: 1
 27675  007758  0012               	return		;funcret
 27676  00775A                     __end_of_sumEnergyADC:
 27677                           	callstack 0
 27678                           
 27679 ;; *************** function _saveEnergyADCHist *****************
 27680 ;; Defined at:
 27681 ;;		line 182 in file "controlCurrent_MC50.c"
 27682 ;; Parameters:    Size  Location     Type
 27683 ;;  valueToSave     2   15[COMRAM] unsigned int 
 27684 ;; Auto vars:     Size  Location     Type
 27685 ;;		None
 27686 ;; Return value:  Size  Location     Type
 27687 ;;                  1    wreg      void 
 27688 ;; Registers used:
 27689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27690 ;; Tracked objects:
 27691 ;;		On entry : 3F/1
 27692 ;;		On exit  : 3F/0
 27693 ;;		Unchanged: 0/0
 27694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27698 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27699 ;;Total ram usage:        2 bytes
 27700 ;; Hardware stack levels used: 1
 27701 ;; Hardware stack levels required when called: 4
 27702 ;; This function calls:
 27703 ;;		Nothing
 27704 ;; This function is called by:
 27705 ;;		_refreshCurrent
 27706 ;; This function uses a non-reentrant model
 27707 ;;
 27708                           
 27709                           	psect	text120
 27710  008D56                     __ptext120:
 27711                           	callstack 0
 27712  008D56                     _saveEnergyADCHist:
 27713                           	callstack 24
 27714                           
 27715                           ; BSR set to: 1
 27716                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 27717                           
 27718                           ; BSR set to: 1
 27719                           ;incstack = 0
 27720  008D56  0E09               	movlw	9
 27721  008D58  0100               	movlb	0	; () banked
 27722  008D5A  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 27723  008D5C  D002               	goto	l12570
 27724                           
 27725                           ; BSR set to: 0
 27726                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 27727  008D5E  0E00               	movlw	0
 27728  008D60  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 27729  008D62                     l12570:
 27730                           
 27731                           ; BSR set to: 0
 27732                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 27733  008D62  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 27734  008D64  0D02               	mullw	2
 27735  008D66  0E60               	movlw	low _SumEnergyADCHist_array
 27736  008D68  24F3               	addwf	243,w,c
 27737  008D6A  6ED9               	movwf	fsr2l,c
 27738  008D6C  0E02               	movlw	high _SumEnergyADCHist_array
 27739  008D6E  20F4               	addwfc	prodh,w,c
 27740  008D70  6EDA               	movwf	fsr2h,c
 27741  008D72  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 27742  008D76  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 27743                           
 27744                           ; BSR set to: 0
 27745                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 27746  008D7A  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 27747                           
 27748                           ; BSR set to: 0
 27749  008D7C  0012               	return		;funcret
 27750  008D7E                     __end_of_saveEnergyADCHist:
 27751                           	callstack 0
 27752                           
 27753 ;; *************** function _refreshADCZeroOffset *****************
 27754 ;; Defined at:
 27755 ;;		line 103 in file "controlCurrent_MC50.c"
 27756 ;; Parameters:    Size  Location     Type
 27757 ;;		None
 27758 ;; Auto vars:     Size  Location     Type
 27759 ;;  media           2   23[COMRAM] unsigned int 
 27760 ;;  i               1   22[COMRAM] unsigned char 
 27761 ;; Return value:  Size  Location     Type
 27762 ;;                  1    wreg      void 
 27763 ;; Registers used:
 27764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27765 ;; Tracked objects:
 27766 ;;		On entry : 3F/0
 27767 ;;		On exit  : 3E/0
 27768 ;;		Unchanged: 0/0
 27769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27771 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27773 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27774 ;;Total ram usage:        3 bytes
 27775 ;; Hardware stack levels used: 1
 27776 ;; Hardware stack levels required when called: 5
 27777 ;; This function calls:
 27778 ;;		___lwdiv
 27779 ;; This function is called by:
 27780 ;;		_ControlCurrent
 27781 ;; This function uses a non-reentrant model
 27782 ;;
 27783                           
 27784                           	psect	text121
 27785  0068B4                     __ptext121:
 27786                           	callstack 0
 27787  0068B4                     _refreshADCZeroOffset:
 27788                           	callstack 24
 27789                           
 27790                           ; BSR set to: 0
 27791                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 27792                           
 27793                           ; BSR set to: 0
 27794                           ;incstack = 0
 27795  0068B4  0E00               	movlw	0
 27796  0068B6  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27797  0068B8  0E00               	movlw	0
 27798  0068BA  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27799                           
 27800                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 27801  0068BC  0101               	movlb	1	; () banked
 27802  0068BE  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27803  0068C0  A4D8               	btfss	status,2,c
 27804  0068C2  0012               	return	
 27805                           
 27806                           ; BSR set to: 1
 27807                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 27808  0068C4  BFDB               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 27809  0068C6  D005               	goto	u14630
 27810  0068C8  51DB               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 27811  0068CA  E172               	bnz	l1357
 27812  0068CC  05DA               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 27813  0068CE  B0D8               	btfsc	status,0,c
 27814  0068D0  0012               	return	
 27815  0068D2                     u14630:
 27816                           
 27817                           ; BSR set to: 1
 27818                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 27819  0068D2  0E00               	movlw	0
 27820  0068D4  6FDB               	movwf	(_ts_system+63)& (0+255),b	;volatile
 27821  0068D6  0E14               	movlw	20
 27822  0068D8  6FDA               	movwf	(_ts_system+62)& (0+255),b	;volatile
 27823                           
 27824                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 27825  0068DA  0E00               	movlw	0
 27826  0068DC  6E17               	movwf	refreshADCZeroOffset@i^0,c
 27827  0068DE                     l14364:
 27828                           
 27829                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 27830  0068DE  5017               	movf	refreshADCZeroOffset@i^0,w,c
 27831  0068E0  0D02               	mullw	2
 27832  0068E2  0E00               	movlw	low _ADC_array
 27833  0068E4  24F3               	addwf	243,w,c
 27834  0068E6  6ED9               	movwf	fsr2l,c
 27835  0068E8  0E02               	movlw	high _ADC_array
 27836  0068EA  20F4               	addwfc	prodh,w,c
 27837  0068EC  6EDA               	movwf	fsr2h,c
 27838  0068EE  50DE               	movf	postinc2,w,c
 27839  0068F0  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 27840  0068F2  50DD               	movf	postdec2,w,c
 27841  0068F4  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 27842                           
 27843                           ;controlCurrent_MC50.c: 128:             }
 27844  0068F6  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 27845  0068F8  0E1D               	movlw	29
 27846  0068FA  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 27847  0068FC  D7F0               	goto	l14364
 27848                           
 27849                           ;controlCurrent_MC50.c: 130:             media = media/30;
 27850  0068FE  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 27851  006902  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 27852  006906  0E00               	movlw	0
 27853  006908  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 27854  00690A  0E1E               	movlw	30
 27855  00690C  6E12               	movwf	___lwdiv@divisor^0,c
 27856  00690E  EC8F  F042         	call	___lwdiv	;wreg free
 27857  006912  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 27858  006916  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 27859                           
 27860                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 27861  00691A  0EEB               	movlw	235
 27862  00691C  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 27863  00691E  0E01               	movlw	1
 27864  006920  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 27865  006922  A0D8               	btfss	status,0,c
 27866  006924  D006               	goto	l14378
 27867  006926  0E12               	movlw	18
 27868  006928  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 27869  00692A  0E02               	movlw	2
 27870  00692C  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 27871  00692E  A0D8               	btfss	status,0,c
 27872  006930  D004               	goto	l14380
 27873  006932                     l14378:
 27874                           
 27875                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 27876  006932  0E01               	movlw	1
 27877  006934  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27878  006936  0EFE               	movlw	254
 27879  006938  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27880  00693A                     l14380:
 27881                           
 27882                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 27883  00693A  0E1D               	movlw	29
 27884  00693C  0100               	movlb	0	; () banked
 27885  00693E  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 27886  006940  D002               	goto	l14384
 27887                           
 27888                           ; BSR set to: 0
 27889                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 27890  006942  0E00               	movlw	0
 27891  006944  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 27892  006946                     l14384:
 27893                           
 27894                           ; BSR set to: 0
 27895                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 27896  006946  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 27897  006948  0D02               	mullw	2
 27898  00694A  0E96               	movlw	low _ADC_zero_array
 27899  00694C  24F3               	addwf	243,w,c
 27900  00694E  6ED9               	movwf	fsr2l,c
 27901  006950  0E03               	movlw	high _ADC_zero_array
 27902  006952  20F4               	addwfc	prodh,w,c
 27903  006954  6EDA               	movwf	fsr2h,c
 27904  006956  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 27905  00695A  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 27906                           
 27907                           ; BSR set to: 0
 27908                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 27909  00695E  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 27910                           
 27911                           ; BSR set to: 0
 27912                           ;controlCurrent_MC50.c: 150:             media = 0;
 27913  006960  0E00               	movlw	0
 27914  006962  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27915  006964  0E00               	movlw	0
 27916  006966  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27917                           
 27918                           ; BSR set to: 0
 27919                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 27920  006968  0E00               	movlw	0
 27921  00696A  6E17               	movwf	refreshADCZeroOffset@i^0,c
 27922  00696C                     l14396:
 27923                           
 27924                           ; BSR set to: 0
 27925                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 27926  00696C  5017               	movf	refreshADCZeroOffset@i^0,w,c
 27927  00696E  0D02               	mullw	2
 27928  006970  0E96               	movlw	low _ADC_zero_array
 27929  006972  24F3               	addwf	243,w,c
 27930  006974  6ED9               	movwf	fsr2l,c
 27931  006976  0E03               	movlw	high _ADC_zero_array
 27932  006978  20F4               	addwfc	prodh,w,c
 27933  00697A  6EDA               	movwf	fsr2h,c
 27934  00697C  50DE               	movf	postinc2,w,c
 27935  00697E  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 27936  006980  50DD               	movf	postdec2,w,c
 27937  006982  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 27938                           
 27939                           ; BSR set to: 0
 27940                           ;controlCurrent_MC50.c: 159:             }
 27941  006984  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 27942                           
 27943                           ; BSR set to: 0
 27944  006986  0E1D               	movlw	29
 27945  006988  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 27946  00698A  D7F0               	goto	l14396
 27947                           
 27948                           ; BSR set to: 0
 27949                           ;controlCurrent_MC50.c: 160:             media = media/30;
 27950  00698C  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 27951  006990  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 27952  006994  0E00               	movlw	0
 27953  006996  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 27954  006998  0E1E               	movlw	30
 27955  00699A  6E12               	movwf	___lwdiv@divisor^0,c
 27956  00699C  EC8F  F042         	call	___lwdiv	;wreg free
 27957  0069A0  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 27958  0069A4  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 27959                           
 27960                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 27961  0069A8  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 27962  0069AC  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 27963  0069B0                     l1357:
 27964  0069B0  0012               	return		;funcret
 27965  0069B2                     __end_of_refreshADCZeroOffset:
 27966                           	callstack 0
 27967                           
 27968 ;; *************** function ___lwdiv *****************
 27969 ;; Defined at:
 27970 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 27971 ;; Parameters:    Size  Location     Type
 27972 ;;  dividend        2   15[COMRAM] unsigned int 
 27973 ;;  divisor         2   17[COMRAM] unsigned int 
 27974 ;; Auto vars:     Size  Location     Type
 27975 ;;  quotient        2   19[COMRAM] unsigned int 
 27976 ;;  counter         1   21[COMRAM] unsigned char 
 27977 ;; Return value:  Size  Location     Type
 27978 ;;                  2   15[COMRAM] unsigned int 
 27979 ;; Registers used:
 27980 ;;		wreg, status,2, status,0
 27981 ;; Tracked objects:
 27982 ;;		On entry : 3E/1
 27983 ;;		On exit  : 3E/0
 27984 ;;		Unchanged: 3E/0
 27985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27986 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27987 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27989 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27990 ;;Total ram usage:        7 bytes
 27991 ;; Hardware stack levels used: 1
 27992 ;; Hardware stack levels required when called: 4
 27993 ;; This function calls:
 27994 ;;		Nothing
 27995 ;; This function is called by:
 27996 ;;		_refreshADCZeroOffset
 27997 ;;		_sm_execute_menuConfiguration
 27998 ;; This function uses a non-reentrant model
 27999 ;;
 28000                           
 28001                           	psect	text122
 28002  00851E                     __ptext122:
 28003                           	callstack 0
 28004  00851E                     ___lwdiv:
 28005                           	callstack 24
 28006                           
 28007                           ;incstack = 0
 28008  00851E  0E00               	movlw	0
 28009  008520  6E15               	movwf	(___lwdiv@quotient+1)^0,c
 28010  008522  0E00               	movlw	0
 28011  008524  6E14               	movwf	___lwdiv@quotient^0,c
 28012  008526  5012               	movf	___lwdiv@divisor^0,w,c
 28013  008528  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 28014  00852A  B4D8               	btfsc	status,2,c
 28015  00852C  D01C               	goto	l4132
 28016  00852E  0E01               	movlw	1
 28017  008530  6E16               	movwf	___lwdiv@counter^0,c
 28018  008532  D004               	goto	l13844
 28019  008534                     l13842:
 28020  008534  90D8               	bcf	status,0,c
 28021  008536  3612               	rlcf	___lwdiv@divisor^0,f,c
 28022  008538  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 28023  00853A  2A16               	incf	___lwdiv@counter^0,f,c
 28024  00853C                     l13844:
 28025  00853C  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 28026  00853E  D7FA               	goto	l13842
 28027  008540                     u13650:
 28028  008540  90D8               	bcf	status,0,c
 28029  008542  3614               	rlcf	___lwdiv@quotient^0,f,c
 28030  008544  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
 28031  008546  5012               	movf	___lwdiv@divisor^0,w,c
 28032  008548  5C10               	subwf	___lwdiv@dividend^0,w,c
 28033  00854A  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28034  00854C  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 28035  00854E  A0D8               	btfss	status,0,c
 28036  008550  D005               	goto	l13854
 28037  008552  5012               	movf	___lwdiv@divisor^0,w,c
 28038  008554  5E10               	subwf	___lwdiv@dividend^0,f,c
 28039  008556  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28040  008558  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 28041  00855A  8014               	bsf	___lwdiv@quotient^0,0,c
 28042  00855C                     l13854:
 28043  00855C  90D8               	bcf	status,0,c
 28044  00855E  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 28045  008560  3212               	rrcf	___lwdiv@divisor^0,f,c
 28046  008562  2E16               	decfsz	___lwdiv@counter^0,f,c
 28047  008564  D7ED               	goto	u13650
 28048  008566                     l4132:
 28049  008566  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
 28050  00856A  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 28051  00856E  0012               	return		;funcret
 28052  008570                     __end_of___lwdiv:
 28053                           	callstack 0
 28054                           
 28055 ;; *************** function _getCurrentComparator *****************
 28056 ;; Defined at:
 28057 ;;		line 264 in file "controlCurrent_MC50.c"
 28058 ;; Parameters:    Size  Location     Type
 28059 ;;		None
 28060 ;; Auto vars:     Size  Location     Type
 28061 ;;  x               1   33[COMRAM] unsigned char 
 28062 ;;  tempOffset      2   31[COMRAM] unsigned int 
 28063 ;; Return value:  Size  Location     Type
 28064 ;;                  4   21[COMRAM] unsigned long 
 28065 ;; Registers used:
 28066 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28067 ;; Tracked objects:
 28068 ;;		On entry : 3F/1
 28069 ;;		On exit  : 3F/1
 28070 ;;		Unchanged: 0/0
 28071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28072 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28073 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28074 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28075 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28076 ;;Total ram usage:       13 bytes
 28077 ;; Hardware stack levels used: 1
 28078 ;; Hardware stack levels required when called: 5
 28079 ;; This function calls:
 28080 ;;		___wmul
 28081 ;; This function is called by:
 28082 ;;		_ControlCurrent
 28083 ;; This function uses a non-reentrant model
 28084 ;;
 28085                           
 28086                           	psect	text123
 28087  00564E                     __ptext123:
 28088                           	callstack 0
 28089  00564E                     _getCurrentComparator:
 28090                           	callstack 24
 28091                           
 28092                           ; BSR set to: 1
 28093                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 28094                           
 28095                           ; BSR set to: 1
 28096                           
 28097                           ;incstack = 0
 28098  00564E  BFB3               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 28099  005650  D00A               	goto	l14420
 28100  005652  51B3               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 28101  005654  E103               	bnz	u14710
 28102  005656  05B2               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 28103  005658  A0D8               	btfss	status,0,c
 28104  00565A  D005               	goto	l14420
 28105  00565C                     u14710:
 28106                           
 28107                           ; BSR set to: 1
 28108                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 28109  00565C  0E00               	movlw	0
 28110  00565E  6FD7               	movwf	(_ts_system+59)& (0+255),b	;volatile
 28111  005660  0E14               	movlw	20
 28112  005662  6FD6               	movwf	(_ts_system+58)& (0+255),b	;volatile
 28113  005664  D007               	goto	u14720
 28114  005666                     l14420:
 28115                           
 28116                           ; BSR set to: 1
 28117  005666  BFD7               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 28118  005668  D009               	goto	l14424
 28119  00566A  51D7               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 28120  00566C  E103               	bnz	u14720
 28121  00566E  05D6               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 28122  005670  A0D8               	btfss	status,0,c
 28123  005672  D004               	goto	l14424
 28124  005674                     u14720:
 28125                           
 28126                           ; BSR set to: 1
 28127                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 28128  005674  0E04               	movlw	4
 28129  005676  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 28130  005678  0EB0               	movlw	176
 28131  00567A  D003               	goto	L104
 28132  00567C                     l14424:
 28133                           
 28134                           ; BSR set to: 1
 28135                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 28136  00567C  0E00               	movlw	0
 28137  00567E  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 28138  005680  0E00               	movlw	0
 28139  005682                     L104:
 28140  005682  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 28141                           
 28142                           ; BSR set to: 1
 28143                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 28144  005684  517B               	movf	_powerControl_st& (0+255),w,b
 28145  005686  A4D8               	btfss	status,2,c
 28146  005688  D05B               	goto	l14440
 28147                           
 28148                           ; BSR set to: 1
 28149                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 28150  00568A  0E03               	movlw	3
 28151  00568C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28152  00568E  A4D8               	btfss	status,2,c
 28153  005690  D005               	goto	l14430
 28154                           
 28155                           ; BSR set to: 1
 28156                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 28157  005692  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 28158  005696  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 28159  00569A  D004               	goto	L105
 28160  00569C                     l14430:
 28161                           
 28162                           ; BSR set to: 1
 28163                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 28164  00569C  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 28165  0056A0  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 28166  0056A4                     L105:
 28167  0056A4  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 28168  0056A6  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 28169                           
 28170                           ; BSR set to: 1
 28171                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 28172  0056A8  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28173  0056AA  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28174  0056AC  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 28175  0056AE  E104               	bnz	u14750
 28176  0056B0  0E65               	movlw	101
 28177  0056B2  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28178  0056B4  A0D8               	btfss	status,0,c
 28179  0056B6  D009               	goto	u14760
 28180  0056B8                     u14750:
 28181                           
 28182                           ; BSR set to: 1
 28183  0056B8  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28184  0056BA  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28185  0056BC  E106               	bnz	u14760
 28186  0056BE  0EC5               	movlw	197
 28187  0056C0  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28188  0056C2  0E3B               	movlw	59
 28189  0056C4  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28190  0056C6  A0D8               	btfss	status,0,c
 28191  0056C8  D004               	goto	l1383
 28192  0056CA                     u14760:
 28193                           
 28194                           ; BSR set to: 1
 28195                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 28196  0056CA  0EC4               	movlw	196
 28197  0056CC  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28198  0056CE  0E3B               	movlw	59
 28199  0056D0  D058               	goto	L107
 28200  0056D2                     l1383:
 28201                           
 28202                           ; BSR set to: 1
 28203                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 28204  0056D2  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 28205                           
 28206                           ; BSR set to: 1
 28207                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 28208  0056D6  5022               	movf	getCurrentComparator@x^0,w,c
 28209  0056D8  0222               	mulwf	getCurrentComparator@x^0,c
 28210  0056DA  CFF3 F010          	movff	prodl,___wmul@multiplier
 28211  0056DE  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 28212  0056E2  0E00               	movlw	0
 28213  0056E4  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28214  0056E6  0E0A               	movlw	10
 28215  0056E8  6E12               	movwf	___wmul@multiplicand^0,c
 28216  0056EA  ECE5  F046         	call	___wmul	;wreg free
 28217  0056EE  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 28218  0056F2  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 28219  0056F6  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 28220  0056FA  6A11               	clrf	(___wmul@multiplier+1)^0,c
 28221  0056FC  0EFF               	movlw	255
 28222  0056FE  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28223  005700  0E38               	movlw	56
 28224  005702  6E12               	movwf	___wmul@multiplicand^0,c
 28225  005704  ECE5  F046         	call	___wmul	;wreg free
 28226  005708  5010               	movf	?___wmul^0,w,c
 28227  00570A  261A               	addwf	??_getCurrentComparator^0,f,c
 28228  00570C  5011               	movf	(?___wmul+1)^0,w,c
 28229  00570E  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 28230  005710  0E14               	movlw	20
 28231  005712  241A               	addwf	??_getCurrentComparator^0,w,c
 28232  005714  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 28233  005716  0E05               	movlw	5
 28234  005718  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 28235  00571A  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 28236  00571C  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 28237  00571E  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 28238  005720  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 28239  005722  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 28240  005724  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 28241  005726  0101               	movlb	1	; () banked
 28242  005728  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 28243  00572A  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 28244  00572C  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28245  00572E  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 28246  005730  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 28247  005732  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28248  005734  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 28249  005736  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 28250  005738  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28251  00573A  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28252  00573C  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 28253  00573E  D046               	goto	L106
 28254  005740                     l14440:
 28255                           
 28256                           ; BSR set to: 1
 28257                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 28258  005740  0E03               	movlw	3
 28259  005742  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28260  005744  A4D8               	btfss	status,2,c
 28261  005746  D009               	goto	l1388
 28262                           
 28263                           ; BSR set to: 1
 28264                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 28265  005748  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 28266  00574C  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 28267  005750  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 28268  005754  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 28269                           
 28270                           ;controlCurrent_MC50.c: 315:         }
 28271  005758  D008               	goto	l14444
 28272  00575A                     l1388:
 28273                           
 28274                           ; BSR set to: 1
 28275                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 28276  00575A  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 28277  00575E  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 28278  005762  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 28279  005766  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 28280  00576A                     l14444:
 28281                           
 28282                           ; BSR set to: 1
 28283                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 28284  00576A  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28285  00576C  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28286  00576E  E10E               	bnz	l14448
 28287  005770  0E89               	movlw	137
 28288  005772  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28289  005774  0E13               	movlw	19
 28290  005776  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28291  005778  B0D8               	btfsc	status,0,c
 28292  00577A  D008               	goto	l14448
 28293                           
 28294                           ; BSR set to: 1
 28295                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 28296  00577C  0E88               	movlw	136
 28297  00577E  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28298  005780  0E13               	movlw	19
 28299  005782                     L107:
 28300  005782  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28301  005784  0E00               	movlw	0
 28302  005786  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28303  005788  0E00               	movlw	0
 28304  00578A  D020               	goto	L106
 28305  00578C                     l14448:
 28306                           
 28307                           ; BSR set to: 1
 28308                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 28309  00578C  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 28310  005790  6A11               	clrf	(___wmul@multiplier+1)^0,c
 28311  005792  0EFE               	movlw	254
 28312  005794  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28313  005796  0E0C               	movlw	12
 28314  005798  6E12               	movwf	___wmul@multiplicand^0,c
 28315  00579A  ECE5  F046         	call	___wmul	;wreg free
 28316  00579E  0E38               	movlw	56
 28317  0057A0  2410               	addwf	?___wmul^0,w,c
 28318  0057A2  6E1A               	movwf	??_getCurrentComparator^0,c
 28319  0057A4  0E18               	movlw	24
 28320  0057A6  2011               	addwfc	(?___wmul+1)^0,w,c
 28321  0057A8  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 28322  0057AA  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 28323  0057AC  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 28324  0057AE  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 28325  0057B0  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 28326  0057B2  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 28327  0057B4  501A               	movf	??_getCurrentComparator^0,w,c
 28328  0057B6  0101               	movlb	1	; () banked
 28329  0057B8  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28330  0057BA  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28331  0057BC  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 28332  0057BE  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28333  0057C0  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28334  0057C2  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 28335  0057C4  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 28336  0057C6  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28337  0057C8  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 28338  0057CA  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 28339  0057CC                     L106:
 28340  0057CC  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 28341                           
 28342                           ; BSR set to: 1
 28343                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 28344  0057CE  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 28345  0057D0  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 28346  0057D2  6E16               	movwf	?_getCurrentComparator^0,c
 28347  0057D4  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 28348  0057D6  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 28349  0057D8  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 28350  0057DA  0E00               	movlw	0
 28351  0057DC  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 28352  0057DE  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 28353  0057E0  0E00               	movlw	0
 28354  0057E2  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 28355  0057E4  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 28356                           
 28357                           ; BSR set to: 1
 28358  0057E6  0012               	return		;funcret
 28359  0057E8                     __end_of_getCurrentComparator:
 28360                           	callstack 0
 28361                           
 28362 ;; *************** function ___wmul *****************
 28363 ;; Defined at:
 28364 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 28365 ;; Parameters:    Size  Location     Type
 28366 ;;  multiplier      2   15[COMRAM] unsigned int 
 28367 ;;  multiplicand    2   17[COMRAM] unsigned int 
 28368 ;; Auto vars:     Size  Location     Type
 28369 ;;  product         2   19[COMRAM] unsigned int 
 28370 ;; Return value:  Size  Location     Type
 28371 ;;                  2   15[COMRAM] unsigned int 
 28372 ;; Registers used:
 28373 ;;		wreg, status,2, status,0, prodl, prodh
 28374 ;; Tracked objects:
 28375 ;;		On entry : 0/0
 28376 ;;		On exit  : 0/0
 28377 ;;		Unchanged: 0/0
 28378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28382 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28383 ;;Total ram usage:        6 bytes
 28384 ;; Hardware stack levels used: 1
 28385 ;; Hardware stack levels required when called: 4
 28386 ;; This function calls:
 28387 ;;		Nothing
 28388 ;; This function is called by:
 28389 ;;		_getCurrentComparator
 28390 ;;		_getHopCode
 28391 ;; This function uses a non-reentrant model
 28392 ;;
 28393                           
 28394                           	psect	text124
 28395  008DCA                     __ptext124:
 28396                           	callstack 0
 28397  008DCA                     ___wmul:
 28398                           	callstack 22
 28399                           
 28400                           ; BSR set to: 1
 28401                           ;incstack = 0
 28402  008DCA  5010               	movf	___wmul@multiplier^0,w,c
 28403  008DCC  0212               	mulwf	___wmul@multiplicand^0,c
 28404  008DCE  CFF3 F014          	movff	prodl,___wmul@product
 28405  008DD2  CFF4 F015          	movff	prodh,___wmul@product+1
 28406  008DD6  5010               	movf	___wmul@multiplier^0,w,c
 28407  008DD8  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 28408  008DDA  50F3               	movf	243,w,c
 28409  008DDC  2615               	addwf	(___wmul@product+1)^0,f,c
 28410  008DDE  5011               	movf	(___wmul@multiplier+1)^0,w,c
 28411  008DE0  0212               	mulwf	___wmul@multiplicand^0,c
 28412  008DE2  50F3               	movf	243,w,c
 28413  008DE4  2615               	addwf	(___wmul@product+1)^0,f,c
 28414  008DE6  C014  F010         	movff	___wmul@product,?___wmul
 28415  008DEA  C015  F011         	movff	___wmul@product+1,?___wmul+1
 28416  008DEE  0012               	return		;funcret
 28417  008DF0                     __end_of___wmul:
 28418                           	callstack 0
 28419                           
 28420 ;; *************** function _GetMotorPower *****************
 28421 ;; Defined at:
 28422 ;;		line 405 in file "outputs_MC50.c"
 28423 ;; Parameters:    Size  Location     Type
 28424 ;;		None
 28425 ;; Auto vars:     Size  Location     Type
 28426 ;;  defineatraso    1   18[COMRAM] unsigned char 
 28427 ;; Return value:  Size  Location     Type
 28428 ;;                  1    wreg      unsigned char 
 28429 ;; Registers used:
 28430 ;;		wreg, status,2, status,0, prodl, prodh
 28431 ;; Tracked objects:
 28432 ;;		On entry : 3E/1
 28433 ;;		On exit  : 3F/1
 28434 ;;		Unchanged: 0/0
 28435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28437 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28438 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28439 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28440 ;;Total ram usage:        4 bytes
 28441 ;; Hardware stack levels used: 1
 28442 ;; Hardware stack levels required when called: 4
 28443 ;; This function calls:
 28444 ;;		Nothing
 28445 ;; This function is called by:
 28446 ;;		_ControlCurrent
 28447 ;;		_InitSoftStart
 28448 ;;		_InitSoftStop
 28449 ;; This function uses a non-reentrant model
 28450 ;;
 28451                           
 28452                           	psect	text125
 28453  006F02                     __ptext125:
 28454                           	callstack 0
 28455  006F02                     _GetMotorPower:
 28456                           	callstack 22
 28457                           
 28458                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 28459                           
 28460                           ;incstack = 0
 28461  006F02  0101               	movlb	1	; () banked
 28462  006F04  057B               	decf	_powerControl_st& (0+255),w,b
 28463  006F06  A4D8               	btfss	status,2,c
 28464  006F08  D006               	goto	l19310
 28465                           
 28466                           ; BSR set to: 1
 28467                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 28468  006F0A  0100               	movlb	0	; () banked
 28469  006F0C  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 28470  006F0E  0D06               	mullw	6
 28471  006F10  CFF3 F190          	movff	prodl,_temppower
 28472                           
 28473                           ;outputs_MC50.c: 416:     }
 28474  006F14  D043               	goto	l2235
 28475  006F16                     l19310:
 28476                           
 28477                           ; BSR set to: 1
 28478                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 28479  006F16  0100               	movlb	0	; () banked
 28480  006F18  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 28481  006F1A  0D06               	mullw	6
 28482  006F1C  CFF3 F082          	movff	prodl,_fullmotorPower
 28483                           
 28484                           ; BSR set to: 0
 28485                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 28486  006F20  0101               	movlb	1	; () banked
 28487  006F22  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28488  006F24  D01C               	goto	l19320
 28489  006F26  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28490  006F28  E103               	bnz	u22010
 28491  006F2A  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28492  006F2C  A0D8               	btfss	status,0,c
 28493  006F2E  D017               	goto	l19320
 28494  006F30                     u22010:
 28495                           
 28496                           ; BSR set to: 1
 28497                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 28498  006F30  0100               	movlb	0	; () banked
 28499  006F32  5182               	movf	_fullmotorPower& (0+255),w,b
 28500  006F34  6E10               	movwf	??_GetMotorPower^0,c
 28501  006F36  6A11               	clrf	(??_GetMotorPower+1)^0,c
 28502  006F38  0101               	movlb	1	; () banked
 28503  006F3A  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 28504  006F3C  5C10               	subwf	??_GetMotorPower^0,w,c
 28505  006F3E  5011               	movf	(??_GetMotorPower+1)^0,w,c
 28506  006F40  0A80               	xorlw	128
 28507  006F42  6E12               	movwf	(??_GetMotorPower+2)^0,c
 28508  006F44  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28509  006F46  0A80               	xorlw	128
 28510  006F48  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 28511  006F4A  B0D8               	btfsc	status,0,c
 28512  006F4C  D002               	goto	l19318
 28513                           
 28514                           ; BSR set to: 1
 28515                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 28516  006F4E  0E01               	movlw	1
 28517  006F50  D004               	goto	L109
 28518  006F52                     l19318:
 28519                           
 28520                           ; BSR set to: 1
 28521                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 28522  006F52  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 28523  006F54  0100               	movlb	0	; () banked
 28524  006F56  5D82               	subwf	_fullmotorPower& (0+255),w,b
 28525  006F58  D017               	goto	L110
 28526  006F5A                     L109:
 28527  006F5A  6F90               	movwf	_temppower& (0+255),b
 28528  006F5C  D01F               	goto	l2235
 28529  006F5E                     l19320:
 28530                           
 28531                           ; BSR set to: 1
 28532  006F5E  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28533  006F60  D005               	goto	u22030
 28534  006F62  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28535  006F64  E113               	bnz	l19330
 28536  006F66  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28537  006F68  B0D8               	btfsc	status,0,c
 28538  006F6A  D010               	goto	l19330
 28539  006F6C                     u22030:
 28540                           
 28541                           ; BSR set to: 1
 28542  006F6C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28543  006F6E  D005               	goto	u22040
 28544  006F70  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28545  006F72  E10C               	bnz	l19330
 28546  006F74  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28547  006F76  B0D8               	btfsc	status,0,c
 28548  006F78  D009               	goto	l19330
 28549  006F7A                     u22040:
 28550                           
 28551                           ; BSR set to: 1
 28552                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 28553  006F7A  C082  F190         	movff	_fullmotorPower,_temppower
 28554                           
 28555                           ; BSR set to: 1
 28556                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 28557  006F7E  0E08               	movlw	8
 28558  006F80  0100               	movlb	0	; () banked
 28559  006F82  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 28560  006F84  D00B               	goto	l2235
 28561                           
 28562                           ; BSR set to: 0
 28563                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 28564  006F86  0E3A               	movlw	58
 28565  006F88                     L110:
 28566  006F88  0101               	movlb	1	; () banked
 28567  006F8A  D7E7               	goto	L109
 28568  006F8C                     l19330:
 28569                           
 28570                           ; BSR set to: 1
 28571  006F8C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28572  006F8E  D006               	goto	l2235
 28573  006F90  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28574  006F92  E102               	bnz	u22060
 28575  006F94  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28576  006F96  B0D8               	btfsc	status,0,c
 28577  006F98                     u22060:
 28578                           
 28579                           ; BSR set to: 1
 28580                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 28581  006F98  C110  F190         	movff	_var_sys+16,_temppower	;volatile
 28582  006F9C                     l2235:
 28583                           
 28584                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 28585  006F9C  0101               	movlb	1	; () banked
 28586  006F9E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28587  006FA0  D00E               	goto	l19340
 28588  006FA2  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28589  006FA4  E103               	bnz	u22070
 28590  006FA6  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28591  006FA8  A0D8               	btfss	status,0,c
 28592  006FAA  D009               	goto	l19340
 28593  006FAC                     u22070:
 28594                           
 28595                           ; BSR set to: 1
 28596  006FAC  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28597  006FAE  D005               	goto	u22080
 28598  006FB0  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28599  006FB2  E105               	bnz	l19340
 28600  006FB4  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28601  006FB6  B0D8               	btfsc	status,0,c
 28602  006FB8  D002               	goto	l19340
 28603  006FBA                     u22080:
 28604                           
 28605                           ; BSR set to: 1
 28606                           ;outputs_MC50.c: 452:     defineatraso = 5;
 28607  006FBA  0E05               	movlw	5
 28608  006FBC  D001               	goto	L108
 28609  006FBE                     l19340:
 28610                           
 28611                           ; BSR set to: 1
 28612                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 28613  006FBE  0E17               	movlw	23
 28614  006FC0                     L108:
 28615  006FC0  6E13               	movwf	GetMotorPower@defineatraso^0,c
 28616                           
 28617                           ; BSR set to: 1
 28618                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 28619  006FC2  5190               	movf	_temppower& (0+255),w,b
 28620  006FC4  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 28621                           
 28622                           ; BSR set to: 1
 28623  006FC6  0012               	return		;funcret
 28624  006FC8                     __end_of_GetMotorPower:
 28625                           	callstack 0
 28626                           
 28627 ;; *************** function _ControlCounterMoves *****************
 28628 ;; Defined at:
 28629 ;;		line 293 in file "controlMemory_MC50.c"
 28630 ;; Parameters:    Size  Location     Type
 28631 ;;		None
 28632 ;; Auto vars:     Size  Location     Type
 28633 ;;		None
 28634 ;; Return value:  Size  Location     Type
 28635 ;;                  1    wreg      void 
 28636 ;; Registers used:
 28637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28638 ;; Tracked objects:
 28639 ;;		On entry : 3E/1
 28640 ;;		On exit  : 0/0
 28641 ;;		Unchanged: 0/0
 28642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28647 ;;Total ram usage:        0 bytes
 28648 ;; Hardware stack levels used: 1
 28649 ;; Hardware stack levels required when called: 14
 28650 ;; This function calls:
 28651 ;;		_SaveNVM_VarSystem
 28652 ;; This function is called by:
 28653 ;;		_main
 28654 ;; This function uses a non-reentrant model
 28655 ;;
 28656                           
 28657                           	psect	text126
 28658  008316                     __ptext126:
 28659                           	callstack 0
 28660  008316                     _ControlCounterMoves:
 28661                           	callstack 16
 28662                           
 28663                           ;controlMemory_MC50.c: 296:     if(ts_system.timeBetweenSaveCounters<=0)
 28664                           
 28665                           ; BSR set to: 1
 28666                           ;incstack = 0
 28667  008316  0101               	movlb	1	; () banked
 28668  008318  BFC3               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 28669  00831A  D005               	goto	u27420
 28670  00831C  51C3               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 28671  00831E  E127               	bnz	l1486
 28672  008320  05C2               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 28673  008322  B0D8               	btfsc	status,0,c
 28674  008324  0012               	return	
 28675  008326                     u27420:
 28676                           
 28677                           ; BSR set to: 1
 28678                           ;controlMemory_MC50.c: 297:     {;controlMemory_MC50.c: 298:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 28679  008326  0E17               	movlw	23
 28680  008328  6FC3               	movwf	(_ts_system+39)& (0+255),b	;volatile
 28681  00832A  0E70               	movlw	112
 28682  00832C  6FC2               	movwf	(_ts_system+38)& (0+255),b	;volatile
 28683                           
 28684                           ; BSR set to: 1
 28685                           ;controlMemory_MC50.c: 300:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 28686  00832E  0100               	movlb	0	; () banked
 28687  008330  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 28688  008332  0101               	movlb	1	; () banked
 28689  008334  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 28690  008336  E110               	bnz	u27430
 28691  008338  0100               	movlb	0	; () banked
 28692  00833A  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 28693  00833C  0101               	movlb	1	; () banked
 28694  00833E  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 28695  008340  E10B               	bnz	u27430
 28696  008342  0100               	movlb	0	; () banked
 28697  008344  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 28698  008346  0101               	movlb	1	; () banked
 28699  008348  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 28700  00834A  E106               	bnz	u27430
 28701  00834C  0100               	movlb	0	; () banked
 28702  00834E  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 28703  008350  0101               	movlb	1	; () banked
 28704  008352  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 28705  008354  B4D8               	btfsc	status,2,c
 28706  008356  0012               	return	
 28707  008358                     u27430:
 28708                           
 28709                           ; BSR set to: 1
 28710                           ;controlMemory_MC50.c: 301:        {;controlMemory_MC50.c: 302:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 28711  008358  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 28712  00835C  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 28713  008360  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 28714  008364  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 28715                           
 28716                           ; BSR set to: 1
 28717                           ;controlMemory_MC50.c: 303:            SaveNVM_VarSystem(pageMemoryCounters);
 28718  008368  0E02               	movlw	2
 28719  00836A  ECE2  F044         	call	_SaveNVM_VarSystem
 28720  00836E                     l1486:
 28721  00836E  0012               	return		;funcret
 28722  008370                     __end_of_ControlCounterMoves:
 28723                           	callstack 0
 28724                           
 28725 ;; *************** function _SaveNVM_VarSystem *****************
 28726 ;; Defined at:
 28727 ;;		line 175 in file "controlMemory_MC50.c"
 28728 ;; Parameters:    Size  Location     Type
 28729 ;;  page            1    wreg     unsigned char 
 28730 ;; Auto vars:     Size  Location     Type
 28731 ;;  page            1    0[BANK0 ] unsigned char 
 28732 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 28733 ;;  point           1    3[BANK0 ] PTR unsigned char 
 28734 ;;		 -> var_sys_NVM(64), 
 28735 ;; Return value:  Size  Location     Type
 28736 ;;                  1    wreg      void 
 28737 ;; Registers used:
 28738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28739 ;; Tracked objects:
 28740 ;;		On entry : 0/0
 28741 ;;		On exit  : 0/0
 28742 ;;		Unchanged: 0/0
 28743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28745 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28747 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28748 ;;Total ram usage:        4 bytes
 28749 ;; Hardware stack levels used: 1
 28750 ;; Hardware stack levels required when called: 13
 28751 ;; This function calls:
 28752 ;;		_i2c_writeNBytes
 28753 ;; This function is called by:
 28754 ;;		_loadNVM_VarSystem
 28755 ;;		_ResetDefaultMemory
 28756 ;;		_ControlCounterMoves
 28757 ;;		_checkNVM_VarSystem
 28758 ;;		_sm_execute_ControlLearning
 28759 ;;		_sm_execute_menuConfiguration
 28760 ;;		_setValueToEdit
 28761 ;;		_controlSelectRemote
 28762 ;;		_eusartparser
 28763 ;; This function uses a non-reentrant model
 28764 ;;
 28765                           
 28766                           	psect	text127
 28767  0089C4                     __ptext127:
 28768                           	callstack 0
 28769  0089C4                     _SaveNVM_VarSystem:
 28770                           	callstack 14
 28771                           
 28772                           ;incstack = 0
 28773                           ;SaveNVM_VarSystem@page stored from wreg
 28774  0089C4  0100               	movlb	0	; () banked
 28775  0089C6  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 28776                           
 28777                           ;controlMemory_MC50.c: 175: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 176: {;controlMemory_MC50.c: 177:     unsigned int tempAdd=page*16;
 28778  0089C8  0100               	movlb	0	; () banked
 28779  0089CA  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 28780  0089CC  0D10               	mullw	16
 28781  0089CE  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 28782  0089D2  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 28783                           
 28784                           ; BSR set to: 0
 28785                           ;controlMemory_MC50.c: 178:     char* point=(char*)&var_sys_NVM;
 28786  0089D6  0E98               	movlw	low _var_sys_NVM
 28787  0089D8  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 28788                           
 28789                           ; BSR set to: 0
 28790                           ;controlMemory_MC50.c: 179:     point=point+tempAdd;
 28791  0089DA  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 28792  0089DC  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 28793  0089DE  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 28794                           
 28795                           ; BSR set to: 0
 28796                           ;controlMemory_MC50.c: 180:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 28797  0089E0  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 28798  0089E4  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 28799  0089E8  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 28800  0089EC  0E00               	movlw	0
 28801  0089EE  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 28802  0089F0  0E10               	movlw	16
 28803  0089F2  6E25               	movwf	i2c_writeNBytes@len^0,c
 28804  0089F4  0E50               	movlw	80
 28805  0089F6  ECEC  F03E         	call	_i2c_writeNBytes
 28806  0089FA  0012               	return		;funcret
 28807  0089FC                     __end_of_SaveNVM_VarSystem:
 28808                           	callstack 0
 28809                           
 28810 ;; *************** function _i2c_writeNBytes *****************
 28811 ;; Defined at:
 28812 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 28813 ;; Parameters:    Size  Location     Type
 28814 ;;  address         1    wreg     unsigned char 
 28815 ;;  reg             2   33[COMRAM] unsigned short 
 28816 ;;  data            1   35[COMRAM] PTR void 
 28817 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 28818 ;;  len             2   36[COMRAM] unsigned int 
 28819 ;; Auto vars:     Size  Location     Type
 28820 ;;  address         1   56[COMRAM] unsigned char 
 28821 ;;  dat            17   39[COMRAM] unsigned char [17]
 28822 ;; Return value:  Size  Location     Type
 28823 ;;                  1    wreg      void 
 28824 ;; Registers used:
 28825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28826 ;; Tracked objects:
 28827 ;;		On entry : 3F/0
 28828 ;;		On exit  : 0/0
 28829 ;;		Unchanged: 0/0
 28830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28831 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28832 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28834 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28835 ;;Total ram usage:       24 bytes
 28836 ;; Hardware stack levels used: 1
 28837 ;; Hardware stack levels required when called: 12
 28838 ;; This function calls:
 28839 ;;		_I2C1_Close
 28840 ;;		_I2C1_MasterWrite
 28841 ;;		_I2C1_Open
 28842 ;;		_I2C1_SetAddressNackCallback
 28843 ;;		_I2C1_SetBuffer
 28844 ;;		_memcpy
 28845 ;; This function is called by:
 28846 ;;		_saveNewSerial
 28847 ;;		_RemoveSerial
 28848 ;;		_SaveNVM_VarSystem
 28849 ;; This function uses a non-reentrant model
 28850 ;;
 28851                           
 28852                           	psect	text128
 28853  007DD8                     __ptext128:
 28854                           	callstack 0
 28855  007DD8                     _i2c_writeNBytes:
 28856                           	callstack 14
 28857                           
 28858                           ;incstack = 0
 28859                           ;i2c_writeNBytes@address stored from wreg
 28860  007DD8  6E39               	movwf	i2c_writeNBytes@address^0,c
 28861                           
 28862                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 28863  007DDA  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 28864                           
 28865                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 28866  007DDE  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 28867  007DE0  6E10               	movwf	memcpy@d1^0,c
 28868  007DE2  6A11               	clrf	(memcpy@d1+1)^0,c
 28869  007DE4  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 28870  007DE8  6A13               	clrf	(memcpy@s1+1)^0,c
 28871  007DEA  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 28872  007DEE  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 28873  007DF2  ECE4  F043         	call	_memcpy	;wreg free
 28874  007DF6                     l19364:
 28875  007DF6  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 28876  007DF8  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 28877  007DFA  ECBC  F03C         	call	_I2C1_Open
 28878  007DFE  0900               	iorlw	0
 28879  007E00  B4D8               	btfsc	status,2,c
 28880  007E02  D7F9               	goto	l19364
 28881                           
 28882                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 28883  007E04  0E28               	movlw	low i2c_writeNBytes@dat
 28884  007E06  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 28885  007E08  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 28886  007E0A  0E01               	movlw	1
 28887  007E0C  2425               	addwf	i2c_writeNBytes@len^0,w,c
 28888  007E0E  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 28889  007E10  0E00               	movlw	0
 28890  007E12  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 28891  007E14  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 28892  007E16  ECE0  F047         	call	_I2C1_SetBuffer	;wreg free
 28893                           
 28894                           ; BSR set to: 2
 28895                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 28896  007E1A  0E00               	movlw	0
 28897  007E1C  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 28898  007E1E  0E00               	movlw	0
 28899  007E20  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 28900  007E22  0E00               	movlw	0
 28901  007E24  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 28902  007E26  0E00               	movlw	0
 28903  007E28  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 28904  007E2A  EC05  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 28905                           
 28906                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 28907  007E2E  ECDE  F048         	call	_I2C1_MasterWrite	;wreg free
 28908  007E32                     l19372:
 28909  007E32  EC52  F047         	call	_I2C1_Close	;wreg free
 28910  007E36  06E8               	decf	wreg,f,c
 28911  007E38  B4D8               	btfsc	status,2,c
 28912  007E3A  D7FB               	goto	l19372
 28913                           
 28914                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 28915  007E3C  0ED0               	movlw	208
 28916  007E3E  6E27               	movwf	??_i2c_writeNBytes^0,c
 28917  007E40  0ECA               	movlw	202
 28918  007E42                     u28787:
 28919  007E42  2EE8               	decfsz	wreg,f,c
 28920  007E44  D7FE               	bra	u28787
 28921  007E46  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 28922  007E48  D7FC               	bra	u28787
 28923  007E4A  0012               	return		;funcret
 28924  007E4C                     __end_of_i2c_writeNBytes:
 28925                           	callstack 0
 28926                           
 28927 ;; *************** function _memcpy *****************
 28928 ;; Defined at:
 28929 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 28930 ;; Parameters:    Size  Location     Type
 28931 ;;  d1              2   15[COMRAM] PTR void 
 28932 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28933 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28934 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 28935 ;;		 -> i2c_writeNBytes@dat(17), 
 28936 ;;  s1              2   17[COMRAM] PTR const void 
 28937 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28938 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28939 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 28940 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 28941 ;;  n               2   19[COMRAM] unsigned int 
 28942 ;; Auto vars:     Size  Location     Type
 28943 ;;  s               2   24[COMRAM] PTR const unsigned char 
 28944 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28945 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28946 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 28947 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 28948 ;;  d               2   22[COMRAM] PTR unsigned char 
 28949 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28950 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28951 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 28952 ;;		 -> i2c_writeNBytes@dat(17), 
 28953 ;;  tmp             1   21[COMRAM] unsigned char 
 28954 ;; Return value:  Size  Location     Type
 28955 ;;                  2   15[COMRAM] PTR void 
 28956 ;; Registers used:
 28957 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28958 ;; Tracked objects:
 28959 ;;		On entry : 0/0
 28960 ;;		On exit  : 0/0
 28961 ;;		Unchanged: 0/0
 28962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28963 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28964 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28966 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28967 ;;Total ram usage:       11 bytes
 28968 ;; Hardware stack levels used: 1
 28969 ;; Hardware stack levels required when called: 4
 28970 ;; This function calls:
 28971 ;;		Nothing
 28972 ;; This function is called by:
 28973 ;;		_i2c_writeNBytes
 28974 ;;		_getSerialCmd
 28975 ;;		_NormalKeyGen
 28976 ;;		_Decrypt
 28977 ;;		_keeloqDecryptPacket
 28978 ;;		_DecryptPacket_12BIT
 28979 ;; This function uses a non-reentrant model
 28980 ;;
 28981                           
 28982                           	psect	text129
 28983  0087C8                     __ptext129:
 28984                           	callstack 0
 28985  0087C8                     _memcpy:
 28986                           	callstack 21
 28987                           
 28988                           ;incstack = 0
 28989  0087C8  C012  F019         	movff	memcpy@s1,memcpy@s
 28990  0087CC  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 28991  0087D0  C010  F017         	movff	memcpy@d1,memcpy@d
 28992  0087D4  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 28993  0087D8  D010               	goto	l19304
 28994  0087DA                     l19296:
 28995  0087DA  C019  FFD9         	movff	memcpy@s,fsr2l
 28996  0087DE  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 28997  0087E2  50DF               	movf	indf2,w,c
 28998  0087E4  6E16               	movwf	memcpy@tmp^0,c
 28999  0087E6  4A19               	infsnz	memcpy@s^0,f,c
 29000  0087E8  2A1A               	incf	(memcpy@s+1)^0,f,c
 29001  0087EA  C017  FFD9         	movff	memcpy@d,fsr2l
 29002  0087EE  C018  FFDA         	movff	memcpy@d+1,fsr2h
 29003  0087F2  C016  FFDF         	movff	memcpy@tmp,indf2
 29004  0087F6  4A17               	infsnz	memcpy@d^0,f,c
 29005  0087F8  2A18               	incf	(memcpy@d+1)^0,f,c
 29006  0087FA                     l19304:
 29007  0087FA  0614               	decf	memcpy@n^0,f,c
 29008  0087FC  A0D8               	btfss	status,0,c
 29009  0087FE  0615               	decf	(memcpy@n+1)^0,f,c
 29010  008800  2814               	incf	memcpy@n^0,w,c
 29011  008802  E1EB               	bnz	l19296
 29012  008804  2815               	incf	(memcpy@n+1)^0,w,c
 29013  008806  B4D8               	btfsc	status,2,c
 29014  008808  0012               	return	
 29015  00880A  D7E7               	goto	l19296
 29016  00880C                     __end_of_memcpy:
 29017                           	callstack 0
 29018                           
 29019 ;; *************** function _I2C1_SetAddressNackCallback *****************
 29020 ;; Defined at:
 29021 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 29022 ;; Parameters:    Size  Location     Type
 29023 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 29024 ;;		 -> Absolute function(1), 
 29025 ;;  ptr             2   22[COMRAM] PTR void 
 29026 ;;		 -> NULL(0), 
 29027 ;; Auto vars:     Size  Location     Type
 29028 ;;		None
 29029 ;; Return value:  Size  Location     Type
 29030 ;;                  1    wreg      void 
 29031 ;; Registers used:
 29032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29033 ;; Tracked objects:
 29034 ;;		On entry : 3F/2
 29035 ;;		On exit  : 0/0
 29036 ;;		Unchanged: 0/0
 29037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29038 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29041 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29042 ;;Total ram usage:        4 bytes
 29043 ;; Hardware stack levels used: 1
 29044 ;; Hardware stack levels required when called: 5
 29045 ;; This function calls:
 29046 ;;		_I2C1_SetCallback
 29047 ;; This function is called by:
 29048 ;;		_i2c_writeNBytes
 29049 ;;		_i2c_readDataBlock
 29050 ;;		_I2C1_Read1ByteRegister
 29051 ;; This function uses a non-reentrant model
 29052 ;;
 29053                           
 29054                           	psect	text130
 29055  00900A                     __ptext130:
 29056                           	callstack 0
 29057  00900A                     _I2C1_SetAddressNackCallback:
 29058                           	callstack 20
 29059                           
 29060                           ; BSR set to: 2
 29061                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 29062                           
 29063                           ;incstack = 0
 29064  00900A  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 29065  00900E  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 29066  009012  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 29067  009016  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 29068  00901A  0E02               	movlw	2
 29069  00901C  ECCD  F03F         	call	_I2C1_SetCallback
 29070  009020  0012               	return		;funcret
 29071  009022                     __end_of_I2C1_SetAddressNackCallback:
 29072                           	callstack 0
 29073                           
 29074 ;; *************** function _I2C1_Open *****************
 29075 ;; Defined at:
 29076 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 29077 ;; Parameters:    Size  Location     Type
 29078 ;;  address         1    wreg     unsigned char 
 29079 ;; Auto vars:     Size  Location     Type
 29080 ;;  address         1   15[COMRAM] unsigned char 
 29081 ;;  returnValue     1   16[COMRAM] enum E355
 29082 ;; Return value:  Size  Location     Type
 29083 ;;                  1    wreg      enum E355
 29084 ;; Registers used:
 29085 ;;		wreg, status,2, status,0, cstack
 29086 ;; Tracked objects:
 29087 ;;		On entry : 0/1
 29088 ;;		On exit  : 33/2
 29089 ;;		Unchanged: 0/0
 29090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29092 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29094 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29095 ;;Total ram usage:        2 bytes
 29096 ;; Hardware stack levels used: 1
 29097 ;; Hardware stack levels required when called: 5
 29098 ;; This function calls:
 29099 ;;		_I2C1_MasterClearIrq
 29100 ;;		_I2C1_MasterOpen
 29101 ;; This function is called by:
 29102 ;;		_i2c_writeNBytes
 29103 ;;		_i2c_readDataBlock
 29104 ;;		_I2C1_Read1ByteRegister
 29105 ;; This function uses a non-reentrant model
 29106 ;;
 29107                           
 29108                           	psect	text131
 29109  007978                     __ptext131:
 29110                           	callstack 0
 29111  007978                     _I2C1_Open:
 29112                           	callstack 20
 29113                           
 29114                           ;incstack = 0
 29115                           ;I2C1_Open@address stored from wreg
 29116  007978  6E10               	movwf	I2C1_Open@address^0,c
 29117                           
 29118                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 29119  00797A  0E01               	movlw	1
 29120  00797C  6E11               	movwf	I2C1_Open@returnValue^0,c
 29121                           
 29122                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 29123  00797E  0102               	movlb	2	; () banked
 29124  007980  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 29125  007982  D03A               	goto	l19270
 29126                           
 29127                           ; BSR set to: 2
 29128                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 29129  007984  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 29130                           
 29131                           ; BSR set to: 2
 29132                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 29133  007988  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 29134                           
 29135                           ; BSR set to: 2
 29136                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 29137  00798A  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 29138                           
 29139                           ; BSR set to: 2
 29140                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 29141  00798C  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 29142                           
 29143                           ; BSR set to: 2
 29144                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 29145  00798E  0E0E               	movlw	14
 29146  007990  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29147                           
 29148                           ; BSR set to: 2
 29149                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 29150  007992  0E01               	movlw	1
 29151  007994  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 29152  007996  0EF4               	movlw	244
 29153  007998  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 29154                           
 29155                           ; BSR set to: 2
 29156                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 29157  00799A  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 29158                           
 29159                           ; BSR set to: 2
 29160                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 29161  00799C  0E56               	movlw	low _I2C1_CallbackReturnStop
 29162  00799E  6F3C               	movwf	_I2C1_Status& (0+255),b
 29163  0079A0  0E92               	movlw	high _I2C1_CallbackReturnStop
 29164  0079A2  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 29165                           
 29166                           ; BSR set to: 2
 29167                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 29168  0079A4  0E00               	movlw	0
 29169  0079A6  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 29170  0079A8  0E00               	movlw	0
 29171  0079AA  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 29172                           
 29173                           ; BSR set to: 2
 29174                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 29175  0079AC  0E56               	movlw	low _I2C1_CallbackReturnStop
 29176  0079AE  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 29177  0079B0  0E92               	movlw	high _I2C1_CallbackReturnStop
 29178  0079B2  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 29179                           
 29180                           ; BSR set to: 2
 29181                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 29182  0079B4  0E00               	movlw	0
 29183  0079B6  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 29184  0079B8  0E00               	movlw	0
 29185  0079BA  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 29186                           
 29187                           ; BSR set to: 2
 29188                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 29189  0079BC  0E56               	movlw	low _I2C1_CallbackReturnStop
 29190  0079BE  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 29191  0079C0  0E92               	movlw	high _I2C1_CallbackReturnStop
 29192  0079C2  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 29193                           
 29194                           ; BSR set to: 2
 29195                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 29196  0079C4  0E00               	movlw	0
 29197  0079C6  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 29198  0079C8  0E00               	movlw	0
 29199  0079CA  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 29200                           
 29201                           ; BSR set to: 2
 29202                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 29203  0079CC  0E56               	movlw	low _I2C1_CallbackReturnStop
 29204  0079CE  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 29205  0079D0  0E92               	movlw	high _I2C1_CallbackReturnStop
 29206  0079D2  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 29207                           
 29208                           ; BSR set to: 2
 29209                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 29210  0079D4  0E00               	movlw	0
 29211  0079D6  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 29212  0079D8  0E00               	movlw	0
 29213  0079DA  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 29214                           
 29215                           ; BSR set to: 2
 29216                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 29217  0079DC  0E52               	movlw	low _I2C1_CallbackReturnReset
 29218  0079DE  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 29219  0079E0  0E92               	movlw	high _I2C1_CallbackReturnReset
 29220  0079E2  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 29221                           
 29222                           ; BSR set to: 2
 29223                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 29224  0079E4  0E00               	movlw	0
 29225  0079E6  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 29226  0079E8  0E00               	movlw	0
 29227  0079EA  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 29228                           
 29229                           ; BSR set to: 2
 29230                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 29231  0079EC  EC15  F049         	call	_I2C1_MasterClearIrq	;wreg free
 29232                           
 29233                           ; BSR set to: 14
 29234                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 29235  0079F0  EC11  F048         	call	_I2C1_MasterOpen	;wreg free
 29236                           
 29237                           ; BSR set to: 14
 29238                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 29239  0079F4  0E00               	movlw	0
 29240  0079F6  6E11               	movwf	I2C1_Open@returnValue^0,c
 29241  0079F8                     l19270:
 29242                           
 29243                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 29244  0079F8  5011               	movf	I2C1_Open@returnValue^0,w,c
 29245  0079FA  0012               	return		;funcret
 29246  0079FC                     __end_of_I2C1_Open:
 29247                           	callstack 0
 29248                           
 29249 ;; *************** function _I2C1_MasterOpen *****************
 29250 ;; Defined at:
 29251 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 29252 ;; Parameters:    Size  Location     Type
 29253 ;;		None
 29254 ;; Auto vars:     Size  Location     Type
 29255 ;;		None
 29256 ;; Return value:  Size  Location     Type
 29257 ;;                  1    wreg      _Bool 
 29258 ;; Registers used:
 29259 ;;		wreg, status,2
 29260 ;; Tracked objects:
 29261 ;;		On entry : 3F/E
 29262 ;;		On exit  : 3F/E
 29263 ;;		Unchanged: 3F/0
 29264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29269 ;;Total ram usage:        0 bytes
 29270 ;; Hardware stack levels used: 1
 29271 ;; Hardware stack levels required when called: 4
 29272 ;; This function calls:
 29273 ;;		Nothing
 29274 ;; This function is called by:
 29275 ;;		_I2C1_Open
 29276 ;; This function uses a non-reentrant model
 29277 ;;
 29278                           
 29279                           	psect	text132
 29280  009022                     __ptext132:
 29281                           	callstack 0
 29282  009022                     _I2C1_MasterOpen:
 29283                           	callstack 20
 29284                           
 29285                           ; BSR set to: 14
 29286                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 29287                           
 29288                           ;incstack = 0
 29289  009022  BA96               	btfsc	150,5,c	;volatile
 29290  009024  0012               	return	
 29291                           
 29292                           ; BSR set to: 14
 29293                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 29294  009026  0E80               	movlw	128
 29295  009028  6E95               	movwf	149,c	;volatile
 29296                           
 29297                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 29298  00902A  0E08               	movlw	8
 29299  00902C  6E96               	movwf	150,c	;volatile
 29300                           
 29301                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 29302  00902E  0E00               	movlw	0
 29303  009030  6E97               	movwf	151,c	;volatile
 29304                           
 29305                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 29306  009032  0E9F               	movlw	159
 29307  009034  6E93               	movwf	147,c	;volatile
 29308                           
 29309                           ; BSR set to: 14
 29310                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 29311  009036  8A96               	bsf	150,5,c	;volatile
 29312                           
 29313                           ; BSR set to: 14
 29314  009038  0012               	return		;funcret
 29315  00903A                     __end_of_I2C1_MasterOpen:
 29316                           	callstack 0
 29317                           
 29318 ;; *************** function _I2C1_MasterWrite *****************
 29319 ;; Defined at:
 29320 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 29321 ;; Parameters:    Size  Location     Type
 29322 ;;		None
 29323 ;; Auto vars:     Size  Location     Type
 29324 ;;		None
 29325 ;; Return value:  Size  Location     Type
 29326 ;;                  1    wreg      enum E355
 29327 ;; Registers used:
 29328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29329 ;; Tracked objects:
 29330 ;;		On entry : 0/2
 29331 ;;		On exit  : 3F/2
 29332 ;;		Unchanged: 0/0
 29333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29338 ;;Total ram usage:        0 bytes
 29339 ;; Hardware stack levels used: 1
 29340 ;; Hardware stack levels required when called: 11
 29341 ;; This function calls:
 29342 ;;		_I2C1_MasterOperation
 29343 ;; This function is called by:
 29344 ;;		_i2c_writeNBytes
 29345 ;;		_i2c_readDataBlock
 29346 ;;		_I2C1_Read1ByteRegister
 29347 ;; This function uses a non-reentrant model
 29348 ;;
 29349                           
 29350                           	psect	text133
 29351  0091BC                     __ptext133:
 29352                           	callstack 0
 29353  0091BC                     _I2C1_MasterWrite:
 29354                           	callstack 14
 29355                           
 29356                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 29357                           
 29358                           ; BSR set to: 14
 29359                           ;incstack = 0
 29360  0091BC  0E00               	movlw	0
 29361  0091BE  ECBB  F045         	call	_I2C1_MasterOperation
 29362                           
 29363                           ; BSR set to: 2
 29364  0091C2  0012               	return		;funcret
 29365  0091C4                     __end_of_I2C1_MasterWrite:
 29366                           	callstack 0
 29367                           
 29368 ;; *************** function _I2C1_MasterOperation *****************
 29369 ;; Defined at:
 29370 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 29371 ;; Parameters:    Size  Location     Type
 29372 ;;  read            1    wreg     _Bool 
 29373 ;; Auto vars:     Size  Location     Type
 29374 ;;  read            1   31[COMRAM] _Bool 
 29375 ;;  returnValue     1   32[COMRAM] enum E355
 29376 ;; Return value:  Size  Location     Type
 29377 ;;                  1    wreg      enum E355
 29378 ;; Registers used:
 29379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29380 ;; Tracked objects:
 29381 ;;		On entry : 0/2
 29382 ;;		On exit  : 3F/2
 29383 ;;		Unchanged: 0/0
 29384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29389 ;;Total ram usage:        2 bytes
 29390 ;; Hardware stack levels used: 1
 29391 ;; Hardware stack levels required when called: 10
 29392 ;; This function calls:
 29393 ;;		_I2C1_MasterStart
 29394 ;;		_I2C1_Poller
 29395 ;; This function is called by:
 29396 ;;		_I2C1_MasterWrite
 29397 ;; This function uses a non-reentrant model
 29398 ;;
 29399                           
 29400                           	psect	text134
 29401  008B76                     __ptext134:
 29402                           	callstack 0
 29403  008B76                     _I2C1_MasterOperation:
 29404                           	callstack 14
 29405                           
 29406                           ; BSR set to: 2
 29407                           ;incstack = 0
 29408                           ;I2C1_MasterOperation@read stored from wreg
 29409  008B76  6E20               	movwf	I2C1_MasterOperation@read^0,c
 29410                           
 29411                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 29412  008B78  0E01               	movlw	1
 29413  008B7A  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 29414                           
 29415                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 29416  008B7C  0102               	movlb	2	; () banked
 29417  008B7E  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 29418  008B80  D00E               	goto	l19222
 29419                           
 29420                           ; BSR set to: 2
 29421                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 29422  008B82  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 29423                           
 29424                           ; BSR set to: 2
 29425                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 29426  008B84  0E00               	movlw	0
 29427  008B86  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 29428                           
 29429                           ; BSR set to: 2
 29430                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 29431  008B88  5020               	movf	I2C1_MasterOperation@read^0,w,c
 29432  008B8A  B4D8               	btfsc	status,2,c
 29433  008B8C  D002               	goto	l19216
 29434                           
 29435                           ; BSR set to: 2
 29436                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 29437  008B8E  0E01               	movlw	1
 29438  008B90  D001               	goto	L111
 29439  008B92                     l19216:
 29440                           
 29441                           ; BSR set to: 2
 29442                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 29443  008B92  0E02               	movlw	2
 29444  008B94                     L111:
 29445  008B94  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29446                           
 29447                           ; BSR set to: 2
 29448                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 29449  008B96  EC31  F049         	call	_I2C1_MasterStart	;wreg free
 29450                           
 29451                           ; BSR set to: 2
 29452                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 29453  008B9A  EC79  F048         	call	_I2C1_Poller	;wreg free
 29454  008B9E                     l19222:
 29455                           
 29456                           ; BSR set to: 2
 29457                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 29458  008B9E  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 29459                           
 29460                           ; BSR set to: 2
 29461  008BA0  0012               	return		;funcret
 29462  008BA2                     __end_of_I2C1_MasterOperation:
 29463                           	callstack 0
 29464                           
 29465 ;; *************** function _I2C1_Poller *****************
 29466 ;; Defined at:
 29467 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 29468 ;; Parameters:    Size  Location     Type
 29469 ;;		None
 29470 ;; Auto vars:     Size  Location     Type
 29471 ;;		None
 29472 ;; Return value:  Size  Location     Type
 29473 ;;                  1    wreg      void 
 29474 ;; Registers used:
 29475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29476 ;; Tracked objects:
 29477 ;;		On entry : 3F/2
 29478 ;;		On exit  : 3F/2
 29479 ;;		Unchanged: 0/0
 29480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29485 ;;Total ram usage:        0 bytes
 29486 ;; Hardware stack levels used: 1
 29487 ;; Hardware stack levels required when called: 9
 29488 ;; This function calls:
 29489 ;;		_I2C1_MasterFsm
 29490 ;;		_I2C1_MasterWaitForEvent
 29491 ;; This function is called by:
 29492 ;;		_I2C1_MasterOperation
 29493 ;; This function uses a non-reentrant model
 29494 ;;
 29495                           
 29496                           	psect	text135
 29497  0090F2                     __ptext135:
 29498                           	callstack 0
 29499  0090F2                     _I2C1_Poller:
 29500                           	callstack 14
 29501                           
 29502                           ; BSR set to: 2
 29503                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 29504                           
 29505                           ; BSR set to: 2
 29506                           ;incstack = 0
 29507  0090F2  D004               	goto	l19190
 29508  0090F4                     l19186:
 29509                           
 29510                           ; BSR set to: 2
 29511                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 29512  0090F4  ECE2  F048         	call	_I2C1_MasterWaitForEvent	;wreg free
 29513                           
 29514                           ; BSR set to: 14
 29515                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 29516  0090F8  EC65  F042         	call	_I2C1_MasterFsm	;wreg free
 29517  0090FC                     l19190:
 29518                           
 29519                           ; BSR set to: 2
 29520                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 29521  0090FC  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 29522  0090FE  0012               	return	
 29523  009100  D7F9               	goto	l19186
 29524  009102                     __end_of_I2C1_Poller:
 29525                           	callstack 0
 29526                           
 29527 ;; *************** function _I2C1_MasterWaitForEvent *****************
 29528 ;; Defined at:
 29529 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 29530 ;; Parameters:    Size  Location     Type
 29531 ;;		None
 29532 ;; Auto vars:     Size  Location     Type
 29533 ;;		None
 29534 ;; Return value:  Size  Location     Type
 29535 ;;                  1    wreg      void 
 29536 ;; Registers used:
 29537 ;;		None
 29538 ;; Tracked objects:
 29539 ;;		On entry : 3F/2
 29540 ;;		On exit  : 3F/E
 29541 ;;		Unchanged: 0/0
 29542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29547 ;;Total ram usage:        0 bytes
 29548 ;; Hardware stack levels used: 1
 29549 ;; Hardware stack levels required when called: 4
 29550 ;; This function calls:
 29551 ;;		Nothing
 29552 ;; This function is called by:
 29553 ;;		_I2C1_Poller
 29554 ;; This function uses a non-reentrant model
 29555 ;;
 29556                           
 29557                           	psect	text136
 29558  0091C4                     __ptext136:
 29559                           	callstack 0
 29560  0091C4                     _I2C1_MasterWaitForEvent:
 29561                           	callstack 18
 29562                           
 29563                           ; BSR set to: 2
 29564                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 29565                           
 29566                           ; BSR set to: 2
 29567                           ;incstack = 0
 29568                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 29569  0091C4  010E               	movlb	14	; () banked
 29570  0091C6  B1CD               	btfsc	205,0,b	;volatile
 29571  0091C8  0012               	return	
 29572  0091CA  D7FC               	goto	__ptext136
 29573  0091CC                     __end_of_I2C1_MasterWaitForEvent:
 29574                           	callstack 0
 29575                           
 29576 ;; *************** function _I2C1_MasterFsm *****************
 29577 ;; Defined at:
 29578 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 29579 ;; Parameters:    Size  Location     Type
 29580 ;;		None
 29581 ;; Auto vars:     Size  Location     Type
 29582 ;;		None
 29583 ;; Return value:  Size  Location     Type
 29584 ;;                  1    wreg      void 
 29585 ;; Registers used:
 29586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29587 ;; Tracked objects:
 29588 ;;		On entry : 3F/E
 29589 ;;		On exit  : 3F/2
 29590 ;;		Unchanged: 0/0
 29591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29594 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29595 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29596 ;;Total ram usage:        3 bytes
 29597 ;; Hardware stack levels used: 1
 29598 ;; Hardware stack levels required when called: 8
 29599 ;; This function calls:
 29600 ;;		_I2C1_DO_ADDRESS_NACK
 29601 ;;		_I2C1_DO_IDLE
 29602 ;;		_I2C1_DO_RCEN
 29603 ;;		_I2C1_DO_RESET
 29604 ;;		_I2C1_DO_RX
 29605 ;;		_I2C1_DO_RX_ACK
 29606 ;;		_I2C1_DO_RX_NACK_RESTART
 29607 ;;		_I2C1_DO_RX_NACK_STOP
 29608 ;;		_I2C1_DO_SEND_ADR_READ
 29609 ;;		_I2C1_DO_SEND_ADR_WRITE
 29610 ;;		_I2C1_DO_SEND_RESTART
 29611 ;;		_I2C1_DO_SEND_RESTART_READ
 29612 ;;		_I2C1_DO_SEND_RESTART_WRITE
 29613 ;;		_I2C1_DO_SEND_STOP
 29614 ;;		_I2C1_DO_TX
 29615 ;;		_I2C1_DO_TX_EMPTY
 29616 ;;		_I2C1_MasterClearIrq
 29617 ;;		_I2C1_MasterIsNack
 29618 ;; This function is called by:
 29619 ;;		_I2C1_Poller
 29620 ;; This function uses a non-reentrant model
 29621 ;;
 29622                           
 29623                           	psect	text137
 29624  0084CA                     __ptext137:
 29625                           	callstack 0
 29626  0084CA                     _I2C1_MasterFsm:
 29627                           	callstack 14
 29628                           
 29629                           ; BSR set to: 14
 29630                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 29631                           
 29632                           ; BSR set to: 14
 29633                           ;incstack = 0
 29634  0084CA  EC15  F049         	call	_I2C1_MasterClearIrq	;wreg free
 29635                           
 29636                           ; BSR set to: 14
 29637                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 29638  0084CE  0102               	movlb	2	; () banked
 29639  0084D0  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 29640  0084D2  D007               	goto	l19180
 29641                           
 29642                           ; BSR set to: 2
 29643  0084D4  EC96  F048         	call	_I2C1_MasterIsNack	;wreg free
 29644  0084D8  0900               	iorlw	0
 29645  0084DA  B4D8               	btfsc	status,2,c
 29646  0084DC  D002               	goto	l19180
 29647                           
 29648                           ; BSR set to: 2
 29649                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 29650  0084DE  0E0F               	movlw	15
 29651  0084E0  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29652  0084E2                     l19180:
 29653                           
 29654                           ; BSR set to: 2
 29655                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 29656  0084E2  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 29657  0084E4  0D02               	mullw	2
 29658  0084E6  50F3               	movf	243,w,c
 29659  0084E8  0F01               	addlw	low _i2c1_fsmStateTable
 29660  0084EA  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 29661  0084EC  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 29662  0084F0                     	if	1	;There is more than 1 active tblptr byte
 29663  0084F0  0E0F               	movlw	high __smallconst
 29664  0084F2  6EF7               	movwf	tblptrh,c
 29665  0084F4                     	endif
 29666  0084F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29667  0084F4  6AF8               	clrf	tblptru,c
 29668  0084F6                     	endif
 29669  0084F6                     	if	0	;tblptru may be non-zero
 29670  0084F6                     	endif
 29671  0084F6  0009               	tblrd		*+
 29672  0084F8  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 29673  0084FC  0009               	tblrd		*+
 29674  0084FE  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 29675  008502  D801               	call	u21928
 29676  008504  D009               	goto	u21929
 29677  008506                     u21928:
 29678  008506  0005               	push	
 29679  008508  6EFA               	movwf	pclath,c
 29680  00850A  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 29681  00850C  6EFD               	movwf	tosl,c
 29682  00850E  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 29683  008510  6EFE               	movwf	tosh,c
 29684  008512  6AFF               	clrf	tosu,c
 29685  008514  50FA               	movf	pclath,w,c
 29686  008516  0012               	return		;indir
 29687  008518                     u21929:
 29688  008518  0102               	movlb	2	; () banked
 29689  00851A  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29690                           
 29691                           ; BSR set to: 2
 29692  00851C  0012               	return		;funcret
 29693  00851E                     __end_of_I2C1_MasterFsm:
 29694                           	callstack 0
 29695                           
 29696 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 29697 ;; Defined at:
 29698 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 29699 ;; Parameters:    Size  Location     Type
 29700 ;;		None
 29701 ;; Auto vars:     Size  Location     Type
 29702 ;;		None
 29703 ;; Return value:  Size  Location     Type
 29704 ;;                  1    wreg      enum E10442
 29705 ;; Registers used:
 29706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 29707 ;; Tracked objects:
 29708 ;;		On entry : 3F/2
 29709 ;;		On exit  : 0/0
 29710 ;;		Unchanged: 0/0
 29711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29714 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29716 ;;Total ram usage:        2 bytes
 29717 ;; Hardware stack levels used: 1
 29718 ;; Hardware stack levels required when called: 7
 29719 ;; This function calls:
 29720 ;;		Absolute function
 29721 ;;		_I2C1_CallbackReturnReset
 29722 ;;		_I2C1_CallbackReturnStop
 29723 ;;		_I2C1_DO_SEND_RESTART
 29724 ;;		_I2C1_DO_SEND_STOP
 29725 ;;		_rd1RegCompleteHandler
 29726 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 29727 ;;		_rd2RegCompleteHandler
 29728 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 29729 ;;		_rdBlkRegCompleteHandler
 29730 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 29731 ;;		_wr1RegCompleteHandler
 29732 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 29733 ;;		_wr2RegCompleteHandler
 29734 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 29735 ;; This function is called by:
 29736 ;;		_I2C1_MasterFsm
 29737 ;; This function uses a non-reentrant model
 29738 ;;
 29739                           
 29740                           	psect	text138
 29741  00865E                     __ptext138:
 29742                           	callstack 0
 29743  00865E                     _I2C1_DO_ADDRESS_NACK:
 29744                           	callstack 14
 29745                           
 29746                           ; BSR set to: 2
 29747                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 29748                           
 29749                           ; BSR set to: 2
 29750                           ;incstack = 0
 29751  00865E  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 29752                           
 29753                           ; BSR set to: 2
 29754                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 29755  008660  0E02               	movlw	2
 29756  008662  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 29757                           
 29758                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 29759  008664  D006               	goto	l19164
 29760  008666                     l19154:
 29761                           
 29762                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 29763  008666  ECF6  F048         	call	_I2C1_DO_SEND_RESTART	;wreg free
 29764  00866A  0012               	return	
 29765  00866C                     l19158:
 29766                           
 29767                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 29768  00866C  ECF2  F048         	call	_I2C1_DO_SEND_STOP	;wreg free
 29769  008670  0012               	return	
 29770  008672                     l19164:
 29771                           
 29772                           ; BSR set to: 2
 29773  008672  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 29774  008676  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 29775  00867A  D801               	call	u21888
 29776  00867C  D009               	goto	u21889
 29777  00867E                     u21888:
 29778  00867E  0005               	push	
 29779  008680  6EFA               	movwf	pclath,c
 29780  008682  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 29781  008684  6EFD               	movwf	tosl,c
 29782  008686  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 29783  008688  6EFE               	movwf	tosh,c
 29784  00868A  6AFF               	clrf	tosu,c
 29785  00868C  50FA               	movf	pclath,w,c
 29786  00868E  0012               	return		;indir
 29787  008690                     u21889:
 29788  008690  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 29789  008692  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 29790                           
 29791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29792                           ; Switch size 1, requested type "simple"
 29793                           ; Number of cases is 1, Range of values is 0 to 0
 29794                           ; switch strategies available:
 29795                           ; Name         Instructions Cycles
 29796                           ; simple_byte            4     3 (average)
 29797                           ;	Chosen strategy is simple_byte
 29798  008694  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 29799  008696  0A00               	xorlw	0	; case 0
 29800  008698  A4D8               	btfss	status,2,c
 29801  00869A  D7E8               	goto	l19158
 29802                           
 29803                           ; Switch size 1, requested type "simple"
 29804                           ; Number of cases is 2, Range of values is 2 to 3
 29805                           ; switch strategies available:
 29806                           ; Name         Instructions Cycles
 29807                           ; simple_byte            7     4 (average)
 29808                           ;	Chosen strategy is simple_byte
 29809  00869C  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 29810  00869E  0A02               	xorlw	2	; case 2
 29811  0086A0  B4D8               	btfsc	status,2,c
 29812  0086A2  D7E1               	goto	l19154
 29813  0086A4  0A01               	xorlw	1	; case 3
 29814  0086A6  B4D8               	btfsc	status,2,c
 29815  0086A8  D7DE               	goto	l19154
 29816  0086AA  D7E0               	goto	l19158
 29817  0086AC                     __end_of_I2C1_DO_ADDRESS_NACK:
 29818                           	callstack 0
 29819                           
 29820 ;; *************** function _I2C1_DO_RESET *****************
 29821 ;; Defined at:
 29822 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 29823 ;; Parameters:    Size  Location     Type
 29824 ;;		None
 29825 ;; Auto vars:     Size  Location     Type
 29826 ;;		None
 29827 ;; Return value:  Size  Location     Type
 29828 ;;                  1    wreg      enum E10442
 29829 ;; Registers used:
 29830 ;;		wreg, status,2
 29831 ;; Tracked objects:
 29832 ;;		On entry : 3F/2
 29833 ;;		On exit  : 3F/2
 29834 ;;		Unchanged: 0/0
 29835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29840 ;;Total ram usage:        0 bytes
 29841 ;; Hardware stack levels used: 1
 29842 ;; Hardware stack levels required when called: 4
 29843 ;; This function calls:
 29844 ;;		Nothing
 29845 ;; This function is called by:
 29846 ;;		_I2C1_MasterFsm
 29847 ;; This function uses a non-reentrant model
 29848 ;;
 29849                           
 29850                           	psect	text139
 29851  00919E                     __ptext139:
 29852                           	callstack 0
 29853  00919E                     _I2C1_DO_RESET:
 29854                           	callstack 17
 29855                           
 29856                           ; BSR set to: 2
 29857                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 29858                           
 29859                           ;incstack = 0
 29860  00919E  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 29861                           
 29862                           ; BSR set to: 2
 29863                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 29864  0091A0  0E00               	movlw	0
 29865  0091A2  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 29866                           
 29867                           ; BSR set to: 2
 29868                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 29869  0091A4  0E0E               	movlw	14
 29870                           
 29871                           ; BSR set to: 2
 29872  0091A6  0012               	return		;funcret
 29873  0091A8                     __end_of_I2C1_DO_RESET:
 29874                           	callstack 0
 29875                           
 29876 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 29877 ;; Defined at:
 29878 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 29879 ;; Parameters:    Size  Location     Type
 29880 ;;		None
 29881 ;; Auto vars:     Size  Location     Type
 29882 ;;		None
 29883 ;; Return value:  Size  Location     Type
 29884 ;;                  1    wreg      enum E10442
 29885 ;; Registers used:
 29886 ;;		wreg, cstack
 29887 ;; Tracked objects:
 29888 ;;		On entry : 0/2
 29889 ;;		On exit  : 0/0
 29890 ;;		Unchanged: 0/0
 29891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29896 ;;Total ram usage:        0 bytes
 29897 ;; Hardware stack levels used: 1
 29898 ;; Hardware stack levels required when called: 5
 29899 ;; This function calls:
 29900 ;;		_I2C1_MasterSendNack
 29901 ;; This function is called by:
 29902 ;;		_I2C1_DO_RX
 29903 ;;		_I2C1_MasterFsm
 29904 ;; This function uses a non-reentrant model
 29905 ;;
 29906                           
 29907                           	psect	text140
 29908  0091CC                     __ptext140:
 29909                           	callstack 0
 29910  0091CC                     _I2C1_DO_RX_NACK_RESTART:
 29911                           	callstack 16
 29912                           
 29913                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 29914                           
 29915                           ; BSR set to: 2
 29916                           ;incstack = 0
 29917  0091CC  EC12  F049         	call	_I2C1_MasterSendNack	;wreg free
 29918                           
 29919                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 29920  0091D0  0E09               	movlw	9
 29921  0091D2  0012               	return		;funcret
 29922  0091D4                     __end_of_I2C1_DO_RX_NACK_RESTART:
 29923                           	callstack 0
 29924                           
 29925 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 29926 ;; Defined at:
 29927 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 29928 ;; Parameters:    Size  Location     Type
 29929 ;;		None
 29930 ;; Auto vars:     Size  Location     Type
 29931 ;;		None
 29932 ;; Return value:  Size  Location     Type
 29933 ;;                  1    wreg      enum E10442
 29934 ;; Registers used:
 29935 ;;		wreg, cstack
 29936 ;; Tracked objects:
 29937 ;;		On entry : 0/2
 29938 ;;		On exit  : 0/0
 29939 ;;		Unchanged: 0/0
 29940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29945 ;;Total ram usage:        0 bytes
 29946 ;; Hardware stack levels used: 1
 29947 ;; Hardware stack levels required when called: 5
 29948 ;; This function calls:
 29949 ;;		_I2C1_MasterSendNack
 29950 ;; This function is called by:
 29951 ;;		_I2C1_DO_RX
 29952 ;;		_I2C1_MasterFsm
 29953 ;; This function uses a non-reentrant model
 29954 ;;
 29955                           
 29956                           	psect	text141
 29957  0091D4                     __ptext141:
 29958                           	callstack 0
 29959  0091D4                     _I2C1_DO_RX_NACK_STOP:
 29960                           	callstack 16
 29961                           
 29962                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 29963                           
 29964                           ;incstack = 0
 29965  0091D4  EC12  F049         	call	_I2C1_MasterSendNack	;wreg free
 29966                           
 29967                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 29968  0091D8  0E0A               	movlw	10
 29969  0091DA  0012               	return		;funcret
 29970  0091DC                     __end_of_I2C1_DO_RX_NACK_STOP:
 29971                           	callstack 0
 29972                           
 29973 ;; *************** function _I2C1_DO_RX_ACK *****************
 29974 ;; Defined at:
 29975 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 29976 ;; Parameters:    Size  Location     Type
 29977 ;;		None
 29978 ;; Auto vars:     Size  Location     Type
 29979 ;;		None
 29980 ;; Return value:  Size  Location     Type
 29981 ;;                  1    wreg      enum E10442
 29982 ;; Registers used:
 29983 ;;		wreg, cstack
 29984 ;; Tracked objects:
 29985 ;;		On entry : 3F/2
 29986 ;;		On exit  : 3F/2
 29987 ;;		Unchanged: 3F/0
 29988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29993 ;;Total ram usage:        0 bytes
 29994 ;; Hardware stack levels used: 1
 29995 ;; Hardware stack levels required when called: 5
 29996 ;; This function calls:
 29997 ;;		_I2C1_MasterSendAck
 29998 ;; This function is called by:
 29999 ;;		_I2C1_MasterFsm
 30000 ;; This function uses a non-reentrant model
 30001 ;;
 30002                           
 30003                           	psect	text142
 30004  0091DC                     __ptext142:
 30005                           	callstack 0
 30006  0091DC                     _I2C1_DO_RX_ACK:
 30007                           	callstack 16
 30008                           
 30009                           ; BSR set to: 2
 30010                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 30011                           
 30012                           ;incstack = 0
 30013  0091DC  EC0F  F049         	call	_I2C1_MasterSendAck	;wreg free
 30014                           
 30015                           ; BSR set to: 2
 30016                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 30017  0091E0  0E05               	movlw	5
 30018                           
 30019                           ; BSR set to: 2
 30020  0091E2  0012               	return		;funcret
 30021  0091E4                     __end_of_I2C1_DO_RX_ACK:
 30022                           	callstack 0
 30023                           
 30024 ;; *************** function _I2C1_DO_SEND_STOP *****************
 30025 ;; Defined at:
 30026 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 30027 ;; Parameters:    Size  Location     Type
 30028 ;;		None
 30029 ;; Auto vars:     Size  Location     Type
 30030 ;;		None
 30031 ;; Return value:  Size  Location     Type
 30032 ;;                  1    wreg      enum E10442
 30033 ;; Registers used:
 30034 ;;		wreg, cstack
 30035 ;; Tracked objects:
 30036 ;;		On entry : 0/2
 30037 ;;		On exit  : 0/0
 30038 ;;		Unchanged: 0/0
 30039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30044 ;;Total ram usage:        0 bytes
 30045 ;; Hardware stack levels used: 1
 30046 ;; Hardware stack levels required when called: 5
 30047 ;; This function calls:
 30048 ;;		_I2C1_MasterStop
 30049 ;; This function is called by:
 30050 ;;		_I2C1_DO_TX
 30051 ;;		_I2C1_DO_TX_EMPTY
 30052 ;;		_I2C1_DO_ADDRESS_NACK
 30053 ;;		_I2C1_MasterFsm
 30054 ;; This function uses a non-reentrant model
 30055 ;;
 30056                           
 30057                           	psect	text143
 30058  0091E4                     __ptext143:
 30059                           	callstack 0
 30060  0091E4                     _I2C1_DO_SEND_STOP:
 30061                           	callstack 15
 30062                           
 30063                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 30064                           
 30065                           ; BSR set to: 2
 30066                           ;incstack = 0
 30067  0091E4  EC2D  F049         	call	_I2C1_MasterStop	;wreg free
 30068                           
 30069                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 30070  0091E8  0E00               	movlw	0
 30071  0091EA  0012               	return		;funcret
 30072  0091EC                     __end_of_I2C1_DO_SEND_STOP:
 30073                           	callstack 0
 30074                           
 30075 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 30076 ;; Defined at:
 30077 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 30078 ;; Parameters:    Size  Location     Type
 30079 ;;		None
 30080 ;; Auto vars:     Size  Location     Type
 30081 ;;		None
 30082 ;; Return value:  Size  Location     Type
 30083 ;;                  1    wreg      enum E10442
 30084 ;; Registers used:
 30085 ;;		wreg, cstack
 30086 ;; Tracked objects:
 30087 ;;		On entry : 0/2
 30088 ;;		On exit  : 0/0
 30089 ;;		Unchanged: 0/0
 30090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30095 ;;Total ram usage:        0 bytes
 30096 ;; Hardware stack levels used: 1
 30097 ;; Hardware stack levels required when called: 5
 30098 ;; This function calls:
 30099 ;;		_I2C1_MasterEnableRestart
 30100 ;; This function is called by:
 30101 ;;		_I2C1_DO_TX_EMPTY
 30102 ;;		_I2C1_DO_ADDRESS_NACK
 30103 ;;		_I2C1_MasterFsm
 30104 ;; This function uses a non-reentrant model
 30105 ;;
 30106                           
 30107                           	psect	text144
 30108  0091EC                     __ptext144:
 30109                           	callstack 0
 30110  0091EC                     _I2C1_DO_SEND_RESTART:
 30111                           	callstack 15
 30112                           
 30113                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 30114                           
 30115                           ;incstack = 0
 30116  0091EC  EC2F  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30117                           
 30118                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 30119  0091F0  0E01               	movlw	1
 30120  0091F2  0012               	return		;funcret
 30121  0091F4                     __end_of_I2C1_DO_SEND_RESTART:
 30122                           	callstack 0
 30123                           
 30124 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 30125 ;; Defined at:
 30126 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 30127 ;; Parameters:    Size  Location     Type
 30128 ;;		None
 30129 ;; Auto vars:     Size  Location     Type
 30130 ;;		None
 30131 ;; Return value:  Size  Location     Type
 30132 ;;                  1    wreg      enum E10442
 30133 ;; Registers used:
 30134 ;;		wreg, cstack
 30135 ;; Tracked objects:
 30136 ;;		On entry : 0/2
 30137 ;;		On exit  : 0/0
 30138 ;;		Unchanged: 0/0
 30139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30144 ;;Total ram usage:        0 bytes
 30145 ;; Hardware stack levels used: 1
 30146 ;; Hardware stack levels required when called: 5
 30147 ;; This function calls:
 30148 ;;		_I2C1_MasterEnableRestart
 30149 ;; This function is called by:
 30150 ;;		_I2C1_DO_TX
 30151 ;;		_I2C1_MasterFsm
 30152 ;; This function uses a non-reentrant model
 30153 ;;
 30154                           
 30155                           	psect	text145
 30156  0091F4                     __ptext145:
 30157                           	callstack 0
 30158  0091F4                     _I2C1_DO_SEND_RESTART_WRITE:
 30159                           	callstack 15
 30160                           
 30161                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 30162                           
 30163                           ;incstack = 0
 30164  0091F4  EC2F  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30165                           
 30166                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 30167  0091F8  0E02               	movlw	2
 30168  0091FA  0012               	return		;funcret
 30169  0091FC                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 30170                           	callstack 0
 30171                           
 30172 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 30173 ;; Defined at:
 30174 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 30175 ;; Parameters:    Size  Location     Type
 30176 ;;		None
 30177 ;; Auto vars:     Size  Location     Type
 30178 ;;		None
 30179 ;; Return value:  Size  Location     Type
 30180 ;;                  1    wreg      enum E10442
 30181 ;; Registers used:
 30182 ;;		wreg, cstack
 30183 ;; Tracked objects:
 30184 ;;		On entry : 0/2
 30185 ;;		On exit  : 0/0
 30186 ;;		Unchanged: 0/0
 30187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30192 ;;Total ram usage:        0 bytes
 30193 ;; Hardware stack levels used: 1
 30194 ;; Hardware stack levels required when called: 5
 30195 ;; This function calls:
 30196 ;;		_I2C1_MasterEnableRestart
 30197 ;; This function is called by:
 30198 ;;		_I2C1_DO_TX
 30199 ;;		_I2C1_MasterFsm
 30200 ;; This function uses a non-reentrant model
 30201 ;;
 30202                           
 30203                           	psect	text146
 30204  0091FC                     __ptext146:
 30205                           	callstack 0
 30206  0091FC                     _I2C1_DO_SEND_RESTART_READ:
 30207                           	callstack 15
 30208                           
 30209                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 30210                           
 30211                           ;incstack = 0
 30212  0091FC  EC2F  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30213                           
 30214                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 30215  009200  0E01               	movlw	1
 30216  009202  0012               	return		;funcret
 30217  009204                     __end_of_I2C1_DO_SEND_RESTART_READ:
 30218                           	callstack 0
 30219                           
 30220 ;; *************** function _I2C1_DO_RCEN *****************
 30221 ;; Defined at:
 30222 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 30223 ;; Parameters:    Size  Location     Type
 30224 ;;		None
 30225 ;; Auto vars:     Size  Location     Type
 30226 ;;		None
 30227 ;; Return value:  Size  Location     Type
 30228 ;;                  1    wreg      enum E10442
 30229 ;; Registers used:
 30230 ;;		wreg, cstack
 30231 ;; Tracked objects:
 30232 ;;		On entry : 3F/2
 30233 ;;		On exit  : 3F/2
 30234 ;;		Unchanged: 0/0
 30235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30240 ;;Total ram usage:        0 bytes
 30241 ;; Hardware stack levels used: 1
 30242 ;; Hardware stack levels required when called: 5
 30243 ;; This function calls:
 30244 ;;		_I2C1_MasterStartRx
 30245 ;; This function is called by:
 30246 ;;		_I2C1_MasterFsm
 30247 ;; This function uses a non-reentrant model
 30248 ;;
 30249                           
 30250                           	psect	text147
 30251  0091A8                     __ptext147:
 30252                           	callstack 0
 30253  0091A8                     _I2C1_DO_RCEN:
 30254                           	callstack 16
 30255                           
 30256                           ; BSR set to: 2
 30257                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 30258                           
 30259                           ;incstack = 0
 30260  0091A8  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30261                           
 30262                           ; BSR set to: 2
 30263                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 30264  0091AA  EC27  F049         	call	_I2C1_MasterStartRx	;wreg free
 30265                           
 30266                           ; BSR set to: 2
 30267                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 30268  0091AE  0E04               	movlw	4
 30269                           
 30270                           ; BSR set to: 2
 30271  0091B0  0012               	return		;funcret
 30272  0091B2                     __end_of_I2C1_DO_RCEN:
 30273                           	callstack 0
 30274                           
 30275 ;; *************** function _I2C1_DO_RX *****************
 30276 ;; Defined at:
 30277 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 30278 ;; Parameters:    Size  Location     Type
 30279 ;;		None
 30280 ;; Auto vars:     Size  Location     Type
 30281 ;;		None
 30282 ;; Return value:  Size  Location     Type
 30283 ;;                  1    wreg      enum E10442
 30284 ;; Registers used:
 30285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30286 ;; Tracked objects:
 30287 ;;		On entry : 3F/2
 30288 ;;		On exit  : 0/0
 30289 ;;		Unchanged: 0/0
 30290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30295 ;;Total ram usage:        2 bytes
 30296 ;; Hardware stack levels used: 1
 30297 ;; Hardware stack levels required when called: 7
 30298 ;; This function calls:
 30299 ;;		Absolute function
 30300 ;;		_I2C1_CallbackReturnReset
 30301 ;;		_I2C1_CallbackReturnStop
 30302 ;;		_I2C1_DO_RX_NACK_RESTART
 30303 ;;		_I2C1_DO_RX_NACK_STOP
 30304 ;;		_I2C1_MasterGetRxData
 30305 ;;		_I2C1_MasterSendAck
 30306 ;;		_rd1RegCompleteHandler
 30307 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30308 ;;		_rd2RegCompleteHandler
 30309 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30310 ;;		_rdBlkRegCompleteHandler
 30311 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30312 ;;		_wr1RegCompleteHandler
 30313 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30314 ;;		_wr2RegCompleteHandler
 30315 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30316 ;; This function is called by:
 30317 ;;		_I2C1_MasterFsm
 30318 ;; This function uses a non-reentrant model
 30319 ;;
 30320                           
 30321                           	psect	text148
 30322  007BF8                     __ptext148:
 30323                           	callstack 0
 30324  007BF8                     _I2C1_DO_RX:
 30325                           	callstack 14
 30326                           
 30327                           ; BSR set to: 2
 30328                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 30329                           
 30330                           ; BSR set to: 2
 30331                           ;incstack = 0
 30332  007BF8  EC25  F049         	call	_I2C1_MasterGetRxData	;wreg free
 30333  007BFC  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 30334  007C00  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 30335  007C04  6EDF               	movwf	indf2,c
 30336                           
 30337                           ; BSR set to: 2
 30338  007C06  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 30339  007C08  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 30340                           
 30341                           ; BSR set to: 2
 30342                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 30343  007C0A  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 30344  007C0C  A0D8               	btfss	status,0,c
 30345  007C0E  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 30346  007C10  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 30347  007C12  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 30348  007C14  B4D8               	btfsc	status,2,c
 30349  007C16  D004               	goto	l690
 30350                           
 30351                           ; BSR set to: 2
 30352                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 30353  007C18  EC0F  F049         	call	_I2C1_MasterSendAck	;wreg free
 30354                           
 30355                           ; BSR set to: 2
 30356                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 30357  007C1C  0E05               	movlw	5
 30358  007C1E  0012               	return	
 30359  007C20                     l690:
 30360                           
 30361                           ; BSR set to: 2
 30362                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 30363  007C20  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30364                           
 30365                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 30366  007C22  D006               	goto	l19098
 30367  007C24                     l19088:
 30368                           
 30369                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 30370  007C24  ECE6  F048         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 30371  007C28  0012               	return	
 30372  007C2A                     l19092:
 30373                           
 30374                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 30375  007C2A  ECEA  F048         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 30376  007C2E  0012               	return	
 30377  007C30                     l19098:
 30378                           
 30379                           ; BSR set to: 2
 30380  007C30  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 30381  007C34  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 30382  007C38  D801               	call	u21868
 30383  007C3A  D009               	goto	u21869
 30384  007C3C                     u21868:
 30385  007C3C  0005               	push	
 30386  007C3E  6EFA               	movwf	pclath,c
 30387  007C40  513C               	movf	_I2C1_Status& (0+255),w,b
 30388  007C42  6EFD               	movwf	tosl,c
 30389  007C44  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 30390  007C46  6EFE               	movwf	tosh,c
 30391  007C48  6AFF               	clrf	tosu,c
 30392  007C4A  50FA               	movf	pclath,w,c
 30393  007C4C  0012               	return		;indir
 30394  007C4E                     u21869:
 30395  007C4E  6E1B               	movwf	??_I2C1_DO_RX^0,c
 30396  007C50  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 30397                           
 30398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30399                           ; Switch size 1, requested type "simple"
 30400                           ; Number of cases is 1, Range of values is 0 to 0
 30401                           ; switch strategies available:
 30402                           ; Name         Instructions Cycles
 30403                           ; simple_byte            4     3 (average)
 30404                           ;	Chosen strategy is simple_byte
 30405  007C52  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 30406  007C54  0A00               	xorlw	0	; case 0
 30407  007C56  A4D8               	btfss	status,2,c
 30408  007C58  D7E8               	goto	l19092
 30409                           
 30410                           ; Switch size 1, requested type "simple"
 30411                           ; Number of cases is 4, Range of values is 1 to 4
 30412                           ; switch strategies available:
 30413                           ; Name         Instructions Cycles
 30414                           ; simple_byte           13     7 (average)
 30415                           ;	Chosen strategy is simple_byte
 30416  007C5A  501B               	movf	??_I2C1_DO_RX^0,w,c
 30417  007C5C  0A01               	xorlw	1	; case 1
 30418  007C5E  B4D8               	btfsc	status,2,c
 30419  007C60  D7E4               	goto	l19092
 30420  007C62  0A03               	xorlw	3	; case 2
 30421  007C64  B4D8               	btfsc	status,2,c
 30422  007C66  D7DE               	goto	l19088
 30423  007C68  0A01               	xorlw	1	; case 3
 30424  007C6A  B4D8               	btfsc	status,2,c
 30425  007C6C  D7DB               	goto	l19088
 30426  007C6E  0A07               	xorlw	7	; case 4
 30427  007C70  D7DC               	goto	l19092
 30428  007C72                     __end_of_I2C1_DO_RX:
 30429                           	callstack 0
 30430                           
 30431 ;; *************** function _I2C1_DO_TX *****************
 30432 ;; Defined at:
 30433 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 30434 ;; Parameters:    Size  Location     Type
 30435 ;;		None
 30436 ;; Auto vars:     Size  Location     Type
 30437 ;;		None
 30438 ;; Return value:  Size  Location     Type
 30439 ;;                  1    wreg      enum E10442
 30440 ;; Registers used:
 30441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30442 ;; Tracked objects:
 30443 ;;		On entry : 3F/2
 30444 ;;		On exit  : 0/0
 30445 ;;		Unchanged: 0/0
 30446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30451 ;;Total ram usage:        2 bytes
 30452 ;; Hardware stack levels used: 1
 30453 ;; Hardware stack levels required when called: 7
 30454 ;; This function calls:
 30455 ;;		Absolute function
 30456 ;;		_I2C1_CallbackReturnReset
 30457 ;;		_I2C1_CallbackReturnStop
 30458 ;;		_I2C1_DO_SEND_RESTART_READ
 30459 ;;		_I2C1_DO_SEND_RESTART_WRITE
 30460 ;;		_I2C1_DO_SEND_STOP
 30461 ;;		_I2C1_MasterIsNack
 30462 ;;		_I2C1_MasterSendTxData
 30463 ;;		_rd1RegCompleteHandler
 30464 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30465 ;;		_rd2RegCompleteHandler
 30466 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30467 ;;		_rdBlkRegCompleteHandler
 30468 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30469 ;;		_wr1RegCompleteHandler
 30470 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30471 ;;		_wr2RegCompleteHandler
 30472 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30473 ;; This function is called by:
 30474 ;;		_I2C1_MasterFsm
 30475 ;; This function uses a non-reentrant model
 30476 ;;
 30477                           
 30478                           	psect	text149
 30479  00775A                     __ptext149:
 30480                           	callstack 0
 30481  00775A                     _I2C1_DO_TX:
 30482                           	callstack 14
 30483                           
 30484                           ; BSR set to: 2
 30485                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 30486                           
 30487                           ;incstack = 0
 30488  00775A  EC96  F048         	call	_I2C1_MasterIsNack	;wreg free
 30489  00775E  0900               	iorlw	0
 30490  007760  A4D8               	btfss	status,2,c
 30491  007762  D00A               	goto	l19058
 30492  007764  D02A               	goto	l674
 30493  007766                     l19044:
 30494                           
 30495                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 30496  007766  ECFE  F048         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 30497  00776A  0012               	return	
 30498  00776C                     l19048:
 30499                           
 30500                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 30501  00776C  ECFA  F048         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 30502  007770  0012               	return	
 30503  007772                     l19052:
 30504                           
 30505                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 30506  007772  ECF2  F048         	call	_I2C1_DO_SEND_STOP	;wreg free
 30507  007776  0012               	return	
 30508  007778                     l19058:
 30509                           
 30510                           ; BSR set to: 2
 30511  007778  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 30512  00777C  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 30513  007780  D801               	call	u21838
 30514  007782  D009               	goto	u21839
 30515  007784                     u21838:
 30516  007784  0005               	push	
 30517  007786  6EFA               	movwf	pclath,c
 30518  007788  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 30519  00778A  6EFD               	movwf	tosl,c
 30520  00778C  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 30521  00778E  6EFE               	movwf	tosh,c
 30522  007790  6AFF               	clrf	tosu,c
 30523  007792  50FA               	movf	pclath,w,c
 30524  007794  0012               	return		;indir
 30525  007796                     u21839:
 30526  007796  6E1B               	movwf	??_I2C1_DO_TX^0,c
 30527  007798  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 30528                           
 30529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30530                           ; Switch size 1, requested type "simple"
 30531                           ; Number of cases is 1, Range of values is 0 to 0
 30532                           ; switch strategies available:
 30533                           ; Name         Instructions Cycles
 30534                           ; simple_byte            4     3 (average)
 30535                           ;	Chosen strategy is simple_byte
 30536  00779A  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 30537  00779C  0A00               	xorlw	0	; case 0
 30538  00779E  A4D8               	btfss	status,2,c
 30539  0077A0  D7E8               	goto	l19052
 30540                           
 30541                           ; Switch size 1, requested type "simple"
 30542                           ; Number of cases is 4, Range of values is 1 to 4
 30543                           ; switch strategies available:
 30544                           ; Name         Instructions Cycles
 30545                           ; simple_byte           13     7 (average)
 30546                           ;	Chosen strategy is simple_byte
 30547  0077A2  501B               	movf	??_I2C1_DO_TX^0,w,c
 30548  0077A4  0A01               	xorlw	1	; case 1
 30549  0077A6  B4D8               	btfsc	status,2,c
 30550  0077A8  D7E4               	goto	l19052
 30551  0077AA  0A03               	xorlw	3	; case 2
 30552  0077AC  B4D8               	btfsc	status,2,c
 30553  0077AE  D7DB               	goto	l19044
 30554  0077B0  0A01               	xorlw	1	; case 3
 30555  0077B2  B4D8               	btfsc	status,2,c
 30556  0077B4  D7DB               	goto	l19048
 30557  0077B6  0A07               	xorlw	7	; case 4
 30558  0077B8  D7DC               	goto	l19052
 30559  0077BA                     l674:
 30560                           
 30561                           ; BSR set to: 2
 30562                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 30563  0077BA  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30564                           
 30565                           ; BSR set to: 2
 30566                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 30567  0077BC  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 30568  0077C0  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 30569  0077C4  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 30570  0077C6  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 30571  0077C8  50DF               	movf	indf2,w,c
 30572  0077CA  EC02  F049         	call	_I2C1_MasterSendTxData
 30573                           
 30574                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 30575  0077CE  0102               	movlb	2	; () banked
 30576  0077D0  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 30577  0077D2  A0D8               	btfss	status,0,c
 30578  0077D4  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 30579  0077D6  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 30580  0077D8  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 30581  0077DA  A4D8               	btfss	status,2,c
 30582  0077DC  D002               	goto	l19066
 30583                           
 30584                           ; BSR set to: 2
 30585  0077DE  0E06               	movlw	6
 30586  0077E0  0012               	return	
 30587  0077E2                     l19066:
 30588                           
 30589                           ; BSR set to: 2
 30590  0077E2  0E03               	movlw	3
 30591  0077E4  0012               	return		;funcret
 30592  0077E6                     __end_of_I2C1_DO_TX:
 30593                           	callstack 0
 30594                           
 30595 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 30596 ;; Defined at:
 30597 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 30598 ;; Parameters:    Size  Location     Type
 30599 ;;		None
 30600 ;; Auto vars:     Size  Location     Type
 30601 ;;		None
 30602 ;; Return value:  Size  Location     Type
 30603 ;;                  1    wreg      enum E10442
 30604 ;; Registers used:
 30605 ;;		wreg, status,2, status,0, cstack
 30606 ;; Tracked objects:
 30607 ;;		On entry : 3F/2
 30608 ;;		On exit  : 0/0
 30609 ;;		Unchanged: 0/0
 30610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30615 ;;Total ram usage:        0 bytes
 30616 ;; Hardware stack levels used: 1
 30617 ;; Hardware stack levels required when called: 5
 30618 ;; This function calls:
 30619 ;;		_I2C1_MasterSendTxData
 30620 ;; This function is called by:
 30621 ;;		_I2C1_MasterFsm
 30622 ;; This function uses a non-reentrant model
 30623 ;;
 30624                           
 30625                           	psect	text150
 30626  009110                     __ptext150:
 30627                           	callstack 0
 30628  009110                     _I2C1_DO_SEND_ADR_WRITE:
 30629                           	callstack 16
 30630                           
 30631                           ; BSR set to: 2
 30632                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 30633                           
 30634                           ;incstack = 0
 30635  009110  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 30636                           
 30637                           ; BSR set to: 2
 30638                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 30639  009112  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 30640  009114  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 30641  009116  EC02  F049         	call	_I2C1_MasterSendTxData
 30642                           
 30643                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 30644  00911A  0E03               	movlw	3
 30645  00911C  0012               	return		;funcret
 30646  00911E                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 30647                           	callstack 0
 30648                           
 30649 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 30650 ;; Defined at:
 30651 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 30652 ;; Parameters:    Size  Location     Type
 30653 ;;		None
 30654 ;; Auto vars:     Size  Location     Type
 30655 ;;		None
 30656 ;; Return value:  Size  Location     Type
 30657 ;;                  1    wreg      enum E10442
 30658 ;; Registers used:
 30659 ;;		wreg, status,0, cstack
 30660 ;; Tracked objects:
 30661 ;;		On entry : 3F/2
 30662 ;;		On exit  : 0/0
 30663 ;;		Unchanged: 0/0
 30664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30669 ;;Total ram usage:        0 bytes
 30670 ;; Hardware stack levels used: 1
 30671 ;; Hardware stack levels required when called: 5
 30672 ;; This function calls:
 30673 ;;		_I2C1_MasterSendTxData
 30674 ;; This function is called by:
 30675 ;;		_I2C1_MasterFsm
 30676 ;; This function uses a non-reentrant model
 30677 ;;
 30678                           
 30679                           	psect	text151
 30680  00911E                     __ptext151:
 30681                           	callstack 0
 30682  00911E                     _I2C1_DO_SEND_ADR_READ:
 30683                           	callstack 16
 30684                           
 30685                           ; BSR set to: 2
 30686                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 30687                           
 30688                           ;incstack = 0
 30689  00911E  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 30690                           
 30691                           ; BSR set to: 2
 30692                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 30693  009120  80D8               	bsf	status,0,c
 30694  009122  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 30695  009124  EC02  F049         	call	_I2C1_MasterSendTxData
 30696                           
 30697                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 30698  009128  0E05               	movlw	5
 30699  00912A  0012               	return		;funcret
 30700  00912C                     __end_of_I2C1_DO_SEND_ADR_READ:
 30701                           	callstack 0
 30702                           
 30703 ;; *************** function _I2C1_DO_IDLE *****************
 30704 ;; Defined at:
 30705 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 30706 ;; Parameters:    Size  Location     Type
 30707 ;;		None
 30708 ;; Auto vars:     Size  Location     Type
 30709 ;;		None
 30710 ;; Return value:  Size  Location     Type
 30711 ;;                  1    wreg      enum E10442
 30712 ;; Registers used:
 30713 ;;		wreg, status,2
 30714 ;; Tracked objects:
 30715 ;;		On entry : 3F/2
 30716 ;;		On exit  : 3F/2
 30717 ;;		Unchanged: 0/0
 30718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30723 ;;Total ram usage:        0 bytes
 30724 ;; Hardware stack levels used: 1
 30725 ;; Hardware stack levels required when called: 4
 30726 ;; This function calls:
 30727 ;;		Nothing
 30728 ;; This function is called by:
 30729 ;;		_I2C1_MasterFsm
 30730 ;; This function uses a non-reentrant model
 30731 ;;
 30732                           
 30733                           	psect	text152
 30734  0091B2                     __ptext152:
 30735                           	callstack 0
 30736  0091B2                     _I2C1_DO_IDLE:
 30737                           	callstack 17
 30738                           
 30739                           ; BSR set to: 2
 30740                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 30741                           
 30742                           ;incstack = 0
 30743  0091B2  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30744                           
 30745                           ; BSR set to: 2
 30746                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 30747  0091B4  0E00               	movlw	0
 30748  0091B6  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30749                           
 30750                           ; BSR set to: 2
 30751                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 30752  0091B8  0E0E               	movlw	14
 30753                           
 30754                           ; BSR set to: 2
 30755  0091BA  0012               	return		;funcret
 30756  0091BC                     __end_of_I2C1_DO_IDLE:
 30757                           	callstack 0
 30758                           
 30759 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 30760 ;; Defined at:
 30761 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 30762 ;; Parameters:    Size  Location     Type
 30763 ;;		None
 30764 ;; Auto vars:     Size  Location     Type
 30765 ;;		None
 30766 ;; Return value:  Size  Location     Type
 30767 ;;                  1    wreg      enum E10442
 30768 ;; Registers used:
 30769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30770 ;; Tracked objects:
 30771 ;;		On entry : 3F/2
 30772 ;;		On exit  : 0/0
 30773 ;;		Unchanged: 0/0
 30774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30777 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30778 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30779 ;;Total ram usage:        2 bytes
 30780 ;; Hardware stack levels used: 1
 30781 ;; Hardware stack levels required when called: 7
 30782 ;; This function calls:
 30783 ;;		Absolute function
 30784 ;;		_I2C1_CallbackReturnReset
 30785 ;;		_I2C1_CallbackReturnStop
 30786 ;;		_I2C1_DO_SEND_RESTART
 30787 ;;		_I2C1_DO_SEND_STOP
 30788 ;;		_I2C1_MasterSetIrq
 30789 ;;		_rd1RegCompleteHandler
 30790 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30791 ;;		_rd2RegCompleteHandler
 30792 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30793 ;;		_rdBlkRegCompleteHandler
 30794 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30795 ;;		_wr1RegCompleteHandler
 30796 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30797 ;;		_wr2RegCompleteHandler
 30798 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30799 ;; This function is called by:
 30800 ;;		_I2C1_MasterFsm
 30801 ;; This function uses a non-reentrant model
 30802 ;;
 30803                           
 30804                           	psect	text153
 30805  0081A4                     __ptext153:
 30806                           	callstack 0
 30807  0081A4                     _I2C1_DO_TX_EMPTY:
 30808                           	callstack 14
 30809                           
 30810                           ; BSR set to: 2
 30811                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 30812                           
 30813                           ; BSR set to: 2
 30814                           ;incstack = 0
 30815  0081A4  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30816                           
 30817                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 30818  0081A6  D00A               	goto	l19130
 30819  0081A8                     l19114:
 30820                           
 30821                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 30822  0081A8  ECF6  F048         	call	_I2C1_DO_SEND_RESTART	;wreg free
 30823  0081AC  0012               	return	
 30824  0081AE                     l19118:
 30825                           
 30826                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 30827  0081AE  EC0C  F049         	call	_I2C1_MasterSetIrq	;wreg free
 30828                           
 30829                           ; BSR set to: 14
 30830                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 30831  0081B2  0E03               	movlw	3
 30832  0081B4  0012               	return	
 30833  0081B6                     l19124:
 30834                           
 30835                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 30836  0081B6  ECF2  F048         	call	_I2C1_DO_SEND_STOP	;wreg free
 30837  0081BA  0012               	return	
 30838  0081BC                     l19130:
 30839                           
 30840                           ; BSR set to: 2
 30841  0081BC  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 30842  0081C0  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 30843  0081C4  D801               	call	u21878
 30844  0081C6  D009               	goto	u21879
 30845  0081C8                     u21878:
 30846  0081C8  0005               	push	
 30847  0081CA  6EFA               	movwf	pclath,c
 30848  0081CC  513C               	movf	_I2C1_Status& (0+255),w,b
 30849  0081CE  6EFD               	movwf	tosl,c
 30850  0081D0  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 30851  0081D2  6EFE               	movwf	tosh,c
 30852  0081D4  6AFF               	clrf	tosu,c
 30853  0081D6  50FA               	movf	pclath,w,c
 30854  0081D8  0012               	return		;indir
 30855  0081DA                     u21879:
 30856  0081DA  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 30857  0081DC  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 30858                           
 30859                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30860                           ; Switch size 1, requested type "simple"
 30861                           ; Number of cases is 1, Range of values is 0 to 0
 30862                           ; switch strategies available:
 30863                           ; Name         Instructions Cycles
 30864                           ; simple_byte            4     3 (average)
 30865                           ;	Chosen strategy is simple_byte
 30866  0081DE  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 30867  0081E0  0A00               	xorlw	0	; case 0
 30868  0081E2  A4D8               	btfss	status,2,c
 30869  0081E4  D7E8               	goto	l19124
 30870                           
 30871                           ; Switch size 1, requested type "simple"
 30872                           ; Number of cases is 4, Range of values is 1 to 4
 30873                           ; switch strategies available:
 30874                           ; Name         Instructions Cycles
 30875                           ; simple_byte           13     7 (average)
 30876                           ;	Chosen strategy is simple_byte
 30877  0081E6  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 30878  0081E8  0A01               	xorlw	1	; case 1
 30879  0081EA  B4D8               	btfsc	status,2,c
 30880  0081EC  D7E4               	goto	l19124
 30881  0081EE  0A03               	xorlw	3	; case 2
 30882  0081F0  B4D8               	btfsc	status,2,c
 30883  0081F2  D7DA               	goto	l19114
 30884  0081F4  0A01               	xorlw	1	; case 3
 30885  0081F6  B4D8               	btfsc	status,2,c
 30886  0081F8  D7D7               	goto	l19114
 30887  0081FA  0A07               	xorlw	7	; case 4
 30888  0081FC  B4D8               	btfsc	status,2,c
 30889  0081FE  D7D7               	goto	l19118
 30890  008200  D7DA               	goto	l19124
 30891  008202                     __end_of_I2C1_DO_TX_EMPTY:
 30892                           	callstack 0
 30893                           
 30894 ;; *************** function _I2C1_MasterSetIrq *****************
 30895 ;; Defined at:
 30896 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 30897 ;; Parameters:    Size  Location     Type
 30898 ;;		None
 30899 ;; Auto vars:     Size  Location     Type
 30900 ;;		None
 30901 ;; Return value:  Size  Location     Type
 30902 ;;                  1    wreg      void 
 30903 ;; Registers used:
 30904 ;;		None
 30905 ;; Tracked objects:
 30906 ;;		On entry : 0/2
 30907 ;;		On exit  : 3F/E
 30908 ;;		Unchanged: 0/0
 30909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30914 ;;Total ram usage:        0 bytes
 30915 ;; Hardware stack levels used: 1
 30916 ;; Hardware stack levels required when called: 4
 30917 ;; This function calls:
 30918 ;;		Nothing
 30919 ;; This function is called by:
 30920 ;;		_I2C1_DO_TX_EMPTY
 30921 ;; This function uses a non-reentrant model
 30922 ;;
 30923                           
 30924                           	psect	text154
 30925  009218                     __ptext154:
 30926                           	callstack 0
 30927  009218                     _I2C1_MasterSetIrq:
 30928                           	callstack 16
 30929                           
 30930                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 30931                           
 30932                           ;incstack = 0
 30933  009218  010E               	movlb	14	; () banked
 30934  00921A  81CD               	bsf	205,0,b	;volatile
 30935                           
 30936                           ; BSR set to: 14
 30937  00921C  0012               	return		;funcret
 30938  00921E                     __end_of_I2C1_MasterSetIrq:
 30939                           	callstack 0
 30940                           
 30941 ;; *************** function _I2C1_MasterIsNack *****************
 30942 ;; Defined at:
 30943 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 30944 ;; Parameters:    Size  Location     Type
 30945 ;;		None
 30946 ;; Auto vars:     Size  Location     Type
 30947 ;;		None
 30948 ;; Return value:  Size  Location     Type
 30949 ;;                  1    wreg      _Bool 
 30950 ;; Registers used:
 30951 ;;		wreg
 30952 ;; Tracked objects:
 30953 ;;		On entry : 3F/2
 30954 ;;		On exit  : 3F/2
 30955 ;;		Unchanged: 3F/0
 30956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30961 ;;Total ram usage:        0 bytes
 30962 ;; Hardware stack levels used: 1
 30963 ;; Hardware stack levels required when called: 4
 30964 ;; This function calls:
 30965 ;;		Nothing
 30966 ;; This function is called by:
 30967 ;;		_I2C1_MasterFsm
 30968 ;;		_I2C1_DO_TX
 30969 ;; This function uses a non-reentrant model
 30970 ;;
 30971                           
 30972                           	psect	text155
 30973  00912C                     __ptext155:
 30974                           	callstack 0
 30975  00912C                     _I2C1_MasterIsNack:
 30976                           	callstack 17
 30977                           
 30978                           ; BSR set to: 2
 30979                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 30980                           
 30981                           ; BSR set to: 14
 30982                           ;incstack = 0
 30983  00912C  AC97               	btfss	151,6,c	;volatile
 30984  00912E  D002               	goto	u21810
 30985  009130  0E01               	movlw	1
 30986  009132  0012               	return	
 30987  009134                     u21810:
 30988  009134  0E00               	movlw	0
 30989                           
 30990                           ; BSR set to: 2
 30991  009136  0012               	return		;funcret
 30992  009138                     __end_of_I2C1_MasterIsNack:
 30993                           	callstack 0
 30994                           
 30995 ;; *************** function _I2C1_MasterSendTxData *****************
 30996 ;; Defined at:
 30997 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 30998 ;; Parameters:    Size  Location     Type
 30999 ;;  data            1    wreg     unsigned char 
 31000 ;; Auto vars:     Size  Location     Type
 31001 ;;  data            1   15[COMRAM] unsigned char 
 31002 ;; Return value:  Size  Location     Type
 31003 ;;                  1    wreg      void 
 31004 ;; Registers used:
 31005 ;;		wreg
 31006 ;; Tracked objects:
 31007 ;;		On entry : 3F/2
 31008 ;;		On exit  : 0/0
 31009 ;;		Unchanged: 0/0
 31010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31015 ;;Total ram usage:        1 bytes
 31016 ;; Hardware stack levels used: 1
 31017 ;; Hardware stack levels required when called: 4
 31018 ;; This function calls:
 31019 ;;		Nothing
 31020 ;; This function is called by:
 31021 ;;		_I2C1_DO_SEND_ADR_READ
 31022 ;;		_I2C1_DO_SEND_ADR_WRITE
 31023 ;;		_I2C1_DO_TX
 31024 ;; This function uses a non-reentrant model
 31025 ;;
 31026                           
 31027                           	psect	text156
 31028  009204                     __ptext156:
 31029                           	callstack 0
 31030  009204                     _I2C1_MasterSendTxData:
 31031                           	callstack 16
 31032                           
 31033                           ; BSR set to: 2
 31034                           ;incstack = 0
 31035                           ;I2C1_MasterSendTxData@data stored from wreg
 31036  009204  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 31037                           
 31038                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 31039  009206  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 31040  00920A  0012               	return		;funcret
 31041  00920C                     __end_of_I2C1_MasterSendTxData:
 31042                           	callstack 0
 31043                           
 31044 ;; *************** function _I2C1_MasterSendAck *****************
 31045 ;; Defined at:
 31046 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 31047 ;; Parameters:    Size  Location     Type
 31048 ;;		None
 31049 ;; Auto vars:     Size  Location     Type
 31050 ;;		None
 31051 ;; Return value:  Size  Location     Type
 31052 ;;                  1    wreg      void 
 31053 ;; Registers used:
 31054 ;;		None
 31055 ;; Tracked objects:
 31056 ;;		On entry : 3F/2
 31057 ;;		On exit  : 3F/2
 31058 ;;		Unchanged: 3F/0
 31059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31064 ;;Total ram usage:        0 bytes
 31065 ;; Hardware stack levels used: 1
 31066 ;; Hardware stack levels required when called: 4
 31067 ;; This function calls:
 31068 ;;		Nothing
 31069 ;; This function is called by:
 31070 ;;		_I2C1_DO_RX
 31071 ;;		_I2C1_DO_RX_ACK
 31072 ;; This function uses a non-reentrant model
 31073 ;;
 31074                           
 31075                           	psect	text157
 31076  00921E                     __ptext157:
 31077                           	callstack 0
 31078  00921E                     _I2C1_MasterSendAck:
 31079                           	callstack 16
 31080                           
 31081                           ; BSR set to: 2
 31082                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 31083                           
 31084                           ;incstack = 0
 31085  00921E  9A97               	bcf	151,5,c	;volatile
 31086                           
 31087                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 31088  009220  8897               	bsf	151,4,c	;volatile
 31089                           
 31090                           ; BSR set to: 2
 31091  009222  0012               	return		;funcret
 31092  009224                     __end_of_I2C1_MasterSendAck:
 31093                           	callstack 0
 31094                           
 31095 ;; *************** function _I2C1_MasterGetRxData *****************
 31096 ;; Defined at:
 31097 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 31098 ;; Parameters:    Size  Location     Type
 31099 ;;		None
 31100 ;; Auto vars:     Size  Location     Type
 31101 ;;		None
 31102 ;; Return value:  Size  Location     Type
 31103 ;;                  1    wreg      unsigned char 
 31104 ;; Registers used:
 31105 ;;		wreg, status,2
 31106 ;; Tracked objects:
 31107 ;;		On entry : 3F/2
 31108 ;;		On exit  : 3F/2
 31109 ;;		Unchanged: 3F/0
 31110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31115 ;;Total ram usage:        0 bytes
 31116 ;; Hardware stack levels used: 1
 31117 ;; Hardware stack levels required when called: 4
 31118 ;; This function calls:
 31119 ;;		Nothing
 31120 ;; This function is called by:
 31121 ;;		_I2C1_DO_RX
 31122 ;; This function uses a non-reentrant model
 31123 ;;
 31124                           
 31125                           	psect	text158
 31126  00924A                     __ptext158:
 31127                           	callstack 0
 31128  00924A                     _I2C1_MasterGetRxData:
 31129                           	callstack 16
 31130                           
 31131                           ; BSR set to: 2
 31132                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 31133                           
 31134                           ; BSR set to: 2
 31135                           ;incstack = 0
 31136  00924A  5092               	movf	146,w,c	;volatile
 31137                           
 31138                           ; BSR set to: 2
 31139  00924C  0012               	return		;funcret
 31140  00924E                     __end_of_I2C1_MasterGetRxData:
 31141                           	callstack 0
 31142                           
 31143 ;; *************** function _I2C1_MasterSendNack *****************
 31144 ;; Defined at:
 31145 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 31146 ;; Parameters:    Size  Location     Type
 31147 ;;		None
 31148 ;; Auto vars:     Size  Location     Type
 31149 ;;		None
 31150 ;; Return value:  Size  Location     Type
 31151 ;;                  1    wreg      void 
 31152 ;; Registers used:
 31153 ;;		None
 31154 ;; Tracked objects:
 31155 ;;		On entry : 0/2
 31156 ;;		On exit  : 0/0
 31157 ;;		Unchanged: 0/0
 31158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31163 ;;Total ram usage:        0 bytes
 31164 ;; Hardware stack levels used: 1
 31165 ;; Hardware stack levels required when called: 4
 31166 ;; This function calls:
 31167 ;;		Nothing
 31168 ;; This function is called by:
 31169 ;;		_I2C1_DO_RX_NACK_STOP
 31170 ;;		_I2C1_DO_RX_NACK_RESTART
 31171 ;; This function uses a non-reentrant model
 31172 ;;
 31173                           
 31174                           	psect	text159
 31175  009224                     __ptext159:
 31176                           	callstack 0
 31177  009224                     _I2C1_MasterSendNack:
 31178                           	callstack 16
 31179                           
 31180                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 31181                           
 31182                           ; BSR set to: 2
 31183                           ;incstack = 0
 31184  009224  8A97               	bsf	151,5,c	;volatile
 31185                           
 31186                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 31187  009226  8897               	bsf	151,4,c	;volatile
 31188  009228  0012               	return		;funcret
 31189  00922A                     __end_of_I2C1_MasterSendNack:
 31190                           	callstack 0
 31191                           
 31192 ;; *************** function _I2C1_MasterStartRx *****************
 31193 ;; Defined at:
 31194 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 31195 ;; Parameters:    Size  Location     Type
 31196 ;;		None
 31197 ;; Auto vars:     Size  Location     Type
 31198 ;;		None
 31199 ;; Return value:  Size  Location     Type
 31200 ;;                  1    wreg      void 
 31201 ;; Registers used:
 31202 ;;		None
 31203 ;; Tracked objects:
 31204 ;;		On entry : 3F/2
 31205 ;;		On exit  : 3F/2
 31206 ;;		Unchanged: 3F/0
 31207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31212 ;;Total ram usage:        0 bytes
 31213 ;; Hardware stack levels used: 1
 31214 ;; Hardware stack levels required when called: 4
 31215 ;; This function calls:
 31216 ;;		Nothing
 31217 ;; This function is called by:
 31218 ;;		_I2C1_DO_RCEN
 31219 ;; This function uses a non-reentrant model
 31220 ;;
 31221                           
 31222                           	psect	text160
 31223  00924E                     __ptext160:
 31224                           	callstack 0
 31225  00924E                     _I2C1_MasterStartRx:
 31226                           	callstack 16
 31227                           
 31228                           ; BSR set to: 2
 31229                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 31230                           
 31231                           ;incstack = 0
 31232  00924E  8697               	bsf	151,3,c	;volatile
 31233                           
 31234                           ; BSR set to: 2
 31235  009250  0012               	return		;funcret
 31236  009252                     __end_of_I2C1_MasterStartRx:
 31237                           	callstack 0
 31238                           
 31239 ;; *************** function _I2C1_CallbackReturnReset *****************
 31240 ;; Defined at:
 31241 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 31242 ;; Parameters:    Size  Location     Type
 31243 ;;  funPtr          2   24[COMRAM] PTR void 
 31244 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31245 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31246 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31247 ;; Auto vars:     Size  Location     Type
 31248 ;;		None
 31249 ;; Return value:  Size  Location     Type
 31250 ;;                  1    wreg      enum E360
 31251 ;; Registers used:
 31252 ;;		wreg
 31253 ;; Tracked objects:
 31254 ;;		On entry : 3F/2
 31255 ;;		On exit  : 3F/2
 31256 ;;		Unchanged: 3F/0
 31257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31262 ;;Total ram usage:        2 bytes
 31263 ;; Hardware stack levels used: 1
 31264 ;; Hardware stack levels required when called: 4
 31265 ;; This function calls:
 31266 ;;		Nothing
 31267 ;; This function is called by:
 31268 ;;		_I2C1_Open
 31269 ;;		_I2C1_DO_TX
 31270 ;;		_I2C1_DO_RX
 31271 ;;		_I2C1_DO_TX_EMPTY
 31272 ;;		_I2C1_DO_ADDRESS_NACK
 31273 ;; This function uses a non-reentrant model
 31274 ;;
 31275                           
 31276                           	psect	text161
 31277  009252                     __ptext161:
 31278                           	callstack 0
 31279  009252                     _I2C1_CallbackReturnReset:
 31280                           	callstack 16
 31281                           
 31282                           ; BSR set to: 2
 31283                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 31284                           
 31285                           ; BSR set to: 2
 31286                           ;incstack = 0
 31287  009252  0E05               	movlw	5
 31288                           
 31289                           ; BSR set to: 2
 31290  009254  0012               	return		;funcret
 31291  009256                     __end_of_I2C1_CallbackReturnReset:
 31292                           	callstack 0
 31293                           
 31294 ;; *************** function _I2C1_CallbackReturnStop *****************
 31295 ;; Defined at:
 31296 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 31297 ;; Parameters:    Size  Location     Type
 31298 ;;  funPtr          2   24[COMRAM] PTR void 
 31299 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31300 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31301 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31302 ;; Auto vars:     Size  Location     Type
 31303 ;;		None
 31304 ;; Return value:  Size  Location     Type
 31305 ;;                  1    wreg      enum E360
 31306 ;; Registers used:
 31307 ;;		wreg
 31308 ;; Tracked objects:
 31309 ;;		On entry : 3F/2
 31310 ;;		On exit  : 3F/2
 31311 ;;		Unchanged: 3F/0
 31312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31317 ;;Total ram usage:        2 bytes
 31318 ;; Hardware stack levels used: 1
 31319 ;; Hardware stack levels required when called: 4
 31320 ;; This function calls:
 31321 ;;		Nothing
 31322 ;; This function is called by:
 31323 ;;		_I2C1_Open
 31324 ;;		_I2C1_SetCallback
 31325 ;;		_I2C1_DO_TX
 31326 ;;		_I2C1_DO_RX
 31327 ;;		_I2C1_DO_TX_EMPTY
 31328 ;;		_I2C1_DO_ADDRESS_NACK
 31329 ;; This function uses a non-reentrant model
 31330 ;;
 31331                           
 31332                           	psect	text162
 31333  009256                     __ptext162:
 31334                           	callstack 0
 31335  009256                     _I2C1_CallbackReturnStop:
 31336                           	callstack 16
 31337                           
 31338                           ; BSR set to: 2
 31339                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 31340                           
 31341                           ; BSR set to: 2
 31342                           ;incstack = 0
 31343  009256  0E01               	movlw	1
 31344                           
 31345                           ; BSR set to: 2
 31346  009258  0012               	return		;funcret
 31347  00925A                     __end_of_I2C1_CallbackReturnStop:
 31348                           	callstack 0
 31349                           
 31350 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 31351 ;; Defined at:
 31352 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31353 ;; Parameters:    Size  Location     Type
 31354 ;;  ptr             2   24[COMRAM] PTR void 
 31355 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31356 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31357 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31358 ;; Auto vars:     Size  Location     Type
 31359 ;;		None
 31360 ;; Return value:  Size  Location     Type
 31361 ;;                  1    wreg      enum E527
 31362 ;; Registers used:
 31363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31364 ;; Tracked objects:
 31365 ;;		On entry : 3F/2
 31366 ;;		On exit  : 0/0
 31367 ;;		Unchanged: 0/0
 31368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31372 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31373 ;;Total ram usage:        2 bytes
 31374 ;; Hardware stack levels used: 1
 31375 ;; Hardware stack levels required when called: 6
 31376 ;; This function calls:
 31377 ;;		_I2C1_SetBuffer
 31378 ;;		_I2C1_SetDataCompleteCallback
 31379 ;; This function is called by:
 31380 ;;		_I2C1_DO_TX
 31381 ;;		_I2C1_DO_RX
 31382 ;;		_I2C1_DO_TX_EMPTY
 31383 ;;		_I2C1_DO_ADDRESS_NACK
 31384 ;; This function uses a non-reentrant model
 31385 ;;
 31386                           
 31387                           	psect	text163
 31388  00888E                     __ptext163:
 31389                           	callstack 0
 31390  00888E                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 31391                           	callstack 14
 31392                           
 31393                           ; BSR set to: 2
 31394                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 31395                           
 31396                           ; BSR set to: 2
 31397                           ;incstack = 0
 31398  00888E  EE20 F002          	lfsr	2,2
 31399  008892  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 31400  008894  26D9               	addwf	fsr2l,f,c
 31401  008896  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 31402  008898  22DA               	addwfc	fsr2h,f,c
 31403  00889A  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 31404  00889E  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 31405  0088A2  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 31406  0088A6  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 31407  0088AA  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 31408  0088AE  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 31409  0088B2  ECE0  F047         	call	_I2C1_SetBuffer	;wreg free
 31410                           
 31411                           ; BSR set to: 2
 31412                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31413  0088B6  0E00               	movlw	0
 31414  0088B8  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31415  0088BA  0E00               	movlw	0
 31416  0088BC  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31417  0088BE  0E00               	movlw	0
 31418  0088C0  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31419  0088C2  0E00               	movlw	0
 31420  0088C4  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31421  0088C6  EC1D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31422                           
 31423                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 31424  0088CA  0E02               	movlw	2
 31425  0088CC  0012               	return		;funcret
 31426  0088CE                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 31427                           	callstack 0
 31428                           
 31429 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 31430 ;; Defined at:
 31431 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31432 ;; Parameters:    Size  Location     Type
 31433 ;;  ptr             2   24[COMRAM] PTR void 
 31434 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31435 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31436 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31437 ;; Auto vars:     Size  Location     Type
 31438 ;;		None
 31439 ;; Return value:  Size  Location     Type
 31440 ;;                  1    wreg      enum E527
 31441 ;; Registers used:
 31442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31443 ;; Tracked objects:
 31444 ;;		On entry : 3F/2
 31445 ;;		On exit  : 0/0
 31446 ;;		Unchanged: 0/0
 31447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31451 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31452 ;;Total ram usage:        2 bytes
 31453 ;; Hardware stack levels used: 1
 31454 ;; Hardware stack levels required when called: 6
 31455 ;; This function calls:
 31456 ;;		_I2C1_SetBuffer
 31457 ;;		_I2C1_SetDataCompleteCallback
 31458 ;; This function is called by:
 31459 ;;		_I2C1_DO_TX
 31460 ;;		_I2C1_DO_RX
 31461 ;;		_I2C1_DO_TX_EMPTY
 31462 ;;		_I2C1_DO_ADDRESS_NACK
 31463 ;; This function uses a non-reentrant model
 31464 ;;
 31465                           
 31466                           	psect	text164
 31467  008BA2                     __ptext164:
 31468                           	callstack 0
 31469  008BA2                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 31470                           	callstack 14
 31471                           
 31472                           ; BSR set to: 2
 31473                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 31474                           
 31475                           ;incstack = 0
 31476  008BA2  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 31477  008BA6  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 31478  008BAA  0E00               	movlw	0
 31479  008BAC  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31480  008BAE  0E01               	movlw	1
 31481  008BB0  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31482  008BB2  ECE0  F047         	call	_I2C1_SetBuffer	;wreg free
 31483                           
 31484                           ; BSR set to: 2
 31485                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31486  008BB6  0E00               	movlw	0
 31487  008BB8  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31488  008BBA  0E00               	movlw	0
 31489  008BBC  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31490  008BBE  0E00               	movlw	0
 31491  008BC0  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31492  008BC2  0E00               	movlw	0
 31493  008BC4  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31494  008BC6  EC1D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31495                           
 31496                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 31497  008BCA  0E04               	movlw	4
 31498  008BCC  0012               	return		;funcret
 31499  008BCE                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 31500                           	callstack 0
 31501                           
 31502 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 31503 ;; Defined at:
 31504 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31505 ;; Parameters:    Size  Location     Type
 31506 ;;  ptr             2   24[COMRAM] PTR void 
 31507 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31508 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31509 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31510 ;; Auto vars:     Size  Location     Type
 31511 ;;		None
 31512 ;; Return value:  Size  Location     Type
 31513 ;;                  1    wreg      enum E527
 31514 ;; Registers used:
 31515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31516 ;; Tracked objects:
 31517 ;;		On entry : 3F/2
 31518 ;;		On exit  : 0/0
 31519 ;;		Unchanged: 0/0
 31520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31525 ;;Total ram usage:        2 bytes
 31526 ;; Hardware stack levels used: 1
 31527 ;; Hardware stack levels required when called: 6
 31528 ;; This function calls:
 31529 ;;		_I2C1_SetBuffer
 31530 ;;		_I2C1_SetDataCompleteCallback
 31531 ;; This function is called by:
 31532 ;;		_I2C1_DO_TX
 31533 ;;		_I2C1_DO_RX
 31534 ;;		_I2C1_DO_TX_EMPTY
 31535 ;;		_I2C1_DO_ADDRESS_NACK
 31536 ;; This function uses a non-reentrant model
 31537 ;;
 31538                           
 31539                           	psect	text165
 31540  008BCE                     __ptext165:
 31541                           	callstack 0
 31542  008BCE                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 31543                           	callstack 14
 31544                           
 31545                           ; BSR set to: 2
 31546                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 31547                           
 31548                           ;incstack = 0
 31549  008BCE  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 31550  008BD2  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 31551  008BD6  0E00               	movlw	0
 31552  008BD8  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31553  008BDA  0E02               	movlw	2
 31554  008BDC  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31555  008BDE  ECE0  F047         	call	_I2C1_SetBuffer	;wreg free
 31556                           
 31557                           ; BSR set to: 2
 31558                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31559  008BE2  0E00               	movlw	0
 31560  008BE4  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31561  008BE6  0E00               	movlw	0
 31562  008BE8  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31563  008BEA  0E00               	movlw	0
 31564  008BEC  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31565  008BEE  0E00               	movlw	0
 31566  008BF0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31567  008BF2  EC1D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31568                           
 31569                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 31570  008BF6  0E02               	movlw	2
 31571  008BF8  0012               	return		;funcret
 31572  008BFA                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 31573                           	callstack 0
 31574                           
 31575 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 31576 ;; Defined at:
 31577 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31578 ;; Parameters:    Size  Location     Type
 31579 ;;  ptr             2   24[COMRAM] PTR void 
 31580 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31581 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31582 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31583 ;; Auto vars:     Size  Location     Type
 31584 ;;		None
 31585 ;; Return value:  Size  Location     Type
 31586 ;;                  1    wreg      enum E527
 31587 ;; Registers used:
 31588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31589 ;; Tracked objects:
 31590 ;;		On entry : 3F/2
 31591 ;;		On exit  : 0/0
 31592 ;;		Unchanged: 0/0
 31593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31597 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31598 ;;Total ram usage:        2 bytes
 31599 ;; Hardware stack levels used: 1
 31600 ;; Hardware stack levels required when called: 6
 31601 ;; This function calls:
 31602 ;;		_I2C1_SetBuffer
 31603 ;;		_I2C1_SetDataCompleteCallback
 31604 ;; This function is called by:
 31605 ;;		_I2C1_Read1ByteRegister
 31606 ;;		_I2C1_DO_TX
 31607 ;;		_I2C1_DO_RX
 31608 ;;		_I2C1_DO_TX_EMPTY
 31609 ;;		_I2C1_DO_ADDRESS_NACK
 31610 ;; This function uses a non-reentrant model
 31611 ;;
 31612                           
 31613                           	psect	text166
 31614  008BFA                     __ptext166:
 31615                           	callstack 0
 31616  008BFA                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 31617                           	callstack 14
 31618                           
 31619                           ; BSR set to: 2
 31620                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 31621                           
 31622                           ;incstack = 0
 31623  008BFA  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 31624  008BFE  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 31625  008C02  0E00               	movlw	0
 31626  008C04  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31627  008C06  0E01               	movlw	1
 31628  008C08  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31629  008C0A  ECE0  F047         	call	_I2C1_SetBuffer	;wreg free
 31630                           
 31631                           ; BSR set to: 2
 31632                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31633  008C0E  0E00               	movlw	0
 31634  008C10  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31635  008C12  0E00               	movlw	0
 31636  008C14  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31637  008C16  0E00               	movlw	0
 31638  008C18  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31639  008C1A  0E00               	movlw	0
 31640  008C1C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31641  008C1E  EC1D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31642                           
 31643                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 31644  008C22  0E02               	movlw	2
 31645  008C24  0012               	return		;funcret
 31646  008C26                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 31647                           	callstack 0
 31648                           
 31649 ;; *************** function _rdBlkRegCompleteHandler *****************
 31650 ;; Defined at:
 31651 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31652 ;; Parameters:    Size  Location     Type
 31653 ;;  p               2   24[COMRAM] PTR void 
 31654 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31655 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31656 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31657 ;; Auto vars:     Size  Location     Type
 31658 ;;		None
 31659 ;; Return value:  Size  Location     Type
 31660 ;;                  1    wreg      enum E360
 31661 ;; Registers used:
 31662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31663 ;; Tracked objects:
 31664 ;;		On entry : 3F/2
 31665 ;;		On exit  : 0/0
 31666 ;;		Unchanged: 0/0
 31667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31672 ;;Total ram usage:        2 bytes
 31673 ;; Hardware stack levels used: 1
 31674 ;; Hardware stack levels required when called: 6
 31675 ;; This function calls:
 31676 ;;		_I2C1_SetBuffer
 31677 ;;		_I2C1_SetDataCompleteCallback
 31678 ;; This function is called by:
 31679 ;;		_i2c_readDataBlock
 31680 ;;		_I2C1_DO_TX
 31681 ;;		_I2C1_DO_RX
 31682 ;;		_I2C1_DO_TX_EMPTY
 31683 ;;		_I2C1_DO_ADDRESS_NACK
 31684 ;; This function uses a non-reentrant model
 31685 ;;
 31686                           
 31687                           	psect	text167
 31688  0088CE                     __ptext167:
 31689                           	callstack 0
 31690  0088CE                     _rdBlkRegCompleteHandler:
 31691                           	callstack 14
 31692                           
 31693                           ; BSR set to: 2
 31694                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 31695                           
 31696                           ;incstack = 0
 31697  0088CE  EE20 F002          	lfsr	2,2
 31698  0088D2  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 31699  0088D4  26D9               	addwf	fsr2l,f,c
 31700  0088D6  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 31701  0088D8  22DA               	addwfc	fsr2h,f,c
 31702  0088DA  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 31703  0088DE  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 31704  0088E2  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 31705  0088E6  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 31706  0088EA  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 31707  0088EE  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 31708  0088F2  ECE0  F047         	call	_I2C1_SetBuffer	;wreg free
 31709                           
 31710                           ; BSR set to: 2
 31711                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 31712  0088F6  0E00               	movlw	0
 31713  0088F8  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31714  0088FA  0E00               	movlw	0
 31715  0088FC  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31716  0088FE  0E00               	movlw	0
 31717  008900  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31718  008902  0E00               	movlw	0
 31719  008904  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31720  008906  EC1D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31721                           
 31722                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 31723  00890A  0E02               	movlw	2
 31724  00890C  0012               	return		;funcret
 31725  00890E                     __end_of_rdBlkRegCompleteHandler:
 31726                           	callstack 0
 31727                           
 31728 ;; *************** function _wr2RegCompleteHandler *****************
 31729 ;; Defined at:
 31730 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31731 ;; Parameters:    Size  Location     Type
 31732 ;;  p               2   24[COMRAM] PTR void 
 31733 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31734 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31735 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31736 ;; Auto vars:     Size  Location     Type
 31737 ;;		None
 31738 ;; Return value:  Size  Location     Type
 31739 ;;                  1    wreg      enum E360
 31740 ;; Registers used:
 31741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31742 ;; Tracked objects:
 31743 ;;		On entry : 3F/2
 31744 ;;		On exit  : 0/0
 31745 ;;		Unchanged: 0/0
 31746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31750 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31751 ;;Total ram usage:        2 bytes
 31752 ;; Hardware stack levels used: 1
 31753 ;; Hardware stack levels required when called: 6
 31754 ;; This function calls:
 31755 ;;		_I2C1_SetBuffer
 31756 ;;		_I2C1_SetDataCompleteCallback
 31757 ;; This function is called by:
 31758 ;;		_I2C1_DO_TX
 31759 ;;		_I2C1_DO_RX
 31760 ;;		_I2C1_DO_TX_EMPTY
 31761 ;;		_I2C1_DO_ADDRESS_NACK
 31762 ;; This function uses a non-reentrant model
 31763 ;;
 31764                           
 31765                           	psect	text168
 31766  008C26                     __ptext168:
 31767                           	callstack 0
 31768  008C26                     _wr2RegCompleteHandler:
 31769                           	callstack 14
 31770                           
 31771                           ; BSR set to: 2
 31772                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 31773                           
 31774                           ;incstack = 0
 31775  008C26  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31776  008C2A  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31777  008C2E  0E00               	movlw	0
 31778  008C30  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31779  008C32  0E02               	movlw	2
 31780  008C34  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31781  008C36  ECE0  F047         	call	_I2C1_SetBuffer	;wreg free
 31782                           
 31783                           ; BSR set to: 2
 31784                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 31785  008C3A  0E00               	movlw	0
 31786  008C3C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31787  008C3E  0E00               	movlw	0
 31788  008C40  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31789  008C42  0E00               	movlw	0
 31790  008C44  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31791  008C46  0E00               	movlw	0
 31792  008C48  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31793  008C4A  EC1D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31794                           
 31795                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 31796  008C4E  0E04               	movlw	4
 31797  008C50  0012               	return		;funcret
 31798  008C52                     __end_of_wr2RegCompleteHandler:
 31799                           	callstack 0
 31800                           
 31801 ;; *************** function _rd2RegCompleteHandler *****************
 31802 ;; Defined at:
 31803 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31804 ;; Parameters:    Size  Location     Type
 31805 ;;  p               2   24[COMRAM] PTR void 
 31806 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31807 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31808 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31809 ;; Auto vars:     Size  Location     Type
 31810 ;;		None
 31811 ;; Return value:  Size  Location     Type
 31812 ;;                  1    wreg      enum E360
 31813 ;; Registers used:
 31814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31815 ;; Tracked objects:
 31816 ;;		On entry : 3F/2
 31817 ;;		On exit  : 0/0
 31818 ;;		Unchanged: 0/0
 31819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31824 ;;Total ram usage:        2 bytes
 31825 ;; Hardware stack levels used: 1
 31826 ;; Hardware stack levels required when called: 6
 31827 ;; This function calls:
 31828 ;;		_I2C1_SetBuffer
 31829 ;;		_I2C1_SetDataCompleteCallback
 31830 ;; This function is called by:
 31831 ;;		_I2C1_DO_TX
 31832 ;;		_I2C1_DO_RX
 31833 ;;		_I2C1_DO_TX_EMPTY
 31834 ;;		_I2C1_DO_ADDRESS_NACK
 31835 ;; This function uses a non-reentrant model
 31836 ;;
 31837                           
 31838                           	psect	text169
 31839  008C52                     __ptext169:
 31840                           	callstack 0
 31841  008C52                     _rd2RegCompleteHandler:
 31842                           	callstack 14
 31843                           
 31844                           ; BSR set to: 2
 31845                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 31846                           
 31847                           ;incstack = 0
 31848  008C52  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31849  008C56  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31850  008C5A  0E00               	movlw	0
 31851  008C5C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31852  008C5E  0E02               	movlw	2
 31853  008C60  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31854  008C62  ECE0  F047         	call	_I2C1_SetBuffer	;wreg free
 31855                           
 31856                           ; BSR set to: 2
 31857                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 31858  008C66  0E00               	movlw	0
 31859  008C68  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31860  008C6A  0E00               	movlw	0
 31861  008C6C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31862  008C6E  0E00               	movlw	0
 31863  008C70  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31864  008C72  0E00               	movlw	0
 31865  008C74  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31866  008C76  EC1D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31867                           
 31868                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 31869  008C7A  0E02               	movlw	2
 31870  008C7C  0012               	return		;funcret
 31871  008C7E                     __end_of_rd2RegCompleteHandler:
 31872                           	callstack 0
 31873                           
 31874 ;; *************** function _rd1RegCompleteHandler *****************
 31875 ;; Defined at:
 31876 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31877 ;; Parameters:    Size  Location     Type
 31878 ;;  p               2   24[COMRAM] PTR void 
 31879 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31880 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31881 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31882 ;; Auto vars:     Size  Location     Type
 31883 ;;		None
 31884 ;; Return value:  Size  Location     Type
 31885 ;;                  1    wreg      enum E360
 31886 ;; Registers used:
 31887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31888 ;; Tracked objects:
 31889 ;;		On entry : 3F/2
 31890 ;;		On exit  : 0/0
 31891 ;;		Unchanged: 0/0
 31892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31897 ;;Total ram usage:        2 bytes
 31898 ;; Hardware stack levels used: 1
 31899 ;; Hardware stack levels required when called: 6
 31900 ;; This function calls:
 31901 ;;		_I2C1_SetBuffer
 31902 ;;		_I2C1_SetDataCompleteCallback
 31903 ;; This function is called by:
 31904 ;;		_I2C1_DO_TX
 31905 ;;		_I2C1_DO_RX
 31906 ;;		_I2C1_DO_TX_EMPTY
 31907 ;;		_I2C1_DO_ADDRESS_NACK
 31908 ;; This function uses a non-reentrant model
 31909 ;;
 31910                           
 31911                           	psect	text170
 31912  008C7E                     __ptext170:
 31913                           	callstack 0
 31914  008C7E                     _rd1RegCompleteHandler:
 31915                           	callstack 14
 31916                           
 31917                           ; BSR set to: 2
 31918                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 31919                           
 31920                           ;incstack = 0
 31921  008C7E  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31922  008C82  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31923  008C86  0E00               	movlw	0
 31924  008C88  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31925  008C8A  0E01               	movlw	1
 31926  008C8C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31927  008C8E  ECE0  F047         	call	_I2C1_SetBuffer	;wreg free
 31928                           
 31929                           ; BSR set to: 2
 31930                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 31931  008C92  0E00               	movlw	0
 31932  008C94  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31933  008C96  0E00               	movlw	0
 31934  008C98  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31935  008C9A  0E00               	movlw	0
 31936  008C9C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31937  008C9E  0E00               	movlw	0
 31938  008CA0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31939  008CA2  EC1D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31940                           
 31941                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 31942  008CA6  0E02               	movlw	2
 31943  008CA8  0012               	return		;funcret
 31944  008CAA                     __end_of_rd1RegCompleteHandler:
 31945                           	callstack 0
 31946                           
 31947 ;; *************** function _wr1RegCompleteHandler *****************
 31948 ;; Defined at:
 31949 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31950 ;; Parameters:    Size  Location     Type
 31951 ;;  p               2   24[COMRAM] PTR void 
 31952 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31953 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31954 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31955 ;; Auto vars:     Size  Location     Type
 31956 ;;		None
 31957 ;; Return value:  Size  Location     Type
 31958 ;;                  1    wreg      enum E360
 31959 ;; Registers used:
 31960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31961 ;; Tracked objects:
 31962 ;;		On entry : 3F/2
 31963 ;;		On exit  : 0/0
 31964 ;;		Unchanged: 0/0
 31965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31970 ;;Total ram usage:        2 bytes
 31971 ;; Hardware stack levels used: 1
 31972 ;; Hardware stack levels required when called: 6
 31973 ;; This function calls:
 31974 ;;		_I2C1_SetBuffer
 31975 ;;		_I2C1_SetDataCompleteCallback
 31976 ;; This function is called by:
 31977 ;;		_I2C1_DO_TX
 31978 ;;		_I2C1_DO_RX
 31979 ;;		_I2C1_DO_TX_EMPTY
 31980 ;;		_I2C1_DO_ADDRESS_NACK
 31981 ;; This function uses a non-reentrant model
 31982 ;;
 31983                           
 31984                           	psect	text171
 31985  008CAA                     __ptext171:
 31986                           	callstack 0
 31987  008CAA                     _wr1RegCompleteHandler:
 31988                           	callstack 14
 31989                           
 31990                           ; BSR set to: 2
 31991                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 31992                           
 31993                           ;incstack = 0
 31994  008CAA  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31995  008CAE  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31996  008CB2  0E00               	movlw	0
 31997  008CB4  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31998  008CB6  0E01               	movlw	1
 31999  008CB8  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32000  008CBA  ECE0  F047         	call	_I2C1_SetBuffer	;wreg free
 32001                           
 32002                           ; BSR set to: 2
 32003                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32004  008CBE  0E00               	movlw	0
 32005  008CC0  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32006  008CC2  0E00               	movlw	0
 32007  008CC4  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32008  008CC6  0E00               	movlw	0
 32009  008CC8  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32010  008CCA  0E00               	movlw	0
 32011  008CCC  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32012  008CCE  EC1D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32013                           
 32014                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 32015  008CD2  0E04               	movlw	4
 32016  008CD4  0012               	return		;funcret
 32017  008CD6                     __end_of_wr1RegCompleteHandler:
 32018                           	callstack 0
 32019                           
 32020 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 32021 ;; Defined at:
 32022 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32023 ;; Parameters:    Size  Location     Type
 32024 ;;  ptr             2   24[COMRAM] PTR void 
 32025 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32026 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32027 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32028 ;; Auto vars:     Size  Location     Type
 32029 ;;		None
 32030 ;; Return value:  Size  Location     Type
 32031 ;;                  1    wreg      enum E527
 32032 ;; Registers used:
 32033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32034 ;; Tracked objects:
 32035 ;;		On entry : 3F/2
 32036 ;;		On exit  : 0/0
 32037 ;;		Unchanged: 0/0
 32038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32042 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32043 ;;Total ram usage:        2 bytes
 32044 ;; Hardware stack levels used: 1
 32045 ;; Hardware stack levels required when called: 6
 32046 ;; This function calls:
 32047 ;;		_I2C1_SetBuffer
 32048 ;;		_I2C1_SetDataCompleteCallback
 32049 ;; This function is called by:
 32050 ;;		_I2C1_DO_TX
 32051 ;;		_I2C1_DO_RX
 32052 ;;		_I2C1_DO_TX_EMPTY
 32053 ;;		_I2C1_DO_ADDRESS_NACK
 32054 ;; This function uses a non-reentrant model
 32055 ;;
 32056                           
 32057                           	psect	text172
 32058  008CD6                     __ptext172:
 32059                           	callstack 0
 32060  008CD6                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 32061                           	callstack 14
 32062                           
 32063                           ; BSR set to: 2
 32064                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 32065                           
 32066                           ;incstack = 0
 32067  008CD6  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 32068  008CDA  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 32069  008CDE  0E00               	movlw	0
 32070  008CE0  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32071  008CE2  0E02               	movlw	2
 32072  008CE4  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32073  008CE6  ECE0  F047         	call	_I2C1_SetBuffer	;wreg free
 32074                           
 32075                           ; BSR set to: 2
 32076                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32077  008CEA  0E00               	movlw	0
 32078  008CEC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32079  008CEE  0E00               	movlw	0
 32080  008CF0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32081  008CF2  0E00               	movlw	0
 32082  008CF4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32083  008CF6  0E00               	movlw	0
 32084  008CF8  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32085  008CFA  EC1D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32086                           
 32087                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 32088  008CFE  0E04               	movlw	4
 32089  008D00  0012               	return		;funcret
 32090  008D02                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 32091                           	callstack 0
 32092                           
 32093 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 32094 ;; Defined at:
 32095 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 32096 ;; Parameters:    Size  Location     Type
 32097 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 32098 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32099 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32100 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32101 ;;  ptr             2   22[COMRAM] PTR void 
 32102 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32103 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32104 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32105 ;; Auto vars:     Size  Location     Type
 32106 ;;		None
 32107 ;; Return value:  Size  Location     Type
 32108 ;;                  1    wreg      void 
 32109 ;; Registers used:
 32110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32111 ;; Tracked objects:
 32112 ;;		On entry : 33/2
 32113 ;;		On exit  : 0/0
 32114 ;;		Unchanged: 0/0
 32115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32116 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32119 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32120 ;;Total ram usage:        4 bytes
 32121 ;; Hardware stack levels used: 1
 32122 ;; Hardware stack levels required when called: 5
 32123 ;; This function calls:
 32124 ;;		_I2C1_SetCallback
 32125 ;; This function is called by:
 32126 ;;		_wr1RegCompleteHandler
 32127 ;;		_rd1RegCompleteHandler
 32128 ;;		_rd2RegCompleteHandler
 32129 ;;		_wr2RegCompleteHandler
 32130 ;;		_rdBlkRegCompleteHandler
 32131 ;;		_i2c_readDataBlock
 32132 ;;		_I2C1_Read1ByteRegister
 32133 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32134 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32135 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32136 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32137 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32138 ;; This function uses a non-reentrant model
 32139 ;;
 32140                           
 32141                           	psect	text173
 32142  00903A                     __ptext173:
 32143                           	callstack 0
 32144  00903A                     _I2C1_SetDataCompleteCallback:
 32145                           	callstack 14
 32146                           
 32147                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 32148                           
 32149                           ;incstack = 0
 32150  00903A  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 32151  00903E  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 32152  009042  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 32153  009046  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 32154  00904A  0E00               	movlw	0
 32155  00904C  ECCD  F03F         	call	_I2C1_SetCallback
 32156  009050  0012               	return		;funcret
 32157  009052                     __end_of_I2C1_SetDataCompleteCallback:
 32158                           	callstack 0
 32159                           
 32160 ;; *************** function _I2C1_SetCallback *****************
 32161 ;; Defined at:
 32162 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 32163 ;; Parameters:    Size  Location     Type
 32164 ;;  idx             1    wreg     enum E10460
 32165 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 32166 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32167 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32168 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32169 ;;  ptr             2   17[COMRAM] PTR void 
 32170 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32171 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32172 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32173 ;; Auto vars:     Size  Location     Type
 32174 ;;  idx             1   19[COMRAM] enum E10460
 32175 ;; Return value:  Size  Location     Type
 32176 ;;                  1    wreg      void 
 32177 ;; Registers used:
 32178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32179 ;; Tracked objects:
 32180 ;;		On entry : 33/2
 32181 ;;		On exit  : 0/0
 32182 ;;		Unchanged: 0/0
 32183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32184 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32187 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32188 ;;Total ram usage:        5 bytes
 32189 ;; Hardware stack levels used: 1
 32190 ;; Hardware stack levels required when called: 4
 32191 ;; This function calls:
 32192 ;;		Nothing
 32193 ;; This function is called by:
 32194 ;;		_I2C1_SetDataCompleteCallback
 32195 ;;		_I2C1_SetAddressNackCallback
 32196 ;; This function uses a non-reentrant model
 32197 ;;
 32198                           
 32199                           	psect	text174
 32200  007F9A                     __ptext174:
 32201                           	callstack 0
 32202  007F9A                     _I2C1_SetCallback:
 32203                           	callstack 20
 32204                           
 32205                           ;incstack = 0
 32206                           ;I2C1_SetCallback@idx stored from wreg
 32207  007F9A  6E14               	movwf	I2C1_SetCallback@idx^0,c
 32208                           
 32209                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 32210  007F9C  5010               	movf	I2C1_SetCallback@cb^0,w,c
 32211  007F9E  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 32212  007FA0  B4D8               	btfsc	status,2,c
 32213  007FA2  D019               	goto	l18856
 32214                           
 32215                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 32216  007FA4  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32217  007FA6  0D02               	mullw	2
 32218  007FA8  0E3C               	movlw	low _I2C1_Status
 32219  007FAA  24F3               	addwf	243,w,c
 32220  007FAC  6ED9               	movwf	fsr2l,c
 32221  007FAE  0E02               	movlw	high _I2C1_Status
 32222  007FB0  20F4               	addwfc	prodh,w,c
 32223  007FB2  6EDA               	movwf	fsr2h,c
 32224  007FB4  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 32225  007FB8  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 32226                           
 32227                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 32228  007FBC  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32229  007FBE  0D02               	mullw	2
 32230  007FC0  0E48               	movlw	low (_I2C1_Status+12)
 32231  007FC2  24F3               	addwf	243,w,c
 32232  007FC4  6ED9               	movwf	fsr2l,c
 32233  007FC6  0E02               	movlw	high (_I2C1_Status+12)
 32234  007FC8  20F4               	addwfc	prodh,w,c
 32235  007FCA  6EDA               	movwf	fsr2h,c
 32236  007FCC  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 32237  007FD0  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 32238                           
 32239                           ;mcc_generated_files/i2c1_master.c: 304:     }
 32240  007FD4  0012               	return	
 32241  007FD6                     l18856:
 32242                           
 32243                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 32244  007FD6  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32245  007FD8  0D02               	mullw	2
 32246  007FDA  0E3C               	movlw	low _I2C1_Status
 32247  007FDC  24F3               	addwf	243,w,c
 32248  007FDE  6ED9               	movwf	fsr2l,c
 32249  007FE0  0E02               	movlw	high _I2C1_Status
 32250  007FE2  20F4               	addwfc	prodh,w,c
 32251  007FE4  6EDA               	movwf	fsr2h,c
 32252  007FE6  0E56               	movlw	low _I2C1_CallbackReturnStop
 32253  007FE8  6EDE               	movwf	postinc2,c
 32254  007FEA  0E92               	movlw	high _I2C1_CallbackReturnStop
 32255  007FEC  6EDD               	movwf	postdec2,c
 32256                           
 32257                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 32258  007FEE  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32259  007FF0  0D02               	mullw	2
 32260  007FF2  0E48               	movlw	low (_I2C1_Status+12)
 32261  007FF4  24F3               	addwf	243,w,c
 32262  007FF6  6ED9               	movwf	fsr2l,c
 32263  007FF8  0E02               	movlw	high (_I2C1_Status+12)
 32264  007FFA  20F4               	addwfc	prodh,w,c
 32265  007FFC  6EDA               	movwf	fsr2h,c
 32266  007FFE  0E00               	movlw	0
 32267  008000  6EDE               	movwf	postinc2,c
 32268  008002  0E00               	movlw	0
 32269  008004  6EDD               	movwf	postdec2,c
 32270  008006  0012               	return		;funcret
 32271  008008                     __end_of_I2C1_SetCallback:
 32272                           	callstack 0
 32273                           
 32274 ;; *************** function _I2C1_SetBuffer *****************
 32275 ;; Defined at:
 32276 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 32277 ;; Parameters:    Size  Location     Type
 32278 ;;  buffer          2   15[COMRAM] PTR void 
 32279 ;;		 -> cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), I2C1_ReadDataBlock@reg(1), 
 32280 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegi
      +ster@data(2), 
 32281 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 32282 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(2), i2c_readDataBloc
      +k@d(4), 
 32283 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 32284 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(17), i2c_write1ByteRegister@reg(1
      +), 
 32285 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 32286 ;;  bufferSize      2   17[COMRAM] unsigned int 
 32287 ;; Auto vars:     Size  Location     Type
 32288 ;;		None
 32289 ;; Return value:  Size  Location     Type
 32290 ;;                  1    wreg      void 
 32291 ;; Registers used:
 32292 ;;		wreg, status,2, status,0
 32293 ;; Tracked objects:
 32294 ;;		On entry : 0/2
 32295 ;;		On exit  : 3F/2
 32296 ;;		Unchanged: 0/0
 32297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32301 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32302 ;;Total ram usage:        4 bytes
 32303 ;; Hardware stack levels used: 1
 32304 ;; Hardware stack levels required when called: 4
 32305 ;; This function calls:
 32306 ;;		Nothing
 32307 ;; This function is called by:
 32308 ;;		_wr1RegCompleteHandler
 32309 ;;		_i2c_writeNBytes
 32310 ;;		_rd1RegCompleteHandler
 32311 ;;		_rd2RegCompleteHandler
 32312 ;;		_wr2RegCompleteHandler
 32313 ;;		_rdBlkRegCompleteHandler
 32314 ;;		_i2c_readDataBlock
 32315 ;;		_I2C1_Read1ByteRegister
 32316 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32317 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32318 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32319 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32320 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32321 ;; This function uses a non-reentrant model
 32322 ;;
 32323                           
 32324                           	psect	text175
 32325  008FC0                     __ptext175:
 32326                           	callstack 0
 32327  008FC0                     _I2C1_SetBuffer:
 32328                           	callstack 21
 32329                           
 32330                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 32331                           
 32332                           ;incstack = 0
 32333  008FC0  0102               	movlb	2	; () banked
 32334  008FC2  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 32335  008FC4  0012               	return	
 32336                           
 32337                           ; BSR set to: 2
 32338                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 32339  008FC6  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 32340  008FCA  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 32341                           
 32342                           ; BSR set to: 2
 32343                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 32344  008FCE  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 32345  008FD2  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 32346                           
 32347                           ; BSR set to: 2
 32348                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 32349  008FD6  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 32350                           
 32351                           ; BSR set to: 2
 32352  008FD8  0012               	return		;funcret
 32353  008FDA                     __end_of_I2C1_SetBuffer:
 32354                           	callstack 0
 32355                           
 32356 ;; *************** function _I2C1_MasterStop *****************
 32357 ;; Defined at:
 32358 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 32359 ;; Parameters:    Size  Location     Type
 32360 ;;		None
 32361 ;; Auto vars:     Size  Location     Type
 32362 ;;		None
 32363 ;; Return value:  Size  Location     Type
 32364 ;;                  1    wreg      void 
 32365 ;; Registers used:
 32366 ;;		None
 32367 ;; Tracked objects:
 32368 ;;		On entry : 0/2
 32369 ;;		On exit  : 0/0
 32370 ;;		Unchanged: 0/0
 32371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32376 ;;Total ram usage:        0 bytes
 32377 ;; Hardware stack levels used: 1
 32378 ;; Hardware stack levels required when called: 4
 32379 ;; This function calls:
 32380 ;;		Nothing
 32381 ;; This function is called by:
 32382 ;;		_I2C1_DO_SEND_STOP
 32383 ;; This function uses a non-reentrant model
 32384 ;;
 32385                           
 32386                           	psect	text176
 32387  00925A                     __ptext176:
 32388                           	callstack 0
 32389  00925A                     _I2C1_MasterStop:
 32390                           	callstack 15
 32391                           
 32392                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 32393                           
 32394                           ; BSR set to: 2
 32395                           ;incstack = 0
 32396  00925A  8497               	bsf	151,2,c	;volatile
 32397  00925C  0012               	return		;funcret
 32398  00925E                     __end_of_I2C1_MasterStop:
 32399                           	callstack 0
 32400                           
 32401 ;; *************** function _I2C1_MasterEnableRestart *****************
 32402 ;; Defined at:
 32403 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 32404 ;; Parameters:    Size  Location     Type
 32405 ;;		None
 32406 ;; Auto vars:     Size  Location     Type
 32407 ;;		None
 32408 ;; Return value:  Size  Location     Type
 32409 ;;                  1    wreg      void 
 32410 ;; Registers used:
 32411 ;;		None
 32412 ;; Tracked objects:
 32413 ;;		On entry : 0/2
 32414 ;;		On exit  : 0/0
 32415 ;;		Unchanged: 0/0
 32416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32421 ;;Total ram usage:        0 bytes
 32422 ;; Hardware stack levels used: 1
 32423 ;; Hardware stack levels required when called: 4
 32424 ;; This function calls:
 32425 ;;		Nothing
 32426 ;; This function is called by:
 32427 ;;		_I2C1_DO_SEND_RESTART_READ
 32428 ;;		_I2C1_DO_SEND_RESTART_WRITE
 32429 ;;		_I2C1_DO_SEND_RESTART
 32430 ;; This function uses a non-reentrant model
 32431 ;;
 32432                           
 32433                           	psect	text177
 32434  00925E                     __ptext177:
 32435                           	callstack 0
 32436  00925E                     _I2C1_MasterEnableRestart:
 32437                           	callstack 15
 32438                           
 32439                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 32440                           
 32441                           ;incstack = 0
 32442  00925E  8297               	bsf	151,1,c	;volatile
 32443  009260  0012               	return		;funcret
 32444  009262                     __end_of_I2C1_MasterEnableRestart:
 32445                           	callstack 0
 32446                           
 32447 ;; *************** function _I2C1_MasterStart *****************
 32448 ;; Defined at:
 32449 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 32450 ;; Parameters:    Size  Location     Type
 32451 ;;		None
 32452 ;; Auto vars:     Size  Location     Type
 32453 ;;		None
 32454 ;; Return value:  Size  Location     Type
 32455 ;;                  1    wreg      void 
 32456 ;; Registers used:
 32457 ;;		None
 32458 ;; Tracked objects:
 32459 ;;		On entry : 3F/2
 32460 ;;		On exit  : 3F/2
 32461 ;;		Unchanged: 3F/0
 32462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32467 ;;Total ram usage:        0 bytes
 32468 ;; Hardware stack levels used: 1
 32469 ;; Hardware stack levels required when called: 4
 32470 ;; This function calls:
 32471 ;;		Nothing
 32472 ;; This function is called by:
 32473 ;;		_I2C1_MasterOperation
 32474 ;; This function uses a non-reentrant model
 32475 ;;
 32476                           
 32477                           	psect	text178
 32478  009262                     __ptext178:
 32479                           	callstack 0
 32480  009262                     _I2C1_MasterStart:
 32481                           	callstack 19
 32482                           
 32483                           ; BSR set to: 2
 32484                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 32485                           
 32486                           ;incstack = 0
 32487  009262  8097               	bsf	151,0,c	;volatile
 32488                           
 32489                           ; BSR set to: 2
 32490  009264  0012               	return		;funcret
 32491  009266                     __end_of_I2C1_MasterStart:
 32492                           	callstack 0
 32493                           
 32494 ;; *************** function _I2C1_Close *****************
 32495 ;; Defined at:
 32496 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 32497 ;; Parameters:    Size  Location     Type
 32498 ;;		None
 32499 ;; Auto vars:     Size  Location     Type
 32500 ;;  returnValue     1   15[COMRAM] enum E355
 32501 ;; Return value:  Size  Location     Type
 32502 ;;                  1    wreg      enum E355
 32503 ;; Registers used:
 32504 ;;		wreg, status,2, cstack
 32505 ;; Tracked objects:
 32506 ;;		On entry : 0/2
 32507 ;;		On exit  : 33/2
 32508 ;;		Unchanged: 0/0
 32509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32514 ;;Total ram usage:        1 bytes
 32515 ;; Hardware stack levels used: 1
 32516 ;; Hardware stack levels required when called: 5
 32517 ;; This function calls:
 32518 ;;		_I2C1_MasterClearIrq
 32519 ;;		_I2C1_MasterClose
 32520 ;;		_I2C1_MasterDisableIrq
 32521 ;; This function is called by:
 32522 ;;		_i2c_writeNBytes
 32523 ;;		_i2c_readDataBlock
 32524 ;;		_I2C1_Read1ByteRegister
 32525 ;; This function uses a non-reentrant model
 32526 ;;
 32527                           
 32528                           	psect	text179
 32529  008EA4                     __ptext179:
 32530                           	callstack 0
 32531  008EA4                     _I2C1_Close:
 32532                           	callstack 20
 32533                           
 32534                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 32535                           
 32536                           ; BSR set to: 2
 32537                           ;incstack = 0
 32538  008EA4  0E01               	movlw	1
 32539  008EA6  6E10               	movwf	I2C1_Close@returnValue^0,c
 32540                           
 32541                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 32542  008EA8  0102               	movlb	2	; () banked
 32543  008EAA  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 32544  008EAC  D00A               	goto	l19290
 32545                           
 32546                           ; BSR set to: 2
 32547                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 32548  008EAE  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 32549                           
 32550                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 32551  008EB0  6958               	setf	(_I2C1_Status+28)& (0+255),b
 32552                           
 32553                           ; BSR set to: 2
 32554                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 32555  008EB2  EC15  F049         	call	_I2C1_MasterClearIrq	;wreg free
 32556                           
 32557                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 32558  008EB6  EC33  F049         	call	_I2C1_MasterDisableIrq	;wreg free
 32559                           
 32560                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 32561  008EBA  EC35  F049         	call	_I2C1_MasterClose	;wreg free
 32562                           
 32563                           ; BSR set to: 14
 32564                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 32565  008EBE  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 32566  008EC2                     l19290:
 32567                           
 32568                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 32569  008EC2  5010               	movf	I2C1_Close@returnValue^0,w,c
 32570  008EC4  0012               	return		;funcret
 32571  008EC6                     __end_of_I2C1_Close:
 32572                           	callstack 0
 32573                           
 32574 ;; *************** function _I2C1_MasterDisableIrq *****************
 32575 ;; Defined at:
 32576 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 32577 ;; Parameters:    Size  Location     Type
 32578 ;;		None
 32579 ;; Auto vars:     Size  Location     Type
 32580 ;;		None
 32581 ;; Return value:  Size  Location     Type
 32582 ;;                  1    wreg      void 
 32583 ;; Registers used:
 32584 ;;		None
 32585 ;; Tracked objects:
 32586 ;;		On entry : 3F/E
 32587 ;;		On exit  : 3F/E
 32588 ;;		Unchanged: 0/0
 32589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32594 ;;Total ram usage:        0 bytes
 32595 ;; Hardware stack levels used: 1
 32596 ;; Hardware stack levels required when called: 4
 32597 ;; This function calls:
 32598 ;;		Nothing
 32599 ;; This function is called by:
 32600 ;;		_I2C1_Close
 32601 ;; This function uses a non-reentrant model
 32602 ;;
 32603                           
 32604                           	psect	text180
 32605  009266                     __ptext180:
 32606                           	callstack 0
 32607  009266                     _I2C1_MasterDisableIrq:
 32608                           	callstack 20
 32609                           
 32610                           ; BSR set to: 14
 32611                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 32612                           
 32613                           ;incstack = 0
 32614  009266  91C5               	bcf	197,0,b	;volatile
 32615                           
 32616                           ; BSR set to: 14
 32617  009268  0012               	return		;funcret
 32618  00926A                     __end_of_I2C1_MasterDisableIrq:
 32619                           	callstack 0
 32620                           
 32621 ;; *************** function _I2C1_MasterClose *****************
 32622 ;; Defined at:
 32623 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 32624 ;; Parameters:    Size  Location     Type
 32625 ;;		None
 32626 ;; Auto vars:     Size  Location     Type
 32627 ;;		None
 32628 ;; Return value:  Size  Location     Type
 32629 ;;                  1    wreg      void 
 32630 ;; Registers used:
 32631 ;;		None
 32632 ;; Tracked objects:
 32633 ;;		On entry : 3F/E
 32634 ;;		On exit  : 3F/E
 32635 ;;		Unchanged: 3F/0
 32636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32641 ;;Total ram usage:        0 bytes
 32642 ;; Hardware stack levels used: 1
 32643 ;; Hardware stack levels required when called: 4
 32644 ;; This function calls:
 32645 ;;		Nothing
 32646 ;; This function is called by:
 32647 ;;		_I2C1_Close
 32648 ;; This function uses a non-reentrant model
 32649 ;;
 32650                           
 32651                           	psect	text181
 32652  00926A                     __ptext181:
 32653                           	callstack 0
 32654  00926A                     _I2C1_MasterClose:
 32655                           	callstack 20
 32656                           
 32657                           ; BSR set to: 14
 32658                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 32659                           
 32660                           ; BSR set to: 14
 32661                           ;incstack = 0
 32662  00926A  9A96               	bcf	150,5,c	;volatile
 32663                           
 32664                           ; BSR set to: 14
 32665  00926C  0012               	return		;funcret
 32666  00926E                     __end_of_I2C1_MasterClose:
 32667                           	callstack 0
 32668                           
 32669 ;; *************** function _I2C1_MasterClearIrq *****************
 32670 ;; Defined at:
 32671 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 32672 ;; Parameters:    Size  Location     Type
 32673 ;;		None
 32674 ;; Auto vars:     Size  Location     Type
 32675 ;;		None
 32676 ;; Return value:  Size  Location     Type
 32677 ;;                  1    wreg      void 
 32678 ;; Registers used:
 32679 ;;		None
 32680 ;; Tracked objects:
 32681 ;;		On entry : 33/2
 32682 ;;		On exit  : 3F/E
 32683 ;;		Unchanged: 0/0
 32684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32689 ;;Total ram usage:        0 bytes
 32690 ;; Hardware stack levels used: 1
 32691 ;; Hardware stack levels required when called: 4
 32692 ;; This function calls:
 32693 ;;		Nothing
 32694 ;; This function is called by:
 32695 ;;		_I2C1_Open
 32696 ;;		_I2C1_Close
 32697 ;;		_I2C1_MasterFsm
 32698 ;; This function uses a non-reentrant model
 32699 ;;
 32700                           
 32701                           	psect	text182
 32702  00922A                     __ptext182:
 32703                           	callstack 0
 32704  00922A                     _I2C1_MasterClearIrq:
 32705                           	callstack 20
 32706                           
 32707                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 32708                           
 32709                           ; BSR set to: 14
 32710                           ;incstack = 0
 32711  00922A  010E               	movlb	14	; () banked
 32712  00922C  91CD               	bcf	205,0,b	;volatile
 32713                           
 32714                           ; BSR set to: 14
 32715  00922E  0012               	return		;funcret
 32716  009230                     __end_of_I2C1_MasterClearIrq:
 32717                           	callstack 0
 32718                           
 32719 ;; *************** function _INTERRUPT_InterruptManager *****************
 32720 ;; Defined at:
 32721 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 32722 ;; Parameters:    Size  Location     Type
 32723 ;;		None
 32724 ;; Auto vars:     Size  Location     Type
 32725 ;;		None
 32726 ;; Return value:  Size  Location     Type
 32727 ;;                  1    wreg      void 
 32728 ;; Registers used:
 32729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32730 ;; Tracked objects:
 32731 ;;		On entry : 0/0
 32732 ;;		On exit  : 0/0
 32733 ;;		Unchanged: 0/0
 32734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32737 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32738 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32739 ;;Total ram usage:        6 bytes
 32740 ;; Hardware stack levels used: 1
 32741 ;; Hardware stack levels required when called: 3
 32742 ;; This function calls:
 32743 ;;		Absolute function
 32744 ;;		_EUSART1_Receive_ISR
 32745 ;;		_EUSART1_Transmit_ISR
 32746 ;;		_TMR0_ISR
 32747 ;;		_TMR1_ISR
 32748 ;;		_TMR2_ISR
 32749 ;; This function is called by:
 32750 ;;		Interrupt level 2
 32751 ;; This function uses a non-reentrant model
 32752 ;;
 32753                           
 32754                           	psect	intcode
 32755  000008                     __pintcode:
 32756                           	callstack 0
 32757  000008                     _INTERRUPT_InterruptManager:
 32758                           	callstack 14
 32759                           
 32760                           ; BSR set to: 14
 32761                           ;incstack = 0
 32762  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 32763  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 32764  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 32765  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 32766  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 32767  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 32768  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 32769                           
 32770                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 32771  000022  010E               	movlb	14	; () banked
 32772  000024  BBC2               	btfsc	194,5,b	;volatile
 32773                           
 32774                           ; BSR set to: 14
 32775  000026  ABCA               	btfss	202,5,b	;volatile
 32776  000028  D003               	goto	i2l867
 32777                           
 32778                           ; BSR set to: 14
 32779                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 32780  00002A  ECF8  F046         	call	_TMR0_ISR	;wreg free
 32781                           
 32782                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 32783  00002E  D028               	goto	i2l873
 32784  000030                     i2l867:
 32785                           
 32786                           ; BSR set to: 14
 32787  000030  ACF2               	btfss	242,6,c	;volatile
 32788  000032  D026               	goto	i2l873
 32789                           
 32790                           ; BSR set to: 14
 32791                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 32792  000034  B9C5               	btfsc	197,4,b	;volatile
 32793                           
 32794                           ; BSR set to: 14
 32795  000036  A9CD               	btfss	205,4,b	;volatile
 32796  000038  D009               	goto	i2l870
 32797                           
 32798                           ; BSR set to: 14
 32799                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 32800  00003A  D801               	call	i2u2164_48
 32801  00003C  D021               	goto	i2l873
 32802  00003E                     i2u2164_48:
 32803  00003E  0005               	push	
 32804  000040  6EFA               	movwf	pclath,c
 32805  000042  0102               	movlb	2	; () banked
 32806  000044  51EB               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 32807  000046  6EFD               	movwf	tosl,c
 32808  000048  51EC               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 32809  00004A  D00B               	goto	L112
 32810  00004C                     i2l870:
 32811                           
 32812                           ; BSR set to: 14
 32813  00004C  BBC5               	btfsc	197,5,b	;volatile
 32814                           
 32815                           ; BSR set to: 14
 32816  00004E  ABCD               	btfss	205,5,b	;volatile
 32817  000050  D00C               	goto	i2l872
 32818                           
 32819                           ; BSR set to: 14
 32820                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 32821  000052  D801               	call	i2u2167_48
 32822  000054  D015               	goto	i2l873
 32823  000056                     i2u2167_48:
 32824  000056  0005               	push	
 32825  000058  6EFA               	movwf	pclath,c
 32826  00005A  0102               	movlb	2	; () banked
 32827  00005C  51E9               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 32828  00005E  6EFD               	movwf	tosl,c
 32829  000060  51EA               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 32830  000062                     L112:
 32831  000062  6EFE               	movwf	tosh,c
 32832  000064  6AFF               	clrf	tosu,c
 32833  000066  50FA               	movf	pclath,w,c
 32834  000068  0012               	return		;indir
 32835  00006A                     i2l872:
 32836                           
 32837                           ; BSR set to: 14
 32838  00006A  B1C6               	btfsc	198,0,b	;volatile
 32839                           
 32840                           ; BSR set to: 14
 32841  00006C  A1CE               	btfss	206,0,b	;volatile
 32842  00006E  D003               	goto	i2l874
 32843                           
 32844                           ; BSR set to: 14
 32845                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 32846  000070  EC87  F044         	call	_TMR1_ISR	;wreg free
 32847                           
 32848                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 32849  000074  D005               	goto	i2l873
 32850  000076                     i2l874:
 32851                           
 32852                           ; BSR set to: 14
 32853  000076  B3C6               	btfsc	198,1,b	;volatile
 32854                           
 32855                           ; BSR set to: 14
 32856  000078  A3CE               	btfss	206,1,b	;volatile
 32857  00007A  D002               	goto	i2l873
 32858                           
 32859                           ; BSR set to: 14
 32860                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 32861  00007C  ECCC  F02F         	call	_TMR2_ISR	;wreg free
 32862  000080                     i2l873:
 32863                           
 32864                           ; BSR set to: 14
 32865  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 32866  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 32867  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 32868  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 32869  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 32870  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 32871  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 32872  00009A  0011               	retfie		f
 32873  00009C                     __end_of_INTERRUPT_InterruptManager:
 32874                           	callstack 0
 32875                           
 32876 ;; *************** function _TMR2_ISR *****************
 32877 ;; Defined at:
 32878 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 32879 ;; Parameters:    Size  Location     Type
 32880 ;;		None
 32881 ;; Auto vars:     Size  Location     Type
 32882 ;;		None
 32883 ;; Return value:  Size  Location     Type
 32884 ;;                  1    wreg      void 
 32885 ;; Registers used:
 32886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32887 ;; Tracked objects:
 32888 ;;		On entry : 3F/E
 32889 ;;		On exit  : 0/0
 32890 ;;		Unchanged: 0/0
 32891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32896 ;;Total ram usage:        0 bytes
 32897 ;; Hardware stack levels used: 1
 32898 ;; Hardware stack levels required when called: 2
 32899 ;; This function calls:
 32900 ;;		Absolute function
 32901 ;;		_ReadADC
 32902 ;;		_TMR2_DefaultInterruptHandler
 32903 ;;		_controlTimeslots
 32904 ;;		_refreshSegment
 32905 ;; This function is called by:
 32906 ;;		_INTERRUPT_InterruptManager
 32907 ;; This function uses a non-reentrant model
 32908 ;;
 32909                           
 32910                           	psect	text184
 32911  005F98                     __ptext184:
 32912                           	callstack 0
 32913  005F98                     _TMR2_ISR:
 32914                           	callstack 14
 32915                           
 32916                           ; BSR set to: 14
 32917                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 32918                           
 32919                           ;incstack = 0
 32920  005F98  93CE               	bcf	206,1,b	;volatile
 32921                           
 32922                           ; BSR set to: 14
 32923                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 32924  005F9A  EC3A  F042         	call	_ReadADC	;wreg free
 32925                           
 32926                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 32927  005F9E  EC37  F03C         	call	_refreshSegment	;wreg free
 32928                           
 32929                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 32930  005FA2  0101               	movlb	1	; () banked
 32931  005FA4  519F               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 32932  005FA6  A4D8               	btfss	status,2,c
 32933                           
 32934                           ; BSR set to: 1
 32935                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 32936  005FA8  079F               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 32937                           
 32938                           ; BSR set to: 1
 32939                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 32940  005FAA  519D               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 32941  005FAC  B4D8               	btfsc	status,2,c
 32942  005FAE  D002               	goto	i2l16242
 32943                           
 32944                           ; BSR set to: 1
 32945                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 32946  005FB0  079D               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 32947                           
 32948                           ;mcc_generated_files/tmr2.c: 201:                 }
 32949  005FB2  D089               	goto	i2l16314
 32950  005FB4                     i2l16242:
 32951                           
 32952                           ; BSR set to: 1
 32953                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 32954  005FB4  0E32               	movlw	50
 32955  005FB6  6F9D               	movwf	(_ts_system+1)& (0+255),b	;volatile
 32956                           
 32957                           ; BSR set to: 1
 32958                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 32959  005FB8  ECF4  F02B         	call	_controlTimeslots	;wreg free
 32960                           
 32961                           ; BSR set to: 1
 32962                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 32963  005FBC  0100               	movlb	0	; () banked
 32964  005FBE  5192               	movf	_Counterchoose& (0+255),w,b
 32965  005FC0  A4D8               	btfss	status,2,c
 32966  005FC2  D002               	goto	i2l16250
 32967                           
 32968                           ; BSR set to: 0
 32969                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 32970  005FC4  0E01               	movlw	1
 32971  005FC6  D001               	goto	L113
 32972  005FC8                     i2l16250:
 32973                           
 32974                           ; BSR set to: 0
 32975                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 32976  005FC8  0E00               	movlw	0
 32977  005FCA                     L113:
 32978  005FCA  6F92               	movwf	_Counterchoose& (0+255),b
 32979                           
 32980                           ; BSR set to: 0
 32981                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 32982                           
 32983                           ;mcc_generated_files/tmr2.c: 217:                                }
 32984  005FCC  0101               	movlb	1	; () banked
 32985  005FCE  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 32986  005FD0  A4D8               	btfss	status,2,c
 32987  005FD2  D034               	goto	i2l16276
 32988                           
 32989                           ; BSR set to: 1
 32990                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 32991  005FD4  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 32992  005FD6  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 32993  005FD8  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 32994  005FDA  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 32995  005FDC  B4D8               	btfsc	status,2,c
 32996  005FDE  D008               	goto	i2l1266
 32997                           
 32998                           ; BSR set to: 1
 32999  005FE0  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 33000  005FE2  B4D8               	btfsc	status,2,c
 33001  005FE4  D005               	goto	i2l1266
 33002                           
 33003                           ; BSR set to: 1
 33004                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 33005  005FE6  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 33006  005FE8  0E00               	movlw	0
 33007  005FEA  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 33008  005FEC  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 33009  005FEE  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 33010  005FF0                     i2l1266:
 33011                           
 33012                           ; BSR set to: 1
 33013                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 33014  005FF0  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33015  005FF2  A4D8               	btfss	status,2,c
 33016  005FF4  D00E               	goto	i2l16266
 33017                           
 33018                           ; BSR set to: 1
 33019                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 33020  005FF6  057B               	decf	_powerControl_st& (0+255),w,b
 33021  005FF8  A4D8               	btfss	status,2,c
 33022  005FFA  D004               	goto	i2u1837_40
 33023                           
 33024                           ; BSR set to: 1
 33025                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 33026  005FFC  0100               	movlb	0	; () banked
 33027  005FFE  0592               	decf	_Counterchoose& (0+255),w,b
 33028  006000  A4D8               	btfss	status,2,c
 33029  006002  D061               	goto	i2l16314
 33030  006004                     i2u1837_40:
 33031                           
 33032                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 33033  006004  0E01               	movlw	1
 33034  006006  0101               	movlb	1	; () banked
 33035  006008  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33036  00600A  0E00               	movlw	0
 33037  00600C  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33038  00600E  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33039  006010  D013               	goto	L114
 33040  006012                     i2l16266:
 33041                           
 33042                           ; BSR set to: 1
 33043  006012  0E02               	movlw	2
 33044  006014  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33045  006016  A4D8               	btfss	status,2,c
 33046  006018  D056               	goto	i2l16314
 33047                           
 33048                           ; BSR set to: 1
 33049                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 33050  00601A  057B               	decf	_powerControl_st& (0+255),w,b
 33051  00601C  A4D8               	btfss	status,2,c
 33052  00601E  D004               	goto	i2u1840_40
 33053                           
 33054                           ; BSR set to: 1
 33055                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 33056  006020  0100               	movlb	0	; () banked
 33057  006022  0592               	decf	_Counterchoose& (0+255),w,b
 33058  006024  A4D8               	btfss	status,2,c
 33059  006026  D04F               	goto	i2l16314
 33060  006028                     i2u1840_40:
 33061                           
 33062                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 33063  006028  0EFF               	movlw	255
 33064  00602A  0101               	movlb	1	; () banked
 33065  00602C  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33066  00602E  0EFF               	movlw	255
 33067  006030  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33068  006032  0EFF               	movlw	255
 33069  006034  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33070  006036  0EFF               	movlw	255
 33071  006038                     L114:
 33072  006038  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 33073                           
 33074                           ;mcc_generated_files/tmr2.c: 263:                            }
 33075  00603A  D045               	goto	i2l16314
 33076  00603C                     i2l16276:
 33077                           
 33078                           ; BSR set to: 1
 33079                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 33080  00603C  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 33081  00603E  A4D8               	btfss	status,2,c
 33082  006040  D01C               	goto	i2l1277
 33083                           
 33084                           ; BSR set to: 1
 33085                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 33086  006042  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33087  006044  A4D8               	btfss	status,2,c
 33088  006046  D00B               	goto	i2l16286
 33089                           
 33090                           ; BSR set to: 1
 33091                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33092  006048  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33093  00604A  B4D8               	btfsc	status,2,c
 33094  00604C  D016               	goto	i2l1277
 33095                           
 33096                           ; BSR set to: 1
 33097                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 33098  00604E  0E01               	movlw	1
 33099  006050  0100               	movlb	0	; () banked
 33100  006052  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33101  006054  0E00               	movlw	0
 33102  006056  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33103  006058  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33104  00605A  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 33105  00605C  D00E               	goto	i2l1277
 33106  00605E                     i2l16286:
 33107                           
 33108                           ; BSR set to: 1
 33109  00605E  0E02               	movlw	2
 33110  006060  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33111  006062  A4D8               	btfss	status,2,c
 33112  006064  D00A               	goto	i2l1277
 33113                           
 33114                           ; BSR set to: 1
 33115                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33116  006066  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33117  006068  B4D8               	btfsc	status,2,c
 33118  00606A  D007               	goto	i2l1277
 33119                           
 33120                           ; BSR set to: 1
 33121                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 33122  00606C  0E01               	movlw	1
 33123  00606E  0100               	movlb	0	; () banked
 33124  006070  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 33125  006072  0E00               	movlw	0
 33126  006074  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 33127  006076  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 33128  006078  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 33129  00607A                     i2l1277:
 33130                           
 33131                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 33132  00607A  0101               	movlb	1	; () banked
 33133  00607C  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33134  00607E  A4D8               	btfss	status,2,c
 33135  006080  D022               	goto	i2l16314
 33136                           
 33137                           ; BSR set to: 1
 33138  006082  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 33139  006084  A4D8               	btfss	status,2,c
 33140  006086  D01F               	goto	i2l16314
 33141                           
 33142                           ; BSR set to: 1
 33143                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 33144  006088  519C               	movf	_ts_system& (0+255),w,b	;volatile
 33145  00608A  B4D8               	btfsc	status,2,c
 33146  00608C  D002               	goto	i2l16300
 33147                           
 33148                           ; BSR set to: 1
 33149                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 33150  00608E  079C               	decf	_ts_system& (0+255),f,b	;volatile
 33151                           
 33152                           ;mcc_generated_files/tmr2.c: 311:                                            }
 33153  006090  D01A               	goto	i2l16314
 33154  006092                     i2l16300:
 33155                           
 33156                           ; BSR set to: 1
 33157                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 33158  006092  0E0A               	movlw	10
 33159  006094  6F9C               	movwf	_ts_system& (0+255),b	;volatile
 33160                           
 33161                           ; BSR set to: 1
 33162                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 33163  006096  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33164  006098  A4D8               	btfss	status,2,c
 33165  00609A  D009               	goto	i2l16308
 33166                           
 33167                           ; BSR set to: 1
 33168                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 33169  00609C  0100               	movlb	0	; () banked
 33170  00609E  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 33171                           
 33172                           ; BSR set to: 0
 33173                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 33174  0060A0  0E01               	movlw	1
 33175  0060A2  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33176  0060A4  0E00               	movlw	0
 33177  0060A6  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33178  0060A8  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33179  0060AA  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 33180                           
 33181                           ;mcc_generated_files/tmr2.c: 322:                                                }
 33182  0060AC  D00C               	goto	i2l16314
 33183  0060AE                     i2l16308:
 33184                           
 33185                           ; BSR set to: 1
 33186  0060AE  0E02               	movlw	2
 33187  0060B0  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33188  0060B2  A4D8               	btfss	status,2,c
 33189  0060B4  D008               	goto	i2l16314
 33190                           
 33191                           ; BSR set to: 1
 33192                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 33193  0060B6  0100               	movlb	0	; () banked
 33194  0060B8  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 33195                           
 33196                           ; BSR set to: 0
 33197                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 33198  0060BA  0E01               	movlw	1
 33199  0060BC  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 33200  0060BE  0E00               	movlw	0
 33201  0060C0  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 33202  0060C2  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 33203  0060C4  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 33204  0060C6                     i2l16314:
 33205                           
 33206                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 33207  0060C6  0102               	movlb	2	; () banked
 33208  0060C8  51DB               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33209  0060CA  11DC               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33210  0060CC  B4D8               	btfsc	status,2,c
 33211  0060CE  0012               	return	
 33212                           
 33213                           ; BSR set to: 2
 33214                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 33215  0060D0  D801               	call	i2u1852_48
 33216  0060D2  0012               	return	
 33217  0060D4                     i2u1852_48:
 33218  0060D4  0005               	push	
 33219  0060D6  6EFA               	movwf	pclath,c
 33220  0060D8  51DB               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33221  0060DA  6EFD               	movwf	tosl,c
 33222  0060DC  51DC               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33223  0060DE  6EFE               	movwf	tosh,c
 33224  0060E0  6AFF               	clrf	tosu,c
 33225  0060E2  50FA               	movf	pclath,w,c
 33226  0060E4  0012               	return		;indir
 33227  0060E6                     __end_of_TMR2_ISR:
 33228                           	callstack 0
 33229                           
 33230 ;; *************** function _refreshSegment *****************
 33231 ;; Defined at:
 33232 ;;		line 50 in file "outputs_MC50.c"
 33233 ;; Parameters:    Size  Location     Type
 33234 ;;		None
 33235 ;; Auto vars:     Size  Location     Type
 33236 ;;		None
 33237 ;; Return value:  Size  Location     Type
 33238 ;;                  1    wreg      void 
 33239 ;; Registers used:
 33240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33241 ;; Tracked objects:
 33242 ;;		On entry : 31/E
 33243 ;;		On exit  : 3E/0
 33244 ;;		Unchanged: 0/0
 33245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33250 ;;Total ram usage:        0 bytes
 33251 ;; Hardware stack levels used: 1
 33252 ;; Hardware stack levels required when called: 1
 33253 ;; This function calls:
 33254 ;;		_Segments_Set
 33255 ;; This function is called by:
 33256 ;;		_TMR2_ISR
 33257 ;; This function uses a non-reentrant model
 33258 ;;
 33259                           
 33260                           	psect	text185
 33261  00786E                     __ptext185:
 33262                           	callstack 0
 33263  00786E                     _refreshSegment:
 33264                           	callstack 14
 33265                           
 33266                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 33267                           
 33268                           ;incstack = 0
 33269  00786E  0100               	movlb	0	; () banked
 33270  007870  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 33271  007872  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 33272  007874  B4D8               	btfsc	status,2,c
 33273  007876  D003               	goto	i2u1454_40
 33274                           
 33275                           ; BSR set to: 0
 33276  007878  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 33277  00787A  A4D8               	btfss	status,2,c
 33278  00787C  D01F               	goto	i2l2128
 33279  00787E                     i2u1454_40:
 33280                           
 33281                           ; BSR set to: 0
 33282                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 33283  00787E  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 33284  007880  A4D8               	btfss	status,2,c
 33285  007882  D00D               	goto	i2l2123
 33286                           
 33287                           ; BSR set to: 0
 33288                           
 33289                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 33290  007884  9085               	bcf	133,0,c	;volatile
 33291                           
 33292                           ; BSR set to: 0
 33293                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 33294  007886  0ED2               	movlw	low _DispTable
 33295  007888  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 33296  00788A  6ED9               	movwf	fsr2l,c
 33297  00788C  6ADA               	clrf	fsr2h,c
 33298  00788E  0E03               	movlw	high _DispTable
 33299  007890  22DA               	addwfc	fsr2h,f,c
 33300  007892  50DF               	movf	indf2,w,c
 33301  007894  EC9C  F048         	call	_Segments_Set
 33302  007898  8285               	bsf	133,1,c	;volatile
 33303                           
 33304                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 33305  00789A  0E00               	movlw	0
 33306  00789C  D00C               	goto	L115
 33307  00789E                     i2l2123:
 33308                           
 33309                           ; BSR set to: 0
 33310  00789E  9285               	bcf	133,1,c	;volatile
 33311                           
 33312                           ; BSR set to: 0
 33313                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 33314  0078A0  0ED2               	movlw	low _DispTable
 33315  0078A2  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 33316  0078A4  6ED9               	movwf	fsr2l,c
 33317  0078A6  6ADA               	clrf	fsr2h,c
 33318  0078A8  0E03               	movlw	high _DispTable
 33319  0078AA  22DA               	addwfc	fsr2h,f,c
 33320  0078AC  50DF               	movf	indf2,w,c
 33321  0078AE  EC9C  F048         	call	_Segments_Set
 33322  0078B2  8085               	bsf	133,0,c	;volatile
 33323                           
 33324                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 33325  0078B4  0E01               	movlw	1
 33326  0078B6                     L115:
 33327  0078B6  0100               	movlb	0	; () banked
 33328  0078B8  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 33329  0078BA  D002               	goto	i2l14330
 33330  0078BC                     i2l2128:
 33331                           
 33332                           ; BSR set to: 0
 33333  0078BC  9085               	bcf	133,0,c	;volatile
 33334                           
 33335                           ; BSR set to: 0
 33336                           
 33337                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 33338  0078BE  9285               	bcf	133,1,c	;volatile
 33339  0078C0                     i2l14330:
 33340                           
 33341                           ; BSR set to: 0
 33342                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 33343  0078C0  0101               	movlb	1	; () banked
 33344  0078C2  BFA7               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 33345  0078C4  D005               	goto	i2u1456_40
 33346  0078C6  51A7               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 33347  0078C8  E114               	bnz	i2l2135
 33348  0078CA  05A6               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 33349  0078CC  B0D8               	btfsc	status,0,c
 33350  0078CE  0012               	return	
 33351  0078D0                     i2u1456_40:
 33352                           
 33353                           ; BSR set to: 1
 33354  0078D0  0100               	movlb	0	; () banked
 33355  0078D2  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 33356  0078D4  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 33357  0078D6  B4D8               	btfsc	status,2,c
 33358  0078D8  0012               	return	
 33359                           
 33360                           ; BSR set to: 0
 33361                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 33362  0078DA  C075  F1A6         	movff	_dispStruct+3,_ts_system+10	;volatile
 33363  0078DE  C076  F1A7         	movff	_dispStruct+4,_ts_system+11	;volatile
 33364                           
 33365                           ; BSR set to: 0
 33366                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 33367  0078E2  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 33368  0078E4  A4D8               	btfss	status,2,c
 33369  0078E6  D003               	goto	i2l14340
 33370                           
 33371                           ; BSR set to: 0
 33372                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 33373  0078E8  0E00               	movlw	0
 33374  0078EA  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 33375                           
 33376                           ;outputs_MC50.c: 85:         }
 33377  0078EC  0012               	return	
 33378  0078EE                     i2l14340:
 33379                           
 33380                           ; BSR set to: 0
 33381                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 33382  0078EE  0E01               	movlw	1
 33383  0078F0  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 33384  0078F2                     i2l2135:
 33385  0078F2  0012               	return		;funcret
 33386  0078F4                     __end_of_refreshSegment:
 33387                           	callstack 0
 33388                           
 33389 ;; *************** function _Segments_Set *****************
 33390 ;; Defined at:
 33391 ;;		line 93 in file "outputs_MC50.c"
 33392 ;; Parameters:    Size  Location     Type
 33393 ;;  value           1    wreg     unsigned char 
 33394 ;; Auto vars:     Size  Location     Type
 33395 ;;  value           1    0[COMRAM] unsigned char 
 33396 ;; Return value:  Size  Location     Type
 33397 ;;                  1    wreg      void 
 33398 ;; Registers used:
 33399 ;;		wreg, status,2, status,0
 33400 ;; Tracked objects:
 33401 ;;		On entry : 3F/0
 33402 ;;		On exit  : 0/0
 33403 ;;		Unchanged: 0/0
 33404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33409 ;;Total ram usage:        1 bytes
 33410 ;; Hardware stack levels used: 1
 33411 ;; This function calls:
 33412 ;;		Nothing
 33413 ;; This function is called by:
 33414 ;;		_refreshSegment
 33415 ;; This function uses a non-reentrant model
 33416 ;;
 33417                           
 33418                           	psect	text186
 33419  009138                     __ptext186:
 33420                           	callstack 0
 33421  009138                     _Segments_Set:
 33422                           	callstack 14
 33423                           
 33424                           ;incstack = 0
 33425                           ;Segments_Set@value stored from wreg
 33426  009138  6E01               	movwf	Segments_Set@value^0,c
 33427                           
 33428                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 33429  00913A  0E80               	movlw	128
 33430  00913C  1686               	andwf	134,f,c	;volatile
 33431                           
 33432                           ;outputs_MC50.c: 96:    LATD |= value;
 33433  00913E  5001               	movf	Segments_Set@value^0,w,c	;volatile
 33434  009140  1286               	iorwf	134,f,c	;volatile
 33435  009142  0012               	return		;funcret
 33436  009144                     __end_of_Segments_Set:
 33437                           	callstack 0
 33438                           
 33439 ;; *************** function _controlTimeslots *****************
 33440 ;; Defined at:
 33441 ;;		line 190 in file "main_MC50.c"
 33442 ;; Parameters:    Size  Location     Type
 33443 ;;		None
 33444 ;; Auto vars:     Size  Location     Type
 33445 ;;		None
 33446 ;; Return value:  Size  Location     Type
 33447 ;;                  1    wreg      void 
 33448 ;; Registers used:
 33449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33450 ;; Tracked objects:
 33451 ;;		On entry : 3F/1
 33452 ;;		On exit  : 3F/1
 33453 ;;		Unchanged: 0/0
 33454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33459 ;;Total ram usage:        0 bytes
 33460 ;; Hardware stack levels used: 1
 33461 ;; Hardware stack levels required when called: 1
 33462 ;; This function calls:
 33463 ;;		_decrementTimeslot
 33464 ;; This function is called by:
 33465 ;;		_TMR2_ISR
 33466 ;; This function uses a non-reentrant model
 33467 ;;
 33468                           
 33469                           	psect	text187
 33470  0057E8                     __ptext187:
 33471                           	callstack 0
 33472  0057E8                     _controlTimeslots:
 33473                           	callstack 14
 33474                           
 33475                           ; BSR set to: 1
 33476                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 33477                           
 33478                           ;incstack = 0
 33479  0057E8  0EA4               	movlw	low (_ts_system+8)
 33480  0057EA  6E01               	movwf	decrementTimeslot@ts^0,c
 33481  0057EC  0E01               	movlw	high (_ts_system+8)
 33482  0057EE  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33483  0057F0  EC96  F046         	call	_decrementTimeslot	;wreg free
 33484                           
 33485                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 33486  0057F4  0EE2               	movlw	low (_ts_system+70)
 33487  0057F6  6E01               	movwf	decrementTimeslot@ts^0,c
 33488  0057F8  0E01               	movlw	high (_ts_system+70)
 33489  0057FA  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33490  0057FC  EC96  F046         	call	_decrementTimeslot	;wreg free
 33491                           
 33492                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 33493  005800  0EA6               	movlw	low (_ts_system+10)
 33494  005802  6E01               	movwf	decrementTimeslot@ts^0,c
 33495  005804  0E01               	movlw	high (_ts_system+10)
 33496  005806  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33497  005808  EC96  F046         	call	_decrementTimeslot	;wreg free
 33498                           
 33499                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 33500  00580C  0EA8               	movlw	low (_ts_system+12)
 33501  00580E  6E01               	movwf	decrementTimeslot@ts^0,c
 33502  005810  0E01               	movlw	high (_ts_system+12)
 33503  005812  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33504  005814  EC96  F046         	call	_decrementTimeslot	;wreg free
 33505                           
 33506                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 33507  005818  0EAA               	movlw	low (_ts_system+14)
 33508  00581A  6E01               	movwf	decrementTimeslot@ts^0,c
 33509  00581C  0E01               	movlw	high (_ts_system+14)
 33510  00581E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33511  005820  EC96  F046         	call	_decrementTimeslot	;wreg free
 33512                           
 33513                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 33514  005824  0EAC               	movlw	low (_ts_system+16)
 33515  005826  6E01               	movwf	decrementTimeslot@ts^0,c
 33516  005828  0E01               	movlw	high (_ts_system+16)
 33517  00582A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33518  00582C  EC96  F046         	call	_decrementTimeslot	;wreg free
 33519                           
 33520                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 33521  005830  0EAE               	movlw	low (_ts_system+18)
 33522  005832  6E01               	movwf	decrementTimeslot@ts^0,c
 33523  005834  0E01               	movlw	high (_ts_system+18)
 33524  005836  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33525  005838  EC96  F046         	call	_decrementTimeslot	;wreg free
 33526                           
 33527                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 33528  00583C  0EB0               	movlw	low (_ts_system+20)
 33529  00583E  6E01               	movwf	decrementTimeslot@ts^0,c
 33530  005840  0E01               	movlw	high (_ts_system+20)
 33531  005842  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33532  005844  EC96  F046         	call	_decrementTimeslot	;wreg free
 33533                           
 33534                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 33535  005848  0EB2               	movlw	low (_ts_system+22)
 33536  00584A  6E01               	movwf	decrementTimeslot@ts^0,c
 33537  00584C  0E01               	movlw	high (_ts_system+22)
 33538  00584E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33539  005850  EC96  F046         	call	_decrementTimeslot	;wreg free
 33540                           
 33541                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 33542  005854  0EB6               	movlw	low (_ts_system+26)
 33543  005856  6E01               	movwf	decrementTimeslot@ts^0,c
 33544  005858  0E01               	movlw	high (_ts_system+26)
 33545  00585A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33546  00585C  EC96  F046         	call	_decrementTimeslot	;wreg free
 33547                           
 33548                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 33549  005860  0EB8               	movlw	low (_ts_system+28)
 33550  005862  6E01               	movwf	decrementTimeslot@ts^0,c
 33551  005864  0E01               	movlw	high (_ts_system+28)
 33552  005866  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33553  005868  EC96  F046         	call	_decrementTimeslot	;wreg free
 33554                           
 33555                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 33556  00586C  0EBA               	movlw	low (_ts_system+30)
 33557  00586E  6E01               	movwf	decrementTimeslot@ts^0,c
 33558  005870  0E01               	movlw	high (_ts_system+30)
 33559  005872  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33560  005874  EC96  F046         	call	_decrementTimeslot	;wreg free
 33561                           
 33562                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 33563  005878  0EC0               	movlw	low (_ts_system+36)
 33564  00587A  6E01               	movwf	decrementTimeslot@ts^0,c
 33565  00587C  0E01               	movlw	high (_ts_system+36)
 33566  00587E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33567  005880  EC96  F046         	call	_decrementTimeslot	;wreg free
 33568                           
 33569                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 33570  005884  0EC2               	movlw	low (_ts_system+38)
 33571  005886  6E01               	movwf	decrementTimeslot@ts^0,c
 33572  005888  0E01               	movlw	high (_ts_system+38)
 33573  00588A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33574  00588C  EC96  F046         	call	_decrementTimeslot	;wreg free
 33575                           
 33576                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 33577  005890  0EC4               	movlw	low (_ts_system+40)
 33578  005892  6E01               	movwf	decrementTimeslot@ts^0,c
 33579  005894  0E01               	movlw	high (_ts_system+40)
 33580  005896  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33581  005898  EC96  F046         	call	_decrementTimeslot	;wreg free
 33582                           
 33583                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 33584  00589C  0EC6               	movlw	low (_ts_system+42)
 33585  00589E  6E01               	movwf	decrementTimeslot@ts^0,c
 33586  0058A0  0E01               	movlw	high (_ts_system+42)
 33587  0058A2  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33588  0058A4  EC96  F046         	call	_decrementTimeslot	;wreg free
 33589                           
 33590                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 33591  0058A8  0EC8               	movlw	low (_ts_system+44)
 33592  0058AA  6E01               	movwf	decrementTimeslot@ts^0,c
 33593  0058AC  0E01               	movlw	high (_ts_system+44)
 33594  0058AE  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33595  0058B0  EC96  F046         	call	_decrementTimeslot	;wreg free
 33596                           
 33597                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 33598  0058B4  0ECA               	movlw	low (_ts_system+46)
 33599  0058B6  6E01               	movwf	decrementTimeslot@ts^0,c
 33600  0058B8  0E01               	movlw	high (_ts_system+46)
 33601  0058BA  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33602  0058BC  EC96  F046         	call	_decrementTimeslot	;wreg free
 33603                           
 33604                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 33605  0058C0  0ECC               	movlw	low (_ts_system+48)
 33606  0058C2  6E01               	movwf	decrementTimeslot@ts^0,c
 33607  0058C4  0E01               	movlw	high (_ts_system+48)
 33608  0058C6  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33609  0058C8  EC96  F046         	call	_decrementTimeslot	;wreg free
 33610                           
 33611                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 33612  0058CC  0EDE               	movlw	low (_ts_system+66)
 33613  0058CE  6E01               	movwf	decrementTimeslot@ts^0,c
 33614  0058D0  0E01               	movlw	high (_ts_system+66)
 33615  0058D2  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33616  0058D4  EC96  F046         	call	_decrementTimeslot	;wreg free
 33617                           
 33618                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 33619  0058D8  0EE0               	movlw	low (_ts_system+68)
 33620  0058DA  6E01               	movwf	decrementTimeslot@ts^0,c
 33621  0058DC  0E01               	movlw	high (_ts_system+68)
 33622  0058DE  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33623  0058E0  EC96  F046         	call	_decrementTimeslot	;wreg free
 33624                           
 33625                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 33626  0058E4  0100               	movlb	0	; () banked
 33627  0058E6  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 33628  0058E8  B4D8               	btfsc	status,2,c
 33629  0058EA  D008               	goto	i2u1460_40
 33630                           
 33631                           ; BSR set to: 0
 33632  0058EC  0101               	movlb	1	; () banked
 33633  0058EE  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 33634  0058F0  D005               	goto	i2u1460_40
 33635  0058F2  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 33636  0058F4  E109               	bnz	i2l2019
 33637  0058F6  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 33638  0058F8  B0D8               	btfsc	status,0,c
 33639  0058FA  D006               	goto	i2l2019
 33640  0058FC                     i2u1460_40:
 33641                           
 33642                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 33643  0058FC  0ECE               	movlw	low (_ts_system+50)
 33644  0058FE  6E01               	movwf	decrementTimeslot@ts^0,c
 33645  005900  0E01               	movlw	high (_ts_system+50)
 33646  005902  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33647  005904  EC96  F046         	call	_decrementTimeslot	;wreg free
 33648  005908                     i2l2019:
 33649                           
 33650                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 33651  005908  0ED0               	movlw	low (_ts_system+52)
 33652  00590A  6E01               	movwf	decrementTimeslot@ts^0,c
 33653  00590C  0E01               	movlw	high (_ts_system+52)
 33654  00590E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33655  005910  EC96  F046         	call	_decrementTimeslot	;wreg free
 33656                           
 33657                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 33658  005914  0ED2               	movlw	low (_ts_system+54)
 33659  005916  6E01               	movwf	decrementTimeslot@ts^0,c
 33660  005918  0E01               	movlw	high (_ts_system+54)
 33661  00591A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33662  00591C  EC96  F046         	call	_decrementTimeslot	;wreg free
 33663                           
 33664                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 33665  005920  0ED4               	movlw	low (_ts_system+56)
 33666  005922  6E01               	movwf	decrementTimeslot@ts^0,c
 33667  005924  0E01               	movlw	high (_ts_system+56)
 33668  005926  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33669  005928  EC96  F046         	call	_decrementTimeslot	;wreg free
 33670                           
 33671                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 33672  00592C  0ED6               	movlw	low (_ts_system+58)
 33673  00592E  6E01               	movwf	decrementTimeslot@ts^0,c
 33674  005930  0E01               	movlw	high (_ts_system+58)
 33675  005932  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33676  005934  EC96  F046         	call	_decrementTimeslot	;wreg free
 33677                           
 33678                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 33679  005938  0ED8               	movlw	low (_ts_system+60)
 33680  00593A  6E01               	movwf	decrementTimeslot@ts^0,c
 33681  00593C  0E01               	movlw	high (_ts_system+60)
 33682  00593E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33683  005940  EC96  F046         	call	_decrementTimeslot	;wreg free
 33684                           
 33685                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 33686  005944  0EDA               	movlw	low (_ts_system+62)
 33687  005946  6E01               	movwf	decrementTimeslot@ts^0,c
 33688  005948  0E01               	movlw	high (_ts_system+62)
 33689  00594A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33690  00594C  EC96  F046         	call	_decrementTimeslot	;wreg free
 33691                           
 33692                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 33693  005950  0EDC               	movlw	low (_ts_system+64)
 33694  005952  6E01               	movwf	decrementTimeslot@ts^0,c
 33695  005954  0E01               	movlw	high (_ts_system+64)
 33696  005956  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33697  005958  EC96  F046         	call	_decrementTimeslot	;wreg free
 33698                           
 33699                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 33700  00595C  0101               	movlb	1	; () banked
 33701  00595E  BFBF               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 33702  005960  0012               	return	
 33703  005962  51BF               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 33704  005964  11BE               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 33705  005966  11BD               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 33706  005968  E103               	bnz	i2u1461_40
 33707  00596A  05BC               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 33708  00596C  A0D8               	btfss	status,0,c
 33709  00596E  0012               	return	
 33710  005970                     i2u1461_40:
 33711                           
 33712                           ; BSR set to: 1
 33713                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 33714  005970  0EFF               	movlw	255
 33715  005972  27BC               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 33716  005974  0EFF               	movlw	255
 33717  005976  23BD               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 33718  005978  0EFF               	movlw	255
 33719  00597A  23BE               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 33720  00597C  0EFF               	movlw	255
 33721  00597E  23BF               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 33722                           
 33723                           ; BSR set to: 1
 33724  005980  0012               	return		;funcret
 33725  005982                     __end_of_controlTimeslots:
 33726                           	callstack 0
 33727                           
 33728 ;; *************** function _decrementTimeslot *****************
 33729 ;; Defined at:
 33730 ;;		line 246 in file "main_MC50.c"
 33731 ;; Parameters:    Size  Location     Type
 33732 ;;  ts              2    0[COMRAM] PTR int 
 33733 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 33734 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 33735 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 33736 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 33737 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 33738 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 33739 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 33740 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 33741 ;; Auto vars:     Size  Location     Type
 33742 ;;		None
 33743 ;; Return value:  Size  Location     Type
 33744 ;;                  1    wreg      void 
 33745 ;; Registers used:
 33746 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33747 ;; Tracked objects:
 33748 ;;		On entry : 0/1
 33749 ;;		On exit  : 0/0
 33750 ;;		Unchanged: 0/0
 33751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33754 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33755 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33756 ;;Total ram usage:        4 bytes
 33757 ;; Hardware stack levels used: 1
 33758 ;; This function calls:
 33759 ;;		Nothing
 33760 ;; This function is called by:
 33761 ;;		_controlTimeslots
 33762 ;; This function uses a non-reentrant model
 33763 ;;
 33764                           
 33765                           	psect	text188
 33766  008D2C                     __ptext188:
 33767                           	callstack 0
 33768  008D2C                     _decrementTimeslot:
 33769                           	callstack 14
 33770                           
 33771                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 33772                           
 33773                           ; BSR set to: 1
 33774                           ;incstack = 0
 33775  008D2C  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 33776  008D30  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 33777  008D34  0E01               	movlw	1
 33778  008D36  BEDB               	btfsc	plusw2,7,c
 33779  008D38  0012               	return	
 33780  008D3A  0E01               	movlw	1
 33781  008D3C  50DB               	movf	plusw2,w,c
 33782  008D3E  E103               	bnz	i2u1301_40
 33783  008D40  04DE               	decf	postinc2,w,c
 33784  008D42  A0D8               	btfss	status,0,c
 33785  008D44  0012               	return	
 33786  008D46                     i2u1301_40:
 33787                           
 33788                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 33789  008D46  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 33790  008D4A  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 33791  008D4E  06DE               	decf	postinc2,f,c
 33792  008D50  0E00               	movlw	0
 33793  008D52  5ADD               	subwfb	postdec2,f,c
 33794  008D54  0012               	return		;funcret
 33795  008D56                     __end_of_decrementTimeslot:
 33796                           	callstack 0
 33797                           
 33798 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 33799 ;; Defined at:
 33800 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 33801 ;; Parameters:    Size  Location     Type
 33802 ;;		None
 33803 ;; Auto vars:     Size  Location     Type
 33804 ;;		None
 33805 ;; Return value:  Size  Location     Type
 33806 ;;                  1    wreg      void 
 33807 ;; Registers used:
 33808 ;;		None
 33809 ;; Tracked objects:
 33810 ;;		On entry : 3F/2
 33811 ;;		On exit  : 3F/2
 33812 ;;		Unchanged: 3F/0
 33813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33818 ;;Total ram usage:        0 bytes
 33819 ;; Hardware stack levels used: 1
 33820 ;; This function calls:
 33821 ;;		Nothing
 33822 ;; This function is called by:
 33823 ;;		_TMR2_Initialize
 33824 ;;		_TMR2_ISR
 33825 ;; This function uses a non-reentrant model
 33826 ;;
 33827                           
 33828                           	psect	text189
 33829  009272                     __ptext189:
 33830                           	callstack 0
 33831  009272                     _TMR2_DefaultInterruptHandler:
 33832                           	callstack 15
 33833                           
 33834                           ; BSR set to: 2
 33835                           
 33836                           ;incstack = 0
 33837  009272  0012               	return		;funcret
 33838  009274                     __end_of_TMR2_DefaultInterruptHandler:
 33839                           	callstack 0
 33840                           
 33841 ;; *************** function _ReadADC *****************
 33842 ;; Defined at:
 33843 ;;		line 38 in file "controlCurrent_MC50.c"
 33844 ;; Parameters:    Size  Location     Type
 33845 ;;		None
 33846 ;; Auto vars:     Size  Location     Type
 33847 ;;		None
 33848 ;; Return value:  Size  Location     Type
 33849 ;;                  1    wreg      void 
 33850 ;; Registers used:
 33851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33852 ;; Tracked objects:
 33853 ;;		On entry : 3F/E
 33854 ;;		On exit  : 31/0
 33855 ;;		Unchanged: 0/0
 33856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33859 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33860 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33861 ;;Total ram usage:        3 bytes
 33862 ;; Hardware stack levels used: 1
 33863 ;; Hardware stack levels required when called: 1
 33864 ;; This function calls:
 33865 ;;		_ADCC_GetSingleConversion
 33866 ;; This function is called by:
 33867 ;;		_TMR2_ISR
 33868 ;; This function uses a non-reentrant model
 33869 ;;
 33870                           
 33871                           	psect	text190
 33872  008474                     __ptext190:
 33873                           	callstack 0
 33874  008474                     _ReadADC:
 33875                           	callstack 14
 33876                           
 33877                           ; BSR set to: 14
 33878                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 33879                           
 33880                           ; BSR set to: 2
 33881                           ;incstack = 0
 33882  008474  B060               	btfsc	96,0,c	;volatile
 33883  008476  0012               	return	
 33884                           
 33885                           ; BSR set to: 14
 33886                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 33887  008478  0E1D               	movlw	29
 33888  00847A  0100               	movlb	0	; () banked
 33889  00847C  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 33890  00847E  D002               	goto	i2l14306
 33891                           
 33892                           ; BSR set to: 0
 33893                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 33894  008480  0E00               	movlw	0
 33895  008482  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 33896  008484                     i2l14306:
 33897                           
 33898                           ; BSR set to: 0
 33899                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 33900  008484  5063               	movf	99,w,c	;volatile
 33901  008486  CF64 F002          	movff	3940,??_ReadADC	;volatile
 33902  00848A  6A03               	clrf	(??_ReadADC+1)^0,c
 33903  00848C  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 33904  008490  6A02               	clrf	??_ReadADC^0,c
 33905  008492  2602               	addwf	??_ReadADC^0,f,c
 33906  008494  0E00               	movlw	0
 33907  008496  2203               	addwfc	(??_ReadADC+1)^0,f,c
 33908  008498  0E06               	movlw	6
 33909  00849A  6E04               	movwf	(??_ReadADC+2)^0,c
 33910  00849C                     i2u1452_45:
 33911  00849C  90D8               	bcf	status,0,c
 33912  00849E  3203               	rrcf	(??_ReadADC+1)^0,f,c
 33913  0084A0  3202               	rrcf	??_ReadADC^0,f,c
 33914  0084A2  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 33915  0084A4  D7FB               	goto	i2u1452_45
 33916  0084A6  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 33917  0084A8  0D02               	mullw	2
 33918  0084AA  0E00               	movlw	low _ADC_array
 33919  0084AC  24F3               	addwf	243,w,c
 33920  0084AE  6ED9               	movwf	fsr2l,c
 33921  0084B0  0E02               	movlw	high _ADC_array
 33922  0084B2  20F4               	addwfc	prodh,w,c
 33923  0084B4  6EDA               	movwf	fsr2h,c
 33924  0084B6  C002  FFDE         	movff	??_ReadADC,postinc2
 33925  0084BA  C003  FFDD         	movff	??_ReadADC+1,postdec2
 33926                           
 33927                           ; BSR set to: 0
 33928                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 33929  0084BE  0E00               	movlw	0
 33930  0084C0  EC3F  F048         	call	_ADCC_GetSingleConversion
 33931                           
 33932                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 33933  0084C4  0100               	movlb	0	; () banked
 33934  0084C6  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 33935  0084C8  0012               	return		;funcret
 33936  0084CA                     __end_of_ReadADC:
 33937                           	callstack 0
 33938                           
 33939 ;; *************** function _ADCC_GetSingleConversion *****************
 33940 ;; Defined at:
 33941 ;;		line 131 in file "mcc_generated_files/adcc.c"
 33942 ;; Parameters:    Size  Location     Type
 33943 ;;  channel         1    wreg     enum E10053
 33944 ;; Auto vars:     Size  Location     Type
 33945 ;;  channel         1    0[COMRAM] enum E10053
 33946 ;; Return value:  Size  Location     Type
 33947 ;;                  2  433[None  ] int 
 33948 ;; Registers used:
 33949 ;;		wreg, status,2, cstack
 33950 ;; Tracked objects:
 33951 ;;		On entry : 3F/0
 33952 ;;		On exit  : 0/0
 33953 ;;		Unchanged: 0/0
 33954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33959 ;;Total ram usage:        1 bytes
 33960 ;; Hardware stack levels used: 1
 33961 ;; This function calls:
 33962 ;;		Nothing
 33963 ;; This function is called by:
 33964 ;;		_ReadADC
 33965 ;; This function uses a non-reentrant model
 33966 ;;
 33967                           
 33968                           	psect	text191
 33969  00907E                     __ptext191:
 33970                           	callstack 0
 33971  00907E                     _ADCC_GetSingleConversion:
 33972                           	callstack 14
 33973                           
 33974                           ;incstack = 0
 33975                           ;ADCC_GetSingleConversion@channel stored from wreg
 33976  00907E  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 33977                           
 33978                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 33979  009080  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 33980                           
 33981                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 33982  009084  8E60               	bsf	96,7,c	;volatile
 33983                           
 33984                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 33985  009086  0E1A               	movlw	26
 33986  009088                     i2u2879_47:
 33987  009088  2EE8               	decfsz	wreg,f,c
 33988  00908A  D7FE               	bra	i2u2879_47
 33989  00908C  D000               	nop2	
 33990                           
 33991                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 33992  00908E  9C60               	bcf	96,6,c	;volatile
 33993                           
 33994                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 33995  009090  8060               	bsf	96,0,c	;volatile
 33996  009092  0012               	return		;funcret
 33997  009094                     __end_of_ADCC_GetSingleConversion:
 33998                           	callstack 0
 33999                           
 34000 ;; *************** function _TMR1_ISR *****************
 34001 ;; Defined at:
 34002 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 34003 ;; Parameters:    Size  Location     Type
 34004 ;;		None
 34005 ;; Auto vars:     Size  Location     Type
 34006 ;;		None
 34007 ;; Return value:  Size  Location     Type
 34008 ;;                  1    wreg      void 
 34009 ;; Registers used:
 34010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34011 ;; Tracked objects:
 34012 ;;		On entry : 3F/E
 34013 ;;		On exit  : 0/0
 34014 ;;		Unchanged: 0/0
 34015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34020 ;;Total ram usage:        0 bytes
 34021 ;; Hardware stack levels used: 1
 34022 ;; Hardware stack levels required when called: 2
 34023 ;; This function calls:
 34024 ;;		Absolute function
 34025 ;;		_TMR1_DefaultInterruptHandler
 34026 ;;		_TMR1_WriteTimer
 34027 ;;		_controlMotorForce
 34028 ;; This function is called by:
 34029 ;;		_INTERRUPT_InterruptManager
 34030 ;; This function uses a non-reentrant model
 34031 ;;
 34032                           
 34033                           	psect	text192
 34034  00890E                     __ptext192:
 34035                           	callstack 0
 34036  00890E                     _TMR1_ISR:
 34037                           	callstack 14
 34038                           
 34039                           ; BSR set to: 14
 34040                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 34041                           
 34042                           ;incstack = 0
 34043  00890E  91CE               	bcf	206,0,b	;volatile
 34044                           
 34045                           ; BSR set to: 14
 34046                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 34047  008910  ECA5  F024         	call	_controlMotorForce	;wreg free
 34048                           
 34049                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 34050  008914  0101               	movlb	1	; () banked
 34051  008916  51A1               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 34052  008918  A4D8               	btfss	status,2,c
 34053                           
 34054                           ; BSR set to: 1
 34055                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 34056  00891A  07A1               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 34057                           
 34058                           ; BSR set to: 1
 34059                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 34060  00891C  519E               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 34061  00891E  A4D8               	btfss	status,2,c
 34062                           
 34063                           ; BSR set to: 1
 34064                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 34065  008920  079E               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 34066                           
 34067                           ; BSR set to: 1
 34068                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 34069  008922  C2DF  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 34070  008926  C2E0  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 34071  00892A  EC9E  F047         	call	_TMR1_WriteTimer	;wreg free
 34072                           
 34073                           ; BSR set to: 1
 34074                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 34075  00892E  0102               	movlb	2	; () banked
 34076  008930  51DD               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34077  008932  11DE               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34078  008934  B4D8               	btfsc	status,2,c
 34079  008936  0012               	return	
 34080                           
 34081                           ; BSR set to: 2
 34082                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 34083  008938  D801               	call	i2u1828_48
 34084  00893A  0012               	return	
 34085  00893C                     i2u1828_48:
 34086  00893C  0005               	push	
 34087  00893E  6EFA               	movwf	pclath,c
 34088  008940  51DD               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34089  008942  6EFD               	movwf	tosl,c
 34090  008944  51DE               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34091  008946  6EFE               	movwf	tosh,c
 34092  008948  6AFF               	clrf	tosu,c
 34093  00894A  50FA               	movf	pclath,w,c
 34094  00894C  0012               	return		;indir
 34095  00894E                     __end_of_TMR1_ISR:
 34096                           	callstack 0
 34097                           
 34098 ;; *************** function _controlMotorForce *****************
 34099 ;; Defined at:
 34100 ;;		line 213 in file "outputs_MC50.c"
 34101 ;; Parameters:    Size  Location     Type
 34102 ;;		None
 34103 ;; Auto vars:     Size  Location     Type
 34104 ;;		None
 34105 ;; Return value:  Size  Location     Type
 34106 ;;                  1    wreg      void 
 34107 ;; Registers used:
 34108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34109 ;; Tracked objects:
 34110 ;;		On entry : 3F/E
 34111 ;;		On exit  : 3E/0
 34112 ;;		Unchanged: 0/0
 34113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34116 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34117 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34118 ;;Total ram usage:        5 bytes
 34119 ;; Hardware stack levels used: 1
 34120 ;; Hardware stack levels required when called: 1
 34121 ;; This function calls:
 34122 ;;		i2_GetMotorPower
 34123 ;;		i2_VerifyElectricalBrake
 34124 ;; This function is called by:
 34125 ;;		_TMR1_ISR
 34126 ;; This function uses a non-reentrant model
 34127 ;;
 34128                           
 34129                           	psect	text193
 34130  00494A                     __ptext193:
 34131                           	callstack 0
 34132  00494A                     _controlMotorForce:
 34133                           	callstack 14
 34134                           
 34135                           ; BSR set to: 14
 34136                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 34137                           
 34138                           ;incstack = 0
 34139  00494A  ECE4  F037         	call	i2_GetMotorPower	;wreg free
 34140  00494E  6F91               	movwf	_difTime& (0+255),b
 34141                           
 34142                           ; BSR set to: 1
 34143                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 34144  004950  057B               	decf	_powerControl_st& (0+255),w,b
 34145  004952  A4D8               	btfss	status,2,c
 34146  004954  D00F               	goto	i2l2186
 34147                           
 34148                           ; BSR set to: 1
 34149                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 34150  004956  BFC9               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 34151  004958  D008               	goto	i2l14194
 34152  00495A  51C9               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 34153  00495C  E103               	bnz	i2u1412_40
 34154  00495E  05C8               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 34155  004960  A0D8               	btfss	status,0,c
 34156  004962  D003               	goto	i2l14194
 34157  004964                     i2u1412_40:
 34158                           
 34159                           ; BSR set to: 1
 34160                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 34161  004964  0E00               	movlw	0
 34162  004966  6F92               	movwf	_StateTRIAC& (0+255),b
 34163                           
 34164                           ;outputs_MC50.c: 223:         }
 34165  004968  D005               	goto	i2l2186
 34166  00496A                     i2l14194:
 34167                           
 34168                           ; BSR set to: 1
 34169  00496A  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 34170  00496C  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 34171  00496E  A0D8               	btfss	status,0,c
 34172                           
 34173                           ; BSR set to: 1
 34174                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 34175  004970  C17E  F191         	movff	_powerControl_st+3,_difTime
 34176  004974                     i2l2186:
 34177                           
 34178                           ; BSR set to: 1
 34179                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 34180  004974  A68D               	btfss	141,3,c	;volatile
 34181  004976  D071               	goto	i2l2190
 34182                           
 34183                           ; BSR set to: 1
 34184  004978  5194               	movf	_zeroCrossing& (0+255),w,b
 34185  00497A  A4D8               	btfss	status,2,c
 34186  00497C  D06E               	goto	i2l2190
 34187                           
 34188                           ; BSR set to: 1
 34189                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 34190  00497E  5193               	movf	_waitZeroPeak& (0+255),w,b
 34191  004980  A4D8               	btfss	status,2,c
 34192  004982  D016               	goto	i2l14210
 34193                           
 34194                           ; BSR set to: 1
 34195                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 34196  004984  0EED               	movlw	low _zeroCrossingWaitTime
 34197  004986  0100               	movlb	0	; () banked
 34198  004988  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34199  00498A  6ED9               	movwf	fsr2l,c
 34200  00498C  6ADA               	clrf	fsr2h,c
 34201  00498E  0E02               	movlw	high _zeroCrossingWaitTime
 34202  004990  22DA               	addwfc	fsr2h,f,c
 34203  004992  0101               	movlb	1	; () banked
 34204  004994  90D8               	bcf	status,0,c
 34205  004996  3195               	rrcf	_zeroCrossingLength& (0+255),w,b
 34206  004998  6EDF               	movwf	indf2,c
 34207                           
 34208                           ; BSR set to: 1
 34209                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 34210  00499A  0100               	movlb	0	; () banked
 34211  00499C  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34212  00499E  A4D8               	btfss	status,2,c
 34213  0049A0  D002               	goto	i2l14208
 34214                           
 34215                           ; BSR set to: 0
 34216                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 34217  0049A2  0E01               	movlw	1
 34218  0049A4  D001               	goto	L116
 34219  0049A6                     i2l14208:
 34220                           
 34221                           ; BSR set to: 0
 34222                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 34223  0049A6  0E00               	movlw	0
 34224  0049A8                     L116:
 34225  0049A8  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 34226                           
 34227                           ; BSR set to: 0
 34228                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 34229                           
 34230                           ;outputs_MC50.c: 268:             }
 34231  0049AA  0E00               	movlw	0
 34232  0049AC  0101               	movlb	1	; () banked
 34233  0049AE  6F95               	movwf	_zeroCrossingLength& (0+255),b
 34234  0049B0                     i2l14210:
 34235                           
 34236                           ; BSR set to: 1
 34237                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 34238  0049B0  0E50               	movlw	80
 34239  0049B2  6591               	cpfsgt	_difTime& (0+255),b
 34240  0049B4  D007               	goto	i2u1419_40
 34241                           
 34242                           ; BSR set to: 1
 34243  0049B6  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34244  0049B8  D008               	goto	i2l14216
 34245  0049BA  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34246  0049BC  E103               	bnz	i2u1419_40
 34247  0049BE  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34248  0049C0  A0D8               	btfss	status,0,c
 34249  0049C2  D003               	goto	i2l14216
 34250  0049C4                     i2u1419_40:
 34251                           
 34252                           ; BSR set to: 1
 34253                           
 34254                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 34255  0049C4  9E86               	bcf	134,7,c	;volatile
 34256                           
 34257                           ; BSR set to: 1
 34258                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 34259  0049C6  0E00               	movlw	0
 34260  0049C8  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34261  0049CA                     i2l14216:
 34262                           
 34263                           ; BSR set to: 1
 34264                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 34265  0049CA  2B93               	incf	_waitZeroPeak& (0+255),f,b
 34266                           
 34267                           ; BSR set to: 1
 34268                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 34269  0049CC  0EED               	movlw	low _zeroCrossingWaitTime
 34270  0049CE  0100               	movlb	0	; () banked
 34271  0049D0  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34272  0049D2  6ED9               	movwf	fsr2l,c
 34273  0049D4  6ADA               	clrf	fsr2h,c
 34274  0049D6  0E02               	movlw	high _zeroCrossingWaitTime
 34275  0049D8  22DA               	addwfc	fsr2h,f,c
 34276  0049DA  0101               	movlb	1	; () banked
 34277  0049DC  5193               	movf	_waitZeroPeak& (0+255),w,b
 34278  0049DE  5CDE               	subwf	postinc2,w,c
 34279  0049E0  B0D8               	btfsc	status,0,c
 34280  0049E2  D044               	goto	i2l14246
 34281                           
 34282                           ; BSR set to: 1
 34283                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 34284  0049E4  0E59               	movlw	89
 34285  0049E6  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 34286  0049E8  D005               	goto	i2l14226
 34287                           
 34288                           ; BSR set to: 1
 34289  0049EA  0E6A               	movlw	106
 34290  0049EC  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 34291  0049EE  D002               	goto	i2l14226
 34292                           
 34293                           ; BSR set to: 1
 34294                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 34295  0049F0  0E01               	movlw	1
 34296  0049F2  D001               	goto	L117
 34297  0049F4                     i2l14226:
 34298                           
 34299                           ; BSR set to: 1
 34300                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 34301  0049F4  0E00               	movlw	0
 34302  0049F6                     L117:
 34303  0049F6  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 34304                           
 34305                           ; BSR set to: 1
 34306                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 34307                           
 34308                           ;outputs_MC50.c: 292:             }
 34309  0049F8  0E50               	movlw	80
 34310  0049FA  6FA1               	movwf	(_ts_system+5)& (0+255),b	;volatile
 34311                           
 34312                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 34313  0049FC  0E00               	movlw	0
 34314  0049FE  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 34315                           
 34316                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 34317  004A00  0E01               	movlw	1
 34318  004A02  6F92               	movwf	_StateTRIAC& (0+255),b
 34319                           
 34320                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 34321  004A04  0E01               	movlw	1
 34322  004A06  6F94               	movwf	_zeroCrossing& (0+255),b
 34323                           
 34324                           ; BSR set to: 1
 34325                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 34326  004A08  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 34327                           
 34328                           ; BSR set to: 1
 34329                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 34330  004A0A  0100               	movlb	0	; () banked
 34331  004A0C  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34332  004A0E  A4D8               	btfss	status,2,c
 34333  004A10  D00E               	goto	i2l14238
 34334                           
 34335                           ; BSR set to: 0
 34336  004A12  0101               	movlb	1	; () banked
 34337  004A14  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34338  004A16  D00B               	goto	i2l14238
 34339  004A18  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34340  004A1A  E103               	bnz	i2u1424_40
 34341  004A1C  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34342  004A1E  A0D8               	btfss	status,0,c
 34343  004A20  D006               	goto	i2l14238
 34344  004A22                     i2u1424_40:
 34345                           
 34346                           ; BSR set to: 1
 34347                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 34348  004A22  0E01               	movlw	1
 34349  004A24  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 34350  004A26  D022               	goto	i2l14246
 34351  004A28                     i2u1425_40:
 34352                           
 34353                           ; BSR set to: 1
 34354                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 34355  004A28  0E00               	movlw	0
 34356  004A2A  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 34357  004A2C  D01F               	goto	i2l14246
 34358  004A2E                     i2l14238:
 34359                           
 34360                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 34361  004A2E  0101               	movlb	1	; () banked
 34362  004A30  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 34363  004A32  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 34364  004A36  6A06               	clrf	(??_controlMotorForce+1)^0,c
 34365  004A38  2605               	addwf	??_controlMotorForce^0,f,c
 34366  004A3A  0E00               	movlw	0
 34367  004A3C  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 34368  004A3E  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 34369  004A40  6E07               	movwf	(??_controlMotorForce+2)^0,c
 34370  004A42  6A08               	clrf	(??_controlMotorForce+3)^0,c
 34371  004A44  5005               	movf	??_controlMotorForce^0,w,c
 34372  004A46  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 34373  004A48  5008               	movf	(??_controlMotorForce+3)^0,w,c
 34374  004A4A  0A80               	xorlw	128
 34375  004A4C  6E09               	movwf	(??_controlMotorForce+4)^0,c
 34376  004A4E  5006               	movf	(??_controlMotorForce+1)^0,w,c
 34377  004A50  0A80               	xorlw	128
 34378  004A52  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 34379  004A54  B0D8               	btfsc	status,0,c
 34380  004A56  D7E8               	goto	i2u1425_40
 34381  004A58  D009               	goto	i2l14246
 34382  004A5A                     i2l2190:
 34383                           
 34384                           ; BSR set to: 1
 34385  004A5A  B68D               	btfsc	141,3,c	;volatile
 34386  004A5C  D007               	goto	i2l14246
 34387                           
 34388                           ; BSR set to: 1
 34389  004A5E  5194               	movf	_zeroCrossing& (0+255),w,b
 34390  004A60  B4D8               	btfsc	status,2,c
 34391  004A62  D004               	goto	i2l14246
 34392                           
 34393                           ; BSR set to: 1
 34394                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 34395  004A64  0E00               	movlw	0
 34396  004A66  6F94               	movwf	_zeroCrossing& (0+255),b
 34397                           
 34398                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 34399  004A68  0E00               	movlw	0
 34400  004A6A  6F93               	movwf	_waitZeroPeak& (0+255),b
 34401  004A6C                     i2l14246:
 34402                           
 34403                           ; BSR set to: 1
 34404                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 34405  004A6C  B68D               	btfsc	141,3,c	;volatile
 34406                           
 34407                           ; BSR set to: 1
 34408                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 34409  004A6E  2B95               	incf	_zeroCrossingLength& (0+255),f,b
 34410                           
 34411                           ; BSR set to: 1
 34412                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 34413                           
 34414                           ;outputs_MC50.c: 340:     }
 34415  004A70  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 34416                           
 34417                           ; BSR set to: 1
 34418                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 34419  004A72  5100               	movf	_var_sys& (0+255),w,b	;volatile
 34420  004A74  EC75  F03E         	call	i2_VerifyElectricalBrake
 34421  004A78  0100               	movlb	0	; () banked
 34422  004A7A  6F83               	movwf	_stateMotor& (0+255),b
 34423                           
 34424                           ; BSR set to: 0
 34425                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 34426  004A7C  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34427  004A7E  A4D8               	btfss	status,2,c
 34428  004A80  D02E               	goto	i2l14270
 34429                           
 34430                           ; BSR set to: 0
 34431  004A82  0101               	movlb	1	; () banked
 34432  004A84  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34433  004A86  D02B               	goto	i2l14270
 34434  004A88  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34435  004A8A  E103               	bnz	i2u1431_40
 34436  004A8C  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34437  004A8E  A0D8               	btfss	status,0,c
 34438  004A90  D026               	goto	i2l14270
 34439  004A92                     i2u1431_40:
 34440                           
 34441                           ; BSR set to: 1
 34442  004A92  BFDD               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 34443  004A94  D005               	goto	i2u1432_40
 34444  004A96  51DD               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 34445  004A98  E122               	bnz	i2l14270
 34446  004A9A  05DC               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 34447  004A9C  B0D8               	btfsc	status,0,c
 34448  004A9E  D01F               	goto	i2l14270
 34449  004AA0                     i2u1432_40:
 34450                           
 34451                           ; BSR set to: 1
 34452                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 34453  004AA0  0100               	movlb	0	; () banked
 34454  004AA2  5183               	movf	_stateMotor& (0+255),w,b
 34455  004AA4  B4D8               	btfsc	status,2,c
 34456  004AA6  D03A               	goto	i2l14282
 34457                           
 34458                           ; BSR set to: 0
 34459  004AA8  0101               	movlb	1	; () banked
 34460  004AAA  0592               	decf	_StateTRIAC& (0+255),w,b
 34461  004AAC  A4D8               	btfss	status,2,c
 34462  004AAE  D036               	goto	i2l14282
 34463                           
 34464                           ; BSR set to: 1
 34465  004AB0  BFA3               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34466  004AB2  D005               	goto	i2u1435_40
 34467  004AB4  51A3               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34468  004AB6  E132               	bnz	i2l14282
 34469  004AB8  05A2               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34470  004ABA  B0D8               	btfsc	status,0,c
 34471  004ABC  D02F               	goto	i2l14282
 34472  004ABE                     i2u1435_40:
 34473                           
 34474                           ; BSR set to: 1
 34475  004ABE  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 34476  004AC0  A4D8               	btfss	status,2,c
 34477  004AC2  D02C               	goto	i2l14282
 34478                           
 34479                           ; BSR set to: 1
 34480  004AC4  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34481  004AC6  D006               	goto	i2u1437_40
 34482  004AC8  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34483  004ACA  E128               	bnz	i2l14282
 34484  004ACC  0E0C               	movlw	12
 34485  004ACE  5DC4               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 34486  004AD0  B0D8               	btfsc	status,0,c
 34487  004AD2  D024               	goto	i2l14282
 34488  004AD4                     i2u1437_40:
 34489                           
 34490                           ; BSR set to: 1
 34491                           
 34492                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 34493  004AD4  8E86               	bsf	134,7,c	;volatile
 34494                           
 34495                           ; BSR set to: 1
 34496                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 34497  004AD6  0EEC               	movlw	236
 34498  004AD8  6FA3               	movwf	(_ts_system+7)& (0+255),b	;volatile
 34499  004ADA  0E78               	movlw	120
 34500  004ADC  D01A               	goto	L118
 34501  004ADE                     i2l14270:
 34502                           
 34503                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 34504  004ADE  0100               	movlb	0	; () banked
 34505  004AE0  5183               	movf	_stateMotor& (0+255),w,b
 34506  004AE2  B4D8               	btfsc	status,2,c
 34507  004AE4  D01B               	goto	i2l14282
 34508                           
 34509                           ; BSR set to: 0
 34510  004AE6  0101               	movlb	1	; () banked
 34511  004AE8  5191               	movf	_difTime& (0+255),w,b
 34512  004AEA  5DA1               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 34513  004AEC  B0D8               	btfsc	status,0,c
 34514  004AEE  D016               	goto	i2l14282
 34515                           
 34516                           ; BSR set to: 1
 34517  004AF0  0592               	decf	_StateTRIAC& (0+255),w,b
 34518  004AF2  A4D8               	btfss	status,2,c
 34519  004AF4  D013               	goto	i2l14282
 34520                           
 34521                           ; BSR set to: 1
 34522  004AF6  BFA3               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34523  004AF8  D005               	goto	i2u1441_40
 34524  004AFA  51A3               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34525  004AFC  E10F               	bnz	i2l14282
 34526  004AFE  05A2               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34527  004B00  B0D8               	btfsc	status,0,c
 34528  004B02  D00C               	goto	i2l14282
 34529  004B04                     i2u1441_40:
 34530                           
 34531                           ; BSR set to: 1
 34532  004B04  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 34533  004B06  A4D8               	btfss	status,2,c
 34534  004B08  D009               	goto	i2l14282
 34535                           
 34536                           ; BSR set to: 1
 34537                           
 34538                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 34539  004B0A  8E86               	bsf	134,7,c	;volatile
 34540                           
 34541                           ; BSR set to: 1
 34542                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 34543  004B0C  0EFF               	movlw	255
 34544  004B0E  6FA3               	movwf	(_ts_system+7)& (0+255),b	;volatile
 34545  004B10  0E38               	movlw	56
 34546  004B12                     L118:
 34547  004B12  6FA2               	movwf	(_ts_system+6)& (0+255),b	;volatile
 34548                           
 34549                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 34550  004B14  0E01               	movlw	1
 34551  004B16  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34552                           
 34553                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 34554  004B18  0E00               	movlw	0
 34555  004B1A  6F92               	movwf	_StateTRIAC& (0+255),b
 34556  004B1C                     i2l14282:
 34557                           
 34558                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 34559  004B1C  0E15               	movlw	21
 34560  004B1E  0101               	movlb	1	; () banked
 34561  004B20  61A1               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 34562  004B22  D002               	goto	i2u1444_40
 34563                           
 34564                           ; BSR set to: 1
 34565  004B24  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34566  004B26  D004               	goto	i2u1445_40
 34567  004B28                     i2u1444_40:
 34568                           
 34569                           ; BSR set to: 1
 34570  004B28  0100               	movlb	0	; () banked
 34571  004B2A  5183               	movf	_stateMotor& (0+255),w,b
 34572  004B2C  A4D8               	btfss	status,2,c
 34573  004B2E  D004               	goto	i2l2217
 34574  004B30                     i2u1445_40:
 34575                           
 34576                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 34577  004B30  9E86               	bcf	134,7,c	;volatile
 34578                           
 34579                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 34580  004B32  0E00               	movlw	0
 34581  004B34  0101               	movlb	1	; () banked
 34582  004B36  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34583  004B38                     i2l2217:
 34584                           
 34585                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 34586  004B38  0100               	movlb	0	; () banked
 34587  004B3A  5183               	movf	_stateMotor& (0+255),w,b
 34588  004B3C  B4D8               	btfsc	status,2,c
 34589  004B3E  D00C               	goto	i2l14294
 34590                           
 34591                           ; BSR set to: 0
 34592  004B40  0101               	movlb	1	; () banked
 34593  004B42  BFA3               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34594  004B44  D009               	goto	i2l14294
 34595  004B46  51A3               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34596  004B48  E103               	bnz	i2u1447_40
 34597  004B4A  05A2               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34598  004B4C  A0D8               	btfss	status,0,c
 34599  004B4E  D004               	goto	i2l14294
 34600  004B50                     i2u1447_40:
 34601                           
 34602                           ; BSR set to: 1
 34603                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 34604  004B50  07A2               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 34605  004B52  A0D8               	btfss	status,0,c
 34606  004B54  07A3               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 34607                           
 34608                           ;outputs_MC50.c: 399:     }
 34609  004B56  0012               	return	
 34610  004B58                     i2l14294:
 34611  004B58  0100               	movlb	0	; () banked
 34612  004B5A  5183               	movf	_stateMotor& (0+255),w,b
 34613  004B5C  A4D8               	btfss	status,2,c
 34614  004B5E  0012               	return	
 34615                           
 34616                           ; BSR set to: 0
 34617  004B60  0101               	movlb	1	; () banked
 34618  004B62  AFA3               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 34619  004B64  0012               	return	
 34620                           
 34621                           ; BSR set to: 1
 34622                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 34623  004B66  4BA2               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 34624  004B68  2BA3               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 34625  004B6A  0012               	return		;funcret
 34626  004B6C                     __end_of_controlMotorForce:
 34627                           	callstack 0
 34628                           
 34629 ;; *************** function i2_VerifyElectricalBrake *****************
 34630 ;; Defined at:
 34631 ;;		line 658 in file "outputs_MC50.c"
 34632 ;; Parameters:    Size  Location     Type
 34633 ;;  actualState     1    wreg     enum E10381
 34634 ;; Auto vars:     Size  Location     Type
 34635 ;;  actualState     1    1[COMRAM] enum E10381
 34636 ;;  tempState       1    0[COMRAM] enum E10381
 34637 ;; Return value:  Size  Location     Type
 34638 ;;                  1    wreg      enum E10381
 34639 ;; Registers used:
 34640 ;;		wreg, status,2, status,0
 34641 ;; Tracked objects:
 34642 ;;		On entry : 3F/1
 34643 ;;		On exit  : 3E/0
 34644 ;;		Unchanged: 0/0
 34645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34647 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34650 ;;Total ram usage:        2 bytes
 34651 ;; Hardware stack levels used: 1
 34652 ;; This function calls:
 34653 ;;		Nothing
 34654 ;; This function is called by:
 34655 ;;		_controlMotorForce
 34656 ;; This function uses a non-reentrant model
 34657 ;;
 34658                           
 34659                           	psect	text194
 34660  007CEA                     __ptext194:
 34661                           	callstack 0
 34662  007CEA                     i2_VerifyElectricalBrake:
 34663                           	callstack 14
 34664                           
 34665                           ;incstack = 0
 34666                           ;i2VerifyElectricalBrake@actualState stored from wreg
 34667  007CEA  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 34668                           
 34669                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 34670  007CEC  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 34671                           
 34672                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 34673  007CF0  0100               	movlb	0	; () banked
 34674  007CF2  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34675  007CF4  A4D8               	btfss	status,2,c
 34676  007CF6  D02E               	goto	i2l2318
 34677                           
 34678                           ; BSR set to: 0
 34679  007CF8  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 34680  007CFA  A4D8               	btfss	status,2,c
 34681  007CFC  D02B               	goto	i2l2318
 34682                           
 34683                           ; BSR set to: 0
 34684  007CFE  0101               	movlb	1	; () banked
 34685  007D00  BFDD               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 34686  007D02  D005               	goto	i2u1378_40
 34687  007D04  51DD               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 34688  007D06  E126               	bnz	i2l2318
 34689  007D08  05DC               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 34690  007D0A  B0D8               	btfsc	status,0,c
 34691  007D0C  D023               	goto	i2l2318
 34692  007D0E                     i2u1378_40:
 34693                           
 34694                           ; BSR set to: 1
 34695                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 34696  007D0E  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 34697  007D10  0100               	movlb	0	; () banked
 34698  007D12  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 34699  007D14  B4D8               	btfsc	status,2,c
 34700  007D16  D00B               	goto	i2l13912
 34701                           
 34702                           ; BSR set to: 0
 34703  007D18  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 34704  007D1A  A4D8               	btfss	status,2,c
 34705  007D1C  D008               	goto	i2l13912
 34706                           
 34707                           ; BSR set to: 0
 34708                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 34709  007D1E  0E01               	movlw	1
 34710  007D20  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 34711                           
 34712                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 34713  007D22  0E00               	movlw	0
 34714  007D24  0101               	movlb	1	; () banked
 34715  007D26  6FC5               	movwf	(_ts_system+41)& (0+255),b	;volatile
 34716  007D28  0E16               	movlw	22
 34717  007D2A  6FC4               	movwf	(_ts_system+40)& (0+255),b	;volatile
 34718                           
 34719                           ;outputs_MC50.c: 670:         }
 34720  007D2C  D018               	goto	i2l2323
 34721  007D2E                     i2l13912:
 34722                           
 34723                           ; BSR set to: 0
 34724  007D2E  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 34725  007D30  A4D8               	btfss	status,2,c
 34726  007D32  D00B               	goto	i2l13918
 34727                           
 34728                           ; BSR set to: 0
 34729  007D34  0101               	movlb	1	; () banked
 34730  007D36  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34731  007D38  D008               	goto	i2l13918
 34732  007D3A  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34733  007D3C  E103               	bnz	i2u1382_40
 34734  007D3E  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34735  007D40  A0D8               	btfss	status,0,c
 34736  007D42  D003               	goto	i2l13918
 34737  007D44                     i2u1382_40:
 34738                           
 34739                           ; BSR set to: 1
 34740                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 34741  007D44  0E01               	movlw	1
 34742  007D46  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 34743                           
 34744                           ;outputs_MC50.c: 686:         }
 34745  007D48  D00A               	goto	i2l2323
 34746  007D4A                     i2l13918:
 34747                           
 34748                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 34749  007D4A  0E00               	movlw	0
 34750  007D4C  0100               	movlb	0	; () banked
 34751  007D4E  6F78               	movwf	_brakeElectric_st& (0+255),b
 34752                           
 34753                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 34754  007D50  0E00               	movlw	0
 34755  007D52  D004               	goto	L119
 34756  007D54                     i2l2318:
 34757                           
 34758                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 34759  007D54  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 34760                           
 34761                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 34762  007D58  0E00               	movlw	0
 34763  007D5A  0100               	movlb	0	; () banked
 34764  007D5C                     L119:
 34765  007D5C  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 34766  007D5E                     i2l2323:
 34767                           
 34768                           ;outputs_MC50.c: 700:     return tempState;
 34769  007D5E  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 34770  007D60  0012               	return		;funcret
 34771  007D62                     __end_ofi2_VerifyElectricalBrake:
 34772                           	callstack 0
 34773                           
 34774 ;; *************** function i2_GetMotorPower *****************
 34775 ;; Defined at:
 34776 ;;		line 405 in file "outputs_MC50.c"
 34777 ;; Parameters:    Size  Location     Type
 34778 ;;		None
 34779 ;; Auto vars:     Size  Location     Type
 34780 ;;  defineatraso    1    3[COMRAM] unsigned char 
 34781 ;; Return value:  Size  Location     Type
 34782 ;;                  1    wreg      unsigned char 
 34783 ;; Registers used:
 34784 ;;		wreg, status,2, status,0, prodl, prodh
 34785 ;; Tracked objects:
 34786 ;;		On entry : 3F/E
 34787 ;;		On exit  : 3F/1
 34788 ;;		Unchanged: 0/0
 34789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34792 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34793 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34794 ;;Total ram usage:        4 bytes
 34795 ;; Hardware stack levels used: 1
 34796 ;; This function calls:
 34797 ;;		Nothing
 34798 ;; This function is called by:
 34799 ;;		_controlMotorForce
 34800 ;; This function uses a non-reentrant model
 34801 ;;
 34802                           
 34803                           	psect	text195
 34804  006FC8                     __ptext195:
 34805                           	callstack 0
 34806  006FC8                     i2_GetMotorPower:
 34807                           	callstack 14
 34808                           
 34809                           ; BSR set to: 14
 34810                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 34811                           
 34812                           ;incstack = 0
 34813  006FC8  0101               	movlb	1	; () banked
 34814  006FCA  057B               	decf	_powerControl_st& (0+255),w,b
 34815  006FCC  A4D8               	btfss	status,2,c
 34816  006FCE  D006               	goto	i2l13862
 34817                           
 34818                           ; BSR set to: 1
 34819                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 34820  006FD0  0100               	movlb	0	; () banked
 34821  006FD2  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 34822  006FD4  0D06               	mullw	6
 34823  006FD6  CFF3 F190          	movff	prodl,_temppower
 34824                           
 34825                           ;outputs_MC50.c: 416:     }
 34826  006FDA  D043               	goto	i2l2235
 34827  006FDC                     i2l13862:
 34828                           
 34829                           ; BSR set to: 1
 34830                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 34831  006FDC  0100               	movlb	0	; () banked
 34832  006FDE  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 34833  006FE0  0D06               	mullw	6
 34834  006FE2  CFF3 F082          	movff	prodl,_fullmotorPower
 34835                           
 34836                           ; BSR set to: 0
 34837                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 34838  006FE6  0101               	movlb	1	; () banked
 34839  006FE8  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 34840  006FEA  D01C               	goto	i2l13872
 34841  006FEC  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34842  006FEE  E103               	bnz	i2u1368_40
 34843  006FF0  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 34844  006FF2  A0D8               	btfss	status,0,c
 34845  006FF4  D017               	goto	i2l13872
 34846  006FF6                     i2u1368_40:
 34847                           
 34848                           ; BSR set to: 1
 34849                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 34850  006FF6  0100               	movlb	0	; () banked
 34851  006FF8  5182               	movf	_fullmotorPower& (0+255),w,b
 34852  006FFA  6E01               	movwf	??i2_GetMotorPower^0,c
 34853  006FFC  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 34854  006FFE  0101               	movlb	1	; () banked
 34855  007000  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 34856  007002  5C01               	subwf	??i2_GetMotorPower^0,w,c
 34857  007004  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 34858  007006  0A80               	xorlw	128
 34859  007008  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 34860  00700A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34861  00700C  0A80               	xorlw	128
 34862  00700E  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 34863  007010  B0D8               	btfsc	status,0,c
 34864  007012  D002               	goto	i2l13870
 34865                           
 34866                           ; BSR set to: 1
 34867                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 34868  007014  0E01               	movlw	1
 34869  007016  D004               	goto	L121
 34870  007018                     i2l13870:
 34871                           
 34872                           ; BSR set to: 1
 34873                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 34874  007018  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 34875  00701A  0100               	movlb	0	; () banked
 34876  00701C  5D82               	subwf	_fullmotorPower& (0+255),w,b
 34877  00701E  D017               	goto	L122
 34878  007020                     L121:
 34879  007020  6F90               	movwf	_temppower& (0+255),b
 34880  007022  D01F               	goto	i2l2235
 34881  007024                     i2l13872:
 34882                           
 34883                           ; BSR set to: 1
 34884  007024  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 34885  007026  D005               	goto	i2u1370_40
 34886  007028  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34887  00702A  E113               	bnz	i2l13882
 34888  00702C  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 34889  00702E  B0D8               	btfsc	status,0,c
 34890  007030  D010               	goto	i2l13882
 34891  007032                     i2u1370_40:
 34892                           
 34893                           ; BSR set to: 1
 34894  007032  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 34895  007034  D005               	goto	i2u1371_40
 34896  007036  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 34897  007038  E10C               	bnz	i2l13882
 34898  00703A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 34899  00703C  B0D8               	btfsc	status,0,c
 34900  00703E  D009               	goto	i2l13882
 34901  007040                     i2u1371_40:
 34902                           
 34903                           ; BSR set to: 1
 34904                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 34905  007040  C082  F190         	movff	_fullmotorPower,_temppower
 34906                           
 34907                           ; BSR set to: 1
 34908                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 34909  007044  0E08               	movlw	8
 34910  007046  0100               	movlb	0	; () banked
 34911  007048  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 34912  00704A  D00B               	goto	i2l2235
 34913                           
 34914                           ; BSR set to: 0
 34915                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 34916  00704C  0E3A               	movlw	58
 34917  00704E                     L122:
 34918  00704E  0101               	movlb	1	; () banked
 34919  007050  D7E7               	goto	L121
 34920  007052                     i2l13882:
 34921                           
 34922                           ; BSR set to: 1
 34923  007052  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 34924  007054  D006               	goto	i2l2235
 34925  007056  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 34926  007058  E102               	bnz	i2u1373_40
 34927  00705A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 34928  00705C  B0D8               	btfsc	status,0,c
 34929  00705E                     i2u1373_40:
 34930                           
 34931                           ; BSR set to: 1
 34932                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 34933  00705E  C110  F190         	movff	_var_sys+16,_temppower	;volatile
 34934  007062                     i2l2235:
 34935                           
 34936                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 34937  007062  0101               	movlb	1	; () banked
 34938  007064  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 34939  007066  D00E               	goto	i2l13892
 34940  007068  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 34941  00706A  E103               	bnz	i2u1374_40
 34942  00706C  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 34943  00706E  A0D8               	btfss	status,0,c
 34944  007070  D009               	goto	i2l13892
 34945  007072                     i2u1374_40:
 34946                           
 34947                           ; BSR set to: 1
 34948  007072  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 34949  007074  D005               	goto	i2u1375_40
 34950  007076  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34951  007078  E105               	bnz	i2l13892
 34952  00707A  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 34953  00707C  B0D8               	btfsc	status,0,c
 34954  00707E  D002               	goto	i2l13892
 34955  007080                     i2u1375_40:
 34956                           
 34957                           ; BSR set to: 1
 34958                           ;outputs_MC50.c: 452:     defineatraso = 5;
 34959  007080  0E05               	movlw	5
 34960  007082  D001               	goto	L120
 34961  007084                     i2l13892:
 34962                           
 34963                           ; BSR set to: 1
 34964                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 34965  007084  0E17               	movlw	23
 34966  007086                     L120:
 34967  007086  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 34968                           
 34969                           ; BSR set to: 1
 34970                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 34971  007088  5190               	movf	_temppower& (0+255),w,b
 34972  00708A  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 34973                           
 34974                           ; BSR set to: 1
 34975  00708C  0012               	return		;funcret
 34976  00708E                     __end_ofi2_GetMotorPower:
 34977                           	callstack 0
 34978                           
 34979 ;; *************** function _TMR1_WriteTimer *****************
 34980 ;; Defined at:
 34981 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 34982 ;; Parameters:    Size  Location     Type
 34983 ;;  timerVal        2    0[COMRAM] unsigned short 
 34984 ;; Auto vars:     Size  Location     Type
 34985 ;;		None
 34986 ;; Return value:  Size  Location     Type
 34987 ;;                  1    wreg      void 
 34988 ;; Registers used:
 34989 ;;		None
 34990 ;; Tracked objects:
 34991 ;;		On entry : 3F/1
 34992 ;;		On exit  : 3F/1
 34993 ;;		Unchanged: 3F/0
 34994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34998 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34999 ;;Total ram usage:        2 bytes
 35000 ;; Hardware stack levels used: 1
 35001 ;; This function calls:
 35002 ;;		Nothing
 35003 ;; This function is called by:
 35004 ;;		_TMR1_ISR
 35005 ;; This function uses a non-reentrant model
 35006 ;;
 35007                           
 35008                           	psect	text196
 35009  008F3C                     __ptext196:
 35010                           	callstack 0
 35011  008F3C                     _TMR1_WriteTimer:
 35012                           	callstack 15
 35013                           
 35014                           ; BSR set to: 1
 35015                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 35016                           
 35017                           ; BSR set to: 1
 35018                           ;incstack = 0
 35019  008F3C  A4CF               	btfss	207,2,c	;volatile
 35020  008F3E  D007               	goto	i2l1147
 35021                           
 35022                           ; BSR set to: 1
 35023                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 35024  008F40  90CF               	bcf	207,0,c	;volatile
 35025                           
 35026                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 35027  008F42  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35028                           
 35029                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 35030  008F46  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35031                           
 35032                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 35033  008F4A  80CF               	bsf	207,0,c	;volatile
 35034                           
 35035                           ;mcc_generated_files/tmr1.c: 142:     }
 35036  008F4C  0012               	return	
 35037  008F4E                     i2l1147:
 35038                           
 35039                           ; BSR set to: 1
 35040                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 35041  008F4E  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35042                           
 35043                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 35044  008F52  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35045                           
 35046                           ; BSR set to: 1
 35047  008F56  0012               	return		;funcret
 35048  008F58                     __end_of_TMR1_WriteTimer:
 35049                           	callstack 0
 35050                           
 35051 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 35052 ;; Defined at:
 35053 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 35054 ;; Parameters:    Size  Location     Type
 35055 ;;		None
 35056 ;; Auto vars:     Size  Location     Type
 35057 ;;		None
 35058 ;; Return value:  Size  Location     Type
 35059 ;;                  1    wreg      void 
 35060 ;; Registers used:
 35061 ;;		None
 35062 ;; Tracked objects:
 35063 ;;		On entry : 3F/2
 35064 ;;		On exit  : 3F/2
 35065 ;;		Unchanged: 3F/0
 35066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35071 ;;Total ram usage:        0 bytes
 35072 ;; Hardware stack levels used: 1
 35073 ;; This function calls:
 35074 ;;		Nothing
 35075 ;; This function is called by:
 35076 ;;		_TMR1_Initialize
 35077 ;;		_TMR1_ISR
 35078 ;; This function uses a non-reentrant model
 35079 ;;
 35080                           
 35081                           	psect	text197
 35082  009274                     __ptext197:
 35083                           	callstack 0
 35084  009274                     _TMR1_DefaultInterruptHandler:
 35085                           	callstack 15
 35086                           
 35087                           ; BSR set to: 2
 35088                           
 35089                           ; BSR set to: 1
 35090                           ;incstack = 0
 35091  009274  0012               	return		;funcret
 35092  009276                     __end_of_TMR1_DefaultInterruptHandler:
 35093                           	callstack 0
 35094                           
 35095 ;; *************** function _TMR0_ISR *****************
 35096 ;; Defined at:
 35097 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 35098 ;; Parameters:    Size  Location     Type
 35099 ;;		None
 35100 ;; Auto vars:     Size  Location     Type
 35101 ;;		None
 35102 ;; Return value:  Size  Location     Type
 35103 ;;                  1    wreg      void 
 35104 ;; Registers used:
 35105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 35106 ;; Tracked objects:
 35107 ;;		On entry : 3F/E
 35108 ;;		On exit  : 0/0
 35109 ;;		Unchanged: 0/0
 35110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35115 ;;Total ram usage:        0 bytes
 35116 ;; Hardware stack levels used: 1
 35117 ;; Hardware stack levels required when called: 1
 35118 ;; This function calls:
 35119 ;;		Absolute function
 35120 ;;		_TMR0_DefaultInterruptHandler
 35121 ;;		_rxi
 35122 ;; This function is called by:
 35123 ;;		_INTERRUPT_InterruptManager
 35124 ;; This function uses a non-reentrant model
 35125 ;;
 35126                           
 35127                           	psect	text198
 35128  008DF0                     __ptext198:
 35129                           	callstack 0
 35130  008DF0                     _TMR0_ISR:
 35131                           	callstack 15
 35132                           
 35133                           ; BSR set to: 14
 35134                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 35135                           
 35136                           ; BSR set to: 2
 35137                           ;incstack = 0
 35138  008DF0  9BCA               	bcf	202,5,b	;volatile
 35139                           
 35140                           ; BSR set to: 14
 35141                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 35142  008DF2  EC1B  F021         	call	_rxi	;wreg free
 35143                           
 35144                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 35145  008DF6  0102               	movlb	2	; () banked
 35146  008DF8  51E1               	movf	_TMR0_InterruptHandler& (0+255),w,b
 35147  008DFA  11E2               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 35148  008DFC  B4D8               	btfsc	status,2,c
 35149  008DFE  0012               	return	
 35150                           
 35151                           ; BSR set to: 2
 35152                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 35153  008E00  D801               	call	i2u1824_48
 35154  008E02  0012               	return	
 35155  008E04                     i2u1824_48:
 35156  008E04  0005               	push	
 35157  008E06  6EFA               	movwf	pclath,c
 35158  008E08  51E1               	movf	_TMR0_InterruptHandler& (0+255),w,b
 35159  008E0A  6EFD               	movwf	tosl,c
 35160  008E0C  51E2               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 35161  008E0E  6EFE               	movwf	tosh,c
 35162  008E10  6AFF               	clrf	tosu,c
 35163  008E12  50FA               	movf	pclath,w,c
 35164  008E14  0012               	return		;indir
 35165  008E16                     __end_of_TMR0_ISR:
 35166                           	callstack 0
 35167                           
 35168 ;; *************** function _rxi *****************
 35169 ;; Defined at:
 35170 ;;		line 41 in file "inputs_MC50.c"
 35171 ;; Parameters:    Size  Location     Type
 35172 ;;		None
 35173 ;; Auto vars:     Size  Location     Type
 35174 ;;		None
 35175 ;; Return value:  Size  Location     Type
 35176 ;;                  1    wreg      void 
 35177 ;; Registers used:
 35178 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35179 ;; Tracked objects:
 35180 ;;		On entry : 3F/E
 35181 ;;		On exit  : 3C/0
 35182 ;;		Unchanged: 0/0
 35183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35188 ;;Total ram usage:        2 bytes
 35189 ;; Hardware stack levels used: 1
 35190 ;; This function calls:
 35191 ;;		Nothing
 35192 ;; This function is called by:
 35193 ;;		_TMR0_ISR
 35194 ;; This function uses a non-reentrant model
 35195 ;;
 35196                           
 35197                           	psect	text199
 35198  004236                     __ptext199:
 35199                           	callstack 0
 35200  004236                     _rxi:
 35201                           	callstack 15
 35202                           
 35203                           ; BSR set to: 14
 35204                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 35205                           
 35206                           ;incstack = 0
 35207  004236  0E00               	movlw	0
 35208  004238  B68E               	btfsc	142,3,c	;volatile
 35209  00423A  0E01               	movlw	1
 35210  00423C  0100               	movlb	0	; () banked
 35211  00423E  6F89               	movwf	_RFBit& (0+255),b	;volatile
 35212                           
 35213                           ; BSR set to: 0
 35214                           ;inputs_MC50.c: 47:     if (RFFull)
 35215  004240  518B               	movf	_RFFull& (0+255),w,b	;volatile
 35216  004242  A4D8               	btfss	status,2,c
 35217  004244  0012               	return	
 35218  004246  D116               	goto	i2l14176
 35219  004248                     i2l14066:
 35220                           
 35221                           ; BSR set to: 1
 35222                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 35223  004248  0100               	movlb	0	; () banked
 35224  00424A  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35225  00424C  A4D8               	btfss	status,2,c
 35226  00424E  D004               	goto	i2l14070
 35227                           
 35228                           ; BSR set to: 0
 35229                           ;inputs_MC50.c: 56:                 RFstate = 3;
 35230  004250  0E03               	movlw	3
 35231  004252  0101               	movlb	1	; () banked
 35232  004254  6F9A               	movwf	_RFstate& (0+255),b
 35233                           
 35234                           ;inputs_MC50.c: 57:             } else {
 35235  004256  0012               	return	
 35236  004258                     i2l14070:
 35237                           
 35238                           ; BSR set to: 0
 35239                           ;inputs_MC50.c: 58:                 RFcount--;
 35240  004258  077E               	decf	_RFcount& (0+255),f,b
 35241  00425A  A0D8               	btfss	status,0,c
 35242  00425C  077F               	decf	(_RFcount+1)& (0+255),f,b
 35243                           
 35244                           ; BSR set to: 0
 35245                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 35246  00425E  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 35247  004260  0012               	return	
 35248  004262  0EF6               	movlw	246
 35249  004264  5D7E               	subwf	_RFcount& (0+255),w,b
 35250  004266  0EFF               	movlw	255
 35251  004268  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 35252  00426A  B0D8               	btfsc	status,0,c
 35253  00426C  0012               	return	
 35254  00426E                     i2u1389_40:
 35255  00426E                     i2l14074:
 35256                           
 35257                           ; BSR set to: 0
 35258                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 35259  00426E  0E00               	movlw	0
 35260  004270  0101               	movlb	1	; () banked
 35261  004272  6F9A               	movwf	_RFstate& (0+255),b
 35262  004274  0012               	return	
 35263  004276                     i2l14076:
 35264                           
 35265                           ; BSR set to: 1
 35266                           ;inputs_MC50.c: 67:             if (RFBit) {
 35267  004276  0100               	movlb	0	; () banked
 35268  004278  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35269  00427A  B4D8               	btfsc	status,2,c
 35270  00427C  D02C               	goto	i2l14096
 35271                           
 35272                           ; BSR set to: 0
 35273                           ;inputs_MC50.c: 71:                 RFstate = 2;
 35274  00427E  0E02               	movlw	2
 35275  004280  0101               	movlb	1	; () banked
 35276  004282  6F9A               	movwf	_RFstate& (0+255),b
 35277                           
 35278                           ; BSR set to: 1
 35279                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 35280  004284  0EC6               	movlw	low _BufferRF
 35281  004286  0100               	movlb	0	; () banked
 35282  004288  258D               	addwf	_Bptr& (0+255),w,b
 35283  00428A  6ED9               	movwf	fsr2l,c
 35284  00428C  6ADA               	clrf	fsr2h,c
 35285  00428E  0E02               	movlw	high _BufferRF
 35286  004290  22DA               	addwfc	fsr2h,f,c
 35287  004292  90D8               	bcf	status,0,c
 35288  004294  32DF               	rrcf	indf2,f,c
 35289                           
 35290                           ; BSR set to: 0
 35291                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 35292  004296  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35293  004298  D008               	goto	i2l14086
 35294                           
 35295                           ; BSR set to: 0
 35296                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 35297  00429A  0EC6               	movlw	low _BufferRF
 35298  00429C  258D               	addwf	_Bptr& (0+255),w,b
 35299  00429E  6ED9               	movwf	fsr2l,c
 35300  0042A0  6ADA               	clrf	fsr2h,c
 35301  0042A2  0E02               	movlw	high _BufferRF
 35302  0042A4  22DA               	addwfc	fsr2h,f,c
 35303  0042A6  0E80               	movlw	128
 35304  0042A8  26DF               	addwf	indf2,f,c
 35305  0042AA                     i2l14086:
 35306                           
 35307                           ; BSR set to: 0
 35308                           ;inputs_MC50.c: 81:                 RFcount = 0;
 35309  0042AA  0E00               	movlw	0
 35310  0042AC  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35311  0042AE  0E00               	movlw	0
 35312  0042B0  6F7E               	movwf	_RFcount& (0+255),b
 35313                           
 35314                           ; BSR set to: 0
 35315                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 35316  0042B2  2B8C               	incf	_BitCount& (0+255),f,b
 35317  0042B4  C08C  F001         	movff	_BitCount,??_rxi
 35318  0042B8  0E07               	movlw	7
 35319  0042BA  1601               	andwf	??_rxi^0,f,c
 35320  0042BC  B4D8               	btfsc	status,2,c
 35321                           
 35322                           ; BSR set to: 0
 35323                           ;inputs_MC50.c: 84:                     Bptr++;
 35324  0042BE  2B8D               	incf	_Bptr& (0+255),f,b
 35325                           
 35326                           ; BSR set to: 0
 35327                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 35328  0042C0  0E41               	movlw	65
 35329  0042C2  198C               	xorwf	_BitCount& (0+255),w,b
 35330  0042C4  A4D8               	btfss	status,2,c
 35331  0042C6  0012               	return	
 35332                           
 35333                           ; BSR set to: 0
 35334                           ;inputs_MC50.c: 86:                     RFstate = 0;
 35335  0042C8  0E00               	movlw	0
 35336  0042CA  0101               	movlb	1	; () banked
 35337  0042CC  6F9A               	movwf	_RFstate& (0+255),b
 35338                           
 35339                           ;inputs_MC50.c: 87:                     RFFull = 1;
 35340  0042CE  0E01               	movlw	1
 35341  0042D0  0100               	movlb	0	; () banked
 35342  0042D2  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 35343  0042D4  0012               	return	
 35344  0042D6                     i2l14096:
 35345                           
 35346                           ; BSR set to: 0
 35347                           ;inputs_MC50.c: 92:                 RFcount++;
 35348  0042D6  4B7E               	infsnz	_RFcount& (0+255),f,b
 35349  0042D8  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35350                           
 35351                           ; BSR set to: 0
 35352                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 35353  0042DA  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35354  0042DC  0012               	return	
 35355  0042DE  517F               	movf	(_RFcount+1)& (0+255),w,b
 35356  0042E0  E104               	bnz	i2u1394_40
 35357  0042E2  0E0A               	movlw	10
 35358  0042E4  5D7E               	subwf	_RFcount& (0+255),w,b
 35359  0042E6  A0D8               	btfss	status,0,c
 35360  0042E8  0012               	return	
 35361  0042EA                     i2u1394_40:
 35362                           
 35363                           ; BSR set to: 0
 35364                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 35365  0042EA  0E01               	movlw	1
 35366  0042EC  0101               	movlb	1	; () banked
 35367  0042EE  6F9A               	movwf	_RFstate& (0+255),b
 35368                           
 35369                           ;inputs_MC50.c: 97:                     Bptr = 0;
 35370  0042F0  0E00               	movlw	0
 35371  0042F2  0100               	movlb	0	; () banked
 35372  0042F4  6F8D               	movwf	_Bptr& (0+255),b
 35373                           
 35374                           ;inputs_MC50.c: 98:                     BitCount = 0;
 35375  0042F6  0E00               	movlw	0
 35376  0042F8  6F8C               	movwf	_BitCount& (0+255),b
 35377  0042FA  0012               	return	
 35378  0042FC                     i2l14102:
 35379                           
 35380                           ; BSR set to: 1
 35381                           ;inputs_MC50.c: 103:             if (RFBit) {
 35382  0042FC  0100               	movlb	0	; () banked
 35383  0042FE  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35384  004300  B4D8               	btfsc	status,2,c
 35385  004302  D030               	goto	i2l14118
 35386                           
 35387                           ; BSR set to: 0
 35388                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 35389  004304  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35390  004306  D00E               	goto	i2u1397_40
 35391  004308  517F               	movf	(_RFcount+1)& (0+255),w,b
 35392  00430A  E104               	bnz	i2u1396_40
 35393  00430C  0E14               	movlw	20
 35394  00430E  5D7E               	subwf	_RFcount& (0+255),w,b
 35395  004310  A0D8               	btfss	status,0,c
 35396  004312  D008               	goto	i2u1397_40
 35397  004314                     i2u1396_40:
 35398                           
 35399                           ; BSR set to: 0
 35400  004314  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35401  004316  D01E               	goto	i2l14116
 35402  004318  517F               	movf	(_RFcount+1)& (0+255),w,b
 35403  00431A  E104               	bnz	i2u1397_40
 35404  00431C  0E2D               	movlw	45
 35405  00431E  5D7E               	subwf	_RFcount& (0+255),w,b
 35406  004320  A0D8               	btfss	status,0,c
 35407  004322  D018               	goto	i2l14116
 35408  004324                     i2u1397_40:
 35409                           
 35410                           ; BSR set to: 0
 35411                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 35412  004324  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35413  004326  D7A3               	goto	i2u1389_40
 35414  004328  517F               	movf	(_RFcount+1)& (0+255),w,b
 35415  00432A  E104               	bnz	i2u1398_40
 35416  00432C  0E50               	movlw	80
 35417  00432E  5D7E               	subwf	_RFcount& (0+255),w,b
 35418  004330  A0D8               	btfss	status,0,c
 35419  004332  D79D               	goto	i2u1389_40
 35420  004334                     i2u1398_40:
 35421                           
 35422                           ; BSR set to: 0
 35423  004334  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35424  004336  D006               	goto	i2l14114
 35425  004338  517F               	movf	(_RFcount+1)& (0+255),w,b
 35426  00433A  E199               	bnz	i2l14074
 35427  00433C  0E64               	movlw	100
 35428  00433E  5D7E               	subwf	_RFcount& (0+255),w,b
 35429  004340  B0D8               	btfsc	status,0,c
 35430  004342  D795               	goto	i2u1389_40
 35431  004344                     i2l14114:
 35432                           
 35433                           ; BSR set to: 0
 35434                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 35435  004344  0EFF               	movlw	255
 35436  004346  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35437  004348  0EF6               	movlw	246
 35438  00434A  6F7E               	movwf	_RFcount& (0+255),b
 35439                           
 35440                           ;inputs_MC50.c: 114:                         RFstate = 4;
 35441  00434C  0E04               	movlw	4
 35442  00434E  0101               	movlb	1	; () banked
 35443  004350  6F9A               	movwf	_RFstate& (0+255),b
 35444  004352  0012               	return	
 35445  004354                     i2l14116:
 35446                           
 35447                           ; BSR set to: 0
 35448                           ;inputs_MC50.c: 118:                     RFcount = 0;
 35449  004354  0E00               	movlw	0
 35450  004356  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35451  004358  0E00               	movlw	0
 35452  00435A  6F7E               	movwf	_RFcount& (0+255),b
 35453                           
 35454                           ;inputs_MC50.c: 119:                     RFstate = 2;
 35455  00435C  0E02               	movlw	2
 35456  00435E  0101               	movlb	1	; () banked
 35457  004360  6F9A               	movwf	_RFstate& (0+255),b
 35458  004362  0012               	return	
 35459  004364                     i2l14118:
 35460                           
 35461                           ; BSR set to: 0
 35462                           ;inputs_MC50.c: 122:                 RFcount++;
 35463  004364  4B7E               	infsnz	_RFcount& (0+255),f,b
 35464  004366  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35465  004368  0012               	return	
 35466  00436A                     i2l14120:
 35467                           
 35468                           ; BSR set to: 1
 35469                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 35470  00436A  0100               	movlb	0	; () banked
 35471  00436C  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35472  00436E  A4D8               	btfss	status,2,c
 35473  004370  D056               	goto	i2l14156
 35474                           
 35475                           ; BSR set to: 0
 35476                           ;inputs_MC50.c: 130:                 RFstate = 5;
 35477  004372  0E05               	movlw	5
 35478  004374  0101               	movlb	1	; () banked
 35479  004376  6F9A               	movwf	_RFstate& (0+255),b
 35480                           
 35481                           ; BSR set to: 1
 35482                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 35483  004378  0EC6               	movlw	low _BufferRF
 35484  00437A  0100               	movlb	0	; () banked
 35485  00437C  258D               	addwf	_Bptr& (0+255),w,b
 35486  00437E  6ED9               	movwf	fsr2l,c
 35487  004380  6ADA               	clrf	fsr2h,c
 35488  004382  0E02               	movlw	high _BufferRF
 35489  004384  22DA               	addwfc	fsr2h,f,c
 35490  004386  90D8               	bcf	status,0,c
 35491  004388  32DF               	rrcf	indf2,f,c
 35492                           
 35493                           ; BSR set to: 0
 35494                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 35495  00438A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35496  00438C  D008               	goto	i2l14130
 35497                           
 35498                           ; BSR set to: 0
 35499                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 35500  00438E  0EC6               	movlw	low _BufferRF
 35501  004390  258D               	addwf	_Bptr& (0+255),w,b
 35502  004392  6ED9               	movwf	fsr2l,c
 35503  004394  6ADA               	clrf	fsr2h,c
 35504  004396  0E02               	movlw	high _BufferRF
 35505  004398  22DA               	addwfc	fsr2h,f,c
 35506  00439A  0E80               	movlw	128
 35507  00439C  26DF               	addwf	indf2,f,c
 35508  00439E                     i2l14130:
 35509                           
 35510                           ; BSR set to: 0
 35511                           ;inputs_MC50.c: 136:                 RFcount = 0;
 35512  00439E  0E00               	movlw	0
 35513  0043A0  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35514  0043A2  0E00               	movlw	0
 35515  0043A4  6F7E               	movwf	_RFcount& (0+255),b
 35516                           
 35517                           ; BSR set to: 0
 35518                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 35519  0043A6  2B8C               	incf	_BitCount& (0+255),f,b
 35520  0043A8  C08C  F001         	movff	_BitCount,??_rxi
 35521  0043AC  0E07               	movlw	7
 35522  0043AE  1601               	andwf	??_rxi^0,f,c
 35523  0043B0  A4D8               	btfss	status,2,c
 35524  0043B2  D009               	goto	i2l14138
 35525                           
 35526                           ; BSR set to: 0
 35527                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 35528  0043B4  2B8D               	incf	_Bptr& (0+255),f,b
 35529                           
 35530                           ; BSR set to: 0
 35531                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 35532  0043B6  0EC6               	movlw	low _BufferRF
 35533  0043B8  258D               	addwf	_Bptr& (0+255),w,b
 35534  0043BA  6ED9               	movwf	fsr2l,c
 35535  0043BC  6ADA               	clrf	fsr2h,c
 35536  0043BE  0E02               	movlw	high _BufferRF
 35537  0043C0  22DA               	addwfc	fsr2h,f,c
 35538  0043C2  0E00               	movlw	0
 35539  0043C4  6EDF               	movwf	indf2,c
 35540  0043C6                     i2l14138:
 35541                           
 35542                           ; BSR set to: 0
 35543                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 35544  0043C6  0E0D               	movlw	13
 35545  0043C8  198C               	xorwf	_BitCount& (0+255),w,b
 35546  0043CA  A4D8               	btfss	status,2,c
 35547  0043CC  0012               	return	
 35548                           
 35549                           ; BSR set to: 0
 35550                           ;inputs_MC50.c: 144:                     RFstate = 0;
 35551  0043CE  0E00               	movlw	0
 35552  0043D0  0101               	movlb	1	; () banked
 35553  0043D2  6F9A               	movwf	_RFstate& (0+255),b
 35554                           
 35555                           ; BSR set to: 1
 35556                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 35557  0043D4  0100               	movlb	0	; () banked
 35558  0043D6  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 35559  0043D8  A4D8               	btfss	status,2,c
 35560  0043DA  D01A               	goto	i2l14150
 35561                           
 35562                           ; BSR set to: 0
 35563                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 35564  0043DC  0102               	movlb	2	; () banked
 35565  0043DE  51C6               	movf	_BufferRF& (0+255),w,b
 35566  0043E0  0101               	movlb	1	; () banked
 35567  0043E2  1989               	xorwf	_BufferRF_12BIT& (0+255),w,b
 35568  0043E4  A4D8               	btfss	status,2,c
 35569  0043E6  D00F               	goto	i2l1615
 35570                           
 35571                           ; BSR set to: 1
 35572  0043E8  0102               	movlb	2	; () banked
 35573  0043EA  51C7               	movf	(_BufferRF+1)& (0+255),w,b
 35574  0043EC  0101               	movlb	1	; () banked
 35575  0043EE  198A               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 35576  0043F0  A4D8               	btfss	status,2,c
 35577  0043F2  D009               	goto	i2l1615
 35578                           
 35579                           ; BSR set to: 1
 35580                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 35581  0043F4  0E01               	movlw	1
 35582  0043F6  0100               	movlb	0	; () banked
 35583  0043F8  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 35584                           
 35585                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 35586  0043FA  0E00               	movlw	0
 35587  0043FC  0102               	movlb	2	; () banked
 35588  0043FE  6FC8               	movwf	(_BufferRF+2)& (0+255),b
 35589                           
 35590                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 35591  004400  0E00               	movlw	0
 35592  004402  6FC9               	movwf	(_BufferRF+3)& (0+255),b
 35593                           
 35594                           ;inputs_MC50.c: 152:                         }
 35595  004404  0012               	return	
 35596  004406                     i2l1615:
 35597                           
 35598                           ; BSR set to: 1
 35599                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 35600  004406  C2C6  F189         	movff	_BufferRF,_BufferRF_12BIT
 35601                           
 35602                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 35603  00440A  C2C7  F18A         	movff	_BufferRF+1,_BufferRF_12BIT+1
 35604  00440E  0012               	return	
 35605  004410                     i2l14150:
 35606                           
 35607                           ; BSR set to: 0
 35608                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 35609  004410  0E01               	movlw	1
 35610  004412  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 35611                           
 35612                           ; BSR set to: 0
 35613                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 35614  004414  C2C6  F189         	movff	_BufferRF,_BufferRF_12BIT
 35615                           
 35616                           ; BSR set to: 0
 35617                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 35618  004418  C2C7  F18A         	movff	_BufferRF+1,_BufferRF_12BIT+1
 35619  00441C  0012               	return	
 35620  00441E                     i2l14156:
 35621                           
 35622                           ; BSR set to: 0
 35623                           ;inputs_MC50.c: 168:                 RFcount++;
 35624  00441E  4B7E               	infsnz	_RFcount& (0+255),f,b
 35625  004420  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35626                           
 35627                           ; BSR set to: 0
 35628                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 35629  004422  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35630  004424  0012               	return	
 35631  004426  517F               	movf	(_RFcount+1)& (0+255),w,b
 35632  004428  E104               	bnz	i2u1407_40
 35633  00442A  0E0A               	movlw	10
 35634  00442C  5D7E               	subwf	_RFcount& (0+255),w,b
 35635  00442E  A0D8               	btfss	status,0,c
 35636  004430  0012               	return	
 35637  004432                     i2u1407_40:
 35638  004432  D71D               	goto	i2u1389_40
 35639  004434                     i2l14162:
 35640                           
 35641                           ; BSR set to: 1
 35642                           ;inputs_MC50.c: 177:             if (RFBit) {
 35643  004434  0100               	movlb	0	; () banked
 35644  004436  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35645  004438  B4D8               	btfsc	status,2,c
 35646  00443A  D004               	goto	i2l14166
 35647                           
 35648                           ; BSR set to: 0
 35649                           ;inputs_MC50.c: 181:                 RFstate = 4;
 35650  00443C  0E04               	movlw	4
 35651  00443E  0101               	movlb	1	; () banked
 35652  004440  6F9A               	movwf	_RFstate& (0+255),b
 35653                           
 35654                           ;inputs_MC50.c: 183:             } else {
 35655  004442  0012               	return	
 35656  004444                     i2l14166:
 35657                           
 35658                           ; BSR set to: 0
 35659                           ;inputs_MC50.c: 184:                 RFcount--;
 35660  004444  077E               	decf	_RFcount& (0+255),f,b
 35661  004446  A0D8               	btfss	status,0,c
 35662  004448  077F               	decf	(_RFcount+1)& (0+255),f,b
 35663                           
 35664                           ; BSR set to: 0
 35665                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 35666  00444A  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 35667  00444C  0012               	return	
 35668  00444E  0EF6               	movlw	246
 35669  004450  5D7E               	subwf	_RFcount& (0+255),w,b
 35670  004452  0EFF               	movlw	255
 35671  004454  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 35672  004456  B0D8               	btfsc	status,0,c
 35673  004458  0012               	return	
 35674  00445A  D747               	goto	i2u1394_40
 35675  00445C                     i2l14172:
 35676                           
 35677                           ; BSR set to: 1
 35678                           ;inputs_MC50.c: 197:             RFstate = 1;
 35679  00445C  0E01               	movlw	1
 35680  00445E  6F9A               	movwf	_RFstate& (0+255),b
 35681                           
 35682                           ;inputs_MC50.c: 198:             RFcount = 0;
 35683  004460  0E00               	movlw	0
 35684  004462  0100               	movlb	0	; () banked
 35685  004464  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35686  004466  0E00               	movlw	0
 35687  004468  6F7E               	movwf	_RFcount& (0+255),b
 35688                           
 35689                           ;inputs_MC50.c: 199:             Bptr = 0;
 35690  00446A  0E00               	movlw	0
 35691  00446C  6F8D               	movwf	_Bptr& (0+255),b
 35692                           
 35693                           ;inputs_MC50.c: 200:             BitCount = 0;
 35694  00446E  0E00               	movlw	0
 35695  004470  6F8C               	movwf	_BitCount& (0+255),b
 35696                           
 35697                           ;inputs_MC50.c: 201:             break;
 35698  004472  0012               	return	
 35699  004474                     i2l14176:
 35700                           
 35701                           ; BSR set to: 0
 35702  004474  0101               	movlb	1	; () banked
 35703  004476  519A               	movf	_RFstate& (0+255),w,b
 35704  004478  6E01               	movwf	??_rxi^0,c
 35705  00447A  6A02               	clrf	(??_rxi+1)^0,c
 35706                           
 35707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35708                           ; Switch size 1, requested type "simple"
 35709                           ; Number of cases is 1, Range of values is 0 to 0
 35710                           ; switch strategies available:
 35711                           ; Name         Instructions Cycles
 35712                           ; simple_byte            4     3 (average)
 35713                           ;	Chosen strategy is simple_byte
 35714  00447C  5002               	movf	(??_rxi+1)^0,w,c
 35715  00447E  0A00               	xorlw	0	; case 0
 35716  004480  A4D8               	btfss	status,2,c
 35717  004482  D7EC               	goto	i2l14172
 35718                           
 35719                           ; BSR set to: 1
 35720                           ; Switch size 1, requested type "simple"
 35721                           ; Number of cases is 6, Range of values is 0 to 5
 35722                           ; switch strategies available:
 35723                           ; Name         Instructions Cycles
 35724                           ; simple_byte           19    10 (average)
 35725                           ;	Chosen strategy is simple_byte
 35726  004484  5001               	movf	??_rxi^0,w,c
 35727  004486  0A00               	xorlw	0	; case 0
 35728  004488  B4D8               	btfsc	status,2,c
 35729  00448A  D7E8               	goto	i2l14172
 35730  00448C  0A01               	xorlw	1	; case 1
 35731  00448E  B4D8               	btfsc	status,2,c
 35732  004490  D735               	goto	i2l14102
 35733  004492  0A03               	xorlw	3	; case 2
 35734  004494  B4D8               	btfsc	status,2,c
 35735  004496  D6D8               	goto	i2l14066
 35736  004498  0A01               	xorlw	1	; case 3
 35737  00449A  B4D8               	btfsc	status,2,c
 35738  00449C  D6EC               	goto	i2l14076
 35739  00449E  0A07               	xorlw	7	; case 4
 35740  0044A0  B4D8               	btfsc	status,2,c
 35741  0044A2  D763               	goto	i2l14120
 35742  0044A4  0A01               	xorlw	1	; case 5
 35743  0044A6  B4D8               	btfsc	status,2,c
 35744  0044A8  D7C5               	goto	i2l14162
 35745  0044AA  D7D8               	goto	i2l14172
 35746  0044AC                     __end_of_rxi:
 35747                           	callstack 0
 35748                           
 35749 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 35750 ;; Defined at:
 35751 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 35752 ;; Parameters:    Size  Location     Type
 35753 ;;		None
 35754 ;; Auto vars:     Size  Location     Type
 35755 ;;		None
 35756 ;; Return value:  Size  Location     Type
 35757 ;;                  1    wreg      void 
 35758 ;; Registers used:
 35759 ;;		None
 35760 ;; Tracked objects:
 35761 ;;		On entry : 3F/2
 35762 ;;		On exit  : 3F/2
 35763 ;;		Unchanged: 3F/0
 35764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35769 ;;Total ram usage:        0 bytes
 35770 ;; Hardware stack levels used: 1
 35771 ;; This function calls:
 35772 ;;		Nothing
 35773 ;; This function is called by:
 35774 ;;		_TMR0_Initialize
 35775 ;;		_TMR0_ISR
 35776 ;; This function uses a non-reentrant model
 35777 ;;
 35778                           
 35779                           	psect	text200
 35780  009276                     __ptext200:
 35781                           	callstack 0
 35782  009276                     _TMR0_DefaultInterruptHandler:
 35783                           	callstack 15
 35784                           
 35785                           ; BSR set to: 2
 35786                           
 35787                           ;incstack = 0
 35788  009276  0012               	return		;funcret
 35789  009278                     __end_of_TMR0_DefaultInterruptHandler:
 35790                           	callstack 0
 35791                           
 35792 ;; *************** function _EUSART1_Transmit_ISR *****************
 35793 ;; Defined at:
 35794 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 35795 ;; Parameters:    Size  Location     Type
 35796 ;;		None
 35797 ;; Auto vars:     Size  Location     Type
 35798 ;;		None
 35799 ;; Return value:  Size  Location     Type
 35800 ;;                  1    wreg      void 
 35801 ;; Registers used:
 35802 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35803 ;; Tracked objects:
 35804 ;;		On entry : 3F/2
 35805 ;;		On exit  : 30/0
 35806 ;;		Unchanged: 0/0
 35807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35812 ;;Total ram usage:        0 bytes
 35813 ;; Hardware stack levels used: 1
 35814 ;; This function calls:
 35815 ;;		Nothing
 35816 ;; This function is called by:
 35817 ;;		_EUSART1_Initialize
 35818 ;;		_INTERRUPT_InterruptManager
 35819 ;; This function uses a non-reentrant model
 35820 ;;
 35821                           
 35822                           	psect	text201
 35823  008A62                     __ptext201:
 35824                           	callstack 0
 35825  008A62                     _EUSART1_Transmit_ISR:
 35826                           	callstack 16
 35827                           
 35828                           ; BSR set to: 2
 35829                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 35830                           
 35831                           ; BSR set to: 2
 35832                           ;incstack = 0
 35833  008A62  0E08               	movlw	8
 35834  008A64  0101               	movlb	1	; () banked
 35835  008A66  61FF               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 35836  008A68  D012               	goto	i2l106
 35837                           
 35838                           ; BSR set to: 1
 35839                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 35840  008A6A  0E84               	movlw	low _eusart1TxBuffer
 35841  008A6C  0100               	movlb	0	; () banked
 35842  008A6E  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 35843  008A70  6ED9               	movwf	fsr2l,c
 35844  008A72  6ADA               	clrf	fsr2h,c
 35845  008A74  0E02               	movlw	high _eusart1TxBuffer
 35846  008A76  22DA               	addwfc	fsr2h,f,c
 35847  008A78  50DF               	movf	indf2,w,c
 35848  008A7A  6E9A               	movwf	154,c	;volatile
 35849                           
 35850                           ; BSR set to: 0
 35851  008A7C  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 35852                           
 35853                           ; BSR set to: 0
 35854                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 35855  008A7E  0E07               	movlw	7
 35856  008A80  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 35857  008A82  D002               	goto	i2l16180
 35858                           
 35859                           ; BSR set to: 0
 35860                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 35861  008A84  0E00               	movlw	0
 35862  008A86  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 35863  008A88                     i2l16180:
 35864                           
 35865                           ; BSR set to: 0
 35866                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 35867  008A88  0101               	movlb	1	; () banked
 35868  008A8A  2BFF               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 35869                           
 35870                           ;mcc_generated_files/eusart1.c: 209:     }
 35871  008A8C  0012               	return	
 35872  008A8E                     i2l106:
 35873                           
 35874                           ; BSR set to: 1
 35875                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 35876  008A8E  010E               	movlb	14	; () banked
 35877  008A90  99C5               	bcf	197,4,b	;volatile
 35878  008A92  0012               	return		;funcret
 35879  008A94                     __end_of_EUSART1_Transmit_ISR:
 35880                           	callstack 0
 35881                           
 35882 ;; *************** function _EUSART1_Receive_ISR *****************
 35883 ;; Defined at:
 35884 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 35885 ;; Parameters:    Size  Location     Type
 35886 ;;		None
 35887 ;; Auto vars:     Size  Location     Type
 35888 ;;		None
 35889 ;; Return value:  Size  Location     Type
 35890 ;;                  1    wreg      void 
 35891 ;; Registers used:
 35892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 35893 ;; Tracked objects:
 35894 ;;		On entry : 3F/2
 35895 ;;		On exit  : 0/0
 35896 ;;		Unchanged: 0/0
 35897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35902 ;;Total ram usage:        0 bytes
 35903 ;; Hardware stack levels used: 1
 35904 ;; Hardware stack levels required when called: 2
 35905 ;; This function calls:
 35906 ;;		Absolute function
 35907 ;;		_EUSART1_DefaultErrorHandler
 35908 ;;		_EUSART1_DefaultFramingErrorHandler
 35909 ;;		_EUSART1_DefaultOverrunErrorHandler
 35910 ;;		_EUSART1_RxDataHandler
 35911 ;; This function is called by:
 35912 ;;		_EUSART1_Initialize
 35913 ;;		_INTERRUPT_InterruptManager
 35914 ;; This function uses a non-reentrant model
 35915 ;;
 35916                           
 35917                           	psect	text202
 35918  0073EE                     __ptext202:
 35919                           	callstack 0
 35920  0073EE                     _EUSART1_Receive_ISR:
 35921                           	callstack 14
 35922                           
 35923                           ; BSR set to: 2
 35924                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 35925                           
 35926                           ;incstack = 0
 35927  0073EE  0E74               	movlw	low _eusart1RxStatusBuffer
 35928  0073F0  0100               	movlb	0	; () banked
 35929  0073F2  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 35930  0073F4  6ED9               	movwf	fsr2l,c
 35931  0073F6  6ADA               	clrf	fsr2h,c
 35932  0073F8  0E02               	movlw	high _eusart1RxStatusBuffer
 35933  0073FA  22DA               	addwfc	fsr2h,f,c
 35934  0073FC  0E00               	movlw	0
 35935  0073FE  6EDF               	movwf	indf2,c
 35936                           
 35937                           ; BSR set to: 0
 35938                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 35939  007400  A49D               	btfss	157,2,c	;volatile
 35940  007402  D013               	goto	i2u1818_49
 35941                           
 35942                           ; BSR set to: 0
 35943                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 35944  007404  0E74               	movlw	low _eusart1RxStatusBuffer
 35945  007406  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 35946  007408  6ED9               	movwf	fsr2l,c
 35947  00740A  6ADA               	clrf	fsr2h,c
 35948  00740C  0E02               	movlw	high _eusart1RxStatusBuffer
 35949  00740E  22DA               	addwfc	fsr2h,f,c
 35950  007410  0102               	movlb	2	; () banked
 35951  007412  82DF               	bsf	indf2,1,c
 35952                           
 35953                           ; BSR set to: 2
 35954                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 35955  007414  D801               	call	i2u1818_48
 35956  007416  D009               	goto	i2u1818_49
 35957  007418                     i2u1818_48:
 35958  007418  0005               	push	
 35959  00741A  6EFA               	movwf	pclath,c
 35960  00741C  51E7               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 35961  00741E  6EFD               	movwf	tosl,c
 35962  007420  51E8               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 35963  007422  6EFE               	movwf	tosh,c
 35964  007424  6AFF               	clrf	tosu,c
 35965  007426  50FA               	movf	pclath,w,c
 35966  007428  0012               	return		;indir
 35967  00742A                     i2u1818_49:
 35968                           
 35969                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 35970  00742A  A29D               	btfss	157,1,c	;volatile
 35971  00742C  D014               	goto	i2u1820_49
 35972                           
 35973                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 35974  00742E  0E74               	movlw	low _eusart1RxStatusBuffer
 35975  007430  0100               	movlb	0	; () banked
 35976  007432  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 35977  007434  6ED9               	movwf	fsr2l,c
 35978  007436  6ADA               	clrf	fsr2h,c
 35979  007438  0E02               	movlw	high _eusart1RxStatusBuffer
 35980  00743A  22DA               	addwfc	fsr2h,f,c
 35981  00743C  0102               	movlb	2	; () banked
 35982  00743E  84DF               	bsf	indf2,2,c
 35983                           
 35984                           ; BSR set to: 2
 35985                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 35986  007440  D801               	call	i2u1820_48
 35987  007442  D009               	goto	i2u1820_49
 35988  007444                     i2u1820_48:
 35989  007444  0005               	push	
 35990  007446  6EFA               	movwf	pclath,c
 35991  007448  51E5               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 35992  00744A  6EFD               	movwf	tosl,c
 35993  00744C  51E6               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 35994  00744E  6EFE               	movwf	tosh,c
 35995  007450  6AFF               	clrf	tosu,c
 35996  007452  50FA               	movf	pclath,w,c
 35997  007454  0012               	return		;indir
 35998  007456                     i2u1820_49:
 35999                           
 36000                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 36001  007456  0E74               	movlw	low _eusart1RxStatusBuffer
 36002  007458  0100               	movlb	0	; () banked
 36003  00745A  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36004  00745C  6ED9               	movwf	fsr2l,c
 36005  00745E  6ADA               	clrf	fsr2h,c
 36006  007460  0E02               	movlw	high _eusart1RxStatusBuffer
 36007  007462  22DA               	addwfc	fsr2h,f,c
 36008  007464  50DF               	movf	indf2,w,c
 36009  007466  B4D8               	btfsc	status,2,c
 36010  007468  D00C               	goto	i2l16200
 36011                           
 36012                           ; BSR set to: 0
 36013                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 36014  00746A  D801               	call	i2u1822_48
 36015  00746C  0012               	return	
 36016  00746E                     i2u1822_48:
 36017  00746E  0005               	push	
 36018  007470  6EFA               	movwf	pclath,c
 36019  007472  0102               	movlb	2	; () banked
 36020  007474  51E3               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 36021  007476  6EFD               	movwf	tosl,c
 36022  007478  51E4               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 36023  00747A  6EFE               	movwf	tosh,c
 36024  00747C  6AFF               	clrf	tosu,c
 36025  00747E  50FA               	movf	pclath,w,c
 36026  007480  0012               	return		;indir
 36027  007482                     i2l16200:
 36028                           
 36029                           ; BSR set to: 0
 36030                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 36031  007482  EC63  F047         	call	_EUSART1_RxDataHandler	;wreg free
 36032  007486  0012               	return		;funcret
 36033  007488                     __end_of_EUSART1_Receive_ISR:
 36034                           	callstack 0
 36035                           
 36036 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 36037 ;; Defined at:
 36038 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 36039 ;; Parameters:    Size  Location     Type
 36040 ;;		None
 36041 ;; Auto vars:     Size  Location     Type
 36042 ;;		None
 36043 ;; Return value:  Size  Location     Type
 36044 ;;                  1    wreg      void 
 36045 ;; Registers used:
 36046 ;;		None
 36047 ;; Tracked objects:
 36048 ;;		On entry : 3F/2
 36049 ;;		On exit  : 3F/2
 36050 ;;		Unchanged: 3F/0
 36051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36056 ;;Total ram usage:        0 bytes
 36057 ;; Hardware stack levels used: 1
 36058 ;; This function calls:
 36059 ;;		Nothing
 36060 ;; This function is called by:
 36061 ;;		_EUSART1_Initialize
 36062 ;;		_EUSART1_Receive_ISR
 36063 ;; This function uses a non-reentrant model
 36064 ;;
 36065                           
 36066                           	psect	text203
 36067  009230                     __ptext203:
 36068                           	callstack 0
 36069  009230                     _EUSART1_DefaultOverrunErrorHandler:
 36070                           	callstack 15
 36071                           
 36072                           ; BSR set to: 2
 36073                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 36074                           
 36075                           ;incstack = 0
 36076  009230  989D               	bcf	157,4,c	;volatile
 36077                           
 36078                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 36079  009232  889D               	bsf	157,4,c	;volatile
 36080                           
 36081                           ; BSR set to: 2
 36082  009234  0012               	return		;funcret
 36083  009236                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 36084                           	callstack 0
 36085                           
 36086 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 36087 ;; Defined at:
 36088 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 36089 ;; Parameters:    Size  Location     Type
 36090 ;;		None
 36091 ;; Auto vars:     Size  Location     Type
 36092 ;;		None
 36093 ;; Return value:  Size  Location     Type
 36094 ;;                  1    wreg      void 
 36095 ;; Registers used:
 36096 ;;		None
 36097 ;; Tracked objects:
 36098 ;;		On entry : 3F/2
 36099 ;;		On exit  : 3F/2
 36100 ;;		Unchanged: 3F/0
 36101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36106 ;;Total ram usage:        0 bytes
 36107 ;; Hardware stack levels used: 1
 36108 ;; This function calls:
 36109 ;;		Nothing
 36110 ;; This function is called by:
 36111 ;;		_EUSART1_Initialize
 36112 ;;		_EUSART1_Receive_ISR
 36113 ;; This function uses a non-reentrant model
 36114 ;;
 36115                           
 36116                           	psect	text204
 36117  009278                     __ptext204:
 36118                           	callstack 0
 36119  009278                     _EUSART1_DefaultFramingErrorHandler:
 36120                           	callstack 15
 36121                           
 36122                           ; BSR set to: 2
 36123                           
 36124                           ; BSR set to: 2
 36125                           ;incstack = 0
 36126  009278  0012               	return		;funcret
 36127  00927A                     __end_of_EUSART1_DefaultFramingErrorHandler:
 36128                           	callstack 0
 36129                           
 36130 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 36131 ;; Defined at:
 36132 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 36133 ;; Parameters:    Size  Location     Type
 36134 ;;		None
 36135 ;; Auto vars:     Size  Location     Type
 36136 ;;		None
 36137 ;; Return value:  Size  Location     Type
 36138 ;;                  1    wreg      void 
 36139 ;; Registers used:
 36140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36141 ;; Tracked objects:
 36142 ;;		On entry : 3F/2
 36143 ;;		On exit  : 3F/0
 36144 ;;		Unchanged: 0/0
 36145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36150 ;;Total ram usage:        0 bytes
 36151 ;; Hardware stack levels used: 1
 36152 ;; Hardware stack levels required when called: 1
 36153 ;; This function calls:
 36154 ;;		_EUSART1_RxDataHandler
 36155 ;; This function is called by:
 36156 ;;		_EUSART1_Initialize
 36157 ;;		_EUSART1_Receive_ISR
 36158 ;; This function uses a non-reentrant model
 36159 ;;
 36160                           
 36161                           	psect	text205
 36162  009236                     __ptext205:
 36163                           	callstack 0
 36164  009236                     _EUSART1_DefaultErrorHandler:
 36165                           	callstack 14
 36166                           
 36167                           ; BSR set to: 2
 36168                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 36169                           
 36170                           ; BSR set to: 2
 36171                           ;incstack = 0
 36172  009236  EC63  F047         	call	_EUSART1_RxDataHandler	;wreg free
 36173                           
 36174                           ; BSR set to: 0
 36175  00923A  0012               	return		;funcret
 36176  00923C                     __end_of_EUSART1_DefaultErrorHandler:
 36177                           	callstack 0
 36178                           
 36179 ;; *************** function _EUSART1_RxDataHandler *****************
 36180 ;; Defined at:
 36181 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 36182 ;; Parameters:    Size  Location     Type
 36183 ;;		None
 36184 ;; Auto vars:     Size  Location     Type
 36185 ;;		None
 36186 ;; Return value:  Size  Location     Type
 36187 ;;                  1    wreg      void 
 36188 ;; Registers used:
 36189 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36190 ;; Tracked objects:
 36191 ;;		On entry : 3D/0
 36192 ;;		On exit  : 3F/0
 36193 ;;		Unchanged: 0/0
 36194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36199 ;;Total ram usage:        0 bytes
 36200 ;; Hardware stack levels used: 1
 36201 ;; This function calls:
 36202 ;;		Nothing
 36203 ;; This function is called by:
 36204 ;;		_EUSART1_Receive_ISR
 36205 ;;		_EUSART1_DefaultErrorHandler
 36206 ;; This function uses a non-reentrant model
 36207 ;;
 36208                           
 36209                           	psect	text206
 36210  008EC6                     __ptext206:
 36211                           	callstack 0
 36212  008EC6                     _EUSART1_RxDataHandler:
 36213                           	callstack 15
 36214                           
 36215                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 36216                           
 36217                           ; BSR set to: 0
 36218                           ;incstack = 0
 36219  008EC6  0E7C               	movlw	low _eusart1RxBuffer
 36220  008EC8  0100               	movlb	0	; () banked
 36221  008ECA  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36222  008ECC  6ED9               	movwf	fsr2l,c
 36223  008ECE  6ADA               	clrf	fsr2h,c
 36224  008ED0  0E02               	movlw	high _eusart1RxBuffer
 36225  008ED2  22DA               	addwfc	fsr2h,f,c
 36226  008ED4  CF99 FFDF          	movff	3993,indf2	;volatile
 36227                           
 36228                           ; BSR set to: 0
 36229  008ED8  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 36230                           
 36231                           ; BSR set to: 0
 36232                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 36233  008EDA  0E07               	movlw	7
 36234  008EDC  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 36235  008EDE  D002               	goto	i2l12530
 36236                           
 36237                           ; BSR set to: 0
 36238                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 36239  008EE0  0E00               	movlw	0
 36240  008EE2  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 36241  008EE4                     i2l12530:
 36242                           
 36243                           ; BSR set to: 0
 36244                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 36245  008EE4  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 36246                           
 36247                           ; BSR set to: 0
 36248  008EE6  0012               	return		;funcret
 36249  008EE8                     __end_of_EUSART1_RxDataHandler:
 36250                           	callstack 0
 36251                           
 36252                           	psect	text207
 36253  000000                     __ptext207:
 36254                           	callstack 0
 36255                           
 36256                           	psect	rparam
 36257  0000                     
 36258                           	psect	temp
 36259  000050                     btemp:
 36260                           	callstack 0
 36261  000050                     	ds	1
 36262  0000                     int$flags	set	btemp
 36263  0000                     wtemp8	set	btemp+1
 36264  0000                     ttemp5	set	btemp+1
 36265  0000                     ttemp6	set	btemp+4
 36266  0000                     ttemp7	set	btemp+8
 36267                           
 36268                           	psect	idloc
 36269                           
 36270                           ;Config register IDLOC0 @ 0x200000
 36271                           ;	unspecified, using default values
 36272  200000                     	org	2097152
 36273  200000  0FFF               	dw	4095
 36274                           
 36275                           ;Config register IDLOC1 @ 0x200002
 36276                           ;	unspecified, using default values
 36277  200002                     	org	2097154
 36278  200002  0FFF               	dw	4095
 36279                           
 36280                           ;Config register IDLOC2 @ 0x200004
 36281                           ;	unspecified, using default values
 36282  200004                     	org	2097156
 36283  200004  0FFF               	dw	4095
 36284                           
 36285                           ;Config register IDLOC3 @ 0x200006
 36286                           ;	unspecified, using default values
 36287  200006                     	org	2097158
 36288  200006  0FFF               	dw	4095
 36289                           
 36290                           ;Config register IDLOC4 @ 0x200008
 36291                           ;	unspecified, using default values
 36292  200008                     	org	2097160
 36293  200008  0FFF               	dw	4095
 36294                           
 36295                           ;Config register IDLOC5 @ 0x20000A
 36296                           ;	unspecified, using default values
 36297  20000A                     	org	2097162
 36298  20000A  0FFF               	dw	4095
 36299                           
 36300                           ;Config register IDLOC6 @ 0x20000C
 36301                           ;	unspecified, using default values
 36302  20000C                     	org	2097164
 36303  20000C  0FFF               	dw	4095
 36304                           
 36305                           ;Config register IDLOC7 @ 0x20000E
 36306                           ;	unspecified, using default values
 36307  20000E                     	org	2097166
 36308  20000E  0FFF               	dw	4095
 36309                           
 36310                           	psect	config
 36311                           
 36312                           ;Config register CONFIG1L @ 0x300000
 36313                           ;	External Oscillator mode Selection bits
 36314                           ;	FEXTOSC = OFF, Oscillator not enabled
 36315                           ;	Power-up default value for COSC bits
 36316                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 36317  300000                     	org	3145728
 36318  300000  8C                 	db	140
 36319                           
 36320                           ;Config register CONFIG1H @ 0x300001
 36321                           ;	Clock Out Enable bit
 36322                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 36323                           ;	Clock Switch Enable bit
 36324                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 36325                           ;	Fail-Safe Clock Monitor Enable bit
 36326                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 36327  300001                     	org	3145729
 36328  300001  FF                 	db	255
 36329                           
 36330                           ;Config register CONFIG2L @ 0x300002
 36331                           ;	Master Clear Enable bit
 36332                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 36333                           ;	Power-up Timer Enable bit
 36334                           ;	PWRTE = ON, Power up timer enabled
 36335                           ;	Low-power BOR enable bit
 36336                           ;	LPBOREN = OFF, ULPBOR disabled
 36337                           ;	Brown-out Reset Enable bits
 36338                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 36339  300002                     	org	3145730
 36340  300002  FD                 	db	253
 36341                           
 36342                           ;Config register CONFIG2H @ 0x300003
 36343                           ;	Brown Out Reset Voltage selection bits
 36344                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 36345                           ;	ZCD Disable bit
 36346                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 36347                           ;	PPSLOCK bit One-Way Set Enable bit
 36348                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 36349                           ;	Stack Full/Underflow Reset Enable bit
 36350                           ;	STVREN = ON, Stack full/underflow will cause Reset
 36351                           ;	Debugger Enable bit
 36352                           ;	DEBUG = OFF, Background debugger disabled
 36353                           ;	Extended Instruction Set Enable bit
 36354                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 36355  300003                     	org	3145731
 36356  300003  FF                 	db	255
 36357                           
 36358                           ;Config register CONFIG3L @ 0x300004
 36359                           ;	WDT Period Select bits
 36360                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 36361                           ;	WDT operating mode
 36362                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 36363  300004                     	org	3145732
 36364  300004  BF                 	db	191
 36365                           
 36366                           ;Config register CONFIG3H @ 0x300005
 36367                           ;	WDT Window Select bits
 36368                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 36369                           ;	WDT input clock selector
 36370                           ;	WDTCCS = SC, Software Control
 36371  300005                     	org	3145733
 36372  300005  FF                 	db	255
 36373                           
 36374                           ;Config register CONFIG4L @ 0x300006
 36375                           ;	Write Protection Block 0
 36376                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 36377                           ;	Write Protection Block 1
 36378                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 36379                           ;	Write Protection Block 2
 36380                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 36381                           ;	Write Protection Block 3
 36382                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 36383  300006                     	org	3145734
 36384  300006  FF                 	db	255
 36385                           
 36386                           ;Config register CONFIG4H @ 0x300007
 36387                           ;	Configuration Register Write Protection bit
 36388                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 36389                           ;	Boot Block Write Protection bit
 36390                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 36391                           ;	Data EEPROM Write Protection bit
 36392                           ;	WRTD = OFF, Data EEPROM not write-protected
 36393                           ;	Scanner Enable bit
 36394                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 36395                           ;	Low Voltage Programming Enable bit
 36396                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 36397  300007                     	org	3145735
 36398  300007  DF                 	db	223
 36399                           
 36400                           ;Config register CONFIG5L @ 0x300008
 36401                           ;	UserNVM Program Memory Code Protection bit
 36402                           ;	CP = ON, UserNVM code protection enabled
 36403                           ;	DataNVM Memory Code Protection bit
 36404                           ;	CPD = ON, DataNVM code protection enabled
 36405  300008                     	org	3145736
 36406  300008  FC                 	db	252
 36407                           
 36408                           ;Config register CONFIG5H @ 0x300009
 36409                           ;	unspecified, using default values
 36410  300009                     	org	3145737
 36411  300009  FF                 	db	255
 36412                           
 36413                           ;Config register CONFIG6L @ 0x30000A
 36414                           ;	Table Read Protection Block 0
 36415                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 36416                           ;	Table Read Protection Block 1
 36417                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 36418                           ;	Table Read Protection Block 2
 36419                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 36420                           ;	Table Read Protection Block 3
 36421                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 36422  30000A                     	org	3145738
 36423  30000A  FF                 	db	255
 36424                           
 36425                           ;Config register CONFIG6H @ 0x30000B
 36426                           ;	Boot Block Table Read Protection bit
 36427                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 36428  30000B                     	org	3145739
 36429  30000B  FF                 	db	255
 36430                           tosu	equ	0xFFF
 36431                           tosh	equ	0xFFE
 36432                           tosl	equ	0xFFD
 36433                           stkptr	equ	0xFFC
 36434                           pclatu	equ	0xFFB
 36435                           pclath	equ	0xFFA
 36436                           pcl	equ	0xFF9
 36437                           tblptru	equ	0xFF8
 36438                           tblptrh	equ	0xFF7
 36439                           tblptrl	equ	0xFF6
 36440                           tablat	equ	0xFF5
 36441                           prodh	equ	0xFF4
 36442                           prodl	equ	0xFF3
 36443                           indf0	equ	0xFEF
 36444                           postinc0	equ	0xFEE
 36445                           postdec0	equ	0xFED
 36446                           preinc0	equ	0xFEC
 36447                           plusw0	equ	0xFEB
 36448                           fsr0h	equ	0xFEA
 36449                           fsr0l	equ	0xFE9
 36450                           wreg	equ	0xFE8
 36451                           indf1	equ	0xFE7
 36452                           postinc1	equ	0xFE6
 36453                           postdec1	equ	0xFE5
 36454                           preinc1	equ	0xFE4
 36455                           plusw1	equ	0xFE3
 36456                           fsr1h	equ	0xFE2
 36457                           fsr1l	equ	0xFE1
 36458                           bsr	equ	0xFE0
 36459                           indf2	equ	0xFDF
 36460                           postinc2	equ	0xFDE
 36461                           postdec2	equ	0xFDD
 36462                           preinc2	equ	0xFDC
 36463                           plusw2	equ	0xFDB
 36464                           fsr2h	equ	0xFDA
 36465                           fsr2l	equ	0xFD9
 36466                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         820
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     32     154
    BANK1           256      0     256
    BANK2           256      0     239
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8212$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8218$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8224$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8230$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8229	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8224	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8223	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8218	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8217	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8212	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8211	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    read_eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6605$Value	PTR unsigned char  size(2) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), var_sys_NVM.flashRGBMode(BANK0[1]), 
		 -> var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), var_sys_NVM.Stopboton(BANK0[1]), 
		 -> var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), var_sys_NVM.ligthTime(BANK0[1]), 
		 -> var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), var_sys_NVM.securityBandInOpen(BANK0[1]), 
		 -> var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), var_sys_NVM.photoCellIsON(BANK0[1]), 
		 -> var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), var_sys_NVM.homemPresente(BANK0[1]), 
		 -> var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.positionRemotesWalk(BANK0[1]), var_sys_NVM.positionRemotesFull(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), 
		 -> var_sys_NVM.motorSensitivity(BANK0[1]), var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4643$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_eusartparser
    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _saveNewSerial->_i2c_writeNBytes
    _getSerialCmd->_memcpy
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_sm_execute_main
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_SaveNVM_VarSystem
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 6756156
                                             25 BANK0      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 2916810
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 2891386
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       5     4      1  368451
                                             57 COMRAM     1     0      1
                                              4 BANK0      4     4      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7093
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1773709
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349450
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  348151
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349363
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   20456
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1223
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1364
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2020
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      22
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     283
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  740427
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  384102
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3536
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3145
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  356325
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  349416
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1741500
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  347773
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        10     9      1  359320
                                             57 COMRAM     1     0      1
                                              4 BANK0      2     2      0
                  _SaveNVM_VarSystem
                  _read_eusartparser
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1343
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (2) _read_eusartparser                                    3     2      1    5302
                                             23 COMRAM     3     2      1
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    3092
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      25
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     500
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     500
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     223
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     112
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1620
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1022
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     598
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    4118
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     576
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     317
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     161
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0     893
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    2612
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2519
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _I2C1_SetDataCompleteCallback                        4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _SaveNVM_VarSystem
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
         _i2c_readDataBlock
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
           _i2c_writeNBytes
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
           _i2c_readDataBlock
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
           _i2c_writeNBytes
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      EF       9       93.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      9A       5       96.2%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3CF      60        0.0%
DATA                 0      0     3CF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jul 15 18:19:48 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 9158  
                                _eusart1TxBufferRemaining 01FF  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 7CEA  
                                           _LoadManufCode 8E60  
                                        ?_SetSegmentValue 001C  
                                                     l100 8864  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 77BA  
                                                     l690 7C20  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02DF  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 4236  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 8B4A  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 91D4  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 89C4  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 003A  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2034 8134  
                                                    l1405 5F96  
                                       readRFButtons@key1 0088  
                                                    l2039 8140  
                                                    l1512 5452  
                                                    l2410 39C4  
                                                    l2306 4D88  
                                                    l2235 6F9C  
                                                    l2323 7CE6  
                                                    l1372 8762  
                                                    l1436 54CE  
                                                    l3060 21C6  
                                                    l1357 69B0  
                                                    l1366 6B32  
                                                    l2502 7640  
                                                    l2318 7CDC  
                                                    l1383 56D2  
                                                    l2511 8962  
                                                    l1519 549E  
                                                    l3048 203A  
                                                    l2249 669A  
                                                    l2514 8988  
                                                    l1490 5334  
                                                    l2371 4876  
                                                    l1731 6810  
                                                    l3083 220C  
                                                    l1388 575A  
                                                    l4132 8566  
                                                    l2348 486A  
                                                    l1740 687C  
                                                    l1732 6818  
                                                    l1652 5A90  
                                                    l3500 825C  
                                                    l3228 1066  
                                                    l2365 4862  
                                                    l1741 6884  
                                                    l1486 836E  
                                                    l2438 3B36  
                                                    l1734 6834  
                                                    l1726 67D6  
                                                    l1662 5AD8  
                                                    l2375 493A  
                                                    l1743 68AE  
                                                    l1735 683C  
                                                    l1727 67DE  
                                                    l2472 3C4C  
                                                    l2392 4932  
                                                    l3601 2EF6  
                                                    l1737 6858  
                                                    l1649 5A1A  
                                                    l3353 29B0  
                                                    l3097 22E6  
                                                    l3602 2EFC  
                                                    l1738 6860  
                                                    l2722 4DB4  
                                                    l3603 2F02  
                                                    l3612 2FEA  
                                                    l3604 2F08  
                                                    l2580 7F2A  
                                                    l2724 4DEA  
                                                    l2805 4234  
                                                    l2725 4EAA  
                                                    l2398 4946  
                                                    l3606 2F0E  
                                                    l1854 6DAC  
                                                    l2718 46FE  
                                                    l3607 2F14  
                                                    l3375 2AAA  
                                                    l3367 2A70  
                                                    l3608 2F1A  
                                                    l1864 6DE0  
                                                    l1856 6DBC  
                                                    l2648 37FE  
                                                    l3617 3170  
                                                    l3609 2F20  
                                                    l3385 2BEE  
                                                    l3618 317A  
                                                    l3482 8AC2  
                                                    l3386 2C0E  
                                                    l2907 19FC  
                                                    l3580 2E84  
                                                    l3476 71F6  
                                                    l3590 2EC2  
                                                    l3582 2E8E  
                                                    l3591 2EC8  
                                                    l3583 2E98  
                                                    l3592 2ECE  
                                                    l2768 4050  
                                                    l3593 2ED4  
                                                    l3585 2E9E  
                                                    l3594 2EDA  
                                                    l3587 2EA8  
                                                    l3596 2EE0  
                                                    l3588 2EB2  
                                                    l3668 7A6C  
                                                    l3597 2EE6  
                                                    l3589 2EBC  
                                                    l3599 2EF0  
                                                    ?_rxi 0001  
                                                    _DKEY 02CF  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 00F1  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 9110  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 884E  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 5982  
                                                    _main 5CA2  
                                           ?_EUSART1_Read 0001  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                         __end_of_Decrypt 6E38  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 6FC8  
                                         __end_of_ReadADC 84CA  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 5312  
                                 __end_of_TMR0_Initialize 8EA4  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 907E  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l12002 8884  
                                                   l12004 8888  
                                                   l20012 5282  
                                                   l20110 72E0  
                                                   l20024 52CE  
                                                   l20104 72DC  
                                                   l20204 8A2C  
                                                   l20036 530E  
                                                   l20028 52D2  
                                                   l20052 7382  
                                                   l20140 7344  
                                                   l20124 730E  
                                                   l20300 4CF6  
                                                   l20220 4B90  
                                                   l21004 35DA  
                                                   l21110 53E2  
                                                   l21102 53C6  
                                                   l20150 8A5E  
                                                   l12230 69F8  
                                                   l20072 73B4  
                                                   l20232 4BBC  
                                                   l12224 69DE  
                                                   l21130 5428  
                                                   l21122 540C  
                                                   l21114 53F0  
                                                   l21106 53D4  
                                                   l20058 7386  
                                                   l20330 4D50  
                                                   l20322 4D26  
                                                   l20226 4BA2  
                                                   l12250 6A46  
                                                   l12242 6A22  
                                                   l12234 6A0A  
                                                   l12218 69C4  
                                                   l21026 71B6  
                                                   l21036 82C0  
                                                   l20164 7830  
                                                   l20308 4D14  
                                                   l20420 6CE6  
                                                   l22100 1EF0  
                                                   l22012 1D50  
                                                   l12260 6A6E  
                                                   l12244 6A2C  
                                                   l20500 2A0A  
                                                   l21046 8308  
                                                   l21150 5474  
                                                   l21134 5436  
                                                   l21126 541A  
                                                   l21118 53FE  
                                                   l21070 5356  
                                                   l21222 5124  
                                                   l21206 50F8  
                                                   l20350 7EEE  
                                                   l20430 635A  
                                                   l20414 6CAC  
                                                   l12238 6A16  
                                                   l20176 7850  
                                                   l20168 7834  
                                                   l20088 73EA  
                                                   l20328 4D4A  
                                                   l20256 4C48  
                                                   l20280 4C94  
                                                   l20424 6D20  
                                                   l21400 464A  
                                                   l12264 6A7A  
                                                   l12256 6A60  
                                                   l12272 6A90  
                                                   l12440 7918  
                                                   l21154 5482  
                                                   l21146 5466  
                                                   l21138 5444  
                                                   l21090 539C  
                                                   l21082 5380  
                                                   l21074 5364  
                                                   l21066 5348  
                                                   l21058 5326  
                                                   l20338 4D74  
                                                   l20266 4C66  
                                                   l21402 4650  
                                                   l22106 1F06  
                                                   l22042 1DEC  
                                                   l22034 1D9E  
                                                   l22026 1D80  
                                                   l12434 7908  
                                                   l12506 8D24  
                                                   l20522 2A7E  
                                                   l20196 8A14  
                                                   l20444 63EA  
                                                   l21332 452A  
                                                   l21316 44E6  
                                                   l22116 1F54  
                                                   l12268 6A86  
                                                   l20524 2A86  
                                                   l20508 2A16  
                                                   l22220 11AA  
                                                   l22204 112A  
                                                   l22140 0F66  
                                                   l22132 0F24  
                                                   l21158 5490  
                                                   l21094 53AA  
                                                   l21086 538E  
                                                   l21078 5372  
                                                   l21190 50AE  
                                                   l21174 5020  
                                                   l20382 7F7C  
                                                   l20438 63A6  
                                                   l21510 4E1E  
                                                   l21422 466A  
                                                   l21318 44FC  
                                                   l20462 8160  
                                                   l12446 792E  
                                                   l12462 7960  
                                                   l20710 2D9E  
                                                   l20630 2C9E  
                                                   l20622 2C5E  
                                                   l20614 2C28  
                                                   l20534 2A9A  
                                                   l20526 2A8E  
                                                   l20518 2A22  
                                                   l22222 11AC  
                                                   l22214 1190  
                                                   l23014 23E2  
                                                   l16000 24F2  
                                                   l20384 7F88  
                                                   l21600 4F48  
                                                   l21520 4E42  
                                                   l21440 46A0  
                                                   l21352 459A  
                                                   l20464 8192  
                                                   l12448 7936  
                                                   l20704 2D80  
                                                   l20640 2CB4  
                                                   l20624 2C7A  
                                                   l20616 2C52  
                                                   l20560 2B0A  
                                                   l20472 29BA  
                                                   l22400 15D0  
                                                   l22312 13CC  
                                                   l22240 1226  
                                                   l22224 11D6  
                                                   l22160 0FE4  
                                                   l22152 0FCC  
                                                   l22144 0F88  
                                                   l22136 0F44  
                                                   l23032 2442  
                                                   l23016 23F6  
                                                   l12570 8D62  
                                                   l12554 76DA  
                                                   l21098 53B8  
                                                   l21178 502A  
                                                   l21282 7278  
                                                   l21266 7230  
                                                   l21530 4E60  
                                                   l22066 1E76  
                                                   l23122 37C0  
                                                   l23106 375C  
                                                   l12466 796E  
                                                   l12458 7956  
                                                   l20730 2DCA  
                                                   l20650 2CE0  
                                                   l20634 2CA8  
                                                   l20618 2C56  
                                                   l20554 2AC2  
                                                   l20546 2AB2  
                                                   l20490 29F6  
                                                   l20474 29C2  
                                                   l22330 1422  
                                                   l22226 11DC  
                                                   l23042 246E  
                                                   l14420 5666  
                                                   l14412 8756  
                                                   l16100 2762  
                                                   l16020 256C  
                                                   l16012 253E  
                                                   l16004 2502  
                                                   l21188 509E  
                                                   l21196 50B2  
                                                   l20388 7F90  
                                                   l21268 7246  
                                                   l21604 4F54  
                                                   l21540 4E7E  
                                                   l21532 4E68  
                                                   l21524 4E4C  
                                                   l21436 4696  
                                                   l21372 45F2  
                                                   l22068 1E80  
                                                   l23132 3800  
                                                   l20732 2DCE  
                                                   l20724 2DAC  
                                                   l20716 2DA8  
                                                   l20652 2CE4  
                                                   l20644 2CBC  
                                                   l20628 2C94  
                                                   l20564 2B1C  
                                                   l20492 29FE  
                                                   l20476 29CA  
                                                   l22412 160A  
                                                   l22236 11FA  
                                                   l22148 0FAA  
                                                   l23036 2456  
                                                   l14430 569C  
                                                   l12558 771C  
                                                   l12582 6ACE  
                                                   l16110 27D4  
                                                   l21702 4148  
                                                   l21710 4162  
                                                   l21550 4E90  
                                                   l21446 46B2  
                                                   l21438 469A  
                                                   l21366 45DA  
                                                   l23118 379E  
                                                   l23070 36A4  
                                                   l23134 3840  
                                                   l23062 366A  
                                                   l20910 332E  
                                                   l20662 2D0C  
                                                   l20638 2CB0  
                                                   l20574 2B2C  
                                                   l20486 29E6  
                                                   l20478 29D2  
                                                   l22430 1666  
                                                   l22326 1412  
                                                   l22262 12D8  
                                                   l22190 1068  
                                                   l23038 2462  
                                                   l14440 5740  
                                                   l14424 567C  
                                                   l16120 2846  
                                                   l16040 25BC  
                                                   l16032 259C  
                                                   l16024 257C  
                                                   l16016 255C  
                                                   l16008 2520  
                                                   l21288 7282  
                                                   l21720 4186  
                                                   l21640 403E  
                                                   l21384 4616  
                                                   l22088 1ED8  
                                                   l21800 18F0  
                                                   l23136 3856  
                                                   l20920 33C6  
                                                   l20736 2DD6  
                                                   l20680 2D3E  
                                                   l20664 2D10  
                                                   l20656 2CEC  
                                                   l20584 2BB4  
                                                   l20576 2B7A  
                                                   l20488 29EE  
                                                   l20752 2E1C  
                                                   l22424 164E  
                                                   l22360 14D0  
                                                   l22352 147C  
                                                   l22344 145E  
                                                   l22328 1416  
                                                   l22280 1328  
                                                   l22504 1840  
                                                   l22184 1044  
                                                   l22176 101E  
                                                   l22168 0FFC  
                                                   l22192 10AC  
                                                   l17010 3BA6  
                                                   l16114 27E8  
                                                   l16106 27C0  
                                                   l21626 3FD0  
                                                   l21458 46DC  
                                                   l23090 36FE  
                                                   l23066 368C  
                                                   l23058 365C  
                                                   l12498 8D0C  
                                                   l20738 2DF2  
                                                   l20690 2D6C  
                                                   l20674 2D32  
                                                   l20658 2D08  
                                                   l20754 2E6E  
                                                   l22442 1694  
                                                   l22354 147E  
                                                   l22258 12B6  
                                                   l22194 10C2  
                                                   l14444 576A  
                                                   l14380 693A  
                                                   l14364 68DE  
                                                   l12588 6B66  
                                                   l14700 75E0  
                                                   l17012 3BB4  
                                                   l16060 261A  
                                                   l16052 25FA  
                                                   l16044 25CC  
                                                   l16036 25AC  
                                                   l16028 258C  
                                                   l16140 2F9C  
                                                   l21740 41AC  
                                                   l21724 418E  
                                                   l21708 415C  
                                                   l21660 40B6  
                                                   l21628 3FE6  
                                                   l21564 4EC4  
                                                   l21556 4EA6  
                                                   l21820 195E  
                                                   l21812 1938  
                                                   l21804 1914  
                                                   l23180 3926  
                                                   l13820 7A1E  
                                                   l13804 8ABC  
                                                   l20916 3388  
                                                   l20908 332C  
                                                   l20684 2D42  
                                                   l20676 2D36  
                                                   l20668 2D14  
                                                   l22460 16D6  
                                                   l22452 16BC  
                                                   l22380 1562  
                                                   l22364 14F2  
                                                   l23260 5D8C  
                                                   l23236 5CE8  
                                                   l17006 3B8E  
                                                   l17022 3BD8  
                                                   l16142 2FF0  
                                                   l22710 6E6A  
                                                   l22702 6E3A  
                                                   l21742 41B2  
                                                   l21726 4196  
                                                   l21574 4EEA  
                                                   l21478 4DA4  
                                                   l23182 392A  
                                                   l23158 38C0  
                                                   l23094 3720  
                                                   l23078 36C6  
                                                   l13822 7A2A  
                                                   l20950 34A2  
                                                   l20942 347C  
                                                   l20918 33C0  
                                                   l20678 2D3A  
                                                   l22470 1710  
                                                   l22438 1688  
                                                   l23246 5CFE  
                                                   l14448 578C  
                                                   l14384 6946  
                                                   l22560 5F1A  
                                                   l22528 5E70  
                                                   l14704 75E8  
                                                   l17032 3C0E  
                                                   l17016 3BC8  
                                                   l16080 266A  
                                                   l16072 264A  
                                                   l16064 262A  
                                                   l16056 260A  
                                                   l16048 25EA  
                                                   l16128 28A4  
                                                   l16144 3062  
                                                   l16160 3184  
                                                   l22720 6E90  
                                                   l22608 62BC  
                                                   l21760 41EA  
                                                   l21752 41D0  
                                                   l21680 4102  
                                                   l21920 1B74  
                                                   l21840 19B2  
                                                   l21832 199A  
                                                   l21824 1978  
                                                   l23192 3942  
                                                   l23184 3936  
                                                   l13832 7A5E  
                                                   l20952 34B6  
                                                   l20696 2D76  
                                                   l22480 17DE  
                                                   l22384 1584  
                                                   l22288 1344  
                                                   l22296 1360  
                                                   l13842 8534  
                                                   l14378 6932  
                                                   l22546 5EE2  
                                                   l22562 5F30  
                                                   l14706 7610  
                                                   l17050 3C76  
                                                   l16090 26E6  
                                                   l16146 30B0  
                                                   l16138 2F2A  
                                                   l22722 6EA2  
                                                   l22706 6E4A  
                                                   l22730 6ED6  
                                                   l21738 41A8  
                                                   l21586 4F18  
                                                   l21914 1B5C  
                                                   l23178 3920  
                                                   l20938 3442  
                                                   l22458 16CE  
                                                   l23266 5DB0  
                                                   l13844 853C  
                                                   l14396 696C  
                                                   l22548 5EE6  
                                                   l14716 763C  
                                                   l17060 3CA6  
                                                   l17044 3C50  
                                                   l17028 3BFA  
                                                   l11988 8850  
                                                   l16084 2688  
                                                   l16076 265A  
                                                   l16068 263A  
                                                   l16148 3122  
                                                   l22724 6EBC  
                                                   l22716 6E80  
                                                   l22636 59A6  
                                                   l21692 4126  
                                                   l21860 1A3E  
                                                   l23188 393C  
                                                   l22484 17EE  
                                                   l23276 5DCE  
                                                   l13854 855C  
                                                   l17054 3C8C  
                                                   l16094 2704  
                                                   l22670 5A74  
                                                   l21942 1BE4  
                                                   l21918 1B6A  
                                                   l21862 1A54  
                                                   l23198 3950  
                                                   l22486 17F4  
                                                   l17048 3C68  
                                                   l14672 7CD2  
                                                   l22672 5A7A  
                                                   l13960 872E  
                                                   l21776 421C  
                                                   l21880 1AD0  
                                                   l21848 19DA  
                                                   l21792 18BE  
                                                   l21784 188E  
                                                   l22488 17FA  
                                                   l22912 227E  
                                                   l22904 2264  
                                                   l22832 2136  
                                                   l22816 210E  
                                                   l22808 20F0  
                                                   l22752 2000  
                                                   l22744 1FBE  
                                                   l14682 8964  
                                                   l14666 7CB6  
                                                   l22666 5A4E  
                                                   l22658 5A20  
                                                   l22690 5AFC  
                                                   l21698 4140  
                                                   l21954 1C3A  
                                                   l21858 19FE  
                                                   l20898 330A  
                                                   l22842 2162  
                                                   l22826 211E  
                                                   l22738 1F96  
                                                   l22762 203C  
                                                   l22772 2090  
                                                   l22756 2022  
                                                   l22748 1FE0  
                                                   l22764 2068  
                                                   l14694 75C8  
                                                   l22694 5B08  
                                                   l21974 1C8A  
                                                   l21886 1AF0  
                                                   l21878 1AB2  
                                                   l20998 35C4  
                                                   l22926 22A2  
                                                   l22862 21BC  
                                                   l22838 2150  
                                                   l22766 207E  
                                                   l16704 6566  
                                                   l14696 75D0  
                                                   l16800 8122  
                                                   l22688 5AF4  
                                                   l22864 21C8  
                                                   l22856 219C  
                                                   l19114 81A8  
                                                   l19130 81BC  
                                                   l16650 6498  
                                                   l14698 75D8  
                                                   l16546 802C  
                                                   l21986 1CE0  
                                                   l22946 22D6  
                                                   l22938 22B8  
                                                   l22866 21D6  
                                                   l22786 20CC  
                                                   l22778 20B0  
                                                   l19124 81B6  
                                                   l19052 7772  
                                                   l19044 7766  
                                                   l16468 9006  
                                                   l16636 68A8  
                                                   l16724 8592  
                                                   l16564 8064  
                                                   l16556 804E  
                                                   l16548 8030  
                                                   l22972 232E  
                                                   l22876 21FC  
                                                   l22796 20DA  
                                                   l19118 81AE  
                                                   l19222 8B9E  
                                                   l19310 6F16  
                                                   l16902 4922  
                                                   l16590 6804  
                                                   l16574 67C0  
                                                   l16566 8068  
                                                   l22982 2350  
                                                   l19048 776C  
                                                   l19216 8B92  
                                                   l19304 87FA  
                                                   l19320 6F5E  
                                                   l16680 6506  
                                                   l16664 64CC  
                                                   l16912 39A6  
                                                   l16904 4926  
                                                   l16832 4754  
                                                   l16824 4738  
                                                   l16576 67CA  
                                                   l22968 231E  
                                                   l19066 77E2  
                                                   l19058 7778  
                                                   l19154 8666  
                                                   l19330 6F8C  
                                                   l16690 6532  
                                                   l16930 3A10  
                                                   l16906 4934  
                                                   l16850 47A6  
                                                   l16834 475A  
                                                   l16818 4728  
                                                   l22898 2246  
                                                   l19092 7C2A  
                                                   l19164 8672  
                                                   l19180 84E2  
                                                   l19340 6FBE  
                                                   l16588 67FA  
                                                   l22988 2374  
                                                   l19158 866C  
                                                   l19190 90FC  
                                                   l19270 79F8  
                                                   l19318 6F52  
                                                   l16942 3A4A  
                                                   l16918 39C6  
                                                   l19510 54D6  
                                                   l19430 6DC4  
                                                   l19502 87B2  
                                                   l19088 7C24  
                                                   l16952 3A86  
                                                   l16960 3AB8  
                                                   l16880 487A  
                                                   l16792 80FC  
                                                   l15992 249E  
                                                   l19512 54DC  
                                                   l19416 6DA8  
                                                   l19408 6D8E  
                                                   l19352 842E  
                                                   l19290 8EC2  
                                                   l19098 7C30  
                                                   l19186 90F4  
                                                   l16954 3A94  
                                                   l16946 3A5E  
                                                   l16874 4852  
                                                   l15994 24BA  
                                                   l19426 6DB8  
                                                   l19372 7E32  
                                                   l19364 7DF6  
                                                   l16980 3B18  
                                                   l16876 4856  
                                                   l16796 810E  
                                                   l15996 24D4  
                                                   l19532 5596  
                                                   l19356 8442  
                                                   l19604 863C  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l16974 3AF2  
                                                   l16958 3AAA  
                                                   l16878 4864  
                                                   l19526 5584  
                                                   l19518 5520  
                                                   l19438 6DD8  
                                                   l19462 6BEC  
                                                   l19606 8656  
                                                   l19296 87DA  
                                                   l16976 3B02  
                                                   l19528 5588  
                                                   l19720 6636  
                                                   l19608 865A  
                                                   l19378 7D74  
                                                   l19546 563E  
                                                   l19538 55DA  
                                                   l19474 6C5C  
                                                   l19466 6C18  
                                                   l19714 65E2  
                                                   l19706 65A4  
                                                   l19810 3DF0  
                                                   l19802 3D68  
                                                   l16988 3B42  
                                                   l19388 7DBE  
                                                   l19548 5642  
                                                   l19820 3E8A  
                                                   l19812 3E0C  
                                                   l19804 3D94  
                                                   l19662 6146  
                                                   l19566 7ACC  
                                                   l19574 756C  
                                                   l19558 7E88  
                                                   l19822 3EA4  
                                                   l19814 3E3A  
                                                   l19806 3DB0  
                                                   l19830 3F34  
                                                   l18856 7FD6  
                                                   l19656 60F4  
                                                   l19920 5188  
                                                   l19496 82A2  
                                                   l19584 75AE  
                                                   l19576 759E  
                                                   l19824 3EBE  
                                                   l19816 3E56  
                                                   l19808 3DD4  
                                                   l19682 61F2  
                                                   l19850 899C  
                                                   l19914 5184  
                                                   l19834 3F42  
                                                   l19818 3E72  
                                                   l19676 61DC  
                                                   l19932 51C2  
                                                   l19828 3ED0  
                                                   l19772 3CD4  
                                                   l19862 89B8  
                                                   l19854 89A2  
                                                   l19838 3F7E  
                                                   l19790 3D26  
                                                   l19880 5BCE  
                                                   l19944 51EA  
                                                   l19784 3CF4  
                                                   l19776 3CDE  
                                                   l19866 89C0  
                                                   l19970 521A  
                                                   l19938 51C6  
                                                   l19954 51EE  
                                                   l19778 3CE4  
                                                   l19884 5C06  
                                                   l19876 5B92  
                                                   l19796 3D36  
                                                   l19992 5254  
                                                   l19976 5222  
                                                   l19898 5C94  
                                                   l19998 525C  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 79FC  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 7EBC  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 7978  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 89C4  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 8D2C  
                                            _zeroCrossing 0194  
                                         __end_of___lldiv 7A7E  
                                                   u20000 4896  
                                                   u20020 48A2  
                                                   _T1CLK 000FD2  
                                                   u20040 48AC  
                                                   u20220 3A5A  
                                                   u20060 48B6  
                                                   u12060 793A  
                                         ___awdiv@divisor 0016  
                                                   u20310 3AE2  
                                                   u20150 39D8  
                                                   u20400 3B70  
                                                   u20240 3A76  
                                                   u20160 39E6  
                                                   u20080 48DA  
                                                   _T1CON 000FCF  
                                                   u22010 6F30  
                                                   u20170 39F6  
                                                   u20500 3C0A  
                                                   u22030 6F6C  
                                                   u22040 6F7A  
                                                   _T2CON 000FBD  
                                                   u20450 3BC4  
                                                   u20370 3B58  
                                                   u22060 6F98  
                                                   u20540 3C36  
                                                   u22300 8248  
                                                   u22070 6FAC  
                                                   u20550 3C3E  
                                                   u22080 6FBA  
                                                   u15210 7C96  
                                                   u22330 829A  
                                                   u24010 34E2  
                                                   u23220 7860  
                                                   u23300 4BAE  
                                                   u13620 7A2E  
                                                   u20590 3C9A  
                                                   u15320 7620  
                                                   u24200 5340  
                                                   u25000 46F4  
                                                   u24040 351C  
                                                   u22265 6BF8  
                                                   u21810 9134  
                                                   u13650 8540  
                                                   u15250 7CCC  
                                                   u22610 6644  
                                                   u23410 4C76  
                                                   u23330 4BF2  
                                                   u24130 7154  
                                                   u23411 4C74  
                                                   u22540 61D4  
                                                   u13580 8AA4  
                                                   u24060 35AC  
                                                   _T2HLT 000FBE  
                                                   u22285 6C68  
                                                   u14710 565C  
                                                   u14630 68D2  
                                                   u15270 895E  
                                                   u22550 65A0  
                                                   u23350 4C02  
                                                   u23255 83B6  
                                                   u14720 5674  
                                                   u15280 8974  
                                                   u23360 4C12  
                                                   u24410 545E  
                                                   u23610 7EDC  
                                                   u22650 86B8  
                                                   u23370 4C1A  
                                                   u26010 1A8E  
                                                   u25220 4E5C  
                                                   u23460 4CB0  
                                                   u26100 1B64  
                                                   u18101 2838  
                                                   u18021 24C6  
                                                   u21838 7784  
                                                   u14750 56B8  
                                                   u23630 7EFE  
                                                   u25150 4E18  
                                                   u23550 4D36  
                                                   u23470 4CC0  
                                                   u21839 7796  
                                                   u18111 2868  
                                                   u18031 26AA  
                                                   u21928 8506  
                                                   u14760 56CA  
                                                   u24520 50C2  
                                                   u19000 8046  
                                                   u22760 89A6  
                                                   u23480 4CC8  
                                                   u26200 1C64  
                                                   u26120 1B88  
                                                   u27000 14A4  
                                                   u21929 8518  
                                                   u18121 2896  
                                                   u18041 26D8  
                                                   u26201 1C62  
                                                   u18130 90EE  
                                                   u23650 7F56  
                                                   u23570 4D5E  
                                                   u26130 1B90  
                                                   u26050 1B0C  
                                                   u23810 32B4  
                                                   u18051 2726  
                                                   u21868 7C3C  
                                                   u22860 5160  
                                                   u25340 4EF8  
                                                   u26300 1D2E  
                                                   u26220 1CA8  
                                                   u26140 1BAA  
                                                   u26060 1B14  
                                                   u23820 32BA  
                                                   u21869 7C4E  
                                                   u18061 2754  
                                                   u26301 1D2C  
                                                   u26221 1CA6  
                                                   u26141 1BA8  
                                                   u27005 14A0  
                                                   u21878 81C8  
                                                   u24630 7254  
                                                   u25190 4E3C  
                                                   u26230 1CB6  
                                                   u26070 1B2E  
                                                   u27110 1630  
                                                   u21879 81DA  
                                                   u18071 2784  
                                                   u26071 1B2C  
                                                   u21888 867E  
                                                   u25600 4134  
                                                   u25520 40CA  
                                                   u25440 4F72  
                                                   u24720 4512  
                                                   u26160 1C02  
                                                   u23920 3400  
                                                   u27200 16E6  
                                                   u27120 1644  
                                                   u27040 1536  
                                                   u28000 21F6  
                                                   u21889 8690  
                                                   u18081 27B2  
                                                   u25441 4F70  
                                                   u26161 1C00  
                                                   u27201 16E4  
                                                   u19210 6480  
                                                   u22890 51BE  
                                                   u24810 45C6  
                                                   u26330 1D62  
                                                   u26170 1C10  
                                                   u18091 280A  
                                                   u27035 1520  
                                                   u19300 64C0  
                                                   u25700 41E0  
                                                   u25540 40DE  
                                                   u25380 4F28  
                                                   u27140 165E  
                                                   u27125 1640  
                                                   u27045 1532  
                                                   u19230 648C  
                                                   u25630 417A  
                                                   u24910 467E  
                                                   u26510 1F04  
                                                   u26430 1E06  
                                                   u26350 1D6E  
                                                   u26190 1C4A  
                                                   u23870 3346  
                                                   u27070 15E0  
                                                   u27320 5EFE  
                                                   u24840 4600  
                                                   u26520 1F20  
                                                   u26440 1E0C  
                                                   u26280 1D04  
                                                   u27080 15E6  
                                                   u26521 1F1E  
                                                   u19410 6528  
                                                   u25570 4110  
                                                   u25490 4004  
                                                   u24770 4550  
                                                   u26530 1F2E  
                                                   u26370 1D9C  
                                                   u26290 1D0A  
                                                   u27090 161A  
                                                   u28050 2224  
                                         __end_of___lwdiv 8570  
                                                   u27091 1618  
                                                   u27420 8326  
                                                   u19500 6576  
                                                   u26380 1DB8  
                                                   u25820 18E4  
                                                   u26381 1DB6  
                                                   u27430 8358  
                                                   u27350 5F52  
                                                   u27270 5EAC  
                                                   u19510 657E  
                                                   u25670 41C0  
                                                   u25590 411C  
                                                   u24870 4624  
                                                   u24790 45B2  
                                                   u26390 1DC6  
                                                   u28310 23A2  
                                                   u28230 233C  
                                                   u28070 2234  
                                                   u18535 8F1C  
                                                   u27360 5F60  
                                                   u19520 6586  
                                                   u19440 6540  
                                                   u19280 64B4  
                                                   u18536 8F1E  
                                                   u26480 1EEA  
                                                   u27290 5EC4  
                                                   u19370 64F8  
                                                   u27530 5A40  
                                                   u19530 857A  
                                                   u26810 128A  
                                                   u27380 5F7A  
                                                   u19620 80EA  
                                                   u27620 5AD8  
                                                   u27540 5A4E  
                                                   u26820 12E6  
                                                   u28420 2426  
                                                   u28180 22F6  
                                                   u19541 8588  
                                                   u26805 1274  
                                                   u28181 22F4  
                                                   u25790 18B2  
                                                   u26830 12EC  
                                                   u26670 105A  
                                                   u28350 23C0  
                                                   u27711 6EAE  
                                                   u26815 1286  
                                                   u19800 4790  
                                                   u27560 5A74  
                                                   u28520 36F2  
                                                   u19810 47A0  
                                                   u27570 5A88  
                                                   u26850 1336  
                                                   u27730 1FB2  
                                                   u19811 479E  
                                                   u19900 47DE  
                                                   u28540 3714  
                                                   u26860 133C  
                                                   _T2TMR 000FBB  
                                                   u19830 47B4  
                                                   u28470 3680  
                                                   u26950 1430  
                                                   u26870 1352  
                                                   u28390 240E  
                                                   u26871 1350  
                                                   u19920 47E8  
                                                   u26960 1436  
                                                   u27760 2016  
                                                   u27681 6E5C  
                                                   u28650 3872  
                                                   u28490 36BA  
                                                   _T2RST 000FC0  
                                                   u28731 5DA0  
                                                   u19940 480A  
                                                   u19860 47C8  
                                                   u27940 2172  
                                                   u19790 4782  
                                                   u19880 47D4  
                                                   u27960 21AA  
                                                   i2l106 8A8E  
                                                   u28690 38B0  
                                                   u26995 148E  
                                                   u28777 7DCE  
                                                   u28787 7E42  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 8D7E  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 89FC  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 825E  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 8A62  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 8E16  
                                        __end_of_TMR1_ISR 894E  
                                        __end_of_TMR2_ISR 60E6  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 018E  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 894E  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 0198  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 884E  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 6BA8  
                                         __end_of_sm_init 841E  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 249C  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 927A  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 9278  
                                         _TMR1_WriteTimer 8F3C  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 669E  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 708E  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 7B7C  
                                            __end_of_main 5E24  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 76CE  
                                          _refreshCurrent 873E  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 8B76  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 786E  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 914E  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 564E  
                              _validateRemoteSerialNumber 54B2  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 7C72  
                                      __end_of_I2C1_DO_TX 77E6  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 865E  
                  __end_of_SetSegmentValueIntermitentMain 90BC  
                          _SetSegmentValueIntermitentMain 90A8  
                                      __end_of_I2C1_Close 8EC6  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 5982  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 6FC8  
                                                  i2l1147 8F4E  
                                                  i2l2019 5908  
                                                  i2l2123 789E  
                                                  i2l2135 78F2  
                                                  i2l2128 78BC  
                                                  i2l2217 4B38  
                                                  i2l1266 5FF0  
                                                  i2l2235 7062  
                                                  i2l2323 7D5E  
                                                  i2l1277 607A  
                                                  i2l2318 7D54  
                                                  i2l2190 4A5A  
                                                  i2l1615 4406  
                                                  i2l2186 4974  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 7D62  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 69B2  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 75B2  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 8A30  
                                 __end_ofi2_GetMotorPower 708E  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                    __end_of_sm_execute_menuConfiguration 1886  
                            _sm_execute_menuConfiguration 0F22  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 77E6  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 81A4  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 8D2C  
                    __end_of_TMR1_DefaultInterruptHandler 9276  
                            _TMR1_DefaultInterruptHandler 9274  
                                  __end_of_refreshCurrent 8784  
                                           ?_read_package 0011  
                                                  ___lmul 841E  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 8DCA  
                                  __end_of_refreshSegment 78F4  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 3CB4  
                             __end_of_keeloqDecryptPacket 514A  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 87C8  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 7104  
                                                  clear_1 7110  
                                                  clear_2 711C  
                                                  clear_3 7128  
                                                  clear_4 7134  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 1F94  
                              _sm_execute_ControlLearning 1886  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 85C0  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 911E  
                                          _PMD_Initialize 8F20  
                                              _StateTRIAC 0192  
                                           ?_eusartparser 003A  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 8316  
                                    __end_of_ControlMotor 494A  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 4236  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 8FF2  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                 __end_of_TMR1_WriteTimer 8F58  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 91CC  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 8F72  
                                        ?_TMR1_Initialize 0001  
                                       _SYSTEM_Initialize 8AC4  
                              __end_of_actionZone_Opening 4700  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 713A  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00DF  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 29A4  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 8D56  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 8EE8  
                                 _rdBlkRegCompleteHandler 88CE  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 900A  
                                            __pidataBANK0 926E  
                                            __pidataBANK1 923C  
                                            __pidataBANK2 9270  
                                            __pidataBANK3 8E16  
                                     ??_SYSTEM_Initialize 0014  
                        __end_of_I2C1_MasterEnableRestart 9262  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 8F3C  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 873E  
                                          ??_eusartparser 00DC  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 658E  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 8F72  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 7488  
                                   __end_of_I2C1_DO_RESET 91A8  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 9068  
                             VerifyFollowMe@securityClose 0010  
                               __end_of_SYSTEM_Initialize 8AF2  
                                     __end_of_ShowVersion 8142  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 2E74  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 91CC  
                       _EUSART1_TxDefaultInterruptHandler 02EB  
                                            _GetOpenOrder 514A  
                                    __end_of_InitSoftStop 86F6  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 8C7E  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 6AAE  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 8C52  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 825E  
                                   _rd1RegCompleteHandler 8C7E  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 91E4  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 8CAA  
                         __end_of_EUSART1_SetErrorHandler 919E  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 916C  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 60E6  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 8610  
                                         _I2C1_MasterOpen 9022  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 925A  
                                         _I2C1_Initialize 90BC  
                                     __end_of_I2C1_Poller 9102  
                                __end_of_setFlashLigth_ON 898A  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 8F04  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 5CA2  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BB  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 018B  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 9194  
                          _EUSART1_SetFramingErrorHandler 918A  
                                    _refreshADCZeroOffset 68B4  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 7C72  
                                                 i2l14102 42FC  
                                                 i2l14120 436A  
                                                 i2l12530 8EE4  
                                                 i2l14130 439E  
                                                 i2l14114 4344  
                                                 i2l14210 49B0  
                                                 i2l14116 4354  
                                                 i2l14150 4410  
                                                 i2l14118 4364  
                                                 i2l14070 4258  
                                                 i2l14216 49CA  
                                                 i2l14208 49A6  
                                                 i2l14162 4434  
                                                 i2l14138 43C6  
                                                 i2l14074 426E  
                                                 i2l14066 4248  
                                                 i2l14226 49F4  
                                                 i2l14306 8484  
                                                 i2l14330 78C0  
                                                 i2l14172 445C  
                                                 i2l14156 441E  
                                                 i2l14076 4276  
                                                 i2l14340 78EE  
                                                 i2l14166 4444  
                                                 i2l14086 42AA  
                                                 i2l14270 4ADE  
                                                 i2l14238 4A2E  
                                                 i2l14246 4A6C  
                                                 i2l16200 7482  
                                                 i2l14096 42D6  
                                                 i2l14176 4474  
                                                 i2l14282 4B1C  
                                                 i2l14194 496A  
                                                 i2l16300 6092  
                                                 i2l14294 4B58  
                                                 i2l13912 7D2E  
                                                 i2l16250 5FC8  
                                                 i2l16314 60C6  
                                                 i2l16242 5FB4  
                                                 i2l16180 8A88  
                                                 i2l16308 60AE  
                                                 i2l13870 7018  
                                                 i2l13862 6FDC  
                                                 i2l13918 7D4A  
                                                 i2l13872 7024  
                                                 i2l13882 7052  
                                                 i2l16266 6012  
                                                 i2l13892 7084  
                                                 i2l16276 603C  
                                                 i2l16286 605E  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 912C  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 7978  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 9102  
                                              _auxCounter 00F8  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 9218  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 80DC  
                                            _classic_data 0290  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 6D6C  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 019A  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 8C26  
          _rd1RegCompleteHandler@i2c1_master_example$F500 8BFA  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 8BFA  
          _rd2RegCompleteHandler@i2c1_master_example$F511 8BCE  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 8D02  
          _wr2RegCompleteHandler@i2c1_master_example$F523 8CD6  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 8BCE  
                               __end_of_I2C1_DO_SEND_STOP 91EC  
          _wr1RegCompleteHandler@i2c1_master_example$F517 8BA2  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 88CE  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 888E  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 8474  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 8B1E  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 3298  
                              __end_of_clearLearningValue 7BF8  
                                                 _NextHop 0185  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 3298  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 9144  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 8610  
                                                 ___awdiv 78F4  
                                                 ___lbdiv 898A  
                                                 ___lbmod 8D02  
                                                 ___lldiv 79FC  
                                              _readInputs 67AC  
                                         _controlVelocity 4B6C  
                                                 ___lwdiv 851E  
                                           _OpenFullOrder 8DA4  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 646A  
                           _setPositionInvertionInClosing 6342  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 90E2  
                                          getHopCode@data 0016  
                                                 _difTime 0191  
                                                 __pcinit 708E  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 9212  
                                                 __ptext0 5CA2  
                                                 __ptext1 1F94  
                                                 __ptext2 0F22  
                                                 __ptext3 29A4  
                                                 __ptext4 3CB4  
                                                 __ptext5 8F58  
                                                 __ptext6 3298  
                                                 __ptext7 7E4C  
                                                 __ptext8 920C  
                                                 __ptext9 8610  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A0  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 925E  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 9138  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 6D6C  
                           _setPositionInvertionInOpening 6C90  
                                                 _lastKey 0196  
                                              _readbutton 8008  
                                   _OSCILLATOR_Initialize 9068  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 80DC  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 8F8C  
                               __end_of_I2C1_MasterSetIrq 921E  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 8202  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 7642  
                                      _EUSART1_Initialize 7AFE  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 6AAE  
                                                 _sm_init 83C8  
                                          _BufferRF_12BIT 0189  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 85C0  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                           _OpenWalkOrder 7F2C  
                                    _zeroCrossingWaitTime 02ED  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 9204  
                                    end_of_initialization 713A  
                              __end_of_I2C1_MasterSendAck 9224  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 922A  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 9252  
                             _EUSART1_OverrunErrorHandler 02E5  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 7DD8  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 9110  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 8142  
                                               i2u1301_40 8D46  
                            __end_of_sm_get_current_state 90E2  
                                               i2u1412_40 4964  
                                               i2u1407_40 4432  
                                               i2u1431_40 4A92  
                                               i2u1432_40 4AA0  
                                               i2u1424_40 4A22  
                                               i2u1441_40 4B04  
                                               i2u1425_40 4A28  
                                               i2u1370_40 7032  
                                               i2u1371_40 7040  
                                               i2u1435_40 4ABE  
                                               i2u1419_40 49C4  
                                               i2u1444_40 4B28  
                                               i2u1460_40 58FC  
                                               i2u1452_45 849C  
                                               i2u1373_40 705E  
                                               i2u1445_40 4B30  
                                               i2u1437_40 4AD4  
                                               i2u1461_40 5970  
                                               i2u2164_48 003E  
                                               i2u1374_40 7072  
                                               i2u1382_40 7D44  
                                               i2u1454_40 787E  
                                               i2u1375_40 7080  
                                               i2u1447_40 4B50  
                            __end_of_I2C1_DO_SEND_RESTART 91F4  
                                               i2u1368_40 6FF6  
                                               i2u1456_40 78D0  
                                               i2u2167_48 0056  
                                               i2u1394_40 42EA  
                                               i2u1378_40 7D0E  
                                    __end_of_eusartparser 6F02  
                                               i2u1396_40 4314  
                                         _WWDT_TimerClear 8F04  
                                               i2u1820_48 7444  
                                               i2u1397_40 4324  
                                               i2u1389_40 426E  
                                 __end_of_I2C1_MasterOpen 903A  
                                               i2u1820_49 7456  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1398_40 4334  
                                               i2u1822_48 746E  
                                               i2u1840_40 6028  
                                               i2u1824_48 8E04  
                                   __end_of_ControlLights 3CB4  
                                               i2u1818_48 7418  
                                               i2u1818_49 742A  
                                               i2u1828_48 893C  
                                               i2u1852_48 60D4  
                                               i2u1837_40 6004  
                                 __end_of_I2C1_MasterStop 925E  
                                 __end_of_I2C1_Initialize 90D0  
                                         ___lldiv@divisor 0014  
                                   __end_of_ControlInputs 658E  
                   __end_of_EUSART1_SetRxInterruptHandler 9180  
                           _EUSART1_SetRxInterruptHandler 9176  
                                             _I2C1_Poller 90F2  
                                               i2u2879_47 9088  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 9242  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 926A  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 4700  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 9224  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 9022  
                             _I2C1_SetAddressNackCallback 900A  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 6BA8  
                                              _sm_restart 8784  
                        __end_of_ADCC_GetSingleConversion 9094  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D7  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 91FC  
                              _I2C1_DO_SEND_RESTART_WRITE 91F4  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 9162  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 890E  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 69B2  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 9144  
                                     _ControlCounterMoves 8316  
                            _controlLearning_stateMachine 02B0  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 8D56  
                                 __end_of_WWDT_Initialize 914E  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 86F6  
                                      ?_saveEnergyADCHist 0010  
                       __end_of_GetSecurityStateInClosing 7348  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 8A62  
                                       _controlLearnDigit 8A94  
                                 __end_of_controlVelocity 4D8A  
                                    ?_ControlCounterMoves 0001  
                                      _actionZone_Closing 3FAA  
                                    __end_of_RemoveSerial 7AFE  
                                          __end_of_HopCHK 786E  
                                      __end_of_CloseOrder 8DA4  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 8F58  
                               _ControlDecelarationFactor 8FDA  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 028E  
                       __end_of_GetSecurityStateInOpening 73EE  
                                       setRGB_ON@RGBLigth 0015  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 924A  
                                      _actionZone_Opening 44AC  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 9274  
                            _TMR2_DefaultInterruptHandler 9272  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 8474  
                                   __end_of_LoadManufCode 8E82  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 8DF0  
                                          _I2C1_DO_RX_ACK 91DC  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 8074  
                                            _InitSoftStop 86AC  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 7CEA  
                                          __end_of_memcpy 880C  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 7F2C  
                            __end_of_getCurrentComparator 57E8  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 67AC  
                                           _saveNewSerial 7E4C  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 925A  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 920C  
                                       _read_eusartparser 249C  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 708E  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 44AC  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 7E4C  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 8D7E  
                                 __end_of_WWDT_TimerClear 8F20  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 888E  
                                 __end_of_WWDT_SoftEnable 9246  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 8A30  
                                               _ReqResync 9052  
                               __end_of_controlLearnDigit 8AC4  
                                     ??_read_eusartparser 0019  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 3646  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 7144  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 91E4  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0195  
                                          _VerifyFollowMe 8E3C  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 8EC6  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00F8  
                                             __pdataBANK1 01FA  
                                             __pdataBANK2 02ED  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                       _controlMotorForce 494A  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 29A4  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 907E  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 82BA  
                                               _StopOrder 8EE8  
                                    _sm_get_current_state 90D0  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 91EC  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02E9  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 5B18  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 91BC  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 91B2  
                                           _GetMotorPower 6F02  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 71F8  
                           I2C1_SetAddressNackCallback@cb 0015  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E1  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FF  
                                               __pnvBANK2 02DB  
                                   _rd2RegCompleteHandler 8C52  
                                        _InitWalkAutoTime 9094  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 8FA6  
                             __end_of_SetSegmentValueMain 8F8C  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 7488  
                                  __end_of_VerifyFollowMe 8E60  
                                   _wr2RegCompleteHandler 8C26  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 8570  
                                          _I2C1_MasterFsm 84CA  
                              __end_of_checkNVM_VarSystem 54B2  
                        __end_of_TMR1_SetInterruptHandler 9162  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 90BC  
                                               __ptext101 7AFE  
                                                ?___lbdiv 0010  
                                               __ptext110 7C72  
                                               __ptext102 916C  
                                               __ptext111 3990  
                                               __ptext103 9176  
                                               __ptext200 9276  
                                               __ptext120 8D56  
                                               __ptext112 75B2  
                                               __ptext104 9180  
                                               __ptext201 8A62  
                                               __ptext121 68B4  
                                               __ptext113 9102  
                                               __ptext105 918A  
                                               __ptext202 73EE  
                                               __ptext130 900A  
                                               __ptext122 851E  
                                               __ptext114 894E  
                                               __ptext106 9194  
                                               __ptext203 9230  
                                               __ptext131 7978  
                                               __ptext123 564E  
                                               __ptext115 646A  
                                               __ptext107 85C0  
                                               __ptext204 9278  
                                               __ptext140 91CC  
                                               __ptext132 9022  
                                               __ptext124 8DCA  
                                               __ptext116 5E24  
                                               __ptext108 90E2  
                                               __ptext205 9236  
                                               __ptext141 91D4  
                                               __ptext133 91BC  
                                               __ptext125 6F02  
                                               __ptext117 873E  
                                               __ptext109 4700  
                                               __ptext206 8EC6  
                                               __ptext150 9110  
                                               __ptext142 91DC  
                                               __ptext134 8B76  
                                               __ptext126 8316  
                                               __ptext118 6AAE  
                                               __ptext207 0000  
                                               __ptext151 911E  
                                               __ptext143 91E4  
                                               __ptext135 90F2  
                                               __ptext127 89C4  
                                               __ptext119 76CE  
                                               __ptext160 924E  
                                               __ptext152 91B2  
                                               __ptext144 91EC  
                                               __ptext136 91C4  
                                               __ptext128 7DD8  
                                               __ptext161 9252  
                                               __ptext153 81A4  
                                               __ptext145 91F4  
                                               __ptext137 84CA  
                                               __ptext129 87C8  
                                               __ptext170 8C7E  
                                               __ptext162 9256  
                                               __ptext154 9218  
                                               __ptext146 91FC  
                                               __ptext138 865E  
                                               __ptext171 8CAA  
                                               __ptext163 888E  
                                               __ptext155 912C  
                                               __ptext147 91A8  
                                               __ptext139 919E  
                                               __ptext180 9266  
                                               __ptext172 8CD6  
                                               __ptext164 8BA2  
                                               __ptext156 9204  
                                               __ptext148 7BF8  
                                               __ptext181 926A  
                                               __ptext173 903A  
                                               __ptext165 8BCE  
                                               __ptext157 921E  
                                               __ptext149 775A  
                                               __ptext190 8474  
                                               __ptext182 922A  
                                               __ptext174 7F9A  
                                               __ptext166 8BFA  
                                               __ptext158 924A  
                                               __ptext191 907E  
                                               __ptext175 8FC0  
                                               __ptext167 88CE  
                                               __ptext159 9224  
                                               __ptext192 890E  
                                               __ptext184 5F98  
                                               __ptext176 925A  
                                               __ptext168 8C26  
                                               __ptext193 494A  
                                               __ptext185 786E  
                                               __ptext177 925E  
                                               __ptext169 8C52  
                                               __ptext194 7CEA  
                                               __ptext186 9138  
                                               __ptext178 9262  
                                               __ptext195 6FC8  
                                               __ptext187 57E8  
                                               __ptext179 8EA4  
                                               __ptext196 8F3C  
                                               __ptext188 8D2C  
                                               __ptext197 9274  
                                               __ptext189 9272  
                                               __ptext198 8DF0  
                                               __ptext199 4236  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 4B6C  
                                                ?___lwdiv 0010  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                 _I2C1_MasterWaitForEvent 91C4  
                                        _I2C1_MasterClose 926A  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 8FC0  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 9262  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 91BC  
                                      _clearLearningValue 7B7C  
                                      _write_eusartparser 2E74  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 0197  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 9236  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 9230  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 7D62  
                                            _eusartparser 6E38  
                                    _EUSART1_ErrorHandler 02E3  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 9194  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 9256  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0014  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 5B18  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 75B2  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 9246  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 7F9A  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 7BF8  
                                              _I2C1_DO_TX 775A  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 564E  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FE  
                                     _DecryptPacket_12BIT 7642  
                                              _I2C1_Close 8EA4  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 851E  
                            __end_of_I2C1_MasterGetRxData 924E  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 9138  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0187  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 921E  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 775A  
                               _I2C1_DO_SEND_RESTART_READ 91FC  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 3FAA  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 8DF0  
                                                _TMR1_ISR 890E  
                                                _TMR2_ISR 5F98  
                                           _getKeyPressed 8FF2  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 8FDA  
                                               _temppower 0190  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 9052  
                            _I2C1_SetDataCompleteCallback 903A  
                                      _I2C1_MasterStartRx 924E  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 9212  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 7DD8  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 89FC  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019C  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 86AC  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 71F8  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 8FA6  
                                            _RemoveSerial 7A7E  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 911E  
                                       _actionZone_Opened 4D8A  
                                           _I2C1_DO_RESET 919E  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C6  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 70A2  
                                               copy_data1 70DA  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 018F  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 6214  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 7EBC  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 8BA2  
                                            _NormalKeyGen 669E  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 9176  
                           _EUSART1_SetTxInterruptHandler 916C  
                                           _sm_send_event 8202  
                                     _keeloqDecryptPacket 4F78  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01EF  
                                   _I2C1_MasterDisableIrq 9266  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 3646  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 57E8  
                                _TMR1_SetInterruptHandler 9158  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 72A2  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 72A2  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DD  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 923C  
                             _EUSART1_DefaultErrorHandler 9236  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 90F2  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 4F78  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 7348  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0016  
                                                __ptext10 7520  
                                                __ptext11 7A7E  
                                                __ptext20 3646  
                                                __ptext12 7144  
                                                __ptext21 1886  
                                                __ptext13 8D02  
                                                __ptext30 658E  
                                                __ptext22 8074  
                                                __ptext14 78F4  
                                                __ptext31 86AC  
                                                __ptext23 83C8  
                                                __ptext15 8F72  
                                                __ptext40 8EE8  
                                                __ptext32 8FDA  
                                                __ptext24 8784  
                                                __ptext16 9212  
                                                __ptext41 72A2  
                                                __ptext33 4D8A  
                                                __ptext25 7B7C  
                                                __ptext17 8A94  
                                                __ptext50 9094  
                                                __ptext42 71F8  
                                                __ptext34 8E3C  
                                                __ptext26 8142  
                                                __ptext18 69B2  
                                                __ptext51 7348  
                                                __ptext43 7EBC  
                                                __ptext35 8D7E  
                                                __ptext27 44AC  
                                                __ptext19 79FC  
                                                __ptext60 4F78  
                                                __ptext52 8AF2  
                                                __ptext44 8DA4  
                                                __ptext36 3FAA  
                                                __ptext28 6C90  
                                                __ptext61 89FC  
                                                __ptext53 514A  
                                                __ptext45 8F8C  
                                                __ptext37 6342  
                                                __ptext29 4B6C  
                                                __ptext70 7642  
                                                __ptext62 8370  
                                                __ptext54 898A  
                                                __ptext46 7F2C  
                                                __ptext38 6BA8  
                                                __ptext71 54B2  
                                                __ptext63 669E  
                                                __ptext55 90A8  
                                                __ptext47 8202  
                                                __ptext39 841E  
                                                __ptext80 2E74  
                                                __ptext72 67AC  
                                                __ptext64 8E60  
                                                __ptext56 8008  
                                                __ptext48 90D0  
                                                __ptext81 249C  
                                                __ptext73 6214  
                                                __ptext65 6D6C  
                                                __ptext57 8570  
                                                __ptext49 825E  
                                                __ptext90 8B4A  
                                                __ptext82 8B1E  
                                                __ptext74 7D62  
                                                __ptext66 77E6  
                                                __ptext58 86F6  
                                                __ptext91 914E  
                                                __ptext83 884E  
                                                __ptext75 5312  
                                                __ptext67 60E6  
                                                __ptext59 5982  
                                                __ptext92 880C  
                                                __ptext84 8F04  
                                                __ptext76 5B18  
                                                __ptext68 9052  
                                                __ptext93 9158  
                                                __ptext85 9242  
                                                __ptext77 82BA  
                                                __ptext69 8A30  
                                                __ptext94 8E82  
                                                __ptext86 80DC  
                                                __ptext78 8FF2  
                                                __ptext95 9162  
                                                __ptext87 8FA6  
                                                __ptext79 6E38  
                                                __ptext96 8F20  
                                                __ptext88 8AC4  
                                                __ptext97 7488  
                                                __ptext89 9144  
                                                __ptext98 9068  
                                                __ptext99 9246  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E4  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7701 001B  
                                                _learn_st 0060  
                ?_rd1RegCompleteHandler@pic18f46k40$F7681 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7673 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7683 001B  
               ??_wr1RegCompleteHandler@pic18f46k40$F7675 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7693 0019  
               ??_wr2RegCompleteHandler@pic18f46k40$F7695 001B  
                ?_rd2RegCompleteHandler@pic18f46k40$F7687 0019  
               ??_rd2RegCompleteHandler@pic18f46k40$F7689 001B  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7699 0019  
                                      __end_of_readInputs 68B4  
                                _I2C1_CallbackReturnReset 9252  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 9278  
                            _TMR0_DefaultInterruptHandler 9276  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 9230  
                            __end_of_I2C1_DO_RX_NACK_STOP 91DC  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 5E24  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 8074  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 9218  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 8B1E  
                              _SetSegmentValueIntermitent 8AF2  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 91D4  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 6214  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 8FC0  
                           __end_of_I2C1_DO_SEND_ADR_READ 912C  
                             _EUSART1_FramingErrorHandler 02E7  
                                            _I2C1_DO_IDLE 91B2  
                                     _EUSART1_Receive_ISR 73EE  
                                            _I2C1_DO_RCEN 91A8  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 920C  
                             __end_of_I2C1_MasterSendNack 922A  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 6C90  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0193  
                                __end_of_InitWalkAutoTime 90A8  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 018D  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 924A  
                                   _I2C1_MasterSendTxData 9204  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 3990  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 8370  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 926E  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 82BA  
                                 readRFButtons@typeRemote 0199  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 87C8  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 5F98  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 9266  
                                __end_of_I2C1_MasterWrite 91C4  
                                   __end_of_write_package 8B4A  
                                             _tempCounter 01FA  
                  __end_of_EUSART1_SetOverrunErrorHandler 918A  
                          _EUSART1_SetOverrunErrorHandler 9180  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 9256  
                            __end_of_EUSART1_Transmit_ISR 8A94  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 3990  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 646A  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 865E  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 6342  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 83C8  
                           _keeloq_classic_decrypt_packet 8370  
                                   __end_of_OpenFullOrder 8DCA  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 019B  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 7520  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 8008  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 8B76  
                                         _TMR0_Initialize 8E82  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 5312  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 7F9A  
                                            _sumEnergyADC 76CE  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 7520  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 8CAA  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 81A4  
                                        sm_init@hist_mode 0016  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 8CD6  
                                   _TMR2_InterruptHandler 02DB  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 880C  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 1F94  
