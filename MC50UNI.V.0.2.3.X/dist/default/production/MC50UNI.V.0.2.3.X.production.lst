

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jul 18 11:36:03 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1,inline
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,inline
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1,inline
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,inline
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,inline
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1,inline
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1,inline
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1,inline
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   234                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   235                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   236                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   237  0000                     
   238                           ; Version 2.36
   239                           ; Generated 28/01/2022 GMT
   240                           ; 
   241                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   242                           ; All rights reserved.
   243                           ; 
   244                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   245                           ; 
   246                           ; Redistribution and use in source and binary forms, with or without modification, are
   247                           ; permitted provided that the following conditions are met:
   248                           ; 
   249                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   250                           ;        conditions and the following disclaimer.
   251                           ; 
   252                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   253                           ;        of conditions and the following disclaimer in the documentation and/or other
   254                           ;        materials provided with the distribution. Publication is not required when
   255                           ;        this file is used in an embedded application.
   256                           ; 
   257                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   258                           ;        software without specific prior written permission.
   259                           ; 
   260                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   261                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   262                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   263                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   264                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   265                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   266                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   267                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   268                           ; 
   269                           ; 
   270                           ; Code-generator required, PIC18F46K40 Definitions
   271                           ; 
   272                           ; SFR Addresses
   273  0000                     
   274                           	psect	idataBANK0
   275  00934C                     __pidataBANK0:
   276                           	callstack 0
   277                           
   278                           ;initializer for _auxCounter
   279  00934C  03E8               	dw	1000
   280                           
   281                           	psect	idataBANK1
   282  00931A                     __pidataBANK1:
   283                           	callstack 0
   284                           
   285                           ;initializer for _tempCounter
   286  00931A  3DDD               	dw	15837
   287  00931C  000F               	dw	15
   288                           
   289                           ;initializer for _firstselectflag
   290  00931E  01                 	db	1
   291                           
   292                           	psect	idataBANK2
   293  00934E                     __pidataBANK2:
   294                           	callstack 0
   295                           
   296                           ;initializer for _zeroCrossingWaitTime
   297  00934E  19                 	db	25
   298  00934F  19                 	db	25
   299                           
   300                           	psect	idataBANK3
   301  008EF2                     __pidataBANK3:
   302                           	callstack 0
   303                           
   304                           ;initializer for _DispTable
   305  008EF2  6F                 	db	111
   306  008EF3  21                 	db	33
   307  008EF4  76                 	db	118
   308  008EF5  73                 	db	115
   309  008EF6  39                 	db	57
   310  008EF7  5B                 	db	91
   311  008EF8  5F                 	db	95
   312  008EF9  61                 	db	97
   313  008EFA  7F                 	db	127
   314  008EFB  7B                 	db	123
   315  008EFC  7D                 	db	125
   316  008EFD  7F                 	db	127
   317  008EFE  4E                 	db	78
   318  008EFF  37                 	db	55
   319  008F00  5E                 	db	94
   320  008F01  5C                 	db	92
   321  008F02  7C                 	db	124
   322  008F03  3D                 	db	61
   323  008F04  0E                 	db	14
   324  008F05  2F                 	db	47
   325  008F06  14                 	db	20
   326  008F07  1E                 	db	30
   327  008F08  07                 	db	7
   328  008F09  45                 	db	69
   329  008F0A  10                 	db	16
   330  008F0B  0C                 	db	12
   331  008F0C  40                 	db	64
   332  008F0D  20                 	db	32
   333  008F0E  01                 	db	1
   334  008F0F  02                 	db	2
   335  008F10  04                 	db	4
   336  008F11  08                 	db	8
   337  008F12  00                 	db	0
   338  008F13  3B                 	db	59
   339  008F14  1F                 	db	31
   340  008F15  16                 	db	22
   341  008F16  17                 	db	23
   342                           
   343                           	psect	smallconst
   344  000F00                     __psmallconst:
   345                           	callstack 0
   346  000F00  00                 	db	0
   347  000F01                     _i2c1_fsmStateTable:
   348                           	callstack 0
   349  000F01  90                 	db	low _I2C1_DO_IDLE
   350  000F02  92                 	db	high _I2C1_DO_IDLE
   351  000F03  FC                 	db	low _I2C1_DO_SEND_ADR_READ
   352  000F04  91                 	db	high _I2C1_DO_SEND_ADR_READ
   353  000F05  EE                 	db	low _I2C1_DO_SEND_ADR_WRITE
   354  000F06  91                 	db	high _I2C1_DO_SEND_ADR_WRITE
   355  000F07  34                 	db	low _I2C1_DO_TX
   356  000F08  78                 	db	high _I2C1_DO_TX
   357  000F09  D4                 	db	low _I2C1_DO_RX
   358  000F0A  7C                 	db	high _I2C1_DO_RX
   359  000F0B  86                 	db	low _I2C1_DO_RCEN
   360  000F0C  92                 	db	high _I2C1_DO_RCEN
   361  000F0D  80                 	db	low _I2C1_DO_TX_EMPTY
   362  000F0E  82                 	db	high _I2C1_DO_TX_EMPTY
   363  000F0F  DA                 	db	low _I2C1_DO_SEND_RESTART_READ
   364  000F10  92                 	db	high _I2C1_DO_SEND_RESTART_READ
   365  000F11  D2                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   366  000F12  92                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   367  000F13  CA                 	db	low _I2C1_DO_SEND_RESTART
   368  000F14  92                 	db	high _I2C1_DO_SEND_RESTART
   369  000F15  C2                 	db	low _I2C1_DO_SEND_STOP
   370  000F16  92                 	db	high _I2C1_DO_SEND_STOP
   371  000F17  BA                 	db	low _I2C1_DO_RX_ACK
   372  000F18  92                 	db	high _I2C1_DO_RX_ACK
   373  000F19  B2                 	db	low _I2C1_DO_RX_NACK_STOP
   374  000F1A  92                 	db	high _I2C1_DO_RX_NACK_STOP
   375  000F1B  AA                 	db	low _I2C1_DO_RX_NACK_RESTART
   376  000F1C  92                 	db	high _I2C1_DO_RX_NACK_RESTART
   377  000F1D  7C                 	db	low _I2C1_DO_RESET
   378  000F1E  92                 	db	high _I2C1_DO_RESET
   379  000F1F  3A                 	db	low _I2C1_DO_ADDRESS_NACK
   380  000F20  87                 	db	high _I2C1_DO_ADDRESS_NACK
   381  000F21                     __end_of_i2c1_fsmStateTable:
   382                           	callstack 0
   383  0000                     _T2CON	set	4029
   384  0000                     _T1CON	set	4047
   385  0000                     _T1CLK	set	4050
   386  0000                     _T1GATE	set	4049
   387  0000                     _T0CON0	set	4053
   388  0000                     _INLVLD	set	3874
   389  0000                     _SLRCOND	set	3875
   390  0000                     _ODCOND	set	3876
   391  0000                     _WPUD	set	3877
   392  0000                     _TRISD	set	3979
   393  0000                     _TRISC	set	3978
   394  0000                     _TRISB	set	3977
   395  0000                     _TRISA	set	3976
   396  0000                     _TRISE	set	3980
   397  0000                     _LATC	set	3973
   398  0000                     _LATB	set	3972
   399  0000                     _OSCTUNE	set	3805
   400  0000                     _OSCFRQ	set	3806
   401  0000                     _ADERRL	set	3950
   402  0000                     _ADERRH	set	3951
   403  0000                     _ADPREVL	set	3937
   404  0000                     _ADPREVH	set	3938
   405  0000                     _ADFLTRL	set	3954
   406  0000                     _ADFLTRH	set	3955
   407  0000                     _ADACCL	set	3952
   408  0000                     _ADACCH	set	3953
   409  0000                     _ADCNT	set	3943
   410  0000                     _ADRESL	set	3939
   411  0000                     _ADRESH	set	3940
   412  0000                     _ADACQ	set	3932
   413  0000                     _ADCON0	set	3936
   414  0000                     _ADCLK	set	3927
   415  0000                     _ADSTAT	set	3941
   416  0000                     _ADCON3	set	3931
   417  0000                     _ADCON2	set	3930
   418  0000                     _ADPRE	set	3934
   419  0000                     _ADSTPTH	set	3945
   420  0000                     _ADUTHH	set	3949
   421  0000                     _ADUTHL	set	3948
   422  0000                     _ADLTHH	set	3947
   423  0000                     _SP1BRGH	set	3996
   424  0000                     _TX1STA	set	3998
   425  000F21  00                 	db	0	; dummy byte at the end
   426  0000                     
   427                           	psect	nvBANK1
   428  0001FE                     __pnvBANK1:
   429                           	callstack 0
   430  0001FE                     _eusart1TxBufferRemaining:
   431                           	callstack 0
   432  0001FE                     	ds	1
   433                           
   434                           	psect	nvBANK2
   435  0002DD                     __pnvBANK2:
   436                           	callstack 0
   437  0002DD                     _TMR2_InterruptHandler:
   438                           	callstack 0
   439  0002DD                     	ds	2
   440  0002DF                     _TMR1_InterruptHandler:
   441                           	callstack 0
   442  0002DF                     	ds	2
   443  0002E1                     _timer1ReloadVal:
   444                           	callstack 0
   445  0002E1                     	ds	2
   446  0002E3                     _TMR0_InterruptHandler:
   447                           	callstack 0
   448  0002E3                     	ds	2
   449  0002E5                     _EUSART1_ErrorHandler:
   450                           	callstack 0
   451  0002E5                     	ds	2
   452  0002E7                     _EUSART1_OverrunErrorHandler:
   453                           	callstack 0
   454  0002E7                     	ds	2
   455  0002E9                     _EUSART1_FramingErrorHandler:
   456                           	callstack 0
   457  0002E9                     	ds	2
   458  0002EB                     _EUSART1_RxDefaultInterruptHandler:
   459                           	callstack 0
   460  0002EB                     	ds	2
   461  0002ED                     _EUSART1_TxDefaultInterruptHandler:
   462                           	callstack 0
   463  0002ED                     	ds	2
   464  0000                     _WDTCON0bits	set	3794
   465  0000                     _TMR0IE	set	30229
   466  0000                     _TMR0IF	set	30293
   467  0000                     _LATEbits	set	3975
   468  0000                     _LATDbits	set	3974
   469  0000                     _LATAbits	set	3971
   470  0000                     _LATCbits	set	3973
   471  0000                     _PORTB	set	3982
   472  0000                     _T1CONbits	set	4047
   473  0000                     _SSP1CON2bits	set	3991
   474  0000                     _SSP1CON1bits	set	3990
   475  0000                     _ADCON0bits	set	3936
   476  0000                     _RC1STAbits	set	3997
   477  0000                     _GIE	set	32663
   478  0000                     _RX1PPS	set	3765
   479  0000                     _SSP1CLKPPS	set	3767
   480  0000                     _PIE0bits	set	3778
   481  0000                     _PIE3bits	set	3781
   482  0000                     _PIE4bits	set	3782
   483  0000                     _PIR0bits	set	3786
   484  0000                     _PIR3bits	set	3789
   485  0000                     _ADACT	set	3926
   486  0000                     _ADREF	set	3928
   487  0000                     _ADCON1	set	3929
   488  0000                     _ADCAP	set	3933
   489  0000                     _ADPCH	set	3935
   490  0000                     _ADRPT	set	3942
   491  0000                     _ADSTPTL	set	3944
   492  0000                     _ADLTHL	set	3946
   493  0000                     _RC1REG	set	3993
   494  0000                     _TX1REG	set	3994
   495  0000                     _SP1BRGL	set	3995
   496  0000                     _RC1STA	set	3997
   497  0000                     _BAUD1CON	set	3999
   498  0000                     _T2TMR	set	4027
   499  0000                     _T2PR	set	4028
   500  0000                     _T2HLT	set	4030
   501  0000                     _T2CLKCON	set	4031
   502  0000                     _TMR1L	set	4045
   503  0000                     _TMR1H	set	4046
   504  0000                     _T1GCON	set	4048
   505  0000                     _TMR0L	set	4051
   506  0000                     _TMR0H	set	4052
   507  0000                     _T0CON1	set	4054
   508  0000                     _PCON0bits	set	4055
   509  0000                     _INTCONbits	set	4082
   510  0000                     _LATA	set	3971
   511  0000                     _LATD	set	3974
   512  0000                     _LATE	set	3975
   513  0000                     _SSP1BUF	set	3986
   514  0000                     _SSP1ADD	set	3987
   515  0000                     _SSP1STAT	set	3989
   516  0000                     _SSP1CON2	set	3991
   517  0000                     _SSP1CON1	set	3990
   518  0000                     _WDTCON0	set	3794
   519  0000                     _OSCCON1	set	3800
   520  0000                     _PIR4bits	set	3790
   521  0000                     _OSCCON3	set	3802
   522  0000                     _OSCEN	set	3804
   523  0000                     _PMD0	set	3809
   524  0000                     _RC3PPS	set	3834
   525  0000                     _INLVLA	set	3853
   526  0000                     _SLRCONA	set	3854
   527  0000                     _ODCONA	set	3855
   528  0000                     _WPUA	set	3856
   529  0000                     _ANSELA	set	3857
   530  0000                     _ANSELB	set	3865
   531  0000                     _ANSELC	set	3873
   532  0000                     _ANSELD	set	3878
   533  0000                     _PMD5	set	3814
   534  0000                     _PMD4	set	3813
   535  0000                     _PMD3	set	3812
   536  0000                     _PMD2	set	3811
   537  0000                     _PMD1	set	3810
   538  0000                     _WDTCON1	set	3795
   539  0000                     _PORTEbits	set	3985
   540  0000                     _PORTBbits	set	3982
   541  0000                     _PORTAbits	set	3981
   542  0000                     _INLVLE	set	3882
   543  0000                     _SLRCONE	set	3883
   544  0000                     _ODCONE	set	3884
   545  0000                     _WPUE	set	3885
   546  0000                     _ANSELE	set	3886
   547  0000                     _INLVLC	set	3869
   548  0000                     _SLRCONC	set	3870
   549  0000                     _ODCONC	set	3871
   550  0000                     _WPUC	set	3872
   551  0000                     _INLVLB	set	3861
   552  0000                     _SLRCONB	set	3862
   553  0000                     _ODCONB	set	3863
   554  0000                     _WPUB	set	3864
   555  0000                     _IOCBN3	set	30875
   556  0000                     _IOCBP3	set	30883
   557  0000                     _SSP1DATPPS	set	3768
   558  0000                     _RC7PPS	set	3838
   559  0000                     _RC4PPS	set	3835
   560  0000                     _T2RST	set	4032
   561                           
   562                           ; #config settings
   563                           
   564                           	psect	cinit
   565  007168                     __pcinit:
   566                           	callstack 0
   567  007168                     start_initialization:
   568                           	callstack 0
   569  007168                     __initialization:
   570                           	callstack 0
   571                           
   572                           ; Initialize objects allocated to BANK3 (37 bytes)
   573                           ; load TBLPTR registers with __pidataBANK3
   574  007168  0EF2               	movlw	low __pidataBANK3
   575  00716A  6EF6               	movwf	tblptrl,c
   576  00716C  0E8E               	movlw	high __pidataBANK3
   577  00716E  6EF7               	movwf	tblptrh,c
   578  007170  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   579  007172  6EF8               	movwf	tblptru,c
   580  007174  EE03  F0D2         	lfsr	0,__pdataBANK3
   581  007178  EE10 F025          	lfsr	1,37
   582  00717C                     copy_data0:
   583  00717C  0009               	tblrd		*+
   584  00717E  CFF5 FFEE          	movff	tablat,postinc0
   585  007182  50E5               	movf	postdec1,w,c
   586  007184  50E1               	movf	fsr1l,w,c
   587  007186  E1FA               	bnz	copy_data0
   588                           
   589                           ; Initialize objects allocated to BANK2 (2 bytes)
   590                           ; load TBLPTR registers with __pidataBANK2
   591  007188  0E4E               	movlw	low __pidataBANK2
   592  00718A  6EF6               	movwf	tblptrl,c
   593  00718C  0E93               	movlw	high __pidataBANK2
   594  00718E  6EF7               	movwf	tblptrh,c
   595  007190  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   596  007192  6EF8               	movwf	tblptru,c
   597  007194  0009               	tblrd		*+	;fetch initializer
   598  007196  CFF5 F2EF          	movff	tablat,__pdataBANK2
   599  00719A  0009               	tblrd		*+	;fetch initializer
   600  00719C  CFF5 F2F0          	movff	tablat,__pdataBANK2+1
   601                           
   602                           ; Initialize objects allocated to BANK1 (5 bytes)
   603                           ; load TBLPTR registers with __pidataBANK1
   604  0071A0  0E1A               	movlw	low __pidataBANK1
   605  0071A2  6EF6               	movwf	tblptrl,c
   606  0071A4  0E93               	movlw	high __pidataBANK1
   607  0071A6  6EF7               	movwf	tblptrh,c
   608  0071A8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   609  0071AA  6EF8               	movwf	tblptru,c
   610  0071AC  EE01  F0F9         	lfsr	0,__pdataBANK1
   611  0071B0  EE10 F005          	lfsr	1,5
   612  0071B4                     copy_data1:
   613  0071B4  0009               	tblrd		*+
   614  0071B6  CFF5 FFEE          	movff	tablat,postinc0
   615  0071BA  50E5               	movf	postdec1,w,c
   616  0071BC  50E1               	movf	fsr1l,w,c
   617  0071BE  E1FA               	bnz	copy_data1
   618                           
   619                           ; Initialize objects allocated to BANK0 (2 bytes)
   620                           ; load TBLPTR registers with __pidataBANK0
   621  0071C0  0E4C               	movlw	low __pidataBANK0
   622  0071C2  6EF6               	movwf	tblptrl,c
   623  0071C4  0E93               	movlw	high __pidataBANK0
   624  0071C6  6EF7               	movwf	tblptrh,c
   625  0071C8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   626  0071CA  6EF8               	movwf	tblptru,c
   627  0071CC  0009               	tblrd		*+	;fetch initializer
   628  0071CE  CFF5 F0F8          	movff	tablat,__pdataBANK0
   629  0071D2  0009               	tblrd		*+	;fetch initializer
   630  0071D4  CFF5 F0F9          	movff	tablat,__pdataBANK0+1
   631                           
   632                           ; Clear objects allocated to BANK3 (210 bytes)
   633  0071D8  EE03  F000         	lfsr	0,__pbssBANK3
   634  0071DC  0ED2               	movlw	210
   635  0071DE                     clear_0:
   636  0071DE  6AEE               	clrf	postinc0,c
   637  0071E0  06E8               	decf	wreg,f,c
   638  0071E2  E1FD               	bnz	clear_0
   639                           
   640                           ; Clear objects allocated to BANK2 (221 bytes)
   641  0071E4  EE02  F000         	lfsr	0,__pbssBANK2
   642  0071E8  0EDD               	movlw	221
   643  0071EA                     clear_1:
   644  0071EA  6AEE               	clrf	postinc0,c
   645  0071EC  06E8               	decf	wreg,f,c
   646  0071EE  E1FD               	bnz	clear_1
   647                           
   648                           ; Clear objects allocated to BANK1 (249 bytes)
   649  0071F0  EE01  F000         	lfsr	0,__pbssBANK1
   650  0071F4  0EF9               	movlw	249
   651  0071F6                     clear_2:
   652  0071F6  6AEE               	clrf	postinc0,c
   653  0071F8  06E8               	decf	wreg,f,c
   654  0071FA  E1FD               	bnz	clear_2
   655                           
   656                           ; Clear objects allocated to BANK0 (120 bytes)
   657  0071FC  EE00  F060         	lfsr	0,__pbssBANK0
   658  007200  0E78               	movlw	120
   659  007202                     clear_3:
   660  007202  6AEE               	clrf	postinc0,c
   661  007204  06E8               	decf	wreg,f,c
   662  007206  E1FD               	bnz	clear_3
   663                           
   664                           ; Clear objects allocated to COMRAM (21 bytes)
   665  007208  EE00  F03B         	lfsr	0,__pbssCOMRAM
   666  00720C  0E15               	movlw	21
   667  00720E                     clear_4:
   668  00720E  6AEE               	clrf	postinc0,c
   669  007210  06E8               	decf	wreg,f,c
   670  007212  E1FD               	bnz	clear_4
   671  007214                     end_of_initialization:
   672                           	callstack 0
   673  007214                     __end_of__initialization:
   674                           	callstack 0
   675  007214  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   676  007216  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   677  007218  0100               	movlb	0
   678  00721A  EF78  F02E         	goto	_main	;jump to C main() function
   679                           
   680                           	psect	bssCOMRAM
   681  00003B                     __pbssCOMRAM:
   682                           	callstack 0
   683  00003B                     _rfCMD:
   684                           	callstack 0
   685  00003B                     	ds	11
   686  000046                     _edit_Param:
   687                           	callstack 0
   688  000046                     	ds	6
   689  00004C                     _button_struct:
   690                           	callstack 0
   691  00004C                     	ds	4
   692                           
   693                           	psect	bssBANK0
   694  000060                     __pbssBANK0:
   695                           	callstack 0
   696  000060                     _learn_st:
   697                           	callstack 0
   698  000060                     	ds	18
   699  000072                     _dispStruct:
   700                           	callstack 0
   701  000072                     	ds	6
   702  000078                     _brakeElectric_st:
   703                           	callstack 0
   704  000078                     	ds	2
   705  00007A                     _pointSync:
   706                           	callstack 0
   707  00007A                     	ds	2
   708  00007C                     _Hop:
   709                           	callstack 0
   710  00007C                     	ds	2
   711  00007E                     _RFcount:
   712                           	callstack 0
   713  00007E                     	ds	2
   714  000080                     _temp:
   715                           	callstack 0
   716  000080                     	ds	1
   717  000081                     _control_limit_switch:
   718                           	callstack 0
   719  000081                     	ds	1
   720  000082                     _fullmotorPower:
   721                           	callstack 0
   722  000082                     	ds	1
   723  000083                     _stateMotor:
   724                           	callstack 0
   725  000083                     	ds	1
   726  000084                     _zeroCrossingWaitTimeIdx:
   727                           	callstack 0
   728  000084                     	ds	1
   729  000085                     _programmer_enable:
   730                           	callstack 0
   731  000085                     	ds	1
   732  000086                     readbutton@key1:
   733                           	callstack 0
   734  000086                     	ds	1
   735  000087                     readRFButtons@keyType:
   736                           	callstack 0
   737  000087                     	ds	1
   738  000088                     readRFButtons@key1:
   739                           	callstack 0
   740  000088                     	ds	1
   741  000089                     _RFBit:
   742                           	callstack 0
   743  000089                     	ds	1
   744  00008A                     _RFFull_12BIT:
   745                           	callstack 0
   746  00008A                     	ds	1
   747  00008B                     _RFFull:
   748                           	callstack 0
   749  00008B                     	ds	1
   750  00008C                     _BitCount:
   751                           	callstack 0
   752  00008C                     	ds	1
   753  00008D                     _Bptr:
   754                           	callstack 0
   755  00008D                     	ds	1
   756  00008E                     _numberOfErrorCurrent:
   757                           	callstack 0
   758  00008E                     	ds	1
   759  00008F                     _idxAdcZeroAquisition:
   760                           	callstack 0
   761  00008F                     	ds	1
   762  000090                     _idxSaveEnergyADCHist:
   763                           	callstack 0
   764  000090                     	ds	1
   765  000091                     _idxAdcAquisition:
   766                           	callstack 0
   767  000091                     	ds	1
   768  000092                     _Counterchoose:
   769                           	callstack 0
   770  000092                     	ds	1
   771  000093                     _eusart1RxCount:
   772                           	callstack 0
   773  000093                     	ds	1
   774  000094                     _eusart1RxTail:
   775                           	callstack 0
   776  000094                     	ds	1
   777  000095                     _eusart1RxHead:
   778                           	callstack 0
   779  000095                     	ds	1
   780  000096                     _eusart1TxTail:
   781                           	callstack 0
   782  000096                     	ds	1
   783  000097                     _eusart1TxHead:
   784                           	callstack 0
   785  000097                     	ds	1
   786  000098                     _var_sys_NVM:
   787                           	callstack 0
   788  000098                     	ds	64
   789                           
   790                           	psect	dataBANK0
   791  0000F8                     __pdataBANK0:
   792                           	callstack 0
   793  0000F8                     _auxCounter:
   794                           	callstack 0
   795  0000F8                     	ds	2
   796                           
   797                           	psect	bssBANK1
   798  000100                     __pbssBANK1:
   799                           	callstack 0
   800  000100                     _var_sys:
   801                           	callstack 0
   802  000100                     	ds	81
   803  000151                     _menu_st:
   804                           	callstack 0
   805  000151                     	ds	25
   806  00016A                     _security:
   807                           	callstack 0
   808  00016A                     	ds	11
   809  000175                     _fimdecurso:
   810                           	callstack 0
   811  000175                     	ds	6
   812  00017B                     _powerControl_st:
   813                           	callstack 0
   814  00017B                     	ds	6
   815  000181                     readRFButtons@serial:
   816                           	callstack 0
   817  000181                     	ds	4
   818  000185                     readRFButtons@rollingCode:
   819                           	callstack 0
   820  000185                     	ds	2
   821  000187                     _BufferRF_12BIT:
   822                           	callstack 0
   823  000187                     	ds	2
   824  000189                     _erroranterior:
   825                           	callstack 0
   826  000189                     	ds	2
   827  00018B                     _aux_in_auto_close:
   828                           	callstack 0
   829  00018B                     	ds	1
   830  00018C                     _aux_i:
   831                           	callstack 0
   832  00018C                     	ds	1
   833  00018D                     _Abertura_pedonal:
   834                           	callstack 0
   835  00018D                     	ds	1
   836  00018E                     _temppower:
   837                           	callstack 0
   838  00018E                     	ds	1
   839  00018F                     _difTime:
   840                           	callstack 0
   841  00018F                     	ds	1
   842  000190                     _StateTRIAC:
   843                           	callstack 0
   844  000190                     	ds	1
   845  000191                     _waitZeroPeak:
   846                           	callstack 0
   847  000191                     	ds	1
   848  000192                     _zeroCrossing:
   849                           	callstack 0
   850  000192                     	ds	1
   851  000193                     _zeroCrossingLength:
   852                           	callstack 0
   853  000193                     	ds	1
   854  000194                     _lastKey:
   855                           	callstack 0
   856  000194                     	ds	1
   857  000195                     _F2Chance:
   858                           	callstack 0
   859  000195                     	ds	1
   860  000196                     readbutton@key2:
   861                           	callstack 0
   862  000196                     	ds	1
   863  000197                     readRFButtons@typeRemote:
   864                           	callstack 0
   865  000197                     	ds	1
   866  000198                     _RFstate:
   867                           	callstack 0
   868  000198                     	ds	1
   869  000199                     _eusart1RxLastError:
   870                           	callstack 0
   871  000199                     	ds	1
   872  00019A                     _ts_system:
   873                           	callstack 0
   874  00019A                     	ds	72
   875  0001E2                     _controlGate_stateMachine:
   876                           	callstack 0
   877  0001E2                     	ds	11
   878  0001ED                     _main_stateMachine:
   879                           	callstack 0
   880  0001ED                     	ds	11
   881  0001F8                     setValueToEdit@value:
   882                           	callstack 0
   883  0001F8                     	ds	1
   884                           
   885                           	psect	dataBANK1
   886  0001F9                     __pdataBANK1:
   887                           	callstack 0
   888  0001F9                     _tempCounter:
   889                           	callstack 0
   890  0001F9                     	ds	4
   891  0001FD                     _firstselectflag:
   892                           	callstack 0
   893  0001FD                     	ds	1
   894                           
   895                           	psect	bssBANK2
   896  000200                     __pbssBANK2:
   897                           	callstack 0
   898  000200                     _ADC_array:
   899                           	callstack 0
   900  000200                     	ds	60
   901  00023C                     _I2C1_Status:
   902                           	callstack 0
   903  00023C                     	ds	36
   904  000260                     _SumEnergyADCHist_array:
   905                           	callstack 0
   906  000260                     	ds	20
   907  000274                     _eusart1RxStatusBuffer:
   908                           	callstack 0
   909  000274                     	ds	8
   910  00027C                     _eusart1RxBuffer:
   911                           	callstack 0
   912  00027C                     	ds	8
   913  000284                     _eusart1TxBuffer:
   914                           	callstack 0
   915  000284                     	ds	8
   916  00028C                     _EHop:
   917                           	callstack 0
   918  00028C                     	ds	2
   919  00028E                     _NextHop:
   920                           	callstack 0
   921  00028E                     	ds	2
   922  000290                     _timer0ReloadVal16bit:
   923                           	callstack 0
   924  000290                     	ds	2
   925  000292                     _classic_data:
   926                           	callstack 0
   927  000292                     	ds	16
   928  0002A2                     _memoryTEMP:
   929                           	callstack 0
   930  0002A2                     	ds	16
   931  0002B2                     _controlLearning_stateMachine:
   932                           	callstack 0
   933  0002B2                     	ds	11
   934  0002BD                     _menuConfiguration_stateMachine:
   935                           	callstack 0
   936  0002BD                     	ds	11
   937  0002C8                     _BufferRF:
   938                           	callstack 0
   939  0002C8                     	ds	9
   940  0002D1                     _DKEY:
   941                           	callstack 0
   942  0002D1                     	ds	8
   943  0002D9                     NormalKeyGen@SEED:
   944                           	callstack 0
   945  0002D9                     	ds	4
   946                           
   947                           	psect	dataBANK2
   948  0002EF                     __pdataBANK2:
   949                           	callstack 0
   950  0002EF                     _zeroCrossingWaitTime:
   951                           	callstack 0
   952  0002EF                     	ds	2
   953                           
   954                           	psect	bssBANK3
   955  000300                     __pbssBANK3:
   956                           	callstack 0
   957  000300                     _listSyncValues:
   958                           	callstack 0
   959  000300                     	ds	150
   960  000396                     _ADC_zero_array:
   961                           	callstack 0
   962  000396                     	ds	60
   963                           
   964                           	psect	dataBANK3
   965  0003D2                     __pdataBANK3:
   966                           	callstack 0
   967  0003D2                     _DispTable:
   968                           	callstack 0
   969  0003D2                     	ds	37
   970                           
   971                           	psect	cstackBANK0
   972  0000D8                     __pcstackBANK0:
   973                           	callstack 0
   974  0000D8                     ??_keeloq_classic_decrypt_packet:
   975  0000D8                     ??_setPositionInvertionInClosing:
   976  0000D8                     ??_validateRemoteSerialNumber:
   977  0000D8                     ??_RemoveSerial:
   978  0000D8                     SaveNVM_VarSystem@page:
   979                           	callstack 0
   980  0000D8                     getStateOpenPosition@state:
   981                           	callstack 0
   982  0000D8                     saveNewSerial@tempSerial:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x0
   986  0000D8                     	ds	1
   987  0000D9                     getStateOpenPosition@stateMotor:
   988                           	callstack 0
   989  0000D9                     SaveNVM_VarSystem@tempAdd:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x1
   993  0000D9                     	ds	1
   994  0000DA                     ??_controlVelocity:
   995  0000DA                     RemoveSerial@cmdType:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x2
   999  0000DA                     	ds	1
  1000  0000DB                     SaveNVM_VarSystem@point:
  1001                           	callstack 0
  1002  0000DB                     RemoveSerial@tempSerial:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x3
  1006  0000DB                     	ds	1
  1007  0000DC                     ??_eusartparser:
  1008  0000DC                     ??_setValueToEdit:
  1009  0000DC                     saveNewSerial@position:
  1010                           	callstack 0
  1011  0000DC                     sm_execute_ControlLearning@psm:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x4
  1015  0000DC                     	ds	1
  1016  0000DD                     ??_saveNewSerial:
  1017                           
  1018                           ; 1 bytes @ 0x5
  1019  0000DD                     	ds	1
  1020  0000DE                     ??_sm_execute_ControlLearning:
  1021  0000DE                     setValueToEdit@menuType:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x6
  1025  0000DE                     	ds	1
  1026  0000DF                     setValueToEdit@posindex:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x7
  1030  0000DF                     	ds	1
  1031  0000E0                     ??_controlSelectRemote:
  1032  0000E0                     setValueToEdit@haveValueToEdit:
  1033                           	callstack 0
  1034  0000E0                     keeloqDecryptPacket@data:
  1035                           	callstack 0
  1036  0000E0                     DecryptPacket_12BIT@data:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x8
  1040  0000E0                     	ds	1
  1041  0000E1                     controlSelectRemote@validSerial:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x9
  1045  0000E1                     	ds	1
  1046  0000E2                     controlSelectRemote@pos:
  1047                           	callstack 0
  1048  0000E2                     keeloqDecryptPacket@classic_data:
  1049                           	callstack 0
  1050  0000E2                     DecryptPacket_12BIT@classic_data:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0xA
  1054  0000E2                     	ds	1
  1055  0000E3                     controlSelectRemote@typeRemote:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0xB
  1059  0000E3                     	ds	1
  1060  0000E4                     ??_keeloqDecryptPacket:
  1061  0000E4                     DecryptPacket_12BIT@commandType:
  1062                           	callstack 0
  1063  0000E4                     actionZone_Opening@securityClosing:
  1064                           	callstack 0
  1065  0000E4                     controlSelectRemote@tempSerial:
  1066                           	callstack 0
  1067                           
  1068                           ; 4 bytes @ 0xC
  1069  0000E4                     	ds	1
  1070  0000E5                     actionZone_Opening@securityOpening:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0xD
  1074  0000E5                     	ds	1
  1075  0000E6                     actionZone_Opening@typeOpenOrder:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0xE
  1079  0000E6                     	ds	1
  1080  0000E7                     sm_execute_ControlGate@psm:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0xF
  1084  0000E7                     	ds	1
  1085  0000E8                     keeloqDecryptPacket@hop_error:
  1086                           	callstack 0
  1087  0000E8                     controlSelectRemote@temp:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x10
  1091  0000E8                     	ds	1
  1092  0000E9                     ??_sm_execute_ControlGate:
  1093  0000E9                     keeloqDecryptPacket@commandType:
  1094                           	callstack 0
  1095  0000E9                     sm_execute_menuConfiguration@psm:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x11
  1099  0000E9                     	ds	2
  1100  0000EB                     ??_sm_execute_menuConfiguration:
  1101  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x13
  1105  0000EB                     	ds	2
  1106  0000ED                     sm_execute_main@psm:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x15
  1110  0000ED                     	ds	2
  1111  0000EF                     ??_sm_execute_main:
  1112                           
  1113                           ; 1 bytes @ 0x17
  1114  0000EF                     	ds	2
  1115  0000F1                     main@package:
  1116                           	callstack 0
  1117                           
  1118                           ; 7 bytes @ 0x19
  1119  0000F1                     	ds	7
  1120                           
  1121                           	psect	cstackCOMRAM
  1122  000001                     __pcstackCOMRAM:
  1123                           	callstack 0
  1124  000001                     ??_rxi:
  1125  000001                     ??i2_GetMotorPower:
  1126  000001                     ADCC_GetSingleConversion@channel:
  1127                           	callstack 0
  1128  000001                     Segments_Set@value:
  1129                           	callstack 0
  1130  000001                     i2VerifyElectricalBrake@tempState:
  1131                           	callstack 0
  1132  000001                     TMR1_WriteTimer@timerVal:
  1133                           	callstack 0
  1134  000001                     decrementTimeslot@ts:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x0
  1138  000001                     	ds	1
  1139  000002                     ??_ReadADC:
  1140  000002                     i2VerifyElectricalBrake@actualState:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x1
  1144  000002                     	ds	1
  1145  000003                     
  1146                           ; 1 bytes @ 0x2
  1147  000003                     	ds	1
  1148  000004                     i2GetMotorPower@defineatraso:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x3
  1152  000004                     	ds	1
  1153  000005                     ??_controlMotorForce:
  1154  000005                     
  1155                           ; 1 bytes @ 0x4
  1156  000005                     	ds	5
  1157  00000A                     ??_INTERRUPT_InterruptManager:
  1158                           
  1159                           ; 1 bytes @ 0x9
  1160  00000A                     	ds	6
  1161  000010                     ??_GetMotorPower:
  1162  000010                     ??_SetSegmentValueLearn:
  1163  000010                     ?_sumEnergyADC:
  1164                           	callstack 0
  1165  000010                     ?_sm_get_current_state:
  1166                           	callstack 0
  1167  000010                     ?___wmul:
  1168                           	callstack 0
  1169  000010                     ?___lwdiv:
  1170                           	callstack 0
  1171  000010                     ?_calculateMean:
  1172                           	callstack 0
  1173  000010                     ?_sumHIST:
  1174                           	callstack 0
  1175  000010                     ?___lldiv:
  1176                           	callstack 0
  1177  000010                     EUSART1_Read@readValue:
  1178                           	callstack 0
  1179  000010                     EUSART1_Write@txData:
  1180                           	callstack 0
  1181  000010                     I2C1_Open@address:
  1182                           	callstack 0
  1183  000010                     I2C1_Close@returnValue:
  1184                           	callstack 0
  1185  000010                     I2C1_MasterSendTxData@data:
  1186                           	callstack 0
  1187  000010                     WWDT_TimerClear@state:
  1188                           	callstack 0
  1189  000010                     getKeyPressed@temp:
  1190                           	callstack 0
  1191  000010                     RGB_Set@value:
  1192                           	callstack 0
  1193  000010                     SetSegmentValueIntermitent@d2:
  1194                           	callstack 0
  1195  000010                     VerifyElectricalBrake@tempState:
  1196                           	callstack 0
  1197  000010                     VerifyFollowMe@securityClose:
  1198                           	callstack 0
  1199  000010                     ___lbdiv@divisor:
  1200                           	callstack 0
  1201  000010                     ___lbmod@divisor:
  1202                           	callstack 0
  1203  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1204                           	callstack 0
  1205  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1206                           	callstack 0
  1207  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1208                           	callstack 0
  1209  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1210                           	callstack 0
  1211  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1212                           	callstack 0
  1213  000010                     I2C1_SetBuffer@buffer:
  1214                           	callstack 0
  1215  000010                     I2C1_SetCallback@cb:
  1216                           	callstack 0
  1217  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1218                           	callstack 0
  1219  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1220                           	callstack 0
  1221  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1222                           	callstack 0
  1223  000010                     saveEnergyADCHist@valueToSave:
  1224                           	callstack 0
  1225  000010                     DecCHK@data:
  1226                           	callstack 0
  1227  000010                     ReqResync@CurrentHop:
  1228                           	callstack 0
  1229  000010                     verifyProgramingMode@classic_data:
  1230                           	callstack 0
  1231  000010                     setFlashLigth_ON@Freq:
  1232                           	callstack 0
  1233  000010                     sm_restart@psm:
  1234                           	callstack 0
  1235  000010                     sm_get_current_state@psm:
  1236                           	callstack 0
  1237  000010                     ___wmul@multiplier:
  1238                           	callstack 0
  1239  000010                     ___lwdiv@dividend:
  1240                           	callstack 0
  1241  000010                     memcpy@d1:
  1242                           	callstack 0
  1243  000010                     calculateMean@meanValue:
  1244                           	callstack 0
  1245  000010                     ___lldiv@dividend:
  1246                           	callstack 0
  1247  000010                     write_eusartparser@package:
  1248                           	callstack 0
  1249                           
  1250                           ; 7 bytes @ 0xF
  1251  000010                     	ds	1
  1252  000011                     ?_read_package:
  1253                           	callstack 0
  1254  000011                     I2C1_Open@returnValue:
  1255                           	callstack 0
  1256  000011                     VerifyElectricalBrake@actualState:
  1257                           	callstack 0
  1258  000011                     ___lbdiv@dividend:
  1259                           	callstack 0
  1260  000011                     ___lbmod@dividend:
  1261                           	callstack 0
  1262  000011                     SetSegmentValueIntermitent@time:
  1263                           	callstack 0
  1264  000011                     setRGB_ON@Freq:
  1265                           	callstack 0
  1266  000011                     write_package@package:
  1267                           	callstack 0
  1268                           
  1269                           ; 7 bytes @ 0x10
  1270  000011                     	ds	1
  1271  000012                     ??_TMR1_Initialize:
  1272  000012                     ??_ControlMotor:
  1273  000012                     ??_sumEnergyADC:
  1274  000012                     ??_DecCHK:
  1275  000012                     SetSegmentValueLearn@direction:
  1276                           	callstack 0
  1277  000012                     ___lbdiv@counter:
  1278                           	callstack 0
  1279  000012                     ___lbmod@counter:
  1280                           	callstack 0
  1281  000012                     I2C1_SetBuffer@bufferSize:
  1282                           	callstack 0
  1283  000012                     I2C1_SetCallback@ptr:
  1284                           	callstack 0
  1285  000012                     sm_init@psm:
  1286                           	callstack 0
  1287  000012                     sm_send_event@psm:
  1288                           	callstack 0
  1289  000012                     ___wmul@multiplicand:
  1290                           	callstack 0
  1291  000012                     ___lwdiv@divisor:
  1292                           	callstack 0
  1293  000012                     memcpy@s1:
  1294                           	callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x11
  1297  000012                     	ds	1
  1298  000013                     ??_setRGB_ON:
  1299  000013                     SetSegmentValueIntermitent@d1:
  1300                           	callstack 0
  1301  000013                     GetMotorPower@defineatraso:
  1302                           	callstack 0
  1303  000013                     ___lbdiv@quotient:
  1304                           	callstack 0
  1305  000013                     ___lbmod@rem:
  1306                           	callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x12
  1309  000013                     	ds	1
  1310  000014                     ??_InitSoftStop:
  1311  000014                     ??_InitSoftStart:
  1312  000014                     ??_sumHIST:
  1313  000014                     ?___awdiv:
  1314                           	callstack 0
  1315  000014                     I2C1_SetCallback@idx:
  1316                           	callstack 0
  1317  000014                     sumEnergyADC@sumE:
  1318                           	callstack 0
  1319  000014                     sm_init@initial_state:
  1320                           	callstack 0
  1321  000014                     sm_send_event@event:
  1322                           	callstack 0
  1323  000014                     ___wmul@product:
  1324                           	callstack 0
  1325  000014                     ___awdiv@dividend:
  1326                           	callstack 0
  1327  000014                     ___lwdiv@quotient:
  1328                           	callstack 0
  1329  000014                     memcpy@n:
  1330                           	callstack 0
  1331  000014                     calculateMean@newValue:
  1332                           	callstack 0
  1333  000014                     ___lldiv@divisor:
  1334                           	callstack 0
  1335                           
  1336                           ; 4 bytes @ 0x13
  1337  000014                     	ds	1
  1338  000015                     setRGB_ON@RGBLigth:
  1339                           	callstack 0
  1340  000015                     I2C1_SetDataCompleteCallback@cb:
  1341                           	callstack 0
  1342  000015                     I2C1_SetAddressNackCallback@cb:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x14
  1346  000015                     	ds	1
  1347  000016                     ?_getHopCode:
  1348                           	callstack 0
  1349  000016                     ?_getCurrentComparator:
  1350                           	callstack 0
  1351  000016                     sm_init@hist_mode:
  1352                           	callstack 0
  1353  000016                     ___lwdiv@counter:
  1354                           	callstack 0
  1355  000016                     memcpy@tmp:
  1356                           	callstack 0
  1357  000016                     sumEnergyADC@auxValue:
  1358                           	callstack 0
  1359  000016                     getHopCode@data:
  1360                           	callstack 0
  1361  000016                     ___awdiv@divisor:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x15
  1365  000016                     	ds	1
  1366  000017                     ??_write_eusartparser:
  1367  000017                     refreshADCZeroOffset@i:
  1368                           	callstack 0
  1369  000017                     I2C1_SetDataCompleteCallback@ptr:
  1370                           	callstack 0
  1371  000017                     I2C1_SetAddressNackCallback@ptr:
  1372                           	callstack 0
  1373  000017                     memcpy@d:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x16
  1377  000017                     	ds	1
  1378  000018                     ??_getHopCode:
  1379  000018                     ??_calculateMean:
  1380  000018                     ??_OpenWalkOrder:
  1381  000018                     sumEnergyADC@i:
  1382                           	callstack 0
  1383  000018                     ControlMotor@stateMotor:
  1384                           	callstack 0
  1385  000018                     read_eusartparser@package:
  1386                           	callstack 0
  1387  000018                     ___awdiv@counter:
  1388                           	callstack 0
  1389  000018                     refreshADCZeroOffset@media:
  1390                           	callstack 0
  1391  000018                     sumHIST@max:
  1392                           	callstack 0
  1393  000018                     ___lldiv@quotient:
  1394                           	callstack 0
  1395  000018                     read_package@package:
  1396                           	callstack 0
  1397                           
  1398                           ; 7 bytes @ 0x17
  1399  000018                     	ds	1
  1400  000019                     ??_read_eusartparser:
  1401  000019                     ___awdiv@sign:
  1402                           	callstack 0
  1403  000019                     wr1RegCompleteHandler@p:
  1404                           	callstack 0
  1405  000019                     rd1RegCompleteHandler@p:
  1406                           	callstack 0
  1407  000019                     rd2RegCompleteHandler@p:
  1408                           	callstack 0
  1409  000019                     wr2RegCompleteHandler@p:
  1410                           	callstack 0
  1411  000019                     rdBlkRegCompleteHandler@p:
  1412                           	callstack 0
  1413  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1414                           	callstack 0
  1415  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1416                           	callstack 0
  1417  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1418                           	callstack 0
  1419  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1420                           	callstack 0
  1421  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1422                           	callstack 0
  1423  000019                     I2C1_CallbackReturnReset@funPtr:
  1424                           	callstack 0
  1425  000019                     memcpy@s:
  1426                           	callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x18
  1429  000019                     	ds	1
  1430  00001A                     ??_getCurrentComparator:
  1431  00001A                     sumHIST@min:
  1432                           	callstack 0
  1433  00001A                     OpenWalkOrder@diffTime:
  1434                           	callstack 0
  1435  00001A                     ___awdiv@quotient:
  1436                           	callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x19
  1439  00001A                     	ds	1
  1440  00001B                     ??_I2C1_DO_TX:
  1441  00001B                     ??_I2C1_DO_RX:
  1442  00001B                     ??_I2C1_DO_TX_EMPTY:
  1443  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1444  00001B                     getSerialCmd@serial:
  1445                           	callstack 0
  1446  00001B                     Decrypt@packet:
  1447                           	callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x1A
  1450  00001B                     	ds	1
  1451  00001C                     getSerialCmd@temp:
  1452                           	callstack 0
  1453  00001C                     SetSegmentValueMain@d2:
  1454                           	callstack 0
  1455  00001C                     SetSegmentValue@d2:
  1456                           	callstack 0
  1457  00001C                     SetSegmentValueIntermitentMain@d2:
  1458                           	callstack 0
  1459  00001C                     ___lldiv@counter:
  1460                           	callstack 0
  1461  00001C                     sumHIST@sumH:
  1462                           	callstack 0
  1463                           
  1464                           ; 4 bytes @ 0x1B
  1465  00001C                     	ds	1
  1466  00001D                     ??_I2C1_MasterFsm:
  1467  00001D                     ?___lmul:
  1468                           	callstack 0
  1469  00001D                     Decrypt@key:
  1470                           	callstack 0
  1471  00001D                     SetSegmentValueMain@d1:
  1472                           	callstack 0
  1473  00001D                     SetSegmentValue@d1:
  1474                           	callstack 0
  1475  00001D                     SetSegmentValueIntermitentMain@time:
  1476                           	callstack 0
  1477  00001D                     ___lmul@multiplier:
  1478                           	callstack 0
  1479                           
  1480                           ; 4 bytes @ 0x1C
  1481  00001D                     	ds	1
  1482  00001E                     Decrypt@i:
  1483                           	callstack 0
  1484                           
  1485                           ; 1 bytes @ 0x1D
  1486  00001E                     	ds	1
  1487  00001F                     Decrypt@j:
  1488                           	callstack 0
  1489  00001F                     SetSegmentValueIntermitentMain@d1:
  1490                           	callstack 0
  1491  00001F                     write_eusartparser@debug:
  1492                           	callstack 0
  1493                           
  1494                           ; 2 bytes @ 0x1E
  1495  00001F                     	ds	1
  1496  000020                     ??_load_New_Menu:
  1497  000020                     ??_controlSaveRemote:
  1498  000020                     I2C1_MasterOperation@read:
  1499                           	callstack 0
  1500  000020                     sumHIST@i:
  1501                           	callstack 0
  1502  000020                     Decrypt@p:
  1503                           	callstack 0
  1504  000020                     actionZone_Closed@securityOpening:
  1505                           	callstack 0
  1506  000020                     actionZone_Opened@securityClosing:
  1507                           	callstack 0
  1508  000020                     getCurrentComparator@tempOffset:
  1509                           	callstack 0
  1510  000020                     getHopCode@tempHop:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x1F
  1514  000020                     	ds	1
  1515  000021                     I2C1_MasterOperation@returnValue:
  1516                           	callstack 0
  1517  000021                     Decrypt@aux:
  1518                           	callstack 0
  1519  000021                     actionZone_Closed@typeOpenOrder:
  1520                           	callstack 0
  1521  000021                     actionZone_Opened@typeOpenOrder:
  1522                           	callstack 0
  1523  000021                     write_eusartparser@debug2:
  1524                           	callstack 0
  1525  000021                     ___lmul@multiplicand:
  1526                           	callstack 0
  1527                           
  1528                           ; 4 bytes @ 0x20
  1529  000021                     	ds	1
  1530  000022                     I2C1_Read1ByteRegister@reg:
  1531                           	callstack 0
  1532  000022                     getCurrentComparator@x:
  1533                           	callstack 0
  1534  000022                     getHopCode@tempPos:
  1535                           	callstack 0
  1536  000022                     load_New_Menu@Menu:
  1537                           	callstack 0
  1538  000022                     i2c_writeNBytes@reg:
  1539                           	callstack 0
  1540  000022                     i2c_readDataBlock@reg:
  1541                           	callstack 0
  1542  000022                     Decrypt@Buffer:
  1543                           	callstack 0
  1544                           
  1545                           ; 4 bytes @ 0x21
  1546  000022                     	ds	1
  1547  000023                     ??_ControlCurrent:
  1548  000023                     I2C1_Read1ByteRegister@address:
  1549                           	callstack 0
  1550  000023                     getHopCode@i:
  1551                           	callstack 0
  1552  000023                     load_New_Menu@i:
  1553                           	callstack 0
  1554                           
  1555                           ; 1 bytes @ 0x22
  1556  000023                     	ds	1
  1557  000024                     i2c_writeNBytes@data:
  1558                           	callstack 0
  1559  000024                     I2C1_Read1ByteRegister@returnValue:
  1560                           	callstack 0
  1561  000024                     i2c_readDataBlock@data:
  1562                           	callstack 0
  1563  000024                     HopCHK@data:
  1564                           	callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x23
  1567  000024                     	ds	1
  1568  000025                     i2c_writeNBytes@len:
  1569                           	callstack 0
  1570  000025                     ___lmul@product:
  1571                           	callstack 0
  1572                           
  1573                           ; 4 bytes @ 0x24
  1574  000025                     	ds	1
  1575  000026                     i2c_readDataBlock@len:
  1576                           	callstack 0
  1577  000026                     NormalKeyGen@serial:
  1578                           	callstack 0
  1579  000026                     HopCHK@hopDiff:
  1580                           	callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x25
  1583  000026                     	ds	1
  1584  000027                     ??_i2c_writeNBytes:
  1585                           
  1586                           ; 1 bytes @ 0x26
  1587  000027                     	ds	1
  1588  000028                     ??_i2c_readDataBlock:
  1589  000028                     NormalKeyGen@HOPtemp:
  1590                           	callstack 0
  1591  000028                     i2c_writeNBytes@dat:
  1592                           	callstack 0
  1593                           
  1594                           ; 17 bytes @ 0x27
  1595  000028                     	ds	1
  1596  000029                     ?_getTimeDecelaration:
  1597                           	callstack 0
  1598  000029                     i2c_readDataBlock@address:
  1599                           	callstack 0
  1600                           
  1601                           ; 1 bytes @ 0x28
  1602  000029                     	ds	1
  1603  00002A                     i2c_readDataBlock@d:
  1604                           	callstack 0
  1605                           
  1606                           ; 4 bytes @ 0x29
  1607  00002A                     	ds	2
  1608  00002C                     NormalKeyGen@SKEYtemp:
  1609                           	callstack 0
  1610                           
  1611                           ; 4 bytes @ 0x2B
  1612  00002C                     	ds	1
  1613  00002D                     ??_getTimeDecelaration:
  1614                           
  1615                           ; 1 bytes @ 0x2C
  1616  00002D                     	ds	1
  1617  00002E                     cmdMemoryIsEmpty@position:
  1618                           	callstack 0
  1619  00002E                     validateRemoteSerialNumber@serial:
  1620                           	callstack 0
  1621                           
  1622                           ; 4 bytes @ 0x2D
  1623  00002E                     	ds	1
  1624  00002F                     ??_cmdMemoryIsEmpty:
  1625                           
  1626                           ; 1 bytes @ 0x2E
  1627  00002F                     	ds	1
  1628  000030                     NormalKeyGen@Buffer:
  1629                           	callstack 0
  1630                           
  1631                           ; 8 bytes @ 0x2F
  1632  000030                     	ds	1
  1633  000031                     cmdMemoryIsEmpty@cmdType:
  1634                           	callstack 0
  1635  000031                     getTimeDecelaration@state:
  1636                           	callstack 0
  1637                           
  1638                           ; 1 bytes @ 0x30
  1639  000031                     	ds	1
  1640  000032                     ??_setPositionInvertionInOpening:
  1641  000032                     ??_getStateOpenPosition:
  1642  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1643                           	callstack 0
  1644  000032                     actionZone_Closing@securityClosing:
  1645                           	callstack 0
  1646  000032                     cmdMemoryIsEmpty@tempSerial:
  1647                           	callstack 0
  1648                           
  1649                           ; 4 bytes @ 0x31
  1650  000032                     	ds	1
  1651  000033                     actionZone_Closing@typeOpenOrder:
  1652                           	callstack 0
  1653  000033                     validateRemoteSerialNumber@position:
  1654                           	callstack 0
  1655                           
  1656                           ; 2 bytes @ 0x32
  1657  000033                     	ds	2
  1658  000035                     validateRemoteSerialNumber@mask:
  1659                           	callstack 0
  1660                           
  1661                           ; 4 bytes @ 0x34
  1662  000035                     	ds	3
  1663  000038                     keeloq_classic_decrypt_packet@data:
  1664                           	callstack 0
  1665                           
  1666                           ; 2 bytes @ 0x37
  1667  000038                     	ds	1
  1668  000039                     i2c_writeNBytes@address:
  1669                           	callstack 0
  1670  000039                     validateRemoteSerialNumber@j:
  1671                           	callstack 0
  1672                           
  1673                           ; 1 bytes @ 0x38
  1674  000039                     	ds	1
  1675  00003A                     validateRemoteSerialNumber@i:
  1676                           	callstack 0
  1677  00003A                     saveNewSerial@cmdType:
  1678                           	callstack 0
  1679  00003A                     RemoveSerial@position:
  1680                           	callstack 0
  1681  00003A                     ResetDefaultMemory@type:
  1682                           	callstack 0
  1683  00003A                     checkNVM_VarSystem@saveParam:
  1684                           	callstack 0
  1685  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1686                           	callstack 0
  1687  00003A                     setValueToEdit@ParameterSelected:
  1688                           	callstack 0
  1689  00003A                     eusartparser@package:
  1690                           	callstack 0
  1691                           
  1692                           ; 1 bytes @ 0x39
  1693  00003A                     	ds	1
  1694  00003B                     
  1695                           ; 1 bytes @ 0x3A
  1696 ;;
  1697 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1698 ;;
  1699 ;; *************** function _main *****************
  1700 ;; Defined at:
  1701 ;;		line 63 in file "main_MC50.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  package         7   25[BANK0 ] struct package_t
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 3F/1
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1718 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1719 ;;Total ram usage:        7 bytes
  1720 ;; Hardware stack levels required when called: 17
  1721 ;; This function calls:
  1722 ;;		_ControlCounterMoves
  1723 ;;		_ControlCurrent
  1724 ;;		_ControlInputs
  1725 ;;		_ControlLights
  1726 ;;		_ControlMotor
  1727 ;;		_EUSART1_is_rx_ready
  1728 ;;		_InitReceiver
  1729 ;;		_SYSTEM_Initialize
  1730 ;;		_SetSegmentValue
  1731 ;;		_ShowVersion
  1732 ;;		_WWDT_SoftEnable
  1733 ;;		_WWDT_TimerClear
  1734 ;;		_controlVelocity
  1735 ;;		_eusartparser
  1736 ;;		_getKeyPressed
  1737 ;;		_loadNVM_VarSystem
  1738 ;;		_readInputs
  1739 ;;		_readRFButtons
  1740 ;;		_read_package
  1741 ;;		_readbutton
  1742 ;;		_sm_execute_ControlGate
  1743 ;;		_sm_execute_main
  1744 ;;		_sm_init
  1745 ;; This function is called by:
  1746 ;;		Startup code after reset
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text0
  1751  005CF0                     __ptext0:
  1752                           	callstack 0
  1753  005CF0                     _main:
  1754                           	callstack 14
  1755                           
  1756                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1757                           
  1758                           ;incstack = 0
  1759  005CF0  0E18               	movlw	24
  1760  005CF2  0100               	movlb	0	; () banked
  1761  005CF4  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1762                           
  1763                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1764  005CF6  0E18               	movlw	24
  1765  005CF8  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1766                           
  1767                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1768  005CFA  0E00               	movlw	0
  1769  005CFC  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1770  005CFE  0E00               	movlw	0
  1771  005D00  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1772                           
  1773                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1774  005D02  0E01               	movlw	1
  1775  005D04  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1779  005D06  ECD0  F045         	call	_SYSTEM_Initialize	;wreg free
  1780                           
  1781                           ; BSR set to: 14
  1782                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1783  005D0A  EC90  F049         	call	_WWDT_SoftEnable	;wreg free
  1784                           
  1785                           ; BSR set to: 14
  1786                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1787  005D0E  8EF2               	bsf	242,7,c	;volatile
  1788                           
  1789                           ; BSR set to: 14
  1790                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1791  005D10  8CF2               	bsf	242,6,c	;volatile
  1792                           
  1793                           ; BSR set to: 14
  1794                           ;main_MC50.c: 86:     IOCBP3=1;
  1795  005D12  010F               	movlb	15	; () banked
  1796  005D14  8714               	bsf	20,3,b	;volatile
  1797                           
  1798                           ; BSR set to: 15
  1799                           ;main_MC50.c: 87:     IOCBN3=1;
  1800  005D16  8713               	bsf	19,3,b	;volatile
  1801                           
  1802                           ; BSR set to: 15
  1803                           ;main_MC50.c: 94:     InitReceiver();
  1804  005D18  EC1A  F048         	call	_InitReceiver	;wreg free
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1808  005D1C  ECDC  F031         	call	_loadNVM_VarSystem	;wreg free
  1809                           
  1810                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1811  005D20  ECF0  F047         	call	_WWDT_TimerClear	;wreg free
  1812                           
  1813                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1814  005D24  0E18               	movlw	24
  1815  005D26  6E1C               	movwf	SetSegmentValue@d2^0,c
  1816  005D28  0E18               	movlw	24
  1817  005D2A  EC41  F048         	call	_SetSegmentValue
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1821  005D2E  0E02               	movlw	2
  1822  005D30  0101               	movlb	1	; () banked
  1823  005D32  6F9C               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1824                           
  1825                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1826  005D34  D00B               	goto	l23341
  1827  005D36                     l23331:
  1828                           
  1829                           ; BSR set to: 1
  1830                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1831  005D36  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1832  005D38  A4D8               	btfss	status,2,c
  1833  005D3A  D008               	goto	l23341
  1834                           
  1835                           ; BSR set to: 1
  1836                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1837  005D3C  ECF0  F047         	call	_WWDT_TimerClear	;wreg free
  1838                           
  1839                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1840  005D40  0E32               	movlw	50
  1841  005D42  0101               	movlb	1	; () banked
  1842  005D44  6F9D               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1843                           
  1844                           ; BSR set to: 1
  1845                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1846  005D46  079C               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1847                           
  1848                           ; BSR set to: 1
  1849                           ;main_MC50.c: 109:             readInputs();
  1850  005D48  ECA8  F034         	call	_readInputs	;wreg free
  1851  005D4C                     l23341:
  1852                           
  1853                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1854  005D4C  0101               	movlb	1	; () banked
  1855  005D4E  519C               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1856  005D50  A4D8               	btfss	status,2,c
  1857  005D52  D7F1               	goto	l23331
  1858                           
  1859                           ; BSR set to: 1
  1860                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1861  005D54  0EBD               	movlw	low _menuConfiguration_stateMachine
  1862  005D56  6E12               	movwf	sm_init@psm^0,c
  1863  005D58  0E02               	movlw	high _menuConfiguration_stateMachine
  1864  005D5A  6E13               	movwf	(sm_init@psm+1)^0,c
  1865  005D5C  0E00               	movlw	0
  1866  005D5E  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1867  005D60  0E00               	movlw	0
  1868  005D62  6E14               	movwf	sm_init@initial_state^0,c
  1869  005D64  0E00               	movlw	0
  1870  005D66  6E16               	movwf	sm_init@hist_mode^0,c
  1871  005D68  EC52  F042         	call	_sm_init	;wreg free
  1872                           
  1873                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1874  005D6C  0EED               	movlw	low _main_stateMachine
  1875  005D6E  6E12               	movwf	sm_init@psm^0,c
  1876  005D70  0E01               	movlw	high _main_stateMachine
  1877  005D72  6E13               	movwf	(sm_init@psm+1)^0,c
  1878  005D74  0E00               	movlw	0
  1879  005D76  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1880  005D78  0E00               	movlw	0
  1881  005D7A  6E14               	movwf	sm_init@initial_state^0,c
  1882  005D7C  0E00               	movlw	0
  1883  005D7E  6E16               	movwf	sm_init@hist_mode^0,c
  1884  005D80  EC52  F042         	call	_sm_init	;wreg free
  1885                           
  1886                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1887  005D84  0EE2               	movlw	low _controlGate_stateMachine
  1888  005D86  6E12               	movwf	sm_init@psm^0,c
  1889  005D88  0E01               	movlw	high _controlGate_stateMachine
  1890  005D8A  6E13               	movwf	(sm_init@psm+1)^0,c
  1891  005D8C  0E00               	movlw	0
  1892  005D8E  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1893  005D90  0E00               	movlw	0
  1894  005D92  6E14               	movwf	sm_init@initial_state^0,c
  1895  005D94  0E00               	movlw	0
  1896  005D96  6E16               	movwf	sm_init@hist_mode^0,c
  1897  005D98  EC52  F042         	call	_sm_init	;wreg free
  1898                           
  1899                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  1900  005D9C  0EB2               	movlw	low _controlLearning_stateMachine
  1901  005D9E  6E12               	movwf	sm_init@psm^0,c
  1902  005DA0  0E02               	movlw	high _controlLearning_stateMachine
  1903  005DA2  6E13               	movwf	(sm_init@psm+1)^0,c
  1904  005DA4  0E00               	movlw	0
  1905  005DA6  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1906  005DA8  0E00               	movlw	0
  1907  005DAA  6E14               	movwf	sm_init@initial_state^0,c
  1908  005DAC  0E00               	movlw	0
  1909  005DAE  6E16               	movwf	sm_init@hist_mode^0,c
  1910  005DB0  EC52  F042         	call	_sm_init	;wreg free
  1911                           
  1912                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  1913  005DB4  0E00               	movlw	0
  1914  005DB6  0101               	movlb	1	; () banked
  1915  005DB8  6FA3               	movwf	(_ts_system+9)& (0+255),b	;volatile
  1916  005DBA  0E14               	movlw	20
  1917  005DBC  6FA2               	movwf	(_ts_system+8)& (0+255),b	;volatile
  1918                           
  1919                           ; BSR set to: 1
  1920                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  1921  005DBE  0E01               	movlw	1
  1922  005DC0  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  1923  005DC2  0EFE               	movlw	254
  1924  005DC4  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  1925                           
  1926                           ; BSR set to: 1
  1927                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  1928  005DC6  0E00               	movlw	0
  1929  005DC8  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  1930  005DCA  0E64               	movlw	100
  1931  005DCC  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  1932                           
  1933                           ; BSR set to: 1
  1934                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  1935  005DCE  0E00               	movlw	0
  1936  005DD0  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
  1937  005DD2  0E00               	movlw	0
  1938  005DD4  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  1942  005DD6  0E00               	movlw	0
  1943  005DD8  6F00               	movwf	_var_sys& (0+255),b	;volatile
  1944  005DDA                     l23355:
  1945                           
  1946                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  1947  005DDA  ECE0  F048         	call	_EUSART1_is_rx_ready	;wreg free
  1948  005DDE  0900               	iorlw	0
  1949  005DE0  B4D8               	btfsc	status,2,c
  1950  005DE2  D00D               	goto	l23361
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;main_MC50.c: 142:             package=read_package();
  1954  005DE4  EC26  F043         	call	_read_package	;wreg free
  1955  005DE8  EE20  F0F1         	lfsr	2,main@package
  1956  005DEC  0E06               	movlw	6
  1957  005DEE                     u28911:
  1958  005DEE  CFEB FFDB          	movff	plusw0,plusw2
  1959  005DF2  06E8               	decf	wreg,f,c
  1960  005DF4  E2FC               	bc	u28911
  1961                           
  1962                           ; BSR set to: 14
  1963                           ;main_MC50.c: 143:             eusartparser(&package);
  1964  005DF6  0EF1               	movlw	low main@package
  1965  005DF8  6E3A               	movwf	eusartparser@package^0,c
  1966  005DFA  ECF3  F02F         	call	_eusartparser	;wreg free
  1967  005DFE                     l23361:
  1968                           
  1969                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  1970  005DFE  0101               	movlb	1	; () banked
  1971  005E00  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1972  005E02  A4D8               	btfss	status,2,c
  1973  005E04  D7EA               	goto	l23355
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  1977  005E06  0E32               	movlw	50
  1978  005E08  6F9D               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1979                           
  1980                           ; BSR set to: 1
  1981                           ;main_MC50.c: 150:             WWDT_TimerClear();
  1982  005E0A  ECF0  F047         	call	_WWDT_TimerClear	;wreg free
  1983                           
  1984                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  1985  005E0E  0E04               	movlw	4
  1986  005E10  0101               	movlb	1	; () banked
  1987  005E12  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  1988  005E14  D003               	goto	l23371
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  1992  005E16  ECDC  F040         	call	_ShowVersion	;wreg free
  1993                           
  1994                           ;main_MC50.c: 156:             }
  1995  005E1A  D7DF               	goto	l23355
  1996  005E1C                     l23371:
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2000  005E1C  EC72  F040         	call	_readbutton	;wreg free
  2001                           
  2002                           ; BSR set to: 1
  2003                           ;main_MC50.c: 162:                 readRFButtons();
  2004  005E20  ECE8  F02C         	call	_readRFButtons	;wreg free
  2005                           
  2006                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2007  005E24  EC73  F048         	call	_getKeyPressed	;wreg free
  2008  005E28  0101               	movlb	1	; () banked
  2009  005E2A  6F94               	movwf	_lastKey& (0+255),b
  2010                           
  2011                           ; BSR set to: 1
  2012                           ;main_MC50.c: 165:                 readInputs();
  2013  005E2C  ECA8  F034         	call	_readInputs	;wreg free
  2014                           
  2015                           ;main_MC50.c: 166:                 ControlInputs();
  2016  005E30  EC07  F033         	call	_ControlInputs	;wreg free
  2017                           
  2018                           ;main_MC50.c: 167:                 ControlCurrent();
  2019  005E34  EC39  F02F         	call	_ControlCurrent	;wreg free
  2020                           
  2021                           ;main_MC50.c: 168:                 controlVelocity();
  2022  005E38  ECDD  F025         	call	_controlVelocity	;wreg free
  2023                           
  2024                           ;main_MC50.c: 169:                 ControlMotor();
  2025  005E3C  ECA7  F023         	call	_ControlMotor	;wreg free
  2026                           
  2027                           ;main_MC50.c: 170:                 ControlLights();
  2028  005E40  ECEF  F01C         	call	_ControlLights	;wreg free
  2029                           
  2030                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2031  005E44  ECF9  F041         	call	_ControlCounterMoves	;wreg free
  2032                           
  2033                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2034  005E48  0EED               	movlw	low _main_stateMachine
  2035  005E4A  0100               	movlb	0	; () banked
  2036  005E4C  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2037  005E4E  0E01               	movlw	high _main_stateMachine
  2038  005E50  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2039  005E52  EC50  F012         	call	_sm_execute_main	;wreg free
  2040                           
  2041                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2042  005E56  0EE2               	movlw	low _controlGate_stateMachine
  2043  005E58  0100               	movlb	0	; () banked
  2044  005E5A  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2045  005E5C  0E01               	movlw	high _controlGate_stateMachine
  2046  005E5E  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2047  005E60  EC4A  F01B         	call	_sm_execute_ControlGate	;wreg free
  2048                           
  2049                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2050  005E64  0101               	movlb	1	; () banked
  2051  005E66  2994               	incf	_lastKey& (0+255),w,b
  2052  005E68  B4D8               	btfsc	status,2,c
  2053  005E6A  D7B7               	goto	l23355
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2057  005E6C  EC1A  F048         	call	_InitReceiver	;wreg free
  2058                           
  2059                           ; BSR set to: 1
  2060                           
  2061                           ;main_MC50.c: 185:         }
  2062  005E70  D7B4               	goto	l23355
  2063  005E72                     __end_of_main:
  2064                           	callstack 0
  2065                           
  2066 ;; *************** function _sm_execute_main *****************
  2067 ;; Defined at:
  2068 ;;		line 26 in file "sm_Main_MC50.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  psm             2   21[BANK0 ] PTR struct .
  2071 ;;		 -> main_stateMachine(11), 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 3F/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2083 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2085 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2086 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2087 ;;Total ram usage:        4 bytes
  2088 ;; Hardware stack levels used: 1
  2089 ;; Hardware stack levels required when called: 16
  2090 ;; This function calls:
  2091 ;;		_SetSegmentValueIntermitentMain
  2092 ;;		_SetSegmentValueMain
  2093 ;;		_load_New_Menu
  2094 ;;		_sm_execute_menuConfiguration
  2095 ;;		_sm_send_event
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text1
  2102  0024A0                     __ptext1:
  2103                           	callstack 0
  2104  0024A0                     _sm_execute_main:
  2105                           	callstack 14
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2109                           
  2110                           ; BSR set to: 1
  2111                           ;incstack = 0
  2112  0024A0  D053               	goto	l22857
  2113  0024A2                     l22833:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2117  0024A2  5185               	movf	_programmer_enable& (0+255),w,b
  2118  0024A4  A4D8               	btfss	status,2,c
  2119  0024A6  D066               	goto	l22859
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2123  0024A8  EE20 F004          	lfsr	2,4
  2124  0024AC  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2125  0024AE  26D9               	addwf	fsr2l,f,c
  2126  0024B0  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2127  0024B2  22DA               	addwfc	fsr2h,f,c
  2128  0024B4  0E06               	movlw	6
  2129  0024B6  18DE               	xorwf	postinc2,w,c
  2130  0024B8  10DE               	iorwf	postinc2,w,c
  2131  0024BA  A4D8               	btfss	status,2,c
  2132  0024BC  D006               	goto	l22839
  2133  0024BE                     u27910:
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2137  0024BE  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2138  0024C2  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2139  0024C6  0E01               	movlw	1
  2140  0024C8  D01D               	goto	L2
  2141  0024CA                     l22839:
  2142                           
  2143                           ; BSR set to: 0
  2144  0024CA  EE20 F004          	lfsr	2,4
  2145  0024CE  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2146  0024D0  26D9               	addwf	fsr2l,f,c
  2147  0024D2  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2148  0024D4  22DA               	addwfc	fsr2h,f,c
  2149  0024D6  0E11               	movlw	17
  2150  0024D8  18DE               	xorwf	postinc2,w,c
  2151  0024DA  10DE               	iorwf	postinc2,w,c
  2152  0024DC  A4D8               	btfss	status,2,c
  2153  0024DE  D04A               	goto	l22859
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2157  0024E0  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2158  0024E4  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2159  0024E8  0E02               	movlw	2
  2160  0024EA  D00C               	goto	L2
  2161  0024EC                     l22843:
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2165  0024EC  EE20 F004          	lfsr	2,4
  2166  0024F0  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2167  0024F2  26D9               	addwf	fsr2l,f,c
  2168  0024F4  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2169  0024F6  22DA               	addwfc	fsr2h,f,c
  2170  0024F8  0E07               	movlw	7
  2171  0024FA  18DE               	xorwf	postinc2,w,c
  2172  0024FC  10DE               	iorwf	postinc2,w,c
  2173  0024FE  A4D8               	btfss	status,2,c
  2174  002500  D039               	goto	l22859
  2175  002502  D00F               	goto	u27940
  2176  002504                     L2:
  2177  002504  6EDE               	movwf	postinc2,c
  2178  002506  0E00               	movlw	0
  2179  002508  6EDD               	movwf	postdec2,c
  2180  00250A  D034               	goto	l22859
  2181  00250C                     l22847:
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2185  00250C  EE20 F004          	lfsr	2,4
  2186  002510  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2187  002512  26D9               	addwf	fsr2l,f,c
  2188  002514  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2189  002516  22DA               	addwfc	fsr2h,f,c
  2190  002518  0E07               	movlw	7
  2191  00251A  18DE               	xorwf	postinc2,w,c
  2192  00251C  10DE               	iorwf	postinc2,w,c
  2193  00251E  A4D8               	btfss	status,2,c
  2194  002520  D006               	goto	l22851
  2195  002522                     u27940:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2199  002522  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2200  002526  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2201  00252A  0E00               	movlw	0
  2202  00252C  D7EB               	goto	L2
  2203  00252E                     l22851:
  2204                           
  2205                           ; BSR set to: 0
  2206  00252E  EE20 F004          	lfsr	2,4
  2207  002532  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2208  002534  26D9               	addwf	fsr2l,f,c
  2209  002536  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2210  002538  22DA               	addwfc	fsr2h,f,c
  2211  00253A  0E06               	movlw	6
  2212  00253C  18DE               	xorwf	postinc2,w,c
  2213  00253E  10DE               	iorwf	postinc2,w,c
  2214  002540  A4D8               	btfss	status,2,c
  2215  002542  D018               	goto	l22859
  2216  002544  D7BC               	goto	u27910
  2217  002546                     l3048:
  2218                           
  2219                           ; BSR set to: 0
  2220  002546  D7FF               	goto	l3048
  2221  002548                     l22857:
  2222                           
  2223                           ; BSR set to: 0
  2224  002548  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2225  00254C  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2226  002550  50DF               	movf	indf2,w,c
  2227  002552  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2228  002554  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2229                           
  2230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2231                           ; Switch size 1, requested type "simple"
  2232                           ; Number of cases is 1, Range of values is 0 to 0
  2233                           ; switch strategies available:
  2234                           ; Name         Instructions Cycles
  2235                           ; simple_byte            4     3 (average)
  2236                           ;	Chosen strategy is simple_byte
  2237  002556  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2238  002558  0A00               	xorlw	0	; case 0
  2239  00255A  A4D8               	btfss	status,2,c
  2240  00255C  D7F4               	goto	l3048
  2241                           
  2242                           ; BSR set to: 0
  2243                           ; Switch size 1, requested type "simple"
  2244                           ; Number of cases is 3, Range of values is 0 to 2
  2245                           ; switch strategies available:
  2246                           ; Name         Instructions Cycles
  2247                           ; simple_byte           10     6 (average)
  2248                           ;	Chosen strategy is simple_byte
  2249  00255E  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2250  002560  0A00               	xorlw	0	; case 0
  2251  002562  B4D8               	btfsc	status,2,c
  2252  002564  D79E               	goto	l22833
  2253  002566  0A01               	xorlw	1	; case 1
  2254  002568  B4D8               	btfsc	status,2,c
  2255  00256A  D7C0               	goto	l22843
  2256  00256C  0A03               	xorlw	3	; case 2
  2257  00256E  B4D8               	btfsc	status,2,c
  2258  002570  D7CD               	goto	l22847
  2259  002572  D7E9               	goto	l3048
  2260  002574                     l22859:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2264  002574  0EED               	movlw	low _main_stateMachine
  2265  002576  6E12               	movwf	sm_send_event@psm^0,c
  2266  002578  0E01               	movlw	high _main_stateMachine
  2267  00257A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2268  00257C  0E00               	movlw	0
  2269  00257E  6E15               	movwf	(sm_send_event@event+1)^0,c
  2270  002580  0E00               	movlw	0
  2271  002582  6E14               	movwf	sm_send_event@event^0,c
  2272  002584  EC6F  F041         	call	_sm_send_event	;wreg free
  2273                           
  2274                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2275  002588  D1F8               	goto	l23137
  2276  00258A                     l22861:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0 && button_struct.timer>((1000/50)*5))
  2280  00258A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2281  00258C  A4D8               	btfss	status,2,c
  2282  00258E  D016               	goto	l22873
  2283                           
  2284                           ; BSR set to: 0
  2285  002590  0E64               	movlw	100
  2286  002592  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2287  002594  D013               	goto	l22873
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2291  002596  0E01               	movlw	1
  2292  002598  EC81  F01E         	call	_load_New_Menu
  2293  00259C                     l22867:
  2294                           
  2295                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2296  00259C  0EED               	movlw	low _main_stateMachine
  2297  00259E  6E12               	movwf	sm_send_event@psm^0,c
  2298  0025A0  0E01               	movlw	high _main_stateMachine
  2299  0025A2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2300  0025A4  0E00               	movlw	0
  2301  0025A6  6E15               	movwf	(sm_send_event@event+1)^0,c
  2302  0025A8  0E06               	movlw	6
  2303  0025AA  6E14               	movwf	sm_send_event@event^0,c
  2304  0025AC  EC6F  F041         	call	_sm_send_event	;wreg free
  2305                           
  2306                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2307  0025B0  0E01               	movlw	1
  2308  0025B2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2309                           
  2310                           ;sm_Main_MC50.c: 91:                 temp=0;
  2311  0025B4  0E00               	movlw	0
  2312  0025B6  0100               	movlb	0	; () banked
  2313  0025B8  6F80               	movwf	_temp& (0+255),b
  2314                           
  2315                           ;sm_Main_MC50.c: 92:             }
  2316  0025BA  0012               	return	
  2317  0025BC                     l22873:
  2318                           
  2319                           ; BSR set to: 0
  2320  0025BC  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2321  0025BE  A4D8               	btfss	status,2,c
  2322  0025C0  D00B               	goto	l22881
  2323                           
  2324                           ; BSR set to: 0
  2325  0025C2  0E14               	movlw	20
  2326  0025C4  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2327  0025C6  D008               	goto	l22881
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2331  0025C8  0E00               	movlw	0
  2332  0025CA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2333  0025CC  0E10               	movlw	16
  2334  0025CE  EC27  F048         	call	_SetSegmentValueMain
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;sm_Main_MC50.c: 98:                 temp=1;
  2338  0025D2  0E01               	movlw	1
  2339  0025D4  6F80               	movwf	_temp& (0+255),b
  2340                           
  2341                           ;sm_Main_MC50.c: 99:             }
  2342  0025D6  0012               	return	
  2343  0025D8                     l22881:
  2344                           
  2345                           ; BSR set to: 0
  2346  0025D8  0580               	decf	_temp& (0+255),w,b
  2347  0025DA  A4D8               	btfss	status,2,c
  2348  0025DC  D004               	goto	l22891
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2352  0025DE  0E00               	movlw	0
  2353  0025E0  EC81  F01E         	call	_load_New_Menu
  2354  0025E4  D7DB               	goto	l22867
  2355  0025E6                     l22891:
  2356                           
  2357                           ; BSR set to: 0
  2358  0025E6  0E27               	movlw	39
  2359  0025E8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2360  0025EA  A4D8               	btfss	status,2,c
  2361  0025EC  D007               	goto	l22903
  2362                           
  2363                           ; BSR set to: 0
  2364  0025EE  0E78               	movlw	120
  2365  0025F0  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2366  0025F2  D004               	goto	l22903
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2370  0025F4  0E0D               	movlw	13
  2371  0025F6  EC81  F01E         	call	_load_New_Menu
  2372  0025FA  D7D0               	goto	l22867
  2373  0025FC                     l22903:
  2374                           
  2375                           ; BSR set to: 0
  2376  0025FC  0E27               	movlw	39
  2377  0025FE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2378  002600  A4D8               	btfss	status,2,c
  2379  002602  D00B               	goto	l22911
  2380                           
  2381                           ; BSR set to: 0
  2382  002604  0E14               	movlw	20
  2383  002606  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2384  002608  D008               	goto	l22911
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2388  00260A  0E13               	movlw	19
  2389  00260C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2390  00260E  0E05               	movlw	5
  2391  002610  EC27  F048         	call	_SetSegmentValueMain
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;sm_Main_MC50.c: 119:                 temp=2;
  2395  002614  0E02               	movlw	2
  2396  002616  6F80               	movwf	_temp& (0+255),b
  2397                           
  2398                           ;sm_Main_MC50.c: 120:             }
  2399  002618  0012               	return	
  2400  00261A                     l22911:
  2401                           
  2402                           ; BSR set to: 0
  2403  00261A  0E02               	movlw	2
  2404  00261C  1980               	xorwf	_temp& (0+255),w,b
  2405  00261E  A4D8               	btfss	status,2,c
  2406  002620  D004               	goto	l22921
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2410  002622  0E0C               	movlw	12
  2411  002624  EC81  F01E         	call	_load_New_Menu
  2412  002628  D7B9               	goto	l22867
  2413  00262A                     l22921:
  2414                           
  2415                           ; BSR set to: 0
  2416  00262A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2417  00262C  A4D8               	btfss	status,2,c
  2418  00262E  D009               	goto	l22927
  2419                           
  2420                           ; BSR set to: 0
  2421  002630  0101               	movlb	1	; () banked
  2422  002632  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2423  002634  A4D8               	btfss	status,2,c
  2424  002636  D005               	goto	l22927
  2425                           
  2426                           ; BSR set to: 1
  2427                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2428  002638  0E01               	movlw	1
  2429  00263A  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2430                           
  2431                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2432  00263C  0E03               	movlw	3
  2433  00263E  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2434                           
  2435                           ;sm_Main_MC50.c: 132:             }
  2436  002640  0012               	return	
  2437  002642                     l22927:
  2438  002642  0E17               	movlw	23
  2439  002644  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2440  002646  A4D8               	btfss	status,2,c
  2441  002648  D009               	goto	l22933
  2442  00264A  0101               	movlb	1	; () banked
  2443  00264C  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2444  00264E  A4D8               	btfss	status,2,c
  2445  002650  D005               	goto	l22933
  2446                           
  2447                           ; BSR set to: 1
  2448                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2449  002652  0E01               	movlw	1
  2450  002654  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2451                           
  2452                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2453  002656  0E01               	movlw	1
  2454  002658  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2455                           
  2456                           ;sm_Main_MC50.c: 137:             }
  2457  00265A  0012               	return	
  2458  00265C                     l22933:
  2459  00265C  0101               	movlb	1	; () banked
  2460  00265E  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2461  002660  A4D8               	btfss	status,2,c
  2462  002662  D005               	goto	l22937
  2463                           
  2464                           ; BSR set to: 1
  2465                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2466  002664  0E00               	movlw	0
  2467  002666  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2468                           
  2469                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2470  002668  0E00               	movlw	0
  2471  00266A  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2472                           
  2473                           ;sm_Main_MC50.c: 142:             }
  2474  00266C  0012               	return	
  2475  00266E                     l22937:
  2476                           
  2477                           ; BSR set to: 1
  2478  00266E  0E06               	movlw	6
  2479  002670  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2480  002672  B4D8               	btfsc	status,2,c
  2481  002674  D004               	goto	u28120
  2482                           
  2483                           ; BSR set to: 1
  2484  002676  0E05               	movlw	5
  2485  002678  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2486  00267A  A4D8               	btfss	status,2,c
  2487  00267C  D015               	goto	l22951
  2488  00267E                     u28120:
  2489                           
  2490                           ; BSR set to: 1
  2491  00267E  0E63               	movlw	99
  2492  002680  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2493  002682  D012               	goto	l22951
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2497  002684  0E0C               	movlw	12
  2498  002686  EC81  F01E         	call	_load_New_Menu
  2499                           
  2500                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2501  00268A  0EED               	movlw	low _main_stateMachine
  2502  00268C  6E12               	movwf	sm_send_event@psm^0,c
  2503  00268E  0E01               	movlw	high _main_stateMachine
  2504  002690  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2505  002692  0E00               	movlw	0
  2506  002694  6E15               	movwf	(sm_send_event@event+1)^0,c
  2507  002696  0E06               	movlw	6
  2508  002698  6E14               	movwf	sm_send_event@event^0,c
  2509  00269A  EC6F  F041         	call	_sm_send_event	;wreg free
  2510                           
  2511                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2512  00269E  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2513                           
  2514                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2515  0026A2  0E01               	movlw	1
  2516  0026A4  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2517                           
  2518                           ;sm_Main_MC50.c: 149:             }
  2519  0026A6  0012               	return	
  2520  0026A8                     l22951:
  2521                           
  2522                           ; BSR set to: 1
  2523  0026A8  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2524  0026AA  D005               	goto	u28140
  2525  0026AC  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2526  0026AE  E111               	bnz	l3060
  2527  0026B0  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2528  0026B2  B0D8               	btfsc	status,0,c
  2529  0026B4  0012               	return	
  2530  0026B6                     u28140:
  2531                           
  2532                           ; BSR set to: 1
  2533                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2534  0026B6  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2535  0026B8  A4D8               	btfss	status,2,c
  2536  0026BA  D006               	goto	l22957
  2537                           
  2538                           ; BSR set to: 1
  2539                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2540  0026BC  0E0C               	movlw	12
  2541  0026BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2542  0026C0  0E0F               	movlw	15
  2543  0026C2  EC27  F048         	call	_SetSegmentValueMain
  2544                           
  2545                           ;sm_Main_MC50.c: 157:                     }
  2546  0026C6  0012               	return	
  2547  0026C8                     l22957:
  2548                           
  2549                           ; BSR set to: 1
  2550                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2551  0026C8  0E18               	movlw	24
  2552  0026CA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2553  0026CC  0E18               	movlw	24
  2554  0026CE  EC27  F048         	call	_SetSegmentValueMain
  2555  0026D2                     l3060:
  2556                           
  2557                           ; BSR set to: 1
  2558  0026D2  0012               	return	
  2559  0026D4                     l22959:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2563  0026D4  0EBD               	movlw	low _menuConfiguration_stateMachine
  2564  0026D6  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2565  0026D8  0E02               	movlw	high _menuConfiguration_stateMachine
  2566  0026DA  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2567  0026DC  EC91  F007         	call	_sm_execute_menuConfiguration	;wreg free
  2568                           
  2569                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2570  0026E0  0012               	return	
  2571  0026E2                     l22961:
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2575  0026E2  0E00               	movlw	0
  2576  0026E4  0101               	movlb	1	; () banked
  2577  0026E6  6F8B               	movwf	_aux_in_auto_close& (0+255),b
  2578                           
  2579                           ; BSR set to: 1
  2580                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2581  0026E8  0E04               	movlw	4
  2582  0026EA  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2583  0026EC  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2584  0026EE  A4D8               	btfss	status,2,c
  2585  0026F0  D013               	goto	l3083
  2586                           
  2587                           ; BSR set to: 1
  2588                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2589  0026F2  0100               	movlb	0	; () banked
  2590  0026F4  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2591  0026F6  A4D8               	btfss	status,2,c
  2592  0026F8  D007               	goto	l22971
  2593                           
  2594                           ; BSR set to: 0
  2595  0026FA  0101               	movlb	1	; () banked
  2596  0026FC  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2597  0026FE  A4D8               	btfss	status,2,c
  2598  002700  D003               	goto	l22971
  2599  002702                     u28180:
  2600                           
  2601                           ; BSR set to: 1
  2602                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2603  002702  0E01               	movlw	1
  2604  002704  6F8B               	movwf	_aux_in_auto_close& (0+255),b
  2605                           
  2606                           ;sm_Main_MC50.c: 182:                 }
  2607  002706  D008               	goto	l3083
  2608  002708                     l22971:
  2609  002708  0100               	movlb	0	; () banked
  2610  00270A  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2611  00270C  B4D8               	btfsc	status,2,c
  2612  00270E  D004               	goto	l3083
  2613                           
  2614                           ; BSR set to: 0
  2615  002710  0101               	movlb	1	; () banked
  2616  002712  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2617  002714  A4D8               	btfss	status,2,c
  2618  002716  D7F5               	goto	u28180
  2619  002718                     l3083:
  2620                           
  2621                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2622  002718  0101               	movlb	1	; () banked
  2623  00271A  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2624  00271C  A4D8               	btfss	status,2,c
  2625  00271E  D069               	goto	l3097
  2626                           
  2627                           ; BSR set to: 1
  2628  002720  0E04               	movlw	4
  2629  002722  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2630  002724  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2631  002726  A4D8               	btfss	status,2,c
  2632  002728  D003               	goto	u28230
  2633                           
  2634                           ; BSR set to: 1
  2635  00272A  518B               	movf	_aux_in_auto_close& (0+255),w,b
  2636  00272C  B4D8               	btfsc	status,2,c
  2637  00272E  D008               	goto	u28250
  2638  002730                     u28230:
  2639                           
  2640                           ; BSR set to: 1
  2641  002730  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
  2642  002732  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2643  002734  B4D8               	btfsc	status,2,c
  2644  002736  D004               	goto	u28250
  2645                           
  2646                           ; BSR set to: 1
  2647  002738  51E2               	movf	_controlGate_stateMachine& (0+255),w,b
  2648  00273A  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2649  00273C  A4D8               	btfss	status,2,c
  2650  00273E  D059               	goto	l3097
  2651  002740                     u28250:
  2652                           
  2653                           ; BSR set to: 1
  2654                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0 && button_struct.timer>((1000/50)*5))
  2655  002740  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2656  002742  A4D8               	btfss	status,2,c
  2657  002744  D015               	goto	l22999
  2658                           
  2659                           ; BSR set to: 1
  2660  002746  0E64               	movlw	100
  2661  002748  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2662  00274A  D012               	goto	l22999
  2663                           
  2664                           ; BSR set to: 1
  2665                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2666  00274C  0E01               	movlw	1
  2667  00274E  EC81  F01E         	call	_load_New_Menu
  2668  002752                     l22993:
  2669                           
  2670                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2671  002752  0EED               	movlw	low _main_stateMachine
  2672  002754  6E12               	movwf	sm_send_event@psm^0,c
  2673  002756  0E01               	movlw	high _main_stateMachine
  2674  002758  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2675  00275A  0E00               	movlw	0
  2676  00275C  6E15               	movwf	(sm_send_event@event+1)^0,c
  2677  00275E  0E06               	movlw	6
  2678  002760  6E14               	movwf	sm_send_event@event^0,c
  2679  002762  EC6F  F041         	call	_sm_send_event	;wreg free
  2680                           
  2681                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2682  002766  0E01               	movlw	1
  2683  002768  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2684                           
  2685                           ;sm_Main_MC50.c: 200:                     temp=0;
  2686  00276A  0E00               	movlw	0
  2687  00276C  0100               	movlb	0	; () banked
  2688  00276E  D037               	goto	L4
  2689  002770                     l22999:
  2690                           
  2691                           ; BSR set to: 1
  2692  002770  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2693  002772  A4D8               	btfss	status,2,c
  2694  002774  D00A               	goto	l23007
  2695                           
  2696                           ; BSR set to: 1
  2697  002776  0E14               	movlw	20
  2698  002778  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2699  00277A  D007               	goto	l23007
  2700                           
  2701                           ; BSR set to: 1
  2702                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2703  00277C  0E00               	movlw	0
  2704  00277E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2705  002780  0E10               	movlw	16
  2706  002782  EC27  F048         	call	_SetSegmentValueMain
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;sm_Main_MC50.c: 206:                     temp=1;
  2710  002786  0E01               	movlw	1
  2711  002788  D02A               	goto	L4
  2712  00278A                     l23007:
  2713                           
  2714                           ; BSR set to: 1
  2715  00278A  0100               	movlb	0	; () banked
  2716  00278C  0580               	decf	_temp& (0+255),w,b
  2717  00278E  A4D8               	btfss	status,2,c
  2718  002790  D00E               	goto	l23021
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2722  002792  0E00               	movlw	0
  2723  002794  EC81  F01E         	call	_load_New_Menu
  2724                           
  2725                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2726  002798  0E01               	movlw	1
  2727  00279A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2728                           
  2729                           ;sm_Main_MC50.c: 213:                     temp=0;
  2730  00279C  0E00               	movlw	0
  2731  00279E  0100               	movlb	0	; () banked
  2732  0027A0  6F80               	movwf	_temp& (0+255),b
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2736  0027A2  0E00               	movlw	0
  2737  0027A4  0101               	movlb	1	; () banked
  2738  0027A6  6FEE               	movwf	(_main_stateMachine+1)& (0+255),b
  2739  0027A8  0E01               	movlw	1
  2740  0027AA  6FED               	movwf	_main_stateMachine& (0+255),b
  2741  0027AC  0012               	return	
  2742  0027AE                     l23021:
  2743                           
  2744                           ; BSR set to: 0
  2745  0027AE  0E27               	movlw	39
  2746  0027B0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2747  0027B2  A4D8               	btfss	status,2,c
  2748  0027B4  D007               	goto	l23033
  2749                           
  2750                           ; BSR set to: 0
  2751  0027B6  0E78               	movlw	120
  2752  0027B8  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2753  0027BA  D004               	goto	l23033
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2757  0027BC  0E0D               	movlw	13
  2758  0027BE  EC81  F01E         	call	_load_New_Menu
  2759  0027C2  D7C7               	goto	l22993
  2760  0027C4                     l23033:
  2761                           
  2762                           ; BSR set to: 0
  2763  0027C4  0E27               	movlw	39
  2764  0027C6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2765  0027C8  A4D8               	btfss	status,2,c
  2766  0027CA  D00B               	goto	l23041
  2767                           
  2768                           ; BSR set to: 0
  2769  0027CC  0E14               	movlw	20
  2770  0027CE  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2771  0027D0  D008               	goto	l23041
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2775  0027D2  0E13               	movlw	19
  2776  0027D4  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2777  0027D6  0E05               	movlw	5
  2778  0027D8  EC27  F048         	call	_SetSegmentValueMain
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;sm_Main_MC50.c: 229:                 temp=2;
  2782  0027DC  0E02               	movlw	2
  2783  0027DE                     L4:
  2784  0027DE  6F80               	movwf	_temp& (0+255),b
  2785                           
  2786                           ;sm_Main_MC50.c: 230:             }
  2787  0027E0  D008               	goto	l3097
  2788  0027E2                     l23041:
  2789                           
  2790                           ; BSR set to: 0
  2791  0027E2  0E02               	movlw	2
  2792  0027E4  1980               	xorwf	_temp& (0+255),w,b
  2793  0027E6  A4D8               	btfss	status,2,c
  2794  0027E8  D004               	goto	l3097
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2798  0027EA  0E0C               	movlw	12
  2799  0027EC  EC81  F01E         	call	_load_New_Menu
  2800  0027F0  D6D5               	goto	l22867
  2801  0027F2                     l3097:
  2802                           
  2803                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0 && button_struct.current!=0x27) )
  2804                           
  2805                           ; BSR set to: 0
  2806  0027F2  0101               	movlb	1	; () banked
  2807  0027F4  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2808  0027F6  D005               	goto	u28360
  2809  0027F8  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2810  0027FA  E102               	bnz	u28361
  2811  0027FC  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2812  0027FE  B0D8               	btfsc	status,0,c
  2813  002800                     u28361:
  2814  002800  0012               	return	
  2815  002802                     u28360:
  2816                           
  2817                           ; BSR set to: 1
  2818  002802  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2819  002804  B4D8               	btfsc	status,2,c
  2820  002806  0012               	return	
  2821                           
  2822                           ; BSR set to: 1
  2823  002808  0E27               	movlw	39
  2824  00280A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2825  00280C  B4D8               	btfsc	status,2,c
  2826  00280E  0012               	return	
  2827                           
  2828                           ; BSR set to: 1
  2829                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2830  002810  0E03               	movlw	3
  2831  002812  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2832  002814  A4D8               	btfss	status,2,c
  2833  002816  D011               	goto	l23067
  2834                           
  2835                           ; BSR set to: 1
  2836                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2837  002818  0E12               	movlw	18
  2838  00281A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2839  00281C  0E00               	movlw	0
  2840  00281E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2841  002820  0E0A               	movlw	10
  2842  002822  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2843  002824  0E0C               	movlw	12
  2844  002826  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  2845  00282A                     l23063:
  2846                           
  2847                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2848  00282A  0E00               	movlw	0
  2849  00282C  0101               	movlb	1	; () banked
  2850  00282E  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2851  002830  0E04               	movlw	4
  2852  002832  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2853                           
  2854                           ; BSR set to: 1
  2855                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2856  002834  0E00               	movlw	0
  2857  002836  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2858                           
  2859                           ;sm_Main_MC50.c: 252:                 }
  2860  002838  0012               	return	
  2861  00283A                     l23067:
  2862                           
  2863                           ; BSR set to: 1
  2864  00283A  0E02               	movlw	2
  2865  00283C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2866  00283E  B4D8               	btfsc	status,2,c
  2867  002840  D003               	goto	u28410
  2868                           
  2869                           ; BSR set to: 1
  2870  002842  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2871  002844  A4D8               	btfss	status,2,c
  2872  002846  D00A               	goto	l23077
  2873  002848                     u28410:
  2874                           
  2875                           ; BSR set to: 1
  2876                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2877  002848  0E10               	movlw	16
  2878  00284A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2879  00284C  0E00               	movlw	0
  2880  00284E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2881  002850  0E0A               	movlw	10
  2882  002852  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2883  002854  0E00               	movlw	0
  2884  002856  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  2885  00285A  D7E7               	goto	l23063
  2886  00285C                     l23077:
  2887                           
  2888                           ; BSR set to: 1
  2889  00285C  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2890  00285E  A4D8               	btfss	status,2,c
  2891  002860  D00F               	goto	l23083
  2892                           
  2893                           ; BSR set to: 1
  2894  002862  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
  2895  002864  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2896  002866  A4D8               	btfss	status,2,c
  2897  002868  D00B               	goto	l23083
  2898                           
  2899                           ; BSR set to: 1
  2900                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  2901  00286A  0EED               	movlw	low _main_stateMachine
  2902  00286C  6E12               	movwf	sm_send_event@psm^0,c
  2903  00286E  0E01               	movlw	high _main_stateMachine
  2904  002870  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2905  002872  0E00               	movlw	0
  2906  002874  6E15               	movwf	(sm_send_event@event+1)^0,c
  2907  002876  0E07               	movlw	7
  2908  002878  6E14               	movwf	sm_send_event@event^0,c
  2909  00287A  EC6F  F041         	call	_sm_send_event	;wreg free
  2910                           
  2911                           ;sm_Main_MC50.c: 264:                 }
  2912  00287E  0012               	return	
  2913  002880                     l23083:
  2914                           
  2915                           ; BSR set to: 1
  2916  002880  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2917  002882  A4D8               	btfss	status,2,c
  2918  002884  D074               	goto	l23133
  2919                           
  2920                           ; BSR set to: 1
  2921  002886  0E04               	movlw	4
  2922  002888  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2923  00288A  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2924  00288C  A4D8               	btfss	status,2,c
  2925  00288E  D06F               	goto	l23133
  2926                           
  2927                           ; BSR set to: 1
  2928                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  2929  002890  0100               	movlb	0	; () banked
  2930  002892  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2931  002894  B4D8               	btfsc	status,2,c
  2932  002896  D00B               	goto	u28490
  2933                           
  2934                           ; BSR set to: 0
  2935  002898  0101               	movlb	1	; () banked
  2936  00289A  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2937  00289C  B4D8               	btfsc	status,2,c
  2938  00289E  D007               	goto	u28490
  2939                           
  2940                           ; BSR set to: 1
  2941  0028A0  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  2942  0028A2  B4D8               	btfsc	status,2,c
  2943  0028A4  D013               	goto	u28530
  2944                           
  2945                           ; BSR set to: 1
  2946  0028A6  0E03               	movlw	3
  2947  0028A8  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2948  0028AA  B4D8               	btfsc	status,2,c
  2949  0028AC  D00F               	goto	u28530
  2950  0028AE                     u28490:
  2951  0028AE  0100               	movlb	0	; () banked
  2952  0028B0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2953  0028B2  A4D8               	btfss	status,2,c
  2954  0028B4  D026               	goto	l23111
  2955                           
  2956                           ; BSR set to: 0
  2957  0028B6  0101               	movlb	1	; () banked
  2958  0028B8  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2959  0028BA  A4D8               	btfss	status,2,c
  2960  0028BC  D022               	goto	l23111
  2961                           
  2962                           ; BSR set to: 1
  2963  0028BE  0E02               	movlw	2
  2964  0028C0  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2965  0028C2  B4D8               	btfsc	status,2,c
  2966  0028C4  D01E               	goto	l23111
  2967                           
  2968                           ; BSR set to: 1
  2969  0028C6  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2970  0028C8  B4D8               	btfsc	status,2,c
  2971  0028CA  D01B               	goto	l23111
  2972  0028CC                     u28530:
  2973                           
  2974                           ; BSR set to: 1
  2975                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  2976  0028CC  0E00               	movlw	0
  2977  0028CE  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2978  0028D0  0E0A               	movlw	10
  2979  0028D2  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2980                           
  2981                           ; BSR set to: 1
  2982                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  2983  0028D4  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  2984  0028D6  A4D8               	btfss	status,2,c
  2985  0028D8  D00A               	goto	l23109
  2986                           
  2987                           ; BSR set to: 1
  2988                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  2989  0028DA  0E10               	movlw	16
  2990  0028DC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2991  0028DE  0E00               	movlw	0
  2992  0028E0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2993  0028E2  0E0A               	movlw	10
  2994  0028E4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2995  0028E6  0E0A               	movlw	10
  2996  0028E8  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  2997                           
  2998                           ;sm_Main_MC50.c: 282:                         }
  2999  0028EC  0012               	return	
  3000  0028EE                     l23109:
  3001                           
  3002                           ; BSR set to: 1
  3003                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3004  0028EE  0E0F               	movlw	15
  3005  0028F0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3006  0028F2  0E00               	movlw	0
  3007  0028F4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3008  0028F6  0E0A               	movlw	10
  3009  0028F8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3010  0028FA  0E0A               	movlw	10
  3011  0028FC  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  3012  002900  0012               	return	
  3013  002902                     l23111:
  3014  002902  0100               	movlb	0	; () banked
  3015  002904  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3016  002906  B4D8               	btfsc	status,2,c
  3017  002908  D008               	goto	u28570
  3018                           
  3019                           ; BSR set to: 0
  3020  00290A  0101               	movlb	1	; () banked
  3021  00290C  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3022  00290E  B4D8               	btfsc	status,2,c
  3023  002910  D004               	goto	u28570
  3024                           
  3025                           ; BSR set to: 1
  3026  002912  0E02               	movlw	2
  3027  002914  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3028  002916  B4D8               	btfsc	status,2,c
  3029  002918  D00C               	goto	u28600
  3030  00291A                     u28570:
  3031  00291A  0100               	movlb	0	; () banked
  3032  00291C  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3033  00291E  A4D8               	btfss	status,2,c
  3034  002920  D016               	goto	l23127
  3035                           
  3036                           ; BSR set to: 0
  3037  002922  0101               	movlb	1	; () banked
  3038  002924  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3039  002926  A4D8               	btfss	status,2,c
  3040  002928  D012               	goto	l23127
  3041                           
  3042                           ; BSR set to: 1
  3043  00292A  0E02               	movlw	2
  3044  00292C  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3045  00292E  A4D8               	btfss	status,2,c
  3046  002930  D00E               	goto	l23127
  3047  002932                     u28600:
  3048                           
  3049                           ; BSR set to: 1
  3050                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3051  002932  0E00               	movlw	0
  3052  002934  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3053  002936  0E0A               	movlw	10
  3054  002938  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3055                           
  3056                           ; BSR set to: 1
  3057                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3058  00293A  0E10               	movlw	16
  3059  00293C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3060  00293E  0E00               	movlw	0
  3061  002940  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3062  002942  0E0A               	movlw	10
  3063  002944  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3064  002946  0E0A               	movlw	10
  3065  002948  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  3066                           
  3067                           ;sm_Main_MC50.c: 298:                     }
  3068  00294C  0012               	return	
  3069  00294E                     l23127:
  3070  00294E  0101               	movlb	1	; () banked
  3071  002950  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3072  002952  A4D8               	btfss	status,2,c
  3073  002954  D006               	goto	l23131
  3074                           
  3075                           ; BSR set to: 1
  3076                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3077  002956  0E00               	movlw	0
  3078  002958  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3079  00295A  0E0F               	movlw	15
  3080  00295C  EC27  F048         	call	_SetSegmentValueMain
  3081                           
  3082                           ;sm_Main_MC50.c: 304:                     }
  3083  002960  0012               	return	
  3084  002962                     l23131:
  3085                           
  3086                           ; BSR set to: 1
  3087                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3088  002962  0E18               	movlw	24
  3089  002964  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3090  002966  0E18               	movlw	24
  3091  002968  EC27  F048         	call	_SetSegmentValueMain
  3092  00296C  0012               	return	
  3093  00296E                     l23133:
  3094                           
  3095                           ; BSR set to: 1
  3096                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3097  00296E  0E18               	movlw	24
  3098  002970  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3099  002972  0E18               	movlw	24
  3100  002974  EC27  F048         	call	_SetSegmentValueMain
  3101  002978  0012               	return	
  3102  00297A                     l23137:
  3103  00297A  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3104  00297E  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3105  002982  50DF               	movf	indf2,w,c
  3106  002984  0100               	movlb	0	; () banked
  3107  002986  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3108  002988  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3109                           
  3110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3111                           ; Switch size 1, requested type "simple"
  3112                           ; Number of cases is 1, Range of values is 0 to 0
  3113                           ; switch strategies available:
  3114                           ; Name         Instructions Cycles
  3115                           ; simple_byte            4     3 (average)
  3116                           ;	Chosen strategy is simple_byte
  3117  00298A  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3118  00298C  0A00               	xorlw	0	; case 0
  3119  00298E  A4D8               	btfss	status,2,c
  3120  002990  0012               	return	
  3121                           
  3122                           ; BSR set to: 0
  3123                           ; Switch size 1, requested type "simple"
  3124                           ; Number of cases is 3, Range of values is 0 to 2
  3125                           ; switch strategies available:
  3126                           ; Name         Instructions Cycles
  3127                           ; simple_byte           10     6 (average)
  3128                           ;	Chosen strategy is simple_byte
  3129  002992  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3130  002994  0A00               	xorlw	0	; case 0
  3131  002996  B4D8               	btfsc	status,2,c
  3132  002998  D5F8               	goto	l22861
  3133  00299A  0A01               	xorlw	1	; case 1
  3134  00299C  B4D8               	btfsc	status,2,c
  3135  00299E  D69A               	goto	l22959
  3136  0029A0  0A03               	xorlw	3	; case 2
  3137  0029A2  A4D8               	btfss	status,2,c
  3138  0029A4  0012               	return	
  3139  0029A6  D69D               	goto	l22961
  3140  0029A8                     __end_of_sm_execute_main:
  3141                           	callstack 0
  3142                           
  3143 ;; *************** function _sm_execute_menuConfiguration *****************
  3144 ;; Defined at:
  3145 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  psm             2   17[BANK0 ] PTR struct .
  3148 ;;		 -> menuConfiguration_stateMachine(11), 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 3F/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3160 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3162 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3163 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;Total ram usage:        4 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 15
  3167 ;; This function calls:
  3168 ;;		_ClearFlag_rfCMD
  3169 ;;		_ResetDefaultMemory
  3170 ;;		_SaveNVM_VarSystem
  3171 ;;		_SetSegmentValueIntermitentMain
  3172 ;;		_SetSegmentValueMain
  3173 ;;		___lbdiv
  3174 ;;		___lldiv
  3175 ;;		___lmul
  3176 ;;		___lwdiv
  3177 ;;		_controlLearnDigit
  3178 ;;		_controlSaveRemote
  3179 ;;		_controlSelectRemote
  3180 ;;		_load_New_Menu
  3181 ;;		_setValueToEdit
  3182 ;;		_sm_send_event
  3183 ;; This function is called by:
  3184 ;;		_sm_execute_main
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text2
  3189  000F22                     __ptext2:
  3190                           	callstack 0
  3191  000F22                     _sm_execute_menuConfiguration:
  3192                           	callstack 14
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3196                           
  3197                           ;incstack = 0
  3198  000F22  D0A2               	goto	l22271
  3199  000F24                     l22213:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3203  000F24  EE20 F004          	lfsr	2,4
  3204  000F28  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3205  000F2A  26D9               	addwf	fsr2l,f,c
  3206  000F2C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3207  000F2E  22DA               	addwfc	fsr2h,f,c
  3208  000F30  04DE               	decf	postinc2,w,c
  3209  000F32  10DE               	iorwf	postinc2,w,c
  3210  000F34  A4D8               	btfss	status,2,c
  3211  000F36  D006               	goto	l22217
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3215  000F38  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3216  000F3C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3217  000F40  0E01               	movlw	1
  3218  000F42  D04C               	goto	L9
  3219  000F44                     l22217:
  3220                           
  3221                           ; BSR set to: 0
  3222  000F44  EE20 F004          	lfsr	2,4
  3223  000F48  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3224  000F4A  26D9               	addwf	fsr2l,f,c
  3225  000F4C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3226  000F4E  22DA               	addwfc	fsr2h,f,c
  3227  000F50  0E05               	movlw	5
  3228  000F52  18DE               	xorwf	postinc2,w,c
  3229  000F54  10DE               	iorwf	postinc2,w,c
  3230  000F56  A4D8               	btfss	status,2,c
  3231  000F58  D006               	goto	l22221
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3235  000F5A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3236  000F5E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3237  000F62  0E03               	movlw	3
  3238  000F64  D03B               	goto	L9
  3239  000F66                     l22221:
  3240                           
  3241                           ; BSR set to: 0
  3242  000F66  EE20 F004          	lfsr	2,4
  3243  000F6A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3244  000F6C  26D9               	addwf	fsr2l,f,c
  3245  000F6E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3246  000F70  22DA               	addwfc	fsr2h,f,c
  3247  000F72  0E08               	movlw	8
  3248  000F74  18DE               	xorwf	postinc2,w,c
  3249  000F76  10DE               	iorwf	postinc2,w,c
  3250  000F78  A4D8               	btfss	status,2,c
  3251  000F7A  D006               	goto	l22225
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3255  000F7C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3256  000F80  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3257  000F84  0E04               	movlw	4
  3258  000F86  D02A               	goto	L9
  3259  000F88                     l22225:
  3260                           
  3261                           ; BSR set to: 0
  3262  000F88  EE20 F004          	lfsr	2,4
  3263  000F8C  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3264  000F8E  26D9               	addwf	fsr2l,f,c
  3265  000F90  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3266  000F92  22DA               	addwfc	fsr2h,f,c
  3267  000F94  0E14               	movlw	20
  3268  000F96  18DE               	xorwf	postinc2,w,c
  3269  000F98  10DE               	iorwf	postinc2,w,c
  3270  000F9A  A4D8               	btfss	status,2,c
  3271  000F9C  D087               	goto	l22273
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3275  000F9E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3276  000FA2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3277  000FA6  0E06               	movlw	6
  3278  000FA8  D019               	goto	L9
  3279  000FAA                     l22229:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3283  000FAA  EE20 F004          	lfsr	2,4
  3284  000FAE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3285  000FB0  26D9               	addwf	fsr2l,f,c
  3286  000FB2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3287  000FB4  22DA               	addwfc	fsr2h,f,c
  3288  000FB6  0E02               	movlw	2
  3289  000FB8  18DE               	xorwf	postinc2,w,c
  3290  000FBA  10DE               	iorwf	postinc2,w,c
  3291  000FBC  A4D8               	btfss	status,2,c
  3292  000FBE  D006               	goto	l22233
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3296  000FC0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3297  000FC4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3298  000FC8  0E02               	movlw	2
  3299  000FCA  D008               	goto	L9
  3300  000FCC                     l22233:
  3301                           
  3302                           ; BSR set to: 0
  3303  000FCC  EE20 F004          	lfsr	2,4
  3304  000FD0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3305  000FD2  26D9               	addwf	fsr2l,f,c
  3306  000FD4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3307  000FD6  22DA               	addwfc	fsr2h,f,c
  3308  000FD8  0E03               	movlw	3
  3309  000FDA  D03B               	goto	L123
  3310  000FDC                     L9:
  3311  000FDC  6EDE               	movwf	postinc2,c
  3312  000FDE  0E00               	movlw	0
  3313  000FE0  6EDD               	movwf	postdec2,c
  3314  000FE2  D064               	goto	l22273
  3315  000FE4                     l22241:
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3319  000FE4  EE20 F004          	lfsr	2,4
  3320  000FE8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3321  000FEA  26D9               	addwf	fsr2l,f,c
  3322  000FEC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3323  000FEE  22DA               	addwfc	fsr2h,f,c
  3324  000FF0  0E04               	movlw	4
  3325  000FF2  18DE               	xorwf	postinc2,w,c
  3326  000FF4  10DE               	iorwf	postinc2,w,c
  3327  000FF6  A4D8               	btfss	status,2,c
  3328  000FF8  D7E9               	goto	l22233
  3329  000FFA  D02F               	goto	u26830
  3330  000FFC                     l22249:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3334  000FFC  EE20 F004          	lfsr	2,4
  3335  001000  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3336  001002  26D9               	addwf	fsr2l,f,c
  3337  001004  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3338  001006  22DA               	addwfc	fsr2h,f,c
  3339  001008  0E08               	movlw	8
  3340  00100A  18DE               	xorwf	postinc2,w,c
  3341  00100C  10DE               	iorwf	postinc2,w,c
  3342  00100E  A4D8               	btfss	status,2,c
  3343  001010  D7DD               	goto	l22233
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3347  001012  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3348  001016  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3349  00101A  0E05               	movlw	5
  3350  00101C  D7DF               	goto	L9
  3351  00101E                     l22257:
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3355  00101E  EE20 F004          	lfsr	2,4
  3356  001022  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3357  001024  26D9               	addwf	fsr2l,f,c
  3358  001026  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3359  001028  22DA               	addwfc	fsr2h,f,c
  3360  00102A  0E09               	movlw	9
  3361  00102C  18DE               	xorwf	postinc2,w,c
  3362  00102E  10DE               	iorwf	postinc2,w,c
  3363  001030  A4D8               	btfss	status,2,c
  3364  001032  D008               	goto	l22265
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3368  001034  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3369  001038  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3370  00103C  0E04               	movlw	4
  3371  00103E  6EDE               	movwf	postinc2,c
  3372  001040  0E00               	movlw	0
  3373  001042  6EDD               	movwf	postdec2,c
  3374  001044                     l22265:
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3378  001044  EE20 F004          	lfsr	2,4
  3379  001048  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3380  00104A  26D9               	addwf	fsr2l,f,c
  3381  00104C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3382  00104E  22DA               	addwfc	fsr2h,f,c
  3383  001050  0E04               	movlw	4
  3384  001052                     L123:
  3385  001052  18DE               	xorwf	postinc2,w,c
  3386  001054  10DE               	iorwf	postinc2,w,c
  3387  001056  A4D8               	btfss	status,2,c
  3388  001058  D029               	goto	l22273
  3389  00105A                     u26830:
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3393  00105A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3394  00105E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3395  001062  0E00               	movlw	0
  3396  001064  D7BB               	goto	L9
  3397  001066                     l3228:
  3398                           
  3399                           ; BSR set to: 0
  3400  001066  D7FF               	goto	l3228
  3401  001068                     l22271:
  3402                           
  3403                           ; BSR set to: 0
  3404  001068  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3405  00106C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3406  001070  50DF               	movf	indf2,w,c
  3407  001072  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3408  001074  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3409                           
  3410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3411                           ; Switch size 1, requested type "simple"
  3412                           ; Number of cases is 1, Range of values is 0 to 0
  3413                           ; switch strategies available:
  3414                           ; Name         Instructions Cycles
  3415                           ; simple_byte            4     3 (average)
  3416                           ;	Chosen strategy is simple_byte
  3417  001076  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3418  001078  0A00               	xorlw	0	; case 0
  3419  00107A  A4D8               	btfss	status,2,c
  3420  00107C  D7F4               	goto	l3228
  3421                           
  3422                           ; BSR set to: 0
  3423                           ; Switch size 1, requested type "simple"
  3424                           ; Number of cases is 7, Range of values is 0 to 6
  3425                           ; switch strategies available:
  3426                           ; Name         Instructions Cycles
  3427                           ; simple_byte           22    12 (average)
  3428                           ;	Chosen strategy is simple_byte
  3429  00107E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3430  001080  0A00               	xorlw	0	; case 0
  3431  001082  B4D8               	btfsc	status,2,c
  3432  001084  D74F               	goto	l22213
  3433  001086  0A01               	xorlw	1	; case 1
  3434  001088  B4D8               	btfsc	status,2,c
  3435  00108A  D78F               	goto	l22229
  3436  00108C  0A03               	xorlw	3	; case 2
  3437  00108E  B4D8               	btfsc	status,2,c
  3438  001090  D7D9               	goto	l22265
  3439  001092  0A01               	xorlw	1	; case 3
  3440  001094  B4D8               	btfsc	status,2,c
  3441  001096  D7A6               	goto	l22241
  3442  001098  0A07               	xorlw	7	; case 4
  3443  00109A  B4D8               	btfsc	status,2,c
  3444  00109C  D7AF               	goto	l22249
  3445  00109E  0A01               	xorlw	1	; case 5
  3446  0010A0  B4D8               	btfsc	status,2,c
  3447  0010A2  D7BD               	goto	l22257
  3448  0010A4  0A03               	xorlw	3	; case 6
  3449  0010A6  B4D8               	btfsc	status,2,c
  3450  0010A8  D7CD               	goto	l22265
  3451  0010AA  D7DD               	goto	l3228
  3452  0010AC                     l22273:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3456  0010AC  0EBD               	movlw	low _menuConfiguration_stateMachine
  3457  0010AE  6E12               	movwf	sm_send_event@psm^0,c
  3458  0010B0  0E02               	movlw	high _menuConfiguration_stateMachine
  3459  0010B2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3460  0010B4  0E00               	movlw	0
  3461  0010B6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3462  0010B8  0E00               	movlw	0
  3463  0010BA  6E14               	movwf	sm_send_event@event^0,c
  3464  0010BC  EC6F  F041         	call	_sm_send_event	;wreg free
  3465                           
  3466                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3467  0010C0  D3BF               	goto	l22585
  3468  0010C2                     l22275:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3472  0010C2  0E06               	movlw	6
  3473  0010C4  0101               	movlb	1	; () banked
  3474  0010C6  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3475  0010C8  A4D8               	btfss	status,2,c
  3476  0010CA  D02F               	goto	l22285
  3477                           
  3478                           ; BSR set to: 1
  3479                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3480  0010CC  0E00               	movlw	0
  3481  0010CE  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3482  0010D0  0EC8               	movlw	200
  3483  0010D2  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3484                           
  3485                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3486  0010D4  0E01               	movlw	1
  3487  0010D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3488                           
  3489                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3490  0010D8  0E00               	movlw	0
  3491  0010DA  6F68               	movwf	(_menu_st+23)& (0+255),b
  3492                           
  3493                           ; BSR set to: 1
  3494                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3495  0010DC  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3496  0010E0  5166               	movf	(_menu_st+21)& (0+255),w,b
  3497  0010E2  ECCA  F00F         	call	_setValueToEdit
  3498  0010E6  0900               	iorlw	0
  3499  0010E8  B4D8               	btfsc	status,2,c
  3500  0010EA  0012               	return	
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3504  0010EC  0EBD               	movlw	low _menuConfiguration_stateMachine
  3505  0010EE  6E12               	movwf	sm_send_event@psm^0,c
  3506  0010F0  0E02               	movlw	high _menuConfiguration_stateMachine
  3507  0010F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3508  0010F4  0E00               	movlw	0
  3509  0010F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3510  0010F8  0E08               	movlw	8
  3511  0010FA  6E14               	movwf	sm_send_event@event^0,c
  3512  0010FC  EC6F  F041         	call	_sm_send_event	;wreg free
  3513                           
  3514                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3515  001100  0E0A               	movlw	10
  3516  001102  6E10               	movwf	___lbdiv@divisor^0,c
  3517  001104  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3518  001106  EC33  F045         	call	___lbdiv
  3519  00110A  0DF6               	mullw	246
  3520  00110C  50F3               	movf	243,w,c
  3521  00110E  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3522  001110  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3523  001112  0E00               	movlw	0
  3524  001114  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3525  001116  0E14               	movlw	20
  3526  001118  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3527  00111A  0E0A               	movlw	10
  3528  00111C  6E10               	movwf	___lbdiv@divisor^0,c
  3529  00111E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3530  001120  EC33  F045         	call	___lbdiv
  3531  001124  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  3532  001128  0012               	return	
  3533  00112A                     l22285:
  3534                           
  3535                           ; BSR set to: 1
  3536  00112A  0E05               	movlw	5
  3537  00112C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3538  00112E  A4D8               	btfss	status,2,c
  3539  001130  D02F               	goto	l22295
  3540                           
  3541                           ; BSR set to: 1
  3542                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3543  001132  0E00               	movlw	0
  3544  001134  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3545  001136  0EC8               	movlw	200
  3546  001138  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3547                           
  3548                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3549  00113A  0E01               	movlw	1
  3550  00113C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3551                           
  3552                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3553  00113E  0E01               	movlw	1
  3554  001140  6F68               	movwf	(_menu_st+23)& (0+255),b
  3555                           
  3556                           ; BSR set to: 1
  3557                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3558  001142  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3559  001146  5166               	movf	(_menu_st+21)& (0+255),w,b
  3560  001148  ECCA  F00F         	call	_setValueToEdit
  3561  00114C  0900               	iorlw	0
  3562  00114E  B4D8               	btfsc	status,2,c
  3563  001150  0012               	return	
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3567  001152  0EBD               	movlw	low _menuConfiguration_stateMachine
  3568  001154  6E12               	movwf	sm_send_event@psm^0,c
  3569  001156  0E02               	movlw	high _menuConfiguration_stateMachine
  3570  001158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3571  00115A  0E00               	movlw	0
  3572  00115C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3573  00115E  0E08               	movlw	8
  3574  001160  6E14               	movwf	sm_send_event@event^0,c
  3575  001162  EC6F  F041         	call	_sm_send_event	;wreg free
  3576                           
  3577                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3578  001166  0E0A               	movlw	10
  3579  001168  6E10               	movwf	___lbdiv@divisor^0,c
  3580  00116A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3581  00116C  EC33  F045         	call	___lbdiv
  3582  001170  0DF6               	mullw	246
  3583  001172  50F3               	movf	243,w,c
  3584  001174  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3585  001176  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3586  001178  0E00               	movlw	0
  3587  00117A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3588  00117C  0E14               	movlw	20
  3589  00117E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3590  001180  0E0A               	movlw	10
  3591  001182  6E10               	movwf	___lbdiv@divisor^0,c
  3592  001184  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3593  001186  EC33  F045         	call	___lbdiv
  3594  00118A  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  3595                           
  3596                           ; BSR set to: 1
  3597                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3598                           
  3599                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3600  00118E  0012               	return	
  3601  001190                     l22295:
  3602                           
  3603                           ; BSR set to: 1
  3604  001190  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3605  001192  A4D8               	btfss	status,2,c
  3606  001194  D023               	goto	l22307
  3607                           
  3608                           ; BSR set to: 1
  3609                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3610  001196  0E00               	movlw	0
  3611  001198  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3612  00119A  0E64               	movlw	100
  3613  00119C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3614                           
  3615                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3616  00119E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3617  0011A0  A4D8               	btfss	status,2,c
  3618  0011A2  D003               	goto	l22301
  3619                           
  3620                           ; BSR set to: 1
  3621                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3622  0011A4  0567               	decf	(_menu_st+22)& (0+255),w,b
  3623  0011A6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3624                           
  3625                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3626  0011A8  D001               	goto	l22303
  3627  0011AA                     l22301:
  3628                           
  3629                           ; BSR set to: 1
  3630                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3631  0011AA  0768               	decf	(_menu_st+23)& (0+255),f,b
  3632  0011AC                     l22303:
  3633                           
  3634                           ; BSR set to: 1
  3635                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3636  0011AC  5168               	movf	(_menu_st+23)& (0+255),w,b
  3637  0011AE  0D02               	mullw	2
  3638  0011B0  0E52               	movlw	low (_menu_st+1)
  3639  0011B2  24F3               	addwf	243,w,c
  3640  0011B4  6ED9               	movwf	fsr2l,c
  3641  0011B6  0E01               	movlw	high (_menu_st+1)
  3642  0011B8  20F4               	addwfc	prodh,w,c
  3643  0011BA  6EDA               	movwf	fsr2h,c
  3644  0011BC  50DF               	movf	indf2,w,c
  3645  0011BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3646  0011C0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3647  0011C2  0D02               	mullw	2
  3648  0011C4  0E51               	movlw	low _menu_st
  3649  0011C6  24F3               	addwf	243,w,c
  3650  0011C8  6ED9               	movwf	fsr2l,c
  3651  0011CA  0E01               	movlw	high _menu_st
  3652  0011CC  20F4               	addwfc	prodh,w,c
  3653  0011CE  6EDA               	movwf	fsr2h,c
  3654  0011D0  50DF               	movf	indf2,w,c
  3655  0011D2  EC27  F048         	call	_SetSegmentValueMain
  3656  0011D6                     l22305:
  3657                           
  3658                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3659  0011D6  0E01               	movlw	1
  3660  0011D8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3661                           
  3662                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3663  0011DA  0012               	return	
  3664  0011DC                     l22307:
  3665                           
  3666                           ; BSR set to: 1
  3667  0011DC  0E17               	movlw	23
  3668  0011DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3669  0011E0  A4D8               	btfss	status,2,c
  3670  0011E2  D021               	goto	l22321
  3671                           
  3672                           ; BSR set to: 1
  3673                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3674  0011E4  0E00               	movlw	0
  3675  0011E6  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3676  0011E8  0E64               	movlw	100
  3677  0011EA  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3678                           
  3679                           ; BSR set to: 1
  3680                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3681  0011EC  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3682                           
  3683                           ; BSR set to: 1
  3684                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3685  0011EE  5167               	movf	(_menu_st+22)& (0+255),w,b
  3686  0011F0  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3687  0011F2  A0D8               	btfss	status,0,c
  3688  0011F4  D002               	goto	l22317
  3689                           
  3690                           ; BSR set to: 1
  3691                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3692  0011F6  0E00               	movlw	0
  3693  0011F8  6F68               	movwf	(_menu_st+23)& (0+255),b
  3694  0011FA                     l22317:
  3695                           
  3696                           ; BSR set to: 1
  3697                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3698  0011FA  5168               	movf	(_menu_st+23)& (0+255),w,b
  3699  0011FC  0D02               	mullw	2
  3700  0011FE  0E52               	movlw	low (_menu_st+1)
  3701  001200  24F3               	addwf	243,w,c
  3702  001202  6ED9               	movwf	fsr2l,c
  3703  001204  0E01               	movlw	high (_menu_st+1)
  3704  001206  20F4               	addwfc	prodh,w,c
  3705  001208  6EDA               	movwf	fsr2h,c
  3706  00120A  50DF               	movf	indf2,w,c
  3707  00120C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3708  00120E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3709  001210  0D02               	mullw	2
  3710  001212  0E51               	movlw	low _menu_st
  3711  001214  24F3               	addwf	243,w,c
  3712  001216  6ED9               	movwf	fsr2l,c
  3713  001218  0E01               	movlw	high _menu_st
  3714  00121A  20F4               	addwfc	prodh,w,c
  3715  00121C  6EDA               	movwf	fsr2h,c
  3716  00121E  50DF               	movf	indf2,w,c
  3717  001220  EC27  F048         	call	_SetSegmentValueMain
  3718  001224  D7D8               	goto	l22305
  3719  001226                     l22321:
  3720                           
  3721                           ; BSR set to: 1
  3722  001226  0E0C               	movlw	12
  3723  001228  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3724  00122A  D09A               	goto	l22377
  3725                           
  3726                           ; BSR set to: 1
  3727                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0 && button_struct.timer>(( 500/50)) )
  3728  00122C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3729  00122E  A4D8               	btfss	status,2,c
  3730  001230  D053               	goto	l22343
  3731                           
  3732                           ; BSR set to: 1
  3733  001232  0E0A               	movlw	10
  3734  001234  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3735  001236  D050               	goto	l22343
  3736                           
  3737                           ; BSR set to: 1
  3738                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3739  001238  0E00               	movlw	0
  3740  00123A  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3741  00123C  0E64               	movlw	100
  3742  00123E  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3743                           
  3744                           ; BSR set to: 1
  3745                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3746  001240  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3747  001244  5166               	movf	(_menu_st+21)& (0+255),w,b
  3748  001246  ECCA  F00F         	call	_setValueToEdit
  3749  00124A  0900               	iorlw	0
  3750  00124C  B4D8               	btfsc	status,2,c
  3751  00124E  D7C3               	goto	l22305
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3755  001250  0EBD               	movlw	low _menuConfiguration_stateMachine
  3756  001252  6E12               	movwf	sm_send_event@psm^0,c
  3757  001254  0E02               	movlw	high _menuConfiguration_stateMachine
  3758  001256  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3759  001258  0E00               	movlw	0
  3760  00125A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3761  00125C  0E01               	movlw	1
  3762  00125E  6E14               	movwf	sm_send_event@event^0,c
  3763  001260  EC6F  F041         	call	_sm_send_event	;wreg free
  3764                           
  3765                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3766  001264  0E98               	movlw	_var_sys_NVM& (0+255)
  3767  001266  0F1C               	addlw	28
  3768  001268  0100               	movlb	0	; () banked
  3769  00126A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3770  00126C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3771  00126E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3772  001270  E101               	bnz	u26965
  3773  001272  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3774  001274                     u26965:
  3775  001274  B4D8               	btfsc	status,2,c
  3776  001276  D009               	goto	u26970
  3777                           
  3778                           ; BSR set to: 0
  3779  001278  0E98               	movlw	_var_sys_NVM& (0+255)
  3780  00127A  0F1B               	addlw	27
  3781  00127C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3782  00127E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3783  001280  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3784  001282  E101               	bnz	u26975
  3785  001284  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3786  001286                     u26975:
  3787  001286  A4D8               	btfss	status,2,c
  3788  001288  D016               	goto	l22339
  3789  00128A                     u26970:
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3793  00128A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3794  00128C  0D02               	mullw	2
  3795  00128E  0E52               	movlw	low (_menu_st+1)
  3796  001290  24F3               	addwf	243,w,c
  3797  001292  6ED9               	movwf	fsr2l,c
  3798  001294  0E01               	movlw	high (_menu_st+1)
  3799  001296  20F4               	addwfc	prodh,w,c
  3800  001298  6EDA               	movwf	fsr2h,c
  3801  00129A  50DF               	movf	indf2,w,c
  3802  00129C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3803  00129E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3804  0012A0  0D02               	mullw	2
  3805  0012A2  0E51               	movlw	low _menu_st
  3806  0012A4  24F3               	addwf	243,w,c
  3807  0012A6  6ED9               	movwf	fsr2l,c
  3808  0012A8  0E01               	movlw	high _menu_st
  3809  0012AA  20F4               	addwfc	prodh,w,c
  3810  0012AC  6EDA               	movwf	fsr2h,c
  3811  0012AE  50DF               	movf	indf2,w,c
  3812  0012B0  EC27  F048         	call	_SetSegmentValueMain
  3813                           
  3814                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3815  0012B4  D790               	goto	l22305
  3816  0012B6                     l22339:
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3820  0012B6  0E0A               	movlw	10
  3821  0012B8  6E10               	movwf	___lbdiv@divisor^0,c
  3822  0012BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3823  0012BC  EC33  F045         	call	___lbdiv
  3824  0012C0  0DF6               	mullw	246
  3825  0012C2  50F3               	movf	243,w,c
  3826  0012C4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3827  0012C6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3828  0012C8  0E0A               	movlw	10
  3829  0012CA  6E10               	movwf	___lbdiv@divisor^0,c
  3830  0012CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3831  0012CE  EC33  F045         	call	___lbdiv
  3832  0012D2  EC27  F048         	call	_SetSegmentValueMain
  3833  0012D6  D77F               	goto	l22305
  3834  0012D8                     l22343:
  3835                           
  3836                           ; BSR set to: 1
  3837  0012D8  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3838  0012DA  D008               	goto	u26990
  3839  0012DC  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3840  0012DE  E103               	bnz	u26980
  3841  0012E0  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3842  0012E2  A0D8               	btfss	status,0,c
  3843  0012E4  D003               	goto	u26990
  3844  0012E6                     u26980:
  3845                           
  3846                           ; BSR set to: 1
  3847  0012E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3848  0012E8  A4D8               	btfss	status,2,c
  3849  0012EA  D01E               	goto	l22361
  3850  0012EC                     u26990:
  3851                           
  3852                           ; BSR set to: 1
  3853  0012EC  0E02               	movlw	2
  3854  0012EE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3855  0012F0  D01B               	goto	l22361
  3856                           
  3857                           ; BSR set to: 1
  3858                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3859  0012F2  0E00               	movlw	0
  3860  0012F4  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3861  0012F6  0E00               	movlw	0
  3862  0012F8  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3863                           
  3864                           ; BSR set to: 1
  3865                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3866  0012FA  0EED               	movlw	low _main_stateMachine
  3867  0012FC  6E12               	movwf	sm_send_event@psm^0,c
  3868  0012FE  0E01               	movlw	high _main_stateMachine
  3869  001300  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3870  001302  0E00               	movlw	0
  3871  001304  6E15               	movwf	(sm_send_event@event+1)^0,c
  3872  001306  0E07               	movlw	7
  3873  001308  6E14               	movwf	sm_send_event@event^0,c
  3874  00130A  EC6F  F041         	call	_sm_send_event	;wreg free
  3875                           
  3876                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3877  00130E  0E18               	movlw	24
  3878  001310  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3879  001312  0E18               	movlw	24
  3880  001314  EC27  F048         	call	_SetSegmentValueMain
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3884  001318  0E00               	movlw	0
  3885  00131A  0101               	movlb	1	; () banked
  3886  00131C  6F69               	movwf	(_menu_st+24)& (0+255),b
  3887                           
  3888                           ; BSR set to: 1
  3889                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  3890  00131E  0E01               	movlw	1
  3891  001320  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3892                           
  3893                           ; BSR set to: 1
  3894                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  3895  001322  EC78  F049         	call	_ClearFlag_rfCMD	;wreg free
  3896                           
  3897                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  3898  001326  0012               	return	
  3899  001328                     l22361:
  3900                           
  3901                           ; BSR set to: 1
  3902  001328  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3903  00132A  D008               	goto	u27020
  3904  00132C  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3905  00132E  E103               	bnz	u27010
  3906  001330  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3907  001332  A0D8               	btfss	status,0,c
  3908  001334  D003               	goto	u27020
  3909  001336                     u27010:
  3910                           
  3911                           ; BSR set to: 1
  3912  001336  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3913  001338  A4D8               	btfss	status,2,c
  3914  00133A  D004               	goto	l22369
  3915  00133C                     u27020:
  3916                           
  3917                           ; BSR set to: 1
  3918                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3919  00133C  5165               	movf	(_menu_st+20)& (0+255),w,b
  3920  00133E  EC81  F01E         	call	_load_New_Menu
  3921  001342  D749               	goto	l22305
  3922  001344                     l22369:
  3923                           
  3924                           ; BSR set to: 1
  3925  001344  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3926  001346  D005               	goto	u27030
  3927  001348  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3928  00134A  E102               	bnz	u27031
  3929  00134C  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3930  00134E  B0D8               	btfsc	status,0,c
  3931  001350                     u27031:
  3932  001350  0012               	return	
  3933  001352                     u27030:
  3934                           
  3935                           ; BSR set to: 1
  3936  001352  0E01               	movlw	1
  3937  001354  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  3938  001356  0012               	return	
  3939                           
  3940                           ; BSR set to: 1
  3941                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3942  001358  5165               	movf	(_menu_st+20)& (0+255),w,b
  3943  00135A  EC81  F01E         	call	_load_New_Menu
  3944  00135E  D73B               	goto	l22305
  3945  001360                     l22377:
  3946                           
  3947                           ; BSR set to: 1
  3948  001360  0E27               	movlw	39
  3949  001362  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3950  001364  A4D8               	btfss	status,2,c
  3951  001366  D032               	goto	l22393
  3952                           
  3953                           ; BSR set to: 1
  3954  001368  0E0A               	movlw	10
  3955  00136A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3956  00136C  D02F               	goto	l22393
  3957                           
  3958                           ; BSR set to: 1
  3959  00136E  0E0D               	movlw	13
  3960  001370  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  3961  001372  B4D8               	btfsc	status,2,c
  3962  001374  D02B               	goto	l22393
  3963                           
  3964                           ; BSR set to: 1
  3965                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  3966  001376  0E00               	movlw	0
  3967  001378  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3968  00137A  0E64               	movlw	100
  3969  00137C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3970                           
  3971                           ; BSR set to: 1
  3972                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3973  00137E  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3974  001382  5166               	movf	(_menu_st+21)& (0+255),w,b
  3975  001384  ECCA  F00F         	call	_setValueToEdit
  3976  001388  0900               	iorlw	0
  3977  00138A  B4D8               	btfsc	status,2,c
  3978  00138C  D724               	goto	l22305
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  3982  00138E  0EBD               	movlw	low _menuConfiguration_stateMachine
  3983  001390  6E12               	movwf	sm_send_event@psm^0,c
  3984  001392  0E02               	movlw	high _menuConfiguration_stateMachine
  3985  001394  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3986  001396  0E00               	movlw	0
  3987  001398  6E15               	movwf	(sm_send_event@event+1)^0,c
  3988  00139A  0E08               	movlw	8
  3989  00139C  6E14               	movwf	sm_send_event@event^0,c
  3990  00139E  EC6F  F041         	call	_sm_send_event	;wreg free
  3991                           
  3992                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  3993  0013A2  0E0A               	movlw	10
  3994  0013A4  6E10               	movwf	___lbdiv@divisor^0,c
  3995  0013A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3996  0013A8  EC33  F045         	call	___lbdiv
  3997  0013AC  0DF6               	mullw	246
  3998  0013AE  50F3               	movf	243,w,c
  3999  0013B0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4000  0013B2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4001  0013B4  0E00               	movlw	0
  4002  0013B6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4003  0013B8  0E14               	movlw	20
  4004  0013BA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4005  0013BC  0E0A               	movlw	10
  4006  0013BE  6E10               	movwf	___lbdiv@divisor^0,c
  4007  0013C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4008  0013C2  EC33  F045         	call	___lbdiv
  4009  0013C6  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  4010  0013CA  D705               	goto	l22305
  4011  0013CC                     l22393:
  4012                           
  4013                           ; BSR set to: 1
  4014  0013CC  0E0D               	movlw	13
  4015  0013CE  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4016  0013D0  A4D8               	btfss	status,2,c
  4017  0013D2  D027               	goto	l22411
  4018                           
  4019                           ; BSR set to: 1
  4020  0013D4  51A6               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4021  0013D6  11A7               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4022  0013D8  A4D8               	btfss	status,2,c
  4023  0013DA  D023               	goto	l22411
  4024                           
  4025                           ; BSR set to: 1
  4026                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4027  0013DC  0E00               	movlw	0
  4028  0013DE  0100               	movlb	0	; () banked
  4029  0013E0  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4030                           
  4031                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4032  0013E2  0E00               	movlw	0
  4033  0013E4  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4034                           
  4035                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4036  0013E6  0E00               	movlw	0
  4037  0013E8  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4041  0013EA  0E02               	movlw	2
  4042  0013EC  EC50  F045         	call	_SaveNVM_VarSystem
  4043                           
  4044                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4045  0013F0  0EED               	movlw	low _main_stateMachine
  4046  0013F2  6E12               	movwf	sm_send_event@psm^0,c
  4047  0013F4  0E01               	movlw	high _main_stateMachine
  4048  0013F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4049  0013F8  0E00               	movlw	0
  4050  0013FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4051  0013FC  0E07               	movlw	7
  4052  0013FE  6E14               	movwf	sm_send_event@event^0,c
  4053  001400  EC6F  F041         	call	_sm_send_event	;wreg free
  4054                           
  4055                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4056  001404  0E18               	movlw	24
  4057  001406  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4058  001408  0E18               	movlw	24
  4059  00140A  EC27  F048         	call	_SetSegmentValueMain
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4063  00140E  0E01               	movlw	1
  4064  001410  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4065  001412                     l22407:
  4066                           
  4067                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4068  001412  EC78  F049         	call	_ClearFlag_rfCMD	;wreg free
  4069  001416                     l22409:
  4070                           
  4071                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4072  001416  0E00               	movlw	0
  4073  001418  0101               	movlb	1	; () banked
  4074  00141A  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4075  00141C  0E00               	movlw	0
  4076  00141E  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4077                           
  4078                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4079  001420  0012               	return	
  4080  001422                     l22411:
  4081                           
  4082                           ; BSR set to: 1
  4083  001422  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4084  001424  D008               	goto	u27120
  4085  001426  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4086  001428  E103               	bnz	u27110
  4087  00142A  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4088  00142C  A0D8               	btfss	status,0,c
  4089  00142E  D003               	goto	u27120
  4090  001430                     u27110:
  4091                           
  4092                           ; BSR set to: 1
  4093  001430  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4094  001432  A4D8               	btfss	status,2,c
  4095  001434  0012               	return	
  4096  001436                     u27120:
  4097                           
  4098                           ; BSR set to: 1
  4099                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4100  001436  0EED               	movlw	low _main_stateMachine
  4101  001438  6E12               	movwf	sm_send_event@psm^0,c
  4102  00143A  0E01               	movlw	high _main_stateMachine
  4103  00143C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4104  00143E  0E00               	movlw	0
  4105  001440  6E15               	movwf	(sm_send_event@event+1)^0,c
  4106  001442  0E07               	movlw	7
  4107  001444  6E14               	movwf	sm_send_event@event^0,c
  4108  001446  EC6F  F041         	call	_sm_send_event	;wreg free
  4109                           
  4110                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4111  00144A  0E18               	movlw	24
  4112  00144C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4113  00144E  0E18               	movlw	24
  4114  001450  EC27  F048         	call	_SetSegmentValueMain
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4118  001454  EC78  F049         	call	_ClearFlag_rfCMD	;wreg free
  4119                           
  4120                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4121  001458  0E01               	movlw	1
  4122  00145A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4123  00145C  D7DC               	goto	l22409
  4124  00145E                     l22425:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4128  00145E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4129  001460  A4D8               	btfss	status,2,c
  4130  001462  D047               	goto	l22445
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4134  001464  0E00               	movlw	0
  4135  001466  0101               	movlb	1	; () banked
  4136  001468  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4137  00146A  0E64               	movlw	100
  4138  00146C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4139                           
  4140                           ; BSR set to: 1
  4141                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4142  00146E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4143  001470  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4144  001472  A0D8               	btfss	status,0,c
  4145  001474  D003               	goto	l22433
  4146                           
  4147                           ; BSR set to: 1
  4148                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4149  001476  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4150                           
  4151                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4152  00147A  D001               	goto	l22435
  4153  00147C                     l22433:
  4154                           
  4155                           ; BSR set to: 1
  4156                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4157  00147C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4158  00147E                     l22435:
  4159                           
  4160                           ; BSR set to: 1
  4161                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4162  00147E  0E98               	movlw	_var_sys_NVM& (0+255)
  4163  001480  0F1C               	addlw	28
  4164  001482  0100               	movlb	0	; () banked
  4165  001484  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4166  001486  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4167  001488  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4168  00148A  E101               	bnz	u27155
  4169  00148C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4170  00148E                     u27155:
  4171  00148E  B4D8               	btfsc	status,2,c
  4172  001490  D009               	goto	u27160
  4173                           
  4174                           ; BSR set to: 0
  4175  001492  0E98               	movlw	_var_sys_NVM& (0+255)
  4176  001494  0F1B               	addlw	27
  4177  001496  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4178  001498  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4179  00149A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4180  00149C  E101               	bnz	u27165
  4181  00149E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4182  0014A0                     u27165:
  4183  0014A0  A4D8               	btfss	status,2,c
  4184  0014A2  D016               	goto	l22441
  4185  0014A4                     u27160:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4189  0014A4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4190  0014A6  0D02               	mullw	2
  4191  0014A8  0E52               	movlw	low (_menu_st+1)
  4192  0014AA  24F3               	addwf	243,w,c
  4193  0014AC  6ED9               	movwf	fsr2l,c
  4194  0014AE  0E01               	movlw	high (_menu_st+1)
  4195  0014B0  20F4               	addwfc	prodh,w,c
  4196  0014B2  6EDA               	movwf	fsr2h,c
  4197  0014B4  50DF               	movf	indf2,w,c
  4198  0014B6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4199  0014B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4200  0014BA  0D02               	mullw	2
  4201  0014BC  0E51               	movlw	low _menu_st
  4202  0014BE  24F3               	addwf	243,w,c
  4203  0014C0  6ED9               	movwf	fsr2l,c
  4204  0014C2  0E01               	movlw	high _menu_st
  4205  0014C4  20F4               	addwfc	prodh,w,c
  4206  0014C6  6EDA               	movwf	fsr2h,c
  4207  0014C8  50DF               	movf	indf2,w,c
  4208  0014CA  EC27  F048         	call	_SetSegmentValueMain
  4209                           
  4210                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4211  0014CE  D683               	goto	l22305
  4212  0014D0                     l22441:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4216  0014D0  0E0A               	movlw	10
  4217  0014D2  6E10               	movwf	___lbdiv@divisor^0,c
  4218  0014D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4219  0014D6  EC33  F045         	call	___lbdiv
  4220  0014DA  0DF6               	mullw	246
  4221  0014DC  50F3               	movf	243,w,c
  4222  0014DE  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4223  0014E0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4224  0014E2  0E0A               	movlw	10
  4225  0014E4  6E10               	movwf	___lbdiv@divisor^0,c
  4226  0014E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4227  0014E8  EC33  F045         	call	___lbdiv
  4228  0014EC  EC27  F048         	call	_SetSegmentValueMain
  4229  0014F0  D672               	goto	l22305
  4230  0014F2                     l22445:
  4231                           
  4232                           ; BSR set to: 0
  4233  0014F2  0E17               	movlw	23
  4234  0014F4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4235  0014F6  A4D8               	btfss	status,2,c
  4236  0014F8  D045               	goto	l22465
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4240  0014FA  0E00               	movlw	0
  4241  0014FC  0101               	movlb	1	; () banked
  4242  0014FE  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4243  001500  0E64               	movlw	100
  4244  001502  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4245                           
  4246                           ; BSR set to: 1
  4247                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4248  001504  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4249                           
  4250                           ; BSR set to: 1
  4251                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4252  001506  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4253  001508  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4254  00150A  A0D8               	btfss	status,0,c
  4255                           
  4256                           ; BSR set to: 1
  4257                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4258  00150C  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4259                           
  4260                           ; BSR set to: 1
  4261                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4262  001510  0E98               	movlw	_var_sys_NVM& (0+255)
  4263  001512  0F1C               	addlw	28
  4264  001514  0100               	movlb	0	; () banked
  4265  001516  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4266  001518  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4267  00151A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4268  00151C  E101               	bnz	u27195
  4269  00151E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4270  001520                     u27195:
  4271  001520  B4D8               	btfsc	status,2,c
  4272  001522  D009               	goto	u27200
  4273                           
  4274                           ; BSR set to: 0
  4275  001524  0E98               	movlw	_var_sys_NVM& (0+255)
  4276  001526  0F1B               	addlw	27
  4277  001528  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4278  00152A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4279  00152C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4280  00152E  E101               	bnz	u27205
  4281  001530  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4282  001532                     u27205:
  4283  001532  A4D8               	btfss	status,2,c
  4284  001534  D016               	goto	l22461
  4285  001536                     u27200:
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4289  001536  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4290  001538  0D02               	mullw	2
  4291  00153A  0E52               	movlw	low (_menu_st+1)
  4292  00153C  24F3               	addwf	243,w,c
  4293  00153E  6ED9               	movwf	fsr2l,c
  4294  001540  0E01               	movlw	high (_menu_st+1)
  4295  001542  20F4               	addwfc	prodh,w,c
  4296  001544  6EDA               	movwf	fsr2h,c
  4297  001546  50DF               	movf	indf2,w,c
  4298  001548  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4299  00154A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4300  00154C  0D02               	mullw	2
  4301  00154E  0E51               	movlw	low _menu_st
  4302  001550  24F3               	addwf	243,w,c
  4303  001552  6ED9               	movwf	fsr2l,c
  4304  001554  0E01               	movlw	high _menu_st
  4305  001556  20F4               	addwfc	prodh,w,c
  4306  001558  6EDA               	movwf	fsr2h,c
  4307  00155A  50DF               	movf	indf2,w,c
  4308  00155C  EC27  F048         	call	_SetSegmentValueMain
  4309                           
  4310                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4311  001560  D63A               	goto	l22305
  4312  001562                     l22461:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4316  001562  0E0A               	movlw	10
  4317  001564  6E10               	movwf	___lbdiv@divisor^0,c
  4318  001566  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4319  001568  EC33  F045         	call	___lbdiv
  4320  00156C  0DF6               	mullw	246
  4321  00156E  50F3               	movf	243,w,c
  4322  001570  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4323  001572  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4324  001574  0E0A               	movlw	10
  4325  001576  6E10               	movwf	___lbdiv@divisor^0,c
  4326  001578  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4327  00157A  EC33  F045         	call	___lbdiv
  4328  00157E  EC27  F048         	call	_SetSegmentValueMain
  4329  001582  D629               	goto	l22305
  4330  001584                     l22465:
  4331                           
  4332                           ; BSR set to: 0
  4333  001584  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4334  001586  A4D8               	btfss	status,2,c
  4335  001588  D023               	goto	l22481
  4336                           
  4337                           ; BSR set to: 0
  4338  00158A  0E09               	movlw	9
  4339  00158C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4340  00158E  D020               	goto	l22481
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4344  001590  0E00               	movlw	0
  4345  001592  0101               	movlb	1	; () banked
  4346  001594  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4347  001596  0E64               	movlw	100
  4348  001598  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4349                           
  4350                           ; BSR set to: 1
  4351                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4352  00159A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4353  00159E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4354  0015A2  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4358  0015A6  0EBD               	movlw	low _menuConfiguration_stateMachine
  4359  0015A8  6E12               	movwf	sm_send_event@psm^0,c
  4360  0015AA  0E02               	movlw	high _menuConfiguration_stateMachine
  4361  0015AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4362  0015AE  0E00               	movlw	0
  4363  0015B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  4364  0015B2  0E02               	movlw	2
  4365  0015B4  6E14               	movwf	sm_send_event@event^0,c
  4366  0015B6  EC6F  F041         	call	_sm_send_event	;wreg free
  4367                           
  4368                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4369  0015BA  0E01               	movlw	1
  4370  0015BC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4371  0015BE  0E19               	movlw	25
  4372  0015C0  EC27  F048         	call	_SetSegmentValueMain
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4376  0015C4  0E00               	movlw	0
  4377  0015C6  0101               	movlb	1	; () banked
  4378  0015C8  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4379  0015CA  0E28               	movlw	40
  4380  0015CC  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4381  0015CE  D603               	goto	l22305
  4382  0015D0                     l22481:
  4383                           
  4384                           ; BSR set to: 0
  4385  0015D0  0101               	movlb	1	; () banked
  4386  0015D2  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4387  0015D4  D008               	goto	u27240
  4388  0015D6  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4389  0015D8  E103               	bnz	u27230
  4390  0015DA  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4391  0015DC  A0D8               	btfss	status,0,c
  4392  0015DE  D003               	goto	u27240
  4393  0015E0                     u27230:
  4394                           
  4395                           ; BSR set to: 1
  4396  0015E0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4397  0015E2  A4D8               	btfss	status,2,c
  4398  0015E4  0012               	return	
  4399  0015E6                     u27240:
  4400                           
  4401                           ; BSR set to: 1
  4402                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4403  0015E6  0E00               	movlw	0
  4404  0015E8  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4405  0015EA  0E64               	movlw	100
  4406  0015EC  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4407                           
  4408                           ; BSR set to: 1
  4409                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4410  0015EE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4411  0015F0  EC81  F01E         	call	_load_New_Menu
  4412                           
  4413                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4414  0015F4  0EBD               	movlw	low _menuConfiguration_stateMachine
  4415  0015F6  6E12               	movwf	sm_send_event@psm^0,c
  4416  0015F8  0E02               	movlw	high _menuConfiguration_stateMachine
  4417  0015FA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4418  0015FC  0E00               	movlw	0
  4419  0015FE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4420  001600  0E03               	movlw	3
  4421  001602  6E14               	movwf	sm_send_event@event^0,c
  4422  001604  EC6F  F041         	call	_sm_send_event	;wreg free
  4423  001608  D5E6               	goto	l22305
  4424  00160A                     l22493:
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4428  00160A  0101               	movlb	1	; () banked
  4429  00160C  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4430  00160E  D005               	goto	u27250
  4431  001610  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4432  001612  E102               	bnz	u27251
  4433  001614  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4434  001616  B0D8               	btfsc	status,0,c
  4435  001618                     u27251:
  4436  001618  0012               	return	
  4437  00161A                     u27250:
  4438                           
  4439                           ; BSR set to: 1
  4440                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4441  00161A  0E00               	movlw	0
  4442  00161C  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4443  00161E  0E64               	movlw	100
  4444  001620  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4445                           
  4446                           ; BSR set to: 1
  4447                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4448  001622  0566               	decf	(_menu_st+21)& (0+255),w,b
  4449  001624  A4D8               	btfss	status,2,c
  4450  001626  D004               	goto	u27270
  4451                           
  4452                           ; BSR set to: 1
  4453  001628  0E08               	movlw	8
  4454  00162A  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4455  00162C  B4D8               	btfsc	status,2,c
  4456  00162E  D00A               	goto	u27280
  4457  001630                     u27270:
  4458                           
  4459                           ; BSR set to: 1
  4460  001630  0E98               	movlw	_var_sys_NVM& (0+255)
  4461  001632  0F1C               	addlw	28
  4462  001634  0100               	movlb	0	; () banked
  4463  001636  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4464  001638  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4465  00163A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4466  00163C  E101               	bnz	u27285
  4467  00163E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4468  001640                     u27285:
  4469  001640  A4D8               	btfss	status,2,c
  4470  001642  D005               	goto	l22505
  4471  001644                     u27280:
  4472                           
  4473                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4474  001644  0100               	movlb	0	; () banked
  4475  001646  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4476  001648  ECB3  F02D         	call	_ResetDefaultMemory
  4477                           
  4478                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4479  00164C  D023               	goto	l22523
  4480  00164E                     l22505:
  4481                           
  4482                           ; BSR set to: 0
  4483  00164E  0101               	movlb	1	; () banked
  4484  001650  0566               	decf	(_menu_st+21)& (0+255),w,b
  4485  001652  B4D8               	btfsc	status,2,c
  4486  001654  D004               	goto	u27300
  4487                           
  4488                           ; BSR set to: 1
  4489  001656  0E0A               	movlw	10
  4490  001658  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4491  00165A  A4D8               	btfss	status,2,c
  4492  00165C  D004               	goto	l22511
  4493  00165E                     u27300:
  4494                           
  4495                           ; BSR set to: 1
  4496                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4497  00165E  0E01               	movlw	1
  4498  001660  EC50  F045         	call	_SaveNVM_VarSystem
  4499                           
  4500                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4501  001664  D017               	goto	l22523
  4502  001666                     l22511:
  4503                           
  4504                           ; BSR set to: 1
  4505                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4506  001666  0568               	decf	(_menu_st+23)& (0+255),w,b
  4507  001668  A4D8               	btfss	status,2,c
  4508  00166A  D00E               	goto	l22519
  4509                           
  4510                           ; BSR set to: 1
  4511  00166C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4512  001670  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4513  001674  50DF               	movf	indf2,w,c
  4514  001676  B4D8               	btfsc	status,2,c
  4515  001678  D007               	goto	l22519
  4516                           
  4517                           ; BSR set to: 1
  4518  00167A  0E06               	movlw	6
  4519  00167C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4520  00167E  A4D8               	btfss	status,2,c
  4521  001680  D003               	goto	l22519
  4522                           
  4523                           ; BSR set to: 1
  4524                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4525  001682  0E09               	movlw	9
  4526  001684  0100               	movlb	0	; () banked
  4527  001686  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4528  001688                     l22519:
  4529                           
  4530                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4531  001688  0E01               	movlw	1
  4532  00168A  EC50  F045         	call	_SaveNVM_VarSystem
  4533                           
  4534                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4535  00168E  0E00               	movlw	0
  4536  001690  EC50  F045         	call	_SaveNVM_VarSystem
  4537  001694                     l22523:
  4538                           
  4539                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4540  001694  0EBD               	movlw	low _menuConfiguration_stateMachine
  4541  001696  6E12               	movwf	sm_send_event@psm^0,c
  4542  001698  0E02               	movlw	high _menuConfiguration_stateMachine
  4543  00169A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4544  00169C  0E00               	movlw	0
  4545  00169E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4546  0016A0  0E04               	movlw	4
  4547  0016A2  6E14               	movwf	sm_send_event@event^0,c
  4548  0016A4  EC6F  F041         	call	_sm_send_event	;wreg free
  4549                           
  4550                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4551  0016A8  0101               	movlb	1	; () banked
  4552  0016AA  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4553                           
  4554                           ; BSR set to: 1
  4555                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4556  0016AC  0E02               	movlw	2
  4557  0016AE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4558  0016B0  D005               	goto	l22533
  4559                           
  4560                           ; BSR set to: 1
  4561                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4562  0016B2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4563                           
  4564                           ; BSR set to: 1
  4565                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4566  0016B4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4567  0016B6  EC81  F01E         	call	_load_New_Menu
  4568                           
  4569                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4570  0016BA  0012               	return	
  4571  0016BC                     l22533:
  4572                           
  4573                           ; BSR set to: 1
  4574  0016BC  5167               	movf	(_menu_st+22)& (0+255),w,b
  4575  0016BE  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4576  0016C0  A0D8               	btfss	status,0,c
  4577  0016C2  D005               	goto	l22539
  4578                           
  4579                           ; BSR set to: 1
  4580                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4581  0016C4  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4582                           
  4583                           ; BSR set to: 1
  4584                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4585  0016C6  5165               	movf	(_menu_st+20)& (0+255),w,b
  4586  0016C8  EC81  F01E         	call	_load_New_Menu
  4587                           
  4588                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4589  0016CC  0012               	return	
  4590  0016CE                     l22539:
  4591                           
  4592                           ; BSR set to: 1
  4593                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4594  0016CE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4595  0016D0  EC81  F01E         	call	_load_New_Menu
  4596  0016D4  0012               	return	
  4597  0016D6                     l22541:
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4601  0016D6  0101               	movlb	1	; () banked
  4602  0016D8  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4603  0016DA  D005               	goto	u27360
  4604  0016DC  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4605  0016DE  E102               	bnz	u27361
  4606  0016E0  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4607  0016E2  B0D8               	btfsc	status,0,c
  4608  0016E4                     u27361:
  4609  0016E4  0012               	return	
  4610  0016E6                     u27360:
  4611                           
  4612                           ; BSR set to: 1
  4613                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4614  0016E6  0100               	movlb	0	; () banked
  4615  0016E8  51F8               	movf	_auxCounter& (0+255),w,b
  4616  0016EA  11F9               	iorwf	(_auxCounter+1)& (0+255),w,b
  4617  0016EC  A4D8               	btfss	status,2,c
  4618  0016EE  D010               	goto	l22551
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4622  0016F0  0101               	movlb	1	; () banked
  4623  0016F2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4624                           
  4625                           ; BSR set to: 1
  4626                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4627  0016F4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4628  0016F6  EC81  F01E         	call	_load_New_Menu
  4629                           
  4630                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4631  0016FA  0EBD               	movlw	low _menuConfiguration_stateMachine
  4632  0016FC  6E12               	movwf	sm_send_event@psm^0,c
  4633  0016FE  0E02               	movlw	high _menuConfiguration_stateMachine
  4634  001700  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4635  001702  0E00               	movlw	0
  4636  001704  6E15               	movwf	(sm_send_event@event+1)^0,c
  4637  001706  0E04               	movlw	4
  4638  001708  6E14               	movwf	sm_send_event@event^0,c
  4639  00170A  EC6F  F041         	call	_sm_send_event	;wreg free
  4640                           
  4641                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4642  00170E  0012               	return	
  4643  001710                     l22551:
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4647  001710  0E00               	movlw	0
  4648  001712  0101               	movlb	1	; () banked
  4649  001714  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4650  001716  0E3C               	movlw	60
  4651  001718  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4652                           
  4653                           ; BSR set to: 1
  4654                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4655  00171A  C1F9  F010         	movff	_tempCounter,___lldiv@dividend
  4656  00171E  C1FA  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4657  001722  C1FB  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4658  001726  C1FC  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4659  00172A  C0F8  F014         	movff	_auxCounter,___lldiv@divisor
  4660  00172E  C0F9  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4661  001732  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4662  001734  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4663  001736  EC6C  F03D         	call	___lldiv	;wreg free
  4664  00173A  5010               	movf	?___lldiv^0,w,c
  4665  00173C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4666                           
  4667                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4668  00173E  C0F8  F014         	movff	_auxCounter,___lldiv@divisor
  4669  001742  C0F9  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4670  001746  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4671  001748  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4672  00174A  C1F9  F010         	movff	_tempCounter,___lldiv@dividend
  4673  00174E  C1FA  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4674  001752  C1FB  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4675  001756  C1FC  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4676  00175A  EC6C  F03D         	call	___lldiv	;wreg free
  4677  00175E  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4678  001762  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4679  001766  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4680  00176A  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4681  00176E  C0F8  F021         	movff	_auxCounter,___lmul@multiplicand
  4682  001772  C0F9  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4683  001776  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4684  001778  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4685  00177A  EC7D  F042         	call	___lmul	;wreg free
  4686  00177E  501D               	movf	?___lmul^0,w,c
  4687  001780  0101               	movlb	1	; () banked
  4688  001782  5DF9               	subwf	_tempCounter& (0+255),w,b
  4689  001784  6FF9               	movwf	_tempCounter& (0+255),b
  4690  001786  501E               	movf	(?___lmul+1)^0,w,c
  4691  001788  59FA               	subwfb	(_tempCounter+1)& (0+255),w,b
  4692  00178A  6FFA               	movwf	(_tempCounter+1)& (0+255),b
  4693  00178C  501F               	movf	(?___lmul+2)^0,w,c
  4694  00178E  59FB               	subwfb	(_tempCounter+2)& (0+255),w,b
  4695  001790  6FFB               	movwf	(_tempCounter+2)& (0+255),b
  4696  001792  5020               	movf	(?___lmul+3)^0,w,c
  4697  001794  59FC               	subwfb	(_tempCounter+3)& (0+255),w,b
  4698  001796  6FFC               	movwf	(_tempCounter+3)& (0+255),b
  4699                           
  4700                           ; BSR set to: 1
  4701                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4702  001798  C0F8  F010         	movff	_auxCounter,___lwdiv@dividend
  4703  00179C  C0F9  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4704  0017A0  0E00               	movlw	0
  4705  0017A2  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4706  0017A4  0E64               	movlw	100
  4707  0017A6  6E12               	movwf	___lwdiv@divisor^0,c
  4708  0017A8  ECFD  F042         	call	___lwdiv	;wreg free
  4709  0017AC  C010  F0F8         	movff	?___lwdiv,_auxCounter
  4710  0017B0  C011  F0F9         	movff	?___lwdiv+1,_auxCounter+1
  4711                           
  4712                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4713  0017B4  0E0A               	movlw	10
  4714  0017B6  6E10               	movwf	___lbdiv@divisor^0,c
  4715  0017B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4716  0017BA  EC33  F045         	call	___lbdiv
  4717  0017BE  0DF6               	mullw	246
  4718  0017C0  50F3               	movf	243,w,c
  4719  0017C2  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4720  0017C4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4721  0017C6  0E00               	movlw	0
  4722  0017C8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4723  0017CA  0E0A               	movlw	10
  4724  0017CC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4725  0017CE  0E0A               	movlw	10
  4726  0017D0  6E10               	movwf	___lbdiv@divisor^0,c
  4727  0017D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4728  0017D4  EC33  F045         	call	___lbdiv
  4729  0017D8  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  4730  0017DC  0012               	return	
  4731  0017DE                     l22561:
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4735  0017DE  0101               	movlb	1	; () banked
  4736  0017E0  05FD               	decf	_firstselectflag& (0+255),w,b
  4737  0017E2  A4D8               	btfss	status,2,c
  4738  0017E4  D004               	goto	l22565
  4739                           
  4740                           ; BSR set to: 1
  4741                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4742  0017E6  0E00               	movlw	0
  4743  0017E8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4744                           
  4745                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4746  0017EA  0E00               	movlw	0
  4747  0017EC  6FFD               	movwf	_firstselectflag& (0+255),b
  4748  0017EE                     l22565:
  4749                           
  4750                           ; BSR set to: 1
  4751                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4752  0017EE  EC6A  F019         	call	_controlSelectRemote	;wreg free
  4753                           
  4754                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4755  0017F2  0012               	return	
  4756  0017F4                     l22567:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4760  0017F4  EC0F  F039         	call	_controlSaveRemote	;wreg free
  4761                           
  4762                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4763  0017F8  0012               	return	
  4764  0017FA                     l22569:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4768  0017FA  ECB8  F045         	call	_controlLearnDigit	;wreg free
  4769                           
  4770                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4771  0017FE  0101               	movlb	1	; () banked
  4772  001800  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4773  001802  A4D8               	btfss	status,2,c
  4774  001804  0012               	return	
  4775                           
  4776                           ; BSR set to: 1
  4777                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4778  001806  0EED               	movlw	low _main_stateMachine
  4779  001808  6E12               	movwf	sm_send_event@psm^0,c
  4780  00180A  0E01               	movlw	high _main_stateMachine
  4781  00180C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4782  00180E  0E00               	movlw	0
  4783  001810  6E15               	movwf	(sm_send_event@event+1)^0,c
  4784  001812  0E07               	movlw	7
  4785  001814  6E14               	movwf	sm_send_event@event^0,c
  4786  001816  EC6F  F041         	call	_sm_send_event	;wreg free
  4787                           
  4788                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4789  00181A  0EBD               	movlw	low _menuConfiguration_stateMachine
  4790  00181C  6E12               	movwf	sm_send_event@psm^0,c
  4791  00181E  0E02               	movlw	high _menuConfiguration_stateMachine
  4792  001820  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4793  001822  0E00               	movlw	0
  4794  001824  6E15               	movwf	(sm_send_event@event+1)^0,c
  4795  001826  0E04               	movlw	4
  4796  001828  6E14               	movwf	sm_send_event@event^0,c
  4797  00182A  EC6F  F041         	call	_sm_send_event	;wreg free
  4798                           
  4799                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4800  00182E  0E18               	movlw	24
  4801  001830  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4802  001832  0E18               	movlw	24
  4803  001834  EC27  F048         	call	_SetSegmentValueMain
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4807  001838  0E02               	movlw	2
  4808  00183A  EC50  F045         	call	_SaveNVM_VarSystem
  4809  00183E  D5E9               	goto	l22407
  4810  001840                     l22585:
  4811  001840  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4812  001844  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4813  001848  50DF               	movf	indf2,w,c
  4814  00184A  0100               	movlb	0	; () banked
  4815  00184C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4816  00184E  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4817                           
  4818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4819                           ; Switch size 1, requested type "simple"
  4820                           ; Number of cases is 1, Range of values is 0 to 0
  4821                           ; switch strategies available:
  4822                           ; Name         Instructions Cycles
  4823                           ; simple_byte            4     3 (average)
  4824                           ;	Chosen strategy is simple_byte
  4825  001850  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4826  001852  0A00               	xorlw	0	; case 0
  4827  001854  A4D8               	btfss	status,2,c
  4828  001856  0012               	return	
  4829                           
  4830                           ; BSR set to: 0
  4831                           ; Switch size 1, requested type "simple"
  4832                           ; Number of cases is 7, Range of values is 0 to 6
  4833                           ; switch strategies available:
  4834                           ; Name         Instructions Cycles
  4835                           ; simple_byte           22    12 (average)
  4836                           ;	Chosen strategy is simple_byte
  4837  001858  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4838  00185A  0A00               	xorlw	0	; case 0
  4839  00185C  B4D8               	btfsc	status,2,c
  4840  00185E  D431               	goto	l22275
  4841  001860  0A01               	xorlw	1	; case 1
  4842  001862  B4D8               	btfsc	status,2,c
  4843  001864  D5FC               	goto	l22425
  4844  001866  0A03               	xorlw	3	; case 2
  4845  001868  B4D8               	btfsc	status,2,c
  4846  00186A  D6CF               	goto	l22493
  4847  00186C  0A01               	xorlw	1	; case 3
  4848  00186E  B4D8               	btfsc	status,2,c
  4849  001870  D732               	goto	l22541
  4850  001872  0A07               	xorlw	7	; case 4
  4851  001874  B4D8               	btfsc	status,2,c
  4852  001876  D7B3               	goto	l22561
  4853  001878  0A01               	xorlw	1	; case 5
  4854  00187A  B4D8               	btfsc	status,2,c
  4855  00187C  D7BB               	goto	l22567
  4856  00187E  0A03               	xorlw	3	; case 6
  4857  001880  A4D8               	btfss	status,2,c
  4858  001882  0012               	return	
  4859  001884  D7BA               	goto	l22569
  4860  001886                     __end_of_sm_execute_menuConfiguration:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _setValueToEdit *****************
  4864 ;; Defined at:
  4865 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  menuType        1    wreg     enum E10813
  4868 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  menuType        1    6[BANK0 ] enum E10813
  4871 ;;  posindex        1    7[BANK0 ] unsigned char 
  4872 ;;  haveValueToE    1    8[BANK0 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      unsigned char 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 3F/1
  4879 ;;		On exit  : 3F/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4883 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4884 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4885 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;Total ram usage:        6 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 14
  4889 ;; This function calls:
  4890 ;;		_InitReceiver
  4891 ;;		_SaveNVM_VarSystem
  4892 ;;		_cmdMemoryIsEmpty
  4893 ;;		_load_New_Menu
  4894 ;;		_sm_send_event
  4895 ;; This function is called by:
  4896 ;;		_sm_execute_menuConfiguration
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text3
  4901  001F94                     __ptext3:
  4902                           	callstack 0
  4903  001F94                     _setValueToEdit:
  4904                           	callstack 14
  4905                           
  4906                           ;incstack = 0
  4907                           ;setValueToEdit@menuType stored from wreg
  4908  001F94  0100               	movlb	0	; () banked
  4909  001F96  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  4910                           
  4911                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  4912  001F98  0E00               	movlw	0
  4913  001F9A  0100               	movlb	0	; () banked
  4914  001F9C  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4915                           
  4916                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  4917  001F9E  D254               	goto	l20827
  4918  001FA0                     l3353:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  4922  001FA0  C168  F169         	movff	_menu_st+23,_menu_st+24
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  4926  001FA4  0E00               	movlw	0
  4927  001FA6  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  4928                           
  4929                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  4930  001FA8  D034               	goto	l20583
  4931  001FAA                     l20537:
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  4935  001FAA  0E04               	movlw	4
  4936  001FAC  EC81  F01E         	call	_load_New_Menu
  4937                           
  4938                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  4939  001FB0  D274               	goto	l20829
  4940  001FB2                     l20539:
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  4944  001FB2  0E05               	movlw	5
  4945  001FB4  EC81  F01E         	call	_load_New_Menu
  4946                           
  4947                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  4948  001FB8  D270               	goto	l20829
  4949  001FBA                     l20541:
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  4953  001FBA  0E06               	movlw	6
  4954  001FBC  EC81  F01E         	call	_load_New_Menu
  4955                           
  4956                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  4957  001FC0  D26C               	goto	l20829
  4958  001FC2                     l20543:
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  4962  001FC2  0E63               	movlw	99
  4963  001FC4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  4967  001FC6  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  4971  001FCA  0E9C               	movlw	low (_var_sys_NVM+4)
  4972  001FCC                     L13:
  4973  001FCC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  4974  001FCE  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  4978  001FD0  0E01               	movlw	1
  4979  001FD2  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4980                           
  4981                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  4982  001FD4  D262               	goto	l20829
  4983  001FD6                     l20551:
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  4987  001FD6  0E07               	movlw	7
  4988  001FD8  EC81  F01E         	call	_load_New_Menu
  4989                           
  4990                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  4991  001FDC  D25E               	goto	l20829
  4992  001FDE                     l20553:
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  4996  001FDE  0E08               	movlw	8
  4997  001FE0  EC81  F01E         	call	_load_New_Menu
  4998                           
  4999                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5000  001FE4  D25A               	goto	l20829
  5001  001FE6                     l20555:
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5005  001FE6  0E09               	movlw	9
  5006  001FE8  EC81  F01E         	call	_load_New_Menu
  5007                           
  5008                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5009  001FEC  D256               	goto	l20829
  5010  001FEE                     l20557:
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5014  001FEE  0E02               	movlw	2
  5015  001FF0  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5019  001FF2  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5023  001FF6  0EA4               	movlw	low (_var_sys_NVM+12)
  5024  001FF8  D7E9               	goto	L13
  5025  001FFA                     l20565:
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5029  001FFA  0E03               	movlw	3
  5030  001FFC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5034  001FFE  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5038  002002  0EA5               	movlw	low (_var_sys_NVM+13)
  5039  002004  D7E3               	goto	L13
  5040  002006                     l20573:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5044  002006  0E01               	movlw	1
  5045  002008  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5049  00200A  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5053  00200E  0EA6               	movlw	low (_var_sys_NVM+14)
  5054  002010  D7DD               	goto	L13
  5055  002012                     l20583:
  5056                           
  5057                           ; BSR set to: 0
  5058  002012  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5059  002014  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5060  002016  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5061                           
  5062                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5063                           ; Switch size 1, requested type "simple"
  5064                           ; Number of cases is 1, Range of values is 0 to 0
  5065                           ; switch strategies available:
  5066                           ; Name         Instructions Cycles
  5067                           ; simple_byte            4     3 (average)
  5068                           ;	Chosen strategy is simple_byte
  5069  002018  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5070  00201A  0A00               	xorlw	0	; case 0
  5071  00201C  A4D8               	btfss	status,2,c
  5072  00201E  D23D               	goto	l20829
  5073                           
  5074                           ; BSR set to: 0
  5075                           ; Switch size 1, requested type "simple"
  5076                           ; Number of cases is 10, Range of values is 0 to 9
  5077                           ; switch strategies available:
  5078                           ; Name         Instructions Cycles
  5079                           ; simple_byte           31    16 (average)
  5080                           ;	Chosen strategy is simple_byte
  5081  002020  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5082  002022  0A00               	xorlw	0	; case 0
  5083  002024  B4D8               	btfsc	status,2,c
  5084  002026  D7C1               	goto	l20537
  5085  002028  0A01               	xorlw	1	; case 1
  5086  00202A  B4D8               	btfsc	status,2,c
  5087  00202C  D7C2               	goto	l20539
  5088  00202E  0A03               	xorlw	3	; case 2
  5089  002030  B4D8               	btfsc	status,2,c
  5090  002032  D7C3               	goto	l20541
  5091  002034  0A01               	xorlw	1	; case 3
  5092  002036  B4D8               	btfsc	status,2,c
  5093  002038  D7C4               	goto	l20543
  5094  00203A  0A07               	xorlw	7	; case 4
  5095  00203C  B4D8               	btfsc	status,2,c
  5096  00203E  D7CB               	goto	l20551
  5097  002040  0A01               	xorlw	1	; case 5
  5098  002042  B4D8               	btfsc	status,2,c
  5099  002044  D7CC               	goto	l20553
  5100  002046  0A03               	xorlw	3	; case 6
  5101  002048  B4D8               	btfsc	status,2,c
  5102  00204A  D7CD               	goto	l20555
  5103  00204C  0A01               	xorlw	1	; case 7
  5104  00204E  B4D8               	btfsc	status,2,c
  5105  002050  D7CE               	goto	l20557
  5106  002052  0A0F               	xorlw	15	; case 8
  5107  002054  B4D8               	btfsc	status,2,c
  5108  002056  D7D1               	goto	l20565
  5109  002058  0A01               	xorlw	1	; case 9
  5110  00205A  B4D8               	btfsc	status,2,c
  5111  00205C  D7D4               	goto	l20573
  5112  00205E  D21D               	goto	l20829
  5113  002060                     l3367:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5117  002060  C168  F169         	movff	_menu_st+23,_menu_st+24
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5121  002064  0E01               	movlw	1
  5122  002066  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5123                           
  5124                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5125  002068  0E00               	movlw	0
  5126  00206A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5127                           
  5128                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5129  00206C  D057               	goto	l20639
  5130  00206E                     l20587:
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5134  00206E  0E0A               	movlw	10
  5135  002070  EC81  F01E         	call	_load_New_Menu
  5136                           
  5137                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5138  002074  D212               	goto	l20829
  5139  002076                     l20589:
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5143  002076  0E0B               	movlw	11
  5144  002078  EC81  F01E         	call	_load_New_Menu
  5145                           
  5146                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5147  00207C  D20E               	goto	l20829
  5148  00207E                     l20591:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5152  00207E  0E63               	movlw	99
  5153  002080  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5157  002082  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5161  002086  0EAC               	movlw	low (_var_sys_NVM+20)
  5162  002088  D7A1               	goto	L13
  5163  00208A                     l20599:
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5167  00208A  0E09               	movlw	9
  5168  00208C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5169                           
  5170                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5171  00208E  0E01               	movlw	1
  5172  002090  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5176  002092  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5180  002096  0EAD               	movlw	low (_var_sys_NVM+21)
  5181  002098  D799               	goto	L13
  5182  00209A                     l3375:
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5186  00209A  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5187                           
  5188                           ; BSR set to: 0
  5189                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5190  00209E  0EAF               	movlw	low (_var_sys_NVM+23)
  5191  0020A0  D795               	goto	L13
  5192  0020A2                     l20611:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5196  0020A2  0E09               	movlw	9
  5197  0020A4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5198                           
  5199                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5200  0020A6  0E01               	movlw	1
  5201  0020A8  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5205  0020AA  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5209  0020AE  0EB0               	movlw	low (_var_sys_NVM+24)
  5210  0020B0  D78D               	goto	L13
  5211  0020B2                     l20619:
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5215  0020B2  0E00               	movlw	0
  5216  0020B4  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5217                           
  5218                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5219  0020B6  0E00               	movlw	0
  5220  0020B8  0101               	movlb	1	; () banked
  5221  0020BA  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5222  0020BC  0E00               	movlw	0
  5223  0020BE  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5224                           
  5225                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5226  0020C0  0E27               	movlw	39
  5227  0020C2  0100               	movlb	0	; () banked
  5228  0020C4  6FF9               	movwf	(_auxCounter+1)& (0+255),b
  5229  0020C6  0E10               	movlw	16
  5230  0020C8  6FF8               	movwf	_auxCounter& (0+255),b
  5231                           
  5232                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5233  0020CA  0E00               	movlw	0
  5234  0020CC  0101               	movlb	1	; () banked
  5235  0020CE  6FC1               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5236  0020D0  0E00               	movlw	0
  5237  0020D2  6FC0               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5238                           
  5239                           ; BSR set to: 1
  5240                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5241  0020D4  C13C  F1F9         	movff	_var_sys+60,_tempCounter	;volatile
  5242  0020D8  C13D  F1FA         	movff	_var_sys+61,_tempCounter+1	;volatile
  5243  0020DC  C13E  F1FB         	movff	_var_sys+62,_tempCounter+2	;volatile
  5244  0020E0  C13F  F1FC         	movff	_var_sys+63,_tempCounter+3	;volatile
  5245                           
  5246                           ; BSR set to: 1
  5247                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5248  0020E4  0EBD               	movlw	low _menuConfiguration_stateMachine
  5249  0020E6  6E12               	movwf	sm_send_event@psm^0,c
  5250  0020E8  0E02               	movlw	high _menuConfiguration_stateMachine
  5251  0020EA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5252  0020EC  0E00               	movlw	0
  5253  0020EE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5254  0020F0  0E05               	movlw	5
  5255  0020F2  6E14               	movwf	sm_send_event@event^0,c
  5256  0020F4  EC6F  F041         	call	_sm_send_event	;wreg free
  5257                           
  5258                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5259  0020F8  D1D0               	goto	l20829
  5260  0020FA                     l20625:
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5264  0020FA  0E00               	movlw	0
  5265  0020FC  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5266                           
  5267                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5268  0020FE  0E01               	movlw	1
  5269  002100  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5273  002102  0E00               	movlw	0
  5274  002104  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5275  002106  0E00               	movlw	0
  5276  002108  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5277                           
  5278                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5279  00210A  D1C7               	goto	l20829
  5280  00210C                     l20629:
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5284  00210C  0E03               	movlw	3
  5285  00210E  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5286                           
  5287                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5288  002110  0E00               	movlw	0
  5289  002112  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5293  002114  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5297  002118  0EB1               	movlw	low (_var_sys_NVM+25)
  5298  00211A  D758               	goto	L13
  5299  00211C                     l20639:
  5300                           
  5301                           ; BSR set to: 0
  5302  00211C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5303  00211E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5304  002120  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5305                           
  5306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5307                           ; Switch size 1, requested type "simple"
  5308                           ; Number of cases is 1, Range of values is 0 to 0
  5309                           ; switch strategies available:
  5310                           ; Name         Instructions Cycles
  5311                           ; simple_byte            4     3 (average)
  5312                           ;	Chosen strategy is simple_byte
  5313  002122  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5314  002124  0A00               	xorlw	0	; case 0
  5315  002126  A4D8               	btfss	status,2,c
  5316  002128  D1B8               	goto	l20829
  5317                           
  5318                           ; BSR set to: 0
  5319                           ; Switch size 1, requested type "simple"
  5320                           ; Number of cases is 10, Range of values is 0 to 9
  5321                           ; switch strategies available:
  5322                           ; Name         Instructions Cycles
  5323                           ; simple_byte           31    16 (average)
  5324                           ;	Chosen strategy is simple_byte
  5325  00212A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5326  00212C  0A00               	xorlw	0	; case 0
  5327  00212E  B4D8               	btfsc	status,2,c
  5328  002130  D79E               	goto	l20587
  5329  002132  0A01               	xorlw	1	; case 1
  5330  002134  B4D8               	btfsc	status,2,c
  5331  002136  D79F               	goto	l20589
  5332  002138  0A03               	xorlw	3	; case 2
  5333  00213A  B4D8               	btfsc	status,2,c
  5334  00213C  D7A0               	goto	l20591
  5335  00213E  0A01               	xorlw	1	; case 3
  5336  002140  B4D8               	btfsc	status,2,c
  5337  002142  D7A3               	goto	l20599
  5338  002144  0A07               	xorlw	7	; case 4
  5339  002146  B4D8               	btfsc	status,2,c
  5340  002148  D1A8               	goto	l20829
  5341  00214A  0A01               	xorlw	1	; case 5
  5342  00214C  B4D8               	btfsc	status,2,c
  5343  00214E  D7A5               	goto	l3375
  5344  002150  0A03               	xorlw	3	; case 6
  5345  002152  B4D8               	btfsc	status,2,c
  5346  002154  D7A6               	goto	l20611
  5347  002156  0A01               	xorlw	1	; case 7
  5348  002158  B4D8               	btfsc	status,2,c
  5349  00215A  D7AB               	goto	l20619
  5350  00215C  0A0F               	xorlw	15	; case 8
  5351  00215E  B4D8               	btfsc	status,2,c
  5352  002160  D7CC               	goto	l20625
  5353  002162  0A01               	xorlw	1	; case 9
  5354  002164  B4D8               	btfsc	status,2,c
  5355  002166  D7D2               	goto	l20629
  5356  002168  D198               	goto	l20829
  5357  00216A                     l20641:
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5361  00216A  0EBD               	movlw	low _menuConfiguration_stateMachine
  5362  00216C  6E12               	movwf	sm_send_event@psm^0,c
  5363  00216E  0E02               	movlw	high _menuConfiguration_stateMachine
  5364  002170  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5365  002172  0E00               	movlw	0
  5366  002174  6E15               	movwf	(sm_send_event@event+1)^0,c
  5367  002176  0E14               	movlw	20
  5368  002178  6E14               	movwf	sm_send_event@event^0,c
  5369  00217A  EC6F  F041         	call	_sm_send_event	;wreg free
  5370                           
  5371                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5372  00217E  0EE2               	movlw	low _controlGate_stateMachine
  5373  002180  6E12               	movwf	sm_send_event@psm^0,c
  5374  002182  0E01               	movlw	high _controlGate_stateMachine
  5375  002184  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5376  002186  0E00               	movlw	0
  5377  002188  6E15               	movwf	(sm_send_event@event+1)^0,c
  5378  00218A  0E14               	movlw	20
  5379  00218C  6E14               	movwf	sm_send_event@event^0,c
  5380  00218E  EC6F  F041         	call	_sm_send_event	;wreg free
  5381                           
  5382                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5383  002192  0E01               	movlw	1
  5384  002194  0101               	movlb	1	; () banked
  5385  002196  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5386                           
  5387                           ; BSR set to: 1
  5388                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5389  002198  0E00               	movlw	0
  5390  00219A  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5391                           
  5392                           ; BSR set to: 1
  5393                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5394  00219C  0E01               	movlw	1
  5395  00219E  EC50  F045         	call	_SaveNVM_VarSystem
  5396                           
  5397                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5398  0021A2  D17B               	goto	l20829
  5399  0021A4                     l20649:
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5403  0021A4  0EBD               	movlw	low _menuConfiguration_stateMachine
  5404  0021A6  6E12               	movwf	sm_send_event@psm^0,c
  5405  0021A8  0E02               	movlw	high _menuConfiguration_stateMachine
  5406  0021AA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5407  0021AC  0E00               	movlw	0
  5408  0021AE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5409  0021B0  0E14               	movlw	20
  5410  0021B2  6E14               	movwf	sm_send_event@event^0,c
  5411  0021B4  EC6F  F041         	call	_sm_send_event	;wreg free
  5412                           
  5413                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5414  0021B8  0EE2               	movlw	low _controlGate_stateMachine
  5415  0021BA  6E12               	movwf	sm_send_event@psm^0,c
  5416  0021BC  0E01               	movlw	high _controlGate_stateMachine
  5417  0021BE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5418  0021C0  0E00               	movlw	0
  5419  0021C2  6E15               	movwf	(sm_send_event@event+1)^0,c
  5420  0021C4  0E14               	movlw	20
  5421  0021C6  6E14               	movwf	sm_send_event@event^0,c
  5422  0021C8  EC6F  F041         	call	_sm_send_event	;wreg free
  5423                           
  5424                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5425  0021CC  0E01               	movlw	1
  5426  0021CE  0101               	movlb	1	; () banked
  5427  0021D0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5428                           
  5429                           ; BSR set to: 1
  5430                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5431  0021D2  0E01               	movlw	1
  5432  0021D4  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5433                           
  5434                           ; BSR set to: 1
  5435                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5436  0021D6  0E01               	movlw	1
  5437  0021D8  EC50  F045         	call	_SaveNVM_VarSystem
  5438                           
  5439                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5440  0021DC  D15E               	goto	l20829
  5441  0021DE                     l3385:
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5445  0021DE  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5449  0021E2  0E03               	movlw	3
  5450  0021E4  EC81  F01E         	call	_load_New_Menu
  5451                           
  5452                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5453  0021E8  0EB4               	movlw	low (_var_sys_NVM+28)
  5454  0021EA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5455  0021EC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5456                           
  5457                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5458  0021EE  0E01               	movlw	1
  5459  0021F0  0100               	movlb	0	; () banked
  5460  0021F2  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5464  0021F4  0E02               	movlw	2
  5465  0021F6  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5469  0021F8  0E00               	movlw	0
  5470  0021FA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5471                           
  5472                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5473  0021FC  D14E               	goto	l20829
  5474  0021FE                     l3386:
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5478  0021FE  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5482  002202  0E02               	movlw	2
  5483  002204  EC81  F01E         	call	_load_New_Menu
  5484                           
  5485                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5486  002208  0EB3               	movlw	low (_var_sys_NVM+27)
  5487  00220A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5488  00220C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5489                           
  5490                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5491  00220E  0E01               	movlw	1
  5492  002210  0100               	movlb	0	; () banked
  5493  002212  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5497  002214  0E01               	movlw	1
  5498  002216  D7EF               	goto	L14
  5499  002218                     l20679:
  5500                           
  5501                           ; BSR set to: 0
  5502  002218  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5503  00221A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5504  00221C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5505                           
  5506                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5507                           ; Switch size 1, requested type "simple"
  5508                           ; Number of cases is 1, Range of values is 0 to 0
  5509                           ; switch strategies available:
  5510                           ; Name         Instructions Cycles
  5511                           ; simple_byte            4     3 (average)
  5512                           ;	Chosen strategy is simple_byte
  5513  00221E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5514  002220  0A00               	xorlw	0	; case 0
  5515  002222  A4D8               	btfss	status,2,c
  5516  002224  D13A               	goto	l20829
  5517                           
  5518                           ; BSR set to: 0
  5519                           ; Switch size 1, requested type "simple"
  5520                           ; Number of cases is 4, Range of values is 0 to 3
  5521                           ; switch strategies available:
  5522                           ; Name         Instructions Cycles
  5523                           ; simple_byte           13     7 (average)
  5524                           ;	Chosen strategy is simple_byte
  5525  002226  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5526  002228  0A00               	xorlw	0	; case 0
  5527  00222A  B4D8               	btfsc	status,2,c
  5528  00222C  D79E               	goto	l20641
  5529  00222E  0A01               	xorlw	1	; case 1
  5530  002230  B4D8               	btfsc	status,2,c
  5531  002232  D7B8               	goto	l20649
  5532  002234  0A03               	xorlw	3	; case 2
  5533  002236  B4D8               	btfsc	status,2,c
  5534  002238  D7D2               	goto	l3385
  5535  00223A  0A01               	xorlw	1	; case 3
  5536  00223C  B4D8               	btfsc	status,2,c
  5537  00223E  D7DF               	goto	l3386
  5538  002240  D12C               	goto	l20829
  5539  002242                     l20681:
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5543  002242  0E98               	movlw	low _var_sys_NVM
  5544  002244  D001               	goto	L15
  5545  002246                     l20683:
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5549  002246  0E99               	movlw	low (_var_sys_NVM+1)
  5550  002248                     L15:
  5551  002248  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5552  00224A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5553                           
  5554                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5555  00224C  D00E               	goto	l20689
  5556  00224E                     l20687:
  5557                           
  5558                           ; BSR set to: 0
  5559  00224E  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5560  002250  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5561  002252  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5562                           
  5563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5564                           ; Switch size 1, requested type "simple"
  5565                           ; Number of cases is 1, Range of values is 0 to 0
  5566                           ; switch strategies available:
  5567                           ; Name         Instructions Cycles
  5568                           ; simple_byte            4     3 (average)
  5569                           ;	Chosen strategy is simple_byte
  5570  002254  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5571  002256  0A00               	xorlw	0	; case 0
  5572  002258  A4D8               	btfss	status,2,c
  5573  00225A  D007               	goto	l20689
  5574                           
  5575                           ; BSR set to: 0
  5576                           ; Switch size 1, requested type "simple"
  5577                           ; Number of cases is 2, Range of values is 0 to 1
  5578                           ; switch strategies available:
  5579                           ; Name         Instructions Cycles
  5580                           ; simple_byte            7     4 (average)
  5581                           ;	Chosen strategy is simple_byte
  5582  00225C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5583  00225E  0A00               	xorlw	0	; case 0
  5584  002260  B4D8               	btfsc	status,2,c
  5585  002262  D7EF               	goto	l20681
  5586  002264  0A01               	xorlw	1	; case 1
  5587  002266  B4D8               	btfsc	status,2,c
  5588  002268  D7EE               	goto	l20683
  5589  00226A                     l20689:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5593  00226A  0E2D               	movlw	45
  5594  00226C                     L29:
  5595  00226C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5596                           
  5597                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5598  00226E  0E00               	movlw	0
  5599  002270  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5600  002272                     L19:
  5601                           
  5602                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5603  002272  0E01               	movlw	1
  5604  002274  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5608  002276  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5609  00227A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5610  00227E  50DF               	movf	indf2,w,c
  5611  002280  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5612                           
  5613                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5614  002282  D10B               	goto	l20829
  5615  002284                     l20693:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5619  002284  0E09               	movlw	9
  5620  002286  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5621                           
  5622                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5623  002288  0E00               	movlw	0
  5624  00228A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5625                           
  5626                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5627  00228C  D00F               	goto	l20709
  5628  00228E                     l20695:
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5632  00228E  0E02               	movlw	2
  5633  002290  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5634  002292  D002               	goto	l20699
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5638  002294  0E00               	movlw	0
  5639  002296  D001               	goto	L16
  5640  002298                     l20699:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5644  002298  0E09               	movlw	9
  5645  00229A                     L16:
  5646  00229A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5650  00229C  0E9A               	movlw	low (_var_sys_NVM+2)
  5651  00229E  D003               	goto	L18
  5652  0022A0                     l20703:
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5656  0022A0  0E9B               	movlw	low (_var_sys_NVM+3)
  5657  0022A2  D001               	goto	L18
  5658  0022A4                     l20705:
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5662  0022A4  0EA7               	movlw	low (_var_sys_NVM+15)
  5663  0022A6                     L18:
  5664  0022A6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5665  0022A8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5666                           
  5667                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5668  0022AA  D7E3               	goto	L19
  5669  0022AC                     l20709:
  5670                           
  5671                           ; BSR set to: 0
  5672  0022AC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5673  0022AE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5674  0022B0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5675                           
  5676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5677                           ; Switch size 1, requested type "simple"
  5678                           ; Number of cases is 1, Range of values is 0 to 0
  5679                           ; switch strategies available:
  5680                           ; Name         Instructions Cycles
  5681                           ; simple_byte            4     3 (average)
  5682                           ;	Chosen strategy is simple_byte
  5683  0022B2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5684  0022B4  0A00               	xorlw	0	; case 0
  5685  0022B6  A4D8               	btfss	status,2,c
  5686  0022B8  D7DC               	goto	L19
  5687                           
  5688                           ; BSR set to: 0
  5689                           ; Switch size 1, requested type "simple"
  5690                           ; Number of cases is 3, Range of values is 0 to 2
  5691                           ; switch strategies available:
  5692                           ; Name         Instructions Cycles
  5693                           ; simple_byte           10     6 (average)
  5694                           ;	Chosen strategy is simple_byte
  5695  0022BA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5696  0022BC  0A00               	xorlw	0	; case 0
  5697  0022BE  B4D8               	btfsc	status,2,c
  5698  0022C0  D7E6               	goto	l20695
  5699  0022C2  0A01               	xorlw	1	; case 1
  5700  0022C4  B4D8               	btfsc	status,2,c
  5701  0022C6  D7EC               	goto	l20703
  5702  0022C8  0A03               	xorlw	3	; case 2
  5703  0022CA  B4D8               	btfsc	status,2,c
  5704  0022CC  D7EB               	goto	l20705
  5705  0022CE  D7D1               	goto	L19
  5706  0022D0                     l20715:
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5710  0022D0  0E9D               	movlw	low (_var_sys_NVM+5)
  5711  0022D2  D001               	goto	L20
  5712  0022D4                     l20717:
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5716  0022D4  0E9E               	movlw	low (_var_sys_NVM+6)
  5717  0022D6                     L20:
  5718  0022D6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5719  0022D8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5720                           
  5721                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5722  0022DA  D00E               	goto	l20723
  5723  0022DC                     l20721:
  5724                           
  5725                           ; BSR set to: 0
  5726  0022DC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5727  0022DE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5728  0022E0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5729                           
  5730                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5731                           ; Switch size 1, requested type "simple"
  5732                           ; Number of cases is 1, Range of values is 0 to 0
  5733                           ; switch strategies available:
  5734                           ; Name         Instructions Cycles
  5735                           ; simple_byte            4     3 (average)
  5736                           ;	Chosen strategy is simple_byte
  5737  0022E2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5738  0022E4  0A00               	xorlw	0	; case 0
  5739  0022E6  A4D8               	btfss	status,2,c
  5740  0022E8  D007               	goto	l20723
  5741                           
  5742                           ; BSR set to: 0
  5743                           ; Switch size 1, requested type "simple"
  5744                           ; Number of cases is 2, Range of values is 0 to 1
  5745                           ; switch strategies available:
  5746                           ; Name         Instructions Cycles
  5747                           ; simple_byte            7     4 (average)
  5748                           ;	Chosen strategy is simple_byte
  5749  0022EA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5750  0022EC  0A00               	xorlw	0	; case 0
  5751  0022EE  B4D8               	btfsc	status,2,c
  5752  0022F0  D7EF               	goto	l20715
  5753  0022F2  0A01               	xorlw	1	; case 1
  5754  0022F4  B4D8               	btfsc	status,2,c
  5755  0022F6  D7EE               	goto	l20717
  5756  0022F8                     l20723:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5760  0022F8  0E63               	movlw	99
  5761  0022FA  D7B8               	goto	L29
  5762  0022FC                     l20727:
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5766  0022FC  0E9F               	movlw	low (_var_sys_NVM+7)
  5767  0022FE  D034               	goto	L125
  5768  002300                     l20729:
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5772  002300  0EA0               	movlw	low (_var_sys_NVM+8)
  5773  002302  D032               	goto	L125
  5774  002304                     l20733:
  5775                           
  5776                           ; BSR set to: 0
  5777  002304  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5778  002306  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5779  002308  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5780                           
  5781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5782                           ; Switch size 1, requested type "simple"
  5783                           ; Number of cases is 1, Range of values is 0 to 0
  5784                           ; switch strategies available:
  5785                           ; Name         Instructions Cycles
  5786                           ; simple_byte            4     3 (average)
  5787                           ;	Chosen strategy is simple_byte
  5788  00230A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5789  00230C  0A00               	xorlw	0	; case 0
  5790  00230E  A4D8               	btfss	status,2,c
  5791  002310  D02D               	goto	L124
  5792                           
  5793                           ; BSR set to: 0
  5794                           ; Switch size 1, requested type "simple"
  5795                           ; Number of cases is 2, Range of values is 0 to 1
  5796                           ; switch strategies available:
  5797                           ; Name         Instructions Cycles
  5798                           ; simple_byte            7     4 (average)
  5799                           ;	Chosen strategy is simple_byte
  5800  002312  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5801  002314  0A00               	xorlw	0	; case 0
  5802  002316  B4D8               	btfsc	status,2,c
  5803  002318  D7F1               	goto	l20727
  5804  00231A  0A01               	xorlw	1	; case 1
  5805  00231C  B4D8               	btfsc	status,2,c
  5806  00231E  D7F0               	goto	l20729
  5807  002320  D025               	goto	L124
  5808  002322                     l20739:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5812  002322  0EA1               	movlw	low (_var_sys_NVM+9)
  5813  002324  D021               	goto	L125
  5814  002326                     l20741:
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5818  002326  0EA2               	movlw	low (_var_sys_NVM+10)
  5819  002328  D01F               	goto	L125
  5820  00232A                     l20743:
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5824  00232A  0EA3               	movlw	low (_var_sys_NVM+11)
  5825  00232C  D01D               	goto	L125
  5826  00232E                     l20745:
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5830  00232E  0EAE               	movlw	low (_var_sys_NVM+22)
  5831  002330  D01B               	goto	L125
  5832  002332                     l20749:
  5833                           
  5834                           ; BSR set to: 0
  5835  002332  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5836  002334  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5837  002336  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5838                           
  5839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5840                           ; Switch size 1, requested type "simple"
  5841                           ; Number of cases is 1, Range of values is 0 to 0
  5842                           ; switch strategies available:
  5843                           ; Name         Instructions Cycles
  5844                           ; simple_byte            4     3 (average)
  5845                           ;	Chosen strategy is simple_byte
  5846  002338  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5847  00233A  0A00               	xorlw	0	; case 0
  5848  00233C  A4D8               	btfss	status,2,c
  5849  00233E  D016               	goto	L124
  5850                           
  5851                           ; BSR set to: 0
  5852                           ; Switch size 1, requested type "simple"
  5853                           ; Number of cases is 4, Range of values is 0 to 3
  5854                           ; switch strategies available:
  5855                           ; Name         Instructions Cycles
  5856                           ; simple_byte           13     7 (average)
  5857                           ;	Chosen strategy is simple_byte
  5858  002340  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5859  002342  0A00               	xorlw	0	; case 0
  5860  002344  B4D8               	btfsc	status,2,c
  5861  002346  D7ED               	goto	l20739
  5862  002348  0A01               	xorlw	1	; case 1
  5863  00234A  B4D8               	btfsc	status,2,c
  5864  00234C  D7EC               	goto	l20741
  5865  00234E  0A03               	xorlw	3	; case 2
  5866  002350  B4D8               	btfsc	status,2,c
  5867  002352  D7EB               	goto	l20743
  5868  002354  0A01               	xorlw	1	; case 3
  5869  002356  B4D8               	btfsc	status,2,c
  5870  002358  D7EA               	goto	l20745
  5871  00235A  D008               	goto	L124
  5872  00235C                     l20755:
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5876  00235C  0EA8               	movlw	low (_var_sys_NVM+16)
  5877  00235E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5878  002360  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5882  002362  0E02               	movlw	2
  5883  002364  D783               	goto	L29
  5884  002366                     l20761:
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  5888  002366  0EA9               	movlw	low (_var_sys_NVM+17)
  5889  002368                     L125:
  5890  002368  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5891  00236A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5892  00236C                     L124:
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  5896  00236C  0E01               	movlw	1
  5897  00236E  D77E               	goto	L29
  5898  002370                     l20769:
  5899                           
  5900                           ; BSR set to: 0
  5901  002370  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5902  002372  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5903  002374  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5904                           
  5905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5906                           ; Switch size 1, requested type "simple"
  5907                           ; Number of cases is 1, Range of values is 0 to 0
  5908                           ; switch strategies available:
  5909                           ; Name         Instructions Cycles
  5910                           ; simple_byte            4     3 (average)
  5911                           ;	Chosen strategy is simple_byte
  5912  002376  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5913  002378  0A00               	xorlw	0	; case 0
  5914  00237A  A4D8               	btfss	status,2,c
  5915  00237C  D77A               	goto	L19
  5916                           
  5917                           ; BSR set to: 0
  5918                           ; Switch size 1, requested type "simple"
  5919                           ; Number of cases is 2, Range of values is 0 to 1
  5920                           ; switch strategies available:
  5921                           ; Name         Instructions Cycles
  5922                           ; simple_byte            7     4 (average)
  5923                           ;	Chosen strategy is simple_byte
  5924  00237E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5925  002380  0A00               	xorlw	0	; case 0
  5926  002382  B4D8               	btfsc	status,2,c
  5927  002384  D7EB               	goto	l20755
  5928  002386  0A01               	xorlw	1	; case 1
  5929  002388  B4D8               	btfsc	status,2,c
  5930  00238A  D7ED               	goto	l20761
  5931  00238C  D772               	goto	L19
  5932  00238E                     l20775:
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  5936  00238E  0EAA               	movlw	low (_var_sys_NVM+18)
  5937  002390  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5938  002392  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  5942  002394  0E09               	movlw	9
  5943  002396  D76A               	goto	L29
  5944  002398                     l20781:
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  5948  002398  0EAB               	movlw	low (_var_sys_NVM+19)
  5949  00239A  D7FA               	goto	L27
  5950  00239C                     l20789:
  5951                           
  5952                           ; BSR set to: 0
  5953  00239C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5954  00239E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5955  0023A0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5956                           
  5957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5958                           ; Switch size 1, requested type "simple"
  5959                           ; Number of cases is 1, Range of values is 0 to 0
  5960                           ; switch strategies available:
  5961                           ; Name         Instructions Cycles
  5962                           ; simple_byte            4     3 (average)
  5963                           ;	Chosen strategy is simple_byte
  5964  0023A2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5965  0023A4  0A00               	xorlw	0	; case 0
  5966  0023A6  A4D8               	btfss	status,2,c
  5967  0023A8  D764               	goto	L19
  5968                           
  5969                           ; BSR set to: 0
  5970                           ; Switch size 1, requested type "simple"
  5971                           ; Number of cases is 2, Range of values is 0 to 1
  5972                           ; switch strategies available:
  5973                           ; Name         Instructions Cycles
  5974                           ; simple_byte            7     4 (average)
  5975                           ;	Chosen strategy is simple_byte
  5976  0023AA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5977  0023AC  0A00               	xorlw	0	; case 0
  5978  0023AE  B4D8               	btfsc	status,2,c
  5979  0023B0  D7EE               	goto	l20775
  5980  0023B2  0A01               	xorlw	1	; case 1
  5981  0023B4  B4D8               	btfsc	status,2,c
  5982  0023B6  D7F0               	goto	l20781
  5983  0023B8  D75C               	goto	L19
  5984  0023BA                     l20795:
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  5988  0023BA  0EF8               	movlw	low setValueToEdit@value
  5989  0023BC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5990  0023BE  0E01               	movlw	high setValueToEdit@value
  5991  0023C0  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  5995  0023C2  0E00               	movlw	0
  5996  0023C4  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  5997  0023C6  D00D               	goto	l20805
  5998  0023C8                     l3433:
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6002  0023C8  C0DF  F1F8         	movff	setValueToEdit@posindex,setValueToEdit@value
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6006  0023CC  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6007  0023D0  0101               	movlb	1	; () banked
  6008  0023D2  5168               	movf	(_menu_st+23)& (0+255),w,b
  6009  0023D4  ECFD  F03A         	call	_cmdMemoryIsEmpty
  6010  0023D8  0900               	iorlw	0
  6011  0023DA  A4D8               	btfss	status,2,c
  6012  0023DC  D008               	goto	u23940
  6013                           
  6014                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6015  0023DE  0100               	movlb	0	; () banked
  6016  0023E0  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6017  0023E2                     l20805:
  6018                           
  6019                           ; BSR set to: 0
  6020  0023E2  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6021  0023E6  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6022  0023E8  5CDE               	subwf	postinc2,w,c
  6023  0023EA  B0D8               	btfsc	status,0,c
  6024  0023EC  D7ED               	goto	l3433
  6025  0023EE                     u23940:
  6026                           
  6027                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6028  0023EE  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6029  0023F2  D005               	goto	L28
  6030  0023F4                     l20809:
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.positionRemotesWalk;
  6034  0023F4  0EB9               	movlw	low (_var_sys_NVM+33)
  6035  0023F6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6036  0023F8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;sm_MenuConfiguration_MC50.c: 1082:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6040  0023FA  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6041  0023FE                     L28:
  6042  0023FE  50DF               	movf	indf2,w,c
  6043  002400  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6044                           
  6045                           ;sm_MenuConfiguration_MC50.c: 1083:                 };sm_MenuConfiguration_MC50.c: 1084:
      +                                           break;
  6046  002402  D00E               	goto	l20817
  6047  002404                     l20815:
  6048                           
  6049                           ; BSR set to: 0
  6050  002404  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6051  002406  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6052  002408  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6053                           
  6054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6055                           ; Switch size 1, requested type "simple"
  6056                           ; Number of cases is 1, Range of values is 0 to 0
  6057                           ; switch strategies available:
  6058                           ; Name         Instructions Cycles
  6059                           ; simple_byte            4     3 (average)
  6060                           ;	Chosen strategy is simple_byte
  6061  00240A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6062  00240C  0A00               	xorlw	0	; case 0
  6063  00240E  A4D8               	btfss	status,2,c
  6064  002410  D007               	goto	l20817
  6065                           
  6066                           ; BSR set to: 0
  6067                           ; Switch size 1, requested type "simple"
  6068                           ; Number of cases is 2, Range of values is 0 to 1
  6069                           ; switch strategies available:
  6070                           ; Name         Instructions Cycles
  6071                           ; simple_byte            7     4 (average)
  6072                           ;	Chosen strategy is simple_byte
  6073  002412  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6074  002414  0A00               	xorlw	0	; case 0
  6075  002416  B4D8               	btfsc	status,2,c
  6076  002418  D7D0               	goto	l20795
  6077  00241A  0A01               	xorlw	1	; case 1
  6078  00241C  B4D8               	btfsc	status,2,c
  6079  00241E  D7EA               	goto	l20809
  6080  002420                     l20817:
  6081                           
  6082                           ;sm_MenuConfiguration_MC50.c: 1086:             edit_Param.position=*edit_Param.Value;
  6083  002420  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6084  002424  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6085  002428  50DF               	movf	indf2,w,c
  6086  00242A  6E46               	movwf	_edit_Param^0,c	;volatile
  6087                           
  6088                           ;sm_MenuConfiguration_MC50.c: 1087:             edit_Param.Min=0;
  6089  00242C  0E00               	movlw	0
  6090  00242E  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6091                           
  6092                           ;sm_MenuConfiguration_MC50.c: 1088:             haveValueToEdit=1;
  6093  002430  0E01               	movlw	1
  6094  002432  0100               	movlb	0	; () banked
  6095  002434  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6096                           
  6097                           ;sm_MenuConfiguration_MC50.c: 1089:             edit_Param.tempValue=*edit_Param.Value;
  6098  002436  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6099  00243A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6100  00243E  50DF               	movf	indf2,w,c
  6101  002440  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;sm_MenuConfiguration_MC50.c: 1090:             InitReceiver();
  6105  002442  EC1A  F048         	call	_InitReceiver	;wreg free
  6106                           
  6107                           ;sm_MenuConfiguration_MC50.c: 1091:         };sm_MenuConfiguration_MC50.c: 1092:        
      +                           break;
  6108  002446  D029               	goto	l20829
  6109  002448                     l20827:
  6110                           
  6111                           ; BSR set to: 0
  6112  002448  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6113  00244A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6114  00244C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6115                           
  6116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6117                           ; Switch size 1, requested type "simple"
  6118                           ; Number of cases is 1, Range of values is 0 to 0
  6119                           ; switch strategies available:
  6120                           ; Name         Instructions Cycles
  6121                           ; simple_byte            4     3 (average)
  6122                           ;	Chosen strategy is simple_byte
  6123  00244E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6124  002450  0A00               	xorlw	0	; case 0
  6125  002452  A4D8               	btfss	status,2,c
  6126  002454  D022               	goto	l20829
  6127                           
  6128                           ; BSR set to: 0
  6129                           ; Switch size 1, requested type "simple"
  6130                           ; Number of cases is 11, Range of values is 0 to 12
  6131                           ; switch strategies available:
  6132                           ; Name         Instructions Cycles
  6133                           ; simple_byte           34    18 (average)
  6134                           ;	Chosen strategy is simple_byte
  6135  002456  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6136  002458  0A00               	xorlw	0	; case 0
  6137  00245A  B4D8               	btfsc	status,2,c
  6138  00245C  D5A1               	goto	l3353
  6139  00245E  0A01               	xorlw	1	; case 1
  6140  002460  B4D8               	btfsc	status,2,c
  6141  002462  D5FE               	goto	l3367
  6142  002464  0A05               	xorlw	5	; case 4
  6143  002466  B4D8               	btfsc	status,2,c
  6144  002468  D6D7               	goto	l20679
  6145  00246A  0A01               	xorlw	1	; case 5
  6146  00246C  B4D8               	btfsc	status,2,c
  6147  00246E  D6EF               	goto	l20687
  6148  002470  0A03               	xorlw	3	; case 6
  6149  002472  B4D8               	btfsc	status,2,c
  6150  002474  D707               	goto	l20693
  6151  002476  0A01               	xorlw	1	; case 7
  6152  002478  B4D8               	btfsc	status,2,c
  6153  00247A  D730               	goto	l20721
  6154  00247C  0A0F               	xorlw	15	; case 8
  6155  00247E  B4D8               	btfsc	status,2,c
  6156  002480  D741               	goto	l20733
  6157  002482  0A01               	xorlw	1	; case 9
  6158  002484  B4D8               	btfsc	status,2,c
  6159  002486  D755               	goto	l20749
  6160  002488  0A03               	xorlw	3	; case 10
  6161  00248A  B4D8               	btfsc	status,2,c
  6162  00248C  D771               	goto	l20769
  6163  00248E  0A01               	xorlw	1	; case 11
  6164  002490  B4D8               	btfsc	status,2,c
  6165  002492  D784               	goto	l20789
  6166  002494  0A07               	xorlw	7	; case 12
  6167  002496  B4D8               	btfsc	status,2,c
  6168  002498  D7B5               	goto	l20815
  6169  00249A                     l20829:
  6170                           
  6171                           ;sm_MenuConfiguration_MC50.c: 1095:     return haveValueToEdit;
  6172  00249A  0100               	movlb	0	; () banked
  6173  00249C  51E0               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6174                           
  6175                           ; BSR set to: 0
  6176  00249E  0012               	return		;funcret
  6177  0024A0                     __end_of_setValueToEdit:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function _load_New_Menu *****************
  6181 ;; Defined at:
  6182 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  Menu            1    wreg     enum E10813
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  Menu            1   33[COMRAM] enum E10813
  6187 ;;  i               1   34[COMRAM] unsigned char 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  1    wreg      void 
  6190 ;; Registers used:
  6191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6199 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6200 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6201 ;;Total ram usage:        4 bytes
  6202 ;; Hardware stack levels used: 1
  6203 ;; Hardware stack levels required when called: 5
  6204 ;; This function calls:
  6205 ;;		_SetSegmentValueIntermitentMain
  6206 ;;		_SetSegmentValueMain
  6207 ;; This function is called by:
  6208 ;;		_sm_execute_main
  6209 ;;		_sm_execute_menuConfiguration
  6210 ;;		_setValueToEdit
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text4
  6215  003D02                     __ptext4:
  6216                           	callstack 0
  6217  003D02                     _load_New_Menu:
  6218                           	callstack 22
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;incstack = 0
  6222                           ;load_New_Menu@Menu stored from wreg
  6223  003D02  6E22               	movwf	load_New_Menu@Menu^0,c
  6224                           
  6225                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6226  003D04  0E00               	movlw	0
  6227  003D06  0101               	movlb	1	; () banked
  6228  003D08  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6229  003D0A  0E64               	movlw	100
  6230  003D0C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6231                           
  6232                           ; BSR set to: 1
  6233                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6234  003D0E  5022               	movf	load_New_Menu@Menu^0,w,c
  6235  003D10  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6236  003D12  B4D8               	btfsc	status,2,c
  6237  003D14  D006               	goto	l19837
  6238                           
  6239                           ; BSR set to: 1
  6240  003D16  0E01               	movlw	1
  6241  003D18  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6242  003D1A  D003               	goto	l19837
  6243                           
  6244                           ; BSR set to: 1
  6245                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6246  003D1C  0E00               	movlw	0
  6247  003D1E  6F68               	movwf	(_menu_st+23)& (0+255),b
  6248                           
  6249                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6250  003D20  D005               	goto	l19841
  6251  003D22                     l19837:
  6252                           
  6253                           ; BSR set to: 1
  6254  003D22  0E02               	movlw	2
  6255  003D24  6022               	cpfslt	load_New_Menu@Menu^0,c
  6256  003D26  D002               	goto	l19841
  6257                           
  6258                           ; BSR set to: 1
  6259                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6260  003D28  C169  F168         	movff	_menu_st+24,_menu_st+23
  6261  003D2C                     l19841:
  6262                           
  6263                           ; BSR set to: 1
  6264                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6265  003D2C  0E00               	movlw	0
  6266  003D2E  6F65               	movwf	(_menu_st+20)& (0+255),b
  6267                           
  6268                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6269  003D30  D0F6               	goto	l19893
  6270  003D32                     l19843:
  6271                           
  6272                           ; BSR set to: 1
  6273                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6274  003D32  0E00               	movlw	0
  6275  003D34  6F66               	movwf	(_menu_st+21)& (0+255),b
  6276                           
  6277                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6278  003D36  0E0A               	movlw	10
  6279  003D38  6F67               	movwf	(_menu_st+22)& (0+255),b
  6280                           
  6281                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6282  003D3A  0E00               	movlw	0
  6283  003D3C  6F69               	movwf	(_menu_st+24)& (0+255),b
  6284                           
  6285                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6286  003D3E  0E00               	movlw	0
  6287  003D40  6E23               	movwf	load_New_Menu@i^0,c
  6288  003D42                     l19849:
  6289                           
  6290                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6291  003D42  5023               	movf	load_New_Menu@i^0,w,c
  6292  003D44  0D02               	mullw	2
  6293  003D46  0E51               	movlw	low _menu_st
  6294  003D48  24F3               	addwf	243,w,c
  6295  003D4A  6ED9               	movwf	fsr2l,c
  6296  003D4C  0E01               	movlw	high _menu_st
  6297  003D4E  20F4               	addwfc	prodh,w,c
  6298  003D50  6EDA               	movwf	fsr2h,c
  6299  003D52  0E10               	movlw	16
  6300  003D54  6EDF               	movwf	indf2,c
  6301                           
  6302                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6303  003D56  5023               	movf	load_New_Menu@i^0,w,c
  6304  003D58  0D02               	mullw	2
  6305  003D5A  0E52               	movlw	low (_menu_st+1)
  6306  003D5C  24F3               	addwf	243,w,c
  6307  003D5E  6ED9               	movwf	fsr2l,c
  6308  003D60  0E01               	movlw	high (_menu_st+1)
  6309  003D62  20F4               	addwfc	prodh,w,c
  6310  003D64  6EDA               	movwf	fsr2h,c
  6311  003D66  C023  FFDF         	movff	load_New_Menu@i,indf2
  6312                           
  6313                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6314  003D6A  2A23               	incf	load_New_Menu@i^0,f,c
  6315  003D6C  0E09               	movlw	9
  6316  003D6E  6423               	cpfsgt	load_New_Menu@i^0,c
  6317  003D70  D7E8               	goto	l19849
  6318  003D72  D107               	goto	l19895
  6319  003D74                     l19855:
  6320                           
  6321                           ; BSR set to: 1
  6322                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6323  003D74  0E01               	movlw	1
  6324  003D76  6F66               	movwf	(_menu_st+21)& (0+255),b
  6325                           
  6326                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6327  003D78  0E0A               	movlw	10
  6328  003D7A  6F67               	movwf	(_menu_st+22)& (0+255),b
  6329                           
  6330                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6331  003D7C  0E00               	movlw	0
  6332  003D7E  6F69               	movwf	(_menu_st+24)& (0+255),b
  6333                           
  6334                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6335  003D80  0E00               	movlw	0
  6336  003D82  6E23               	movwf	load_New_Menu@i^0,c
  6337  003D84                     l19861:
  6338                           
  6339                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6340  003D84  5023               	movf	load_New_Menu@i^0,w,c
  6341  003D86  0D02               	mullw	2
  6342  003D88  0E51               	movlw	low _menu_st
  6343  003D8A  24F3               	addwf	243,w,c
  6344  003D8C  6ED9               	movwf	fsr2l,c
  6345  003D8E  0E01               	movlw	high _menu_st
  6346  003D90  20F4               	addwfc	prodh,w,c
  6347  003D92  6EDA               	movwf	fsr2h,c
  6348  003D94  0E0E               	movlw	14
  6349  003D96  6EDF               	movwf	indf2,c
  6350                           
  6351                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6352  003D98  5023               	movf	load_New_Menu@i^0,w,c
  6353  003D9A  0D02               	mullw	2
  6354  003D9C  0E52               	movlw	low (_menu_st+1)
  6355  003D9E  24F3               	addwf	243,w,c
  6356  003DA0  6ED9               	movwf	fsr2l,c
  6357  003DA2  0E01               	movlw	high (_menu_st+1)
  6358  003DA4  20F4               	addwfc	prodh,w,c
  6359  003DA6  6EDA               	movwf	fsr2h,c
  6360  003DA8  C023  FFDF         	movff	load_New_Menu@i,indf2
  6361                           
  6362                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6363  003DAC  2A23               	incf	load_New_Menu@i^0,f,c
  6364  003DAE  0E09               	movlw	9
  6365  003DB0  6423               	cpfsgt	load_New_Menu@i^0,c
  6366  003DB2  D7E8               	goto	l19861
  6367  003DB4  D0E6               	goto	l19895
  6368  003DB6                     l19867:
  6369                           
  6370                           ; BSR set to: 1
  6371                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6372  003DB6  0E00               	movlw	0
  6373  003DB8  6F65               	movwf	(_menu_st+20)& (0+255),b
  6374                           
  6375                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6376  003DBA  0E04               	movlw	4
  6377  003DBC  6F66               	movwf	(_menu_st+21)& (0+255),b
  6378                           
  6379                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6380  003DBE  0E04               	movlw	4
  6381  003DC0  6F67               	movwf	(_menu_st+22)& (0+255),b
  6382                           
  6383                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6384  003DC2  0E0A               	movlw	10
  6385  003DC4  6F51               	movwf	_menu_st& (0+255),b
  6386                           
  6387                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6388  003DC6  0E13               	movlw	19
  6389  003DC8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6390                           
  6391                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6392  003DCA  0E17               	movlw	23
  6393  003DCC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6394                           
  6395                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6396  003DCE  0E0A               	movlw	10
  6397  003DD0  6F54               	movwf	(_menu_st+3)& (0+255),b
  6398                           
  6399                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6400  003DD2  0E05               	movlw	5
  6401  003DD4  6F55               	movwf	(_menu_st+4)& (0+255),b
  6402                           
  6403                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6404  003DD6  0E21               	movlw	33
  6405  003DD8  6F56               	movwf	(_menu_st+5)& (0+255),b
  6406                           
  6407                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6408  003DDA  0E0D               	movlw	13
  6409  003DDC  6F57               	movwf	(_menu_st+6)& (0+255),b
  6410                           
  6411                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6412  003DDE  0E01               	movlw	1
  6413  003DE0  D051               	goto	L31
  6414  003DE2                     l19869:
  6415                           
  6416                           ; BSR set to: 1
  6417                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6418  003DE2  0E00               	movlw	0
  6419  003DE4  6F65               	movwf	(_menu_st+20)& (0+255),b
  6420                           
  6421                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6422  003DE6  0E05               	movlw	5
  6423  003DE8  6F66               	movwf	(_menu_st+21)& (0+255),b
  6424                           
  6425                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6426  003DEA  0E02               	movlw	2
  6427  003DEC  6F67               	movwf	(_menu_st+22)& (0+255),b
  6428                           
  6429                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6430  003DEE  0E0D               	movlw	13
  6431  003DF0  6F51               	movwf	_menu_st& (0+255),b
  6432                           
  6433                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6434  003DF2  0E0A               	movlw	10
  6435  003DF4  6F52               	movwf	(_menu_st+1)& (0+255),b
  6436                           
  6437                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6438  003DF6  0E0D               	movlw	13
  6439  003DF8  6F53               	movwf	(_menu_st+2)& (0+255),b
  6440                           
  6441                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6442  003DFA  0E0F               	movlw	15
  6443  003DFC  D08E               	goto	L38
  6444  003DFE                     l19871:
  6445                           
  6446                           ; BSR set to: 1
  6447                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6448  003DFE  0E00               	movlw	0
  6449  003E00  6F65               	movwf	(_menu_st+20)& (0+255),b
  6450                           
  6451                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6452  003E02  0E06               	movlw	6
  6453  003E04  6F66               	movwf	(_menu_st+21)& (0+255),b
  6454                           
  6455                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6456  003E06  0E03               	movlw	3
  6457  003E08  6F67               	movwf	(_menu_st+22)& (0+255),b
  6458                           
  6459                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6460  003E0A  0E0F               	movlw	15
  6461  003E0C  6F51               	movwf	_menu_st& (0+255),b
  6462                           
  6463                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6464  003E0E  0E00               	movlw	0
  6465  003E10  6F52               	movwf	(_menu_st+1)& (0+255),b
  6466                           
  6467                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6468  003E12  0E0F               	movlw	15
  6469  003E14  6F53               	movwf	(_menu_st+2)& (0+255),b
  6470                           
  6471                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6472  003E16  0E05               	movlw	5
  6473  003E18  6F54               	movwf	(_menu_st+3)& (0+255),b
  6474                           
  6475                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6476  003E1A  0E0F               	movlw	15
  6477  003E1C  6F55               	movwf	(_menu_st+4)& (0+255),b
  6478                           
  6479                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6480  003E1E  0E0D               	movlw	13
  6481  003E20  D073               	goto	L33
  6482  003E22                     l19873:
  6483                           
  6484                           ; BSR set to: 1
  6485                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6486  003E22  0E00               	movlw	0
  6487  003E24  6F65               	movwf	(_menu_st+20)& (0+255),b
  6488                           
  6489                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6490  003E26  0E07               	movlw	7
  6491  003E28  6F66               	movwf	(_menu_st+21)& (0+255),b
  6492                           
  6493                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6494  003E2A  0E02               	movlw	2
  6495  003E2C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6496                           
  6497                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6498  003E2E  0E0A               	movlw	10
  6499  003E30  6F51               	movwf	_menu_st& (0+255),b
  6500                           
  6501                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6502  003E32  0E0F               	movlw	15
  6503  003E34  6F52               	movwf	(_menu_st+1)& (0+255),b
  6504                           
  6505                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6506  003E36  0E0A               	movlw	10
  6507  003E38  6F53               	movwf	(_menu_st+2)& (0+255),b
  6508                           
  6509                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6510  003E3A  0E10               	movlw	16
  6511  003E3C  D06E               	goto	L38
  6512  003E3E                     l19875:
  6513                           
  6514                           ; BSR set to: 1
  6515                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6516  003E3E  0E00               	movlw	0
  6517  003E40  6F65               	movwf	(_menu_st+20)& (0+255),b
  6518                           
  6519                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6520  003E42  0E08               	movlw	8
  6521  003E44  6F66               	movwf	(_menu_st+21)& (0+255),b
  6522                           
  6523                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6524  003E46  0E02               	movlw	2
  6525  003E48  6F67               	movwf	(_menu_st+22)& (0+255),b
  6526                           
  6527                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6528  003E4A  0E12               	movlw	18
  6529  003E4C  6F51               	movwf	_menu_st& (0+255),b
  6530                           
  6531                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6532  003E4E  0E0E               	movlw	14
  6533  003E50  6F52               	movwf	(_menu_st+1)& (0+255),b
  6534                           
  6535                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6536  003E52  0E11               	movlw	17
  6537  003E54  6F53               	movwf	(_menu_st+2)& (0+255),b
  6538                           
  6539                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6540  003E56  0E0C               	movlw	12
  6541  003E58  D060               	goto	L38
  6542  003E5A                     l19877:
  6543                           
  6544                           ; BSR set to: 1
  6545                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6546  003E5A  0E00               	movlw	0
  6547  003E5C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6548                           
  6549                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6550  003E5E  0E09               	movlw	9
  6551  003E60  6F66               	movwf	(_menu_st+21)& (0+255),b
  6552                           
  6553                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6554  003E62  0E04               	movlw	4
  6555  003E64  6F67               	movwf	(_menu_st+22)& (0+255),b
  6556                           
  6557                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6558  003E66  0E12               	movlw	18
  6559  003E68  6F51               	movwf	_menu_st& (0+255),b
  6560                           
  6561                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6562  003E6A  0E0A               	movlw	10
  6563  003E6C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6564                           
  6565                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6566  003E6E  0E11               	movlw	17
  6567  003E70  6F53               	movwf	(_menu_st+2)& (0+255),b
  6568                           
  6569                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6570  003E72  0E0A               	movlw	10
  6571  003E74  6F54               	movwf	(_menu_st+3)& (0+255),b
  6572                           
  6573                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6574  003E76  0E11               	movlw	17
  6575  003E78  6F55               	movwf	(_menu_st+4)& (0+255),b
  6576                           
  6577                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6578  003E7A  0E12               	movlw	18
  6579  003E7C  6F56               	movwf	(_menu_st+5)& (0+255),b
  6580                           
  6581                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6582  003E7E  0E05               	movlw	5
  6583  003E80  6F57               	movwf	(_menu_st+6)& (0+255),b
  6584                           
  6585                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6586  003E82  0E15               	movlw	21
  6587  003E84                     L31:
  6588  003E84  6F58               	movwf	(_menu_st+7)& (0+255),b
  6589                           
  6590                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6591  003E86  D07D               	goto	l19895
  6592  003E88                     l19879:
  6593                           
  6594                           ; BSR set to: 1
  6595                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6596  003E88  0E01               	movlw	1
  6597  003E8A  6F65               	movwf	(_menu_st+20)& (0+255),b
  6598                           
  6599                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6600  003E8C  0E0A               	movlw	10
  6601  003E8E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6602                           
  6603                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6604  003E90  0E02               	movlw	2
  6605  003E92  6F67               	movwf	(_menu_st+22)& (0+255),b
  6606                           
  6607                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6608  003E94  0E11               	movlw	17
  6609  003E96  6F51               	movwf	_menu_st& (0+255),b
  6610                           
  6611                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6612  003E98  0E10               	movlw	16
  6613  003E9A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6614                           
  6615                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6616  003E9C  0E10               	movlw	16
  6617  003E9E  6F53               	movwf	(_menu_st+2)& (0+255),b
  6618                           
  6619                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6620  003EA0  0E12               	movlw	18
  6621  003EA2  D03B               	goto	L38
  6622  003EA4                     l19881:
  6623                           
  6624                           ; BSR set to: 1
  6625                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6626  003EA4  0E01               	movlw	1
  6627  003EA6  6F65               	movwf	(_menu_st+20)& (0+255),b
  6628                           
  6629                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6630  003EA8  0E0B               	movlw	11
  6631  003EAA  6F66               	movwf	(_menu_st+21)& (0+255),b
  6632                           
  6633                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6634  003EAC  0E02               	movlw	2
  6635  003EAE  6F67               	movwf	(_menu_st+22)& (0+255),b
  6636                           
  6637                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6638  003EB0  0E14               	movlw	20
  6639  003EB2  6F51               	movwf	_menu_st& (0+255),b
  6640                           
  6641                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6642  003EB4  0E24               	movlw	36
  6643  003EB6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6644                           
  6645                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6646  003EB8  0E14               	movlw	20
  6647  003EBA  6F53               	movwf	(_menu_st+2)& (0+255),b
  6648                           
  6649                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6650  003EBC  0E23               	movlw	35
  6651  003EBE  D02D               	goto	L38
  6652  003EC0                     l19883:
  6653                           
  6654                           ; BSR set to: 1
  6655                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6656  003EC0  0E0C               	movlw	12
  6657  003EC2  6F66               	movwf	(_menu_st+21)& (0+255),b
  6658                           
  6659                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6660  003EC4  0E00               	movlw	0
  6661  003EC6  6F68               	movwf	(_menu_st+23)& (0+255),b
  6662                           
  6663                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6664  003EC8  0E02               	movlw	2
  6665  003ECA  6F67               	movwf	(_menu_st+22)& (0+255),b
  6666                           
  6667                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6668  003ECC  0E05               	movlw	5
  6669  003ECE  6F51               	movwf	_menu_st& (0+255),b
  6670                           
  6671                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6672  003ED0  0E13               	movlw	19
  6673  003ED2  6F52               	movwf	(_menu_st+1)& (0+255),b
  6674                           
  6675                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6676  003ED4  0E05               	movlw	5
  6677  003ED6  D7B0               	goto	L39
  6678  003ED8                     l19885:
  6679                           
  6680                           ; BSR set to: 1
  6681                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6682  003ED8  0E0D               	movlw	13
  6683  003EDA  6F66               	movwf	(_menu_st+21)& (0+255),b
  6684                           
  6685                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6686  003EDC  0E01               	movlw	1
  6687  003EDE  6F67               	movwf	(_menu_st+22)& (0+255),b
  6688                           
  6689                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6690  003EE0  0E0D               	movlw	13
  6691  003EE2  6F51               	movwf	_menu_st& (0+255),b
  6692                           
  6693                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6694  003EE4  0E12               	movlw	18
  6695  003EE6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6696                           
  6697                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6698  003EE8  0E00               	movlw	0
  6699  003EEA  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6700  003EEC  0E3C               	movlw	60
  6701  003EEE  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6702                           
  6703                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6704  003EF0  D048               	goto	l19895
  6705  003EF2                     l19887:
  6706                           
  6707                           ; BSR set to: 1
  6708                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6709  003EF2  0E05               	movlw	5
  6710  003EF4  6F51               	movwf	_menu_st& (0+255),b
  6711                           
  6712                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6713  003EF6  0E0C               	movlw	12
  6714  003EF8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6715                           
  6716                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6717  003EFA  0E05               	movlw	5
  6718  003EFC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6719                           
  6720                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6721  003EFE  0E0E               	movlw	14
  6722  003F00  6F54               	movwf	(_menu_st+3)& (0+255),b
  6723                           
  6724                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6725  003F02  0E22               	movlw	34
  6726  003F04  6F55               	movwf	(_menu_st+4)& (0+255),b
  6727                           
  6728                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6729  003F06  0E14               	movlw	20
  6730  003F08                     L33:
  6731  003F08  6F56               	movwf	(_menu_st+5)& (0+255),b
  6732                           
  6733                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6734  003F0A  D03B               	goto	l19895
  6735  003F0C                     l19889:
  6736                           
  6737                           ; BSR set to: 1
  6738                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6739  003F0C  0E12               	movlw	18
  6740  003F0E  6F51               	movwf	_menu_st& (0+255),b
  6741                           
  6742                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6743  003F10  0E0E               	movlw	14
  6744  003F12  6F52               	movwf	(_menu_st+1)& (0+255),b
  6745                           
  6746                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6747  003F14  0E14               	movlw	20
  6748  003F16  6F53               	movwf	(_menu_st+2)& (0+255),b
  6749                           
  6750                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6751  003F18  0E15               	movlw	21
  6752  003F1A                     L38:
  6753  003F1A  6F54               	movwf	(_menu_st+3)& (0+255),b
  6754                           
  6755                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6756  003F1C  D032               	goto	l19895
  6757  003F1E                     l19893:
  6758                           
  6759                           ; BSR set to: 1
  6760  003F1E  5022               	movf	load_New_Menu@Menu^0,w,c
  6761  003F20  6E20               	movwf	??_load_New_Menu^0,c
  6762  003F22  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6763                           
  6764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6765                           ; Switch size 1, requested type "simple"
  6766                           ; Number of cases is 1, Range of values is 0 to 0
  6767                           ; switch strategies available:
  6768                           ; Name         Instructions Cycles
  6769                           ; simple_byte            4     3 (average)
  6770                           ;	Chosen strategy is simple_byte
  6771  003F24  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6772  003F26  0A00               	xorlw	0	; case 0
  6773  003F28  A4D8               	btfss	status,2,c
  6774  003F2A  D02B               	goto	l19895
  6775                           
  6776                           ; BSR set to: 1
  6777                           ; Switch size 1, requested type "simple"
  6778                           ; Number of cases is 14, Range of values is 0 to 13
  6779                           ; switch strategies available:
  6780                           ; Name         Instructions Cycles
  6781                           ; simple_byte           43    22 (average)
  6782                           ;	Chosen strategy is simple_byte
  6783  003F2C  5020               	movf	??_load_New_Menu^0,w,c
  6784  003F2E  0A00               	xorlw	0	; case 0
  6785  003F30  B4D8               	btfsc	status,2,c
  6786  003F32  D6FF               	goto	l19843
  6787  003F34  0A01               	xorlw	1	; case 1
  6788  003F36  B4D8               	btfsc	status,2,c
  6789  003F38  D71D               	goto	l19855
  6790  003F3A  0A03               	xorlw	3	; case 2
  6791  003F3C  B4D8               	btfsc	status,2,c
  6792  003F3E  D7E6               	goto	l19889
  6793  003F40  0A01               	xorlw	1	; case 3
  6794  003F42  B4D8               	btfsc	status,2,c
  6795  003F44  D7D6               	goto	l19887
  6796  003F46  0A07               	xorlw	7	; case 4
  6797  003F48  B4D8               	btfsc	status,2,c
  6798  003F4A  D735               	goto	l19867
  6799  003F4C  0A01               	xorlw	1	; case 5
  6800  003F4E  B4D8               	btfsc	status,2,c
  6801  003F50  D748               	goto	l19869
  6802  003F52  0A03               	xorlw	3	; case 6
  6803  003F54  B4D8               	btfsc	status,2,c
  6804  003F56  D753               	goto	l19871
  6805  003F58  0A01               	xorlw	1	; case 7
  6806  003F5A  B4D8               	btfsc	status,2,c
  6807  003F5C  D762               	goto	l19873
  6808  003F5E  0A0F               	xorlw	15	; case 8
  6809  003F60  B4D8               	btfsc	status,2,c
  6810  003F62  D76D               	goto	l19875
  6811  003F64  0A01               	xorlw	1	; case 9
  6812  003F66  B4D8               	btfsc	status,2,c
  6813  003F68  D778               	goto	l19877
  6814  003F6A  0A03               	xorlw	3	; case 10
  6815  003F6C  B4D8               	btfsc	status,2,c
  6816  003F6E  D78C               	goto	l19879
  6817  003F70  0A01               	xorlw	1	; case 11
  6818  003F72  B4D8               	btfsc	status,2,c
  6819  003F74  D797               	goto	l19881
  6820  003F76  0A07               	xorlw	7	; case 12
  6821  003F78  B4D8               	btfsc	status,2,c
  6822  003F7A  D7A2               	goto	l19883
  6823  003F7C  0A01               	xorlw	1	; case 13
  6824  003F7E  B4D8               	btfsc	status,2,c
  6825  003F80  D7AB               	goto	l19885
  6826  003F82                     l19895:
  6827                           
  6828                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6829  003F82  0101               	movlb	1	; () banked
  6830  003F84  5167               	movf	(_menu_st+22)& (0+255),w,b
  6831  003F86  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6832  003F88  A0D8               	btfss	status,0,c
  6833  003F8A  D002               	goto	l19899
  6834                           
  6835                           ; BSR set to: 1
  6836                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6837  003F8C  0E00               	movlw	0
  6838  003F8E  6F68               	movwf	(_menu_st+23)& (0+255),b
  6839  003F90                     l19899:
  6840                           
  6841                           ; BSR set to: 1
  6842                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6843  003F90  0E0D               	movlw	13
  6844  003F92  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6845  003F94  A4D8               	btfss	status,2,c
  6846  003F96  D01A               	goto	l19903
  6847                           
  6848                           ; BSR set to: 1
  6849                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6850  003F98  5168               	movf	(_menu_st+23)& (0+255),w,b
  6851  003F9A  0D02               	mullw	2
  6852  003F9C  0E52               	movlw	low (_menu_st+1)
  6853  003F9E  24F3               	addwf	243,w,c
  6854  003FA0  6ED9               	movwf	fsr2l,c
  6855  003FA2  0E01               	movlw	high (_menu_st+1)
  6856  003FA4  20F4               	addwfc	prodh,w,c
  6857  003FA6  6EDA               	movwf	fsr2h,c
  6858  003FA8  50DF               	movf	indf2,w,c
  6859  003FAA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  6860  003FAC  0E00               	movlw	0
  6861  003FAE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  6862  003FB0  0E0A               	movlw	10
  6863  003FB2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  6864  003FB4  5168               	movf	(_menu_st+23)& (0+255),w,b
  6865  003FB6  0D02               	mullw	2
  6866  003FB8  0E51               	movlw	low _menu_st
  6867  003FBA  24F3               	addwf	243,w,c
  6868  003FBC  6ED9               	movwf	fsr2l,c
  6869  003FBE  0E01               	movlw	high _menu_st
  6870  003FC0  20F4               	addwfc	prodh,w,c
  6871  003FC2  6EDA               	movwf	fsr2h,c
  6872  003FC4  50DF               	movf	indf2,w,c
  6873  003FC6  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  6874                           
  6875                           ;sm_MenuConfiguration_MC50.c: 640:     }
  6876  003FCA  0012               	return	
  6877  003FCC                     l19903:
  6878                           
  6879                           ; BSR set to: 1
  6880                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  6881  003FCC  5168               	movf	(_menu_st+23)& (0+255),w,b
  6882  003FCE  0D02               	mullw	2
  6883  003FD0  0E52               	movlw	low (_menu_st+1)
  6884  003FD2  24F3               	addwf	243,w,c
  6885  003FD4  6ED9               	movwf	fsr2l,c
  6886  003FD6  0E01               	movlw	high (_menu_st+1)
  6887  003FD8  20F4               	addwfc	prodh,w,c
  6888  003FDA  6EDA               	movwf	fsr2h,c
  6889  003FDC  50DF               	movf	indf2,w,c
  6890  003FDE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  6891  003FE0  5168               	movf	(_menu_st+23)& (0+255),w,b
  6892  003FE2  0D02               	mullw	2
  6893  003FE4  0E51               	movlw	low _menu_st
  6894  003FE6  24F3               	addwf	243,w,c
  6895  003FE8  6ED9               	movwf	fsr2l,c
  6896  003FEA  0E01               	movlw	high _menu_st
  6897  003FEC  20F4               	addwfc	prodh,w,c
  6898  003FEE  6EDA               	movwf	fsr2h,c
  6899  003FF0  50DF               	movf	indf2,w,c
  6900  003FF2  EC27  F048         	call	_SetSegmentValueMain
  6901  003FF6  0012               	return		;funcret
  6902  003FF8                     __end_of_load_New_Menu:
  6903                           	callstack 0
  6904                           
  6905 ;; *************** function _InitReceiver *****************
  6906 ;; Defined at:
  6907 ;;		line 207 in file "inputs_MC50.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;		None
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;		None
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  1    wreg      void 
  6914 ;; Registers used:
  6915 ;;		wreg, status,2
  6916 ;; Tracked objects:
  6917 ;;		On entry : 30/F
  6918 ;;		On exit  : 3F/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6925 ;;Total ram usage:        0 bytes
  6926 ;; Hardware stack levels used: 1
  6927 ;; Hardware stack levels required when called: 4
  6928 ;; This function calls:
  6929 ;;		Nothing
  6930 ;; This function is called by:
  6931 ;;		_main
  6932 ;;		_setValueToEdit
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           	psect	text5
  6937  009034                     __ptext5:
  6938                           	callstack 0
  6939  009034                     _InitReceiver:
  6940                           	callstack 23
  6941                           
  6942                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  6943                           
  6944                           ;incstack = 0
  6945  009034  010E               	movlb	14	; () banked
  6946  009036  9BCA               	bcf	202,5,b	;volatile
  6947                           
  6948                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  6949  009038  8BC2               	bsf	194,5,b	;volatile
  6950                           
  6951                           ;inputs_MC50.c: 210:     GIE = 1;
  6952  00903A  8EF2               	bsf	4082,7,c	;volatile
  6953                           
  6954                           ; BSR set to: 14
  6955                           ;inputs_MC50.c: 211:     RFstate = 0;
  6956  00903C  0E00               	movlw	0
  6957  00903E  0101               	movlb	1	; () banked
  6958  009040  6F98               	movwf	_RFstate& (0+255),b
  6959                           
  6960                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  6961  009042  0E00               	movlw	0
  6962  009044  0100               	movlb	0	; () banked
  6963  009046  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  6964                           
  6965                           ;inputs_MC50.c: 213:     RFFull = 0;
  6966  009048  0E00               	movlw	0
  6967  00904A  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  6968                           
  6969                           ; BSR set to: 0
  6970  00904C  0012               	return		;funcret
  6971  00904E                     __end_of_InitReceiver:
  6972                           	callstack 0
  6973                           
  6974 ;; *************** function _controlSelectRemote *****************
  6975 ;; Defined at:
  6976 ;;		line 1098 in file "sm_MenuConfiguration_MC50.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;		None
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  typeRemote      1   11[BANK0 ] enum E10392
  6981 ;;  pos             1   10[BANK0 ] unsigned char 
  6982 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  6983 ;;  temp            1   16[BANK0 ] unsigned char 
  6984 ;;  validSerial     1    9[BANK0 ] unsigned char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      void 
  6987 ;; Registers used:
  6988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 3F/1
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6997 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6998 ;;Total ram usage:        9 bytes
  6999 ;; Hardware stack levels used: 1
  7000 ;; Hardware stack levels required when called: 14
  7001 ;; This function calls:
  7002 ;;		_ClearFlag_rfCMD
  7003 ;;		_RemoveSerial
  7004 ;;		_SaveNVM_VarSystem
  7005 ;;		_SetSegmentValue
  7006 ;;		_SetSegmentValueIntermitentMain
  7007 ;;		_SetSegmentValueMain
  7008 ;;		___awdiv
  7009 ;;		___lbmod
  7010 ;;		_cmdMemoryIsEmpty
  7011 ;;		_getSerialCmd
  7012 ;;		_getTypeRemote
  7013 ;;		_saveNewSerial
  7014 ;;		_sm_send_event
  7015 ;;		_validateRemoteSerialNumber
  7016 ;; This function is called by:
  7017 ;;		_sm_execute_menuConfiguration
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           	psect	text6
  7022  0032D4                     __ptext6:
  7023                           	callstack 0
  7024  0032D4                     _controlSelectRemote:
  7025                           	callstack 14
  7026                           
  7027                           ; BSR set to: 1
  7028                           ;sm_MenuConfiguration_MC50.c: 1099:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1100:     char temp=getSerialCmd(&tempSerial);
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;incstack = 0
  7032  0032D4  0EE4               	movlw	low controlSelectRemote@tempSerial
  7033  0032D6  6E1B               	movwf	getSerialCmd@serial^0,c
  7034  0032D8  EC76  F043         	call	_getSerialCmd	;wreg free
  7035  0032DC  0100               	movlb	0	; () banked
  7036  0032DE  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;sm_MenuConfiguration_MC50.c: 1101:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          102:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7040  0032E0  0101               	movlb	1	; () banked
  7041  0032E2  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7042  0032E4  D008               	goto	u23960
  7043  0032E6  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7044  0032E8  E103               	bnz	u23950
  7045  0032EA  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7046  0032EC  A0D8               	btfss	status,0,c
  7047  0032EE  D003               	goto	u23960
  7048  0032F0                     u23950:
  7049                           
  7050                           ; BSR set to: 1
  7051  0032F0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7052  0032F2  A4D8               	btfss	status,2,c
  7053  0032F4  D028               	goto	l20973
  7054  0032F6                     u23960:
  7055                           
  7056                           ; BSR set to: 1
  7057                           ;sm_MenuConfiguration_MC50.c: 1103:     {;sm_MenuConfiguration_MC50.c: 1104:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7058  0032F6  0EED               	movlw	low _main_stateMachine
  7059  0032F8  6E12               	movwf	sm_send_event@psm^0,c
  7060  0032FA  0E01               	movlw	high _main_stateMachine
  7061  0032FC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7062  0032FE  0E00               	movlw	0
  7063  003300  6E15               	movwf	(sm_send_event@event+1)^0,c
  7064  003302  0E07               	movlw	7
  7065  003304  6E14               	movwf	sm_send_event@event^0,c
  7066  003306  EC6F  F041         	call	_sm_send_event	;wreg free
  7067                           
  7068                           ;sm_MenuConfiguration_MC50.c: 1105:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7069  00330A  0EBD               	movlw	low _menuConfiguration_stateMachine
  7070  00330C  6E12               	movwf	sm_send_event@psm^0,c
  7071  00330E  0E02               	movlw	high _menuConfiguration_stateMachine
  7072  003310  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7073  003312  0E00               	movlw	0
  7074  003314  6E15               	movwf	(sm_send_event@event+1)^0,c
  7075  003316  0E03               	movlw	3
  7076  003318  6E14               	movwf	sm_send_event@event^0,c
  7077  00331A  EC6F  F041         	call	_sm_send_event	;wreg free
  7078                           
  7079                           ;sm_MenuConfiguration_MC50.c: 1106:         var_sys.DistanceProgrammingActive=NO;
  7080  00331E  0E00               	movlw	0
  7081  003320  0101               	movlb	1	; () banked
  7082  003322  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7083                           
  7084                           ; BSR set to: 1
  7085                           ;sm_MenuConfiguration_MC50.c: 1107:         var_sys.ProgrammingDistanceIs=NoCMD;
  7086  003324  0E00               	movlw	0
  7087  003326  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7088                           
  7089                           ; BSR set to: 1
  7090                           ;sm_MenuConfiguration_MC50.c: 1108:         SetSegmentValueMain(dMinus,dMinus);
  7091  003328  0E18               	movlw	24
  7092  00332A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7093  00332C  0E18               	movlw	24
  7094  00332E  EC27  F048         	call	_SetSegmentValueMain
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;sm_MenuConfiguration_MC50.c: 1109:         ClearFlag_rfCMD();
  7098  003332  EC78  F049         	call	_ClearFlag_rfCMD	;wreg free
  7099                           
  7100                           ;sm_MenuConfiguration_MC50.c: 1110:         button_struct.processed=1;
  7101  003336  0E01               	movlw	1
  7102  003338  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7103                           
  7104                           ;sm_MenuConfiguration_MC50.c: 1111:         ts_system.timeoutMenu = 0;
  7105  00333A  0E00               	movlw	0
  7106  00333C  0101               	movlb	1	; () banked
  7107  00333E  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7108  003340  0E00               	movlw	0
  7109  003342  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7110                           
  7111                           ;sm_MenuConfiguration_MC50.c: 1113:     }
  7112  003344  0012               	return	
  7113  003346                     l20973:
  7114                           
  7115                           ; BSR set to: 1
  7116  003346  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7117  003348  A4D8               	btfss	status,2,c
  7118  00334A  D05B               	goto	l20995
  7119                           
  7120                           ; BSR set to: 1
  7121  00334C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7122  00334E  B4D8               	btfsc	status,2,c
  7123  003350  D058               	goto	l20995
  7124                           
  7125                           ; BSR set to: 1
  7126                           ;sm_MenuConfiguration_MC50.c: 1115:     {;sm_MenuConfiguration_MC50.c: 1116:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7127  003352  0E00               	movlw	0
  7128  003354  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7129  003356  0E64               	movlw	100
  7130  003358  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7131                           
  7132                           ; BSR set to: 1
  7133                           ;sm_MenuConfiguration_MC50.c: 1117:         if(edit_Param.tempValue<=edit_Param.Min)
  7134  00335A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7135  00335C  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7136  00335E  A0D8               	btfss	status,0,c
  7137  003360  D003               	goto	l20983
  7138                           
  7139                           ; BSR set to: 1
  7140                           ;sm_MenuConfiguration_MC50.c: 1118:         {;sm_MenuConfiguration_MC50.c: 1119:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7141  003362  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7142                           
  7143                           ;sm_MenuConfiguration_MC50.c: 1120:         }
  7144  003366  D001               	goto	l20985
  7145  003368                     l20983:
  7146                           
  7147                           ; BSR set to: 1
  7148                           ;sm_MenuConfiguration_MC50.c: 1122:         {;sm_MenuConfiguration_MC50.c: 1123:        
      +                               edit_Param.tempValue--;
  7149  003368  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7150  00336A                     l20985:
  7151                           
  7152                           ; BSR set to: 1
  7153                           ;sm_MenuConfiguration_MC50.c: 1125:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7154  00336A  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7155  00336E  5168               	movf	(_menu_st+23)& (0+255),w,b
  7156  003370  ECFD  F03A         	call	_cmdMemoryIsEmpty
  7157  003374  06E8               	decf	wreg,f,c
  7158  003376  B4D8               	btfsc	status,2,c
  7159  003378  D004               	goto	u24010
  7160  00337A  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7161  00337C  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7162  00337E  A4D8               	btfss	status,2,c
  7163  003380  D021               	goto	l20991
  7164  003382                     u24010:
  7165                           
  7166                           ;sm_MenuConfiguration_MC50.c: 1126:         {;sm_MenuConfiguration_MC50.c: 1127:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7167  003382  0E0A               	movlw	10
  7168  003384  6E10               	movwf	___lbmod@divisor^0,c
  7169  003386  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7170  003388  ECEF  F046         	call	___lbmod
  7171  00338C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7172  00338E  0E00               	movlw	0
  7173  003390  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7174  003392  0E14               	movlw	20
  7175  003394  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7176  003396  0E0A               	movlw	10
  7177  003398  6E10               	movwf	___lbmod@divisor^0,c
  7178  00339A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7179  00339C  ECEF  F046         	call	___lbmod
  7180  0033A0  0100               	movlb	0	; () banked
  7181  0033A2  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7182  0033A4  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7183  0033A6  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7184  0033A8  6E14               	movwf	___awdiv@dividend^0,c
  7185  0033AA  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7186  0033AC  A0D8               	btfss	status,0,c
  7187  0033AE  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7188  0033B0  0E00               	movlw	0
  7189  0033B2  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7190  0033B4  0E0A               	movlw	10
  7191  0033B6  6E16               	movwf	___awdiv@divisor^0,c
  7192  0033B8  ECE8  F03C         	call	___awdiv	;wreg free
  7193  0033BC  5014               	movf	?___awdiv^0,w,c
  7194  0033BE  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  7195                           
  7196                           ;sm_MenuConfiguration_MC50.c: 1128:         }
  7197  0033C2  D01C               	goto	l20993
  7198  0033C4                     l20991:
  7199                           
  7200                           ;sm_MenuConfiguration_MC50.c: 1130:         {;sm_MenuConfiguration_MC50.c: 1131:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7201  0033C4  0E0A               	movlw	10
  7202  0033C6  6E10               	movwf	___lbmod@divisor^0,c
  7203  0033C8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7204  0033CA  ECEF  F046         	call	___lbmod
  7205  0033CE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7206  0033D0  0E0A               	movlw	10
  7207  0033D2  6E10               	movwf	___lbmod@divisor^0,c
  7208  0033D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7209  0033D6  ECEF  F046         	call	___lbmod
  7210  0033DA  0100               	movlb	0	; () banked
  7211  0033DC  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7212  0033DE  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7213  0033E0  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7214  0033E2  6E14               	movwf	___awdiv@dividend^0,c
  7215  0033E4  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7216  0033E6  A0D8               	btfss	status,0,c
  7217  0033E8  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7218  0033EA  0E00               	movlw	0
  7219  0033EC  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7220  0033EE  0E0A               	movlw	10
  7221  0033F0  6E16               	movwf	___awdiv@divisor^0,c
  7222  0033F2  ECE8  F03C         	call	___awdiv	;wreg free
  7223  0033F6  5014               	movf	?___awdiv^0,w,c
  7224  0033F8  EC27  F048         	call	_SetSegmentValueMain
  7225  0033FC                     l20993:
  7226                           
  7227                           ;sm_MenuConfiguration_MC50.c: 1133:         button_struct.processed=1;
  7228  0033FC  0E01               	movlw	1
  7229  0033FE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7230                           
  7231                           ;sm_MenuConfiguration_MC50.c: 1134:     }
  7232  003400  0012               	return	
  7233  003402                     l20995:
  7234                           
  7235                           ; BSR set to: 1
  7236  003402  0E17               	movlw	23
  7237  003404  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7238  003406  A4D8               	btfss	status,2,c
  7239  003408  D057               	goto	l21017
  7240                           
  7241                           ; BSR set to: 1
  7242  00340A  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7243  00340C  B4D8               	btfsc	status,2,c
  7244  00340E  D054               	goto	l21017
  7245                           
  7246                           ; BSR set to: 1
  7247                           ;sm_MenuConfiguration_MC50.c: 1136:     {;sm_MenuConfiguration_MC50.c: 1137:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7248  003410  0E00               	movlw	0
  7249  003412  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7250  003414  0E64               	movlw	100
  7251  003416  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7252                           
  7253                           ; BSR set to: 1
  7254                           ;sm_MenuConfiguration_MC50.c: 1138:         edit_Param.tempValue++;
  7255  003418  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7256                           
  7257                           ; BSR set to: 1
  7258                           ;sm_MenuConfiguration_MC50.c: 1139:         if(edit_Param.tempValue>edit_Param.Max)
  7259  00341A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7260  00341C  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7261  00341E  A0D8               	btfss	status,0,c
  7262                           
  7263                           ; BSR set to: 1
  7264                           ;sm_MenuConfiguration_MC50.c: 1140:         {;sm_MenuConfiguration_MC50.c: 1141:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7265  003420  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7266                           
  7267                           ; BSR set to: 1
  7268                           ;sm_MenuConfiguration_MC50.c: 1143:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7269  003424  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7270  003428  5168               	movf	(_menu_st+23)& (0+255),w,b
  7271  00342A  ECFD  F03A         	call	_cmdMemoryIsEmpty
  7272  00342E  06E8               	decf	wreg,f,c
  7273  003430  B4D8               	btfsc	status,2,c
  7274  003432  D004               	goto	u24060
  7275  003434  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7276  003436  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7277  003438  A4D8               	btfss	status,2,c
  7278  00343A  D021               	goto	l21013
  7279  00343C                     u24060:
  7280                           
  7281                           ;sm_MenuConfiguration_MC50.c: 1144:         {;sm_MenuConfiguration_MC50.c: 1145:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7282  00343C  0E0A               	movlw	10
  7283  00343E  6E10               	movwf	___lbmod@divisor^0,c
  7284  003440  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7285  003442  ECEF  F046         	call	___lbmod
  7286  003446  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7287  003448  0E00               	movlw	0
  7288  00344A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7289  00344C  0E14               	movlw	20
  7290  00344E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7291  003450  0E0A               	movlw	10
  7292  003452  6E10               	movwf	___lbmod@divisor^0,c
  7293  003454  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7294  003456  ECEF  F046         	call	___lbmod
  7295  00345A  0100               	movlb	0	; () banked
  7296  00345C  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7297  00345E  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7298  003460  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7299  003462  6E14               	movwf	___awdiv@dividend^0,c
  7300  003464  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7301  003466  A0D8               	btfss	status,0,c
  7302  003468  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7303  00346A  0E00               	movlw	0
  7304  00346C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7305  00346E  0E0A               	movlw	10
  7306  003470  6E16               	movwf	___awdiv@divisor^0,c
  7307  003472  ECE8  F03C         	call	___awdiv	;wreg free
  7308  003476  5014               	movf	?___awdiv^0,w,c
  7309  003478  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  7310                           
  7311                           ;sm_MenuConfiguration_MC50.c: 1146:         }
  7312  00347C  D7BF               	goto	l20993
  7313  00347E                     l21013:
  7314                           
  7315                           ;sm_MenuConfiguration_MC50.c: 1148:         {;sm_MenuConfiguration_MC50.c: 1149:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7316  00347E  0E0A               	movlw	10
  7317  003480  6E10               	movwf	___lbmod@divisor^0,c
  7318  003482  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7319  003484  ECEF  F046         	call	___lbmod
  7320  003488  6E1C               	movwf	SetSegmentValue@d2^0,c
  7321  00348A  0E0A               	movlw	10
  7322  00348C  6E10               	movwf	___lbmod@divisor^0,c
  7323  00348E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7324  003490  ECEF  F046         	call	___lbmod
  7325  003494  0100               	movlb	0	; () banked
  7326  003496  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7327  003498  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7328  00349A  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7329  00349C  6E14               	movwf	___awdiv@dividend^0,c
  7330  00349E  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7331  0034A0  A0D8               	btfss	status,0,c
  7332  0034A2  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7333  0034A4  0E00               	movlw	0
  7334  0034A6  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7335  0034A8  0E0A               	movlw	10
  7336  0034AA  6E16               	movwf	___awdiv@divisor^0,c
  7337  0034AC  ECE8  F03C         	call	___awdiv	;wreg free
  7338  0034B0  5014               	movf	?___awdiv^0,w,c
  7339  0034B2  EC41  F048         	call	_SetSegmentValue
  7340  0034B6  D7A2               	goto	l20993
  7341  0034B8                     l21017:
  7342                           
  7343                           ; BSR set to: 1
  7344  0034B8  0E63               	movlw	99
  7345  0034BA  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7346  0034BC  D01A               	goto	l21027
  7347                           
  7348                           ; BSR set to: 1
  7349  0034BE  0E63               	movlw	99
  7350  0034C0  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7351  0034C2  D017               	goto	l21027
  7352                           
  7353                           ; BSR set to: 1
  7354                           ;sm_MenuConfiguration_MC50.c: 1154:     {;sm_MenuConfiguration_MC50.c: 1155:         if(
      +                          menu_st.parameterSelected==0)
  7355  0034C4  5168               	movf	(_menu_st+23)& (0+255),w,b
  7356  0034C6  A4D8               	btfss	status,2,c
  7357  0034C8  D00A               	goto	l21025
  7358                           
  7359                           ; BSR set to: 1
  7360                           ;sm_MenuConfiguration_MC50.c: 1156:         {;sm_MenuConfiguration_MC50.c: 1157:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7361  0034CA  0E13               	movlw	19
  7362  0034CC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7363  0034CE  0E00               	movlw	0
  7364  0034D0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7365  0034D2  0E0A               	movlw	10
  7366  0034D4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7367  0034D6  0E12               	movlw	18
  7368  0034D8  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  7369                           
  7370                           ;sm_MenuConfiguration_MC50.c: 1158:         }
  7371  0034DC  0012               	return	
  7372  0034DE                     l21025:
  7373                           
  7374                           ; BSR set to: 1
  7375                           ;sm_MenuConfiguration_MC50.c: 1160:         {;sm_MenuConfiguration_MC50.c: 1161:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7376  0034DE  0E10               	movlw	16
  7377  0034E0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7378  0034E2  0E00               	movlw	0
  7379  0034E4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7380  0034E6  0E0A               	movlw	10
  7381  0034E8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7382  0034EA  0E12               	movlw	18
  7383  0034EC  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  7384  0034F0  0012               	return	
  7385  0034F2                     l21027:
  7386                           
  7387                           ; BSR set to: 1
  7388  0034F2  0100               	movlb	0	; () banked
  7389  0034F4  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7390  0034F6  B4D8               	btfsc	status,2,c
  7391  0034F8  D097               	goto	l21085
  7392                           
  7393                           ; BSR set to: 0
  7394  0034FA  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7395  0034FC  B4D8               	btfsc	status,2,c
  7396  0034FE  D00F               	goto	u24150
  7397                           
  7398                           ; BSR set to: 0
  7399  003500  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7400  003502  B4D8               	btfsc	status,2,c
  7401  003504  D00C               	goto	u24150
  7402                           
  7403                           ; BSR set to: 0
  7404  003506  0E02               	movlw	2
  7405  003508  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7406  00350A  B4D8               	btfsc	status,2,c
  7407  00350C  D008               	goto	u24150
  7408                           
  7409                           ; BSR set to: 0
  7410  00350E  0E04               	movlw	4
  7411  003510  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7412  003512  B4D8               	btfsc	status,2,c
  7413  003514  D004               	goto	u24150
  7414                           
  7415                           ; BSR set to: 0
  7416  003516  0E08               	movlw	8
  7417  003518  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7418  00351A  A4D8               	btfss	status,2,c
  7419  00351C  D085               	goto	l21085
  7420  00351E                     u24150:
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;sm_MenuConfiguration_MC50.c: 1165:     {;sm_MenuConfiguration_MC50.c: 1166:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1167:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7424  00351E  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7425  003522  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7426  003526  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7427  00352A  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7428  00352E  0E00               	movlw	0
  7429  003530  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7430  003532  0EE2               	movlw	low controlSelectRemote@pos
  7431  003534  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7432  003536  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7433  003538  EC80  F02A         	call	_validateRemoteSerialNumber	;wreg free
  7434  00353C  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;sm_MenuConfiguration_MC50.c: 1169:         TypeRemote_st typeRemote = getTypeRemote();
  7438  00353E  EC75  F049         	call	_getTypeRemote	;wreg free
  7439  003542  0100               	movlb	0	; () banked
  7440  003544  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;sm_MenuConfiguration_MC50.c: 1170:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7444  003546  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7445  003548  A4D8               	btfss	status,2,c
  7446  00354A  0012               	return	
  7447                           
  7448                           ; BSR set to: 0
  7449  00354C  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7450  00354E  B4D8               	btfsc	status,2,c
  7451  003550  D003               	goto	u24180
  7452                           
  7453                           ; BSR set to: 0
  7454  003552  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7455  003554  A4D8               	btfss	status,2,c
  7456  003556  0012               	return	
  7457  003558                     u24180:
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;sm_MenuConfiguration_MC50.c: 1171:         {;sm_MenuConfiguration_MC50.c: 1172:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7461  003558  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7462  00355C  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7463  003560  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7464  003564  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7465  003568  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7466  00356C  0101               	movlb	1	; () banked
  7467  00356E  5168               	movf	(_menu_st+23)& (0+255),w,b
  7468  003570  EC94  F03F         	call	_saveNewSerial
  7469                           
  7470                           ;sm_MenuConfiguration_MC50.c: 1173:             if(edit_Param.tempValue==var_sys_NVM.pos
      +                          itionRemotesFull&&var_sys_NVM.positionRemotesFull<99)
  7471  003574  0100               	movlb	0	; () banked
  7472  003576  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7473  003578  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7474  00357A  A4D8               	btfss	status,2,c
  7475  00357C  D004               	goto	l21057
  7476                           
  7477                           ; BSR set to: 0
  7478  00357E  0E63               	movlw	99
  7479  003580  61B8               	cpfslt	(_var_sys_NVM+32)& (0+255),b	;volatile
  7480  003582  D001               	goto	l21057
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;sm_MenuConfiguration_MC50.c: 1174:                 var_sys_NVM.positionRemotesFull++;
  7484  003584  2BB8               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7485  003586                     l21057:
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;sm_MenuConfiguration_MC50.c: 1175:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7489  003586  0EBD               	movlw	low _menuConfiguration_stateMachine
  7490  003588  6E12               	movwf	sm_send_event@psm^0,c
  7491  00358A  0E02               	movlw	high _menuConfiguration_stateMachine
  7492  00358C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7493  00358E  0E00               	movlw	0
  7494  003590  6E15               	movwf	(sm_send_event@event+1)^0,c
  7495  003592  0E08               	movlw	8
  7496  003594  6E14               	movwf	sm_send_event@event^0,c
  7497  003596  EC6F  F041         	call	_sm_send_event	;wreg free
  7498                           
  7499                           ;sm_MenuConfiguration_MC50.c: 1176:             var_sys.DistanceProgrammingActive=NO;
  7500  00359A  0E00               	movlw	0
  7501  00359C  0101               	movlb	1	; () banked
  7502  00359E  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7503                           
  7504                           ; BSR set to: 1
  7505                           ;sm_MenuConfiguration_MC50.c: 1177:             var_sys.ProgrammingDistanceIs=NoCMD;
  7506  0035A0  0E00               	movlw	0
  7507  0035A2  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7508                           
  7509                           ; BSR set to: 1
  7510                           ;sm_MenuConfiguration_MC50.c: 1178:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7511  0035A4  0E00               	movlw	0
  7512  0035A6  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7513  0035A8  0E28               	movlw	40
  7514  0035AA  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7515                           
  7516                           ; BSR set to: 1
  7517                           ;sm_MenuConfiguration_MC50.c: 1179:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7518  0035AC  0E0A               	movlw	10
  7519  0035AE  6E10               	movwf	___lbmod@divisor^0,c
  7520  0035B0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7521  0035B2  ECEF  F046         	call	___lbmod
  7522  0035B6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7523  0035B8  0E00               	movlw	0
  7524  0035BA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7525  0035BC  0E04               	movlw	4
  7526  0035BE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7527  0035C0  0E0A               	movlw	10
  7528  0035C2  6E10               	movwf	___lbmod@divisor^0,c
  7529  0035C4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7530  0035C6  ECEF  F046         	call	___lbmod
  7531  0035CA  0100               	movlb	0	; () banked
  7532  0035CC  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7533  0035CE  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7534  0035D0  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7535  0035D2  6E14               	movwf	___awdiv@dividend^0,c
  7536  0035D4  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7537  0035D6  A0D8               	btfss	status,0,c
  7538  0035D8  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7539  0035DA  0E00               	movlw	0
  7540  0035DC  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7541  0035DE  0E0A               	movlw	10
  7542  0035E0  6E16               	movwf	___awdiv@divisor^0,c
  7543  0035E2  ECE8  F03C         	call	___awdiv	;wreg free
  7544  0035E6  5014               	movf	?___awdiv^0,w,c
  7545  0035E8  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  7546                           
  7547                           ;sm_MenuConfiguration_MC50.c: 1180:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7548  0035EC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7549  0035EE  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7550  0035F0  B4D8               	btfsc	status,2,c
  7551  0035F2  D003               	goto	u24220
  7552  0035F4  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7553  0035F6  A4D8               	btfss	status,2,c
  7554  0035F8  0012               	return	
  7555  0035FA                     u24220:
  7556                           
  7557                           ;sm_MenuConfiguration_MC50.c: 1181:             {;sm_MenuConfiguration_MC50.c: 1185:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesFull==0
      +                           && typeRemote==Keeloq_RollingCode)
  7558  0035FA  0100               	movlb	0	; () banked
  7559  0035FC  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7560  0035FE  A4D8               	btfss	status,2,c
  7561  003600  D008               	goto	l21079
  7562                           
  7563                           ; BSR set to: 0
  7564  003602  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7565  003604  A4D8               	btfss	status,2,c
  7566  003606  D005               	goto	l21079
  7567                           
  7568                           ; BSR set to: 0
  7569  003608  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7570  00360A  A4D8               	btfss	status,2,c
  7571  00360C  D002               	goto	l21079
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;sm_MenuConfiguration_MC50.c: 1186:                 {;sm_MenuConfiguration_MC50.c: 1188:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7575  00360E  0E01               	movlw	1
  7576  003610  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7577  003612                     l21079:
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;sm_MenuConfiguration_MC50.c: 1192:                 edit_Param.tempValue++;
  7581  003612  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;sm_MenuConfiguration_MC50.c: 1193:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7585  003614  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7586  003618  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7587  00361C  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;sm_MenuConfiguration_MC50.c: 1194:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7591  003620  0E02               	movlw	2
  7592  003622  EC50  F045         	call	_SaveNVM_VarSystem
  7593  003626  0012               	return	
  7594  003628                     l21085:
  7595                           
  7596                           ; BSR set to: 0
  7597  003628  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7598  00362A  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7599  00362C  B4D8               	btfsc	status,2,c
  7600  00362E  0012               	return	
  7601                           
  7602                           ; BSR set to: 0
  7603  003630  0E27               	movlw	39
  7604  003632  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7605  003634  A4D8               	btfss	status,2,c
  7606  003636  0012               	return	
  7607                           
  7608                           ; BSR set to: 0
  7609  003638  0E27               	movlw	39
  7610  00363A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7611  00363C  0012               	return	
  7612                           
  7613                           ; BSR set to: 0
  7614                           ;sm_MenuConfiguration_MC50.c: 1201:     {;sm_MenuConfiguration_MC50.c: 1202:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7615  00363E  0E00               	movlw	0
  7616  003640  0101               	movlb	1	; () banked
  7617  003642  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7618  003644  0E64               	movlw	100
  7619  003646  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7620                           
  7621                           ; BSR set to: 1
  7622                           ;sm_MenuConfiguration_MC50.c: 1203:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7623  003648  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7624  00364C  5168               	movf	(_menu_st+23)& (0+255),w,b
  7625  00364E  ECAD  F03D         	call	_RemoveSerial
  7626                           
  7627                           ;sm_MenuConfiguration_MC50.c: 1204:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7628  003652  0E0A               	movlw	10
  7629  003654  6E10               	movwf	___lbmod@divisor^0,c
  7630  003656  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7631  003658  ECEF  F046         	call	___lbmod
  7632  00365C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7633  00365E  0E00               	movlw	0
  7634  003660  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7635  003662  0E14               	movlw	20
  7636  003664  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7637  003666  0E0A               	movlw	10
  7638  003668  6E10               	movwf	___lbmod@divisor^0,c
  7639  00366A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7640  00366C  ECEF  F046         	call	___lbmod
  7641  003670  0100               	movlb	0	; () banked
  7642  003672  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7643  003674  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7644  003676  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7645  003678  6E14               	movwf	___awdiv@dividend^0,c
  7646  00367A  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7647  00367C  A0D8               	btfss	status,0,c
  7648  00367E  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7649  003680  0E00               	movlw	0
  7650  003682  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7651  003684  0E0A               	movlw	10
  7652  003686  6E16               	movwf	___awdiv@divisor^0,c
  7653  003688  ECE8  F03C         	call	___awdiv	;wreg free
  7654  00368C  5014               	movf	?___awdiv^0,w,c
  7655  00368E  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  7656  003692  0012               	return	
  7657  003694                     __end_of_controlSelectRemote:
  7658                           	callstack 0
  7659                           
  7660 ;; *************** function _saveNewSerial *****************
  7661 ;; Defined at:
  7662 ;;		line 81 in file "controlMemory_MC50.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;  cmdType         1    wreg     unsigned char 
  7665 ;;  tempSerial      4    0[BANK0 ] unsigned long 
  7666 ;;  position        1    4[BANK0 ] unsigned char 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;  cmdType         1   57[COMRAM] unsigned char 
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      void 
  7671 ;; Registers used:
  7672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 3F/1
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7678 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7680 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7681 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7682 ;;Total ram usage:        8 bytes
  7683 ;; Hardware stack levels used: 1
  7684 ;; Hardware stack levels required when called: 13
  7685 ;; This function calls:
  7686 ;;		_i2c_writeNBytes
  7687 ;; This function is called by:
  7688 ;;		_controlSelectRemote
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           	psect	text7
  7693  007F28                     __ptext7:
  7694                           	callstack 0
  7695  007F28                     _saveNewSerial:
  7696                           	callstack 14
  7697                           
  7698                           ;incstack = 0
  7699                           ;saveNewSerial@cmdType stored from wreg
  7700  007F28  6E3A               	movwf	saveNewSerial@cmdType^0,c
  7701                           
  7702                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
  7703  007F2A  503A               	movf	saveNewSerial@cmdType^0,w,c
  7704  007F2C  A4D8               	btfss	status,2,c
  7705  007F2E  D01A               	goto	l19623
  7706                           
  7707                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
  7708  007F30  0100               	movlb	0	; () banked
  7709  007F32  51DC               	movf	saveNewSerial@position& (0+255),w,b
  7710  007F34  6FDD               	movwf	??_saveNewSerial& (0+255),b
  7711  007F36  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
  7712  007F38  90D8               	bcf	status,0,c
  7713  007F3A  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7714  007F3C  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7715  007F3E  90D8               	bcf	status,0,c
  7716  007F40  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7717  007F42  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7718  007F44  0E00               	movlw	0
  7719  007F46  25DD               	addwf	??_saveNewSerial& (0+255),w,b
  7720  007F48  6E22               	movwf	i2c_writeNBytes@reg^0,c
  7721  007F4A  0E02               	movlw	2
  7722  007F4C  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
  7723  007F4E  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  7724  007F50  0ED8               	movlw	low saveNewSerial@tempSerial
  7725  007F52  6E24               	movwf	i2c_writeNBytes@data^0,c
  7726  007F54  0E00               	movlw	0
  7727  007F56  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  7728  007F58  0E04               	movlw	4
  7729  007F5A  6E25               	movwf	i2c_writeNBytes@len^0,c
  7730  007F5C  0E50               	movlw	80
  7731  007F5E  EC5A  F03F         	call	_i2c_writeNBytes
  7732                           
  7733                           ;controlMemory_MC50.c: 87:     }
  7734  007F62  0012               	return	
  7735  007F64                     l19623:
  7736                           
  7737                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
  7738  007F64  0100               	movlb	0	; () banked
  7739  007F66  51DC               	movf	saveNewSerial@position& (0+255),w,b
  7740  007F68  6FDD               	movwf	??_saveNewSerial& (0+255),b
  7741  007F6A  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
  7742  007F6C  90D8               	bcf	status,0,c
  7743  007F6E  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7744  007F70  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7745  007F72  90D8               	bcf	status,0,c
  7746  007F74  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7747  007F76  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7748  007F78  0E00               	movlw	0
  7749  007F7A  25DD               	addwf	??_saveNewSerial& (0+255),w,b
  7750  007F7C  6E22               	movwf	i2c_writeNBytes@reg^0,c
  7751  007F7E  0E05               	movlw	5
  7752  007F80  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
  7753  007F82  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  7754  007F84  0ED8               	movlw	low saveNewSerial@tempSerial
  7755  007F86  6E24               	movwf	i2c_writeNBytes@data^0,c
  7756  007F88  0E00               	movlw	0
  7757  007F8A  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  7758  007F8C  0E04               	movlw	4
  7759  007F8E  6E25               	movwf	i2c_writeNBytes@len^0,c
  7760  007F90  0E50               	movlw	80
  7761  007F92  EC5A  F03F         	call	_i2c_writeNBytes
  7762  007F96  0012               	return		;funcret
  7763  007F98                     __end_of_saveNewSerial:
  7764                           	callstack 0
  7765                           
  7766 ;; *************** function _getTypeRemote *****************
  7767 ;; Defined at:
  7768 ;;		line 459 in file "inputs_MC50.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;		None
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;		None
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      enum E10559
  7775 ;; Registers used:
  7776 ;;		wreg, status,2
  7777 ;; Tracked objects:
  7778 ;;		On entry : 3F/0
  7779 ;;		On exit  : 3F/2
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7786 ;;Total ram usage:        0 bytes
  7787 ;; Hardware stack levels used: 1
  7788 ;; Hardware stack levels required when called: 4
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		_controlSelectRemote
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           	psect	text8
  7797  0092EA                     __ptext8:
  7798                           	callstack 0
  7799  0092EA                     _getTypeRemote:
  7800                           	callstack 23
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;inputs_MC50.c: 460:     return classic_data.type;
  7804                           
  7805                           ;incstack = 0
  7806  0092EA  0102               	movlb	2	; () banked
  7807  0092EC  51A0               	movf	(_classic_data+14)& (0+255),w,b
  7808                           
  7809                           ; BSR set to: 2
  7810  0092EE  0012               	return		;funcret
  7811  0092F0                     __end_of_getTypeRemote:
  7812                           	callstack 0
  7813                           
  7814 ;; *************** function _getSerialCmd *****************
  7815 ;; Defined at:
  7816 ;;		line 442 in file "inputs_MC50.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7819 ;;		 -> controlSelectRemote@tempSerial(4), 
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;  temp            1   27[COMRAM] char 
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  1    wreg      char 
  7824 ;; Registers used:
  7825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7826 ;; Tracked objects:
  7827 ;;		On entry : 3F/1
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7831 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7835 ;;Total ram usage:        2 bytes
  7836 ;; Hardware stack levels used: 1
  7837 ;; Hardware stack levels required when called: 5
  7838 ;; This function calls:
  7839 ;;		_memcpy
  7840 ;; This function is called by:
  7841 ;;		_controlSelectRemote
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           	psect	text9
  7846  0086EC                     __ptext9:
  7847                           	callstack 0
  7848  0086EC                     _getSerialCmd:
  7849                           	callstack 22
  7850                           
  7851                           ; BSR set to: 1
  7852                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7853                           
  7854                           ; BSR set to: 2
  7855                           ;incstack = 0
  7856  0086EC  681C               	setf	getSerialCmd@temp^0,c
  7857                           
  7858                           ; BSR set to: 1
  7859                           ;inputs_MC50.c: 444:     if(RFFull)
  7860  0086EE  0100               	movlb	0	; () banked
  7861  0086F0  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7862  0086F2  B4D8               	btfsc	status,2,c
  7863  0086F4  D020               	goto	l19673
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7867  0086F6  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7868  0086F8  B4D8               	btfsc	status,2,c
  7869  0086FA  D00E               	goto	l19669
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7873  0086FC  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7874  008700  6A11               	clrf	(memcpy@d1+1)^0,c
  7875  008702  0E96               	movlw	low (_classic_data+4)
  7876  008704  6E12               	movwf	memcpy@s1^0,c
  7877  008706  0E02               	movlw	high (_classic_data+4)
  7878  008708  6E13               	movwf	(memcpy@s1+1)^0,c
  7879  00870A  0E00               	movlw	0
  7880  00870C  6E15               	movwf	(memcpy@n+1)^0,c
  7881  00870E  0E04               	movlw	4
  7882  008710  6E14               	movwf	memcpy@n^0,c
  7883  008712  EC52  F044         	call	_memcpy	;wreg free
  7884                           
  7885                           ;inputs_MC50.c: 449:         }
  7886  008716  D00D               	goto	l19671
  7887  008718                     l19669:
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7891  008718  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7892  00871C  6A11               	clrf	(memcpy@d1+1)^0,c
  7893  00871E  0ECC               	movlw	low (_BufferRF+4)
  7894  008720  6E12               	movwf	memcpy@s1^0,c
  7895  008722  0E02               	movlw	high (_BufferRF+4)
  7896  008724  6E13               	movwf	(memcpy@s1+1)^0,c
  7897  008726  0E00               	movlw	0
  7898  008728  6E15               	movwf	(memcpy@n+1)^0,c
  7899  00872A  0E04               	movlw	4
  7900  00872C  6E14               	movwf	memcpy@n^0,c
  7901  00872E  EC52  F044         	call	_memcpy	;wreg free
  7902  008732                     l19671:
  7903                           
  7904                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7905  008732  C29E  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7906  008736                     l19673:
  7907                           
  7908                           ;inputs_MC50.c: 456:     return temp;
  7909  008736  501C               	movf	getSerialCmd@temp^0,w,c
  7910  008738  0012               	return		;funcret
  7911  00873A                     __end_of_getSerialCmd:
  7912                           	callstack 0
  7913                           
  7914 ;; *************** function _cmdMemoryIsEmpty *****************
  7915 ;; Defined at:
  7916 ;;		line 110 in file "controlMemory_MC50.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;  cmdType         1    wreg     unsigned char 
  7919 ;;  position        1   45[COMRAM] unsigned char 
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;  cmdType         1   48[COMRAM] unsigned char 
  7922 ;;  tempSerial      4   49[COMRAM] unsigned long 
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      unsigned char 
  7925 ;; Registers used:
  7926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 3F/1
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7932 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7933 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7934 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7935 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7936 ;;Total ram usage:        8 bytes
  7937 ;; Hardware stack levels used: 1
  7938 ;; Hardware stack levels required when called: 13
  7939 ;; This function calls:
  7940 ;;		_i2c_readDataBlock
  7941 ;; This function is called by:
  7942 ;;		_setValueToEdit
  7943 ;;		_controlSelectRemote
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text10
  7948  0075FA                     __ptext10:
  7949                           	callstack 0
  7950  0075FA                     _cmdMemoryIsEmpty:
  7951                           	callstack 14
  7952                           
  7953                           ;incstack = 0
  7954                           ;cmdMemoryIsEmpty@cmdType stored from wreg
  7955  0075FA  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
  7956                           
  7957                           ;controlMemory_MC50.c: 110: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 111: {;controlMemory_MC50.c: 112:     unsigned long tempSerial=0;
  7958  0075FC  0E00               	movlw	0
  7959  0075FE  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
  7960  007600  0E00               	movlw	0
  7961  007602  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
  7962  007604  0E00               	movlw	0
  7963  007606  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
  7964  007608  0E00               	movlw	0
  7965  00760A  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
  7966                           
  7967                           ;controlMemory_MC50.c: 115:      if(cmdType==0)
  7968  00760C  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
  7969  00760E  A4D8               	btfss	status,2,c
  7970  007610  D01A               	goto	l19639
  7971                           
  7972                           ;controlMemory_MC50.c: 116:     {;controlMemory_MC50.c: 117:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
  7973  007612  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
  7974  007614  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
  7975  007616  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
  7976  007618  90D8               	bcf	status,0,c
  7977  00761A  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7978  00761C  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7979  00761E  90D8               	bcf	status,0,c
  7980  007620  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7981  007622  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7982  007624  0E00               	movlw	0
  7983  007626  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
  7984  007628  6E22               	movwf	i2c_readDataBlock@reg^0,c
  7985  00762A  0E02               	movlw	2
  7986  00762C  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
  7987  00762E  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
  7988  007630  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
  7989  007632  6E24               	movwf	i2c_readDataBlock@data^0,c
  7990  007634  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
  7991  007636  0E00               	movlw	0
  7992  007638  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
  7993  00763A  0E04               	movlw	4
  7994  00763C  6E26               	movwf	i2c_readDataBlock@len^0,c
  7995  00763E  0E50               	movlw	80
  7996  007640  EC1F  F03F         	call	_i2c_readDataBlock
  7997                           
  7998                           ;controlMemory_MC50.c: 118:     }
  7999  007644  D019               	goto	l19641
  8000  007646                     l19639:
  8001                           
  8002                           ;controlMemory_MC50.c: 120:     {;controlMemory_MC50.c: 121:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
  8003  007646  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
  8004  007648  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
  8005  00764A  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
  8006  00764C  90D8               	bcf	status,0,c
  8007  00764E  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  8008  007650  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  8009  007652  90D8               	bcf	status,0,c
  8010  007654  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  8011  007656  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  8012  007658  0E00               	movlw	0
  8013  00765A  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
  8014  00765C  6E22               	movwf	i2c_readDataBlock@reg^0,c
  8015  00765E  0E05               	movlw	5
  8016  007660  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
  8017  007662  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
  8018  007664  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
  8019  007666  6E24               	movwf	i2c_readDataBlock@data^0,c
  8020  007668  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
  8021  00766A  0E00               	movlw	0
  8022  00766C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
  8023  00766E  0E04               	movlw	4
  8024  007670  6E26               	movwf	i2c_readDataBlock@len^0,c
  8025  007672  0E50               	movlw	80
  8026  007674  EC1F  F03F         	call	_i2c_readDataBlock
  8027  007678                     l19641:
  8028                           
  8029                           ;controlMemory_MC50.c: 124:      if( tempSerial==0)
  8030  007678  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
  8031  00767A  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
  8032  00767C  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
  8033  00767E  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
  8034  007680  A4D8               	btfss	status,2,c
  8035  007682  D002               	goto	l19649
  8036                           
  8037                           ;controlMemory_MC50.c: 125:      {;controlMemory_MC50.c: 126:          return 1;
  8038  007684  0E01               	movlw	1
  8039  007686  0012               	return	
  8040  007688                     l19649:
  8041                           
  8042                           ;controlMemory_MC50.c: 129:      {;controlMemory_MC50.c: 130:          return 0;
  8043  007688  0E00               	movlw	0
  8044  00768A  0012               	return		;funcret
  8045  00768C                     __end_of_cmdMemoryIsEmpty:
  8046                           	callstack 0
  8047                           
  8048 ;; *************** function _RemoveSerial *****************
  8049 ;; Defined at:
  8050 ;;		line 95 in file "controlMemory_MC50.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  cmdType         1    wreg     unsigned char 
  8053 ;;  position        1   57[COMRAM] unsigned char 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;  cmdType         1    2[BANK0 ] unsigned char 
  8056 ;;  tempSerial      4    3[BANK0 ] unsigned long 
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  1    wreg      void 
  8059 ;; Registers used:
  8060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8061 ;; Tracked objects:
  8062 ;;		On entry : 3F/1
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8066 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8067 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8068 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8069 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8070 ;;Total ram usage:        8 bytes
  8071 ;; Hardware stack levels used: 1
  8072 ;; Hardware stack levels required when called: 13
  8073 ;; This function calls:
  8074 ;;		_i2c_writeNBytes
  8075 ;; This function is called by:
  8076 ;;		_controlSelectRemote
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           	psect	text11
  8081  007B5A                     __ptext11:
  8082                           	callstack 0
  8083  007B5A                     _RemoveSerial:
  8084                           	callstack 14
  8085                           
  8086                           ;incstack = 0
  8087                           ;RemoveSerial@cmdType stored from wreg
  8088  007B5A  0100               	movlb	0	; () banked
  8089  007B5C  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
  8090                           
  8091                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
  8092  007B5E  0E00               	movlw	0
  8093  007B60  0100               	movlb	0	; () banked
  8094  007B62  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
  8095  007B64  0E00               	movlw	0
  8096  007B66  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
  8097  007B68  0E00               	movlw	0
  8098  007B6A  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
  8099  007B6C  0E00               	movlw	0
  8100  007B6E  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
  8104  007B70  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
  8105  007B72  A4D8               	btfss	status,2,c
  8106  007B74  D019               	goto	l19631
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
  8110  007B76  503A               	movf	RemoveSerial@position^0,w,c
  8111  007B78  6FD8               	movwf	??_RemoveSerial& (0+255),b
  8112  007B7A  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
  8113  007B7C  90D8               	bcf	status,0,c
  8114  007B7E  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8115  007B80  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8116  007B82  90D8               	bcf	status,0,c
  8117  007B84  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8118  007B86  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8119  007B88  0E00               	movlw	0
  8120  007B8A  25D8               	addwf	??_RemoveSerial& (0+255),w,b
  8121  007B8C  6E22               	movwf	i2c_writeNBytes@reg^0,c
  8122  007B8E  0E02               	movlw	2
  8123  007B90  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
  8124  007B92  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  8125  007B94  0EDB               	movlw	low RemoveSerial@tempSerial
  8126  007B96  6E24               	movwf	i2c_writeNBytes@data^0,c
  8127  007B98  0E00               	movlw	0
  8128  007B9A  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  8129  007B9C  0E04               	movlw	4
  8130  007B9E  6E25               	movwf	i2c_writeNBytes@len^0,c
  8131  007BA0  0E50               	movlw	80
  8132  007BA2  EC5A  F03F         	call	_i2c_writeNBytes
  8133                           
  8134                           ;controlMemory_MC50.c: 103:     }
  8135  007BA6  0012               	return	
  8136  007BA8                     l19631:
  8137                           
  8138                           ; BSR set to: 0
  8139                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
  8140  007BA8  503A               	movf	RemoveSerial@position^0,w,c
  8141  007BAA  6FD8               	movwf	??_RemoveSerial& (0+255),b
  8142  007BAC  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
  8143  007BAE  90D8               	bcf	status,0,c
  8144  007BB0  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8145  007BB2  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8146  007BB4  90D8               	bcf	status,0,c
  8147  007BB6  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8148  007BB8  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8149  007BBA  0E00               	movlw	0
  8150  007BBC  25D8               	addwf	??_RemoveSerial& (0+255),w,b
  8151  007BBE  6E22               	movwf	i2c_writeNBytes@reg^0,c
  8152  007BC0  0E05               	movlw	5
  8153  007BC2  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
  8154  007BC4  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  8155  007BC6  0EDB               	movlw	low RemoveSerial@tempSerial
  8156  007BC8  6E24               	movwf	i2c_writeNBytes@data^0,c
  8157  007BCA  0E00               	movlw	0
  8158  007BCC  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  8159  007BCE  0E04               	movlw	4
  8160  007BD0  6E25               	movwf	i2c_writeNBytes@len^0,c
  8161  007BD2  0E50               	movlw	80
  8162  007BD4  EC5A  F03F         	call	_i2c_writeNBytes
  8163  007BD8  0012               	return		;funcret
  8164  007BDA                     __end_of_RemoveSerial:
  8165                           	callstack 0
  8166                           
  8167 ;; *************** function _controlSaveRemote *****************
  8168 ;; Defined at:
  8169 ;;		line 1209 in file "sm_MenuConfiguration_MC50.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;		None
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;		None
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  1    wreg      void 
  8176 ;; Registers used:
  8177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8178 ;; Tracked objects:
  8179 ;;		On entry : 3F/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8186 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8187 ;;Total ram usage:        1 bytes
  8188 ;; Hardware stack levels used: 1
  8189 ;; Hardware stack levels required when called: 6
  8190 ;; This function calls:
  8191 ;;		_ClearFlag_rfCMD
  8192 ;;		_SetSegmentValueIntermitentMain
  8193 ;;		_SetSegmentValueMain
  8194 ;;		___awdiv
  8195 ;;		___lbmod
  8196 ;;		_sm_send_event
  8197 ;; This function is called by:
  8198 ;;		_sm_execute_menuConfiguration
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text12
  8203  00721E                     __ptext12:
  8204                           	callstack 0
  8205  00721E                     _controlSaveRemote:
  8206                           	callstack 22
  8207                           
  8208                           ; BSR set to: 0
  8209                           ;sm_MenuConfiguration_MC50.c: 1210:      if (ts_system.timeSinalizationDigit<=0)
  8210                           
  8211                           ;incstack = 0
  8212  00721E  0101               	movlb	1	; () banked
  8213  007220  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8214  007222  D005               	goto	u24290
  8215  007224  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8216  007226  E154               	bnz	l3483
  8217  007228  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8218  00722A  B0D8               	btfsc	status,0,c
  8219  00722C  0012               	return	
  8220  00722E                     u24290:
  8221                           
  8222                           ; BSR set to: 1
  8223                           ;sm_MenuConfiguration_MC50.c: 1211:      {;sm_MenuConfiguration_MC50.c: 1212:          i
      +                          f(edit_Param.Max==0)
  8224  00722E  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8225  007230  A4D8               	btfss	status,2,c
  8226  007232  D02E               	goto	l21107
  8227                           
  8228                           ; BSR set to: 1
  8229                           ;sm_MenuConfiguration_MC50.c: 1213:          {;sm_MenuConfiguration_MC50.c: 1214:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  8230  007234  0E00               	movlw	0
  8231  007236  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8232  007238  0EC8               	movlw	200
  8233  00723A  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8234                           
  8235                           ; BSR set to: 1
  8236                           ;sm_MenuConfiguration_MC50.c: 1215:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  8237  00723C  0EBD               	movlw	low _menuConfiguration_stateMachine
  8238  00723E  6E12               	movwf	sm_send_event@psm^0,c
  8239  007240  0E02               	movlw	high _menuConfiguration_stateMachine
  8240  007242  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8241  007244  0E00               	movlw	0
  8242  007246  6E15               	movwf	(sm_send_event@event+1)^0,c
  8243  007248  0E09               	movlw	9
  8244  00724A  6E14               	movwf	sm_send_event@event^0,c
  8245  00724C  EC6F  F041         	call	_sm_send_event	;wreg free
  8246                           
  8247                           ;sm_MenuConfiguration_MC50.c: 1216:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  8248  007250  0E0A               	movlw	10
  8249  007252  6E10               	movwf	___lbmod@divisor^0,c
  8250  007254  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8251  007256  ECEF  F046         	call	___lbmod
  8252  00725A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8253  00725C  0E00               	movlw	0
  8254  00725E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8255  007260  0E14               	movlw	20
  8256  007262  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8257  007264  0E0A               	movlw	10
  8258  007266  6E10               	movwf	___lbmod@divisor^0,c
  8259  007268  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8260  00726A  ECEF  F046         	call	___lbmod
  8261  00726E  6E20               	movwf	??_controlSaveRemote^0,c
  8262  007270  5020               	movf	??_controlSaveRemote^0,w,c
  8263  007272  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8264  007274  6E14               	movwf	___awdiv@dividend^0,c
  8265  007276  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8266  007278  A0D8               	btfss	status,0,c
  8267  00727A  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8268  00727C  0E00               	movlw	0
  8269  00727E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8270  007280  0E0A               	movlw	10
  8271  007282  6E16               	movwf	___awdiv@divisor^0,c
  8272  007284  ECE8  F03C         	call	___awdiv	;wreg free
  8273  007288  5014               	movf	?___awdiv^0,w,c
  8274  00728A  ECC3  F048         	call	_SetSegmentValueIntermitentMain
  8275                           
  8276                           ;sm_MenuConfiguration_MC50.c: 1217:          }
  8277  00728E  0012               	return	
  8278  007290                     l21107:
  8279                           
  8280                           ; BSR set to: 1
  8281                           ;sm_MenuConfiguration_MC50.c: 1219:          {;sm_MenuConfiguration_MC50.c: 1220:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8282  007290  0EED               	movlw	low _main_stateMachine
  8283  007292  6E12               	movwf	sm_send_event@psm^0,c
  8284  007294  0E01               	movlw	high _main_stateMachine
  8285  007296  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8286  007298  0E00               	movlw	0
  8287  00729A  6E15               	movwf	(sm_send_event@event+1)^0,c
  8288  00729C  0E07               	movlw	7
  8289  00729E  6E14               	movwf	sm_send_event@event^0,c
  8290  0072A0  EC6F  F041         	call	_sm_send_event	;wreg free
  8291                           
  8292                           ;sm_MenuConfiguration_MC50.c: 1221:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8293  0072A4  0EBD               	movlw	low _menuConfiguration_stateMachine
  8294  0072A6  6E12               	movwf	sm_send_event@psm^0,c
  8295  0072A8  0E02               	movlw	high _menuConfiguration_stateMachine
  8296  0072AA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8297  0072AC  0E00               	movlw	0
  8298  0072AE  6E15               	movwf	(sm_send_event@event+1)^0,c
  8299  0072B0  0E04               	movlw	4
  8300  0072B2  6E14               	movwf	sm_send_event@event^0,c
  8301  0072B4  EC6F  F041         	call	_sm_send_event	;wreg free
  8302                           
  8303                           ;sm_MenuConfiguration_MC50.c: 1222:             SetSegmentValueMain(dMinus,dMinus);
  8304  0072B8  0E18               	movlw	24
  8305  0072BA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8306  0072BC  0E18               	movlw	24
  8307  0072BE  EC27  F048         	call	_SetSegmentValueMain
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;sm_MenuConfiguration_MC50.c: 1223:             ClearFlag_rfCMD();
  8311  0072C2  EC78  F049         	call	_ClearFlag_rfCMD	;wreg free
  8312                           
  8313                           ;sm_MenuConfiguration_MC50.c: 1224:             ts_system.timeoutMenu = 0;
  8314  0072C6  0E00               	movlw	0
  8315  0072C8  0101               	movlb	1	; () banked
  8316  0072CA  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8317  0072CC  0E00               	movlw	0
  8318  0072CE  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8319  0072D0                     l3483:
  8320  0072D0  0012               	return		;funcret
  8321  0072D2                     __end_of_controlSaveRemote:
  8322                           	callstack 0
  8323                           
  8324 ;; *************** function ___lbmod *****************
  8325 ;; Defined at:
  8326 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  dividend        1    wreg     unsigned char 
  8329 ;;  divisor         1   15[COMRAM] unsigned char 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  dividend        1   16[COMRAM] unsigned char 
  8332 ;;  rem             1   18[COMRAM] unsigned char 
  8333 ;;  counter         1   17[COMRAM] unsigned char 
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  1    wreg      unsigned char 
  8336 ;; Registers used:
  8337 ;;		wreg, status,2, status,0
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/1
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8343 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8344 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8346 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8347 ;;Total ram usage:        4 bytes
  8348 ;; Hardware stack levels used: 1
  8349 ;; Hardware stack levels required when called: 4
  8350 ;; This function calls:
  8351 ;;		Nothing
  8352 ;; This function is called by:
  8353 ;;		_controlSelectRemote
  8354 ;;		_controlSaveRemote
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text13
  8359  008DDE                     __ptext13:
  8360                           	callstack 0
  8361  008DDE                     ___lbmod:
  8362                           	callstack 23
  8363                           
  8364                           ;incstack = 0
  8365                           ;___lbmod@dividend stored from wreg
  8366  008DDE  6E11               	movwf	___lbmod@dividend^0,c
  8367  008DE0  0E08               	movlw	8
  8368  008DE2  6E12               	movwf	___lbmod@counter^0,c
  8369  008DE4  0E00               	movlw	0
  8370  008DE6  6E13               	movwf	___lbmod@rem^0,c
  8371  008DE8                     l12535:
  8372  008DE8  90D8               	bcf	status,0,c
  8373  008DEA  3411               	rlcf	___lbmod@dividend^0,w,c
  8374  008DEC  3413               	rlcf	___lbmod@rem^0,w,c
  8375  008DEE  6E13               	movwf	___lbmod@rem^0,c
  8376  008DF0  90D8               	bcf	status,0,c
  8377  008DF2  3611               	rlcf	___lbmod@dividend^0,f,c
  8378  008DF4  5010               	movf	___lbmod@divisor^0,w,c
  8379  008DF6  5C13               	subwf	___lbmod@rem^0,w,c
  8380  008DF8  A0D8               	btfss	status,0,c
  8381  008DFA  D002               	goto	l12543
  8382  008DFC  5010               	movf	___lbmod@divisor^0,w,c
  8383  008DFE  5E13               	subwf	___lbmod@rem^0,f,c
  8384  008E00                     l12543:
  8385  008E00  2E12               	decfsz	___lbmod@counter^0,f,c
  8386  008E02  D7F2               	goto	l12535
  8387  008E04  5013               	movf	___lbmod@rem^0,w,c
  8388  008E06  0012               	return		;funcret
  8389  008E08                     __end_of___lbmod:
  8390                           	callstack 0
  8391                           
  8392 ;; *************** function ___awdiv *****************
  8393 ;; Defined at:
  8394 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  dividend        2   19[COMRAM] int 
  8397 ;;  divisor         2   21[COMRAM] int 
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;  quotient        2   25[COMRAM] int 
  8400 ;;  sign            1   24[COMRAM] unsigned char 
  8401 ;;  counter         1   23[COMRAM] unsigned char 
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  2   19[COMRAM] int 
  8404 ;; Registers used:
  8405 ;;		wreg, status,2, status,0
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8412 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8414 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8415 ;;Total ram usage:        8 bytes
  8416 ;; Hardware stack levels used: 1
  8417 ;; Hardware stack levels required when called: 4
  8418 ;; This function calls:
  8419 ;;		Nothing
  8420 ;; This function is called by:
  8421 ;;		_controlSelectRemote
  8422 ;;		_controlSaveRemote
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426                           	psect	text14
  8427  0079D0                     __ptext14:
  8428                           	callstack 0
  8429  0079D0                     ___awdiv:
  8430                           	callstack 23
  8431                           
  8432                           ;incstack = 0
  8433  0079D0  0E00               	movlw	0
  8434  0079D2  6E19               	movwf	___awdiv@sign^0,c
  8435  0079D4  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8436  0079D6  D006               	goto	l12471
  8437  0079D8  6C16               	negf	___awdiv@divisor^0,c
  8438  0079DA  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8439  0079DC  B0D8               	btfsc	status,0,c
  8440  0079DE  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8441  0079E0  0E01               	movlw	1
  8442  0079E2  6E19               	movwf	___awdiv@sign^0,c
  8443  0079E4                     l12471:
  8444  0079E4  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8445  0079E6  D006               	goto	l12477
  8446  0079E8  6C14               	negf	___awdiv@dividend^0,c
  8447  0079EA  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8448  0079EC  B0D8               	btfsc	status,0,c
  8449  0079EE  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8450  0079F0  0E01               	movlw	1
  8451  0079F2  1A19               	xorwf	___awdiv@sign^0,f,c
  8452  0079F4                     l12477:
  8453  0079F4  0E00               	movlw	0
  8454  0079F6  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8455  0079F8  0E00               	movlw	0
  8456  0079FA  6E1A               	movwf	___awdiv@quotient^0,c
  8457  0079FC  5016               	movf	___awdiv@divisor^0,w,c
  8458  0079FE  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8459  007A00  B4D8               	btfsc	status,2,c
  8460  007A02  D01C               	goto	l12499
  8461  007A04  0E01               	movlw	1
  8462  007A06  6E18               	movwf	___awdiv@counter^0,c
  8463  007A08  D004               	goto	l12485
  8464  007A0A                     l12483:
  8465  007A0A  90D8               	bcf	status,0,c
  8466  007A0C  3616               	rlcf	___awdiv@divisor^0,f,c
  8467  007A0E  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8468  007A10  2A18               	incf	___awdiv@counter^0,f,c
  8469  007A12                     l12485:
  8470  007A12  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8471  007A14  D7FA               	goto	l12483
  8472  007A16                     u12120:
  8473  007A16  90D8               	bcf	status,0,c
  8474  007A18  361A               	rlcf	___awdiv@quotient^0,f,c
  8475  007A1A  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8476  007A1C  5016               	movf	___awdiv@divisor^0,w,c
  8477  007A1E  5C14               	subwf	___awdiv@dividend^0,w,c
  8478  007A20  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8479  007A22  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8480  007A24  A0D8               	btfss	status,0,c
  8481  007A26  D005               	goto	l12495
  8482  007A28  5016               	movf	___awdiv@divisor^0,w,c
  8483  007A2A  5E14               	subwf	___awdiv@dividend^0,f,c
  8484  007A2C  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8485  007A2E  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8486  007A30  801A               	bsf	___awdiv@quotient^0,0,c
  8487  007A32                     l12495:
  8488  007A32  90D8               	bcf	status,0,c
  8489  007A34  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8490  007A36  3216               	rrcf	___awdiv@divisor^0,f,c
  8491  007A38  2E18               	decfsz	___awdiv@counter^0,f,c
  8492  007A3A  D7ED               	goto	u12120
  8493  007A3C                     l12499:
  8494  007A3C  5019               	movf	___awdiv@sign^0,w,c
  8495  007A3E  B4D8               	btfsc	status,2,c
  8496  007A40  D004               	goto	l12503
  8497  007A42  6C1A               	negf	___awdiv@quotient^0,c
  8498  007A44  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8499  007A46  B0D8               	btfsc	status,0,c
  8500  007A48  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8501  007A4A                     l12503:
  8502  007A4A  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8503  007A4E  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8504  007A52  0012               	return		;funcret
  8505  007A54                     __end_of___awdiv:
  8506                           	callstack 0
  8507                           
  8508 ;; *************** function _SetSegmentValueMain *****************
  8509 ;; Defined at:
  8510 ;;		line 104 in file "outputs_MC50.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  d1              1    wreg     unsigned char 
  8513 ;;  d2              1   27[COMRAM] unsigned char 
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;  d1              1   28[COMRAM] unsigned char 
  8516 ;; Return value:  Size  Location     Type
  8517 ;;                  1    wreg      void 
  8518 ;; Registers used:
  8519 ;;		wreg, status,2
  8520 ;; Tracked objects:
  8521 ;;		On entry : 0/0
  8522 ;;		On exit  : 3F/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8525 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8529 ;;Total ram usage:        2 bytes
  8530 ;; Hardware stack levels used: 1
  8531 ;; Hardware stack levels required when called: 4
  8532 ;; This function calls:
  8533 ;;		Nothing
  8534 ;; This function is called by:
  8535 ;;		_sm_execute_main
  8536 ;;		_sm_execute_menuConfiguration
  8537 ;;		_load_New_Menu
  8538 ;;		_controlSelectRemote
  8539 ;;		_controlSaveRemote
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543                           	psect	text15
  8544  00904E                     __ptext15:
  8545                           	callstack 0
  8546  00904E                     _SetSegmentValueMain:
  8547                           	callstack 22
  8548                           
  8549                           ;incstack = 0
  8550                           ;SetSegmentValueMain@d1 stored from wreg
  8551  00904E  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8552                           
  8553                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8554  009050  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8555                           
  8556                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8557  009054  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8558                           
  8559                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8560  009058  0E00               	movlw	0
  8561  00905A  0100               	movlb	0	; () banked
  8562  00905C  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8563  00905E  0E00               	movlw	0
  8564  009060  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8568  009062  0E00               	movlw	0
  8569  009064  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8570                           
  8571                           ; BSR set to: 0
  8572  009066  0012               	return		;funcret
  8573  009068                     __end_of_SetSegmentValueMain:
  8574                           	callstack 0
  8575                           
  8576 ;; *************** function _ClearFlag_rfCMD *****************
  8577 ;; Defined at:
  8578 ;;		line 463 in file "inputs_MC50.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;		None
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;		None
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  1    wreg      void 
  8585 ;; Registers used:
  8586 ;;		wreg, status,2
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/1
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8596 ;;Total ram usage:        0 bytes
  8597 ;; Hardware stack levels used: 1
  8598 ;; Hardware stack levels required when called: 4
  8599 ;; This function calls:
  8600 ;;		Nothing
  8601 ;; This function is called by:
  8602 ;;		_sm_execute_menuConfiguration
  8603 ;;		_controlSelectRemote
  8604 ;;		_controlSaveRemote
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           	psect	text16
  8609  0092F0                     __ptext16:
  8610                           	callstack 0
  8611  0092F0                     _ClearFlag_rfCMD:
  8612                           	callstack 23
  8613                           
  8614                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;incstack = 0
  8618  0092F0  0E01               	movlw	1
  8619  0092F2  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8620  0092F4  0012               	return		;funcret
  8621  0092F6                     __end_of_ClearFlag_rfCMD:
  8622                           	callstack 0
  8623                           
  8624 ;; *************** function _controlLearnDigit *****************
  8625 ;; Defined at:
  8626 ;;		line 1230 in file "sm_MenuConfiguration_MC50.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;		None
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;		None
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  1    wreg      void 
  8633 ;; Registers used:
  8634 ;;		wreg, status,2, status,0, cstack
  8635 ;; Tracked objects:
  8636 ;;		On entry : 3F/0
  8637 ;;		On exit  : 3E/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8644 ;;Total ram usage:        0 bytes
  8645 ;; Hardware stack levels used: 1
  8646 ;; Hardware stack levels required when called: 5
  8647 ;; This function calls:
  8648 ;;		_SetSegmentValueLearn
  8649 ;; This function is called by:
  8650 ;;		_sm_execute_menuConfiguration
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           	psect	text17
  8655  008B70                     __ptext17:
  8656                           	callstack 0
  8657  008B70                     _controlLearnDigit:
  8658                           	callstack 23
  8659                           
  8660                           ; BSR set to: 0
  8661                           ;sm_MenuConfiguration_MC50.c: 1232:     if(ts_system.timeSinalizationDigit<=0 )
  8662                           
  8663                           ;incstack = 0
  8664  008B70  0101               	movlb	1	; () banked
  8665  008B72  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8666  008B74  D005               	goto	u13680
  8667  008B76  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8668  008B78  E112               	bnz	l3489
  8669  008B7A  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8670  008B7C  B0D8               	btfsc	status,0,c
  8671  008B7E  0012               	return	
  8672  008B80                     u13680:
  8673                           
  8674                           ; BSR set to: 1
  8675                           ;sm_MenuConfiguration_MC50.c: 1233:     {;sm_MenuConfiguration_MC50.c: 1234:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8676  008B80  0E00               	movlw	0
  8677  008B82  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8678  008B84  0E02               	movlw	2
  8679  008B86  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8680                           
  8681                           ; BSR set to: 1
  8682                           ;sm_MenuConfiguration_MC50.c: 1235:         if(var_sys.StateMotor==InClose)
  8683  008B88  0E03               	movlw	3
  8684  008B8A  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8685  008B8C  A4D8               	btfss	status,2,c
  8686  008B8E  D004               	goto	l13857
  8687                           
  8688                           ; BSR set to: 1
  8689                           ;sm_MenuConfiguration_MC50.c: 1236:         {;sm_MenuConfiguration_MC50.c: 1237:        
      +                               SetSegmentValueLearn(Left);
  8690  008B90  0E00               	movlw	0
  8691  008B92  ECAB  F035         	call	_SetSegmentValueLearn
  8692                           
  8693                           ;sm_MenuConfiguration_MC50.c: 1238:         }
  8694  008B96  0012               	return	
  8695  008B98                     l13857:
  8696                           
  8697                           ; BSR set to: 1
  8698                           ;sm_MenuConfiguration_MC50.c: 1240:         {;sm_MenuConfiguration_MC50.c: 1241:        
      +                               SetSegmentValueLearn(Rigth);
  8699  008B98  0E01               	movlw	1
  8700  008B9A  ECAB  F035         	call	_SetSegmentValueLearn
  8701  008B9E                     l3489:
  8702  008B9E  0012               	return		;funcret
  8703  008BA0                     __end_of_controlLearnDigit:
  8704                           	callstack 0
  8705                           
  8706 ;; *************** function _SetSegmentValueLearn *****************
  8707 ;; Defined at:
  8708 ;;		line 124 in file "outputs_MC50.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;  direction       1    wreg     enum E10602
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;  direction       1   17[COMRAM] enum E10602
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1    wreg      void 
  8715 ;; Registers used:
  8716 ;;		wreg, status,2, status,0
  8717 ;; Tracked objects:
  8718 ;;		On entry : 3F/1
  8719 ;;		On exit  : 3F/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8724 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8725 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8726 ;;Total ram usage:        3 bytes
  8727 ;; Hardware stack levels used: 1
  8728 ;; Hardware stack levels required when called: 4
  8729 ;; This function calls:
  8730 ;;		Nothing
  8731 ;; This function is called by:
  8732 ;;		_controlLearnDigit
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736                           	psect	text18
  8737  006B56                     __ptext18:
  8738                           	callstack 0
  8739  006B56                     _SetSegmentValueLearn:
  8740                           	callstack 23
  8741                           
  8742                           ;incstack = 0
  8743                           ;SetSegmentValueLearn@direction stored from wreg
  8744  006B56  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8745                           
  8746                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8747  006B58  0E00               	movlw	0
  8748  006B5A  0100               	movlb	0	; () banked
  8749  006B5C  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8750  006B5E  0E00               	movlw	0
  8751  006B60  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8752                           
  8753                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8754  006B62  0E00               	movlw	0
  8755  006B64  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8756                           
  8757                           ;outputs_MC50.c: 128:     switch (direction)
  8758  006B66  D066               	goto	l12309
  8759  006B68                     l12255:
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8763  006B68  0E1A               	movlw	26
  8764  006B6A  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8765  006B6C  A4D8               	btfss	status,2,c
  8766  006B6E  D009               	goto	l12261
  8767                           
  8768                           ; BSR set to: 0
  8769  006B70  0E20               	movlw	32
  8770  006B72  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8771  006B74  A4D8               	btfss	status,2,c
  8772  006B76  D005               	goto	l12261
  8773                           
  8774                           ; BSR set to: 0
  8775                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8776  006B78  0E20               	movlw	32
  8777  006B7A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8778                           
  8779                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8780  006B7C  0E1A               	movlw	26
  8781  006B7E  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8782                           
  8783                           ;outputs_MC50.c: 135:             }
  8784  006B80  0012               	return	
  8785  006B82                     l12261:
  8786                           
  8787                           ; BSR set to: 0
  8788  006B82  0E20               	movlw	32
  8789  006B84  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8790  006B86  A4D8               	btfss	status,2,c
  8791  006B88  D009               	goto	l12267
  8792                           
  8793                           ; BSR set to: 0
  8794  006B8A  0E1D               	movlw	29
  8795  006B8C  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8796  006B8E  A4D8               	btfss	status,2,c
  8797  006B90  D005               	goto	l12267
  8798                           
  8799                           ; BSR set to: 0
  8800                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8801  006B92  0E1D               	movlw	29
  8802  006B94  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8803                           
  8804                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8805  006B96  0E20               	movlw	32
  8806  006B98  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8807                           
  8808                           ;outputs_MC50.c: 140:             }
  8809  006B9A  0012               	return	
  8810  006B9C                     l12267:
  8811                           
  8812                           ; BSR set to: 0
  8813  006B9C  0E1F               	movlw	31
  8814  006B9E  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8815  006BA0  A4D8               	btfss	status,2,c
  8816  006BA2  D005               	goto	l12271
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8820  006BA4  0E1A               	movlw	26
  8821  006BA6  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8822                           
  8823                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8824  006BA8  0E20               	movlw	32
  8825  006BAA  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8826                           
  8827                           ;outputs_MC50.c: 145:             }
  8828  006BAC  0012               	return	
  8829  006BAE                     l12271:
  8830                           
  8831                           ; BSR set to: 0
  8832  006BAE  0E20               	movlw	32
  8833  006BB0  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8834  006BB2  A4D8               	btfss	status,2,c
  8835  006BB4  D002               	goto	l12275
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8839  006BB6  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8840                           
  8841                           ;outputs_MC50.c: 149:             }
  8842  006BB8  0012               	return	
  8843  006BBA                     l12275:
  8844                           
  8845                           ; BSR set to: 0
  8846  006BBA  0E20               	movlw	32
  8847  006BBC  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8848  006BBE  A4D8               	btfss	status,2,c
  8849  006BC0  D002               	goto	l12279
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8853  006BC2  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8854                           
  8855                           ;outputs_MC50.c: 153:             }
  8856  006BC4  0012               	return	
  8857  006BC6                     l12279:
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8861  006BC6  0E1A               	movlw	26
  8862  006BC8  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8863                           
  8864                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8865  006BCA  0E20               	movlw	32
  8866  006BCC  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8867  006BCE  0012               	return	
  8868  006BD0                     l12281:
  8869                           
  8870                           ; BSR set to: 0
  8871                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8872  006BD0  0E1A               	movlw	26
  8873  006BD2  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8874  006BD4  A4D8               	btfss	status,2,c
  8875  006BD6  D009               	goto	l12287
  8876                           
  8877                           ; BSR set to: 0
  8878  006BD8  0E20               	movlw	32
  8879  006BDA  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8880  006BDC  A4D8               	btfss	status,2,c
  8881  006BDE  D005               	goto	l12287
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8885  006BE0  0E1A               	movlw	26
  8886  006BE2  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8887                           
  8888                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8889  006BE4  0E20               	movlw	32
  8890  006BE6  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8891                           
  8892                           ;outputs_MC50.c: 165:             }
  8893  006BE8  0012               	return	
  8894  006BEA                     l12287:
  8895                           
  8896                           ; BSR set to: 0
  8897  006BEA  0E20               	movlw	32
  8898  006BEC  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8899  006BEE  A4D8               	btfss	status,2,c
  8900  006BF0  D009               	goto	l12293
  8901                           
  8902                           ; BSR set to: 0
  8903  006BF2  0E1D               	movlw	29
  8904  006BF4  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8905  006BF6  A4D8               	btfss	status,2,c
  8906  006BF8  D005               	goto	l12293
  8907                           
  8908                           ; BSR set to: 0
  8909                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8910  006BFA  0E20               	movlw	32
  8911  006BFC  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8912                           
  8913                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8914  006BFE  0E1D               	movlw	29
  8915  006C00  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8916                           
  8917                           ;outputs_MC50.c: 170:             }
  8918  006C02  0012               	return	
  8919  006C04                     l12293:
  8920                           
  8921                           ; BSR set to: 0
  8922  006C04  0E1A               	movlw	26
  8923  006C06  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8924  006C08  A4D8               	btfss	status,2,c
  8925  006C0A  D003               	goto	l12297
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8929  006C0C  0E1F               	movlw	31
  8930  006C0E  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8931                           
  8932                           ;outputs_MC50.c: 174:             }
  8933  006C10  0012               	return	
  8934  006C12                     l12297:
  8935                           
  8936                           ; BSR set to: 0
  8937  006C12  0E20               	movlw	32
  8938  006C14  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8939  006C16  A4D8               	btfss	status,2,c
  8940  006C18  D002               	goto	l12301
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8944  006C1A  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8945                           
  8946                           ;outputs_MC50.c: 178:             }
  8947  006C1C  0012               	return	
  8948  006C1E                     l12301:
  8949                           
  8950                           ; BSR set to: 0
  8951  006C1E  0E20               	movlw	32
  8952  006C20  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8953  006C22  A4D8               	btfss	status,2,c
  8954  006C24  D002               	goto	l12305
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8958  006C26  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8959                           
  8960                           ;outputs_MC50.c: 182:             }
  8961  006C28  0012               	return	
  8962  006C2A                     l12305:
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8966  006C2A  0E1A               	movlw	26
  8967  006C2C  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8968                           
  8969                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8970  006C2E  0E20               	movlw	32
  8971  006C30  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8972  006C32  0012               	return	
  8973  006C34                     l12309:
  8974                           
  8975                           ; BSR set to: 0
  8976  006C34  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8977  006C36  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8978  006C38  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8979                           
  8980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8981                           ; Switch size 1, requested type "simple"
  8982                           ; Number of cases is 1, Range of values is 0 to 0
  8983                           ; switch strategies available:
  8984                           ; Name         Instructions Cycles
  8985                           ; simple_byte            4     3 (average)
  8986                           ;	Chosen strategy is simple_byte
  8987  006C3A  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8988  006C3C  0A00               	xorlw	0	; case 0
  8989  006C3E  A4D8               	btfss	status,2,c
  8990  006C40  0012               	return	
  8991                           
  8992                           ; BSR set to: 0
  8993                           ; Switch size 1, requested type "simple"
  8994                           ; Number of cases is 2, Range of values is 0 to 1
  8995                           ; switch strategies available:
  8996                           ; Name         Instructions Cycles
  8997                           ; simple_byte            7     4 (average)
  8998                           ;	Chosen strategy is simple_byte
  8999  006C42  5010               	movf	??_SetSegmentValueLearn^0,w,c
  9000  006C44  0A00               	xorlw	0	; case 0
  9001  006C46  B4D8               	btfsc	status,2,c
  9002  006C48  D7C3               	goto	l12281
  9003  006C4A  0A01               	xorlw	1	; case 1
  9004  006C4C  A4D8               	btfss	status,2,c
  9005  006C4E  0012               	return	
  9006  006C50  D78B               	goto	l12255
  9007  006C52                     __end_of_SetSegmentValueLearn:
  9008                           	callstack 0
  9009                           
  9010 ;; *************** function ___lldiv *****************
  9011 ;; Defined at:
  9012 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  dividend        4   15[COMRAM] unsigned long 
  9015 ;;  divisor         4   19[COMRAM] unsigned long 
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;  quotient        4   23[COMRAM] unsigned long 
  9018 ;;  counter         1   27[COMRAM] unsigned char 
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  4   15[COMRAM] unsigned long 
  9021 ;; Registers used:
  9022 ;;		wreg, status,2, status,0
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/1
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9028 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9029 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9031 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9032 ;;Total ram usage:       13 bytes
  9033 ;; Hardware stack levels used: 1
  9034 ;; Hardware stack levels required when called: 4
  9035 ;; This function calls:
  9036 ;;		Nothing
  9037 ;; This function is called by:
  9038 ;;		_sm_execute_menuConfiguration
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text19
  9043  007AD8                     __ptext19:
  9044                           	callstack 0
  9045  007AD8                     ___lldiv:
  9046                           	callstack 24
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;incstack = 0
  9050  007AD8  0E00               	movlw	0
  9051  007ADA  6E18               	movwf	___lldiv@quotient^0,c
  9052  007ADC  0E00               	movlw	0
  9053  007ADE  6E19               	movwf	(___lldiv@quotient+1)^0,c
  9054  007AE0  0E00               	movlw	0
  9055  007AE2  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  9056  007AE4  0E00               	movlw	0
  9057  007AE6  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  9058  007AE8  5014               	movf	___lldiv@divisor^0,w,c
  9059  007AEA  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  9060  007AEC  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  9061  007AEE  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  9062  007AF0  B4D8               	btfsc	status,2,c
  9063  007AF2  D02A               	goto	l3677
  9064  007AF4  0E01               	movlw	1
  9065  007AF6  6E1C               	movwf	___lldiv@counter^0,c
  9066  007AF8  D006               	goto	l13875
  9067  007AFA                     l13873:
  9068  007AFA  90D8               	bcf	status,0,c
  9069  007AFC  3614               	rlcf	___lldiv@divisor^0,f,c
  9070  007AFE  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  9071  007B00  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  9072  007B02  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  9073  007B04  2A1C               	incf	___lldiv@counter^0,f,c
  9074  007B06                     l13875:
  9075  007B06  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  9076  007B08  D7F8               	goto	l13873
  9077  007B0A                     u13720:
  9078  007B0A  90D8               	bcf	status,0,c
  9079  007B0C  3618               	rlcf	___lldiv@quotient^0,f,c
  9080  007B0E  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  9081  007B10  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  9082  007B12  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  9083  007B14  5014               	movf	___lldiv@divisor^0,w,c
  9084  007B16  5C10               	subwf	___lldiv@dividend^0,w,c
  9085  007B18  5015               	movf	(___lldiv@divisor+1)^0,w,c
  9086  007B1A  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  9087  007B1C  5016               	movf	(___lldiv@divisor+2)^0,w,c
  9088  007B1E  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  9089  007B20  5017               	movf	(___lldiv@divisor+3)^0,w,c
  9090  007B22  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  9091  007B24  A0D8               	btfss	status,0,c
  9092  007B26  D009               	goto	l13885
  9093  007B28  5014               	movf	___lldiv@divisor^0,w,c
  9094  007B2A  5E10               	subwf	___lldiv@dividend^0,f,c
  9095  007B2C  5015               	movf	(___lldiv@divisor+1)^0,w,c
  9096  007B2E  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  9097  007B30  5016               	movf	(___lldiv@divisor+2)^0,w,c
  9098  007B32  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  9099  007B34  5017               	movf	(___lldiv@divisor+3)^0,w,c
  9100  007B36  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  9101  007B38  8018               	bsf	___lldiv@quotient^0,0,c
  9102  007B3A                     l13885:
  9103  007B3A  90D8               	bcf	status,0,c
  9104  007B3C  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  9105  007B3E  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  9106  007B40  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  9107  007B42  3214               	rrcf	___lldiv@divisor^0,f,c
  9108  007B44  2E1C               	decfsz	___lldiv@counter^0,f,c
  9109  007B46  D7E1               	goto	u13720
  9110  007B48                     l3677:
  9111  007B48  C018  F010         	movff	___lldiv@quotient,?___lldiv
  9112  007B4C  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  9113  007B50  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  9114  007B54  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  9115  007B58  0012               	return		;funcret
  9116  007B5A                     __end_of___lldiv:
  9117                           	callstack 0
  9118                           
  9119 ;; *************** function _sm_execute_ControlGate *****************
  9120 ;; Defined at:
  9121 ;;		line 128 in file "sm_ControlGate_MC50.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;  psm             2   15[BANK0 ] PTR struct .
  9124 ;;		 -> controlGate_stateMachine(11), 
  9125 ;; Auto vars:     Size  Location     Type
  9126 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  1    wreg      void 
  9129 ;; Registers used:
  9130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9131 ;; Tracked objects:
  9132 ;;		On entry : 3F/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9138 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9139 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9140 ;;Total ram usage:        5 bytes
  9141 ;; Hardware stack levels used: 1
  9142 ;; Hardware stack levels required when called: 15
  9143 ;; This function calls:
  9144 ;;		_GetOpenOrder
  9145 ;;		_SetSegmentValueIntermitent
  9146 ;;		_WaitPreFlash
  9147 ;;		_actionZone_Closed
  9148 ;;		_actionZone_Closing
  9149 ;;		_actionZone_Opened
  9150 ;;		_actionZone_Opening
  9151 ;;		_sm_execute_ControlLearning
  9152 ;;		_sm_send_event
  9153 ;; This function is called by:
  9154 ;;		_main
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           	psect	text20
  9159  003694                     __ptext20:
  9160                           	callstack 0
  9161  003694                     _sm_execute_ControlGate:
  9162                           	callstack 15
  9163                           
  9164                           ; BSR set to: 0
  9165                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  9166                           
  9167                           ;incstack = 0
  9168  003694  0101               	movlb	1	; () banked
  9169  003696  05ED               	decf	_main_stateMachine& (0+255),w,b
  9170  003698  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  9171  00369A  A4D8               	btfss	status,2,c
  9172  00369C  D006               	goto	l23153
  9173                           
  9174                           ; BSR set to: 1
  9175  00369E  0E06               	movlw	6
  9176  0036A0  0102               	movlb	2	; () banked
  9177  0036A2  19BD               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  9178  0036A4  11BE               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  9179  0036A6  A4D8               	btfss	status,2,c
  9180  0036A8  0012               	return	
  9181  0036AA                     l23153:
  9182                           
  9183                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  9184  0036AA  0101               	movlb	1	; () banked
  9185  0036AC  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  9186  0036AE  A4D8               	btfss	status,2,c
  9187  0036B0  D0CE               	goto	l23227
  9188                           
  9189                           ; BSR set to: 1
  9190                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  9191  0036B2  ECCC  F03F         	call	_WaitPreFlash	;wreg free
  9192  0036B6  D0CB               	goto	l23227
  9193  0036B8                     l23157:
  9194                           
  9195                           ; BSR set to: 0
  9196                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  9197  0036B8  EE20 F004          	lfsr	2,4
  9198  0036BC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9199  0036BE  26D9               	addwf	fsr2l,f,c
  9200  0036C0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9201  0036C2  22DA               	addwfc	fsr2h,f,c
  9202  0036C4  0E0A               	movlw	10
  9203  0036C6  18DE               	xorwf	postinc2,w,c
  9204  0036C8  10DE               	iorwf	postinc2,w,c
  9205  0036CA  A4D8               	btfss	status,2,c
  9206  0036CC  D006               	goto	l23161
  9207  0036CE                     u28650:
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  9211  0036CE  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9212  0036D2  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9213  0036D6  0E01               	movlw	1
  9214  0036D8  D0B5               	goto	L55
  9215  0036DA                     l23161:
  9216                           
  9217                           ; BSR set to: 0
  9218  0036DA  EE20 F004          	lfsr	2,4
  9219  0036DE  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9220  0036E0  26D9               	addwf	fsr2l,f,c
  9221  0036E2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9222  0036E4  22DA               	addwfc	fsr2h,f,c
  9223  0036E6  0E0B               	movlw	11
  9224  0036E8  18DE               	xorwf	postinc2,w,c
  9225  0036EA  10DE               	iorwf	postinc2,w,c
  9226  0036EC  A4D8               	btfss	status,2,c
  9227  0036EE  D0CF               	goto	l23229
  9228  0036F0  D038               	goto	u28720
  9229  0036F2                     l23165:
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  9233  0036F2  EE20 F004          	lfsr	2,4
  9234  0036F6  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9235  0036F8  26D9               	addwf	fsr2l,f,c
  9236  0036FA  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9237  0036FC  22DA               	addwfc	fsr2h,f,c
  9238  0036FE  0E0C               	movlw	12
  9239  003700  18DE               	xorwf	postinc2,w,c
  9240  003702  10DE               	iorwf	postinc2,w,c
  9241  003704  A4D8               	btfss	status,2,c
  9242  003706  D072               	goto	l23213
  9243  003708                     u28670:
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  9247  003708  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9248  00370C  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9249  003710  0E02               	movlw	2
  9250  003712  D098               	goto	L55
  9251  003714                     l23173:
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  9255  003714  EE20 F004          	lfsr	2,4
  9256  003718  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9257  00371A  26D9               	addwf	fsr2l,f,c
  9258  00371C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9259  00371E  22DA               	addwfc	fsr2h,f,c
  9260  003720  0E0D               	movlw	13
  9261  003722  18DE               	xorwf	postinc2,w,c
  9262  003724  10DE               	iorwf	postinc2,w,c
  9263  003726  B4D8               	btfsc	status,2,c
  9264  003728  D01C               	goto	u28720
  9265                           
  9266                           ; BSR set to: 0
  9267                           
  9268                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9272  00372A  EE20 F004          	lfsr	2,4
  9273  00372E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9274  003730  26D9               	addwf	fsr2l,f,c
  9275  003732  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9276  003734  22DA               	addwfc	fsr2h,f,c
  9277  003736  0E0E               	movlw	14
  9278  003738  18DE               	xorwf	postinc2,w,c
  9279  00373A  10DE               	iorwf	postinc2,w,c
  9280  00373C  A4D8               	btfss	status,2,c
  9281  00373E  D02D               	goto	L129
  9282  003740                     u28700:
  9283                           
  9284                           ; BSR set to: 0
  9285                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9286  003740  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9287  003744  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9288  003748  0E03               	movlw	3
  9289  00374A  D07C               	goto	L55
  9290  00374C                     l23185:
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9294  00374C  EE20 F004          	lfsr	2,4
  9295  003750  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9296  003752  26D9               	addwf	fsr2l,f,c
  9297  003754  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9298  003756  22DA               	addwfc	fsr2h,f,c
  9299  003758  0E0D               	movlw	13
  9300  00375A  18DE               	xorwf	postinc2,w,c
  9301  00375C  10DE               	iorwf	postinc2,w,c
  9302  00375E  A4D8               	btfss	status,2,c
  9303  003760  D006               	goto	l23189
  9304  003762                     u28720:
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9308  003762  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9309  003766  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9310  00376A  0E04               	movlw	4
  9311  00376C  D06B               	goto	L55
  9312  00376E                     l23189:
  9313                           
  9314                           ; BSR set to: 0
  9315  00376E  EE20 F004          	lfsr	2,4
  9316  003772  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9317  003774  26D9               	addwf	fsr2l,f,c
  9318  003776  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9319  003778  22DA               	addwfc	fsr2h,f,c
  9320  00377A  0E0F               	movlw	15
  9321  00377C  18DE               	xorwf	postinc2,w,c
  9322  00377E  10DE               	iorwf	postinc2,w,c
  9323  003780  B4D8               	btfsc	status,2,c
  9324  003782  D7A5               	goto	u28650
  9325                           
  9326                           ; BSR set to: 0
  9327                           
  9328                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9332  003784  EE20 F004          	lfsr	2,4
  9333  003788  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9334  00378A  26D9               	addwf	fsr2l,f,c
  9335  00378C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9336  00378E  22DA               	addwfc	fsr2h,f,c
  9337  003790  0E0C               	movlw	12
  9338  003792  18DE               	xorwf	postinc2,w,c
  9339  003794  10DE               	iorwf	postinc2,w,c
  9340  003796  B4D8               	btfsc	status,2,c
  9341  003798  D7B7               	goto	u28670
  9342  00379A                     L129:
  9343                           
  9344                           ; BSR set to: 0
  9345                           
  9346                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9350  00379A  EE20 F004          	lfsr	2,4
  9351  00379E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9352  0037A0  26D9               	addwf	fsr2l,f,c
  9353  0037A2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9354  0037A4  22DA               	addwfc	fsr2h,f,c
  9355  0037A6  0E10               	movlw	16
  9356  0037A8  D044               	goto	L126
  9357  0037AA                     l23201:
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9361  0037AA  EE20 F004          	lfsr	2,4
  9362  0037AE  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9363  0037B0  26D9               	addwf	fsr2l,f,c
  9364  0037B2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9365  0037B4  22DA               	addwfc	fsr2h,f,c
  9366  0037B6  0E0E               	movlw	14
  9367  0037B8  18DE               	xorwf	postinc2,w,c
  9368  0037BA  10DE               	iorwf	postinc2,w,c
  9369  0037BC  B4D8               	btfsc	status,2,c
  9370  0037BE  D7C0               	goto	u28700
  9371                           
  9372                           ; BSR set to: 0
  9373                           
  9374                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9378  0037C0  EE20 F004          	lfsr	2,4
  9379  0037C4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9380  0037C6  26D9               	addwf	fsr2l,f,c
  9381  0037C8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9382  0037CA  22DA               	addwfc	fsr2h,f,c
  9383  0037CC  0E0C               	movlw	12
  9384  0037CE  18DE               	xorwf	postinc2,w,c
  9385  0037D0  10DE               	iorwf	postinc2,w,c
  9386  0037D2  B4D8               	btfsc	status,2,c
  9387  0037D4  D799               	goto	u28670
  9388                           
  9389                           ; BSR set to: 0
  9390                           
  9391                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9395  0037D6  EE20 F004          	lfsr	2,4
  9396  0037DA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9397  0037DC  26D9               	addwf	fsr2l,f,c
  9398  0037DE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9399  0037E0  22DA               	addwfc	fsr2h,f,c
  9400  0037E2  0E10               	movlw	16
  9401  0037E4  18DE               	xorwf	postinc2,w,c
  9402  0037E6  10DE               	iorwf	postinc2,w,c
  9403  0037E8  B4D8               	btfsc	status,2,c
  9404  0037EA  D027               	goto	L127
  9405  0037EC                     l23213:
  9406                           
  9407                           ; BSR set to: 0
  9408  0037EC  EE20 F004          	lfsr	2,4
  9409  0037F0  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9410  0037F2  26D9               	addwf	fsr2l,f,c
  9411  0037F4  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9412  0037F6  22DA               	addwfc	fsr2h,f,c
  9413  0037F8  0E14               	movlw	20
  9414  0037FA  18DE               	xorwf	postinc2,w,c
  9415  0037FC  10DE               	iorwf	postinc2,w,c
  9416  0037FE  A4D8               	btfss	status,2,c
  9417  003800  D046               	goto	l23229
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9421  003802  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9422  003806  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9423  00380A  0E05               	movlw	5
  9424  00380C  D01B               	goto	L55
  9425  00380E                     l23217:
  9426                           
  9427                           ; BSR set to: 0
  9428                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9429  00380E  EE20 F004          	lfsr	2,4
  9430  003812  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9431  003814  26D9               	addwf	fsr2l,f,c
  9432  003816  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9433  003818  22DA               	addwfc	fsr2h,f,c
  9434  00381A  0E13               	movlw	19
  9435  00381C  18DE               	xorwf	postinc2,w,c
  9436  00381E  10DE               	iorwf	postinc2,w,c
  9437  003820  B4D8               	btfsc	status,2,c
  9438  003822  D755               	goto	u28650
  9439                           
  9440                           ; BSR set to: 0
  9441                           
  9442                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9443                           
  9444                           ; BSR set to: 0
  9445                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9446  003824  EE20 F004          	lfsr	2,4
  9447  003828  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9448  00382A  26D9               	addwf	fsr2l,f,c
  9449  00382C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9450  00382E  22DA               	addwfc	fsr2h,f,c
  9451  003830  0E12               	movlw	18
  9452  003832                     L126:
  9453  003832  18DE               	xorwf	postinc2,w,c
  9454  003834  10DE               	iorwf	postinc2,w,c
  9455  003836  A4D8               	btfss	status,2,c
  9456  003838  D02A               	goto	l23229
  9457  00383A                     L127:
  9458                           
  9459                           ; BSR set to: 0
  9460                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9461  00383A  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9462  00383E  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9463  003842  0E00               	movlw	0
  9464  003844                     L55:
  9465  003844  6EDE               	movwf	postinc2,c
  9466  003846  0E00               	movlw	0
  9467  003848  6EDD               	movwf	postdec2,c
  9468  00384A  D021               	goto	l23229
  9469  00384C                     l2648:
  9470                           
  9471                           ; BSR set to: 0
  9472  00384C  D7FF               	goto	l2648
  9473  00384E                     l23227:
  9474                           
  9475                           ; BSR set to: 1
  9476  00384E  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9477  003852  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9478  003856  50DF               	movf	indf2,w,c
  9479  003858  0100               	movlb	0	; () banked
  9480  00385A  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9481  00385C  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9482                           
  9483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9484                           ; Switch size 1, requested type "simple"
  9485                           ; Number of cases is 1, Range of values is 0 to 0
  9486                           ; switch strategies available:
  9487                           ; Name         Instructions Cycles
  9488                           ; simple_byte            4     3 (average)
  9489                           ;	Chosen strategy is simple_byte
  9490  00385E  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9491  003860  0A00               	xorlw	0	; case 0
  9492  003862  A4D8               	btfss	status,2,c
  9493  003864  D7F3               	goto	l2648
  9494                           
  9495                           ; BSR set to: 0
  9496                           ; Switch size 1, requested type "simple"
  9497                           ; Number of cases is 6, Range of values is 0 to 5
  9498                           ; switch strategies available:
  9499                           ; Name         Instructions Cycles
  9500                           ; simple_byte           19    10 (average)
  9501                           ;	Chosen strategy is simple_byte
  9502  003866  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9503  003868  0A00               	xorlw	0	; case 0
  9504  00386A  B4D8               	btfsc	status,2,c
  9505  00386C  D725               	goto	l23157
  9506  00386E  0A01               	xorlw	1	; case 1
  9507  003870  B4D8               	btfsc	status,2,c
  9508  003872  D73F               	goto	l23165
  9509  003874  0A03               	xorlw	3	; case 2
  9510  003876  B4D8               	btfsc	status,2,c
  9511  003878  D74D               	goto	l23173
  9512  00387A  0A01               	xorlw	1	; case 3
  9513  00387C  B4D8               	btfsc	status,2,c
  9514  00387E  D766               	goto	l23185
  9515  003880  0A07               	xorlw	7	; case 4
  9516  003882  B4D8               	btfsc	status,2,c
  9517  003884  D792               	goto	l23201
  9518  003886  0A01               	xorlw	1	; case 5
  9519  003888  B4D8               	btfsc	status,2,c
  9520  00388A  D7C1               	goto	l23217
  9521  00388C  D7DF               	goto	l2648
  9522  00388E                     l23229:
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9526  00388E  0EE2               	movlw	low _controlGate_stateMachine
  9527  003890  6E12               	movwf	sm_send_event@psm^0,c
  9528  003892  0E01               	movlw	high _controlGate_stateMachine
  9529  003894  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9530  003896  0E00               	movlw	0
  9531  003898  6E15               	movwf	(sm_send_event@event+1)^0,c
  9532  00389A  0E00               	movlw	0
  9533  00389C  6E14               	movwf	sm_send_event@event^0,c
  9534  00389E  EC6F  F041         	call	_sm_send_event	;wreg free
  9535                           
  9536                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9537  0038A2  D07D               	goto	l23293
  9538  0038A4                     l23231:
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9542  0038A4  0E00               	movlw	0
  9543  0038A6  0101               	movlb	1	; () banked
  9544  0038A8  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9545  0038AA  0E64               	movlw	100
  9546  0038AC  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9547                           
  9548                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9549  0038AE  0E01               	movlw	1
  9550  0038B0  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9551                           
  9552                           ; BSR set to: 1
  9553                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9554  0038B2  0E02               	movlw	2
  9555  0038B4  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9556  0038B6  B4D8               	btfsc	status,2,c
  9557  0038B8  D003               	goto	u28830
  9558                           
  9559                           ; BSR set to: 1
  9560  0038BA  0E03               	movlw	3
  9561  0038BC  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9562  0038BE  D027               	goto	l23253
  9563  0038C0                     u28830:
  9564                           
  9565                           ; BSR set to: 1
  9566                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9567  0038C0  ECCC  F028         	call	_GetOpenOrder	;wreg free
  9568  0038C4  0100               	movlb	0	; () banked
  9569  0038C6  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9570                           
  9571                           ; BSR set to: 0
  9572                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9573  0038C8  0E14               	movlw	20
  9574  0038CA  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9575  0038CC  0E00               	movlw	0
  9576  0038CE  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9577  0038D0  0E14               	movlw	20
  9578  0038D2  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9579  0038D4  0E0E               	movlw	14
  9580  0038D6  ECE7  F045         	call	_SetSegmentValueIntermitent
  9581                           
  9582                           ; BSR set to: 1
  9583                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9584  0038DA  0E00               	movlw	0
  9585  0038DC  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9586  0038DE  0E0A               	movlw	10
  9587  0038E0  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9588                           
  9589                           ; BSR set to: 1
  9590                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9591  0038E2  0100               	movlb	0	; () banked
  9592  0038E4  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9593  0038E6  A4D8               	btfss	status,2,c
  9594  0038E8  D00A               	goto	u28870
  9595                           
  9596                           ; BSR set to: 0
  9597  0038EA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9598  0038EC  B4D8               	btfsc	status,2,c
  9599  0038EE  D007               	goto	u28870
  9600                           
  9601                           ; BSR set to: 0
  9602  0038F0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9603  0038F2  B4D8               	btfsc	status,2,c
  9604  0038F4  D004               	goto	u28870
  9605                           
  9606                           ; BSR set to: 0
  9607  0038F6  0E17               	movlw	23
  9608  0038F8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9609  0038FA  A4D8               	btfss	status,2,c
  9610  0038FC  0012               	return	
  9611  0038FE                     u28870:
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9615  0038FE  0E00               	movlw	0
  9616  003900  0101               	movlb	1	; () banked
  9617  003902  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9618                           
  9619                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9620  003904  0E00               	movlw	0
  9621  003906  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9622                           
  9623                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9624  003908  0E01               	movlw	1
  9625  00390A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9626  00390C  0012               	return	
  9627  00390E                     l23253:
  9628                           
  9629                           ; BSR set to: 1
  9630                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9631  00390E  0E01               	movlw	1
  9632  003910  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9633                           
  9634                           ; BSR set to: 1
  9635                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9636  003912  0E01               	movlw	1
  9637  003914  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9638  003916  0E00               	movlw	0
  9639  003918  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9640  00391A  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9641  00391C  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9642                           
  9643                           ; BSR set to: 1
  9644                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9645  00391E  0E00               	movlw	0
  9646  003920  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9647                           
  9648                           ; BSR set to: 1
  9649                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9650  003922  0E00               	movlw	0
  9651  003924  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9652  003926  0E00               	movlw	0
  9653  003928  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9654  00392A  0E00               	movlw	0
  9655  00392C  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9656  00392E  0E00               	movlw	0
  9657  003930  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9658                           
  9659                           ; BSR set to: 1
  9660                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9661  003932  0E00               	movlw	0
  9662  003934  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9663                           
  9664                           ; BSR set to: 1
  9665                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9666  003936  0E00               	movlw	0
  9667  003938  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9668                           
  9669                           ; BSR set to: 1
  9670                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9671  00393A  0E00               	movlw	0
  9672  00393C  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9673                           
  9674                           ; BSR set to: 1
  9675                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9676  00393E  0E00               	movlw	0
  9677  003940  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9678  003942  0E28               	movlw	40
  9679  003944  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9680                           
  9681                           ; BSR set to: 1
  9682                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9683  003946  0E0C               	movlw	12
  9684  003948  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9685  00394A  0E00               	movlw	0
  9686  00394C  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9687  00394E  0E04               	movlw	4
  9688  003950  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9689  003952  0E0F               	movlw	15
  9690  003954  ECE7  F045         	call	_SetSegmentValueIntermitent
  9691                           
  9692                           ; BSR set to: 1
  9693                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9694  003958  0EE2               	movlw	low _controlGate_stateMachine
  9695  00395A  6E12               	movwf	sm_send_event@psm^0,c
  9696  00395C  0E01               	movlw	high _controlGate_stateMachine
  9697  00395E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9698  003960  0E00               	movlw	0
  9699  003962  6E15               	movwf	(sm_send_event@event+1)^0,c
  9700  003964  0E0A               	movlw	10
  9701  003966  6E14               	movwf	sm_send_event@event^0,c
  9702  003968  EC6F  F041         	call	_sm_send_event	;wreg free
  9703  00396C  0012               	return	
  9704  00396E                     l23273:
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9708  00396E  EC69  F039         	call	_actionZone_Closed	;wreg free
  9709                           
  9710                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9711  003972  0012               	return	
  9712  003974                     l23275:
  9713                           
  9714                           ; BSR set to: 0
  9715                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9716  003974  EC7D  F022         	call	_actionZone_Opening	;wreg free
  9717  003978                     l23277:
  9718                           
  9719                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9720  003978  0E00               	movlw	0
  9721  00397A  0101               	movlb	1	; () banked
  9722  00397C  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9723  00397E  0E64               	movlw	100
  9724  003980  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9725                           
  9726                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9727  003982  0012               	return	
  9728  003984                     l23279:
  9729                           
  9730                           ; BSR set to: 0
  9731                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9732  003984  ECEC  F026         	call	_actionZone_Opened	;wreg free
  9733  003988  D7F7               	goto	l23277
  9734  00398A                     l23283:
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9738  00398A  ECFC  F01F         	call	_actionZone_Closing	;wreg free
  9739  00398E  D7F4               	goto	l23277
  9740  003990                     l23287:
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9744  003990  0EB2               	movlw	low _controlLearning_stateMachine
  9745  003992  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9746  003994  0E02               	movlw	high _controlLearning_stateMachine
  9747  003996  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9748  003998  EC43  F00C         	call	_sm_execute_ControlLearning	;wreg free
  9749  00399C  D7ED               	goto	l23277
  9750  00399E                     l23293:
  9751  00399E  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9752  0039A2  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9753  0039A6  50DF               	movf	indf2,w,c
  9754  0039A8  0100               	movlb	0	; () banked
  9755  0039AA  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9756  0039AC  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9757                           
  9758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9759                           ; Switch size 1, requested type "simple"
  9760                           ; Number of cases is 1, Range of values is 0 to 0
  9761                           ; switch strategies available:
  9762                           ; Name         Instructions Cycles
  9763                           ; simple_byte            4     3 (average)
  9764                           ;	Chosen strategy is simple_byte
  9765  0039AE  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9766  0039B0  0A00               	xorlw	0	; case 0
  9767  0039B2  A4D8               	btfss	status,2,c
  9768  0039B4  0012               	return	
  9769                           
  9770                           ; BSR set to: 0
  9771                           ; Switch size 1, requested type "simple"
  9772                           ; Number of cases is 6, Range of values is 0 to 5
  9773                           ; switch strategies available:
  9774                           ; Name         Instructions Cycles
  9775                           ; simple_byte           19    10 (average)
  9776                           ;	Chosen strategy is simple_byte
  9777  0039B6  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9778  0039B8  0A00               	xorlw	0	; case 0
  9779  0039BA  B4D8               	btfsc	status,2,c
  9780  0039BC  D773               	goto	l23231
  9781  0039BE  0A01               	xorlw	1	; case 1
  9782  0039C0  B4D8               	btfsc	status,2,c
  9783  0039C2  D7D5               	goto	l23273
  9784  0039C4  0A03               	xorlw	3	; case 2
  9785  0039C6  B4D8               	btfsc	status,2,c
  9786  0039C8  D7D5               	goto	l23275
  9787  0039CA  0A01               	xorlw	1	; case 3
  9788  0039CC  B4D8               	btfsc	status,2,c
  9789  0039CE  D7DD               	goto	l23283
  9790  0039D0  0A07               	xorlw	7	; case 4
  9791  0039D2  B4D8               	btfsc	status,2,c
  9792  0039D4  D7D7               	goto	l23279
  9793  0039D6  0A01               	xorlw	1	; case 5
  9794  0039D8  A4D8               	btfss	status,2,c
  9795  0039DA  0012               	return	
  9796  0039DC  D7D9               	goto	l23287
  9797  0039DE                     __end_of_sm_execute_ControlGate:
  9798                           	callstack 0
  9799                           
  9800 ;; *************** function _sm_execute_ControlLearning *****************
  9801 ;; Defined at:
  9802 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;  psm             2    4[BANK0 ] PTR struct .
  9805 ;;		 -> controlLearning_stateMachine(11), 
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9808 ;; Return value:  Size  Location     Type
  9809 ;;                  1    wreg      void 
  9810 ;; Registers used:
  9811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9812 ;; Tracked objects:
  9813 ;;		On entry : 3F/0
  9814 ;;		On exit  : 0/0
  9815 ;;		Unchanged: 0/0
  9816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9817 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9819 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9820 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9821 ;;Total ram usage:        5 bytes
  9822 ;; Hardware stack levels used: 1
  9823 ;; Hardware stack levels required when called: 14
  9824 ;; This function calls:
  9825 ;;		_GetOpenOrder
  9826 ;;		_SaveNVM_VarSystem
  9827 ;;		_calculateMean
  9828 ;;		_clearLearningValue
  9829 ;;		_generateErrorLearnig
  9830 ;;		_sm_send_event
  9831 ;; This function is called by:
  9832 ;;		_sm_execute_ControlGate
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           	psect	text21
  9837  001886                     __ptext21:
  9838                           	callstack 0
  9839  001886                     _sm_execute_ControlLearning:
  9840                           	callstack 15
  9841                           
  9842                           ; BSR set to: 0
  9843                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9844                           
  9845                           ;incstack = 0
  9846  001886  ECCC  F028         	call	_GetOpenOrder	;wreg free
  9847  00188A  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9848                           
  9849                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9850  00188C  D0B8               	goto	l21939
  9851  00188E                     l21865:
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9855  00188E  EE20 F004          	lfsr	2,4
  9856  001892  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9857  001894  26D9               	addwf	fsr2l,f,c
  9858  001896  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9859  001898  22DA               	addwfc	fsr2h,f,c
  9860  00189A  0E0A               	movlw	10
  9861  00189C  18DE               	xorwf	postinc2,w,c
  9862  00189E  10DE               	iorwf	postinc2,w,c
  9863  0018A0  A4D8               	btfss	status,2,c
  9864  0018A2  D00D               	goto	l21873
  9865                           
  9866                           ; BSR set to: 0
  9867  0018A4  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9868  0018A6  B4D8               	btfsc	status,2,c
  9869  0018A8  D00A               	goto	l21873
  9870                           
  9871                           ; BSR set to: 0
  9872  0018AA  0101               	movlb	1	; () banked
  9873  0018AC  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9874  0018AE  A4D8               	btfss	status,2,c
  9875  0018B0  D006               	goto	l21873
  9876  0018B2                     u25950:
  9877                           
  9878                           ; BSR set to: 1
  9879                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9880  0018B2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9881  0018B6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9882  0018BA  0E02               	movlw	2
  9883  0018BC  D08A               	goto	L66
  9884  0018BE                     l21873:
  9885  0018BE  0100               	movlb	0	; () banked
  9886  0018C0  EE20 F004          	lfsr	2,4
  9887  0018C4  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9888  0018C6  26D9               	addwf	fsr2l,f,c
  9889  0018C8  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9890  0018CA  22DA               	addwfc	fsr2h,f,c
  9891  0018CC  0E0A               	movlw	10
  9892  0018CE  18DE               	xorwf	postinc2,w,c
  9893  0018D0  10DE               	iorwf	postinc2,w,c
  9894  0018D2  A4D8               	btfss	status,2,c
  9895  0018D4  D00D               	goto	l21881
  9896                           
  9897                           ; BSR set to: 0
  9898  0018D6  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9899  0018D8  B4D8               	btfsc	status,2,c
  9900  0018DA  D004               	goto	u25980
  9901                           
  9902                           ; BSR set to: 0
  9903  0018DC  0101               	movlb	1	; () banked
  9904  0018DE  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9905  0018E0  A4D8               	btfss	status,2,c
  9906  0018E2  D006               	goto	l21881
  9907  0018E4                     u25980:
  9908                           
  9909                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9910  0018E4  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9911  0018E8  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9912  0018EC  0E04               	movlw	4
  9913  0018EE  D071               	goto	L66
  9914  0018F0                     l21881:
  9915  0018F0  0100               	movlb	0	; () banked
  9916  0018F2  EE20 F004          	lfsr	2,4
  9917  0018F6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9918  0018F8  26D9               	addwf	fsr2l,f,c
  9919  0018FA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9920  0018FC  22DA               	addwfc	fsr2h,f,c
  9921  0018FE  0E0B               	movlw	11
  9922  001900  18DE               	xorwf	postinc2,w,c
  9923  001902  10DE               	iorwf	postinc2,w,c
  9924  001904  A4D8               	btfss	status,2,c
  9925  001906  D09B               	goto	l21941
  9926                           
  9927                           ; BSR set to: 0
  9928                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9929  001908  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9930  00190C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9931  001910  0E01               	movlw	1
  9932  001912  D05F               	goto	L66
  9933  001914                     l21885:
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9937  001914  EE20 F004          	lfsr	2,4
  9938  001918  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9939  00191A  26D9               	addwf	fsr2l,f,c
  9940  00191C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9941  00191E  22DA               	addwfc	fsr2h,f,c
  9942  001920  0E0A               	movlw	10
  9943  001922  18DE               	xorwf	postinc2,w,c
  9944  001924  10DE               	iorwf	postinc2,w,c
  9945  001926  A4D8               	btfss	status,2,c
  9946  001928  D007               	goto	l21893
  9947                           
  9948                           ; BSR set to: 0
  9949  00192A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9950  00192C  B4D8               	btfsc	status,2,c
  9951  00192E  D004               	goto	l21893
  9952                           
  9953                           ; BSR set to: 0
  9954  001930  0101               	movlb	1	; () banked
  9955  001932  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9956  001934  B4D8               	btfsc	status,2,c
  9957  001936  D7BD               	goto	u25950
  9958  001938                     l21893:
  9959  001938  0100               	movlb	0	; () banked
  9960  00193A  EE20 F004          	lfsr	2,4
  9961  00193E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9962  001940  26D9               	addwf	fsr2l,f,c
  9963  001942  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9964  001944  22DA               	addwfc	fsr2h,f,c
  9965  001946  0E0A               	movlw	10
  9966  001948  18DE               	xorwf	postinc2,w,c
  9967  00194A  10DE               	iorwf	postinc2,w,c
  9968  00194C  A4D8               	btfss	status,2,c
  9969  00194E  D007               	goto	l21901
  9970                           
  9971                           ; BSR set to: 0
  9972  001950  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9973  001952  B4D8               	btfsc	status,2,c
  9974  001954  D7C7               	goto	u25980
  9975                           
  9976                           ; BSR set to: 0
  9977  001956  0101               	movlb	1	; () banked
  9978  001958  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9979  00195A  B4D8               	btfsc	status,2,c
  9980  00195C  D7C3               	goto	u25980
  9981  00195E                     l21901:
  9982  00195E  0100               	movlb	0	; () banked
  9983  001960                     L68:
  9984  001960  EE20 F004          	lfsr	2,4
  9985  001964  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9986  001966  26D9               	addwf	fsr2l,f,c
  9987  001968  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9988  00196A  22DA               	addwfc	fsr2h,f,c
  9989  00196C  0E10               	movlw	16
  9990  00196E  18DE               	xorwf	postinc2,w,c
  9991  001970  10DE               	iorwf	postinc2,w,c
  9992  001972  A4D8               	btfss	status,2,c
  9993  001974  D064               	goto	l21941
  9994  001976  D03C               	goto	L128
  9995  001978                     l21905:
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9999  001978  EE20 F004          	lfsr	2,4
 10000  00197C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10001  00197E  26D9               	addwf	fsr2l,f,c
 10002  001980  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10003  001982  22DA               	addwfc	fsr2h,f,c
 10004  001984  0E0B               	movlw	11
 10005  001986  18DE               	xorwf	postinc2,w,c
 10006  001988  10DE               	iorwf	postinc2,w,c
 10007  00198A  A4D8               	btfss	status,2,c
 10008  00198C  D7E9               	goto	L68
 10009                           
 10010                           ; BSR set to: 0
 10011                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
 10012  00198E  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10013  001992  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10014  001996  0E03               	movlw	3
 10015  001998  D01C               	goto	L66
 10016  00199A                     l21913:
 10017                           
 10018                           ; BSR set to: 0
 10019                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
 10020  00199A  EE20 F004          	lfsr	2,4
 10021  00199E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10022  0019A0  26D9               	addwf	fsr2l,f,c
 10023  0019A2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10024  0019A4  22DA               	addwfc	fsr2h,f,c
 10025  0019A6  0E0A               	movlw	10
 10026  0019A8  18DE               	xorwf	postinc2,w,c
 10027  0019AA  10DE               	iorwf	postinc2,w,c
 10028  0019AC  A4D8               	btfss	status,2,c
 10029  0019AE  D7D8               	goto	L68
 10030  0019B0  D799               	goto	u25980
 10031  0019B2                     l21921:
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
 10035  0019B2  EE20 F004          	lfsr	2,4
 10036  0019B6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10037  0019B8  26D9               	addwf	fsr2l,f,c
 10038  0019BA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10039  0019BC  22DA               	addwfc	fsr2h,f,c
 10040  0019BE  0E0B               	movlw	11
 10041  0019C0  18DE               	xorwf	postinc2,w,c
 10042  0019C2  10DE               	iorwf	postinc2,w,c
 10043  0019C4  A4D8               	btfss	status,2,c
 10044  0019C6  D7CC               	goto	L68
 10045                           
 10046                           ; BSR set to: 0
 10047                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
 10048  0019C8  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10049  0019CC  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10050  0019D0  0E05               	movlw	5
 10051  0019D2                     L66:
 10052  0019D2  6EDE               	movwf	postinc2,c
 10053  0019D4  0E00               	movlw	0
 10054  0019D6  6EDD               	movwf	postdec2,c
 10055  0019D8  D032               	goto	l21941
 10056  0019DA                     l21929:
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
 10060  0019DA  EE20 F004          	lfsr	2,4
 10061  0019DE  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10062  0019E0  26D9               	addwf	fsr2l,f,c
 10063  0019E2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10064  0019E4  22DA               	addwfc	fsr2h,f,c
 10065  0019E6  0E0A               	movlw	10
 10066  0019E8  18DE               	xorwf	postinc2,w,c
 10067  0019EA  10DE               	iorwf	postinc2,w,c
 10068  0019EC  A4D8               	btfss	status,2,c
 10069  0019EE  D7B8               	goto	L68
 10070  0019F0                     L128:
 10071                           
 10072                           ; BSR set to: 0
 10073                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
 10074  0019F0  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10075  0019F4  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10076  0019F8  0E00               	movlw	0
 10077  0019FA  D7EB               	goto	L66
 10078  0019FC                     l2907:
 10079                           
 10080                           ; BSR set to: 0
 10081  0019FC  D7FF               	goto	l2907
 10082  0019FE                     l21939:
 10083  0019FE  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10084  001A02  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10085  001A06  50DF               	movf	indf2,w,c
 10086  001A08  0100               	movlb	0	; () banked
 10087  001A0A  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10088  001A0C  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10089                           
 10090                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10091                           ; Switch size 1, requested type "simple"
 10092                           ; Number of cases is 1, Range of values is 0 to 0
 10093                           ; switch strategies available:
 10094                           ; Name         Instructions Cycles
 10095                           ; simple_byte            4     3 (average)
 10096                           ;	Chosen strategy is simple_byte
 10097  001A0E  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10098  001A10  0A00               	xorlw	0	; case 0
 10099  001A12  A4D8               	btfss	status,2,c
 10100  001A14  D7F3               	goto	l2907
 10101                           
 10102                           ; BSR set to: 0
 10103                           ; Switch size 1, requested type "simple"
 10104                           ; Number of cases is 6, Range of values is 0 to 5
 10105                           ; switch strategies available:
 10106                           ; Name         Instructions Cycles
 10107                           ; simple_byte           19    10 (average)
 10108                           ;	Chosen strategy is simple_byte
 10109  001A16  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10110  001A18  0A00               	xorlw	0	; case 0
 10111  001A1A  B4D8               	btfsc	status,2,c
 10112  001A1C  D738               	goto	l21865
 10113  001A1E  0A01               	xorlw	1	; case 1
 10114  001A20  B4D8               	btfsc	status,2,c
 10115  001A22  D778               	goto	l21885
 10116  001A24  0A03               	xorlw	3	; case 2
 10117  001A26  B4D8               	btfsc	status,2,c
 10118  001A28  D7A7               	goto	l21905
 10119  001A2A  0A01               	xorlw	1	; case 3
 10120  001A2C  B4D8               	btfsc	status,2,c
 10121  001A2E  D7B5               	goto	l21913
 10122  001A30  0A07               	xorlw	7	; case 4
 10123  001A32  B4D8               	btfsc	status,2,c
 10124  001A34  D7BE               	goto	l21921
 10125  001A36  0A01               	xorlw	1	; case 5
 10126  001A38  B4D8               	btfsc	status,2,c
 10127  001A3A  D7CF               	goto	l21929
 10128  001A3C  D7DF               	goto	l2907
 10129  001A3E                     l21941:
 10130                           
 10131                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
 10132  001A3E  0EB2               	movlw	low _controlLearning_stateMachine
 10133  001A40  6E12               	movwf	sm_send_event@psm^0,c
 10134  001A42  0E02               	movlw	high _controlLearning_stateMachine
 10135  001A44  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10136  001A46  0E00               	movlw	0
 10137  001A48  6E15               	movwf	(sm_send_event@event+1)^0,c
 10138  001A4A  0E00               	movlw	0
 10139  001A4C  6E14               	movwf	sm_send_event@event^0,c
 10140  001A4E  EC6F  F041         	call	_sm_send_event	;wreg free
 10141                           
 10142                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
 10143  001A52  D280               	goto	l22197
 10144  001A54                     l21943:
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
 10148  001A54  0101               	movlb	1	; () banked
 10149  001A56  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10150  001A58  A4D8               	btfss	status,2,c
 10151  001A5A  D03A               	goto	l21961
 10152                           
 10153                           ; BSR set to: 1
 10154                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
 10155  001A5C  0E01               	movlw	1
 10156  001A5E  0100               	movlb	0	; () banked
 10157  001A60  6F81               	movwf	_control_limit_switch& (0+255),b
 10158                           
 10159                           ; BSR set to: 0
 10160                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10161  001A62  0EB2               	movlw	low _controlLearning_stateMachine
 10162  001A64  6E12               	movwf	sm_send_event@psm^0,c
 10163  001A66  0E02               	movlw	high _controlLearning_stateMachine
 10164  001A68  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10165  001A6A  0E00               	movlw	0
 10166  001A6C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10167  001A6E  0E0A               	movlw	10
 10168  001A70  6E14               	movwf	sm_send_event@event^0,c
 10169  001A72  EC6F  F041         	call	_sm_send_event	;wreg free
 10170                           
 10171                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
 10172  001A76  0E01               	movlw	1
 10173  001A78  0101               	movlb	1	; () banked
 10174  001A7A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10175                           
 10176                           ; BSR set to: 1
 10177                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
 10178  001A7C  EC2C  F03E         	call	_clearLearningValue	;wreg free
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
 10182  001A80  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10183  001A82  B4D8               	btfsc	status,2,c
 10184  001A84  D016               	goto	l21959
 10185                           
 10186                           ; BSR set to: 0
 10187  001A86  0101               	movlb	1	; () banked
 10188  001A88  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10189  001A8A  A4D8               	btfss	status,2,c
 10190  001A8C  D012               	goto	l21959
 10191  001A8E                     u26170:
 10192                           
 10193                           ; BSR set to: 1
 10194                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
 10195  001A8E  0E01               	movlw	1
 10196  001A90  6FD1               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10197  001A92  0E2C               	movlw	44
 10198  001A94  6FD0               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10199                           
 10200                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
 10201  001A96  0E00               	movlw	0
 10202  001A98  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10203  001A9A  0E78               	movlw	120
 10204  001A9C  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10205                           
 10206                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10207  001A9E  0E00               	movlw	0
 10208  001AA0  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10209  001AA2  0E14               	movlw	20
 10210  001AA4  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10211                           
 10212                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
 10213  001AA6  0E01               	movlw	1
 10214  001AA8  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10215                           
 10216                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
 10217  001AAA  0E00               	movlw	0
 10218  001AAC  0100               	movlb	0	; () banked
 10219  001AAE  6F81               	movwf	_control_limit_switch& (0+255),b
 10220                           
 10221                           ;sm_ControlLearning_MC50.c: 148:                  }
 10222  001AB0  0012               	return	
 10223  001AB2                     l21959:
 10224                           
 10225                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
 10226  001AB2  0E00               	movlw	0
 10227  001AB4  0101               	movlb	1	; () banked
 10228  001AB6  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10229                           
 10230                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10231  001AB8  0E00               	movlw	0
 10232  001ABA  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10233  001ABC  0E50               	movlw	80
 10234  001ABE  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10235                           
 10236                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10237  001AC0  0E00               	movlw	0
 10238  001AC2  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10239  001AC4  0E14               	movlw	20
 10240  001AC6  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10241                           
 10242                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
 10243  001AC8  0E00               	movlw	0
 10244  001ACA  0100               	movlb	0	; () banked
 10245  001ACC  6F81               	movwf	_control_limit_switch& (0+255),b
 10246  001ACE  0012               	return	
 10247  001AD0                     l21961:
 10248                           
 10249                           ; BSR set to: 1
 10250                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10251  001AD0  0EB2               	movlw	low _controlLearning_stateMachine
 10252  001AD2  6E12               	movwf	sm_send_event@psm^0,c
 10253  001AD4  0E02               	movlw	high _controlLearning_stateMachine
 10254  001AD6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10255  001AD8  0E00               	movlw	0
 10256  001ADA  6E15               	movwf	(sm_send_event@event+1)^0,c
 10257  001ADC  0E0B               	movlw	11
 10258  001ADE  6E14               	movwf	sm_send_event@event^0,c
 10259  001AE0  EC6F  F041         	call	_sm_send_event	;wreg free
 10260                           
 10261                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10262  001AE4  0E03               	movlw	3
 10263  001AE6  0101               	movlb	1	; () banked
 10264  001AE8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10265                           
 10266                           ; BSR set to: 1
 10267                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10268  001AEA  0E01               	movlw	1
 10269  001AEC  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10270                           
 10271                           ; BSR set to: 1
 10272                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10273                           
 10274                           ;sm_ControlLearning_MC50.c: 163:             }
 10275  001AEE  0012               	return	
 10276  001AF0                     l21967:
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10280  001AF0  0101               	movlb	1	; () banked
 10281  001AF2  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10282  001AF4  B4D8               	btfsc	status,2,c
 10283  001AF6  D00E               	goto	u26220
 10284                           
 10285                           ; BSR set to: 1
 10286  001AF8  0100               	movlb	0	; () banked
 10287  001AFA  0581               	decf	_control_limit_switch& (0+255),w,b
 10288  001AFC  B4D8               	btfsc	status,2,c
 10289  001AFE  D00A               	goto	u26220
 10290                           
 10291                           ; BSR set to: 0
 10292  001B00  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10293  001B02  B4D8               	btfsc	status,2,c
 10294  001B04  D003               	goto	u26210
 10295                           
 10296                           ; BSR set to: 0
 10297  001B06  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10298  001B08  A4D8               	btfss	status,2,c
 10299  001B0A  D028               	goto	l21995
 10300  001B0C                     u26210:
 10301                           
 10302                           ; BSR set to: 0
 10303  001B0C  0101               	movlb	1	; () banked
 10304  001B0E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10305  001B10  A4D8               	btfss	status,2,c
 10306  001B12  D024               	goto	l21995
 10307  001B14                     u26220:
 10308                           
 10309                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10310  001B14  0E01               	movlw	1
 10311  001B16  0100               	movlb	0	; () banked
 10312  001B18  6F81               	movwf	_control_limit_switch& (0+255),b
 10313                           
 10314                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10315  001B1A  0E00               	movlw	0
 10316  001B1C  0101               	movlb	1	; () banked
 10317  001B1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10318                           
 10319                           ; BSR set to: 1
 10320                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10321  001B20  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10322  001B22  D005               	goto	u26230
 10323  001B24  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10324  001B26  E102               	bnz	u26231
 10325  001B28  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10326  001B2A  B0D8               	btfsc	status,0,c
 10327  001B2C                     u26231:
 10328  001B2C  0012               	return	
 10329  001B2E                     u26230:
 10330                           
 10331                           ; BSR set to: 1
 10332                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10333  001B2E  0EB2               	movlw	low _controlLearning_stateMachine
 10334  001B30  6E12               	movwf	sm_send_event@psm^0,c
 10335  001B32  0E02               	movlw	high _controlLearning_stateMachine
 10336  001B34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10337  001B36  0E00               	movlw	0
 10338  001B38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10339  001B3A  0E0A               	movlw	10
 10340  001B3C  6E14               	movwf	sm_send_event@event^0,c
 10341  001B3E  EC6F  F041         	call	_sm_send_event	;wreg free
 10342                           
 10343                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10344  001B42  0E01               	movlw	1
 10345  001B44  0101               	movlb	1	; () banked
 10346  001B46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10347                           
 10348                           ; BSR set to: 1
 10349                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10350  001B48  EC2C  F03E         	call	_clearLearningValue	;wreg free
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10354  001B4C  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10355  001B4E  B4D8               	btfsc	status,2,c
 10356  001B50  D7B0               	goto	l21959
 10357                           
 10358                           ; BSR set to: 0
 10359  001B52  0101               	movlb	1	; () banked
 10360  001B54  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10361  001B56  B4D8               	btfsc	status,2,c
 10362  001B58  D79A               	goto	u26170
 10363  001B5A  D7AB               	goto	l21959
 10364  001B5C                     l21995:
 10365  001B5C  0101               	movlb	1	; () banked
 10366  001B5E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10367  001B60  A4D8               	btfss	status,2,c
 10368  001B62  D003               	goto	l21999
 10369  001B64                     u26260:
 10370                           
 10371                           ; BSR set to: 1
 10372                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10373  001B64  ECA8  F040         	call	_generateErrorLearnig	;wreg free
 10374                           
 10375                           ;sm_ControlLearning_MC50.c: 198:             }
 10376  001B68  0012               	return	
 10377  001B6A                     l21999:
 10378                           
 10379                           ; BSR set to: 1
 10380                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10381  001B6A  0E00               	movlw	0
 10382  001B6C  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10383  001B6E  0E28               	movlw	40
 10384  001B70  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10385  001B72  0012               	return	
 10386  001B74                     l22001:
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10390  001B74  0101               	movlb	1	; () banked
 10391  001B76  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10392  001B78  A4D8               	btfss	status,2,c
 10393                           
 10394                           ; BSR set to: 1
 10395  001B7A  BFD1               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10396  001B7C  D009               	goto	u26290
 10397  001B7E  51D1               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10398  001B80  E103               	bnz	u26280
 10399  001B82  05D0               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10400  001B84  A0D8               	btfss	status,0,c
 10401  001B86  D004               	goto	u26290
 10402  001B88                     u26280:
 10403                           
 10404                           ; BSR set to: 1
 10405  001B88  0100               	movlb	0	; () banked
 10406  001B8A  0581               	decf	_control_limit_switch& (0+255),w,b
 10407  001B8C  A4D8               	btfss	status,2,c
 10408  001B8E  D02A               	goto	l22023
 10409  001B90                     u26290:
 10410                           
 10411                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10412  001B90  0E01               	movlw	1
 10413  001B92  0100               	movlb	0	; () banked
 10414  001B94  6F81               	movwf	_control_limit_switch& (0+255),b
 10415                           
 10416                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10417  001B96  0E00               	movlw	0
 10418  001B98  0101               	movlb	1	; () banked
 10419  001B9A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10420                           
 10421                           ; BSR set to: 1
 10422                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10423  001B9C  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10424  001B9E  D005               	goto	u26300
 10425  001BA0  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10426  001BA2  E102               	bnz	u26301
 10427  001BA4  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10428  001BA6  B0D8               	btfsc	status,0,c
 10429  001BA8                     u26301:
 10430  001BA8  0012               	return	
 10431  001BAA                     u26300:
 10432                           
 10433                           ; BSR set to: 1
 10434                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10435  001BAA  0EB2               	movlw	low _controlLearning_stateMachine
 10436  001BAC  6E12               	movwf	sm_send_event@psm^0,c
 10437  001BAE  0E02               	movlw	high _controlLearning_stateMachine
 10438  001BB0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10439  001BB2  0E00               	movlw	0
 10440  001BB4  6E15               	movwf	(sm_send_event@event+1)^0,c
 10441  001BB6  0E0B               	movlw	11
 10442  001BB8  6E14               	movwf	sm_send_event@event^0,c
 10443  001BBA  EC6F  F041         	call	_sm_send_event	;wreg free
 10444                           
 10445                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10446  001BBE  0E03               	movlw	3
 10447  001BC0  0101               	movlb	1	; () banked
 10448  001BC2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10449                           
 10450                           ; BSR set to: 1
 10451                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10452  001BC4  0E00               	movlw	0
 10453  001BC6  6FD1               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10454  001BC8  0E64               	movlw	100
 10455  001BCA  6FD0               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10456                           
 10457                           ; BSR set to: 1
 10458                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10459  001BCC  0E00               	movlw	0
 10460  001BCE  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10461  001BD0  0E64               	movlw	100
 10462  001BD2                     L67:
 10463  001BD2  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10464                           
 10465                           ; BSR set to: 1
 10466                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10467  001BD4  0E00               	movlw	0
 10468  001BD6  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10469  001BD8  0E14               	movlw	20
 10470  001BDA  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10471                           
 10472                           ; BSR set to: 1
 10473                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10474  001BDC  0E00               	movlw	0
 10475  001BDE  0100               	movlb	0	; () banked
 10476  001BE0  6F81               	movwf	_control_limit_switch& (0+255),b
 10477  001BE2  0012               	return	
 10478  001BE4                     l22023:
 10479                           
 10480                           ; BSR set to: 0
 10481  001BE4  0101               	movlb	1	; () banked
 10482  001BE6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10483  001BE8  B4D8               	btfsc	status,2,c
 10484  001BEA  D7BC               	goto	u26260
 10485                           
 10486                           ; BSR set to: 1
 10487                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10488  001BEC  0E00               	movlw	0
 10489  001BEE  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10490  001BF0  0E28               	movlw	40
 10491  001BF2  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10492                           
 10493                           ; BSR set to: 1
 10494                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10495  001BF4  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10496  001BF6  D005               	goto	u26320
 10497  001BF8  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10498  001BFA  E102               	bnz	u26321
 10499  001BFC  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10500  001BFE  B0D8               	btfsc	status,0,c
 10501  001C00                     u26321:
 10502  001C00  0012               	return	
 10503  001C02                     u26320:
 10504                           
 10505                           ; BSR set to: 1
 10506                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10507  001C02  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10508  001C04  0012               	return	
 10509  001C06  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10510  001C08  E103               	bnz	u26330
 10511  001C0A  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10512  001C0C  A0D8               	btfss	status,0,c
 10513  001C0E  0012               	return	
 10514  001C10                     u26330:
 10515                           
 10516                           ; BSR set to: 1
 10517                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10518  001C10  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10519  001C14  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10520  001C18  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10521  001C1A  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10522  001C1C  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10523  001C20  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10524  001C24  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10525  001C28  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10526  001C2C  EC0F  F041         	call	_calculateMean	;wreg free
 10527  001C30  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10528  001C34  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10529  001C38  0012               	return	
 10530  001C3A                     l22035:
 10531                           
 10532                           ; BSR set to: 0
 10533                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10534  001C3A  0101               	movlb	1	; () banked
 10535  001C3C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10536  001C3E  B4D8               	btfsc	status,2,c
 10537  001C40  D004               	goto	u26350
 10538                           
 10539                           ; BSR set to: 1
 10540  001C42  0100               	movlb	0	; () banked
 10541  001C44  0581               	decf	_control_limit_switch& (0+255),w,b
 10542  001C46  A4D8               	btfss	status,2,c
 10543  001C48  D020               	goto	l22055
 10544  001C4A                     u26350:
 10545                           
 10546                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10547  001C4A  0E01               	movlw	1
 10548  001C4C  0100               	movlb	0	; () banked
 10549  001C4E  6F81               	movwf	_control_limit_switch& (0+255),b
 10550                           
 10551                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10552  001C50  0E00               	movlw	0
 10553  001C52  0101               	movlb	1	; () banked
 10554  001C54  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10555                           
 10556                           ; BSR set to: 1
 10557                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10558  001C56  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10559  001C58  D005               	goto	u26360
 10560  001C5A  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10561  001C5C  E102               	bnz	u26361
 10562  001C5E  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10563  001C60  B0D8               	btfsc	status,0,c
 10564  001C62                     u26361:
 10565  001C62  0012               	return	
 10566  001C64                     u26360:
 10567                           
 10568                           ; BSR set to: 1
 10569                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10570  001C64  0EB2               	movlw	low _controlLearning_stateMachine
 10571  001C66  6E12               	movwf	sm_send_event@psm^0,c
 10572  001C68  0E02               	movlw	high _controlLearning_stateMachine
 10573  001C6A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10574  001C6C  0E00               	movlw	0
 10575  001C6E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10576  001C70  0E0A               	movlw	10
 10577  001C72  6E14               	movwf	sm_send_event@event^0,c
 10578  001C74  EC6F  F041         	call	_sm_send_event	;wreg free
 10579                           
 10580                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10581  001C78  0E01               	movlw	1
 10582  001C7A  0101               	movlb	1	; () banked
 10583  001C7C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10584                           
 10585                           ; BSR set to: 1
 10586                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10587  001C7E  0E00               	movlw	0
 10588  001C80  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10589                           
 10590                           ; BSR set to: 1
 10591                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10592  001C82  0E00               	movlw	0
 10593  001C84  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10594  001C86  0E3C               	movlw	60
 10595  001C88  D7A4               	goto	L67
 10596  001C8A                     l22055:
 10597                           
 10598                           ; BSR set to: 0
 10599  001C8A  0101               	movlb	1	; () banked
 10600  001C8C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10601  001C8E  B4D8               	btfsc	status,2,c
 10602  001C90  D769               	goto	u26260
 10603                           
 10604                           ; BSR set to: 1
 10605                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10606  001C92  0E00               	movlw	0
 10607  001C94  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10608  001C96  0E28               	movlw	40
 10609  001C98  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10610                           
 10611                           ; BSR set to: 1
 10612                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10613  001C9A  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10614  001C9C  D005               	goto	u26380
 10615  001C9E  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10616  001CA0  E102               	bnz	u26381
 10617  001CA2  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10618  001CA4  B0D8               	btfsc	status,0,c
 10619  001CA6                     u26381:
 10620  001CA6  0012               	return	
 10621  001CA8                     u26380:
 10622                           
 10623                           ; BSR set to: 1
 10624                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10625  001CA8  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10626  001CAA  0012               	return	
 10627  001CAC  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10628  001CAE  E103               	bnz	u26390
 10629  001CB0  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10630  001CB2  A0D8               	btfss	status,0,c
 10631  001CB4  0012               	return	
 10632  001CB6                     u26390:
 10633                           
 10634                           ; BSR set to: 1
 10635                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10636  001CB6  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10637  001CBA  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10638  001CBE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10639  001CC0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10640  001CC2  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10641  001CC6  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10642  001CCA  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10643  001CCE  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10644  001CD2  EC0F  F041         	call	_calculateMean	;wreg free
 10645  001CD6  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10646  001CDA  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10647  001CDE  0012               	return	
 10648  001CE0                     l22067:
 10649                           
 10650                           ; BSR set to: 0
 10651                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.
      +                          programinAutomatic == 1))
 10652  001CE0  0101               	movlb	1	; () banked
 10653  001CE2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10654  001CE4  B4D8               	btfsc	status,2,c
 10655  001CE6  D011               	goto	u26450
 10656                           
 10657                           ; BSR set to: 1
 10658  001CE8  0100               	movlb	0	; () banked
 10659  001CEA  0581               	decf	_control_limit_switch& (0+255),w,b
 10660  001CEC  B4D8               	btfsc	status,2,c
 10661  001CEE  D00D               	goto	u26450
 10662                           
 10663                           ; BSR set to: 0
 10664  001CF0  0101               	movlb	1	; () banked
 10665  001CF2  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10666  001CF4  A4D8               	btfss	status,2,c
 10667  001CF6  D02C               	goto	l22093
 10668                           
 10669                           ; BSR set to: 1
 10670  001CF8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10671  001CFA  B4D8               	btfsc	status,2,c
 10672  001CFC  D003               	goto	u26440
 10673                           
 10674                           ; BSR set to: 1
 10675  001CFE  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10676  001D00  A4D8               	btfss	status,2,c
 10677  001D02  D026               	goto	l22093
 10678  001D04                     u26440:
 10679                           
 10680                           ; BSR set to: 1
 10681  001D04  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10682  001D06  A4D8               	btfss	status,2,c
 10683  001D08  D023               	goto	l22093
 10684  001D0A                     u26450:
 10685                           
 10686                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10687  001D0A  0E00               	movlw	0
 10688  001D0C  0101               	movlb	1	; () banked
 10689  001D0E  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10690                           
 10691                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10692  001D10  0E00               	movlw	0
 10693  001D12  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10694                           
 10695                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10696  001D14  0E01               	movlw	1
 10697  001D16  0100               	movlb	0	; () banked
 10698  001D18  6F81               	movwf	_control_limit_switch& (0+255),b
 10699                           
 10700                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10701  001D1A  0E00               	movlw	0
 10702  001D1C  0101               	movlb	1	; () banked
 10703  001D1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10704                           
 10705                           ; BSR set to: 1
 10706                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10707  001D20  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10708  001D22  D005               	goto	u26460
 10709  001D24  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10710  001D26  E102               	bnz	u26461
 10711  001D28  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10712  001D2A  B0D8               	btfsc	status,0,c
 10713  001D2C                     u26461:
 10714  001D2C  0012               	return	
 10715  001D2E                     u26460:
 10716                           
 10717                           ; BSR set to: 1
 10718                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10719  001D2E  0EB2               	movlw	low _controlLearning_stateMachine
 10720  001D30  6E12               	movwf	sm_send_event@psm^0,c
 10721  001D32  0E02               	movlw	high _controlLearning_stateMachine
 10722  001D34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10723  001D36  0E00               	movlw	0
 10724  001D38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10725  001D3A  0E0B               	movlw	11
 10726  001D3C  6E14               	movwf	sm_send_event@event^0,c
 10727  001D3E  EC6F  F041         	call	_sm_send_event	;wreg free
 10728                           
 10729                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10730  001D42  0E03               	movlw	3
 10731  001D44  0101               	movlb	1	; () banked
 10732  001D46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10733                           
 10734                           ; BSR set to: 1
 10735                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10736  001D48  0E00               	movlw	0
 10737  001D4A  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10738  001D4C  0E50               	movlw	80
 10739  001D4E  D741               	goto	L67
 10740  001D50                     l22093:
 10741                           
 10742                           ; BSR set to: 1
 10743  001D50  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10744  001D52  B4D8               	btfsc	status,2,c
 10745  001D54  D707               	goto	u26260
 10746                           
 10747                           ; BSR set to: 1
 10748  001D56  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10749  001D58  B4D8               	btfsc	status,2,c
 10750  001D5A  D003               	goto	u26490
 10751                           
 10752                           ; BSR set to: 1
 10753  001D5C  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10754  001D5E  A4D8               	btfss	status,2,c
 10755  001D60  D00F               	goto	l22107
 10756  001D62                     u26490:
 10757                           
 10758                           ; BSR set to: 1
 10759  001D62  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10760  001D64  A4D8               	btfss	status,2,c
 10761  001D66  D00C               	goto	l22107
 10762                           
 10763                           ; BSR set to: 1
 10764  001D68  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10765  001D6A  A4D8               	btfss	status,2,c
 10766  001D6C  D009               	goto	l22107
 10767  001D6E                     u26510:
 10768                           
 10769                           ; BSR set to: 1
 10770                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10771  001D6E  0E01               	movlw	1
 10772  001D70  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10773                           
 10774                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10775  001D72  0E01               	movlw	1
 10776  001D74  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10777                           
 10778                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10779  001D76  0E00               	movlw	0
 10780  001D78  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10781  001D7A  0E50               	movlw	80
 10782  001D7C  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10783                           
 10784                           ;sm_ControlLearning_MC50.c: 309:             }
 10785  001D7E  0012               	return	
 10786  001D80                     l22107:
 10787                           
 10788                           ; BSR set to: 1
 10789  001D80  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10790  001D82  A4D8               	btfss	status,2,c
 10791  001D84  D00C               	goto	l22115
 10792                           
 10793                           ; BSR set to: 1
 10794                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10795  001D86  0E00               	movlw	0
 10796  001D88  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10797  001D8A  0E28               	movlw	40
 10798  001D8C  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10799                           
 10800                           ; BSR set to: 1
 10801                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10802  001D8E  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10803  001D90  0012               	return	
 10804  001D92  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10805  001D94  E103               	bnz	u26530
 10806  001D96  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10807  001D98  A0D8               	btfss	status,0,c
 10808  001D9A  0012               	return	
 10809  001D9C                     u26530:
 10810  001D9C  D739               	goto	u26330
 10811  001D9E                     l22115:
 10812                           
 10813                           ; BSR set to: 1
 10814                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10815  001D9E  0E01               	movlw	1
 10816  001DA0  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10817                           
 10818                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10819  001DA2  0E00               	movlw	0
 10820  001DA4  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10821  001DA6  0E28               	movlw	40
 10822  001DA8  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10823                           
 10824                           ; BSR set to: 1
 10825                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10826  001DAA  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10827  001DAC  D005               	goto	u26540
 10828  001DAE  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10829  001DB0  E102               	bnz	u26541
 10830  001DB2  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10831  001DB4  B0D8               	btfsc	status,0,c
 10832  001DB6                     u26541:
 10833  001DB6  0012               	return	
 10834  001DB8                     u26540:
 10835                           
 10836                           ; BSR set to: 1
 10837                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10838  001DB8  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10839  001DBA  0012               	return	
 10840  001DBC  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10841  001DBE  E103               	bnz	u26550
 10842  001DC0  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10843  001DC2  A0D8               	btfss	status,0,c
 10844  001DC4  0012               	return	
 10845  001DC6                     u26550:
 10846                           
 10847                           ; BSR set to: 1
 10848                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10849  001DC6  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10850  001DCA  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10851  001DCE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10852  001DD0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10853  001DD2  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10854  001DD6  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10855  001DDA  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10856  001DDC  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10857  001DDE  EC0F  F041         	call	_calculateMean	;wreg free
 10858  001DE2  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10859  001DE6  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10860  001DEA  0012               	return	
 10861  001DEC                     l22123:
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10865  001DEC  0101               	movlb	1	; () banked
 10866  001DEE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10867  001DF0  B4D8               	btfsc	status,2,c
 10868  001DF2  D00C               	goto	u26600
 10869                           
 10870                           ; BSR set to: 1
 10871  001DF4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10872  001DF6  A4D8               	btfss	status,2,c
 10873  001DF8  D06F               	goto	l22169
 10874                           
 10875                           ; BSR set to: 1
 10876  001DFA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10877  001DFC  B4D8               	btfsc	status,2,c
 10878  001DFE  D003               	goto	u26590
 10879                           
 10880                           ; BSR set to: 1
 10881  001E00  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10882  001E02  A4D8               	btfss	status,2,c
 10883  001E04  D069               	goto	l22169
 10884  001E06                     u26590:
 10885                           
 10886                           ; BSR set to: 1
 10887  001E06  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10888  001E08  A4D8               	btfss	status,2,c
 10889  001E0A  D066               	goto	l22169
 10890  001E0C                     u26600:
 10891                           
 10892                           ; BSR set to: 1
 10893                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10894  001E0C  0E01               	movlw	1
 10895  001E0E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10896                           
 10897                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10898  001E10  0E00               	movlw	0
 10899  001E12  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10900                           
 10901                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10902  001E14  0E00               	movlw	0
 10903  001E16  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10904                           
 10905                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10906  001E18  0E00               	movlw	0
 10907  001E1A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10908                           
 10909                           ; BSR set to: 1
 10910                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10911  001E1C  0EB2               	movlw	low _controlLearning_stateMachine
 10912  001E1E  6E12               	movwf	sm_send_event@psm^0,c
 10913  001E20  0E02               	movlw	high _controlLearning_stateMachine
 10914  001E22  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10915  001E24  0E00               	movlw	0
 10916  001E26  6E15               	movwf	(sm_send_event@event+1)^0,c
 10917  001E28  0E0A               	movlw	10
 10918  001E2A  6E14               	movwf	sm_send_event@event^0,c
 10919  001E2C  EC6F  F041         	call	_sm_send_event	;wreg free
 10920                           
 10921                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10922  001E30  0EE2               	movlw	low _controlGate_stateMachine
 10923  001E32  6E12               	movwf	sm_send_event@psm^0,c
 10924  001E34  0E01               	movlw	high _controlGate_stateMachine
 10925  001E36  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10926  001E38  0E00               	movlw	0
 10927  001E3A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10928  001E3C  0E13               	movlw	19
 10929  001E3E  6E14               	movwf	sm_send_event@event^0,c
 10930  001E40  EC6F  F041         	call	_sm_send_event	;wreg free
 10931                           
 10932                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10933  001E44  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10934  001E48  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10935  001E4C  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10936  001E50  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10937                           
 10938                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10939  001E54  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10940  001E58  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10941  001E5C  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10942  001E60  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10943                           
 10944                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10945  001E64  0101               	movlb	1	; () banked
 10946  001E66  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10947  001E68  A4D8               	btfss	status,2,c
 10948  001E6A  D005               	goto	l22147
 10949                           
 10950                           ; BSR set to: 1
 10951                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10952  001E6C  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10953                           
 10954                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10955  001E70  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10956                           
 10957                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10958  001E74  D005               	goto	l22149
 10959  001E76                     l22147:
 10960                           
 10961                           ; BSR set to: 1
 10962                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10963  001E76  0E04               	movlw	4
 10964  001E78  0100               	movlb	0	; () banked
 10965  001E7A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10966                           
 10967                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10968  001E7C  0E04               	movlw	4
 10969  001E7E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10970  001E80                     l22149:
 10971                           
 10972                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10973  001E80  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10974  001E84  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10975                           
 10976                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10977  001E88  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10978  001E8C  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10979                           
 10980                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10981  001E90  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10982  001E94  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10983  001E98  0100               	movlb	0	; () banked
 10984  001E9A  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10985  001E9C  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10989  001E9E  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10990  001EA2  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10991  001EA6  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10992  001EA8  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10993                           
 10994                           ; BSR set to: 0
 10995                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10996  001EAA  0E00               	movlw	0
 10997  001EAC  EC50  F045         	call	_SaveNVM_VarSystem
 10998                           
 10999                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 11000  001EB0  0E03               	movlw	3
 11001  001EB2  EC50  F045         	call	_SaveNVM_VarSystem
 11002                           
 11003                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 11004  001EB6  0E02               	movlw	2
 11005  001EB8  EC50  F045         	call	_SaveNVM_VarSystem
 11006                           
 11007                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 11008  001EBC  0E00               	movlw	0
 11009  001EBE  0101               	movlb	1	; () banked
 11010  001EC0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11011                           
 11012                           ; BSR set to: 1
 11013                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 11014  001EC2  0E00               	movlw	0
 11015  001EC4  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 11016  001EC6  0E00               	movlw	0
 11017  001EC8  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 11018  001ECA  0E00               	movlw	0
 11019  001ECC  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 11020  001ECE  0E00               	movlw	0
 11021  001ED0  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 11022                           
 11023                           ; BSR set to: 1
 11024                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 11025  001ED2  0E00               	movlw	0
 11026  001ED4  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11027                           
 11028                           ;sm_ControlLearning_MC50.c: 369:             }
 11029  001ED6  0012               	return	
 11030  001ED8                     l22169:
 11031                           
 11032                           ; BSR set to: 1
 11033  001ED8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11034  001EDA  B4D8               	btfsc	status,2,c
 11035  001EDC  D643               	goto	u26260
 11036                           
 11037                           ; BSR set to: 1
 11038  001EDE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 11039  001EE0  B4D8               	btfsc	status,2,c
 11040  001EE2  D003               	goto	u26640
 11041                           
 11042                           ; BSR set to: 1
 11043  001EE4  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 11044  001EE6  A4D8               	btfss	status,2,c
 11045  001EE8  D003               	goto	l22181
 11046  001EEA                     u26640:
 11047                           
 11048                           ; BSR set to: 1
 11049  001EEA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 11050  001EEC  B4D8               	btfsc	status,2,c
 11051  001EEE  D73F               	goto	u26510
 11052  001EF0                     l22181:
 11053                           
 11054                           ; BSR set to: 1
 11055  001EF0  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 11056  001EF2  A4D8               	btfss	status,2,c
 11057  001EF4  D008               	goto	l22187
 11058                           
 11059                           ; BSR set to: 1
 11060                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 11061  001EF6  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 11062  001EF8  0012               	return	
 11063  001EFA  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 11064  001EFC  E103               	bnz	u26670
 11065  001EFE  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 11066  001F00  A0D8               	btfss	status,0,c
 11067  001F02  0012               	return	
 11068  001F04                     u26670:
 11069  001F04  D6D8               	goto	u26390
 11070  001F06                     l22187:
 11071                           
 11072                           ; BSR set to: 1
 11073                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 11074  001F06  0E01               	movlw	1
 11075  001F08  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 11076                           
 11077                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 11078  001F0A  0E00               	movlw	0
 11079  001F0C  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11080  001F0E  0E28               	movlw	40
 11081  001F10  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11082                           
 11083                           ; BSR set to: 1
 11084                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 11085  001F12  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 11086  001F14  D005               	goto	u26680
 11087  001F16  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 11088  001F18  E102               	bnz	u26681
 11089  001F1A  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 11090  001F1C  B0D8               	btfsc	status,0,c
 11091  001F1E                     u26681:
 11092  001F1E  0012               	return	
 11093  001F20                     u26680:
 11094                           
 11095                           ; BSR set to: 1
 11096                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 11097  001F20  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 11098  001F22  0012               	return	
 11099  001F24  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 11100  001F26  E103               	bnz	u26690
 11101  001F28  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 11102  001F2A  A0D8               	btfss	status,0,c
 11103  001F2C  0012               	return	
 11104  001F2E                     u26690:
 11105                           
 11106                           ; BSR set to: 1
 11107                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 11108  001F2E  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 11109  001F32  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 11110  001F36  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 11111  001F38  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 11112  001F3A  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 11113  001F3E  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 11114  001F42  6A16               	clrf	(calculateMean@newValue+2)^0,c
 11115  001F44  6A17               	clrf	(calculateMean@newValue+3)^0,c
 11116  001F46  EC0F  F041         	call	_calculateMean	;wreg free
 11117  001F4A  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 11118  001F4E  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 11119  001F52  0012               	return	
 11120  001F54                     l22197:
 11121  001F54  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 11122  001F58  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 11123  001F5C  50DF               	movf	indf2,w,c
 11124  001F5E  0100               	movlb	0	; () banked
 11125  001F60  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 11126  001F62  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 11127                           
 11128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11129                           ; Switch size 1, requested type "simple"
 11130                           ; Number of cases is 1, Range of values is 0 to 0
 11131                           ; switch strategies available:
 11132                           ; Name         Instructions Cycles
 11133                           ; simple_byte            4     3 (average)
 11134                           ;	Chosen strategy is simple_byte
 11135  001F64  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 11136  001F66  0A00               	xorlw	0	; case 0
 11137  001F68  A4D8               	btfss	status,2,c
 11138  001F6A  0012               	return	
 11139                           
 11140                           ; BSR set to: 0
 11141                           ; Switch size 1, requested type "simple"
 11142                           ; Number of cases is 6, Range of values is 0 to 5
 11143                           ; switch strategies available:
 11144                           ; Name         Instructions Cycles
 11145                           ; simple_byte           19    10 (average)
 11146                           ;	Chosen strategy is simple_byte
 11147  001F6C  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 11148  001F6E  0A00               	xorlw	0	; case 0
 11149  001F70  B4D8               	btfsc	status,2,c
 11150  001F72  D570               	goto	l21943
 11151  001F74  0A01               	xorlw	1	; case 1
 11152  001F76  B4D8               	btfsc	status,2,c
 11153  001F78  D5BB               	goto	l21967
 11154  001F7A  0A03               	xorlw	3	; case 2
 11155  001F7C  B4D8               	btfsc	status,2,c
 11156  001F7E  D5FA               	goto	l22001
 11157  001F80  0A01               	xorlw	1	; case 3
 11158  001F82  B4D8               	btfsc	status,2,c
 11159  001F84  D65A               	goto	l22035
 11160  001F86  0A07               	xorlw	7	; case 4
 11161  001F88  B4D8               	btfsc	status,2,c
 11162  001F8A  D6AA               	goto	l22067
 11163  001F8C  0A01               	xorlw	1	; case 5
 11164  001F8E  A4D8               	btfss	status,2,c
 11165  001F90  0012               	return	
 11166  001F92  D72C               	goto	l22123
 11167  001F94                     __end_of_sm_execute_ControlLearning:
 11168                           	callstack 0
 11169                           
 11170 ;; *************** function _generateErrorLearnig *****************
 11171 ;; Defined at:
 11172 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 11173 ;; Parameters:    Size  Location     Type
 11174 ;;		None
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;		None
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  1    wreg      void 
 11179 ;; Registers used:
 11180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11181 ;; Tracked objects:
 11182 ;;		On entry : 3E/1
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11190 ;;Total ram usage:        0 bytes
 11191 ;; Hardware stack levels used: 1
 11192 ;; Hardware stack levels required when called: 6
 11193 ;; This function calls:
 11194 ;;		_sm_init
 11195 ;; This function is called by:
 11196 ;;		_sm_execute_ControlLearning
 11197 ;; This function uses a non-reentrant model
 11198 ;;
 11199                           
 11200                           	psect	text22
 11201  008150                     __ptext22:
 11202                           	callstack 0
 11203  008150                     _generateErrorLearnig:
 11204                           	callstack 22
 11205                           
 11206                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 11207                           
 11208                           ;incstack = 0
 11209  008150  0E00               	movlw	0
 11210  008152  0101               	movlb	1	; () banked
 11211  008154  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11212                           
 11213                           ; BSR set to: 1
 11214                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 11215  008156  0EBD               	movlw	low _menuConfiguration_stateMachine
 11216  008158  6E12               	movwf	sm_init@psm^0,c
 11217  00815A  0E02               	movlw	high _menuConfiguration_stateMachine
 11218  00815C  6E13               	movwf	(sm_init@psm+1)^0,c
 11219  00815E  0E00               	movlw	0
 11220  008160  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11221  008162  0E00               	movlw	0
 11222  008164  6E14               	movwf	sm_init@initial_state^0,c
 11223  008166  0E00               	movlw	0
 11224  008168  6E16               	movwf	sm_init@hist_mode^0,c
 11225  00816A  EC52  F042         	call	_sm_init	;wreg free
 11226                           
 11227                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 11228  00816E  0EED               	movlw	low _main_stateMachine
 11229  008170  6E12               	movwf	sm_init@psm^0,c
 11230  008172  0E01               	movlw	high _main_stateMachine
 11231  008174  6E13               	movwf	(sm_init@psm+1)^0,c
 11232  008176  0E00               	movlw	0
 11233  008178  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11234  00817A  0E00               	movlw	0
 11235  00817C  6E14               	movwf	sm_init@initial_state^0,c
 11236  00817E  0E00               	movlw	0
 11237  008180  6E16               	movwf	sm_init@hist_mode^0,c
 11238  008182  EC52  F042         	call	_sm_init	;wreg free
 11239                           
 11240                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 11241  008186  0EE2               	movlw	low _controlGate_stateMachine
 11242  008188  6E12               	movwf	sm_init@psm^0,c
 11243  00818A  0E01               	movlw	high _controlGate_stateMachine
 11244  00818C  6E13               	movwf	(sm_init@psm+1)^0,c
 11245  00818E  0E00               	movlw	0
 11246  008190  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11247  008192  0E00               	movlw	0
 11248  008194  6E14               	movwf	sm_init@initial_state^0,c
 11249  008196  0E00               	movlw	0
 11250  008198  6E16               	movwf	sm_init@hist_mode^0,c
 11251  00819A  EC52  F042         	call	_sm_init	;wreg free
 11252                           
 11253                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 11254  00819E  0EB2               	movlw	low _controlLearning_stateMachine
 11255  0081A0  6E12               	movwf	sm_init@psm^0,c
 11256  0081A2  0E02               	movlw	high _controlLearning_stateMachine
 11257  0081A4  6E13               	movwf	(sm_init@psm+1)^0,c
 11258  0081A6  0E00               	movlw	0
 11259  0081A8  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11260  0081AA  0E00               	movlw	0
 11261  0081AC  6E14               	movwf	sm_init@initial_state^0,c
 11262  0081AE  0E00               	movlw	0
 11263  0081B0  6E16               	movwf	sm_init@hist_mode^0,c
 11264  0081B2  EC52  F042         	call	_sm_init	;wreg free
 11265  0081B6  0012               	return		;funcret
 11266  0081B8                     __end_of_generateErrorLearnig:
 11267                           	callstack 0
 11268                           
 11269 ;; *************** function _sm_init *****************
 11270 ;; Defined at:
 11271 ;;		line 12 in file "sm_common_MC50.c"
 11272 ;; Parameters:    Size  Location     Type
 11273 ;;  psm             2   17[COMRAM] PTR struct .
 11274 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11275 ;;  initial_stat    2   19[COMRAM] int 
 11276 ;;  hist_mode       1   21[COMRAM] enum E348
 11277 ;; Auto vars:     Size  Location     Type
 11278 ;;		None
 11279 ;; Return value:  Size  Location     Type
 11280 ;;                  1    wreg      void 
 11281 ;; Registers used:
 11282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11283 ;; Tracked objects:
 11284 ;;		On entry : 0/1
 11285 ;;		On exit  : 0/0
 11286 ;;		Unchanged: 0/0
 11287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11288 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11291 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11292 ;;Total ram usage:        5 bytes
 11293 ;; Hardware stack levels used: 1
 11294 ;; Hardware stack levels required when called: 5
 11295 ;; This function calls:
 11296 ;;		_sm_restart
 11297 ;; This function is called by:
 11298 ;;		_main
 11299 ;;		_generateErrorLearnig
 11300 ;; This function uses a non-reentrant model
 11301 ;;
 11302                           
 11303                           	psect	text23
 11304  0084A4                     __ptext23:
 11305                           	callstack 0
 11306  0084A4                     _sm_init:
 11307                           	callstack 25
 11308                           
 11309                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11310                           
 11311                           ;incstack = 0
 11312  0084A4  EE20 F002          	lfsr	2,2
 11313  0084A8  5012               	movf	sm_init@psm^0,w,c
 11314  0084AA  26D9               	addwf	fsr2l,f,c
 11315  0084AC  5013               	movf	(sm_init@psm+1)^0,w,c
 11316  0084AE  22DA               	addwfc	fsr2h,f,c
 11317  0084B0  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11318  0084B4  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11319                           
 11320                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11321  0084B8  EE20 F006          	lfsr	2,6
 11322  0084BC  5012               	movf	sm_init@psm^0,w,c
 11323  0084BE  26D9               	addwf	fsr2l,f,c
 11324  0084C0  5013               	movf	(sm_init@psm+1)^0,w,c
 11325  0084C2  22DA               	addwfc	fsr2h,f,c
 11326  0084C4  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11327                           
 11328                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11329  0084C8  C012  FFD9         	movff	sm_init@psm,fsr2l
 11330  0084CC  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11331  0084D0  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11332  0084D4  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11333                           
 11334                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11335  0084D8  EE20 F007          	lfsr	2,7
 11336  0084DC  5012               	movf	sm_init@psm^0,w,c
 11337  0084DE  26D9               	addwf	fsr2l,f,c
 11338  0084E0  5013               	movf	(sm_init@psm+1)^0,w,c
 11339  0084E2  22DA               	addwfc	fsr2h,f,c
 11340  0084E4  0E00               	movlw	0
 11341  0084E6  6EDE               	movwf	postinc2,c
 11342  0084E8  0E00               	movlw	0
 11343  0084EA  6EDD               	movwf	postdec2,c
 11344                           
 11345                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11346  0084EC  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11347  0084F0  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11348  0084F4  EC30  F044         	call	_sm_restart	;wreg free
 11349  0084F8  0012               	return		;funcret
 11350  0084FA                     __end_of_sm_init:
 11351                           	callstack 0
 11352                           
 11353 ;; *************** function _sm_restart *****************
 11354 ;; Defined at:
 11355 ;;		line 23 in file "sm_common_MC50.c"
 11356 ;; Parameters:    Size  Location     Type
 11357 ;;  psm             2   15[COMRAM] PTR struct .
 11358 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;		None
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  1    wreg      void 
 11363 ;; Registers used:
 11364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11365 ;; Tracked objects:
 11366 ;;		On entry : 0/1
 11367 ;;		On exit  : 0/0
 11368 ;;		Unchanged: 0/0
 11369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11374 ;;Total ram usage:        2 bytes
 11375 ;; Hardware stack levels used: 1
 11376 ;; Hardware stack levels required when called: 4
 11377 ;; This function calls:
 11378 ;;		Nothing
 11379 ;; This function is called by:
 11380 ;;		_sm_init
 11381 ;; This function uses a non-reentrant model
 11382 ;;
 11383                           
 11384                           	psect	text24
 11385  008860                     __ptext24:
 11386                           	callstack 0
 11387  008860                     _sm_restart:
 11388                           	callstack 25
 11389                           
 11390                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11391                           
 11392                           ;incstack = 0
 11393  008860  EE20 F006          	lfsr	2,6
 11394  008864  5010               	movf	sm_restart@psm^0,w,c
 11395  008866  26D9               	addwf	fsr2l,f,c
 11396  008868  5011               	movf	(sm_restart@psm+1)^0,w,c
 11397  00886A  22DA               	addwfc	fsr2h,f,c
 11398  00886C  50DF               	movf	indf2,w,c
 11399  00886E  A4D8               	btfss	status,2,c
 11400  008870  D00E               	goto	l19567
 11401                           
 11402                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11403  008872  EE20 F002          	lfsr	2,2
 11404  008876  5010               	movf	sm_restart@psm^0,w,c
 11405  008878  26D9               	addwf	fsr2l,f,c
 11406  00887A  5011               	movf	(sm_restart@psm+1)^0,w,c
 11407  00887C  22DA               	addwfc	fsr2h,f,c
 11408  00887E  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11409  008882  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11410  008886  CFDE FFE6          	movff	postinc2,postinc1
 11411  00888A  CFDD FFE5          	movff	postdec2,postdec1
 11412  00888E                     l19567:
 11413                           
 11414                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11415  00888E  EE20 F004          	lfsr	2,4
 11416  008892  5010               	movf	sm_restart@psm^0,w,c
 11417  008894  26D9               	addwf	fsr2l,f,c
 11418  008896  5011               	movf	(sm_restart@psm+1)^0,w,c
 11419  008898  22DA               	addwfc	fsr2h,f,c
 11420  00889A  0E00               	movlw	0
 11421  00889C  6EDE               	movwf	postinc2,c
 11422  00889E  0E00               	movlw	0
 11423  0088A0  6EDD               	movwf	postdec2,c
 11424  0088A2  0012               	return		;funcret
 11425  0088A4                     __end_of_sm_restart:
 11426                           	callstack 0
 11427                           
 11428 ;; *************** function _clearLearningValue *****************
 11429 ;; Defined at:
 11430 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;		None
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;		None
 11435 ;; Return value:  Size  Location     Type
 11436 ;;                  1    wreg      void 
 11437 ;; Registers used:
 11438 ;;		wreg, status,2
 11439 ;; Tracked objects:
 11440 ;;		On entry : 3F/1
 11441 ;;		On exit  : 3F/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11448 ;;Total ram usage:        0 bytes
 11449 ;; Hardware stack levels used: 1
 11450 ;; Hardware stack levels required when called: 4
 11451 ;; This function calls:
 11452 ;;		Nothing
 11453 ;; This function is called by:
 11454 ;;		_sm_execute_ControlLearning
 11455 ;; This function uses a non-reentrant model
 11456 ;;
 11457                           
 11458                           	psect	text25
 11459  007C58                     __ptext25:
 11460                           	callstack 0
 11461  007C58                     _clearLearningValue:
 11462                           	callstack 24
 11463                           
 11464                           ; BSR set to: 1
 11465                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11466                           
 11467                           ;incstack = 0
 11468  007C58  0E00               	movlw	0
 11469  007C5A  0100               	movlb	0	; () banked
 11470  007C5C  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11471  007C5E  0E00               	movlw	0
 11472  007C60  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11473  007C62  0E00               	movlw	0
 11474  007C64  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11475  007C66  0E00               	movlw	0
 11476  007C68  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11477                           
 11478                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11479  007C6A  0E00               	movlw	0
 11480  007C6C  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11481  007C6E  0E00               	movlw	0
 11482  007C70  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11483  007C72  0E00               	movlw	0
 11484  007C74  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11485  007C76  0E00               	movlw	0
 11486  007C78  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11487                           
 11488                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11489  007C7A  0E00               	movlw	0
 11490  007C7C  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11491                           
 11492                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11493  007C7E  0E00               	movlw	0
 11494  007C80  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11495                           
 11496                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11497  007C82  0E00               	movlw	0
 11498  007C84  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11499  007C86  0E00               	movlw	0
 11500  007C88  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11501                           
 11502                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11503  007C8A  0E00               	movlw	0
 11504  007C8C  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11505  007C8E  0E00               	movlw	0
 11506  007C90  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11507                           
 11508                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11509  007C92  0E00               	movlw	0
 11510  007C94  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11511  007C96  0E00               	movlw	0
 11512  007C98  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11513                           
 11514                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11515  007C9A  0E00               	movlw	0
 11516  007C9C  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11517  007C9E  0E00               	movlw	0
 11518  007CA0  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11519                           
 11520                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11521  007CA2  0E00               	movlw	0
 11522  007CA4  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11523  007CA6  0E00               	movlw	0
 11524  007CA8  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11525                           
 11526                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11527  007CAA  0E00               	movlw	0
 11528  007CAC  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11529  007CAE  0E00               	movlw	0
 11530  007CB0  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11531                           
 11532                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11533  007CB2  0E00               	movlw	0
 11534  007CB4  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11535  007CB6  0E00               	movlw	0
 11536  007CB8  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11537  007CBA  0E00               	movlw	0
 11538  007CBC  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11539  007CBE  0E00               	movlw	0
 11540  007CC0  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11541                           
 11542                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11543  007CC2  0E00               	movlw	0
 11544  007CC4  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11545  007CC6  0E00               	movlw	0
 11546  007CC8  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11547  007CCA  0E00               	movlw	0
 11548  007CCC  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11549  007CCE  0E00               	movlw	0
 11550  007CD0  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11551                           
 11552                           ; BSR set to: 0
 11553  007CD2  0012               	return		;funcret
 11554  007CD4                     __end_of_clearLearningValue:
 11555                           	callstack 0
 11556                           
 11557 ;; *************** function _calculateMean *****************
 11558 ;; Defined at:
 11559 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11560 ;; Parameters:    Size  Location     Type
 11561 ;;  meanValue       4   15[COMRAM] unsigned long 
 11562 ;;  newValue        4   19[COMRAM] unsigned long 
 11563 ;; Auto vars:     Size  Location     Type
 11564 ;;		None
 11565 ;; Return value:  Size  Location     Type
 11566 ;;                  4   15[COMRAM] unsigned long 
 11567 ;; Registers used:
 11568 ;;		wreg, status,2, status,0
 11569 ;; Tracked objects:
 11570 ;;		On entry : 3E/1
 11571 ;;		On exit  : 3E/0
 11572 ;;		Unchanged: 3E/0
 11573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11574 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11576 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11577 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11578 ;;Total ram usage:       12 bytes
 11579 ;; Hardware stack levels used: 1
 11580 ;; Hardware stack levels required when called: 4
 11581 ;; This function calls:
 11582 ;;		Nothing
 11583 ;; This function is called by:
 11584 ;;		_sm_execute_ControlLearning
 11585 ;; This function uses a non-reentrant model
 11586 ;;
 11587                           
 11588                           	psect	text26
 11589  00821E                     __ptext26:
 11590                           	callstack 0
 11591  00821E                     _calculateMean:
 11592                           	callstack 24
 11593                           
 11594                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11595                           
 11596                           ; BSR set to: 0
 11597                           ;incstack = 0
 11598  00821E  5010               	movf	calculateMean@meanValue^0,w,c
 11599  008220  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11600  008222  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11601  008224  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11602  008226  A4D8               	btfss	status,2,c
 11603  008228  D009               	goto	l20527
 11604                           
 11605                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11606  00822A  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11607  00822E  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11608  008232  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11609  008236  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11610                           
 11611                           ;sm_ControlLearning_MC50.c: 416:     }
 11612  00823A  D019               	goto	l20529
 11613  00823C                     l20527:
 11614                           
 11615                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11616  00823C  5014               	movf	calculateMean@newValue^0,w,c
 11617  00823E  2410               	addwf	calculateMean@meanValue^0,w,c
 11618  008240  6E18               	movwf	??_calculateMean^0,c
 11619  008242  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11620  008244  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11621  008246  6E19               	movwf	(??_calculateMean+1)^0,c
 11622  008248  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11623  00824A  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11624  00824C  6E1A               	movwf	(??_calculateMean+2)^0,c
 11625  00824E  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11626  008250  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11627  008252  6E1B               	movwf	(??_calculateMean+3)^0,c
 11628  008254  90D8               	bcf	status,0,c
 11629  008256  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11630  008258  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11631  00825A  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11632  00825C  3218               	rrcf	??_calculateMean^0,f,c
 11633  00825E  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11634  008262  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11635  008266  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11636  00826A  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11637  00826E                     l20529:
 11638                           
 11639                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11640  00826E  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11641  008272  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11642  008276  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11643  00827A  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11644  00827E  0012               	return		;funcret
 11645  008280                     __end_of_calculateMean:
 11646                           	callstack 0
 11647                           
 11648 ;; *************** function _actionZone_Opening *****************
 11649 ;; Defined at:
 11650 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11651 ;; Parameters:    Size  Location     Type
 11652 ;;		None
 11653 ;; Auto vars:     Size  Location     Type
 11654 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11655 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11656 ;;  securityClos    1   12[BANK0 ] enum E10397
 11657 ;; Return value:  Size  Location     Type
 11658 ;;                  1    wreg      void 
 11659 ;; Registers used:
 11660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11661 ;; Tracked objects:
 11662 ;;		On entry : 3F/0
 11663 ;;		On exit  : 0/0
 11664 ;;		Unchanged: 0/0
 11665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11667 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11669 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11670 ;;Total ram usage:        3 bytes
 11671 ;; Hardware stack levels used: 1
 11672 ;; Hardware stack levels required when called: 8
 11673 ;; This function calls:
 11674 ;;		_CloseOrder
 11675 ;;		_GetOpenOrder
 11676 ;;		_GetSecurityStateInClosing
 11677 ;;		_GetSecurityStateInOpening
 11678 ;;		_InitFullAutoTime
 11679 ;;		_InitWalkAutoTime
 11680 ;;		_SetSegmentValueIntermitent
 11681 ;;		_StopOrder
 11682 ;;		_VerifyFollowMe
 11683 ;;		_controlVelocity
 11684 ;;		_setPositionInvertionInClosing
 11685 ;;		_setPositionInvertionInOpening
 11686 ;;		_sm_send_event
 11687 ;; This function is called by:
 11688 ;;		_sm_execute_ControlGate
 11689 ;; This function uses a non-reentrant model
 11690 ;;
 11691                           
 11692                           	psect	text27
 11693  0044FA                     __ptext27:
 11694                           	callstack 0
 11695  0044FA                     _actionZone_Opening:
 11696                           	callstack 21
 11697                           
 11698                           ; BSR set to: 0
 11699                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11700                           
 11701                           ;incstack = 0
 11702  0044FA  ECBE  F039         	call	_GetSecurityStateInClosing	;wreg free
 11703  0044FE  0100               	movlb	0	; () banked
 11704  004500  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11705                           
 11706                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11707  004502  EC11  F03A         	call	_GetSecurityStateInOpening	;wreg free
 11708  004506  0100               	movlb	0	; () banked
 11709  004508  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11710                           
 11711                           ; BSR set to: 0
 11712                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11713  00450A  ECCC  F028         	call	_GetOpenOrder	;wreg free
 11714  00450E  0100               	movlb	0	; () banked
 11715  004510  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11716                           
 11717                           ; BSR set to: 0
 11718                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11719  004512  ECDD  F025         	call	_controlVelocity	;wreg free
 11720                           
 11721                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11722  004516  EC34  F048         	call	_InitFullAutoTime	;wreg free
 11723                           
 11724                           ; BSR set to: 0
 11725                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11726  00451A  0E00               	movlw	0
 11727  00451C  0101               	movlb	1	; () banked
 11728  00451E  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11729                           
 11730                           ; BSR set to: 1
 11731                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11732  004520  0100               	movlb	0	; () banked
 11733  004522  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11734  004524  EC8C  F047         	call	_VerifyFollowMe
 11735                           
 11736                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11737  004528  0E03               	movlw	3
 11738  00452A  0101               	movlb	1	; () banked
 11739  00452C  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11740  00452E  D00D               	goto	l21399
 11741                           
 11742                           ; BSR set to: 1
 11743                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11744  004530  0E00               	movlw	0
 11745  004532  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11746  004534                     l21397:
 11747                           
 11748                           ; BSR set to: 1
 11749                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11750  004534  0EE2               	movlw	low _controlGate_stateMachine
 11751  004536  6E12               	movwf	sm_send_event@psm^0,c
 11752  004538  0E01               	movlw	high _controlGate_stateMachine
 11753  00453A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11754  00453C  0E00               	movlw	0
 11755  00453E  6E15               	movwf	(sm_send_event@event+1)^0,c
 11756  004540  0E10               	movlw	16
 11757  004542  6E14               	movwf	sm_send_event@event^0,c
 11758  004544  EC6F  F041         	call	_sm_send_event	;wreg free
 11759                           
 11760                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11761  004548  0012               	return	
 11762  00454A                     l21399:
 11763                           
 11764                           ; BSR set to: 1
 11765  00454A  0E02               	movlw	2
 11766  00454C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11767  00454E  A4D8               	btfss	status,2,c
 11768  004550  D013               	goto	l21413
 11769                           
 11770                           ; BSR set to: 1
 11771  004552  BFAB               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11772  004554  D005               	goto	u24880
 11773  004556  51AB               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11774  004558  E10F               	bnz	l21413
 11775  00455A  05AA               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11776  00455C  B0D8               	btfsc	status,0,c
 11777  00455E  D00C               	goto	l21413
 11778  004560                     u24880:
 11779                           
 11780                           ; BSR set to: 1
 11781                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11782  004560  EC1A  F037         	call	_setPositionInvertionInOpening	;wreg free
 11783                           
 11784                           ; BSR set to: 1
 11785                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11786  004564  ECE2  F047         	call	_StopOrder	;wreg free
 11787                           
 11788                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11789  004568  ECB9  F048         	call	_InitWalkAutoTime	;wreg free
 11790                           
 11791                           ; BSR set to: 0
 11792                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11793  00456C  0E01               	movlw	1
 11794  00456E  0101               	movlb	1	; () banked
 11795  004570  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11796                           
 11797                           ; BSR set to: 1
 11798                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11799  004572  0E01               	movlw	1
 11800  004574  6F8D               	movwf	_Abertura_pedonal& (0+255),b
 11801                           
 11802                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11803  004576  0012               	return	
 11804  004578                     l21413:
 11805                           
 11806                           ; BSR set to: 1
 11807  004578  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11808  00457A  B4D8               	btfsc	status,2,c
 11809  00457C  D010               	goto	u24930
 11810                           
 11811                           ; BSR set to: 1
 11812  00457E  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11813  004580  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11814  004582  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11815  004584  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11816  004586  A4D8               	btfss	status,2,c
 11817  004588  D02F               	goto	l21433
 11818                           
 11819                           ; BSR set to: 1
 11820  00458A  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11821  00458C  A4D8               	btfss	status,2,c
 11822  00458E  D02C               	goto	l21433
 11823                           
 11824                           ; BSR set to: 1
 11825  004590  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11826  004592  A4D8               	btfss	status,2,c
 11827  004594  D029               	goto	l21433
 11828                           
 11829                           ; BSR set to: 1
 11830  004596  0E02               	movlw	2
 11831  004598  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11832  00459A  A4D8               	btfss	status,2,c
 11833  00459C  D025               	goto	l21433
 11834  00459E                     u24930:
 11835                           
 11836                           ; BSR set to: 1
 11837                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11838  00459E  0E04               	movlw	4
 11839  0045A0  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11840                           
 11841                           ; BSR set to: 1
 11842                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11843  0045A2  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11844  0045A6  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11845  0045AA  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11846  0045AE  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11847                           
 11848                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11849  0045B2  0E00               	movlw	0
 11850  0045B4  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11851                           
 11852                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11853  0045B6  0E00               	movlw	0
 11854  0045B8  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11855                           
 11856                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11857  0045BA  0E01               	movlw	1
 11858  0045BC  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11859                           
 11860                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11861  0045BE  0E00               	movlw	0
 11862  0045C0  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11863                           
 11864                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11865  0045C2  0E00               	movlw	0
 11866  0045C4  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11867  0045C6  0E28               	movlw	40
 11868  0045C8  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11869                           
 11870                           ; BSR set to: 1
 11871                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11872  0045CA  0E00               	movlw	0
 11873  0045CC  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11874  0045CE  0E00               	movlw	0
 11875  0045D0  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11876  0045D2  0E04               	movlw	4
 11877  0045D4  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11878  0045D6  0E0F               	movlw	15
 11879  0045D8  ECE7  F045         	call	_SetSegmentValueIntermitent
 11880                           
 11881                           ; BSR set to: 1
 11882                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11883  0045DC  ECE2  F047         	call	_StopOrder	;wreg free
 11884                           
 11885                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11886  0045E0  0E01               	movlw	1
 11887  0045E2  0101               	movlb	1	; () banked
 11888  0045E4  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11889                           
 11890                           ;sm_ControlGate_MC50.c: 419:     }
 11891  0045E6  0012               	return	
 11892  0045E8                     l21433:
 11893                           
 11894                           ; BSR set to: 1
 11895  0045E8  0100               	movlb	0	; () banked
 11896  0045EA  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11897  0045EC  B4D8               	btfsc	status,2,c
 11898  0045EE  D012               	goto	u24970
 11899                           
 11900                           ; BSR set to: 0
 11901  0045F0  0101               	movlb	1	; () banked
 11902  0045F2  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11903  0045F4  D025               	goto	l21453
 11904  0045F6  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11905  0045F8  E103               	bnz	u24950
 11906  0045FA  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11907  0045FC  A0D8               	btfss	status,0,c
 11908  0045FE  D020               	goto	l21453
 11909  004600                     u24950:
 11910                           
 11911                           ; BSR set to: 1
 11912  004600  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11913  004602  A4D8               	btfss	status,2,c
 11914  004604  D01D               	goto	l21453
 11915                           
 11916                           ; BSR set to: 1
 11917  004606  BFCB               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11918  004608  D005               	goto	u24970
 11919  00460A  51CB               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11920  00460C  E119               	bnz	l21453
 11921  00460E  05CA               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11922  004610  B0D8               	btfsc	status,0,c
 11923  004612  D016               	goto	l21453
 11924  004614                     u24970:
 11925  004614  0101               	movlb	1	; () banked
 11926  004616  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11927  004618  A4D8               	btfss	status,2,c
 11928  00461A  D012               	goto	l21453
 11929                           
 11930                           ; BSR set to: 1
 11931                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11932  00461C  0100               	movlb	0	; () banked
 11933  00461E  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11934  004620  B4D8               	btfsc	status,2,c
 11935  004622  D002               	goto	l21447
 11936                           
 11937                           ; BSR set to: 0
 11938                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11939  004624  0101               	movlb	1	; () banked
 11940  004626  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11941  004628                     l21447:
 11942                           
 11943                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11944  004628  0E01               	movlw	1
 11945  00462A  0101               	movlb	1	; () banked
 11946  00462C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11947                           
 11948                           ; BSR set to: 1
 11949                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11950  00462E  0E00               	movlw	0
 11951  004630  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11952  004632  0E0A               	movlw	10
 11953  004634  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11954                           
 11955                           ; BSR set to: 1
 11956                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11957  004636  0E00               	movlw	0
 11958  004638  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11959  00463A  0E1E               	movlw	30
 11960  00463C  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11961                           
 11962                           ;sm_ControlGate_MC50.c: 430:     }
 11963  00463E  0012               	return	
 11964  004640                     l21453:
 11965                           
 11966                           ; BSR set to: 1
 11967  004640  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11968  004642  D02D               	goto	l21483
 11969  004644  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11970  004646  E103               	bnz	u25000
 11971  004648  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11972  00464A  A0D8               	btfss	status,0,c
 11973  00464C  D028               	goto	l21483
 11974  00464E                     u25000:
 11975                           
 11976                           ; BSR set to: 1
 11977  00464E  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11978  004650  A4D8               	btfss	status,2,c
 11979  004652  D025               	goto	l21483
 11980                           
 11981                           ; BSR set to: 1
 11982                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11983  004654  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11984  004656  A4D8               	btfss	status,2,c
 11985  004658  D005               	goto	l21465
 11986                           
 11987                           ; BSR set to: 1
 11988                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11989  00465A  0E00               	movlw	0
 11990  00465C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11991                           
 11992                           ; BSR set to: 1
 11993                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11994  00465E  EC73  F032         	call	_setPositionInvertionInClosing	;wreg free
 11995  004662  D768               	goto	l21397
 11996  004664                     l21465:
 11997                           
 11998                           ; BSR set to: 1
 11999  004664  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12000  004666  D005               	goto	u25030
 12001  004668  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12002  00466A  E116               	bnz	l21481
 12003  00466C  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12004  00466E  B0D8               	btfsc	status,0,c
 12005  004670  D013               	goto	l21481
 12006  004672                     u25030:
 12007                           
 12008                           ; BSR set to: 1
 12009                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 12010  004672  EC2D  F047         	call	_CloseOrder	;wreg free
 12011                           
 12012                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 12013  004676  EC1A  F037         	call	_setPositionInvertionInOpening	;wreg free
 12014                           
 12015                           ; BSR set to: 1
 12016                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 12017  00467A  0E00               	movlw	0
 12018  00467C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12019                           
 12020                           ; BSR set to: 1
 12021                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 12022  00467E  0E01               	movlw	1
 12023  004680  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 12024                           
 12025                           ; BSR set to: 1
 12026                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 12027  004682  0E00               	movlw	0
 12028  004684  6FCB               	movwf	(_ts_system+49)& (0+255),b	;volatile
 12029  004686  0E14               	movlw	20
 12030  004688  6FCA               	movwf	(_ts_system+48)& (0+255),b	;volatile
 12031                           
 12032                           ; BSR set to: 1
 12033                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 12034  00468A  0E00               	movlw	0
 12035  00468C  6FCD               	movwf	(_ts_system+51)& (0+255),b	;volatile
 12036  00468E  0E28               	movlw	40
 12037  004690  6FCC               	movwf	(_ts_system+50)& (0+255),b	;volatile
 12038                           
 12039                           ; BSR set to: 1
 12040                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 12041  004692  0E01               	movlw	1
 12042  004694  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 12043                           
 12044                           ;sm_ControlGate_MC50.c: 449:         } else
 12045  004696  0012               	return	
 12046  004698                     l21481:
 12047                           
 12048                           ; BSR set to: 1
 12049                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 12050  004698  0E00               	movlw	0
 12051  00469A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12052  00469C  0012               	return	
 12053  00469E                     l21483:
 12054                           
 12055                           ; BSR set to: 1
 12056  00469E  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12057  0046A0  A4D8               	btfss	status,2,c
 12058  0046A2  D00A               	goto	l21503
 12059                           
 12060                           ; BSR set to: 1
 12061                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 12062  0046A4  0E00               	movlw	0
 12063  0046A6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12064                           
 12065                           ; BSR set to: 1
 12066                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 12067  0046A8  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12068  0046AA  D7E3               	goto	u25030
 12069  0046AC  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12070  0046AE  E14E               	bnz	l2718
 12071  0046B0  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12072  0046B2  B0D8               	btfsc	status,0,c
 12073  0046B4  0012               	return	
 12074  0046B6  D7DD               	goto	u25030
 12075  0046B8                     l21503:
 12076                           
 12077                           ; BSR set to: 1
 12078  0046B8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12079  0046BA  A4D8               	btfss	status,2,c
 12080  0046BC  D018               	goto	l21521
 12081                           
 12082                           ; BSR set to: 1
 12083  0046BE  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12084  0046C0  D005               	goto	u25070
 12085  0046C2  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12086  0046C4  E114               	bnz	l21521
 12087  0046C6  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12088  0046C8  B0D8               	btfsc	status,0,c
 12089  0046CA  D011               	goto	l21521
 12090  0046CC                     u25070:
 12091                           
 12092                           ; BSR set to: 1
 12093                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 12094  0046CC  0E02               	movlw	2
 12095  0046CE  0100               	movlb	0	; () banked
 12096  0046D0  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 12097  0046D2  B4D8               	btfsc	status,2,c
 12098  0046D4  D007               	goto	l21517
 12099                           
 12100                           ; BSR set to: 0
 12101                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 12102  0046D6  0101               	movlb	1	; () banked
 12103  0046D8  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 12104                           
 12105                           ; BSR set to: 1
 12106                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 12107  0046DA  0E00               	movlw	0
 12108  0046DC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12109                           
 12110                           ; BSR set to: 1
 12111                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 12112  0046DE  EC1A  F037         	call	_setPositionInvertionInOpening	;wreg free
 12113  0046E2  D728               	goto	l21397
 12114  0046E4                     l21517:
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 12118  0046E4  EC1A  F037         	call	_setPositionInvertionInOpening	;wreg free
 12119  0046E8                     l21519:
 12120                           
 12121                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 12122  0046E8  ECE2  F047         	call	_StopOrder	;wreg free
 12123  0046EC  0012               	return	
 12124  0046EE                     l21521:
 12125                           
 12126                           ; BSR set to: 1
 12127  0046EE  0100               	movlb	0	; () banked
 12128  0046F0  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 12129  0046F2  A4D8               	btfss	status,2,c
 12130  0046F4  D005               	goto	l21527
 12131                           
 12132                           ; BSR set to: 0
 12133                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 12134  0046F6  0E03               	movlw	3
 12135  0046F8  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12136  0046FA  B4D8               	btfsc	status,2,c
 12137  0046FC  0012               	return	
 12138  0046FE  D7F4               	goto	l21519
 12139  004700                     l21527:
 12140                           
 12141                           ; BSR set to: 0
 12142  004700  0E02               	movlw	2
 12143  004702  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12144  004704  A4D8               	btfss	status,2,c
 12145  004706  D011               	goto	l21539
 12146                           
 12147                           ; BSR set to: 0
 12148  004708  0E02               	movlw	2
 12149  00470A  0101               	movlb	1	; () banked
 12150  00470C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12151  00470E  A4D8               	btfss	status,2,c
 12152  004710  D00C               	goto	l21539
 12153                           
 12154                           ; BSR set to: 1
 12155  004712  0E02               	movlw	2
 12156  004714  0100               	movlb	0	; () banked
 12157  004716  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12158  004718  B4D8               	btfsc	status,2,c
 12159  00471A  D007               	goto	l21539
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 12163  00471C  EC1A  F037         	call	_setPositionInvertionInOpening	;wreg free
 12164                           
 12165                           ; BSR set to: 1
 12166                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 12167  004720  ECE2  F047         	call	_StopOrder	;wreg free
 12168                           
 12169                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 12170  004724  ECB9  F048         	call	_InitWalkAutoTime	;wreg free
 12171                           
 12172                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 12173  004728  0012               	return	
 12174  00472A                     l21539:
 12175  00472A  0100               	movlb	0	; () banked
 12176  00472C  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12177  00472E  B4D8               	btfsc	status,2,c
 12178  004730  D008               	goto	u25160
 12179                           
 12180                           ; BSR set to: 0
 12181  004732  0E03               	movlw	3
 12182  004734  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12183  004736  B4D8               	btfsc	status,2,c
 12184  004738  D004               	goto	u25160
 12185                           
 12186                           ; BSR set to: 0
 12187  00473A  0E04               	movlw	4
 12188  00473C  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12189  00473E  A4D8               	btfss	status,2,c
 12190  004740  0012               	return	
 12191  004742                     u25160:
 12192                           
 12193                           ; BSR set to: 0
 12194  004742  0E02               	movlw	2
 12195  004744  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12196  004746  B4D8               	btfsc	status,2,c
 12197  004748  0012               	return	
 12198  00474A  D7CC               	goto	l21517
 12199  00474C                     l2718:
 12200  00474C  0012               	return		;funcret
 12201  00474E                     __end_of_actionZone_Opening:
 12202                           	callstack 0
 12203                           
 12204 ;; *************** function _setPositionInvertionInOpening *****************
 12205 ;; Defined at:
 12206 ;;		line 894 in file "sm_ControlGate_MC50.c"
 12207 ;; Parameters:    Size  Location     Type
 12208 ;;		None
 12209 ;; Auto vars:     Size  Location     Type
 12210 ;;		None
 12211 ;; Return value:  Size  Location     Type
 12212 ;;                  1    wreg      void 
 12213 ;; Registers used:
 12214 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12215 ;; Tracked objects:
 12216 ;;		On entry : 3E/1
 12217 ;;		On exit  : 3F/1
 12218 ;;		Unchanged: 0/0
 12219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12222 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12223 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12224 ;;Total ram usage:        8 bytes
 12225 ;; Hardware stack levels used: 1
 12226 ;; Hardware stack levels required when called: 6
 12227 ;; This function calls:
 12228 ;;		_getTimeDecelaration
 12229 ;; This function is called by:
 12230 ;;		_actionZone_Opening
 12231 ;; This function uses a non-reentrant model
 12232 ;;
 12233                           
 12234                           	psect	text28
 12235  006E34                     __ptext28:
 12236                           	callstack 0
 12237  006E34                     _setPositionInvertionInOpening:
 12238                           	callstack 22
 12239                           
 12240                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 12241                           
 12242                           ;incstack = 0
 12243  006E34  0E02               	movlw	2
 12244  006E36  0100               	movlb	0	; () banked
 12245  006E38  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 12246  006E3A  B4D8               	btfsc	status,2,c
 12247  006E3C  D009               	goto	l20479
 12248                           
 12249                           ; BSR set to: 0
 12250                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 12251  006E3E  0EFE               	movlw	254
 12252  006E40  0101               	movlb	1	; () banked
 12253  006E42  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12254  006E44  0EFF               	movlw	255
 12255  006E46  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12256  006E48  0EFF               	movlw	255
 12257  006E4A  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12258  006E4C  0EFF               	movlw	255
 12259  006E4E  D006               	goto	L69
 12260  006E50                     l20479:
 12261                           
 12262                           ; BSR set to: 0
 12263                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12264  006E50  0E01               	movlw	1
 12265  006E52  0101               	movlb	1	; () banked
 12266  006E54  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12267  006E56  0E00               	movlw	0
 12268  006E58  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12269  006E5A  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12270  006E5C                     L69:
 12271  006E5C  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12272                           
 12273                           ; BSR set to: 1
 12274                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12275  006E5E  0E03               	movlw	3
 12276  006E60  ECA6  F036         	call	_getTimeDecelaration
 12277  006E64  5029               	movf	?_getTimeDecelaration^0,w,c
 12278  006E66  0101               	movlb	1	; () banked
 12279  006E68  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12280  006E6A  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12281  006E6C  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12282  006E6E  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12283  006E70  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12284  006E72  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12285  006E74  0A80               	xorlw	128
 12286  006E76  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12287  006E78  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12288  006E7A  0A80               	xorlw	128
 12289  006E7C  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12290  006E7E  B0D8               	btfsc	status,0,c
 12291  006E80  D004               	goto	l20485
 12292                           
 12293                           ; BSR set to: 1
 12294                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12295  006E82  0E03               	movlw	3
 12296  006E84  ECA6  F036         	call	_getTimeDecelaration
 12297  006E88  D015               	goto	L70
 12298  006E8A                     l20485:
 12299                           
 12300                           ; BSR set to: 1
 12301  006E8A  0E01               	movlw	1
 12302  006E8C  ECA6  F036         	call	_getTimeDecelaration
 12303  006E90  0101               	movlb	1	; () banked
 12304  006E92  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12305  006E94  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12306  006E96  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12307  006E98  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12308  006E9A  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12309  006E9C  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12310  006E9E  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12311  006EA0  0A80               	xorlw	128
 12312  006EA2  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12313  006EA4  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12314  006EA6  0A80               	xorlw	128
 12315  006EA8  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12316  006EAA  B0D8               	btfsc	status,0,c
 12317  006EAC  D00B               	goto	l20489
 12318                           
 12319                           ; BSR set to: 1
 12320                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12321  006EAE  0E01               	movlw	1
 12322  006EB0  ECA6  F036         	call	_getTimeDecelaration
 12323  006EB4                     L70:
 12324  006EB4  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12325  006EB8  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12326  006EBC  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12327  006EC0  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12328  006EC4                     l20489:
 12329                           
 12330                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12331  006EC4  0100               	movlb	0	; () banked
 12332  006EC6  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12333  006EC8  0D0A               	mullw	10
 12334  006ECA  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12335  006ECE  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12336  006ED2  0E00               	movlw	0
 12337  006ED4  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12338  006ED6  0EFF               	movlw	255
 12339  006ED8  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12340  006EDA  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12341  006EDC  0101               	movlb	1	; () banked
 12342  006EDE  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12343  006EE0  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12344  006EE2  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12345  006EE4  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12346  006EE6  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12347  006EE8  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12348  006EEA  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12349  006EEC  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12350  006EEE  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12351  006EF0  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12352  006EF2  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12353  006EF4  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12354  006EF6  0EC8               	movlw	200
 12355  006EF8  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12356  006EFA  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12357  006EFC  0E00               	movlw	0
 12358  006EFE  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12359  006F00  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12360  006F02  0E00               	movlw	0
 12361  006F04  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12362  006F06  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12363  006F08  0E00               	movlw	0
 12364  006F0A  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12365  006F0C  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12366                           
 12367                           ; BSR set to: 1
 12368  006F0E  0012               	return		;funcret
 12369  006F10                     __end_of_setPositionInvertionInOpening:
 12370                           	callstack 0
 12371                           
 12372 ;; *************** function _controlVelocity *****************
 12373 ;; Defined at:
 12374 ;;		line 527 in file "outputs_MC50.c"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;		None
 12377 ;; Auto vars:     Size  Location     Type
 12378 ;;		None
 12379 ;; Return value:  Size  Location     Type
 12380 ;;                  1    wreg      void 
 12381 ;; Registers used:
 12382 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12383 ;; Tracked objects:
 12384 ;;		On entry : 3E/1
 12385 ;;		On exit  : 3E/0
 12386 ;;		Unchanged: 0/0
 12387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12390 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12391 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12392 ;;Total ram usage:        1 bytes
 12393 ;; Hardware stack levels used: 1
 12394 ;; Hardware stack levels required when called: 7
 12395 ;; This function calls:
 12396 ;;		_ControlDecelarationFactor
 12397 ;;		_InitSoftStop
 12398 ;;		_getStateOpenPosition
 12399 ;;		_getTimeDecelaration
 12400 ;; This function is called by:
 12401 ;;		_main
 12402 ;;		_actionZone_Opening
 12403 ;; This function uses a non-reentrant model
 12404 ;;
 12405                           
 12406                           	psect	text29
 12407  004BBA                     __ptext29:
 12408                           	callstack 0
 12409  004BBA                     _controlVelocity:
 12410                           	callstack 21
 12411                           
 12412                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12413                           
 12414                           ; BSR set to: 1
 12415                           ;incstack = 0
 12416  004BBA  0101               	movlb	1	; () banked
 12417  004BBC  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12418  004BBE  A4D8               	btfss	status,2,c
 12419  004BC0  D017               	goto	l20291
 12420                           
 12421                           ; BSR set to: 1
 12422  004BC2  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12423  004BC4  A4D8               	btfss	status,2,c
 12424  004BC6  D014               	goto	l20291
 12425                           
 12426                           ; BSR set to: 1
 12427                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12428  004BC8  517B               	movf	_powerControl_st& (0+255),w,b
 12429  004BCA  A4D8               	btfss	status,2,c
 12430  004BCC  D008               	goto	l20285
 12431                           
 12432                           ; BSR set to: 1
 12433                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12434  004BCE  0E00               	movlw	0
 12435  004BD0  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12436  004BD2  0E0A               	movlw	10
 12437  004BD4  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12438                           
 12439                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12440  004BD6  0E00               	movlw	0
 12441  004BD8  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12442  004BDA  0E14               	movlw	20
 12443  004BDC  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12444  004BDE                     l20285:
 12445                           
 12446                           ; BSR set to: 1
 12447                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12448  004BDE  EC5B  F048         	call	_ControlDecelarationFactor	;wreg free
 12449                           
 12450                           ; BSR set to: 1
 12451                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12452  004BE2  0E01               	movlw	1
 12453  004BE4  6F7B               	movwf	_powerControl_st& (0+255),b
 12454                           
 12455                           ; BSR set to: 1
 12456                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12457  004BE6  0E00               	movlw	0
 12458  004BE8  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12459  004BEA  0E00               	movlw	0
 12460  004BEC  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12461                           
 12462                           ;outputs_MC50.c: 541:     }
 12463  004BEE  0012               	return	
 12464  004BF0                     l20291:
 12465                           
 12466                           ; BSR set to: 1
 12467  004BF0  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12468  004BF2  B4D8               	btfsc	status,2,c
 12469  004BF4  D003               	goto	u23420
 12470                           
 12471                           ; BSR set to: 1
 12472  004BF6  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12473  004BF8  A4D8               	btfss	status,2,c
 12474  004BFA  D007               	goto	l20297
 12475  004BFC                     u23420:
 12476                           
 12477                           ; BSR set to: 1
 12478                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12479  004BFC  0E00               	movlw	0
 12480  004BFE  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12481  004C00  0E00               	movlw	0
 12482  004C02  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12483                           
 12484                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12485  004C04  0E00               	movlw	0
 12486  004C06  6F7B               	movwf	_powerControl_st& (0+255),b
 12487                           
 12488                           ;outputs_MC50.c: 547:     }
 12489  004C08  0012               	return	
 12490  004C0A                     l20297:
 12491                           
 12492                           ; BSR set to: 1
 12493  004C0A  0E03               	movlw	3
 12494  004C0C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12495  004C0E  A4D8               	btfss	status,2,c
 12496  004C10  D068               	goto	l20345
 12497                           
 12498                           ; BSR set to: 1
 12499  004C12  0E03               	movlw	3
 12500  004C14  ECA6  F036         	call	_getTimeDecelaration
 12501  004C18  5029               	movf	?_getTimeDecelaration^0,w,c
 12502  004C1A  0101               	movlb	1	; () banked
 12503  004C1C  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12504  004C1E  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12505  004C20  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12506  004C22  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12507  004C24  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12508  004C26  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12509  004C28  0A80               	xorlw	128
 12510  004C2A  0100               	movlb	0	; () banked
 12511  004C2C  6FDA               	movwf	??_controlVelocity& (0+255),b
 12512  004C2E  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12513  004C30  0A80               	xorlw	128
 12514  004C32  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12515  004C34  A0D8               	btfss	status,0,c
 12516  004C36  D004               	goto	u23450
 12517                           
 12518                           ; BSR set to: 0
 12519  004C38  0101               	movlb	1	; () banked
 12520  004C3A  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12521  004C3C  A4D8               	btfss	status,2,c
 12522  004C3E  D051               	goto	l20345
 12523  004C40                     u23450:
 12524  004C40  0100               	movlb	0	; () banked
 12525  004C42  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12526  004C44  B4D8               	btfsc	status,2,c
 12527  004C46  D004               	goto	u23470
 12528                           
 12529                           ; BSR set to: 0
 12530  004C48  0101               	movlb	1	; () banked
 12531  004C4A  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12532  004C4C  B4D8               	btfsc	status,2,c
 12533  004C4E  D00C               	goto	u23490
 12534  004C50                     u23470:
 12535  004C50  0101               	movlb	1	; () banked
 12536  004C52  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12537  004C54  D005               	goto	u23480
 12538  004C56  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12539  004C58  E144               	bnz	l20345
 12540  004C5A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12541  004C5C  B0D8               	btfsc	status,0,c
 12542  004C5E  D041               	goto	l20345
 12543  004C60                     u23480:
 12544                           
 12545                           ; BSR set to: 1
 12546  004C60  0100               	movlb	0	; () banked
 12547  004C62  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12548  004C64  B4D8               	btfsc	status,2,c
 12549  004C66  D03D               	goto	l20345
 12550  004C68                     u23490:
 12551                           
 12552                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12553  004C68  0101               	movlb	1	; () banked
 12554  004C6A  517B               	movf	_powerControl_st& (0+255),w,b
 12555  004C6C  A4D8               	btfss	status,2,c
 12556  004C6E  D022               	goto	l20331
 12557                           
 12558                           ; BSR set to: 1
 12559  004C70  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12560  004C72  A4D8               	btfss	status,2,c
 12561  004C74  D01F               	goto	l20331
 12562                           
 12563                           ; BSR set to: 1
 12564                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12565  004C76  0E00               	movlw	0
 12566  004C78  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12567  004C7A  0E14               	movlw	20
 12568  004C7C  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12569                           
 12570                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12571  004C7E  0100               	movlb	0	; () banked
 12572  004C80  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12573  004C82  B4D8               	btfsc	status,2,c
 12574  004C84  D008               	goto	l20321
 12575                           
 12576                           ; BSR set to: 0
 12577                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12578  004C86  0E00               	movlw	0
 12579  004C88  0101               	movlb	1	; () banked
 12580  004C8A  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12581                           
 12582                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12583  004C8C  0E01               	movlw	1
 12584  004C8E  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12585                           
 12586                           ; BSR set to: 1
 12587                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12588  004C90  ECC4  F043         	call	_InitSoftStop	;wreg free
 12589                           
 12590                           ;outputs_MC50.c: 563:                     }
 12591  004C94  D00F               	goto	l20331
 12592  004C96                     l20321:
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12596  004C96  0E00               	movlw	0
 12597  004C98  0101               	movlb	1	; () banked
 12598  004C9A  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12599  004C9C  0E0A               	movlw	10
 12600  004C9E  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12601                           
 12602                           ; BSR set to: 1
 12603                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12604  004CA0  EC5B  F048         	call	_ControlDecelarationFactor	;wreg free
 12605                           
 12606                           ; BSR set to: 1
 12607                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12608  004CA4  0E01               	movlw	1
 12609  004CA6  6F7B               	movwf	_powerControl_st& (0+255),b
 12610                           
 12611                           ; BSR set to: 1
 12612                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12613  004CA8  0E00               	movlw	0
 12614  004CAA  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12615  004CAC  0E00               	movlw	0
 12616  004CAE  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12617                           
 12618                           ; BSR set to: 1
 12619                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12620  004CB0  0E00               	movlw	0
 12621  004CB2  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12622  004CB4                     l20331:
 12623                           
 12624                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12625  004CB4  0101               	movlb	1	; () banked
 12626  004CB6  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12627  004CB8  D005               	goto	u23530
 12628  004CBA  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12629  004CBC  E102               	bnz	u23531
 12630  004CBE  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12631  004CC0  B0D8               	btfsc	status,0,c
 12632  004CC2                     u23531:
 12633  004CC2  0012               	return	
 12634  004CC4                     u23530:
 12635                           
 12636                           ; BSR set to: 1
 12637  004CC4  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12638  004CC6  A4D8               	btfss	status,2,c
 12639  004CC8  0012               	return	
 12640                           
 12641                           ; BSR set to: 1
 12642  004CCA  0100               	movlb	0	; () banked
 12643  004CCC  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12644  004CCE  B4D8               	btfsc	status,2,c
 12645  004CD0  0012               	return	
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12649  004CD2  0E00               	movlw	0
 12650  004CD4  0101               	movlb	1	; () banked
 12651  004CD6  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12652  004CD8  0E02               	movlw	2
 12653  004CDA  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12654                           
 12655                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12656  004CDC  0E00               	movlw	0
 12657  004CDE  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12658  004CE0  D77E               	goto	l20285
 12659  004CE2                     l20345:
 12660  004CE2  0101               	movlb	1	; () banked
 12661  004CE4  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12662  004CE6  EC99  F033         	call	_getStateOpenPosition
 12663  004CEA  06E8               	decf	wreg,f,c
 12664  004CEC  A4D8               	btfss	status,2,c
 12665  004CEE  D042               	goto	l20387
 12666                           
 12667                           ; BSR set to: 0
 12668  004CF0  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12669  004CF2  B4D8               	btfsc	status,2,c
 12670  004CF4  D004               	goto	u23580
 12671                           
 12672                           ; BSR set to: 0
 12673  004CF6  0101               	movlb	1	; () banked
 12674  004CF8  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12675  004CFA  B4D8               	btfsc	status,2,c
 12676  004CFC  D00C               	goto	u23600
 12677  004CFE                     u23580:
 12678  004CFE  0101               	movlb	1	; () banked
 12679  004D00  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12680  004D02  D005               	goto	u23590
 12681  004D04  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12682  004D06  E136               	bnz	l20387
 12683  004D08  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12684  004D0A  B0D8               	btfsc	status,0,c
 12685  004D0C  D033               	goto	l20387
 12686  004D0E                     u23590:
 12687                           
 12688                           ; BSR set to: 1
 12689  004D0E  0100               	movlb	0	; () banked
 12690  004D10  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12691  004D12  B4D8               	btfsc	status,2,c
 12692  004D14  D02F               	goto	l20387
 12693  004D16                     u23600:
 12694                           
 12695                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12696  004D16  0101               	movlb	1	; () banked
 12697  004D18  517B               	movf	_powerControl_st& (0+255),w,b
 12698  004D1A  A4D8               	btfss	status,2,c
 12699  004D1C  D022               	goto	l20373
 12700                           
 12701                           ; BSR set to: 1
 12702  004D1E  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12703  004D20  A4D8               	btfss	status,2,c
 12704  004D22  D01F               	goto	l20373
 12705                           
 12706                           ; BSR set to: 1
 12707                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12708  004D24  0E00               	movlw	0
 12709  004D26  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12710  004D28  0E14               	movlw	20
 12711  004D2A  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12712                           
 12713                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12714  004D2C  0100               	movlb	0	; () banked
 12715  004D2E  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12716  004D30  B4D8               	btfsc	status,2,c
 12717  004D32  D008               	goto	l20365
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12721  004D34  0E00               	movlw	0
 12722  004D36  0101               	movlb	1	; () banked
 12723  004D38  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12724                           
 12725                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12726  004D3A  0E01               	movlw	1
 12727  004D3C  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12728                           
 12729                           ; BSR set to: 1
 12730                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12731  004D3E  ECC4  F043         	call	_InitSoftStop	;wreg free
 12732                           
 12733                           ;outputs_MC50.c: 598:             }else{
 12734  004D42  D00F               	goto	l20373
 12735  004D44                     l20365:
 12736                           
 12737                           ; BSR set to: 0
 12738                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12739  004D44  0E00               	movlw	0
 12740  004D46  0101               	movlb	1	; () banked
 12741  004D48  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12742  004D4A  0E0A               	movlw	10
 12743  004D4C  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12744                           
 12745                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12746  004D4E  0E00               	movlw	0
 12747  004D50  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12748                           
 12749                           ; BSR set to: 1
 12750                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12751  004D52  EC5B  F048         	call	_ControlDecelarationFactor	;wreg free
 12752                           
 12753                           ; BSR set to: 1
 12754                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12755  004D56  0E01               	movlw	1
 12756  004D58  6F7B               	movwf	_powerControl_st& (0+255),b
 12757                           
 12758                           ; BSR set to: 1
 12759                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12760  004D5A  0E00               	movlw	0
 12761  004D5C  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12762  004D5E  0E00               	movlw	0
 12763  004D60  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12764  004D62                     l20373:
 12765                           
 12766                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12767  004D62  0101               	movlb	1	; () banked
 12768  004D64  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12769  004D66  D7AE               	goto	u23530
 12770  004D68  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12771  004D6A  E135               	bnz	l2306
 12772  004D6C  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12773  004D6E  B0D8               	btfsc	status,0,c
 12774  004D70  0012               	return	
 12775  004D72  D7A8               	goto	u23530
 12776  004D74                     l20387:
 12777  004D74  0101               	movlb	1	; () banked
 12778  004D76  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12779  004D78  D012               	goto	l20395
 12780  004D7A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12781  004D7C  E103               	bnz	u23670
 12782  004D7E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12783  004D80  A0D8               	btfss	status,0,c
 12784  004D82  D00D               	goto	l20395
 12785  004D84                     u23670:
 12786                           
 12787                           ; BSR set to: 1
 12788  004D84  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12789  004D86  B4D8               	btfsc	status,2,c
 12790  004D88  D00A               	goto	l20395
 12791                           
 12792                           ; BSR set to: 1
 12793                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12794  004D8A  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12795  004D8C  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12796  004D8E  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12797  004D90  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12798  004D92  A0D8               	btfss	status,0,c
 12799  004D94  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12800  004D96  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12801  004D98                     l20393:
 12802                           
 12803                           ; BSR set to: 1
 12804                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12805  004D98  0E00               	movlw	0
 12806  004D9A  6F7B               	movwf	_powerControl_st& (0+255),b
 12807                           
 12808                           ;outputs_MC50.c: 623:     }
 12809  004D9C  0012               	return	
 12810  004D9E                     l20395:
 12811                           
 12812                           ; BSR set to: 1
 12813  004D9E  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12814  004DA0  D010               	goto	l20403
 12815  004DA2  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12816  004DA4  E103               	bnz	u23690
 12817  004DA6  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12818  004DA8  A0D8               	btfss	status,0,c
 12819  004DAA  D00B               	goto	l20403
 12820  004DAC                     u23690:
 12821                           
 12822                           ; BSR set to: 1
 12823  004DAC  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12824  004DAE  B4D8               	btfsc	status,2,c
 12825  004DB0  D008               	goto	l20403
 12826                           
 12827                           ; BSR set to: 1
 12828                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12829  004DB2  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12830  004DB4  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12831  004DB6  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12832  004DB8  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12833  004DBA  A0D8               	btfss	status,0,c
 12834  004DBC  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12835  004DBE  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12836  004DC0  D7EB               	goto	l20393
 12837  004DC2                     l20403:
 12838                           
 12839                           ; BSR set to: 1
 12840                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12841  004DC2  0E00               	movlw	0
 12842  004DC4  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12843  004DC6  0E00               	movlw	0
 12844  004DC8  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12845                           
 12846                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12847  004DCA  0E00               	movlw	0
 12848  004DCC  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12849  004DCE  0E00               	movlw	0
 12850  004DD0  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12851                           
 12852                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12853  004DD2  0E00               	movlw	0
 12854  004DD4  6F7B               	movwf	_powerControl_st& (0+255),b
 12855  004DD6                     l2306:
 12856  004DD6  0012               	return		;funcret
 12857  004DD8                     __end_of_controlVelocity:
 12858                           	callstack 0
 12859                           
 12860 ;; *************** function _getStateOpenPosition *****************
 12861 ;; Defined at:
 12862 ;;		line 470 in file "outputs_MC50.c"
 12863 ;; Parameters:    Size  Location     Type
 12864 ;;  stateMotor      1    wreg     enum E10381
 12865 ;; Auto vars:     Size  Location     Type
 12866 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12867 ;;  state           1    0[BANK0 ] _Bool 
 12868 ;; Return value:  Size  Location     Type
 12869 ;;                  1    wreg      _Bool 
 12870 ;; Registers used:
 12871 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12872 ;; Tracked objects:
 12873 ;;		On entry : 3F/1
 12874 ;;		On exit  : 3F/0
 12875 ;;		Unchanged: 0/0
 12876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12878 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12879 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12880 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12881 ;;Total ram usage:       11 bytes
 12882 ;; Hardware stack levels used: 1
 12883 ;; Hardware stack levels required when called: 6
 12884 ;; This function calls:
 12885 ;;		___lmul
 12886 ;;		_getTimeDecelaration
 12887 ;; This function is called by:
 12888 ;;		_controlVelocity
 12889 ;; This function uses a non-reentrant model
 12890 ;;
 12891                           
 12892                           	psect	text30
 12893  006732                     __ptext30:
 12894                           	callstack 0
 12895  006732                     _getStateOpenPosition:
 12896                           	callstack 21
 12897                           
 12898                           ;incstack = 0
 12899                           ;getStateOpenPosition@stateMotor stored from wreg
 12900  006732  0100               	movlb	0	; () banked
 12901  006734  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12902                           
 12903                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12904  006736  0E00               	movlw	0
 12905  006738  0100               	movlb	0	; () banked
 12906  00673A  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12910  00673C  0101               	movlb	1	; () banked
 12911  00673E  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12912  006740  A4D8               	btfss	status,2,c
 12913  006742  D002               	goto	l19771
 12914  006744                     u22670:
 12915                           
 12916                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12917  006744  0E01               	movlw	1
 12918  006746  D046               	goto	L71
 12919  006748                     l19771:
 12920                           
 12921                           ; BSR set to: 1
 12922  006748  0100               	movlb	0	; () banked
 12923  00674A  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12924  00674C  0D14               	mullw	20
 12925  00674E  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12926  006752  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12927  006756  0E00               	movlw	0
 12928  006758  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12929  00675A  0EFF               	movlw	255
 12930  00675C  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12931  00675E  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12932  006760  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12933  006762  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12934  006764  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12935  006766  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12936  006768  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12937  00676A  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12938  00676C  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12939  00676E  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12940  006770  B0D8               	btfsc	status,0,c
 12941  006772  D033               	goto	l19785
 12942                           
 12943                           ; BSR set to: 0
 12944  006774  0E02               	movlw	2
 12945  006776  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12946  006778  A4D8               	btfss	status,2,c
 12947  00677A  D02F               	goto	l19785
 12948                           
 12949                           ; BSR set to: 0
 12950                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12951  00677C  90D8               	bcf	status,0,c
 12952  00677E  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12953  006780  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12954  006782  D001               	goto	l19779
 12955  006784  D7DF               	goto	u22670
 12956  006786                     l19779:
 12957                           
 12958                           ; BSR set to: 0
 12959  006786  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12960  006788  0D14               	mullw	20
 12961  00678A  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12962  00678E  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12963  006792  0E00               	movlw	0
 12964  006794  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12965  006796  0EFF               	movlw	255
 12966  006798  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12967  00679A  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12968  00679C  0ED8               	movlw	216
 12969  00679E  2432               	addwf	??_getStateOpenPosition^0,w,c
 12970  0067A0  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12971  0067A2  0EFF               	movlw	255
 12972  0067A4  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12973  0067A6  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12974  0067A8  0EFF               	movlw	255
 12975  0067AA  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12976  0067AC  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12977  0067AE  0EFF               	movlw	255
 12978  0067B0  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12979  0067B2  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12980  0067B4  0101               	movlb	1	; () banked
 12981  0067B6  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12982  0067B8  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12983  0067BA  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12984  0067BC  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12985  0067BE  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12986  0067C0  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12987  0067C2  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12988  0067C4  0A80               	xorlw	128
 12989  0067C6  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12990  0067C8  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12991  0067CA  0A80               	xorlw	128
 12992  0067CC  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12993  0067CE  A0D8               	btfss	status,0,c
 12994  0067D0  D7B9               	goto	u22670
 12995                           
 12996                           ; BSR set to: 1
 12997                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12998  0067D2  0E00               	movlw	0
 12999  0067D4                     L71:
 13000  0067D4  0100               	movlb	0	; () banked
 13001  0067D6  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 13002  0067D8  D032               	goto	l2249
 13003  0067DA                     l19785:
 13004                           
 13005                           ; BSR set to: 0
 13006  0067DA  0E02               	movlw	2
 13007  0067DC  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 13008  0067DE  B4D8               	btfsc	status,2,c
 13009  0067E0  D003               	goto	u22730
 13010                           
 13011                           ; BSR set to: 0
 13012  0067E2  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 13013  0067E4  A4D8               	btfss	status,2,c
 13014  0067E6  D02B               	goto	l2249
 13015  0067E8                     u22730:
 13016                           
 13017                           ; BSR set to: 0
 13018                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 13019  0067E8  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 13020  0067EA  6E1D               	movwf	___lmul@multiplier^0,c
 13021  0067EC  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13022  0067EE  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13023  0067F0  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13024  0067F2  0E0A               	movlw	10
 13025  0067F4  6E21               	movwf	___lmul@multiplicand^0,c
 13026  0067F6  0E00               	movlw	0
 13027  0067F8  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13028  0067FA  0E00               	movlw	0
 13029  0067FC  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13030  0067FE  0E00               	movlw	0
 13031  006800  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13032  006802  EC7D  F042         	call	___lmul	;wreg free
 13033  006806  501D               	movf	?___lmul^0,w,c
 13034  006808  0100               	movlb	0	; () banked
 13035  00680A  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 13036  00680C  501E               	movf	(?___lmul+1)^0,w,c
 13037  00680E  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 13038  006810  501F               	movf	(?___lmul+2)^0,w,c
 13039  006812  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 13040  006814  5020               	movf	(?___lmul+3)^0,w,c
 13041  006816  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 13042  006818  A0D8               	btfss	status,0,c
 13043  00681A  D794               	goto	u22670
 13044                           
 13045                           ; BSR set to: 0
 13046  00681C  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 13047  00681E  ECA6  F036         	call	_getTimeDecelaration
 13048  006822  0101               	movlb	1	; () banked
 13049  006824  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 13050  006826  5C29               	subwf	?_getTimeDecelaration^0,w,c
 13051  006828  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 13052  00682A  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 13053  00682C  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 13054  00682E  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 13055  006830  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 13056  006832  0A80               	xorlw	128
 13057  006834  6E32               	movwf	??_getStateOpenPosition^0,c
 13058  006836  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 13059  006838  0A80               	xorlw	128
 13060  00683A  5832               	subwfb	??_getStateOpenPosition^0,w,c
 13061  00683C  D7C8               	goto	L72
 13062  00683E                     l2249:
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;outputs_MC50.c: 507:     return state;
 13066  00683E  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 13067                           
 13068                           ; BSR set to: 0
 13069  006840  0012               	return		;funcret
 13070  006842                     __end_of_getStateOpenPosition:
 13071                           	callstack 0
 13072                           
 13073 ;; *************** function _InitSoftStop *****************
 13074 ;; Defined at:
 13075 ;;		line 849 in file "sm_ControlGate_MC50.c"
 13076 ;; Parameters:    Size  Location     Type
 13077 ;;		None
 13078 ;; Auto vars:     Size  Location     Type
 13079 ;;		None
 13080 ;; Return value:  Size  Location     Type
 13081 ;;                  1    wreg      void 
 13082 ;; Registers used:
 13083 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13084 ;; Tracked objects:
 13085 ;;		On entry : 3F/1
 13086 ;;		On exit  : 3E/0
 13087 ;;		Unchanged: 0/0
 13088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13093 ;;Total ram usage:        1 bytes
 13094 ;; Hardware stack levels used: 1
 13095 ;; Hardware stack levels required when called: 5
 13096 ;; This function calls:
 13097 ;;		_GetMotorPower
 13098 ;; This function is called by:
 13099 ;;		_controlVelocity
 13100 ;; This function uses a non-reentrant model
 13101 ;;
 13102                           
 13103                           	psect	text31
 13104  008788                     __ptext31:
 13105                           	callstack 0
 13106  008788                     _InitSoftStop:
 13107                           	callstack 22
 13108                           
 13109                           ; BSR set to: 1
 13110                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 13111                           
 13112                           ; BSR set to: 0
 13113                           ;incstack = 0
 13114  008788  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 13115  00878A  B4D8               	btfsc	status,2,c
 13116  00878C  D003               	goto	u22770
 13117                           
 13118                           ; BSR set to: 1
 13119  00878E  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13120  008790  A4D8               	btfss	status,2,c
 13121  008792  0012               	return	
 13122  008794                     u22770:
 13123                           
 13124                           ; BSR set to: 1
 13125  008794  0100               	movlb	0	; () banked
 13126  008796  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13127  008798  B4D8               	btfsc	status,2,c
 13128  00879A  0012               	return	
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 13132  00879C  0E00               	movlw	0
 13133  00879E  0101               	movlb	1	; () banked
 13134  0087A0  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 13135  0087A2  0E00               	movlw	0
 13136  0087A4  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 13137                           
 13138                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 13139  0087A6  0E00               	movlw	0
 13140  0087A8  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 13141  0087AA  0E00               	movlw	0
 13142  0087AC  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13143                           
 13144                           ; BSR set to: 1
 13145                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 13146  0087AE  ECEE  F037         	call	_GetMotorPower	;wreg free
 13147  0087B2  6E14               	movwf	??_InitSoftStop^0,c
 13148  0087B4  5014               	movf	??_InitSoftStop^0,w,c
 13149  0087B6  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13150  0087B8  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 13151                           
 13152                           ; BSR set to: 1
 13153                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 13154  0087BA  0E01               	movlw	1
 13155  0087BC  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 13156  0087BE  6FB2               	movwf	(_ts_system+24)& (0+255),b	;volatile
 13157  0087C0  0E00               	movlw	0
 13158  0087C2  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 13159  0087C4  6FB3               	movwf	(_ts_system+25)& (0+255),b	;volatile
 13160                           
 13161                           ; BSR set to: 1
 13162                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 13163  0087C6  0100               	movlb	0	; () banked
 13164  0087C8  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13165  0087CA  080A               	sublw	10
 13166  0087CC  0101               	movlb	1	; () banked
 13167  0087CE  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 13168  0087D0  0012               	return		;funcret
 13169  0087D2                     __end_of_InitSoftStop:
 13170                           	callstack 0
 13171                           
 13172 ;; *************** function _ControlDecelarationFactor *****************
 13173 ;; Defined at:
 13174 ;;		line 463 in file "outputs_MC50.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;		None
 13177 ;; Auto vars:     Size  Location     Type
 13178 ;;		None
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  1    wreg      void 
 13181 ;; Registers used:
 13182 ;;		wreg, status,2, status,0, prodl, prodh
 13183 ;; Tracked objects:
 13184 ;;		On entry : 3E/1
 13185 ;;		On exit  : 3F/1
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13192 ;;Total ram usage:        0 bytes
 13193 ;; Hardware stack levels used: 1
 13194 ;; Hardware stack levels required when called: 4
 13195 ;; This function calls:
 13196 ;;		Nothing
 13197 ;; This function is called by:
 13198 ;;		_controlVelocity
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           
 13202                           	psect	text32
 13203  0090B6                     __ptext32:
 13204                           	callstack 0
 13205  0090B6                     _ControlDecelarationFactor:
 13206                           	callstack 23
 13207                           
 13208                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 13209                           
 13210                           ;incstack = 0
 13211  0090B6  0E01               	movlw	1
 13212  0090B8  0101               	movlb	1	; () banked
 13213  0090BA  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 13214                           
 13215                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 13216  0090BC  0E02               	movlw	2
 13217  0090BE  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 13218                           
 13219                           ; BSR set to: 1
 13220                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 13221  0090C0  0100               	movlb	0	; () banked
 13222  0090C2  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 13223  0090C4  0101               	movlb	1	; () banked
 13224  0090C6  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 13225  0090C8  CFF3 F17E          	movff	prodl,_powerControl_st+3
 13226                           
 13227                           ; BSR set to: 1
 13228  0090CC  0012               	return		;funcret
 13229  0090CE                     __end_of_ControlDecelarationFactor:
 13230                           	callstack 0
 13231                           
 13232 ;; *************** function _actionZone_Opened *****************
 13233 ;; Defined at:
 13234 ;;		line 514 in file "sm_ControlGate_MC50.c"
 13235 ;; Parameters:    Size  Location     Type
 13236 ;;		None
 13237 ;; Auto vars:     Size  Location     Type
 13238 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 13239 ;;  securityClos    1   31[COMRAM] enum E10397
 13240 ;; Return value:  Size  Location     Type
 13241 ;;                  1    wreg      void 
 13242 ;; Registers used:
 13243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13244 ;; Tracked objects:
 13245 ;;		On entry : 3F/0
 13246 ;;		On exit  : 3E/0
 13247 ;;		Unchanged: 0/0
 13248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13252 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13253 ;;Total ram usage:        2 bytes
 13254 ;; Hardware stack levels used: 1
 13255 ;; Hardware stack levels required when called: 7
 13256 ;; This function calls:
 13257 ;;		_CloseOrder
 13258 ;;		_GetOpenOrder
 13259 ;;		_GetSecurityStateInClosing
 13260 ;;		_InitFullAutoTime
 13261 ;;		_InitWalkAutoTime
 13262 ;;		_OpenFullOrder
 13263 ;;		_OpenWalkOrder
 13264 ;;		_VerifyFollowMe
 13265 ;; This function is called by:
 13266 ;;		_sm_execute_ControlGate
 13267 ;; This function uses a non-reentrant model
 13268 ;;
 13269                           
 13270                           	psect	text33
 13271  004DD8                     __ptext33:
 13272                           	callstack 0
 13273  004DD8                     _actionZone_Opened:
 13274                           	callstack 22
 13275                           
 13276                           ; BSR set to: 0
 13277                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13278                           
 13279                           ; BSR set to: 1
 13280                           ;incstack = 0
 13281  004DD8  ECBE  F039         	call	_GetSecurityStateInClosing	;wreg free
 13282  004DDC  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13283                           
 13284                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13285  004DDE  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13286  004DE0  B4D8               	btfsc	status,2,c
 13287  004DE2  D007               	goto	l21559
 13288  004DE4  0101               	movlb	1	; () banked
 13289  004DE6  518D               	movf	_Abertura_pedonal& (0+255),w,b
 13290  004DE8  A4D8               	btfss	status,2,c
 13291  004DEA  D003               	goto	l21559
 13292                           
 13293                           ; BSR set to: 1
 13294                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13295  004DEC  EC34  F048         	call	_InitFullAutoTime	;wreg free
 13296                           
 13297                           ;sm_ControlGate_MC50.c: 519:     }
 13298  004DF0  D008               	goto	l2722
 13299  004DF2                     l21559:
 13300  004DF2  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13301  004DF4  B4D8               	btfsc	status,2,c
 13302  004DF6  D005               	goto	l2722
 13303  004DF8  0101               	movlb	1	; () banked
 13304  004DFA  058D               	decf	_Abertura_pedonal& (0+255),w,b
 13305  004DFC  B4D8               	btfsc	status,2,c
 13306                           
 13307                           ; BSR set to: 1
 13308                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13309  004DFE  ECB9  F048         	call	_InitWalkAutoTime	;wreg free
 13310  004E02                     l2722:
 13311                           
 13312                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13313  004E02  ECCC  F028         	call	_GetOpenOrder	;wreg free
 13314  004E06  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13315                           
 13316                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13317  004E08  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13318  004E0A  EC8C  F047         	call	_VerifyFollowMe
 13319                           
 13320                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13321  004E0E  B28E               	btfsc	142,1,c	;volatile
 13322  004E10  D013               	goto	l2724
 13323  004E12  0100               	movlb	0	; () banked
 13324  004E14  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13325  004E16  B4D8               	btfsc	status,2,c
 13326  004E18  D00F               	goto	l2724
 13327                           
 13328                           ; BSR set to: 0
 13329  004E1A  0101               	movlb	1	; () banked
 13330  004E1C  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13331  004E1E  B4D8               	btfsc	status,2,c
 13332  004E20  D00B               	goto	l2724
 13333                           
 13334                           ; BSR set to: 1
 13335  004E22  0E35               	movlw	53
 13336  004E24  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13337  004E26  B4D8               	btfsc	status,2,c
 13338  004E28  D007               	goto	l2724
 13339                           
 13340                           ; BSR set to: 1
 13341  004E2A  0E02               	movlw	2
 13342  004E2C  0100               	movlb	0	; () banked
 13343  004E2E  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13344  004E30  A4D8               	btfss	status,2,c
 13345  004E32  D002               	goto	l2724
 13346                           
 13347                           ; BSR set to: 0
 13348                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13349  004E34  0E00               	movlw	0
 13350  004E36  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13351  004E38                     l2724:
 13352                           
 13353                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13354  004E38  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13355  004E3A  B4D8               	btfsc	status,2,c
 13356  004E3C  D05D               	goto	l2725
 13357                           
 13358                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13359  004E3E  0E00               	movlw	0
 13360  004E40  0101               	movlb	1	; () banked
 13361  004E42  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13362  004E44  0E3C               	movlw	60
 13363  004E46  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13364                           
 13365                           ; BSR set to: 1
 13366                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13367  004E48  0E02               	movlw	2
 13368  004E4A  0100               	movlb	0	; () banked
 13369  004E4C  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13370  004E4E  A4D8               	btfss	status,2,c
 13371  004E50  D00D               	goto	l21591
 13372                           
 13373                           ; BSR set to: 0
 13374  004E52  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13375  004E54  A4D8               	btfss	status,2,c
 13376  004E56  D00A               	goto	l21591
 13377                           
 13378                           ; BSR set to: 0
 13379  004E58  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13380  004E5A  B4D8               	btfsc	status,2,c
 13381  004E5C  D004               	goto	u25310
 13382                           
 13383                           ; BSR set to: 0
 13384  004E5E  0E04               	movlw	4
 13385  004E60  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13386  004E62  A4D8               	btfss	status,2,c
 13387  004E64  D003               	goto	l21591
 13388  004E66                     u25310:
 13389                           
 13390                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13391  004E66  EC2D  F047         	call	_CloseOrder	;wreg free
 13392                           
 13393                           ;sm_ControlGate_MC50.c: 546:         }
 13394  004E6A  0012               	return	
 13395  004E6C                     l21591:
 13396                           
 13397                           ; BSR set to: 0
 13398  004E6C  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13399  004E6E  B4D8               	btfsc	status,2,c
 13400  004E70  D014               	goto	l21605
 13401                           
 13402                           ; BSR set to: 0
 13403                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13404  004E72  0E03               	movlw	3
 13405  004E74  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13406  004E76  A4D8               	btfss	status,2,c
 13407  004E78  D00B               	goto	l21601
 13408                           
 13409                           ; BSR set to: 0
 13410  004E7A  0101               	movlb	1	; () banked
 13411  004E7C  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13412  004E7E  A4D8               	btfss	status,2,c
 13413  004E80  D007               	goto	l21601
 13414                           
 13415                           ; BSR set to: 1
 13416  004E82  0E04               	movlw	4
 13417  004E84  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13418  004E86  B4D8               	btfsc	status,2,c
 13419  004E88  D003               	goto	l21601
 13420  004E8A                     u25350:
 13421                           
 13422                           ; BSR set to: 1
 13423                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13424  004E8A  EC40  F047         	call	_OpenFullOrder	;wreg free
 13425                           
 13426                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13427  004E8E  0012               	return	
 13428  004E90                     l21601:
 13429  004E90  0E04               	movlw	4
 13430  004E92  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13431  004E94  A4D8               	btfss	status,2,c
 13432  004E96  0012               	return	
 13433  004E98  D7E6               	goto	u25310
 13434  004E9A                     l21605:
 13435                           
 13436                           ; BSR set to: 0
 13437  004E9A  0E03               	movlw	3
 13438  004E9C  0101               	movlb	1	; () banked
 13439  004E9E  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13440  004EA0  A4D8               	btfss	status,2,c
 13441  004EA2  D009               	goto	l21613
 13442                           
 13443                           ; BSR set to: 1
 13444  004EA4  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13445  004EA6  A4D8               	btfss	status,2,c
 13446  004EA8  D006               	goto	l21613
 13447  004EAA                     u25380:
 13448                           
 13449                           ; BSR set to: 1
 13450                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13451  004EAA  EC40  F047         	call	_OpenFullOrder	;wreg free
 13452  004EAE                     l21611:
 13453                           
 13454                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13455  004EAE  0E00               	movlw	0
 13456  004EB0  0101               	movlb	1	; () banked
 13457  004EB2  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13458                           
 13459                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13460  004EB4  0012               	return	
 13461  004EB6                     l21613:
 13462                           
 13463                           ; BSR set to: 1
 13464  004EB6  0E03               	movlw	3
 13465  004EB8  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13466  004EBA  A4D8               	btfss	status,2,c
 13467  004EBC  D007               	goto	l21621
 13468                           
 13469                           ; BSR set to: 1
 13470  004EBE  0E02               	movlw	2
 13471  004EC0  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13472  004EC2  A4D8               	btfss	status,2,c
 13473  004EC4  D003               	goto	l21621
 13474                           
 13475                           ; BSR set to: 1
 13476                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13477  004EC6  EC04  F040         	call	_OpenWalkOrder	;wreg free
 13478  004ECA  D7F1               	goto	l21611
 13479  004ECC                     l21621:
 13480                           
 13481                           ; BSR set to: 1
 13482  004ECC  0E03               	movlw	3
 13483  004ECE  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13484  004ED0  A4D8               	btfss	status,2,c
 13485  004ED2  D005               	goto	l21631
 13486                           
 13487                           ; BSR set to: 1
 13488                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13489  004ED4  0E04               	movlw	4
 13490  004ED6  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13491  004ED8  B4D8               	btfsc	status,2,c
 13492  004EDA  0012               	return	
 13493  004EDC  D7E6               	goto	u25380
 13494  004EDE                     l21631:
 13495                           
 13496                           ; BSR set to: 1
 13497  004EDE  0100               	movlb	0	; () banked
 13498  004EE0  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13499  004EE2  B4D8               	btfsc	status,2,c
 13500  004EE4  D007               	goto	l21637
 13501                           
 13502                           ; BSR set to: 0
 13503  004EE6  0E02               	movlw	2
 13504  004EE8  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13505  004EEA  A4D8               	btfss	status,2,c
 13506  004EEC  D003               	goto	l21637
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13510  004EEE  EC34  F048         	call	_InitFullAutoTime	;wreg free
 13511                           
 13512                           ;sm_ControlGate_MC50.c: 586:         }
 13513  004EF2  0012               	return	
 13514  004EF4                     l21637:
 13515                           
 13516                           ; BSR set to: 0
 13517  004EF4  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13518  004EF6  D7CE               	goto	L73
 13519  004EF8                     l2725:
 13520  004EF8  B28E               	btfsc	142,1,c	;volatile
 13521  004EFA  D00B               	goto	l21645
 13522  004EFC  0100               	movlb	0	; () banked
 13523  004EFE  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13524  004F00  B4D8               	btfsc	status,2,c
 13525  004F02  D007               	goto	l21645
 13526                           
 13527                           ; BSR set to: 0
 13528                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13529  004F04  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13530  004F06  0D14               	mullw	20
 13531  004F08  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 13532  004F0C  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 13533                           
 13534                           ;sm_ControlGate_MC50.c: 599:     }
 13535  004F10  0012               	return	
 13536  004F12                     l21645:
 13537  004F12  0101               	movlb	1	; () banked
 13538  004F14  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13539  004F16  A4D8               	btfss	status,2,c
 13540  004F18  D00F               	goto	l21655
 13541                           
 13542                           ; BSR set to: 1
 13543  004F1A  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13544  004F1C  A4D8               	btfss	status,2,c
 13545  004F1E  D00C               	goto	l21655
 13546                           
 13547                           ; BSR set to: 1
 13548                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13549  004F20  0E00               	movlw	0
 13550  004F22  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13551                           
 13552                           ; BSR set to: 1
 13553                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13554  004F24  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13555                           
 13556                           ; BSR set to: 1
 13557                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13558  004F28  0100               	movlb	0	; () banked
 13559  004F2A  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13560  004F2C  0D14               	mullw	20
 13561  004F2E  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 13562  004F32  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 13563                           
 13564                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13565  004F36  0012               	return	
 13566  004F38                     l21655:
 13567                           
 13568                           ; BSR set to: 1
 13569  004F38  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13570  004F3A  D005               	goto	u25500
 13571  004F3C  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13572  004F3E  E113               	bnz	l21667
 13573  004F40  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13574  004F42  B0D8               	btfsc	status,0,c
 13575  004F44  D010               	goto	l21667
 13576  004F46                     u25500:
 13577                           
 13578                           ; BSR set to: 1
 13579  004F46  0100               	movlb	0	; () banked
 13580  004F48  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13581  004F4A  A4D8               	btfss	status,2,c
 13582  004F4C  D00C               	goto	l21667
 13583                           
 13584                           ; BSR set to: 0
 13585  004F4E  0101               	movlb	1	; () banked
 13586  004F50  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13587  004F52  A4D8               	btfss	status,2,c
 13588  004F54  D008               	goto	l21667
 13589                           
 13590                           ; BSR set to: 1
 13591  004F56  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13592  004F58  B4D8               	btfsc	status,2,c
 13593  004F5A  D005               	goto	l21667
 13594                           
 13595                           ; BSR set to: 1
 13596                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13597  004F5C  0E00               	movlw	0
 13598  004F5E  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13599                           
 13600                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13601  004F60  0E00               	movlw	0
 13602  004F62  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13603  004F64  D780               	goto	u25310
 13604  004F66                     l21667:
 13605  004F66  0101               	movlb	1	; () banked
 13606  004F68  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13607  004F6A  D005               	goto	u25540
 13608  004F6C  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13609  004F6E  E119               	bnz	l21685
 13610  004F70  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13611  004F72  B0D8               	btfsc	status,0,c
 13612  004F74  D016               	goto	l21685
 13613  004F76                     u25540:
 13614                           
 13615                           ; BSR set to: 1
 13616  004F76  0100               	movlb	0	; () banked
 13617  004F78  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13618  004F7A  B4D8               	btfsc	status,2,c
 13619  004F7C  D012               	goto	l21685
 13620                           
 13621                           ; BSR set to: 0
 13622  004F7E  0101               	movlb	1	; () banked
 13623  004F80  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13624  004F82  B4D8               	btfsc	status,2,c
 13625  004F84  D00E               	goto	l21685
 13626                           
 13627                           ; BSR set to: 1
 13628                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13629  004F86  0E00               	movlw	0
 13630  004F88  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13631                           
 13632                           ; BSR set to: 1
 13633                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13634  004F8A  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13635  004F8C  A4D8               	btfss	status,2,c
 13636  004F8E  D003               	goto	l21681
 13637                           
 13638                           ; BSR set to: 1
 13639                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13640  004F90  0E00               	movlw	0
 13641  004F92  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13642  004F94  D77A               	goto	u25350
 13643  004F96                     l21681:
 13644                           
 13645                           ; BSR set to: 1
 13646                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13647  004F96  EC2D  F047         	call	_CloseOrder	;wreg free
 13648                           
 13649                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13650  004F9A  0E00               	movlw	0
 13651  004F9C  0101               	movlb	1	; () banked
 13652  004F9E  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13653  004FA0  0012               	return	
 13654  004FA2                     l21685:
 13655  004FA2  0101               	movlb	1	; () banked
 13656  004FA4  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13657  004FA6  A4D8               	btfss	status,2,c
 13658  004FA8  0012               	return	
 13659                           
 13660                           ; BSR set to: 1
 13661  004FAA  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13662  004FAC  A4D8               	btfss	status,2,c
 13663  004FAE  0012               	return	
 13664                           
 13665                           ; BSR set to: 1
 13666                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13667  004FB0  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13668  004FB2  D006               	goto	u25600
 13669  004FB4  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13670  004FB6  E103               	bnz	u25601
 13671  004FB8  0E02               	movlw	2
 13672  004FBA  5DA6               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13673  004FBC  B0D8               	btfsc	status,0,c
 13674  004FBE                     u25601:
 13675  004FBE  0012               	return	
 13676  004FC0                     u25600:
 13677                           
 13678                           ; BSR set to: 1
 13679                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13680  004FC0  0E00               	movlw	0
 13681  004FC2  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13682  004FC4  0012               	return		;funcret
 13683  004FC6                     __end_of_actionZone_Opened:
 13684                           	callstack 0
 13685                           
 13686 ;; *************** function _VerifyFollowMe *****************
 13687 ;; Defined at:
 13688 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13689 ;; Parameters:    Size  Location     Type
 13690 ;;  securityClos    1    wreg     enum E10397
 13691 ;; Auto vars:     Size  Location     Type
 13692 ;;  securityClos    1   15[COMRAM] enum E10397
 13693 ;; Return value:  Size  Location     Type
 13694 ;;                  1    wreg      void 
 13695 ;; Registers used:
 13696 ;;		wreg, status,2, status,0
 13697 ;; Tracked objects:
 13698 ;;		On entry : 0/0
 13699 ;;		On exit  : 3E/0
 13700 ;;		Unchanged: 0/0
 13701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13706 ;;Total ram usage:        1 bytes
 13707 ;; Hardware stack levels used: 1
 13708 ;; Hardware stack levels required when called: 4
 13709 ;; This function calls:
 13710 ;;		Nothing
 13711 ;; This function is called by:
 13712 ;;		_actionZone_Opening
 13713 ;;		_actionZone_Opened
 13714 ;; This function uses a non-reentrant model
 13715 ;;
 13716                           
 13717                           	psect	text34
 13718  008F18                     __ptext34:
 13719                           	callstack 0
 13720  008F18                     _VerifyFollowMe:
 13721                           	callstack 24
 13722                           
 13723                           ;incstack = 0
 13724                           ;VerifyFollowMe@securityClose stored from wreg
 13725  008F18  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13726                           
 13727                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13728  008F1A  0100               	movlb	0	; () banked
 13729  008F1C  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13730  008F1E  B4D8               	btfsc	status,2,c
 13731  008F20  0012               	return	
 13732                           
 13733                           ; BSR set to: 0
 13734  008F22  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13735  008F24  A4D8               	btfss	status,2,c
 13736  008F26  0012               	return	
 13737                           
 13738                           ; BSR set to: 0
 13739                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13740  008F28  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13741  008F2A  A4D8               	btfss	status,2,c
 13742  008F2C  0012               	return	
 13743                           
 13744                           ; BSR set to: 0
 13745  008F2E  0101               	movlb	1	; () banked
 13746  008F30  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13747  008F32  A4D8               	btfss	status,2,c
 13748  008F34  0012               	return	
 13749                           
 13750                           ; BSR set to: 1
 13751                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13752  008F36  0E01               	movlw	1
 13753  008F38  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13754  008F3A  0012               	return		;funcret
 13755  008F3C                     __end_of_VerifyFollowMe:
 13756                           	callstack 0
 13757                           
 13758 ;; *************** function _CloseOrder *****************
 13759 ;; Defined at:
 13760 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13761 ;; Parameters:    Size  Location     Type
 13762 ;;		None
 13763 ;; Auto vars:     Size  Location     Type
 13764 ;;		None
 13765 ;; Return value:  Size  Location     Type
 13766 ;;                  1    wreg      void 
 13767 ;; Registers used:
 13768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13769 ;; Tracked objects:
 13770 ;;		On entry : 3E/1
 13771 ;;		On exit  : 3E/0
 13772 ;;		Unchanged: 0/0
 13773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13778 ;;Total ram usage:        0 bytes
 13779 ;; Hardware stack levels used: 1
 13780 ;; Hardware stack levels required when called: 6
 13781 ;; This function calls:
 13782 ;;		_InitSoftStart
 13783 ;;		_sm_send_event
 13784 ;; This function is called by:
 13785 ;;		_actionZone_Opening
 13786 ;;		_actionZone_Opened
 13787 ;; This function uses a non-reentrant model
 13788 ;;
 13789                           
 13790                           	psect	text35
 13791  008E5A                     __ptext35:
 13792                           	callstack 0
 13793  008E5A                     _CloseOrder:
 13794                           	callstack 22
 13795                           
 13796                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13797                           
 13798                           ;incstack = 0
 13799  008E5A  0E03               	movlw	3
 13800  008E5C  0101               	movlb	1	; () banked
 13801  008E5E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13802                           
 13803                           ; BSR set to: 1
 13804                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13805  008E60  0EE2               	movlw	low _controlGate_stateMachine
 13806  008E62  6E12               	movwf	sm_send_event@psm^0,c
 13807  008E64  0E01               	movlw	high _controlGate_stateMachine
 13808  008E66  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13809  008E68  0E00               	movlw	0
 13810  008E6A  6E15               	movwf	(sm_send_event@event+1)^0,c
 13811  008E6C  0E0E               	movlw	14
 13812  008E6E  6E14               	movwf	sm_send_event@event^0,c
 13813  008E70  EC6F  F041         	call	_sm_send_event	;wreg free
 13814                           
 13815                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13816  008E74  0E03               	movlw	3
 13817  008E76  0101               	movlb	1	; () banked
 13818  008E78  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13819                           
 13820                           ; BSR set to: 1
 13821                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13822  008E7A  EC9D  F041         	call	_InitSoftStart	;wreg free
 13823  008E7E  0012               	return		;funcret
 13824  008E80                     __end_of_CloseOrder:
 13825                           	callstack 0
 13826                           
 13827 ;; *************** function _actionZone_Closing *****************
 13828 ;; Defined at:
 13829 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13830 ;; Parameters:    Size  Location     Type
 13831 ;;		None
 13832 ;; Auto vars:     Size  Location     Type
 13833 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13834 ;;  securityClos    1   49[COMRAM] enum E10397
 13835 ;; Return value:  Size  Location     Type
 13836 ;;                  1    wreg      void 
 13837 ;; Registers used:
 13838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13839 ;; Tracked objects:
 13840 ;;		On entry : 3F/0
 13841 ;;		On exit  : 0/0
 13842 ;;		Unchanged: 0/0
 13843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13845 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13848 ;;Total ram usage:        2 bytes
 13849 ;; Hardware stack levels used: 1
 13850 ;; Hardware stack levels required when called: 7
 13851 ;; This function calls:
 13852 ;;		_GetOpenOrder
 13853 ;;		_GetSecurityStateInClosing
 13854 ;;		_InitFullAutoTime
 13855 ;;		_InitWalkAutoTime
 13856 ;;		_OpenFullOrder
 13857 ;;		_OpenWalkOrder
 13858 ;;		_SetSegmentValueIntermitent
 13859 ;;		_StopOrder
 13860 ;;		___lmul
 13861 ;;		_setPositionInvertionInClosing
 13862 ;;		_sm_send_event
 13863 ;; This function is called by:
 13864 ;;		_sm_execute_ControlGate
 13865 ;; This function uses a non-reentrant model
 13866 ;;
 13867                           
 13868                           	psect	text36
 13869  003FF8                     __ptext36:
 13870                           	callstack 0
 13871  003FF8                     _actionZone_Closing:
 13872                           	callstack 22
 13873                           
 13874                           ; BSR set to: 0
 13875                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13876                           
 13877                           ;incstack = 0
 13878  003FF8  ECCC  F028         	call	_GetOpenOrder	;wreg free
 13879  003FFC  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13880                           
 13881                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13882  003FFE  ECBE  F039         	call	_GetSecurityStateInClosing	;wreg free
 13883  004002  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13884                           
 13885                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13886  004004  0E00               	movlw	0
 13887  004006  0101               	movlb	1	; () banked
 13888  004008  6F8D               	movwf	_Abertura_pedonal& (0+255),b
 13889                           
 13890                           ; BSR set to: 1
 13891                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13892  00400A  EC34  F048         	call	_InitFullAutoTime	;wreg free
 13893                           
 13894                           ; BSR set to: 0
 13895                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13896  00400E  0E00               	movlw	0
 13897  004010  0101               	movlb	1	; () banked
 13898  004012  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13899                           
 13900                           ; BSR set to: 1
 13901                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13902  004014  0E03               	movlw	3
 13903  004016  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13904  004018  D00D               	goto	l21709
 13905                           
 13906                           ; BSR set to: 1
 13907                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13908  00401A  0E00               	movlw	0
 13909  00401C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13910  00401E                     l21707:
 13911                           
 13912                           ; BSR set to: 1
 13913                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13914  00401E  0EE2               	movlw	low _controlGate_stateMachine
 13915  004020  6E12               	movwf	sm_send_event@psm^0,c
 13916  004022  0E01               	movlw	high _controlGate_stateMachine
 13917  004024  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13918  004026  0E00               	movlw	0
 13919  004028  6E15               	movwf	(sm_send_event@event+1)^0,c
 13920  00402A  0E10               	movlw	16
 13921  00402C  6E14               	movwf	sm_send_event@event^0,c
 13922  00402E  EC6F  F041         	call	_sm_send_event	;wreg free
 13923                           
 13924                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13925  004032  0012               	return	
 13926  004034                     l21709:
 13927                           
 13928                           ; BSR set to: 1
 13929  004034  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13930  004036  B4D8               	btfsc	status,2,c
 13931  004038  D00C               	goto	u25650
 13932                           
 13933                           ; BSR set to: 1
 13934  00403A  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13935  00403C  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13936  00403E  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13937  004040  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13938  004042  A4D8               	btfss	status,2,c
 13939  004044  D05F               	goto	l21741
 13940                           
 13941                           ; BSR set to: 1
 13942  004046  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13943  004048  A4D8               	btfss	status,2,c
 13944  00404A  D05C               	goto	l21741
 13945                           
 13946                           ; BSR set to: 1
 13947  00404C  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13948  00404E  A4D8               	btfss	status,2,c
 13949  004050  D059               	goto	l21741
 13950  004052                     u25650:
 13951                           
 13952                           ; BSR set to: 1
 13953                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13954  004052  0E02               	movlw	2
 13955  004054  0100               	movlb	0	; () banked
 13956  004056  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13957  004058  A4D8               	btfss	status,2,c
 13958  00405A  D018               	goto	l21721
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13962  00405C  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13963  00405E  6E1D               	movwf	___lmul@multiplier^0,c
 13964  004060  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13965  004062  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13966  004064  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13967  004066  0EB0               	movlw	176
 13968  004068  6E21               	movwf	___lmul@multiplicand^0,c
 13969  00406A  0E04               	movlw	4
 13970  00406C  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13971  00406E  0E00               	movlw	0
 13972  004070  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13973  004072  0E00               	movlw	0
 13974  004074  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13975  004076  EC7D  F042         	call	___lmul	;wreg free
 13976  00407A  C01D  F1BA         	movff	?___lmul,_ts_system+32	;volatile
 13977  00407E  C01E  F1BB         	movff	?___lmul+1,_ts_system+33	;volatile
 13978  004082  C01F  F1BC         	movff	?___lmul+2,_ts_system+34	;volatile
 13979  004086  C020  F1BD         	movff	?___lmul+3,_ts_system+35	;volatile
 13980                           
 13981                           ;sm_ControlGate_MC50.c: 668:         }
 13982  00408A  D009               	goto	l2768
 13983  00408C                     l21721:
 13984                           
 13985                           ; BSR set to: 0
 13986                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13987  00408C  0E00               	movlw	0
 13988  00408E  0101               	movlb	1	; () banked
 13989  004090  6FBA               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13990  004092  0E00               	movlw	0
 13991  004094  6FBB               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13992  004096  0E00               	movlw	0
 13993  004098  6FBC               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13994  00409A  0E00               	movlw	0
 13995  00409C  6FBD               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13996  00409E                     l2768:
 13997                           
 13998                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13999  00409E  0E00               	movlw	0
 14000  0040A0  0101               	movlb	1	; () banked
 14001  0040A2  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 14002                           
 14003                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 14004  0040A4  0E01               	movlw	1
 14005  0040A6  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 14006                           
 14007                           ; BSR set to: 1
 14008                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 14009  0040A8  0E01               	movlw	1
 14010  0040AA  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 14011  0040AC  0E00               	movlw	0
 14012  0040AE  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 14013  0040B0  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 14014  0040B2  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 14015                           
 14016                           ; BSR set to: 1
 14017                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 14018  0040B4  0E00               	movlw	0
 14019  0040B6  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 14020                           
 14021                           ; BSR set to: 1
 14022                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 14023  0040B8  0E00               	movlw	0
 14024  0040BA  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 14025  0040BC  0E00               	movlw	0
 14026  0040BE  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 14027  0040C0  0E00               	movlw	0
 14028  0040C2  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 14029  0040C4  0E00               	movlw	0
 14030  0040C6  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 14031                           
 14032                           ; BSR set to: 1
 14033                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 14034  0040C8  0E00               	movlw	0
 14035  0040CA  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 14036                           
 14037                           ; BSR set to: 1
 14038                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 14039  0040CC  0E00               	movlw	0
 14040  0040CE  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 14041                           
 14042                           ; BSR set to: 1
 14043                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 14044  0040D0  0E00               	movlw	0
 14045  0040D2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14046                           
 14047                           ; BSR set to: 1
 14048                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 14049  0040D4  0E00               	movlw	0
 14050  0040D6  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14051  0040D8  0E28               	movlw	40
 14052  0040DA  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14053                           
 14054                           ; BSR set to: 1
 14055                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 14056  0040DC  0E0C               	movlw	12
 14057  0040DE  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14058  0040E0  0E00               	movlw	0
 14059  0040E2  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14060  0040E4  0E04               	movlw	4
 14061  0040E6  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14062  0040E8  0E0F               	movlw	15
 14063  0040EA  ECE7  F045         	call	_SetSegmentValueIntermitent
 14064                           
 14065                           ; BSR set to: 1
 14066                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 14067  0040EE  0EE2               	movlw	low _controlGate_stateMachine
 14068  0040F0  6E12               	movwf	sm_send_event@psm^0,c
 14069  0040F2  0E01               	movlw	high _controlGate_stateMachine
 14070  0040F4  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14071  0040F6  0E00               	movlw	0
 14072  0040F8  6E15               	movwf	(sm_send_event@event+1)^0,c
 14073  0040FA  0E0F               	movlw	15
 14074  0040FC  6E14               	movwf	sm_send_event@event^0,c
 14075  0040FE  EC6F  F041         	call	_sm_send_event	;wreg free
 14076                           
 14077                           ;sm_ControlGate_MC50.c: 691:     }
 14078  004102  0012               	return	
 14079  004104                     l21741:
 14080                           
 14081                           ; BSR set to: 1
 14082  004104  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14083  004106  B4D8               	btfsc	status,2,c
 14084  004108  D011               	goto	u25700
 14085                           
 14086                           ; BSR set to: 1
 14087  00410A  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14088  00410C  D021               	goto	l21761
 14089  00410E  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14090  004110  E103               	bnz	u25680
 14091  004112  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14092  004114  A0D8               	btfss	status,0,c
 14093  004116  D01C               	goto	l21761
 14094  004118                     u25680:
 14095                           
 14096                           ; BSR set to: 1
 14097  004118  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 14098  00411A  A4D8               	btfss	status,2,c
 14099  00411C  D019               	goto	l21761
 14100                           
 14101                           ; BSR set to: 1
 14102  00411E  BFCB               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 14103  004120  D005               	goto	u25700
 14104  004122  51CB               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 14105  004124  E115               	bnz	l21761
 14106  004126  05CA               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 14107  004128  B0D8               	btfsc	status,0,c
 14108  00412A  D012               	goto	l21761
 14109  00412C                     u25700:
 14110                           
 14111                           ; BSR set to: 1
 14112  00412C  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 14113  00412E  A4D8               	btfss	status,2,c
 14114  004130  D00F               	goto	l21761
 14115                           
 14116                           ; BSR set to: 1
 14117                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 14118  004132  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14119  004134  A4D8               	btfss	status,2,c
 14120                           
 14121                           ; BSR set to: 1
 14122                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 14123  004136  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14124                           
 14125                           ; BSR set to: 1
 14126                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 14127                           
 14128                           ;sm_ControlGate_MC50.c: 696:         }
 14129  004138  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14130                           
 14131                           ; BSR set to: 1
 14132                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 14133  00413A  0E01               	movlw	1
 14134  00413C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14135                           
 14136                           ; BSR set to: 1
 14137                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 14138  00413E  0E00               	movlw	0
 14139  004140  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14140  004142  0E0A               	movlw	10
 14141  004144  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14142                           
 14143                           ; BSR set to: 1
 14144                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 14145  004146  0E00               	movlw	0
 14146  004148  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
 14147  00414A  0E1E               	movlw	30
 14148  00414C  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
 14149                           
 14150                           ;sm_ControlGate_MC50.c: 702:     }
 14151  00414E  0012               	return	
 14152  004150                     l21761:
 14153                           
 14154                           ; BSR set to: 1
 14155  004150  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14156  004152  D02E               	goto	l21791
 14157  004154  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14158  004156  E103               	bnz	u25730
 14159  004158  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14160  00415A  A0D8               	btfss	status,0,c
 14161  00415C  D029               	goto	l21791
 14162  00415E                     u25730:
 14163                           
 14164                           ; BSR set to: 1
 14165  00415E  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14166  004160  A4D8               	btfss	status,2,c
 14167  004162  D026               	goto	l21791
 14168                           
 14169                           ; BSR set to: 1
 14170                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 14171  004164  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 14172  004166  A4D8               	btfss	status,2,c
 14173  004168  D005               	goto	l21773
 14174  00416A                     u25750:
 14175                           
 14176                           ; BSR set to: 1
 14177                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 14178  00416A  0E00               	movlw	0
 14179  00416C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14180                           
 14181                           ; BSR set to: 1
 14182                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 14183  00416E  EC73  F032         	call	_setPositionInvertionInClosing	;wreg free
 14184  004172  D755               	goto	l21707
 14185  004174                     l21773:
 14186                           
 14187                           ; BSR set to: 1
 14188  004174  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14189  004176  D005               	goto	u25760
 14190  004178  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14191  00417A  E117               	bnz	l21789
 14192  00417C  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14193  00417E  B0D8               	btfsc	status,0,c
 14194  004180  D014               	goto	l21789
 14195  004182                     u25760:
 14196                           
 14197                           ; BSR set to: 1
 14198                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 14199  004182  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14200  004184  A4D8               	btfss	status,2,c
 14201  004186  D003               	goto	l21779
 14202                           
 14203                           ; BSR set to: 1
 14204                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 14205  004188  EC04  F040         	call	_OpenWalkOrder	;wreg free
 14206                           
 14207                           ;sm_ControlGate_MC50.c: 713:             }
 14208  00418C  D004               	goto	l21783
 14209  00418E                     l21779:
 14210                           
 14211                           ; BSR set to: 1
 14212                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 14213  00418E  EC40  F047         	call	_OpenFullOrder	;wreg free
 14214                           
 14215                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 14216  004192  EC73  F032         	call	_setPositionInvertionInClosing	;wreg free
 14217  004196                     l21783:
 14218                           
 14219                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 14220  004196  0E00               	movlw	0
 14221  004198  0101               	movlb	1	; () banked
 14222  00419A  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14223                           
 14224                           ; BSR set to: 1
 14225                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 14226  00419C  0E01               	movlw	1
 14227  00419E  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 14228                           
 14229                           ; BSR set to: 1
 14230                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 14231  0041A0  0E00               	movlw	0
 14232  0041A2  6FCB               	movwf	(_ts_system+49)& (0+255),b	;volatile
 14233  0041A4  0E14               	movlw	20
 14234  0041A6  6FCA               	movwf	(_ts_system+48)& (0+255),b	;volatile
 14235                           
 14236                           ;sm_ControlGate_MC50.c: 726:         } else
 14237  0041A8  0012               	return	
 14238  0041AA                     l21789:
 14239                           
 14240                           ; BSR set to: 1
 14241                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 14242  0041AA  0E00               	movlw	0
 14243  0041AC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14244  0041AE  0012               	return	
 14245  0041B0                     l21791:
 14246                           
 14247                           ; BSR set to: 1
 14248  0041B0  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14249  0041B2  A4D8               	btfss	status,2,c
 14250  0041B4  D017               	goto	l21807
 14251                           
 14252                           ; BSR set to: 1
 14253                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 14254  0041B6  0E00               	movlw	0
 14255  0041B8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14256                           
 14257                           ; BSR set to: 1
 14258                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 14259  0041BA  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14260  0041BC  D005               	goto	u25790
 14261  0041BE  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14262  0041C0  E160               	bnz	l2805
 14263  0041C2  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14264  0041C4  B0D8               	btfsc	status,0,c
 14265  0041C6  0012               	return	
 14266  0041C8                     u25790:
 14267                           
 14268                           ; BSR set to: 1
 14269                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14270  0041C8  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14271  0041CA  A4D8               	btfss	status,2,c
 14272  0041CC  D003               	goto	l21801
 14273                           
 14274                           ; BSR set to: 1
 14275                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14276  0041CE  EC04  F040         	call	_OpenWalkOrder	;wreg free
 14277                           
 14278                           ;sm_ControlGate_MC50.c: 741:             }
 14279  0041D2  D004               	goto	l21805
 14280  0041D4                     l21801:
 14281                           
 14282                           ; BSR set to: 1
 14283                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14284  0041D4  EC40  F047         	call	_OpenFullOrder	;wreg free
 14285                           
 14286                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14287  0041D8  EC73  F032         	call	_setPositionInvertionInClosing	;wreg free
 14288  0041DC                     l21805:
 14289                           
 14290                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14291  0041DC  0E00               	movlw	0
 14292  0041DE  0101               	movlb	1	; () banked
 14293  0041E0  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14294  0041E2  0012               	return	
 14295  0041E4                     l21807:
 14296                           
 14297                           ; BSR set to: 1
 14298  0041E4  5100               	movf	_var_sys& (0+255),w,b	;volatile
 14299  0041E6  A4D8               	btfss	status,2,c
 14300  0041E8  D00B               	goto	l21823
 14301                           
 14302                           ; BSR set to: 1
 14303                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14304  0041EA  0E02               	movlw	2
 14305  0041EC  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14306  0041EE  B4D8               	btfsc	status,2,c
 14307  0041F0  D002               	goto	l21819
 14308                           
 14309                           ; BSR set to: 1
 14310                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14311  0041F2  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14312  0041F4  D7BA               	goto	u25750
 14313  0041F6                     l21819:
 14314                           
 14315                           ; BSR set to: 1
 14316                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14317  0041F6  EC73  F032         	call	_setPositionInvertionInClosing	;wreg free
 14318  0041FA                     l21821:
 14319                           
 14320                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14321  0041FA  ECE2  F047         	call	_StopOrder	;wreg free
 14322  0041FE  0012               	return	
 14323  004200                     l21823:
 14324                           
 14325                           ; BSR set to: 1
 14326  004200  BFCD               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14327  004202  D005               	goto	u25830
 14328  004204  51CD               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14329  004206  E10B               	bnz	l21833
 14330  004208  05CC               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14331  00420A  B0D8               	btfsc	status,0,c
 14332  00420C  D008               	goto	l21833
 14333  00420E                     u25830:
 14334                           
 14335                           ; BSR set to: 1
 14336  00420E  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14337  004210  A4D8               	btfss	status,2,c
 14338  004212  D005               	goto	l21833
 14339                           
 14340                           ; BSR set to: 1
 14341                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14342  004214  EC73  F032         	call	_setPositionInvertionInClosing	;wreg free
 14343                           
 14344                           ; BSR set to: 1
 14345                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14346  004218  0E00               	movlw	0
 14347  00421A  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14348  00421C  D7EE               	goto	l21821
 14349  00421E                     l21833:
 14350                           
 14351                           ; BSR set to: 1
 14352  00421E  0100               	movlb	0	; () banked
 14353  004220  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14354  004222  B4D8               	btfsc	status,2,c
 14355  004224  D004               	goto	u25860
 14356                           
 14357                           ; BSR set to: 0
 14358  004226  0E02               	movlw	2
 14359  004228  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14360  00422A  A4D8               	btfss	status,2,c
 14361  00422C  D005               	goto	l21841
 14362  00422E                     u25860:
 14363                           
 14364                           ; BSR set to: 0
 14365                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14366  00422E  0E04               	movlw	4
 14367  004230  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14368  004232  B4D8               	btfsc	status,2,c
 14369  004234  0012               	return	
 14370  004236  D7E1               	goto	l21821
 14371  004238                     l21841:
 14372                           
 14373                           ; BSR set to: 0
 14374  004238  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14375  00423A  B4D8               	btfsc	status,2,c
 14376  00423C  0012               	return	
 14377                           
 14378                           ; BSR set to: 0
 14379                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14380  00423E  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14381  004240  A4D8               	btfss	status,2,c
 14382  004242  D013               	goto	l21857
 14383                           
 14384                           ; BSR set to: 0
 14385                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14386  004244  EC73  F032         	call	_setPositionInvertionInClosing	;wreg free
 14387                           
 14388                           ; BSR set to: 1
 14389                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14390  004248  ECE2  F047         	call	_StopOrder	;wreg free
 14391                           
 14392                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14393  00424C  0E02               	movlw	2
 14394  00424E  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14395  004250  A4D8               	btfss	status,2,c
 14396  004252  0012               	return	
 14397  004254  0E02               	movlw	2
 14398  004256  0100               	movlb	0	; () banked
 14399  004258  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14400  00425A  B4D8               	btfsc	status,2,c
 14401  00425C  0012               	return	
 14402                           
 14403                           ; BSR set to: 0
 14404                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14405  00425E  ECB9  F048         	call	_InitWalkAutoTime	;wreg free
 14406                           
 14407                           ; BSR set to: 0
 14408                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14409  004262  0E01               	movlw	1
 14410  004264  0101               	movlb	1	; () banked
 14411  004266  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14412  004268  0012               	return	
 14413  00426A                     l21857:
 14414                           
 14415                           ; BSR set to: 0
 14416                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14417  00426A  0E04               	movlw	4
 14418  00426C  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14419  00426E  B4D8               	btfsc	status,2,c
 14420  004270  D7C4               	goto	l21821
 14421                           
 14422                           ; BSR set to: 0
 14423                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14424  004272  0E01               	movlw	1
 14425  004274  0101               	movlb	1	; () banked
 14426  004276  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14427                           
 14428                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14429  004278  0E00               	movlw	0
 14430  00427A  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14431  00427C  0E0A               	movlw	10
 14432  00427E  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14433                           
 14434                           ;sm_ControlGate_MC50.c: 806:             }
 14435  004280  0012               	return	
 14436  004282                     l2805:
 14437  004282  0012               	return		;funcret
 14438  004284                     __end_of_actionZone_Closing:
 14439                           	callstack 0
 14440                           
 14441 ;; *************** function _setPositionInvertionInClosing *****************
 14442 ;; Defined at:
 14443 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14444 ;; Parameters:    Size  Location     Type
 14445 ;;		None
 14446 ;; Auto vars:     Size  Location     Type
 14447 ;;		None
 14448 ;; Return value:  Size  Location     Type
 14449 ;;                  1    wreg      void 
 14450 ;; Registers used:
 14451 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14452 ;; Tracked objects:
 14453 ;;		On entry : 3E/1
 14454 ;;		On exit  : 3F/1
 14455 ;;		Unchanged: 0/0
 14456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14459 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14460 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14461 ;;Total ram usage:       12 bytes
 14462 ;; Hardware stack levels used: 1
 14463 ;; Hardware stack levels required when called: 6
 14464 ;; This function calls:
 14465 ;;		_getTimeDecelaration
 14466 ;; This function is called by:
 14467 ;;		_actionZone_Opening
 14468 ;;		_actionZone_Closing
 14469 ;; This function uses a non-reentrant model
 14470 ;;
 14471                           
 14472                           	psect	text37
 14473  0064E6                     __ptext37:
 14474                           	callstack 0
 14475  0064E6                     _setPositionInvertionInClosing:
 14476                           	callstack 22
 14477                           
 14478                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14479                           
 14480                           ;incstack = 0
 14481  0064E6  0E02               	movlw	2
 14482  0064E8  0100               	movlb	0	; () banked
 14483  0064EA  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14484  0064EC  B4D8               	btfsc	status,2,c
 14485  0064EE  D007               	goto	l20495
 14486                           
 14487                           ; BSR set to: 0
 14488                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14489  0064F0  0E02               	movlw	2
 14490  0064F2  0101               	movlb	1	; () banked
 14491  0064F4  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14492  0064F6  0E00               	movlw	0
 14493  0064F8  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14494  0064FA  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14495  0064FC  D008               	goto	L74
 14496  0064FE                     l20495:
 14497                           
 14498                           ; BSR set to: 0
 14499                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14500  0064FE  0EFF               	movlw	255
 14501  006500  0101               	movlb	1	; () banked
 14502  006502  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14503  006504  0EFF               	movlw	255
 14504  006506  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14505  006508  0EFF               	movlw	255
 14506  00650A  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14507  00650C  0EFF               	movlw	255
 14508  00650E                     L74:
 14509  00650E  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14510                           
 14511                           ; BSR set to: 1
 14512                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14513  006510  0E01               	movlw	1
 14514  006512  ECA6  F036         	call	_getTimeDecelaration
 14515  006516  0101               	movlb	1	; () banked
 14516  006518  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14517  00651A  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14518  00651C  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14519  00651E  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14520  006520  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14521  006522  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14522  006524  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14523  006526  0A80               	xorlw	128
 14524  006528  0100               	movlb	0	; () banked
 14525  00652A  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14526  00652C  0101               	movlb	1	; () banked
 14527  00652E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14528  006530  0A80               	xorlw	128
 14529  006532  0100               	movlb	0	; () banked
 14530  006534  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14531  006536  B0D8               	btfsc	status,0,c
 14532  006538  D008               	goto	l20503
 14533                           
 14534                           ; BSR set to: 0
 14535  00653A  0E02               	movlw	2
 14536  00653C  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14537  00653E  B4D8               	btfsc	status,2,c
 14538  006540  D004               	goto	l20503
 14539                           
 14540                           ; BSR set to: 0
 14541                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14542  006542  0E01               	movlw	1
 14543  006544  ECA6  F036         	call	_getTimeDecelaration
 14544  006548  D01A               	goto	L75
 14545  00654A                     l20503:
 14546                           
 14547                           ; BSR set to: 0
 14548  00654A  0E03               	movlw	3
 14549  00654C  ECA6  F036         	call	_getTimeDecelaration
 14550  006550  5029               	movf	?_getTimeDecelaration^0,w,c
 14551  006552  0101               	movlb	1	; () banked
 14552  006554  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14553  006556  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14554  006558  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14555  00655A  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14556  00655C  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14557  00655E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14558  006560  0A80               	xorlw	128
 14559  006562  0100               	movlb	0	; () banked
 14560  006564  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14561  006566  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14562  006568  0A80               	xorlw	128
 14563  00656A  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14564  00656C  B0D8               	btfsc	status,0,c
 14565  00656E  D00F               	goto	l20509
 14566                           
 14567                           ; BSR set to: 0
 14568  006570  0E02               	movlw	2
 14569  006572  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14570  006574  B4D8               	btfsc	status,2,c
 14571  006576  D00B               	goto	l20509
 14572                           
 14573                           ; BSR set to: 0
 14574                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14575  006578  0E03               	movlw	3
 14576  00657A  ECA6  F036         	call	_getTimeDecelaration
 14577  00657E                     L75:
 14578  00657E  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14579  006582  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14580  006586  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14581  00658A  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14582  00658E                     l20509:
 14583                           
 14584                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14585  00658E  0100               	movlb	0	; () banked
 14586  006590  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14587  006592  0D0A               	mullw	10
 14588  006594  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14589  006598  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14590  00659C  0E00               	movlw	0
 14591  00659E  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14592  0065A0  0EFF               	movlw	255
 14593  0065A2  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14594  0065A4  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14595  0065A6  0101               	movlb	1	; () banked
 14596  0065A8  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14597  0065AA  0100               	movlb	0	; () banked
 14598  0065AC  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14599  0065AE  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14600  0065B0  0101               	movlb	1	; () banked
 14601  0065B2  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14602  0065B4  0100               	movlb	0	; () banked
 14603  0065B6  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14604  0065B8  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14605  0065BA  0101               	movlb	1	; () banked
 14606  0065BC  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14607  0065BE  0100               	movlb	0	; () banked
 14608  0065C0  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14609  0065C2  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14610  0065C4  0101               	movlb	1	; () banked
 14611  0065C6  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14612  0065C8  0100               	movlb	0	; () banked
 14613  0065CA  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14614  0065CC  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14615  0065CE  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14616  0065D0  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14617  0065D2  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14618  0065D4  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14619  0065D6  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14620  0065D8  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14621  0065DA  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14622  0065DC  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14623  0065DE  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14624  0065E0  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14625  0065E2  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14626  0065E4  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14627  0065E6  0EC8               	movlw	200
 14628  0065E8  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14629  0065EA  0101               	movlb	1	; () banked
 14630  0065EC  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14631  0065EE  0E00               	movlw	0
 14632  0065F0  0100               	movlb	0	; () banked
 14633  0065F2  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14634  0065F4  0101               	movlb	1	; () banked
 14635  0065F6  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14636  0065F8  0E00               	movlw	0
 14637  0065FA  0100               	movlb	0	; () banked
 14638  0065FC  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14639  0065FE  0101               	movlb	1	; () banked
 14640  006600  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14641  006602  0E00               	movlw	0
 14642  006604  0100               	movlb	0	; () banked
 14643  006606  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14644  006608  0101               	movlb	1	; () banked
 14645  00660A  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14646                           
 14647                           ; BSR set to: 1
 14648  00660C  0012               	return		;funcret
 14649  00660E                     __end_of_setPositionInvertionInClosing:
 14650                           	callstack 0
 14651                           
 14652 ;; *************** function _getTimeDecelaration *****************
 14653 ;; Defined at:
 14654 ;;		line 641 in file "outputs_MC50.c"
 14655 ;; Parameters:    Size  Location     Type
 14656 ;;  state           1    wreg     enum E10381
 14657 ;; Auto vars:     Size  Location     Type
 14658 ;;  state           1   48[COMRAM] enum E10381
 14659 ;; Return value:  Size  Location     Type
 14660 ;;                  4   40[COMRAM] long 
 14661 ;; Registers used:
 14662 ;;		wreg, status,2, status,0, cstack
 14663 ;; Tracked objects:
 14664 ;;		On entry : 3E/1
 14665 ;;		On exit  : 0/0
 14666 ;;		Unchanged: 0/0
 14667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14668 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14671 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14672 ;;Total ram usage:        9 bytes
 14673 ;; Hardware stack levels used: 1
 14674 ;; Hardware stack levels required when called: 5
 14675 ;; This function calls:
 14676 ;;		___lmul
 14677 ;; This function is called by:
 14678 ;;		_getStateOpenPosition
 14679 ;;		_controlVelocity
 14680 ;;		_setPositionInvertionInClosing
 14681 ;;		_setPositionInvertionInOpening
 14682 ;; This function uses a non-reentrant model
 14683 ;;
 14684                           
 14685                           	psect	text38
 14686  006D4C                     __ptext38:
 14687                           	callstack 0
 14688  006D4C                     _getTimeDecelaration:
 14689                           	callstack 22
 14690                           
 14691                           ; BSR set to: 1
 14692                           ;incstack = 0
 14693                           ;getTimeDecelaration@state stored from wreg
 14694  006D4C  6E31               	movwf	getTimeDecelaration@state^0,c
 14695                           
 14696                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14697  006D4E  0E03               	movlw	3
 14698  006D50  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14699  006D52  A4D8               	btfss	status,2,c
 14700  006D54  D033               	goto	l19531
 14701                           
 14702                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14703  006D56  0E02               	movlw	2
 14704  006D58  0100               	movlb	0	; () banked
 14705  006D5A  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14706  006D5C  B4D8               	btfsc	status,2,c
 14707  006D5E  D018               	goto	l19527
 14708                           
 14709                           ; BSR set to: 0
 14710                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14711  006D60  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14712  006D62  6E1D               	movwf	___lmul@multiplier^0,c
 14713  006D64  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14714  006D66  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14715  006D68  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14716  006D6A  0E0A               	movlw	10
 14717  006D6C  6E21               	movwf	___lmul@multiplicand^0,c
 14718  006D6E  0E00               	movlw	0
 14719  006D70  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14720  006D72  0E00               	movlw	0
 14721  006D74  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14722  006D76  0E00               	movlw	0
 14723  006D78  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14724  006D7A  EC7D  F042         	call	___lmul	;wreg free
 14725  006D7E  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14726  006D82  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14727  006D86  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14728  006D8A  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14729  006D8E  0012               	return	
 14730  006D90                     l19527:
 14731                           
 14732                           ; BSR set to: 0
 14733  006D90  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14734  006D94  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14735  006D96  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14736  006D98  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14737  006D9A  0E02               	movlw	2
 14738  006D9C                     u22385:
 14739  006D9C  90D8               	bcf	status,0,c
 14740  006D9E  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14741  006DA0  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14742  006DA2  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14743  006DA4  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14744  006DA6  2EE8               	decfsz	wreg,f,c
 14745  006DA8  D7F9               	goto	u22385
 14746  006DAA  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14747  006DAE  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14748  006DB2  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14749  006DB6  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14750  006DBA  0012               	return	
 14751  006DBC                     l19531:
 14752                           
 14753                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14754  006DBC  0E02               	movlw	2
 14755  006DBE  0100               	movlb	0	; () banked
 14756  006DC0  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14757  006DC2  B4D8               	btfsc	status,2,c
 14758  006DC4  D01D               	goto	l19539
 14759                           
 14760                           ; BSR set to: 0
 14761                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14762  006DC6  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14763  006DC8  6E1D               	movwf	___lmul@multiplier^0,c
 14764  006DCA  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14765  006DCC  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14766  006DCE  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14767  006DD0  0EF6               	movlw	246
 14768  006DD2  6E21               	movwf	___lmul@multiplicand^0,c
 14769  006DD4  0EFF               	movlw	255
 14770  006DD6  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14771  006DD8  0EFF               	movlw	255
 14772  006DDA  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14773  006DDC  0EFF               	movlw	255
 14774  006DDE  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14775  006DE0  EC7D  F042         	call	___lmul	;wreg free
 14776  006DE4  0100               	movlb	0	; () banked
 14777  006DE6  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14778  006DE8  241D               	addwf	?___lmul^0,w,c
 14779  006DEA  6E29               	movwf	?_getTimeDecelaration^0,c
 14780  006DEC  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14781  006DEE  201E               	addwfc	(?___lmul+1)^0,w,c
 14782  006DF0  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14783  006DF2  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14784  006DF4  201F               	addwfc	(?___lmul+2)^0,w,c
 14785  006DF6  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14786  006DF8  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14787  006DFA  2020               	addwfc	(?___lmul+3)^0,w,c
 14788  006DFC  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14789  006DFE  0012               	return	
 14790  006E00                     l19539:
 14791                           
 14792                           ; BSR set to: 0
 14793  006E00  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14794  006E04  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14795  006E06  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14796  006E08  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14797  006E0A  0E02               	movlw	2
 14798  006E0C                     u22405:
 14799  006E0C  90D8               	bcf	status,0,c
 14800  006E0E  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14801  006E10  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14802  006E12  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14803  006E14  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14804  006E16  2EE8               	decfsz	wreg,f,c
 14805  006E18  D7F9               	goto	u22405
 14806  006E1A  502D               	movf	??_getTimeDecelaration^0,w,c
 14807  006E1C  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14808  006E1E  6E29               	movwf	?_getTimeDecelaration^0,c
 14809  006E20  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14810  006E22  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14811  006E24  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14812  006E26  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14813  006E28  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14814  006E2A  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14815  006E2C  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14816  006E2E  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14817  006E30  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14818  006E32  0012               	return		;funcret
 14819  006E34                     __end_of_getTimeDecelaration:
 14820                           	callstack 0
 14821                           
 14822 ;; *************** function ___lmul *****************
 14823 ;; Defined at:
 14824 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14825 ;; Parameters:    Size  Location     Type
 14826 ;;  multiplier      4   28[COMRAM] unsigned long 
 14827 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14828 ;; Auto vars:     Size  Location     Type
 14829 ;;  product         4   36[COMRAM] unsigned long 
 14830 ;; Return value:  Size  Location     Type
 14831 ;;                  4   28[COMRAM] unsigned long 
 14832 ;; Registers used:
 14833 ;;		wreg, status,2, status,0
 14834 ;; Tracked objects:
 14835 ;;		On entry : 0/1
 14836 ;;		On exit  : 0/0
 14837 ;;		Unchanged: 0/0
 14838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14839 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14840 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14842 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14843 ;;Total ram usage:       12 bytes
 14844 ;; Hardware stack levels used: 1
 14845 ;; Hardware stack levels required when called: 4
 14846 ;; This function calls:
 14847 ;;		Nothing
 14848 ;; This function is called by:
 14849 ;;		_getStateOpenPosition
 14850 ;;		_getTimeDecelaration
 14851 ;;		_actionZone_Closing
 14852 ;;		_sm_execute_menuConfiguration
 14853 ;; This function uses a non-reentrant model
 14854 ;;
 14855                           
 14856                           	psect	text39
 14857  0084FA                     __ptext39:
 14858                           	callstack 0
 14859  0084FA                     ___lmul:
 14860                           	callstack 24
 14861                           
 14862                           ;incstack = 0
 14863  0084FA  0E00               	movlw	0
 14864  0084FC  6E25               	movwf	___lmul@product^0,c
 14865  0084FE  0E00               	movlw	0
 14866  008500  6E26               	movwf	(___lmul@product+1)^0,c
 14867  008502  0E00               	movlw	0
 14868  008504  6E27               	movwf	(___lmul@product+2)^0,c
 14869  008506  0E00               	movlw	0
 14870  008508  6E28               	movwf	(___lmul@product+3)^0,c
 14871  00850A                     l19417:
 14872  00850A  A01D               	btfss	___lmul@multiplier^0,0,c
 14873  00850C  D008               	goto	l19421
 14874  00850E  5021               	movf	___lmul@multiplicand^0,w,c
 14875  008510  2625               	addwf	___lmul@product^0,f,c
 14876  008512  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14877  008514  2226               	addwfc	(___lmul@product+1)^0,f,c
 14878  008516  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14879  008518  2227               	addwfc	(___lmul@product+2)^0,f,c
 14880  00851A  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14881  00851C  2228               	addwfc	(___lmul@product+3)^0,f,c
 14882  00851E                     l19421:
 14883  00851E  90D8               	bcf	status,0,c
 14884  008520  3621               	rlcf	___lmul@multiplicand^0,f,c
 14885  008522  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14886  008524  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14887  008526  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14888  008528  90D8               	bcf	status,0,c
 14889  00852A  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14890  00852C  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14891  00852E  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14892  008530  321D               	rrcf	___lmul@multiplier^0,f,c
 14893  008532  501D               	movf	___lmul@multiplier^0,w,c
 14894  008534  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14895  008536  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14896  008538  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14897  00853A  A4D8               	btfss	status,2,c
 14898  00853C  D7E6               	goto	l19417
 14899  00853E  C025  F01D         	movff	___lmul@product,?___lmul
 14900  008542  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14901  008546  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14902  00854A  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14903  00854E  0012               	return		;funcret
 14904  008550                     __end_of___lmul:
 14905                           	callstack 0
 14906                           
 14907 ;; *************** function _StopOrder *****************
 14908 ;; Defined at:
 14909 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14910 ;; Parameters:    Size  Location     Type
 14911 ;;		None
 14912 ;; Auto vars:     Size  Location     Type
 14913 ;;		None
 14914 ;; Return value:  Size  Location     Type
 14915 ;;                  1    wreg      void 
 14916 ;; Registers used:
 14917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14918 ;; Tracked objects:
 14919 ;;		On entry : 3E/1
 14920 ;;		On exit  : 0/0
 14921 ;;		Unchanged: 0/0
 14922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14927 ;;Total ram usage:        0 bytes
 14928 ;; Hardware stack levels used: 1
 14929 ;; Hardware stack levels required when called: 6
 14930 ;; This function calls:
 14931 ;;		_sm_send_event
 14932 ;; This function is called by:
 14933 ;;		_actionZone_Opening
 14934 ;;		_actionZone_Closing
 14935 ;; This function uses a non-reentrant model
 14936 ;;
 14937                           
 14938                           	psect	text40
 14939  008FC4                     __ptext40:
 14940                           	callstack 0
 14941  008FC4                     _StopOrder:
 14942                           	callstack 22
 14943                           
 14944                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14945                           
 14946                           ;incstack = 0
 14947  008FC4  0E00               	movlw	0
 14948  008FC6  0101               	movlb	1	; () banked
 14949  008FC8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14950                           
 14951                           ; BSR set to: 1
 14952                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14953  008FCA  0EE2               	movlw	low _controlGate_stateMachine
 14954  008FCC  6E12               	movwf	sm_send_event@psm^0,c
 14955  008FCE  0E01               	movlw	high _controlGate_stateMachine
 14956  008FD0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14957  008FD2  0E00               	movlw	0
 14958  008FD4  6E15               	movwf	(sm_send_event@event+1)^0,c
 14959  008FD6  0E0D               	movlw	13
 14960  008FD8  6E14               	movwf	sm_send_event@event^0,c
 14961  008FDA  EC6F  F041         	call	_sm_send_event	;wreg free
 14962  008FDE  0012               	return		;funcret
 14963  008FE0                     __end_of_StopOrder:
 14964                           	callstack 0
 14965                           
 14966 ;; *************** function _GetSecurityStateInClosing *****************
 14967 ;; Defined at:
 14968 ;;		line 776 in file "inputs_MC50.c"
 14969 ;; Parameters:    Size  Location     Type
 14970 ;;		None
 14971 ;; Auto vars:     Size  Location     Type
 14972 ;;		None
 14973 ;; Return value:  Size  Location     Type
 14974 ;;                  1    wreg      enum E10564
 14975 ;; Registers used:
 14976 ;;		wreg, status,2, status,0, cstack
 14977 ;; Tracked objects:
 14978 ;;		On entry : 0/0
 14979 ;;		On exit  : 3E/0
 14980 ;;		Unchanged: 0/0
 14981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14986 ;;Total ram usage:        0 bytes
 14987 ;; Hardware stack levels used: 1
 14988 ;; Hardware stack levels required when called: 5
 14989 ;; This function calls:
 14990 ;;		_SetSegmentValueIntermitent
 14991 ;; This function is called by:
 14992 ;;		_actionZone_Opening
 14993 ;;		_actionZone_Opened
 14994 ;;		_actionZone_Closing
 14995 ;; This function uses a non-reentrant model
 14996 ;;
 14997                           
 14998                           	psect	text41
 14999  00737C                     __ptext41:
 15000                           	callstack 0
 15001  00737C                     _GetSecurityStateInClosing:
 15002                           	callstack 23
 15003                           
 15004                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 15005                           
 15006                           ;incstack = 0
 15007  00737C  0100               	movlb	0	; () banked
 15008  00737E  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15009  007380  A4D8               	btfss	status,2,c
 15010  007382  D01B               	goto	l20175
 15011                           
 15012                           ; BSR set to: 0
 15013  007384  0101               	movlb	1	; () banked
 15014  007386  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15015  007388  A4D8               	btfss	status,2,c
 15016  00738A  D017               	goto	l20175
 15017                           
 15018                           ; BSR set to: 1
 15019  00738C  0100               	movlb	0	; () banked
 15020  00738E  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15021  007390  A4D8               	btfss	status,2,c
 15022  007392  D013               	goto	l20175
 15023                           
 15024                           ; BSR set to: 0
 15025  007394  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15026  007396  A4D8               	btfss	status,2,c
 15027  007398  D010               	goto	l20175
 15028                           
 15029                           ; BSR set to: 0
 15030                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15031  00739A  0E00               	movlw	0
 15032  00739C  0101               	movlb	1	; () banked
 15033  00739E  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15034  0073A0  0E04               	movlw	4
 15035  0073A2  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15036                           
 15037                           ; BSR set to: 1
 15038                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15039  0073A4  0E0A               	movlw	10
 15040  0073A6  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15041  0073A8  0E00               	movlw	0
 15042  0073AA  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15043  0073AC  0E14               	movlw	20
 15044  0073AE  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15045  0073B0  0E12               	movlw	18
 15046  0073B2  ECE7  F045         	call	_SetSegmentValueIntermitent
 15047  0073B6                     l20169:
 15048                           
 15049                           ; BSR set to: 1
 15050                           ;inputs_MC50.c: 792:         return YES;
 15051  0073B6  0E01               	movlw	1
 15052  0073B8  0012               	return	
 15053  0073BA                     l20175:
 15054  0073BA  0100               	movlb	0	; () banked
 15055  0073BC  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15056  0073BE  A4D8               	btfss	status,2,c
 15057  0073C0  D013               	goto	l20189
 15058                           
 15059                           ; BSR set to: 0
 15060  0073C2  0101               	movlb	1	; () banked
 15061  0073C4  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15062  0073C6  A4D8               	btfss	status,2,c
 15063  0073C8  D00F               	goto	l20189
 15064                           
 15065                           ; BSR set to: 1
 15066                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15067  0073CA  0E00               	movlw	0
 15068  0073CC  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15069  0073CE  0E04               	movlw	4
 15070  0073D0  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15071                           
 15072                           ; BSR set to: 1
 15073                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15074  0073D2  0E15               	movlw	21
 15075  0073D4  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15076  0073D6  0E00               	movlw	0
 15077  0073D8  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15078  0073DA  0E14               	movlw	20
 15079  0073DC  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15080  0073DE  0E05               	movlw	5
 15081  0073E0  ECE7  F045         	call	_SetSegmentValueIntermitent
 15082                           
 15083                           ; BSR set to: 1
 15084                           ;inputs_MC50.c: 799:         return ST;
 15085  0073E4  0E02               	movlw	2
 15086  0073E6  0012               	return	
 15087  0073E8                     l20189:
 15088  0073E8  0100               	movlb	0	; () banked
 15089  0073EA  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15090  0073EC  A4D8               	btfss	status,2,c
 15091  0073EE  D017               	goto	l20205
 15092                           
 15093                           ; BSR set to: 0
 15094  0073F0  0101               	movlb	1	; () banked
 15095  0073F2  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15096  0073F4  A4D8               	btfss	status,2,c
 15097  0073F6  D013               	goto	l20205
 15098                           
 15099                           ; BSR set to: 1
 15100  0073F8  0100               	movlb	0	; () banked
 15101  0073FA  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15102  0073FC  A4D8               	btfss	status,2,c
 15103  0073FE  D00F               	goto	l20205
 15104                           
 15105                           ; BSR set to: 0
 15106                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15107  007400  0E00               	movlw	0
 15108  007402  0101               	movlb	1	; () banked
 15109  007404  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15110  007406  0E04               	movlw	4
 15111  007408  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15112                           
 15113                           ; BSR set to: 1
 15114                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15115  00740A  0E0E               	movlw	14
 15116  00740C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15117  00740E  0E00               	movlw	0
 15118  007410  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15119  007412  0E14               	movlw	20
 15120  007414  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15121  007416  0E12               	movlw	18
 15122  007418  ECE7  F045         	call	_SetSegmentValueIntermitent
 15123  00741C  D7CC               	goto	l20169
 15124  00741E                     l20205:
 15125                           
 15126                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 15127  00741E  0E00               	movlw	0
 15128  007420  0012               	return		;funcret
 15129  007422                     __end_of_GetSecurityStateInClosing:
 15130                           	callstack 0
 15131                           
 15132 ;; *************** function _actionZone_Closed *****************
 15133 ;; Defined at:
 15134 ;;		line 327 in file "sm_ControlGate_MC50.c"
 15135 ;; Parameters:    Size  Location     Type
 15136 ;;		None
 15137 ;; Auto vars:     Size  Location     Type
 15138 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 15139 ;;  securityOpen    1   31[COMRAM] enum E10397
 15140 ;; Return value:  Size  Location     Type
 15141 ;;                  1    wreg      void 
 15142 ;; Registers used:
 15143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15144 ;; Tracked objects:
 15145 ;;		On entry : 3F/0
 15146 ;;		On exit  : 0/0
 15147 ;;		Unchanged: 0/0
 15148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15153 ;;Total ram usage:        2 bytes
 15154 ;; Hardware stack levels used: 1
 15155 ;; Hardware stack levels required when called: 8
 15156 ;; This function calls:
 15157 ;;		_GetOpenOrder
 15158 ;;		_GetSecurityStateInOpening
 15159 ;;		_InitFullAutoTime
 15160 ;;		_InitWalkAutoTime
 15161 ;;		_OpenFullOrder
 15162 ;;		_OpenWalkOrder
 15163 ;;		_WaitPreFlash
 15164 ;;		_sm_send_event
 15165 ;; This function is called by:
 15166 ;;		_sm_execute_ControlGate
 15167 ;; This function uses a non-reentrant model
 15168 ;;
 15169                           
 15170                           	psect	text42
 15171  0072D2                     __ptext42:
 15172                           	callstack 0
 15173  0072D2                     _actionZone_Closed:
 15174                           	callstack 21
 15175                           
 15176                           ; BSR set to: 0
 15177                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 15178                           
 15179                           ;incstack = 0
 15180  0072D2  0101               	movlb	1	; () banked
 15181  0072D4  05ED               	decf	_main_stateMachine& (0+255),w,b
 15182  0072D6  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15183  0072D8  B4D8               	btfsc	status,2,c
 15184  0072DA  0012               	return	
 15185                           
 15186                           ; BSR set to: 1
 15187                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 15188  0072DC  ECCC  F028         	call	_GetOpenOrder	;wreg free
 15189  0072E0  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 15190                           
 15191                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 15192  0072E2  EC11  F03A         	call	_GetSecurityStateInOpening	;wreg free
 15193  0072E6  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 15194                           
 15195                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 15196  0072E8  0100               	movlb	0	; () banked
 15197  0072EA  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15198  0072EC  A4D8               	btfss	status,2,c
 15199  0072EE  D018               	goto	l21349
 15200                           
 15201                           ; BSR set to: 0
 15202                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 15203  0072F0  0E03               	movlw	3
 15204  0072F2  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15205  0072F4  A4D8               	btfss	status,2,c
 15206  0072F6  0012               	return	
 15207                           
 15208                           ; BSR set to: 0
 15209  0072F8  0101               	movlb	1	; () banked
 15210  0072FA  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 15211  0072FC  A4D8               	btfss	status,2,c
 15212  0072FE  0012               	return	
 15213                           
 15214                           ; BSR set to: 1
 15215  007300  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15216  007302  A4D8               	btfss	status,2,c
 15217  007304  0012               	return	
 15218                           
 15219                           ; BSR set to: 1
 15220                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 15221  007306  EC40  F047         	call	_OpenFullOrder	;wreg free
 15222  00730A                     l21347:
 15223                           
 15224                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 15225  00730A  0EED               	movlw	low _main_stateMachine
 15226  00730C  6E12               	movwf	sm_send_event@psm^0,c
 15227  00730E  0E01               	movlw	high _main_stateMachine
 15228  007310  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15229  007312  0E00               	movlw	0
 15230  007314  6E15               	movwf	(sm_send_event@event+1)^0,c
 15231  007316  0E11               	movlw	17
 15232  007318  6E14               	movwf	sm_send_event@event^0,c
 15233  00731A  EC6F  F041         	call	_sm_send_event	;wreg free
 15234  00731E  0012               	return	
 15235  007320                     l21349:
 15236                           
 15237                           ; BSR set to: 0
 15238  007320  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 15239  007322  B4D8               	btfsc	status,2,c
 15240  007324  D004               	goto	u24790
 15241                           
 15242                           ; BSR set to: 0
 15243  007326  0E03               	movlw	3
 15244  007328  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15245  00732A  A4D8               	btfss	status,2,c
 15246  00732C  D017               	goto	l21369
 15247  00732E                     u24790:
 15248                           
 15249                           ; BSR set to: 0
 15250  00732E  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15251  007330  A4D8               	btfss	status,2,c
 15252  007332  D014               	goto	l21369
 15253                           
 15254                           ; BSR set to: 0
 15255  007334  0101               	movlb	1	; () banked
 15256  007336  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 15257  007338  A4D8               	btfss	status,2,c
 15258  00733A  D010               	goto	l21369
 15259                           
 15260                           ; BSR set to: 1
 15261                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15262  00733C  0E02               	movlw	2
 15263  00733E  0100               	movlb	0	; () banked
 15264  007340  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15265  007342  A4D8               	btfss	status,2,c
 15266  007344  D006               	goto	l21363
 15267                           
 15268                           ; BSR set to: 0
 15269                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15270  007346  0E01               	movlw	1
 15271  007348  0101               	movlb	1	; () banked
 15272  00734A  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15273                           
 15274                           ; BSR set to: 1
 15275                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15276  00734C  ECCC  F03F         	call	_WaitPreFlash	;wreg free
 15277                           
 15278                           ;sm_ControlGate_MC50.c: 356:             }
 15279  007350  0012               	return	
 15280  007352                     l21363:
 15281                           
 15282                           ; BSR set to: 0
 15283                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15284  007352  EC40  F047         	call	_OpenFullOrder	;wreg free
 15285                           
 15286                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15287  007356  EC34  F048         	call	_InitFullAutoTime	;wreg free
 15288  00735A  D7D7               	goto	l21347
 15289  00735C                     l21369:
 15290  00735C  0E02               	movlw	2
 15291  00735E  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15292  007360  A4D8               	btfss	status,2,c
 15293  007362  0012               	return	
 15294  007364  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15295  007366  A4D8               	btfss	status,2,c
 15296  007368  0012               	return	
 15297  00736A  0100               	movlb	0	; () banked
 15298  00736C  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15299  00736E  B4D8               	btfsc	status,2,c
 15300  007370  0012               	return	
 15301                           
 15302                           ; BSR set to: 0
 15303                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15304  007372  EC04  F040         	call	_OpenWalkOrder	;wreg free
 15305                           
 15306                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15307  007376  ECB9  F048         	call	_InitWalkAutoTime	;wreg free
 15308  00737A  D7C7               	goto	l21347
 15309  00737C                     __end_of_actionZone_Closed:
 15310                           	callstack 0
 15311                           
 15312 ;; *************** function _WaitPreFlash *****************
 15313 ;; Defined at:
 15314 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15315 ;; Parameters:    Size  Location     Type
 15316 ;;		None
 15317 ;; Auto vars:     Size  Location     Type
 15318 ;;		None
 15319 ;; Return value:  Size  Location     Type
 15320 ;;                  1    wreg      void 
 15321 ;; Registers used:
 15322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15323 ;; Tracked objects:
 15324 ;;		On entry : 3F/1
 15325 ;;		On exit  : 3F/1
 15326 ;;		Unchanged: 0/0
 15327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15332 ;;Total ram usage:        0 bytes
 15333 ;; Hardware stack levels used: 1
 15334 ;; Hardware stack levels required when called: 7
 15335 ;; This function calls:
 15336 ;;		_InitFullAutoTime
 15337 ;;		_OpenFullOrder
 15338 ;;		_sm_send_event
 15339 ;; This function is called by:
 15340 ;;		_sm_execute_ControlGate
 15341 ;;		_actionZone_Closed
 15342 ;; This function uses a non-reentrant model
 15343 ;;
 15344                           
 15345                           	psect	text43
 15346  007F98                     __ptext43:
 15347                           	callstack 0
 15348  007F98                     _WaitPreFlash:
 15349                           	callstack 21
 15350                           
 15351                           ; BSR set to: 1
 15352                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15353                           
 15354                           ;incstack = 0
 15355  007F98  0E02               	movlw	2
 15356  007F9A  0100               	movlb	0	; () banked
 15357  007F9C  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15358  007F9E  A4D8               	btfss	status,2,c
 15359  007FA0  D014               	goto	l20415
 15360                           
 15361                           ; BSR set to: 0
 15362  007FA2  0101               	movlb	1	; () banked
 15363  007FA4  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15364  007FA6  A4D8               	btfss	status,2,c
 15365  007FA8  D010               	goto	l20415
 15366                           
 15367                           ; BSR set to: 1
 15368  007FAA  BFE1               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15369  007FAC  D005               	goto	u23730
 15370  007FAE  51E1               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15371  007FB0  E10C               	bnz	l20415
 15372  007FB2  05E0               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15373  007FB4  B0D8               	btfsc	status,0,c
 15374  007FB6  D009               	goto	l20415
 15375  007FB8                     u23730:
 15376                           
 15377                           ; BSR set to: 1
 15378  007FB8  518C               	movf	_aux_i& (0+255),w,b
 15379  007FBA  A4D8               	btfss	status,2,c
 15380  007FBC  D006               	goto	l20415
 15381                           
 15382                           ; BSR set to: 1
 15383                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15384  007FBE  0E00               	movlw	0
 15385  007FC0  6FE1               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15386  007FC2  0E3C               	movlw	60
 15387  007FC4  6FE0               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15388                           
 15389                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15390  007FC6  0E01               	movlw	1
 15391  007FC8  6F8C               	movwf	_aux_i& (0+255),b
 15392  007FCA                     l20415:
 15393                           
 15394                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15395  007FCA  0101               	movlb	1	; () banked
 15396  007FCC  BFE1               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15397  007FCE  D005               	goto	u23750
 15398  007FD0  51E1               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15399  007FD2  E119               	bnz	l2580
 15400  007FD4  05E0               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15401  007FD6  B0D8               	btfsc	status,0,c
 15402  007FD8  0012               	return	
 15403  007FDA                     u23750:
 15404                           
 15405                           ; BSR set to: 1
 15406  007FDA  058C               	decf	_aux_i& (0+255),w,b
 15407  007FDC  A4D8               	btfss	status,2,c
 15408  007FDE  0012               	return	
 15409                           
 15410                           ; BSR set to: 1
 15411                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15412  007FE0  0E00               	movlw	0
 15413  007FE2  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15414                           
 15415                           ; BSR set to: 1
 15416                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15417  007FE4  EC40  F047         	call	_OpenFullOrder	;wreg free
 15418                           
 15419                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15420  007FE8  EC34  F048         	call	_InitFullAutoTime	;wreg free
 15421                           
 15422                           ; BSR set to: 0
 15423                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15424  007FEC  0EED               	movlw	low _main_stateMachine
 15425  007FEE  6E12               	movwf	sm_send_event@psm^0,c
 15426  007FF0  0E01               	movlw	high _main_stateMachine
 15427  007FF2  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15428  007FF4  0E00               	movlw	0
 15429  007FF6  6E15               	movwf	(sm_send_event@event+1)^0,c
 15430  007FF8  0E11               	movlw	17
 15431  007FFA  6E14               	movwf	sm_send_event@event^0,c
 15432  007FFC  EC6F  F041         	call	_sm_send_event	;wreg free
 15433                           
 15434                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15435  008000  0E00               	movlw	0
 15436  008002  0101               	movlb	1	; () banked
 15437  008004  6F8C               	movwf	_aux_i& (0+255),b
 15438  008006                     l2580:
 15439                           
 15440                           ; BSR set to: 1
 15441  008006  0012               	return		;funcret
 15442  008008                     __end_of_WaitPreFlash:
 15443                           	callstack 0
 15444                           
 15445 ;; *************** function _OpenFullOrder *****************
 15446 ;; Defined at:
 15447 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15448 ;; Parameters:    Size  Location     Type
 15449 ;;		None
 15450 ;; Auto vars:     Size  Location     Type
 15451 ;;		None
 15452 ;; Return value:  Size  Location     Type
 15453 ;;                  1    wreg      void 
 15454 ;; Registers used:
 15455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15456 ;; Tracked objects:
 15457 ;;		On entry : 3E/1
 15458 ;;		On exit  : 3E/0
 15459 ;;		Unchanged: 0/0
 15460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15465 ;;Total ram usage:        0 bytes
 15466 ;; Hardware stack levels used: 1
 15467 ;; Hardware stack levels required when called: 6
 15468 ;; This function calls:
 15469 ;;		_InitSoftStart
 15470 ;;		_sm_send_event
 15471 ;; This function is called by:
 15472 ;;		_WaitPreFlash
 15473 ;;		_actionZone_Closed
 15474 ;;		_actionZone_Opened
 15475 ;;		_actionZone_Closing
 15476 ;; This function uses a non-reentrant model
 15477 ;;
 15478                           
 15479                           	psect	text44
 15480  008E80                     __ptext44:
 15481                           	callstack 0
 15482  008E80                     _OpenFullOrder:
 15483                           	callstack 22
 15484                           
 15485                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15486                           
 15487                           ; BSR set to: 1
 15488                           ;incstack = 0
 15489  008E80  0E01               	movlw	1
 15490  008E82  0101               	movlb	1	; () banked
 15491  008E84  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15492                           
 15493                           ; BSR set to: 1
 15494                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15495  008E86  0EE2               	movlw	low _controlGate_stateMachine
 15496  008E88  6E12               	movwf	sm_send_event@psm^0,c
 15497  008E8A  0E01               	movlw	high _controlGate_stateMachine
 15498  008E8C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15499  008E8E  0E00               	movlw	0
 15500  008E90  6E15               	movwf	(sm_send_event@event+1)^0,c
 15501  008E92  0E0C               	movlw	12
 15502  008E94  6E14               	movwf	sm_send_event@event^0,c
 15503  008E96  EC6F  F041         	call	_sm_send_event	;wreg free
 15504                           
 15505                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15506  008E9A  0E01               	movlw	1
 15507  008E9C  0101               	movlb	1	; () banked
 15508  008E9E  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15509                           
 15510                           ; BSR set to: 1
 15511                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15512  008EA0  EC9D  F041         	call	_InitSoftStart	;wreg free
 15513  008EA4  0012               	return		;funcret
 15514  008EA6                     __end_of_OpenFullOrder:
 15515                           	callstack 0
 15516                           
 15517 ;; *************** function _InitFullAutoTime *****************
 15518 ;; Defined at:
 15519 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15520 ;; Parameters:    Size  Location     Type
 15521 ;;		None
 15522 ;; Auto vars:     Size  Location     Type
 15523 ;;		None
 15524 ;; Return value:  Size  Location     Type
 15525 ;;                  1    wreg      void 
 15526 ;; Registers used:
 15527 ;;		wreg, status,2, status,0, prodl, prodh
 15528 ;; Tracked objects:
 15529 ;;		On entry : 3E/0
 15530 ;;		On exit  : 3F/0
 15531 ;;		Unchanged: 0/0
 15532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15537 ;;Total ram usage:        0 bytes
 15538 ;; Hardware stack levels used: 1
 15539 ;; Hardware stack levels required when called: 4
 15540 ;; This function calls:
 15541 ;;		Nothing
 15542 ;; This function is called by:
 15543 ;;		_WaitPreFlash
 15544 ;;		_actionZone_Closed
 15545 ;;		_actionZone_Opening
 15546 ;;		_actionZone_Opened
 15547 ;;		_actionZone_Closing
 15548 ;; This function uses a non-reentrant model
 15549 ;;
 15550                           
 15551                           	psect	text45
 15552  009068                     __ptext45:
 15553                           	callstack 0
 15554  009068                     _InitFullAutoTime:
 15555                           	callstack 24
 15556                           
 15557                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15558                           
 15559                           ;incstack = 0
 15560  009068  0100               	movlb	0	; () banked
 15561  00906A  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15562  00906C  A4D8               	btfss	status,2,c
 15563  00906E  0012               	return	
 15564                           
 15565                           ; BSR set to: 0
 15566                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15567  009070  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15568  009072  0D14               	mullw	20
 15569  009074  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 15570  009078  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 15571                           
 15572                           ; BSR set to: 0
 15573                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15574  00907C  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15575                           
 15576                           ; BSR set to: 0
 15577  009080  0012               	return		;funcret
 15578  009082                     __end_of_InitFullAutoTime:
 15579                           	callstack 0
 15580                           
 15581 ;; *************** function _OpenWalkOrder *****************
 15582 ;; Defined at:
 15583 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15584 ;; Parameters:    Size  Location     Type
 15585 ;;		None
 15586 ;; Auto vars:     Size  Location     Type
 15587 ;;  diffTime        2   25[COMRAM] int 
 15588 ;; Return value:  Size  Location     Type
 15589 ;;                  1    wreg      void 
 15590 ;; Registers used:
 15591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15592 ;; Tracked objects:
 15593 ;;		On entry : 3E/1
 15594 ;;		On exit  : 3E/0
 15595 ;;		Unchanged: 0/0
 15596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15599 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15600 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15601 ;;Total ram usage:        4 bytes
 15602 ;; Hardware stack levels used: 1
 15603 ;; Hardware stack levels required when called: 6
 15604 ;; This function calls:
 15605 ;;		_InitSoftStart
 15606 ;;		_sm_send_event
 15607 ;; This function is called by:
 15608 ;;		_actionZone_Closed
 15609 ;;		_actionZone_Opened
 15610 ;;		_actionZone_Closing
 15611 ;; This function uses a non-reentrant model
 15612 ;;
 15613                           
 15614                           	psect	text46
 15615  008008                     __ptext46:
 15616                           	callstack 0
 15617  008008                     _OpenWalkOrder:
 15618                           	callstack 22
 15619                           
 15620                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15621                           
 15622                           ; BSR set to: 0
 15623                           ;incstack = 0
 15624  008008  0100               	movlb	0	; () banked
 15625  00800A  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15626  00800C  0D14               	mullw	20
 15627  00800E  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15628  008012  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15629  008016  0101               	movlb	1	; () banked
 15630  008018  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15631  00801A  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15632  00801C  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15633  00801E  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15634  008020  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15635  008022  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15636                           
 15637                           ; BSR set to: 1
 15638                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15639  008024  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15640  008026  D022               	goto	l20453
 15641  008028  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15642  00802A  E103               	bnz	u23770
 15643  00802C  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15644  00802E  A0D8               	btfss	status,0,c
 15645  008030  D01D               	goto	l20453
 15646  008032                     u23770:
 15647                           
 15648                           ; BSR set to: 1
 15649                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15650  008032  0EE2               	movlw	low _controlGate_stateMachine
 15651  008034  6E12               	movwf	sm_send_event@psm^0,c
 15652  008036  0E01               	movlw	high _controlGate_stateMachine
 15653  008038  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15654  00803A  0E00               	movlw	0
 15655  00803C  6E15               	movwf	(sm_send_event@event+1)^0,c
 15656  00803E  0E0C               	movlw	12
 15657  008040  6E14               	movwf	sm_send_event@event^0,c
 15658  008042  EC6F  F041         	call	_sm_send_event	;wreg free
 15659                           
 15660                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15661  008046  0101               	movlb	1	; () banked
 15662  008048  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15663  00804A  A4D8               	btfss	status,2,c
 15664  00804C  D005               	goto	l20447
 15665                           
 15666                           ; BSR set to: 1
 15667                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15668  00804E  C01A  F1AA         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15669  008052  C01B  F1AB         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15670                           
 15671                           ;sm_ControlGate_MC50.c: 79:         }
 15672  008056  D006               	goto	l20449
 15673  008058                     l20447:
 15674                           
 15675                           ; BSR set to: 1
 15676                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15677  008058  0E14               	movlw	20
 15678  00805A  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15679  00805C  6FAA               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15680  00805E  0E00               	movlw	0
 15681  008060  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15682  008062  6FAB               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15683  008064                     l20449:
 15684                           
 15685                           ; BSR set to: 1
 15686                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15687  008064  0E02               	movlw	2
 15688  008066  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15689                           
 15690                           ; BSR set to: 1
 15691                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15692  008068  0E01               	movlw	1
 15693  00806A  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15694  00806C                     l20453:
 15695                           
 15696                           ; BSR set to: 1
 15697                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15698  00806C  0E02               	movlw	2
 15699  00806E  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15700                           
 15701                           ; BSR set to: 1
 15702                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15703  008070  EC9D  F041         	call	_InitSoftStart	;wreg free
 15704  008074  0012               	return		;funcret
 15705  008076                     __end_of_OpenWalkOrder:
 15706                           	callstack 0
 15707                           
 15708 ;; *************** function _sm_send_event *****************
 15709 ;; Defined at:
 15710 ;;		line 34 in file "sm_common_MC50.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;  psm             2   17[COMRAM] PTR struct .
 15713 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15714 ;;  event           2   19[COMRAM] int 
 15715 ;; Auto vars:     Size  Location     Type
 15716 ;;		None
 15717 ;; Return value:  Size  Location     Type
 15718 ;;                  1    wreg      void 
 15719 ;; Registers used:
 15720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15721 ;; Tracked objects:
 15722 ;;		On entry : 0/0
 15723 ;;		On exit  : 0/0
 15724 ;;		Unchanged: 0/0
 15725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15729 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15730 ;;Total ram usage:        6 bytes
 15731 ;; Hardware stack levels used: 1
 15732 ;; Hardware stack levels required when called: 5
 15733 ;; This function calls:
 15734 ;;		_sm_get_current_state
 15735 ;; This function is called by:
 15736 ;;		_OpenFullOrder
 15737 ;;		_WaitPreFlash
 15738 ;;		_CloseOrder
 15739 ;;		_OpenWalkOrder
 15740 ;;		_StopOrder
 15741 ;;		_sm_execute_ControlGate
 15742 ;;		_actionZone_Closed
 15743 ;;		_actionZone_Opening
 15744 ;;		_actionZone_Closing
 15745 ;;		_sm_execute_ControlLearning
 15746 ;;		_sm_execute_main
 15747 ;;		_sm_execute_menuConfiguration
 15748 ;;		_setValueToEdit
 15749 ;;		_controlSelectRemote
 15750 ;;		_controlSaveRemote
 15751 ;; This function uses a non-reentrant model
 15752 ;;
 15753                           
 15754                           	psect	text47
 15755  0082DE                     __ptext47:
 15756                           	callstack 0
 15757  0082DE                     _sm_send_event:
 15758                           	callstack 24
 15759                           
 15760                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15761                           
 15762                           ;incstack = 0
 15763  0082DE  EE20 F007          	lfsr	2,7
 15764  0082E2  5012               	movf	sm_send_event@psm^0,w,c
 15765  0082E4  26D9               	addwf	fsr2l,f,c
 15766  0082E6  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15767  0082E8  22DA               	addwfc	fsr2h,f,c
 15768  0082EA  50DE               	movf	postinc2,w,c
 15769  0082EC  10DE               	iorwf	postinc2,w,c
 15770  0082EE  B4D8               	btfsc	status,2,c
 15771  0082F0  D019               	goto	u22420
 15772  0082F2  EE20 F007          	lfsr	2,7
 15773  0082F6  5012               	movf	sm_send_event@psm^0,w,c
 15774  0082F8  26D9               	addwf	fsr2l,f,c
 15775  0082FA  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15776  0082FC  22DA               	addwfc	fsr2h,f,c
 15777  0082FE  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15778  008302  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15779  008306  ECD7  F048         	call	_sm_get_current_state	;wreg free
 15780  00830A  EE20 F009          	lfsr	2,9
 15781  00830E  5012               	movf	sm_send_event@psm^0,w,c
 15782  008310  26D9               	addwf	fsr2l,f,c
 15783  008312  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15784  008314  22DA               	addwfc	fsr2h,f,c
 15785  008316  50DE               	movf	postinc2,w,c
 15786  008318  1810               	xorwf	?_sm_get_current_state^0,w,c
 15787  00831A  E10E               	bnz	l3507
 15788  00831C  50DE               	movf	postinc2,w,c
 15789  00831E  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15790  008320  A4D8               	btfss	status,2,c
 15791  008322  0012               	return	
 15792  008324                     u22420:
 15793                           
 15794                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15795  008324  EE20 F004          	lfsr	2,4
 15796  008328  5012               	movf	sm_send_event@psm^0,w,c
 15797  00832A  26D9               	addwf	fsr2l,f,c
 15798  00832C  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15799  00832E  22DA               	addwfc	fsr2h,f,c
 15800  008330  C014  FFDE         	movff	sm_send_event@event,postinc2
 15801  008334  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15802  008338                     l3507:
 15803  008338  0012               	return		;funcret
 15804  00833A                     __end_of_sm_send_event:
 15805                           	callstack 0
 15806                           
 15807 ;; *************** function _sm_get_current_state *****************
 15808 ;; Defined at:
 15809 ;;		line 30 in file "sm_common_MC50.c"
 15810 ;; Parameters:    Size  Location     Type
 15811 ;;  psm             2   15[COMRAM] PTR struct .
 15812 ;;		 -> NULL(0), 
 15813 ;; Auto vars:     Size  Location     Type
 15814 ;;		None
 15815 ;; Return value:  Size  Location     Type
 15816 ;;                  2   15[COMRAM] int 
 15817 ;; Registers used:
 15818 ;;		fsr2l, fsr2h
 15819 ;; Tracked objects:
 15820 ;;		On entry : 0/0
 15821 ;;		On exit  : 0/0
 15822 ;;		Unchanged: 0/0
 15823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15828 ;;Total ram usage:        2 bytes
 15829 ;; Hardware stack levels used: 1
 15830 ;; Hardware stack levels required when called: 4
 15831 ;; This function calls:
 15832 ;;		Nothing
 15833 ;; This function is called by:
 15834 ;;		_sm_send_event
 15835 ;; This function uses a non-reentrant model
 15836 ;;
 15837                           
 15838                           	psect	text48
 15839  0091AE                     __ptext48:
 15840                           	callstack 0
 15841  0091AE                     _sm_get_current_state:
 15842                           	callstack 24
 15843                           
 15844                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15845                           
 15846                           ;incstack = 0
 15847  0091AE  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15848  0091B2  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15849  0091B6  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15850  0091BA  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15851  0091BE  0012               	return		;funcret
 15852  0091C0                     __end_of_sm_get_current_state:
 15853                           	callstack 0
 15854                           
 15855 ;; *************** function _InitSoftStart *****************
 15856 ;; Defined at:
 15857 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15858 ;; Parameters:    Size  Location     Type
 15859 ;;		None
 15860 ;; Auto vars:     Size  Location     Type
 15861 ;;		None
 15862 ;; Return value:  Size  Location     Type
 15863 ;;                  1    wreg      void 
 15864 ;; Registers used:
 15865 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15866 ;; Tracked objects:
 15867 ;;		On entry : 3F/1
 15868 ;;		On exit  : 3E/0
 15869 ;;		Unchanged: 0/0
 15870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15874 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15875 ;;Total ram usage:        1 bytes
 15876 ;; Hardware stack levels used: 1
 15877 ;; Hardware stack levels required when called: 5
 15878 ;; This function calls:
 15879 ;;		_GetMotorPower
 15880 ;; This function is called by:
 15881 ;;		_OpenFullOrder
 15882 ;;		_CloseOrder
 15883 ;;		_OpenWalkOrder
 15884 ;; This function uses a non-reentrant model
 15885 ;;
 15886                           
 15887                           	psect	text49
 15888  00833A                     __ptext49:
 15889                           	callstack 0
 15890  00833A                     _InitSoftStart:
 15891                           	callstack 22
 15892                           
 15893                           ; BSR set to: 1
 15894                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15895                           
 15896                           ;incstack = 0
 15897  00833A  0100               	movlb	0	; () banked
 15898  00833C  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15899  00833E  B4D8               	btfsc	status,2,c
 15900  008340  0012               	return	
 15901                           
 15902                           ; BSR set to: 0
 15903  008342  0101               	movlb	1	; () banked
 15904  008344  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15905  008346  A4D8               	btfss	status,2,c
 15906  008348  0012               	return	
 15907                           
 15908                           ; BSR set to: 1
 15909                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15910  00834A  0E00               	movlw	0
 15911  00834C  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15912  00834E  0E00               	movlw	0
 15913  008350  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15914                           
 15915                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15916  008352  0E00               	movlw	0
 15917  008354  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15918  008356  0E00               	movlw	0
 15919  008358  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15920                           
 15921                           ; BSR set to: 1
 15922                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15923  00835A  ECEE  F037         	call	_GetMotorPower	;wreg free
 15924  00835E  6E14               	movwf	??_InitSoftStart^0,c
 15925  008360  5014               	movf	??_InitSoftStart^0,w,c
 15926  008362  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15927  008364  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15928                           
 15929                           ; BSR set to: 1
 15930                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15931  008366  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15932  008368  D00A               	goto	l19561
 15933  00836A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15934  00836C  E104               	bnz	u22450
 15935  00836E  0E52               	movlw	82
 15936  008370  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15937  008372  A0D8               	btfss	status,0,c
 15938  008374  D004               	goto	l19561
 15939  008376                     u22450:
 15940                           
 15941                           ; BSR set to: 1
 15942                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15943  008376  0E00               	movlw	0
 15944  008378  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15945  00837A  0E51               	movlw	81
 15946  00837C  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15947  00837E                     l19561:
 15948                           
 15949                           ; BSR set to: 1
 15950                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15951  00837E  0E01               	movlw	1
 15952  008380  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15953  008382  6FB0               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15954  008384  0E00               	movlw	0
 15955  008386  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15956  008388  6FB1               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15957                           
 15958                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15959  00838A  0100               	movlb	0	; () banked
 15960  00838C  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15961  00838E  080A               	sublw	10
 15962  008390  0101               	movlb	1	; () banked
 15963  008392  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15964  008394  0012               	return		;funcret
 15965  008396                     __end_of_InitSoftStart:
 15966                           	callstack 0
 15967                           
 15968 ;; *************** function _InitWalkAutoTime *****************
 15969 ;; Defined at:
 15970 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15971 ;; Parameters:    Size  Location     Type
 15972 ;;		None
 15973 ;; Auto vars:     Size  Location     Type
 15974 ;;		None
 15975 ;; Return value:  Size  Location     Type
 15976 ;;                  1    wreg      void 
 15977 ;; Registers used:
 15978 ;;		wreg, status,2, status,0, prodl, prodh
 15979 ;; Tracked objects:
 15980 ;;		On entry : 0/1
 15981 ;;		On exit  : 3F/0
 15982 ;;		Unchanged: 0/0
 15983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15988 ;;Total ram usage:        0 bytes
 15989 ;; Hardware stack levels used: 1
 15990 ;; Hardware stack levels required when called: 4
 15991 ;; This function calls:
 15992 ;;		Nothing
 15993 ;; This function is called by:
 15994 ;;		_actionZone_Closed
 15995 ;;		_actionZone_Opening
 15996 ;;		_actionZone_Opened
 15997 ;;		_actionZone_Closing
 15998 ;; This function uses a non-reentrant model
 15999 ;;
 16000                           
 16001                           	psect	text50
 16002  009172                     __ptext50:
 16003                           	callstack 0
 16004  009172                     _InitWalkAutoTime:
 16005                           	callstack 24
 16006                           
 16007                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 16008                           
 16009                           ;incstack = 0
 16010  009172  0100               	movlb	0	; () banked
 16011  009174  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 16012  009176  0D14               	mullw	20
 16013  009178  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 16014  00917C  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 16015                           
 16016                           ; BSR set to: 0
 16017                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 16018  009180  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 16019                           
 16020                           ; BSR set to: 0
 16021  009184  0012               	return		;funcret
 16022  009186                     __end_of_InitWalkAutoTime:
 16023                           	callstack 0
 16024                           
 16025 ;; *************** function _GetSecurityStateInOpening *****************
 16026 ;; Defined at:
 16027 ;;		line 738 in file "inputs_MC50.c"
 16028 ;; Parameters:    Size  Location     Type
 16029 ;;		None
 16030 ;; Auto vars:     Size  Location     Type
 16031 ;;		None
 16032 ;; Return value:  Size  Location     Type
 16033 ;;                  1    wreg      enum E10564
 16034 ;; Registers used:
 16035 ;;		wreg, status,2, status,0, cstack
 16036 ;; Tracked objects:
 16037 ;;		On entry : 0/0
 16038 ;;		On exit  : 3E/0
 16039 ;;		Unchanged: 0/0
 16040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16045 ;;Total ram usage:        0 bytes
 16046 ;; Hardware stack levels used: 1
 16047 ;; Hardware stack levels required when called: 5
 16048 ;; This function calls:
 16049 ;;		_SetSegmentValueIntermitent
 16050 ;; This function is called by:
 16051 ;;		_actionZone_Closed
 16052 ;;		_actionZone_Opening
 16053 ;; This function uses a non-reentrant model
 16054 ;;
 16055                           
 16056                           	psect	text51
 16057  007422                     __ptext51:
 16058                           	callstack 0
 16059  007422                     _GetSecurityStateInOpening:
 16060                           	callstack 23
 16061                           
 16062                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 16063                           
 16064                           ; BSR set to: 0
 16065                           ;incstack = 0
 16066  007422  0100               	movlb	0	; () banked
 16067  007424  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 16068  007426  A4D8               	btfss	status,2,c
 16069  007428  D01B               	goto	l20123
 16070                           
 16071                           ; BSR set to: 0
 16072  00742A  0101               	movlb	1	; () banked
 16073  00742C  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 16074  00742E  A4D8               	btfss	status,2,c
 16075  007430  D017               	goto	l20123
 16076                           
 16077                           ; BSR set to: 1
 16078  007432  0100               	movlb	0	; () banked
 16079  007434  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 16080  007436  A4D8               	btfss	status,2,c
 16081  007438  D013               	goto	l20123
 16082                           
 16083                           ; BSR set to: 0
 16084  00743A  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 16085  00743C  A4D8               	btfss	status,2,c
 16086  00743E  D010               	goto	l20123
 16087                           
 16088                           ; BSR set to: 0
 16089                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16090  007440  0E00               	movlw	0
 16091  007442  0101               	movlb	1	; () banked
 16092  007444  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16093  007446  0E04               	movlw	4
 16094  007448  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16095                           
 16096                           ; BSR set to: 1
 16097                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 16098  00744A  0E0A               	movlw	10
 16099  00744C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16100  00744E  0E00               	movlw	0
 16101  007450  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16102  007452  0E14               	movlw	20
 16103  007454  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16104  007456  0E12               	movlw	18
 16105  007458  ECE7  F045         	call	_SetSegmentValueIntermitent
 16106  00745C                     l20117:
 16107                           
 16108                           ; BSR set to: 1
 16109                           ;inputs_MC50.c: 752:         return YES;
 16110  00745C  0E01               	movlw	1
 16111  00745E  0012               	return	
 16112  007460                     l20123:
 16113  007460  0100               	movlb	0	; () banked
 16114  007462  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 16115  007464  A4D8               	btfss	status,2,c
 16116  007466  D013               	goto	l20137
 16117                           
 16118                           ; BSR set to: 0
 16119  007468  0101               	movlb	1	; () banked
 16120  00746A  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 16121  00746C  A4D8               	btfss	status,2,c
 16122  00746E  D00F               	goto	l20137
 16123                           
 16124                           ; BSR set to: 1
 16125                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16126  007470  0E00               	movlw	0
 16127  007472  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16128  007474  0E04               	movlw	4
 16129  007476  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16130                           
 16131                           ; BSR set to: 1
 16132                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 16133  007478  0E15               	movlw	21
 16134  00747A  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16135  00747C  0E00               	movlw	0
 16136  00747E  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16137  007480  0E14               	movlw	20
 16138  007482  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16139  007484  0E05               	movlw	5
 16140  007486  ECE7  F045         	call	_SetSegmentValueIntermitent
 16141                           
 16142                           ; BSR set to: 1
 16143                           ;inputs_MC50.c: 760:         return ST;
 16144  00748A  0E02               	movlw	2
 16145  00748C  0012               	return	
 16146  00748E                     l20137:
 16147  00748E  0100               	movlb	0	; () banked
 16148  007490  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 16149  007492  A4D8               	btfss	status,2,c
 16150  007494  D017               	goto	l20153
 16151                           
 16152                           ; BSR set to: 0
 16153  007496  0101               	movlb	1	; () banked
 16154  007498  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 16155  00749A  A4D8               	btfss	status,2,c
 16156  00749C  D013               	goto	l20153
 16157                           
 16158                           ; BSR set to: 1
 16159  00749E  0100               	movlb	0	; () banked
 16160  0074A0  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 16161  0074A2  A4D8               	btfss	status,2,c
 16162  0074A4  D00F               	goto	l20153
 16163                           
 16164                           ; BSR set to: 0
 16165                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16166  0074A6  0E00               	movlw	0
 16167  0074A8  0101               	movlb	1	; () banked
 16168  0074AA  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16169  0074AC  0E04               	movlw	4
 16170  0074AE  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16171                           
 16172                           ; BSR set to: 1
 16173                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 16174  0074B0  0E0E               	movlw	14
 16175  0074B2  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16176  0074B4  0E00               	movlw	0
 16177  0074B6  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16178  0074B8  0E14               	movlw	20
 16179  0074BA  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16180  0074BC  0E12               	movlw	18
 16181  0074BE  ECE7  F045         	call	_SetSegmentValueIntermitent
 16182  0074C2  D7CC               	goto	l20117
 16183  0074C4                     l20153:
 16184                           
 16185                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 16186  0074C4  0E00               	movlw	0
 16187  0074C6  0012               	return		;funcret
 16188  0074C8                     __end_of_GetSecurityStateInOpening:
 16189                           	callstack 0
 16190                           
 16191 ;; *************** function _SetSegmentValueIntermitent *****************
 16192 ;; Defined at:
 16193 ;;		line 201 in file "outputs_MC50.c"
 16194 ;; Parameters:    Size  Location     Type
 16195 ;;  d1              1    wreg     unsigned char 
 16196 ;;  d2              1   15[COMRAM] unsigned char 
 16197 ;;  time            2   16[COMRAM] int 
 16198 ;; Auto vars:     Size  Location     Type
 16199 ;;  d1              1   18[COMRAM] unsigned char 
 16200 ;; Return value:  Size  Location     Type
 16201 ;;                  1    wreg      void 
 16202 ;; Registers used:
 16203 ;;		wreg, status,2, status,0
 16204 ;; Tracked objects:
 16205 ;;		On entry : 3E/0
 16206 ;;		On exit  : 3F/1
 16207 ;;		Unchanged: 0/0
 16208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16209 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16212 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16213 ;;Total ram usage:        4 bytes
 16214 ;; Hardware stack levels used: 1
 16215 ;; Hardware stack levels required when called: 4
 16216 ;; This function calls:
 16217 ;;		Nothing
 16218 ;; This function is called by:
 16219 ;;		_GetSecurityStateInOpening
 16220 ;;		_GetSecurityStateInClosing
 16221 ;;		_sm_execute_ControlGate
 16222 ;;		_actionZone_Opening
 16223 ;;		_actionZone_Closing
 16224 ;; This function uses a non-reentrant model
 16225 ;;
 16226                           
 16227                           	psect	text52
 16228  008BCE                     __ptext52:
 16229                           	callstack 0
 16230  008BCE                     _SetSegmentValueIntermitent:
 16231                           	callstack 24
 16232                           
 16233                           ;incstack = 0
 16234                           ;SetSegmentValueIntermitent@d1 stored from wreg
 16235  008BCE  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 16236                           
 16237                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 16238  008BD0  0101               	movlb	1	; () banked
 16239  008BD2  05ED               	decf	_main_stateMachine& (0+255),w,b
 16240  008BD4  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 16241  008BD6  B4D8               	btfsc	status,2,c
 16242  008BD8  0012               	return	
 16243                           
 16244                           ; BSR set to: 1
 16245  008BDA  51A8               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 16246  008BDC  11A9               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 16247  008BDE  A4D8               	btfss	status,2,c
 16248  008BE0  0012               	return	
 16249                           
 16250                           ; BSR set to: 1
 16251  008BE2  0E14               	movlw	20
 16252  008BE4  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16253  008BE6  0012               	return	
 16254                           
 16255                           ; BSR set to: 1
 16256                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 16257  008BE8  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 16258                           
 16259                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 16260  008BEC  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16261                           
 16262                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16263  008BF0  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16264  008BF4  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16265                           
 16266                           ; BSR set to: 1
 16267  008BF8  0012               	return		;funcret
 16268  008BFA                     __end_of_SetSegmentValueIntermitent:
 16269                           	callstack 0
 16270                           
 16271 ;; *************** function _GetOpenOrder *****************
 16272 ;; Defined at:
 16273 ;;		line 330 in file "inputs_MC50.c"
 16274 ;; Parameters:    Size  Location     Type
 16275 ;;		None
 16276 ;; Auto vars:     Size  Location     Type
 16277 ;;		None
 16278 ;; Return value:  Size  Location     Type
 16279 ;;                  1    wreg      enum E10539
 16280 ;; Registers used:
 16281 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16282 ;; Tracked objects:
 16283 ;;		On entry : 3E/1
 16284 ;;		On exit  : 0/0
 16285 ;;		Unchanged: 0/0
 16286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16291 ;;Total ram usage:        0 bytes
 16292 ;; Hardware stack levels used: 1
 16293 ;; Hardware stack levels required when called: 5
 16294 ;; This function calls:
 16295 ;;		_SetSegmentValueIntermitentMain
 16296 ;;		___lbdiv
 16297 ;; This function is called by:
 16298 ;;		_sm_execute_ControlGate
 16299 ;;		_actionZone_Closed
 16300 ;;		_actionZone_Opening
 16301 ;;		_actionZone_Opened
 16302 ;;		_actionZone_Closing
 16303 ;;		_sm_execute_ControlLearning
 16304 ;; This function uses a non-reentrant model
 16305 ;;
 16306                           
 16307                           	psect	text53
 16308  005198                     __ptext53:
 16309                           	callstack 0
 16310  005198                     _GetOpenOrder:
 16311                           	callstack 23
 16312                           
 16313                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16314                           
 16315                           ; BSR set to: 1
 16316                           ;incstack = 0
 16317  005198  0101               	movlb	1	; () banked
 16318  00519A  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16319  00519C  A4D8               	btfss	status,2,c
 16320  00519E  D0C0               	goto	l20093
 16321                           
 16322                           ; BSR set to: 1
 16323                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16324  0051A0  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16325  0051A2  D019               	goto	l19985
 16326  0051A4  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16327  0051A6  E103               	bnz	u22980
 16328  0051A8  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16329  0051AA  A0D8               	btfss	status,0,c
 16330  0051AC  D014               	goto	l19985
 16331  0051AE                     u22980:
 16332                           
 16333                           ; BSR set to: 1
 16334                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16335  0051AE  0E01               	movlw	1
 16336  0051B0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16337  0051B2  0E00               	movlw	0
 16338  0051B4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16339  0051B6  0E14               	movlw	20
 16340  0051B8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16341  0051BA  0E12               	movlw	18
 16342  0051BC  ECC3  F048         	call	_SetSegmentValueIntermitentMain
 16343                           
 16344                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16345  0051C0  0E00               	movlw	0
 16346  0051C2  0101               	movlb	1	; () banked
 16347  0051C4  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16348  0051C6  0E0A               	movlw	10
 16349  0051C8  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16350                           
 16351                           ; BSR set to: 1
 16352                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16353  0051CA  0E01               	movlw	1
 16354  0051CC  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16355                           
 16356                           ; BSR set to: 1
 16357                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16358  0051CE  0E01               	movlw	1
 16359  0051D0  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16360  0051D2                     l19979:
 16361                           
 16362                           ;inputs_MC50.c: 341:             return NoCMD;
 16363  0051D2  0E00               	movlw	0
 16364  0051D4  0012               	return	
 16365  0051D6                     l19985:
 16366                           
 16367                           ; BSR set to: 1
 16368  0051D6  0100               	movlb	0	; () banked
 16369  0051D8  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16370  0051DA  B4D8               	btfsc	status,2,c
 16371  0051DC  D02F               	goto	l20019
 16372                           
 16373                           ; BSR set to: 0
 16374                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16375  0051DE  0E35               	movlw	53
 16376  0051E0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16377  0051E2  A4D8               	btfss	status,2,c
 16378  0051E4  D017               	goto	l20003
 16379                           
 16380                           ; BSR set to: 0
 16381                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16382  0051E6  0E00               	movlw	0
 16383  0051E8  0101               	movlb	1	; () banked
 16384  0051EA  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16385  0051EC  0E0A               	movlw	10
 16386  0051EE  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16387                           
 16388                           ; BSR set to: 1
 16389                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16390  0051F0  0E00               	movlw	0
 16391  0051F2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16392  0051F4  0E00               	movlw	0
 16393  0051F6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16394  0051F8  0E04               	movlw	4
 16395  0051FA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16396  0051FC  0E12               	movlw	18
 16397  0051FE  ECC3  F048         	call	_SetSegmentValueIntermitentMain
 16398                           
 16399                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16400  005202  0E02               	movlw	2
 16401  005204  0100               	movlb	0	; () banked
 16402  005206  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16403  005208  A4D8               	btfss	status,2,c
 16404  00520A  D002               	goto	l19997
 16405  00520C                     u23010:
 16406                           
 16407                           ; BSR set to: 0
 16408                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16409  00520C  0E01               	movlw	1
 16410  00520E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16411  005210                     l19997:
 16412                           
 16413                           ; BSR set to: 0
 16414                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16415  005210  0E03               	movlw	3
 16416  005212  0012               	return	
 16417  005214                     l20003:
 16418                           
 16419                           ; BSR set to: 0
 16420  005214  0E33               	movlw	51
 16421  005216  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16422  005218  A4D8               	btfss	status,2,c
 16423  00521A  D7DB               	goto	l19979
 16424                           
 16425                           ; BSR set to: 0
 16426                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16427  00521C  0E00               	movlw	0
 16428  00521E  0101               	movlb	1	; () banked
 16429  005220  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16430  005222  0E0A               	movlw	10
 16431  005224  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16432                           
 16433                           ; BSR set to: 1
 16434                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16435  005226  0E05               	movlw	5
 16436  005228  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16437  00522A  0E00               	movlw	0
 16438  00522C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16439  00522E  0E04               	movlw	4
 16440  005230  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16441  005232  0E12               	movlw	18
 16442  005234  ECC3  F048         	call	_SetSegmentValueIntermitentMain
 16443  005238                     l20009:
 16444                           
 16445                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16446  005238  0E04               	movlw	4
 16447  00523A  0012               	return	
 16448  00523C                     l20019:
 16449                           
 16450                           ; BSR set to: 0
 16451  00523C  0E35               	movlw	53
 16452  00523E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16453  005240  A4D8               	btfss	status,2,c
 16454  005242  D016               	goto	l20041
 16455                           
 16456                           ; BSR set to: 0
 16457                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16458  005244  0E00               	movlw	0
 16459  005246  0101               	movlb	1	; () banked
 16460  005248  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16461  00524A  0E28               	movlw	40
 16462  00524C  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16463                           
 16464                           ; BSR set to: 1
 16465                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16466  00524E  0E00               	movlw	0
 16467  005250  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16468  005252  0E00               	movlw	0
 16469  005254  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16470  005256  0E04               	movlw	4
 16471  005258  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16472  00525A  0E12               	movlw	18
 16473  00525C  ECC3  F048         	call	_SetSegmentValueIntermitentMain
 16474                           
 16475                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16476  005260  0100               	movlb	0	; () banked
 16477  005262  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16478  005264  B4D8               	btfsc	status,2,c
 16479  005266  D7D2               	goto	u23010
 16480  005268                     l20035:
 16481                           
 16482                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16483  005268  0E01               	movlw	1
 16484  00526A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16485                           
 16486                           ;inputs_MC50.c: 382:                 return TypeFull;
 16487  00526C  0E01               	movlw	1
 16488  00526E  0012               	return	
 16489  005270                     l20041:
 16490                           
 16491                           ; BSR set to: 0
 16492  005270  0E33               	movlw	51
 16493  005272  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16494  005274  A4D8               	btfss	status,2,c
 16495  005276  D019               	goto	l20063
 16496                           
 16497                           ; BSR set to: 0
 16498                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16499  005278  0E00               	movlw	0
 16500  00527A  0101               	movlb	1	; () banked
 16501  00527C  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16502  00527E  0E28               	movlw	40
 16503  005280  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16504                           
 16505                           ; BSR set to: 1
 16506                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16507  005282  0E05               	movlw	5
 16508  005284  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16509  005286  0E00               	movlw	0
 16510  005288  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16511  00528A  0E04               	movlw	4
 16512  00528C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16513  00528E  0E12               	movlw	18
 16514  005290  ECC3  F048         	call	_SetSegmentValueIntermitentMain
 16515                           
 16516                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16517  005294  0100               	movlb	0	; () banked
 16518  005296  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16519  005298  A4D8               	btfss	status,2,c
 16520  00529A  D003               	goto	l20057
 16521                           
 16522                           ; BSR set to: 0
 16523                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16524  00529C  0E01               	movlw	1
 16525  00529E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16526  0052A0  D7CB               	goto	l20009
 16527  0052A2                     l20057:
 16528                           
 16529                           ; BSR set to: 0
 16530                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16531  0052A2  0E01               	movlw	1
 16532  0052A4  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16533                           
 16534                           ; BSR set to: 0
 16535                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16536  0052A6  0E02               	movlw	2
 16537  0052A8  0012               	return	
 16538  0052AA                     l20063:
 16539                           
 16540                           ; BSR set to: 0
 16541  0052AA  0E36               	movlw	54
 16542  0052AC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16543  0052AE  A4D8               	btfss	status,2,c
 16544  0052B0  D00F               	goto	l20077
 16545                           
 16546                           ; BSR set to: 0
 16547                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16548  0052B2  0E00               	movlw	0
 16549  0052B4  0101               	movlb	1	; () banked
 16550  0052B6  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16551  0052B8  0E28               	movlw	40
 16552  0052BA  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16553                           
 16554                           ; BSR set to: 1
 16555                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16556  0052BC  0E13               	movlw	19
 16557  0052BE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16558  0052C0  0E00               	movlw	0
 16559  0052C2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16560  0052C4  0E04               	movlw	4
 16561  0052C6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16562  0052C8  0E10               	movlw	16
 16563  0052CA  ECC3  F048         	call	_SetSegmentValueIntermitentMain
 16564  0052CE  D7CC               	goto	l20035
 16565  0052D0                     l20077:
 16566                           
 16567                           ; BSR set to: 0
 16568                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16569  0052D0  503B               	movf	_rfCMD^0,w,c	;volatile
 16570  0052D2  B4D8               	btfsc	status,2,c
 16571  0052D4  D023               	goto	l20089
 16572                           
 16573                           ; BSR set to: 0
 16574  0052D6  0E06               	movlw	6
 16575  0052D8  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16576  0052DA  B4D8               	btfsc	status,2,c
 16577  0052DC  D01F               	goto	l20089
 16578                           
 16579                           ; BSR set to: 0
 16580  0052DE  0E05               	movlw	5
 16581  0052E0  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16582  0052E2  B4D8               	btfsc	status,2,c
 16583  0052E4  D01B               	goto	l20089
 16584                           
 16585                           ; BSR set to: 0
 16586                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16587  0052E6  0E0A               	movlw	10
 16588  0052E8  6E10               	movwf	___lbdiv@divisor^0,c
 16589  0052EA  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16590  0052EC  EC33  F045         	call	___lbdiv
 16591  0052F0  0DF6               	mullw	246
 16592  0052F2  50F3               	movf	243,w,c
 16593  0052F4  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16594  0052F6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16595  0052F8  0E00               	movlw	0
 16596  0052FA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16597  0052FC  0E04               	movlw	4
 16598  0052FE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16599  005300  0E0A               	movlw	10
 16600  005302  6E10               	movwf	___lbdiv@divisor^0,c
 16601  005304  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16602  005306  EC33  F045         	call	___lbdiv
 16603  00530A  ECC3  F048         	call	_SetSegmentValueIntermitentMain
 16604                           
 16605                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16606  00530E  0E00               	movlw	0
 16607  005310  0101               	movlb	1	; () banked
 16608  005312  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16609  005314  0E28               	movlw	40
 16610  005316  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16611                           
 16612                           ; BSR set to: 1
 16613                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16614  005318  0E01               	movlw	1
 16615  00531A  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16616  00531C                     l20089:
 16617                           
 16618                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16619  00531C  503B               	movf	_rfCMD^0,w,c	;volatile
 16620  00531E  0012               	return	
 16621  005320                     l20093:
 16622                           
 16623                           ; BSR set to: 1
 16624                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16625  005320  503B               	movf	_rfCMD^0,w,c	;volatile
 16626  005322  B4D8               	btfsc	status,2,c
 16627  005324  D01B               	goto	l20101
 16628                           
 16629                           ; BSR set to: 1
 16630                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16631  005326  0E0A               	movlw	10
 16632  005328  6E10               	movwf	___lbdiv@divisor^0,c
 16633  00532A  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16634  00532C  EC33  F045         	call	___lbdiv
 16635  005330  0DF6               	mullw	246
 16636  005332  50F3               	movf	243,w,c
 16637  005334  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16638  005336  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16639  005338  0E00               	movlw	0
 16640  00533A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16641  00533C  0E04               	movlw	4
 16642  00533E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16643  005340  0E0A               	movlw	10
 16644  005342  6E10               	movwf	___lbdiv@divisor^0,c
 16645  005344  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16646  005346  EC33  F045         	call	___lbdiv
 16647  00534A  ECC3  F048         	call	_SetSegmentValueIntermitentMain
 16648                           
 16649                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16650  00534E  0E00               	movlw	0
 16651  005350  0101               	movlb	1	; () banked
 16652  005352  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16653  005354  0E14               	movlw	20
 16654  005356  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16655                           
 16656                           ; BSR set to: 1
 16657                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16658  005358  0E01               	movlw	1
 16659  00535A  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16660  00535C                     l20101:
 16661                           
 16662                           ; BSR set to: 1
 16663                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16664  00535C  503B               	movf	_rfCMD^0,w,c	;volatile
 16665  00535E  0012               	return		;funcret
 16666  005360                     __end_of_GetOpenOrder:
 16667                           	callstack 0
 16668                           
 16669 ;; *************** function ___lbdiv *****************
 16670 ;; Defined at:
 16671 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16672 ;; Parameters:    Size  Location     Type
 16673 ;;  dividend        1    wreg     unsigned char 
 16674 ;;  divisor         1   15[COMRAM] unsigned char 
 16675 ;; Auto vars:     Size  Location     Type
 16676 ;;  dividend        1   16[COMRAM] unsigned char 
 16677 ;;  quotient        1   18[COMRAM] unsigned char 
 16678 ;;  counter         1   17[COMRAM] unsigned char 
 16679 ;; Return value:  Size  Location     Type
 16680 ;;                  1    wreg      unsigned char 
 16681 ;; Registers used:
 16682 ;;		wreg, status,2, status,0
 16683 ;; Tracked objects:
 16684 ;;		On entry : 0/0
 16685 ;;		On exit  : 0/0
 16686 ;;		Unchanged: 0/0
 16687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16688 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16689 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16691 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16692 ;;Total ram usage:        4 bytes
 16693 ;; Hardware stack levels used: 1
 16694 ;; Hardware stack levels required when called: 4
 16695 ;; This function calls:
 16696 ;;		Nothing
 16697 ;; This function is called by:
 16698 ;;		_GetOpenOrder
 16699 ;;		_sm_execute_menuConfiguration
 16700 ;; This function uses a non-reentrant model
 16701 ;;
 16702                           
 16703                           	psect	text54
 16704  008A66                     __ptext54:
 16705                           	callstack 0
 16706  008A66                     ___lbdiv:
 16707                           	callstack 24
 16708                           
 16709                           ;incstack = 0
 16710                           ;___lbdiv@dividend stored from wreg
 16711  008A66  6E11               	movwf	___lbdiv@dividend^0,c
 16712  008A68  0E00               	movlw	0
 16713  008A6A  6E13               	movwf	___lbdiv@quotient^0,c
 16714  008A6C  5010               	movf	___lbdiv@divisor^0,w,c
 16715  008A6E  B4D8               	btfsc	status,2,c
 16716  008A70  D015               	goto	l19931
 16717  008A72  0E01               	movlw	1
 16718  008A74  6E12               	movwf	___lbdiv@counter^0,c
 16719  008A76  D003               	goto	l19919
 16720  008A78                     l19915:
 16721  008A78  90D8               	bcf	status,0,c
 16722  008A7A  3610               	rlcf	___lbdiv@divisor^0,f,c
 16723  008A7C  2A12               	incf	___lbdiv@counter^0,f,c
 16724  008A7E                     l19919:
 16725  008A7E  AE10               	btfss	___lbdiv@divisor^0,7,c
 16726  008A80  D7FB               	goto	l19915
 16727  008A82                     u22880:
 16728  008A82  90D8               	bcf	status,0,c
 16729  008A84  3613               	rlcf	___lbdiv@quotient^0,f,c
 16730  008A86  5010               	movf	___lbdiv@divisor^0,w,c
 16731  008A88  5C11               	subwf	___lbdiv@dividend^0,w,c
 16732  008A8A  A0D8               	btfss	status,0,c
 16733  008A8C  D003               	goto	l19927
 16734  008A8E  5010               	movf	___lbdiv@divisor^0,w,c
 16735  008A90  5E11               	subwf	___lbdiv@dividend^0,f,c
 16736  008A92  8013               	bsf	___lbdiv@quotient^0,0,c
 16737  008A94                     l19927:
 16738  008A94  90D8               	bcf	status,0,c
 16739  008A96  3210               	rrcf	___lbdiv@divisor^0,f,c
 16740  008A98  2E12               	decfsz	___lbdiv@counter^0,f,c
 16741  008A9A  D7F3               	goto	u22880
 16742  008A9C                     l19931:
 16743  008A9C  5013               	movf	___lbdiv@quotient^0,w,c
 16744  008A9E  0012               	return		;funcret
 16745  008AA0                     __end_of___lbdiv:
 16746                           	callstack 0
 16747                           
 16748 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16749 ;; Defined at:
 16750 ;;		line 193 in file "outputs_MC50.c"
 16751 ;; Parameters:    Size  Location     Type
 16752 ;;  d1              1    wreg     unsigned char 
 16753 ;;  d2              1   27[COMRAM] unsigned char 
 16754 ;;  time            2   28[COMRAM] int 
 16755 ;; Auto vars:     Size  Location     Type
 16756 ;;  d1              1   30[COMRAM] unsigned char 
 16757 ;; Return value:  Size  Location     Type
 16758 ;;                  1    wreg      void 
 16759 ;; Registers used:
 16760 ;;		wreg
 16761 ;; Tracked objects:
 16762 ;;		On entry : 0/1
 16763 ;;		On exit  : 0/0
 16764 ;;		Unchanged: 0/0
 16765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16766 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16770 ;;Total ram usage:        4 bytes
 16771 ;; Hardware stack levels used: 1
 16772 ;; Hardware stack levels required when called: 4
 16773 ;; This function calls:
 16774 ;;		Nothing
 16775 ;; This function is called by:
 16776 ;;		_GetOpenOrder
 16777 ;;		_sm_execute_main
 16778 ;;		_sm_execute_menuConfiguration
 16779 ;;		_load_New_Menu
 16780 ;;		_controlSelectRemote
 16781 ;;		_controlSaveRemote
 16782 ;; This function uses a non-reentrant model
 16783 ;;
 16784                           
 16785                           	psect	text55
 16786  009186                     __ptext55:
 16787                           	callstack 0
 16788  009186                     _SetSegmentValueIntermitentMain:
 16789                           	callstack 22
 16790                           
 16791                           ;incstack = 0
 16792                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16793  009186  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16794                           
 16795                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16796  009188  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16797                           
 16798                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16799  00918C  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16800                           
 16801                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16802  009190  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16803  009194  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16804  009198  0012               	return		;funcret
 16805  00919A                     __end_of_SetSegmentValueIntermitentMain:
 16806                           	callstack 0
 16807                           
 16808 ;; *************** function _readbutton *****************
 16809 ;; Defined at:
 16810 ;;		line 471 in file "inputs_MC50.c"
 16811 ;; Parameters:    Size  Location     Type
 16812 ;;		None
 16813 ;; Auto vars:     Size  Location     Type
 16814 ;;		None
 16815 ;; Return value:  Size  Location     Type
 16816 ;;                  1    wreg      void 
 16817 ;; Registers used:
 16818 ;;		wreg, status,2, status,0
 16819 ;; Tracked objects:
 16820 ;;		On entry : 3F/1
 16821 ;;		On exit  : 3F/1
 16822 ;;		Unchanged: 0/0
 16823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16828 ;;Total ram usage:        0 bytes
 16829 ;; Hardware stack levels used: 1
 16830 ;; Hardware stack levels required when called: 4
 16831 ;; This function calls:
 16832 ;;		Nothing
 16833 ;; This function is called by:
 16834 ;;		_main
 16835 ;; This function uses a non-reentrant model
 16836 ;;
 16837                           
 16838                           	psect	text56
 16839  0080E4                     __ptext56:
 16840                           	callstack 0
 16841  0080E4                     _readbutton:
 16842                           	callstack 26
 16843                           
 16844                           ; BSR set to: 1
 16845                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16846                           
 16847                           ;incstack = 0
 16848  0080E4  508E               	movf	142,w,c	;volatile
 16849  0080E6  0B37               	andlw	55
 16850  0080E8  6F96               	movwf	readbutton@key2& (0+255),b
 16851  0080EA  F000               	nop		;# 
 16852  0080EC  F000               	nop		;# 
 16853  0080EE  F000               	nop		;# 
 16854                           
 16855                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16856  0080F0  508E               	movf	142,w,c	;volatile
 16857  0080F2  0B37               	andlw	55
 16858  0080F4  0100               	movlb	0	; () banked
 16859  0080F6  6F86               	movwf	readbutton@key1& (0+255),b
 16860                           
 16861                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16862  0080F8  5186               	movf	readbutton@key1& (0+255),w,b
 16863  0080FA  0101               	movlb	1	; () banked
 16864  0080FC  1996               	xorwf	readbutton@key2& (0+255),w,b
 16865  0080FE  A4D8               	btfss	status,2,c
 16866  008100  D003               	goto	l16599
 16867                           
 16868                           ; BSR set to: 1
 16869                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16870  008102  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16871                           
 16872                           ;inputs_MC50.c: 488:  }
 16873  008106  D002               	goto	l16601
 16874  008108                     l16599:
 16875                           
 16876                           ; BSR set to: 1
 16877                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16878  008108  0E37               	movlw	55
 16879  00810A  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16880  00810C                     l16601:
 16881                           
 16882                           ; BSR set to: 1
 16883                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16884  00810C  0E37               	movlw	55
 16885  00810E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16886  008110  B4D8               	btfsc	status,2,c
 16887  008112  D007               	goto	u19100
 16888                           
 16889                           ; BSR set to: 1
 16890  008114  504C               	movf	_button_struct^0,w,c	;volatile
 16891  008116  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16892  008118  B4D8               	btfsc	status,2,c
 16893  00811A  D007               	goto	l16609
 16894                           
 16895                           ; BSR set to: 1
 16896  00811C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16897  00811E  A4D8               	btfss	status,2,c
 16898  008120  D004               	goto	l16609
 16899  008122                     u19100:
 16900                           
 16901                           ; BSR set to: 1
 16902                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16903  008122  0E00               	movlw	0
 16904  008124  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16905                           
 16906                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16907  008126  0E00               	movlw	0
 16908  008128  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16909  00812A                     l16609:
 16910                           
 16911                           ; BSR set to: 1
 16912                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16913  00812A  0E37               	movlw	55
 16914  00812C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16915  00812E  B4D8               	btfsc	status,2,c
 16916  008130  D007               	goto	l16617
 16917                           
 16918                           ; BSR set to: 1
 16919                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16920  008132  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16921                           
 16922                           ; BSR set to: 1
 16923                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16924  008136  0EFA               	movlw	250
 16925  008138  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16926  00813A  D004               	goto	l16619
 16927                           
 16928                           ; BSR set to: 1
 16929                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16930  00813C  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16931  00813E  D002               	goto	l16619
 16932  008140                     l16617:
 16933                           
 16934                           ; BSR set to: 1
 16935                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16936  008140  0E00               	movlw	0
 16937  008142  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16938  008144                     l16619:
 16939                           
 16940                           ; BSR set to: 1
 16941                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16942  008144  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16943  008146  A4D8               	btfss	status,2,c
 16944  008148  0012               	return	
 16945                           
 16946                           ; BSR set to: 1
 16947                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16948  00814A  0E37               	movlw	55
 16949  00814C  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16950                           
 16951                           ; BSR set to: 1
 16952  00814E  0012               	return		;funcret
 16953  008150                     __end_of_readbutton:
 16954                           	callstack 0
 16955                           
 16956 ;; *************** function _read_package *****************
 16957 ;; Defined at:
 16958 ;;		line 21 in file "eusartpackage.c"
 16959 ;; Parameters:    Size  Location     Type
 16960 ;;		None
 16961 ;; Auto vars:     Size  Location     Type
 16962 ;;  package         7   23[COMRAM] struct package_t
 16963 ;; Return value:  Size  Location     Type
 16964 ;;                  7   16[COMRAM] struct package_t
 16965 ;; Registers used:
 16966 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16967 ;; Tracked objects:
 16968 ;;		On entry : 3F/0
 16969 ;;		On exit  : 3F/E
 16970 ;;		Unchanged: 0/0
 16971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16972 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16973 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16975 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16976 ;;Total ram usage:       14 bytes
 16977 ;; Hardware stack levels used: 1
 16978 ;; Hardware stack levels required when called: 5
 16979 ;; This function calls:
 16980 ;;		_EUSART1_Read
 16981 ;; This function is called by:
 16982 ;;		_main
 16983 ;; This function uses a non-reentrant model
 16984 ;;
 16985                           
 16986                           	psect	text57
 16987  00864C                     __ptext57:
 16988                           	callstack 0
 16989  00864C                     _read_package:
 16990                           	callstack 25
 16991                           
 16992                           ; BSR set to: 0
 16993                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16994                           
 16995                           ; BSR set to: 1
 16996                           ;incstack = 0
 16997  00864C  ECE9  F043         	call	_EUSART1_Read	;wreg free
 16998  008650  0A0A               	xorlw	10
 16999  008652  B4D8               	btfsc	status,2,c
 17000  008654  D00C               	goto	l16777
 17001  008656                     u19630:
 17002                           
 17003                           ; BSR set to: 14
 17004                           ;eusartpackage.c: 25:             package.valid=0;
 17005  008656  0E00               	movlw	0
 17006  008658  6E1E               	movwf	(read_package@package+6)^0,c
 17007                           
 17008                           ; BSR set to: 14
 17009                           ;eusartpackage.c: 26:             return package;
 17010  00865A  EE20  F018         	lfsr	2,read_package@package
 17011  00865E  EE00  F011         	lfsr	0,?_read_package
 17012  008662  0E06               	movlw	6
 17013  008664                     u19641:
 17014  008664  CFDB FFEB          	movff	plusw2,plusw0
 17015  008668  06E8               	decf	wreg,f,c
 17016  00866A  E2FC               	bc	u19641
 17017  00866C  0012               	return	
 17018  00866E                     l16777:
 17019                           
 17020                           ; BSR set to: 14
 17021                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 17022  00866E  0E0A               	movlw	10
 17023  008670  6E1C               	movwf	(read_package@package+4)^0,c
 17024                           
 17025                           ; BSR set to: 14
 17026                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 17027  008672  ECE9  F043         	call	_EUSART1_Read	;wreg free
 17028  008676  6E18               	movwf	read_package@package^0,c
 17029                           
 17030                           ; BSR set to: 14
 17031                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 17032  008678  ECE9  F043         	call	_EUSART1_Read	;wreg free
 17033  00867C  6E19               	movwf	(read_package@package+1)^0,c
 17034                           
 17035                           ; BSR set to: 14
 17036                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 17037  00867E  ECE9  F043         	call	_EUSART1_Read	;wreg free
 17038  008682  6E1A               	movwf	(read_package@package+2)^0,c
 17039                           
 17040                           ; BSR set to: 14
 17041                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 17042  008684  ECE9  F043         	call	_EUSART1_Read	;wreg free
 17043  008688  6E1B               	movwf	(read_package@package+3)^0,c
 17044                           
 17045                           ; BSR set to: 14
 17046                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 17047  00868A  ECE9  F043         	call	_EUSART1_Read	;wreg free
 17048  00868E  0A0D               	xorlw	13
 17049  008690  A4D8               	btfss	status,2,c
 17050  008692  D7E1               	goto	u19630
 17051                           
 17052                           ; BSR set to: 14
 17053                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 17054  008694  0E0D               	movlw	13
 17055  008696  6E1D               	movwf	(read_package@package+5)^0,c
 17056                           
 17057                           ; BSR set to: 14
 17058                           ;eusartpackage.c: 46:         package.valid=1;
 17059  008698  0E01               	movlw	1
 17060  00869A  D7DE               	goto	L76
 17061  00869C                     __end_of_read_package:
 17062                           	callstack 0
 17063                           
 17064 ;; *************** function _EUSART1_Read *****************
 17065 ;; Defined at:
 17066 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 17067 ;; Parameters:    Size  Location     Type
 17068 ;;		None
 17069 ;; Auto vars:     Size  Location     Type
 17070 ;;  readValue       1   15[COMRAM] unsigned char 
 17071 ;; Return value:  Size  Location     Type
 17072 ;;                  1    wreg      unsigned char 
 17073 ;; Registers used:
 17074 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17075 ;; Tracked objects:
 17076 ;;		On entry : 31/0
 17077 ;;		On exit  : 3F/E
 17078 ;;		Unchanged: 0/0
 17079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17083 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17084 ;;Total ram usage:        1 bytes
 17085 ;; Hardware stack levels used: 1
 17086 ;; Hardware stack levels required when called: 4
 17087 ;; This function calls:
 17088 ;;		Nothing
 17089 ;; This function is called by:
 17090 ;;		_read_package
 17091 ;; This function uses a non-reentrant model
 17092 ;;
 17093                           
 17094                           	psect	text58
 17095  0087D2                     __ptext58:
 17096                           	callstack 0
 17097  0087D2                     _EUSART1_Read:
 17098                           	callstack 25
 17099                           
 17100                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17101                           
 17102                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17103                           
 17104                           ; BSR set to: 14
 17105                           ;incstack = 0
 17106  0087D2  0100               	movlb	0	; () banked
 17107  0087D4  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 17108  0087D6  B4D8               	btfsc	status,2,c
 17109  0087D8  D7FC               	goto	__ptext58
 17110                           
 17111                           ; BSR set to: 0
 17112                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 17113  0087DA  0E74               	movlw	low _eusart1RxStatusBuffer
 17114  0087DC  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17115  0087DE  6ED9               	movwf	fsr2l,c
 17116  0087E0  6ADA               	clrf	fsr2h,c
 17117  0087E2  0E02               	movlw	high _eusart1RxStatusBuffer
 17118  0087E4  22DA               	addwfc	fsr2h,f,c
 17119  0087E6  50DF               	movf	indf2,w,c
 17120  0087E8  0101               	movlb	1	; () banked
 17121  0087EA  6F99               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 17122                           
 17123                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 17124  0087EC  0E7C               	movlw	low _eusart1RxBuffer
 17125  0087EE  0100               	movlb	0	; () banked
 17126  0087F0  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17127  0087F2  6ED9               	movwf	fsr2l,c
 17128  0087F4  6ADA               	clrf	fsr2h,c
 17129  0087F6  0E02               	movlw	high _eusart1RxBuffer
 17130  0087F8  22DA               	addwfc	fsr2h,f,c
 17131  0087FA  50DF               	movf	indf2,w,c
 17132  0087FC  6E10               	movwf	EUSART1_Read@readValue^0,c
 17133                           
 17134                           ; BSR set to: 0
 17135  0087FE  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 17136                           
 17137                           ; BSR set to: 0
 17138                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 17139  008800  0E07               	movlw	7
 17140  008802  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 17141  008804  D002               	goto	l14013
 17142                           
 17143                           ; BSR set to: 0
 17144                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 17145  008806  0E00               	movlw	0
 17146  008808  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 17147  00880A                     l14013:
 17148                           
 17149                           ; BSR set to: 0
 17150                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 17151  00880A  010E               	movlb	14	; () banked
 17152  00880C  9BC5               	bcf	197,5,b	;volatile
 17153                           
 17154                           ; BSR set to: 14
 17155                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 17156  00880E  0100               	movlb	0	; () banked
 17157  008810  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 17158                           
 17159                           ; BSR set to: 0
 17160                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 17161  008812  010E               	movlb	14	; () banked
 17162  008814  8BC5               	bsf	197,5,b	;volatile
 17163                           
 17164                           ; BSR set to: 14
 17165                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 17166  008816  5010               	movf	EUSART1_Read@readValue^0,w,c
 17167                           
 17168                           ; BSR set to: 14
 17169  008818  0012               	return		;funcret
 17170  00881A                     __end_of_EUSART1_Read:
 17171                           	callstack 0
 17172                           
 17173 ;; *************** function _readRFButtons *****************
 17174 ;; Defined at:
 17175 ;;		line 231 in file "inputs_MC50.c"
 17176 ;; Parameters:    Size  Location     Type
 17177 ;;		None
 17178 ;; Auto vars:     Size  Location     Type
 17179 ;;		None
 17180 ;; Return value:  Size  Location     Type
 17181 ;;                  1    wreg      void 
 17182 ;; Registers used:
 17183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17184 ;; Tracked objects:
 17185 ;;		On entry : 3F/1
 17186 ;;		On exit  : 3E/0
 17187 ;;		Unchanged: 0/0
 17188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17193 ;;Total ram usage:        0 bytes
 17194 ;; Hardware stack levels used: 1
 17195 ;; Hardware stack levels required when called: 15
 17196 ;; This function calls:
 17197 ;;		_DecryptPacket_12BIT
 17198 ;;		_keeloqDecryptPacket
 17199 ;; This function is called by:
 17200 ;;		_main
 17201 ;; This function uses a non-reentrant model
 17202 ;;
 17203                           
 17204                           	psect	text59
 17205  0059D0                     __ptext59:
 17206                           	callstack 0
 17207  0059D0                     _readRFButtons:
 17208                           	callstack 15
 17209                           
 17210                           ; BSR set to: 1
 17211                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 17212                           
 17213                           ; BSR set to: 14
 17214                           ;incstack = 0
 17215  0059D0  0100               	movlb	0	; () banked
 17216  0059D2  518B               	movf	_RFFull& (0+255),w,b	;volatile
 17217  0059D4  B4D8               	btfsc	status,2,c
 17218  0059D6  D0B9               	goto	l22771
 17219                           
 17220                           ; BSR set to: 0
 17221                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 17222  0059D8  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 17223  0059DA  A4D8               	btfss	status,2,c
 17224  0059DC  D00B               	goto	l22717
 17225                           
 17226                           ; BSR set to: 0
 17227                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 17228  0059DE  0EC8               	movlw	low _BufferRF
 17229  0059E0  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 17230  0059E2  0E02               	movlw	high _BufferRF
 17231  0059E4  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 17232  0059E6  0E92               	movlw	low _classic_data
 17233  0059E8  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 17234  0059EA  0E02               	movlw	high _classic_data
 17235  0059EC  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 17236  0059EE  ECE3  F027         	call	_keeloqDecryptPacket	;wreg free
 17237  0059F2  D00A               	goto	L77
 17238  0059F4                     l22717:
 17239                           
 17240                           ; BSR set to: 0
 17241                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 17242  0059F4  0EC8               	movlw	low _BufferRF
 17243  0059F6  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 17244  0059F8  0E02               	movlw	high _BufferRF
 17245  0059FA  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 17246  0059FC  0E92               	movlw	low _classic_data
 17247  0059FE  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 17248  005A00  0E02               	movlw	high _classic_data
 17249  005A02  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 17250  005A04  EC8E  F03B         	call	_DecryptPacket_12BIT	;wreg free
 17251  005A08                     L77:
 17252  005A08  6F87               	movwf	readRFButtons@keyType& (0+255),b
 17253                           
 17254                           ; BSR set to: 0
 17255                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 17256  005A0A  C29E  F088         	movff	_classic_data+12,readRFButtons@key1
 17257                           
 17258                           ; BSR set to: 0
 17259                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 17260  005A0E  C296  F181         	movff	_classic_data+4,readRFButtons@serial
 17261  005A12  C297  F182         	movff	_classic_data+5,readRFButtons@serial+1
 17262  005A16  C298  F183         	movff	_classic_data+6,readRFButtons@serial+2
 17263  005A1A  C299  F184         	movff	_classic_data+7,readRFButtons@serial+3
 17264                           
 17265                           ; BSR set to: 0
 17266                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17267  005A1E  C29A  F185         	movff	_classic_data+8,readRFButtons@rollingCode
 17268  005A22  C29B  F186         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17269                           
 17270                           ; BSR set to: 0
 17271                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17272  005A26  C2A0  F197         	movff	_classic_data+14,readRFButtons@typeRemote
 17273                           
 17274                           ; BSR set to: 0
 17275                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17276  005A2A  0101               	movlb	1	; () banked
 17277  005A2C  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17278  005A2E  A4D8               	btfss	status,2,c
 17279  005A30  D01E               	goto	l22739
 17280                           
 17281                           ; BSR set to: 1
 17282                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17283  005A32  0100               	movlb	0	; () banked
 17284  005A34  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17285  005A36  B4D8               	btfsc	status,2,c
 17286  005A38  D044               	goto	u27720
 17287                           
 17288                           ; BSR set to: 0
 17289  005A3A  5188               	movf	readRFButtons@key1& (0+255),w,b
 17290  005A3C  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17291  005A3E  A4D8               	btfss	status,2,c
 17292  005A40  D040               	goto	u27720
 17293                           
 17294                           ; BSR set to: 0
 17295  005A42  0101               	movlb	1	; () banked
 17296  005A44  5181               	movf	readRFButtons@serial& (0+255),w,b
 17297  005A46  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17298  005A48  E13C               	bnz	l22751
 17299  005A4A  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17300  005A4C  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17301  005A4E  E139               	bnz	l22751
 17302  005A50  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17303  005A52  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17304  005A54  E136               	bnz	l22751
 17305  005A56  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17306  005A58  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17307  005A5A  A4D8               	btfss	status,2,c
 17308  005A5C  D032               	goto	u27720
 17309                           
 17310                           ; BSR set to: 1
 17311  005A5E  0100               	movlb	0	; () banked
 17312  005A60  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17313  005A62  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17314  005A64  A4D8               	btfss	status,2,c
 17315  005A66  D02D               	goto	u27720
 17316  005A68                     l1649:
 17317                           
 17318                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17319  005A68  0E00               	movlw	0
 17320  005A6A  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17321                           
 17322                           ;inputs_MC50.c: 275:         }
 17323  005A6C  D038               	goto	l1652
 17324  005A6E                     l22739:
 17325                           
 17326                           ; BSR set to: 1
 17327  005A6E  0100               	movlb	0	; () banked
 17328  005A70  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17329  005A72  B4D8               	btfsc	status,2,c
 17330  005A74  D026               	goto	u27720
 17331                           
 17332                           ; BSR set to: 0
 17333  005A76  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17334  005A78  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17335  005A7A  B4D8               	btfsc	status,2,c
 17336  005A7C  D00F               	goto	u27700
 17337                           
 17338                           ; BSR set to: 0
 17339  005A7E  0101               	movlb	1	; () banked
 17340  005A80  BFAF               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17341  005A82  D005               	goto	u27690
 17342  005A84  51AF               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17343  005A86  E10A               	bnz	l22747
 17344  005A88  05AE               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17345  005A8A  B0D8               	btfsc	status,0,c
 17346  005A8C  D007               	goto	u27700
 17347  005A8E                     u27690:
 17348                           
 17349                           ; BSR set to: 1
 17350  005A8E  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17351  005A90  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17352  005A92  E117               	bnz	l22751
 17353  005A94  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17354  005A96  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17355  005A98  A4D8               	btfss	status,2,c
 17356  005A9A  D013               	goto	u27720
 17357  005A9C                     u27700:
 17358  005A9C                     l22747:
 17359  005A9C  0100               	movlb	0	; () banked
 17360  005A9E  5188               	movf	readRFButtons@key1& (0+255),w,b
 17361  005AA0  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17362  005AA2  A4D8               	btfss	status,2,c
 17363  005AA4  D00E               	goto	u27720
 17364                           
 17365                           ; BSR set to: 0
 17366  005AA6  0101               	movlb	1	; () banked
 17367  005AA8  5181               	movf	readRFButtons@serial& (0+255),w,b
 17368  005AAA  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17369  005AAC  E10A               	bnz	u27720
 17370  005AAE  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17371  005AB0  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17372  005AB2  E107               	bnz	u27720
 17373  005AB4  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17374  005AB6  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17375  005AB8  E104               	bnz	u27720
 17376  005ABA  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17377  005ABC  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17378  005ABE  B4D8               	btfsc	status,2,c
 17379  005AC0  D003               	goto	l22753
 17380  005AC2                     u27720:
 17381  005AC2                     l22751:
 17382                           
 17383                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17384  005AC2  0E00               	movlw	0
 17385  005AC4  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17386  005AC6  D7D0               	goto	l1649
 17387  005AC8                     l22753:
 17388                           
 17389                           ; BSR set to: 1
 17390  005AC8  BFAF               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17391  005ACA  D005               	goto	u27730
 17392  005ACC  51AF               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17393  005ACE  E107               	bnz	l1652
 17394  005AD0  05AE               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17395  005AD2  B0D8               	btfsc	status,0,c
 17396  005AD4  D004               	goto	l1652
 17397  005AD6                     u27730:
 17398                           
 17399                           ; BSR set to: 1
 17400  005AD6  0E02               	movlw	2
 17401  005AD8  1997               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17402  005ADA  B4D8               	btfsc	status,2,c
 17403  005ADC  D7F2               	goto	u27720
 17404  005ADE                     l1652:
 17405                           
 17406                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17407  005ADE  0E00               	movlw	0
 17408  005AE0  0101               	movlb	1	; () banked
 17409  005AE2  6FAF               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17410  005AE4  0E0A               	movlw	10
 17411  005AE6  6FAE               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17412                           
 17413                           ; BSR set to: 1
 17414                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17415  005AE8  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17416                           
 17417                           ;inputs_MC50.c: 292:         if
 17418  005AEC  503B               	movf	_rfCMD^0,w,c	;volatile
 17419  005AEE  B4D8               	btfsc	status,2,c
 17420  005AF0  D01A               	goto	u27780
 17421                           
 17422                           ; BSR set to: 1
 17423  005AF2  0100               	movlb	0	; () banked
 17424  005AF4  5188               	movf	readRFButtons@key1& (0+255),w,b
 17425  005AF6  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17426  005AF8  A4D8               	btfss	status,2,c
 17427  005AFA  D015               	goto	u27780
 17428                           
 17429                           ; BSR set to: 0
 17430  005AFC  0101               	movlb	1	; () banked
 17431  005AFE  5181               	movf	readRFButtons@serial& (0+255),w,b
 17432  005B00  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17433  005B02  E111               	bnz	l1662
 17434  005B04  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17435  005B06  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17436  005B08  E10E               	bnz	l1662
 17437  005B0A  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17438  005B0C  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17439  005B0E  E10B               	bnz	l1662
 17440  005B10  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17441  005B12  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17442  005B14  A4D8               	btfss	status,2,c
 17443  005B16  D007               	goto	u27780
 17444                           
 17445                           ; BSR set to: 1
 17446  005B18  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17447  005B1A  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17448  005B1C  E104               	bnz	u27780
 17449  005B1E  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17450  005B20  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17451  005B22  B4D8               	btfsc	status,2,c
 17452  005B24  D00E               	goto	l22769
 17453  005B26                     u27780:
 17454  005B26                     l1662:
 17455                           
 17456                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17457  005B26  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17458                           
 17459                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17460  005B2A  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17461  005B2E  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17462  005B32  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17463  005B36  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17464                           
 17465                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17466  005B3A  C2A1  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17467                           
 17468                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17469  005B3E  0E00               	movlw	0
 17470  005B40  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17471  005B42                     l22769:
 17472                           
 17473                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17474  005B42  C185  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17475  005B46  C186  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17476  005B4A                     l22771:
 17477                           
 17478                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17479  005B4A  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17480  005B4C  A4D8               	btfss	status,2,c
 17481  005B4E  D003               	goto	l22775
 17482                           
 17483                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17484  005B50  0E00               	movlw	0
 17485  005B52  6E3B               	movwf	_rfCMD^0,c	;volatile
 17486                           
 17487                           ;inputs_MC50.c: 313:     }
 17488  005B54  0012               	return	
 17489  005B56                     l22775:
 17490  005B56  503B               	movf	_rfCMD^0,w,c	;volatile
 17491  005B58  B4D8               	btfsc	status,2,c
 17492  005B5A  0012               	return	
 17493                           
 17494                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17495  005B5C  0EFA               	movlw	250
 17496  005B5E  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17497  005B60  0012               	return	
 17498                           
 17499                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17500  005B62  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17501  005B64  0012               	return		;funcret
 17502  005B66                     __end_of_readRFButtons:
 17503                           	callstack 0
 17504                           
 17505 ;; *************** function _keeloqDecryptPacket *****************
 17506 ;; Defined at:
 17507 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17508 ;; Parameters:    Size  Location     Type
 17509 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17510 ;;		 -> BufferRF(9), 
 17511 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17512 ;;		 -> classic_data(16), 
 17513 ;; Auto vars:     Size  Location     Type
 17514 ;;  commandType     1   17[BANK0 ] enum E10539
 17515 ;;  hop_error       1   16[BANK0 ] enum E10730
 17516 ;; Return value:  Size  Location     Type
 17517 ;;                  1    wreg      enum E10539
 17518 ;; Registers used:
 17519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17520 ;; Tracked objects:
 17521 ;;		On entry : 3F/0
 17522 ;;		On exit  : 3F/0
 17523 ;;		Unchanged: 0/0
 17524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17525 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17526 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17527 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17528 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17529 ;;Total ram usage:       10 bytes
 17530 ;; Hardware stack levels used: 1
 17531 ;; Hardware stack levels required when called: 14
 17532 ;; This function calls:
 17533 ;;		_DecCHK
 17534 ;;		_HopCHK
 17535 ;;		_keeloq_classic_decrypt_packet
 17536 ;;		_memcpy
 17537 ;;		_validateRemoteSerialNumber
 17538 ;;		_verifyProgramingMode
 17539 ;; This function is called by:
 17540 ;;		_readRFButtons
 17541 ;; This function uses a non-reentrant model
 17542 ;;
 17543                           
 17544                           	psect	text60
 17545  004FC6                     __ptext60:
 17546                           	callstack 0
 17547  004FC6                     _keeloqDecryptPacket:
 17548                           	callstack 15
 17549                           
 17550                           ; BSR set to: 0
 17551                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17552                           
 17553                           ;incstack = 0
 17554  004FC6  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17555  004FCA  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17556  004FCE  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17557  004FD2  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17558  004FD6  0E00               	movlw	0
 17559  004FD8  6E15               	movwf	(memcpy@n+1)^0,c
 17560  004FDA  0E08               	movlw	8
 17561  004FDC  6E14               	movwf	memcpy@n^0,c
 17562  004FDE  EC52  F044         	call	_memcpy	;wreg free
 17563                           
 17564                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17565  004FE2  0E08               	movlw	8
 17566  004FE4  0100               	movlb	0	; () banked
 17567  004FE6  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17568  004FE8  6E10               	movwf	memcpy@d1^0,c
 17569  004FEA  0E00               	movlw	0
 17570  004FEC  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17571  004FEE  6E11               	movwf	(memcpy@d1+1)^0,c
 17572  004FF0  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17573  004FF4  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17574  004FF8  0E00               	movlw	0
 17575  004FFA  6E15               	movwf	(memcpy@n+1)^0,c
 17576  004FFC  0E04               	movlw	4
 17577  004FFE  6E14               	movwf	memcpy@n^0,c
 17578  005000  EC52  F044         	call	_memcpy	;wreg free
 17579                           
 17580                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17581  005004  0100               	movlb	0	; () banked
 17582  005006  EE20 F00C          	lfsr	2,12
 17583  00500A  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17584  00500C  26D9               	addwf	fsr2l,f,c
 17585  00500E  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17586  005010  22DA               	addwfc	fsr2h,f,c
 17587  005012  EE10 F007          	lfsr	1,7
 17588  005016  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17589  005018  26E1               	addwf	fsr1l,f,c
 17590  00501A  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17591  00501C  22E2               	addwfc	fsr1h,f,c
 17592  00501E  50E7               	movf	indf1,w,c
 17593  005020  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17594  005022  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17595  005024  0B0F               	andlw	15
 17596  005026  6EDF               	movwf	indf2,c
 17597                           
 17598                           ; BSR set to: 0
 17599                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17600  005028  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17601  00502C  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17602  005030  EC6C  F045         	call	_verifyProgramingMode	;wreg free
 17603  005034  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17604                           
 17605                           ; BSR set to: 0
 17606                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17607  005036  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17608  005038  A4D8               	btfss	status,2,c
 17609  00503A  D019               	goto	l21255
 17610                           
 17611                           ; BSR set to: 0
 17612                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17613  00503C  EE20 F004          	lfsr	2,4
 17614  005040  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17615  005042  26D9               	addwf	fsr2l,f,c
 17616  005044  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17617  005046  22DA               	addwfc	fsr2h,f,c
 17618  005048  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17619  00504C  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17620  005050  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17621  005054  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17622  005058  0E00               	movlw	0
 17623  00505A  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17624  00505C  0E0F               	movlw	15
 17625  00505E  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17626  005060  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17627  005062  0E00               	movlw	0
 17628  005064  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17629  005066  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17630  005068  EC80  F02A         	call	_validateRemoteSerialNumber	;wreg free
 17631  00506C  D004               	goto	L78
 17632  00506E                     l21255:
 17633                           
 17634                           ; BSR set to: 0
 17635  00506E  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17636  005070  A4D8               	btfss	status,2,c
 17637  005072  D002               	goto	l21259
 17638                           
 17639                           ; BSR set to: 0
 17640                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17641  005074  0E00               	movlw	0
 17642  005076                     L78:
 17643  005076  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17644  005078                     l21259:
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17648  005078  EE20 F004          	lfsr	2,4
 17649  00507C  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17650  00507E  26D9               	addwf	fsr2l,f,c
 17651  005080  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17652  005082  22DA               	addwfc	fsr2h,f,c
 17653  005084  0EFF               	movlw	255
 17654  005086  14DE               	andwf	postinc2,w,c
 17655  005088  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17656  00508A  0EFF               	movlw	255
 17657  00508C  14DE               	andwf	postinc2,w,c
 17658  00508E  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17659  005090  0EFF               	movlw	255
 17660  005092  14DE               	andwf	postinc2,w,c
 17661  005094  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17662  005096  0E0F               	movlw	15
 17663  005098  14DE               	andwf	postinc2,w,c
 17664  00509A  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17665  00509C  EE20 F004          	lfsr	2,4
 17666  0050A0  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17667  0050A2  26D9               	addwf	fsr2l,f,c
 17668  0050A4  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17669  0050A6  22DA               	addwfc	fsr2h,f,c
 17670  0050A8  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17671  0050AC  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17672  0050B0  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17673  0050B4  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17674                           
 17675                           ; BSR set to: 0
 17676                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17677  0050B8  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17678  0050BC  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17679  0050C0  EC26  F042         	call	_keeloq_classic_decrypt_packet	;wreg free
 17680                           
 17681                           ; BSR set to: 0
 17682                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17683  0050C4  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17684  0050C6  A4D8               	btfss	status,2,c
 17685  0050C8  D01B               	goto	l21277
 17686                           
 17687                           ; BSR set to: 0
 17688                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17689  0050CA  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17690  0050CE  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17691  0050D2  EC86  F045         	call	_DecCHK	;wreg free
 17692  0050D6  0900               	iorlw	0
 17693  0050D8  A4D8               	btfss	status,2,c
 17694  0050DA  D008               	goto	l21269
 17695                           
 17696                           ; BSR set to: 0
 17697                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17698  0050DC  EE20 F00E          	lfsr	2,14
 17699  0050E0  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17700  0050E2  26D9               	addwf	fsr2l,f,c
 17701  0050E4  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17702  0050E6  22DA               	addwfc	fsr2h,f,c
 17703  0050E8  0E01               	movlw	1
 17704  0050EA  D007               	goto	L79
 17705  0050EC                     l21269:
 17706                           
 17707                           ; BSR set to: 0
 17708                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17709  0050EC  EE20 F00E          	lfsr	2,14
 17710  0050F0  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17711  0050F2  26D9               	addwf	fsr2l,f,c
 17712  0050F4  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17713  0050F6  22DA               	addwfc	fsr2h,f,c
 17714  0050F8  0E00               	movlw	0
 17715  0050FA                     L79:
 17716  0050FA  6EDF               	movwf	indf2,c
 17717  0050FC                     l21271:
 17718                           
 17719                           ; BSR set to: 0
 17720                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17721  0050FC  0E00               	movlw	0
 17722  0050FE  0012               	return	
 17723  005100                     l21277:
 17724                           
 17725                           ; BSR set to: 0
 17726  005100  0E06               	movlw	6
 17727  005102  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17728  005104  B4D8               	btfsc	status,2,c
 17729  005106  D004               	goto	u24680
 17730                           
 17731                           ; BSR set to: 0
 17732  005108  0E05               	movlw	5
 17733  00510A  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17734  00510C  A4D8               	btfss	status,2,c
 17735  00510E  D01B               	goto	l21287
 17736  005110                     u24680:
 17737                           
 17738                           ; BSR set to: 0
 17739                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17740  005110  EE20 F004          	lfsr	2,4
 17741  005114  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17742  005116  26D9               	addwf	fsr2l,f,c
 17743  005118  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17744  00511A  22DA               	addwfc	fsr2h,f,c
 17745  00511C  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17746  005120  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17747  005124  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17748  005128  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17749  00512C  0E01               	movlw	1
 17750  00512E  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17751  005130  0E0F               	movlw	15
 17752  005132  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17753  005134  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17754  005136  0E00               	movlw	0
 17755  005138  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17756  00513A  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17757  00513C  EC80  F02A         	call	_validateRemoteSerialNumber	;wreg free
 17758  005140  0900               	iorlw	0
 17759  005142  B4D8               	btfsc	status,2,c
 17760  005144  D7DB               	goto	l21271
 17761  005146                     l21287:
 17762                           
 17763                           ; BSR set to: 0
 17764                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17765  005146  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17766  00514A  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17767  00514E  EC86  F045         	call	_DecCHK	;wreg free
 17768  005152  0900               	iorlw	0
 17769  005154  A4D8               	btfss	status,2,c
 17770  005156  D00D               	goto	l21303
 17771                           
 17772                           ; BSR set to: 0
 17773                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17774  005158  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17775  00515A  B4D8               	btfsc	status,2,c
 17776  00515C  D7CF               	goto	l21271
 17777                           
 17778                           ; BSR set to: 0
 17779                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17780  00515E  EE20 F00E          	lfsr	2,14
 17781  005162  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17782  005164  26D9               	addwf	fsr2l,f,c
 17783  005166  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17784  005168  22DA               	addwfc	fsr2h,f,c
 17785  00516A  0E01               	movlw	1
 17786  00516C  6EDF               	movwf	indf2,c
 17787                           
 17788                           ; BSR set to: 0
 17789                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17790  00516E  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17791  005170  0012               	return	
 17792  005172                     l21303:
 17793                           
 17794                           ; BSR set to: 0
 17795                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17796  005172  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17797  005176  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17798  00517A  EC60  F03C         	call	_HopCHK	;wreg free
 17799  00517E  0100               	movlb	0	; () banked
 17800  005180  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17801                           
 17802                           ; BSR set to: 0
 17803                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17804  005182  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17805  005184  A4D8               	btfss	status,2,c
 17806  005186  D7BA               	goto	l21271
 17807                           
 17808                           ; BSR set to: 0
 17809                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17810  005188  EE20 F00E          	lfsr	2,14
 17811  00518C  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17812  00518E  26D9               	addwf	fsr2l,f,c
 17813  005190  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17814  005192  22DA               	addwfc	fsr2h,f,c
 17815  005194  0E00               	movlw	0
 17816  005196  D7EA               	goto	L80
 17817  005198                     __end_of_keeloqDecryptPacket:
 17818                           	callstack 0
 17819                           
 17820 ;; *************** function _verifyProgramingMode *****************
 17821 ;; Defined at:
 17822 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17823 ;; Parameters:    Size  Location     Type
 17824 ;;  classic_data    2   15[COMRAM] PTR struct .
 17825 ;;		 -> classic_data(16), 
 17826 ;; Auto vars:     Size  Location     Type
 17827 ;;		None
 17828 ;; Return value:  Size  Location     Type
 17829 ;;                  1    wreg      enum E10539
 17830 ;; Registers used:
 17831 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17832 ;; Tracked objects:
 17833 ;;		On entry : 3F/0
 17834 ;;		On exit  : 3F/0
 17835 ;;		Unchanged: 3F/0
 17836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17840 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17841 ;;Total ram usage:        3 bytes
 17842 ;; Hardware stack levels used: 1
 17843 ;; Hardware stack levels required when called: 4
 17844 ;; This function calls:
 17845 ;;		Nothing
 17846 ;; This function is called by:
 17847 ;;		_keeloqDecryptPacket
 17848 ;; This function uses a non-reentrant model
 17849 ;;
 17850                           
 17851                           	psect	text61
 17852  008AD8                     __ptext61:
 17853                           	callstack 0
 17854  008AD8                     _verifyProgramingMode:
 17855                           	callstack 24
 17856                           
 17857                           ; BSR set to: 0
 17858                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17859                           
 17860                           ; BSR set to: 0
 17861                           ;incstack = 0
 17862  008AD8  EE20 F00C          	lfsr	2,12
 17863  008ADC  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17864  008ADE  26D9               	addwf	fsr2l,f,c
 17865  008AE0  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17866  008AE2  22DA               	addwfc	fsr2h,f,c
 17867  008AE4  0E0A               	movlw	10
 17868  008AE6  18DE               	xorwf	postinc2,w,c
 17869  008AE8  A4D8               	btfss	status,2,c
 17870  008AEA  D002               	goto	l20261
 17871                           
 17872                           ; BSR set to: 0
 17873                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17874  008AEC  0E06               	movlw	6
 17875  008AEE  0012               	return	
 17876  008AF0                     l20261:
 17877                           
 17878                           ; BSR set to: 0
 17879  008AF0  EE20 F00C          	lfsr	2,12
 17880  008AF4  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17881  008AF6  26D9               	addwf	fsr2l,f,c
 17882  008AF8  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17883  008AFA  22DA               	addwfc	fsr2h,f,c
 17884  008AFC  0E05               	movlw	5
 17885  008AFE  18DE               	xorwf	postinc2,w,c
 17886  008B00  A4D8               	btfss	status,2,c
 17887  008B02  D002               	goto	l20269
 17888                           
 17889                           ; BSR set to: 0
 17890                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17891  008B04  0E05               	movlw	5
 17892  008B06  0012               	return	
 17893  008B08                     l20269:
 17894                           
 17895                           ; BSR set to: 0
 17896                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17897  008B08  0E00               	movlw	0
 17898                           
 17899                           ; BSR set to: 0
 17900  008B0A  0012               	return		;funcret
 17901  008B0C                     __end_of_verifyProgramingMode:
 17902                           	callstack 0
 17903                           
 17904 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17905 ;; Defined at:
 17906 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17907 ;; Parameters:    Size  Location     Type
 17908 ;;  data            2   55[COMRAM] PTR struct .
 17909 ;;		 -> classic_data(16), 
 17910 ;; Auto vars:     Size  Location     Type
 17911 ;;		None
 17912 ;; Return value:  Size  Location     Type
 17913 ;;                  1    wreg      void 
 17914 ;; Registers used:
 17915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17916 ;; Tracked objects:
 17917 ;;		On entry : 3F/0
 17918 ;;		On exit  : 3F/0
 17919 ;;		Unchanged: 0/0
 17920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17921 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17923 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17924 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17925 ;;Total ram usage:        5 bytes
 17926 ;; Hardware stack levels used: 1
 17927 ;; Hardware stack levels required when called: 7
 17928 ;; This function calls:
 17929 ;;		_Decrypt
 17930 ;;		_NormalKeyGen
 17931 ;; This function is called by:
 17932 ;;		_keeloqDecryptPacket
 17933 ;; This function uses a non-reentrant model
 17934 ;;
 17935                           
 17936                           	psect	text62
 17937  00844C                     __ptext62:
 17938                           	callstack 0
 17939  00844C                     _keeloq_classic_decrypt_packet:
 17940                           	callstack 21
 17941                           
 17942                           ; BSR set to: 0
 17943                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17944                           
 17945                           ; BSR set to: 0
 17946                           ;incstack = 0
 17947  00844C  0E04               	movlw	4
 17948  00844E  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17949  008450  6E26               	movwf	NormalKeyGen@serial^0,c
 17950  008452  0E00               	movlw	0
 17951  008454  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17952  008456  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17953  008458  EC21  F034         	call	_NormalKeyGen	;wreg free
 17954                           
 17955                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17956  00845C  0E08               	movlw	8
 17957  00845E  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17958  008460  6E1B               	movwf	Decrypt@packet^0,c
 17959  008462  0E00               	movlw	0
 17960  008464  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17961  008466  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17962  008468  EC88  F037         	call	_Decrypt	;wreg free
 17963                           
 17964                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17965  00846C  EE20 F00D          	lfsr	2,13
 17966  008470  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17967  008472  26D9               	addwf	fsr2l,f,c
 17968  008474  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17969  008476  22DA               	addwfc	fsr2h,f,c
 17970  008478  EE10 F00A          	lfsr	1,10
 17971  00847C  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17972  00847E  26E1               	addwf	fsr1l,f,c
 17973  008480  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17974  008482  22E2               	addwfc	fsr1h,f,c
 17975  008484  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17976  008488  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17977  00848C  0E0C               	movlw	12
 17978  00848E  0100               	movlb	0	; () banked
 17979  008490  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17980  008492                     u23375:
 17981  008492  90D8               	bcf	status,0,c
 17982  008494  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17983  008496  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17984  008498  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17985  00849A  D7FB               	goto	u23375
 17986  00849C  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17987  00849E  0B0F               	andlw	15
 17988  0084A0  6EDF               	movwf	indf2,c
 17989                           
 17990                           ; BSR set to: 0
 17991  0084A2  0012               	return		;funcret
 17992  0084A4                     __end_of_keeloq_classic_decrypt_packet:
 17993                           	callstack 0
 17994                           
 17995 ;; *************** function _NormalKeyGen *****************
 17996 ;; Defined at:
 17997 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17998 ;; Parameters:    Size  Location     Type
 17999 ;;  serial          2   37[COMRAM] PTR unsigned long 
 18000 ;;		 -> classic_data(16), 
 18001 ;; Auto vars:     Size  Location     Type
 18002 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 18003 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 18004 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 18005 ;; Return value:  Size  Location     Type
 18006 ;;                  1    wreg      void 
 18007 ;; Registers used:
 18008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18009 ;; Tracked objects:
 18010 ;;		On entry : 3F/0
 18011 ;;		On exit  : 0/0
 18012 ;;		Unchanged: 0/0
 18013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18015 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18017 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18018 ;;Total ram usage:       18 bytes
 18019 ;; Hardware stack levels used: 1
 18020 ;; Hardware stack levels required when called: 6
 18021 ;; This function calls:
 18022 ;;		_Decrypt
 18023 ;;		_LoadManufCode
 18024 ;;		_memcpy
 18025 ;; This function is called by:
 18026 ;;		_keeloq_classic_decrypt_packet
 18027 ;; This function uses a non-reentrant model
 18028 ;;
 18029                           
 18030                           	psect	text63
 18031  006842                     __ptext63:
 18032                           	callstack 0
 18033  006842                     _NormalKeyGen:
 18034                           	callstack 21
 18035                           
 18036                           ; BSR set to: 0
 18037                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 18038                           
 18039                           ; BSR set to: 0
 18040                           ;incstack = 0
 18041  006842  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 18042  006844  6E10               	movwf	memcpy@d1^0,c
 18043  006846  6A11               	clrf	(memcpy@d1+1)^0,c
 18044  006848  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 18045  00684C  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 18046  006850  0E00               	movlw	0
 18047  006852  6E15               	movwf	(memcpy@n+1)^0,c
 18048  006854  0E04               	movlw	4
 18049  006856  6E14               	movwf	memcpy@n^0,c
 18050  006858  EC52  F044         	call	_memcpy	;wreg free
 18051                           
 18052                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 18053  00685C  0E28               	movlw	low NormalKeyGen@HOPtemp
 18054  00685E  6E10               	movwf	memcpy@d1^0,c
 18055  006860  6A11               	clrf	(memcpy@d1+1)^0,c
 18056  006862  0E30               	movlw	low NormalKeyGen@Buffer
 18057  006864  6E12               	movwf	memcpy@s1^0,c
 18058  006866  6A13               	clrf	(memcpy@s1+1)^0,c
 18059  006868  0E00               	movlw	0
 18060  00686A  6E15               	movwf	(memcpy@n+1)^0,c
 18061  00686C  0E04               	movlw	4
 18062  00686E  6E14               	movwf	memcpy@n^0,c
 18063  006870  EC52  F044         	call	_memcpy	;wreg free
 18064                           
 18065                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 18066  006874  0ED9               	movlw	low NormalKeyGen@SEED
 18067  006876  6E10               	movwf	memcpy@d1^0,c
 18068  006878  0E02               	movlw	high NormalKeyGen@SEED
 18069  00687A  6E11               	movwf	(memcpy@d1+1)^0,c
 18070  00687C  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 18071  00687E  6E12               	movwf	memcpy@s1^0,c
 18072  006880  6A13               	clrf	(memcpy@s1+1)^0,c
 18073  006882  0E00               	movlw	0
 18074  006884  6E15               	movwf	(memcpy@n+1)^0,c
 18075  006886  0E04               	movlw	4
 18076  006888  6E14               	movwf	memcpy@n^0,c
 18077  00688A  EC52  F044         	call	_memcpy	;wreg free
 18078                           
 18079                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 18080  00688E  0E0F               	movlw	15
 18081  006890  0102               	movlb	2	; () banked
 18082  006892  17DC               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 18083                           
 18084                           ; BSR set to: 2
 18085                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 18086  006894  0E30               	movlw	low NormalKeyGen@Buffer
 18087  006896  6E10               	movwf	memcpy@d1^0,c
 18088  006898  6A11               	clrf	(memcpy@d1+1)^0,c
 18089  00689A  0ED9               	movlw	low NormalKeyGen@SEED
 18090  00689C  6E12               	movwf	memcpy@s1^0,c
 18091  00689E  0E02               	movlw	high NormalKeyGen@SEED
 18092  0068A0  6E13               	movwf	(memcpy@s1+1)^0,c
 18093  0068A2  0E00               	movlw	0
 18094  0068A4  6E15               	movwf	(memcpy@n+1)^0,c
 18095  0068A6  0E04               	movlw	4
 18096  0068A8  6E14               	movwf	memcpy@n^0,c
 18097  0068AA  EC52  F044         	call	_memcpy	;wreg free
 18098                           
 18099                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 18100  0068AE  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 18101                           
 18102                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 18103  0068B0  EC9E  F047         	call	_LoadManufCode	;wreg free
 18104                           
 18105                           ; BSR set to: 2
 18106                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 18107  0068B4  0E30               	movlw	low NormalKeyGen@Buffer
 18108  0068B6  6E1B               	movwf	Decrypt@packet^0,c
 18109  0068B8  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18110  0068BA  EC88  F037         	call	_Decrypt	;wreg free
 18111                           
 18112                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 18113  0068BE  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18114  0068C0  6E10               	movwf	memcpy@d1^0,c
 18115  0068C2  6A11               	clrf	(memcpy@d1+1)^0,c
 18116  0068C4  0E30               	movlw	low NormalKeyGen@Buffer
 18117  0068C6  6E12               	movwf	memcpy@s1^0,c
 18118  0068C8  6A13               	clrf	(memcpy@s1+1)^0,c
 18119  0068CA  0E00               	movlw	0
 18120  0068CC  6E15               	movwf	(memcpy@n+1)^0,c
 18121  0068CE  0E04               	movlw	4
 18122  0068D0  6E14               	movwf	memcpy@n^0,c
 18123  0068D2  EC52  F044         	call	_memcpy	;wreg free
 18124                           
 18125                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 18126  0068D6  0E30               	movlw	low NormalKeyGen@Buffer
 18127  0068D8  6E10               	movwf	memcpy@d1^0,c
 18128  0068DA  6A11               	clrf	(memcpy@d1+1)^0,c
 18129  0068DC  0ED9               	movlw	low NormalKeyGen@SEED
 18130  0068DE  6E12               	movwf	memcpy@s1^0,c
 18131  0068E0  0E02               	movlw	high NormalKeyGen@SEED
 18132  0068E2  6E13               	movwf	(memcpy@s1+1)^0,c
 18133  0068E4  0E00               	movlw	0
 18134  0068E6  6E15               	movwf	(memcpy@n+1)^0,c
 18135  0068E8  0E04               	movlw	4
 18136  0068EA  6E14               	movwf	memcpy@n^0,c
 18137  0068EC  EC52  F044         	call	_memcpy	;wreg free
 18138                           
 18139                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 18140  0068F0  0E60               	movlw	96
 18141  0068F2  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 18142                           
 18143                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 18144  0068F4  EC9E  F047         	call	_LoadManufCode	;wreg free
 18145                           
 18146                           ; BSR set to: 2
 18147                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 18148  0068F8  0E30               	movlw	low NormalKeyGen@Buffer
 18149  0068FA  6E1B               	movwf	Decrypt@packet^0,c
 18150  0068FC  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18151  0068FE  EC88  F037         	call	_Decrypt	;wreg free
 18152                           
 18153                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 18154  006902  0ED5               	movlw	low (_DKEY+4)
 18155  006904  6E10               	movwf	memcpy@d1^0,c
 18156  006906  0E02               	movlw	high (_DKEY+4)
 18157  006908  6E11               	movwf	(memcpy@d1+1)^0,c
 18158  00690A  0E30               	movlw	low NormalKeyGen@Buffer
 18159  00690C  6E12               	movwf	memcpy@s1^0,c
 18160  00690E  6A13               	clrf	(memcpy@s1+1)^0,c
 18161  006910  0E00               	movlw	0
 18162  006912  6E15               	movwf	(memcpy@n+1)^0,c
 18163  006914  0E04               	movlw	4
 18164  006916  6E14               	movwf	memcpy@n^0,c
 18165  006918  EC52  F044         	call	_memcpy	;wreg free
 18166                           
 18167                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 18168  00691C  0ED1               	movlw	low _DKEY
 18169  00691E  6E10               	movwf	memcpy@d1^0,c
 18170  006920  0E02               	movlw	high _DKEY
 18171  006922  6E11               	movwf	(memcpy@d1+1)^0,c
 18172  006924  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18173  006926  6E12               	movwf	memcpy@s1^0,c
 18174  006928  6A13               	clrf	(memcpy@s1+1)^0,c
 18175  00692A  0E00               	movlw	0
 18176  00692C  6E15               	movwf	(memcpy@n+1)^0,c
 18177  00692E  0E04               	movlw	4
 18178  006930  6E14               	movwf	memcpy@n^0,c
 18179  006932  EC52  F044         	call	_memcpy	;wreg free
 18180                           
 18181                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 18182  006936  0E30               	movlw	low NormalKeyGen@Buffer
 18183  006938  6E10               	movwf	memcpy@d1^0,c
 18184  00693A  6A11               	clrf	(memcpy@d1+1)^0,c
 18185  00693C  0E28               	movlw	low NormalKeyGen@HOPtemp
 18186  00693E  6E12               	movwf	memcpy@s1^0,c
 18187  006940  6A13               	clrf	(memcpy@s1+1)^0,c
 18188  006942  0E00               	movlw	0
 18189  006944  6E15               	movwf	(memcpy@n+1)^0,c
 18190  006946  0E04               	movlw	4
 18191  006948  6E14               	movwf	memcpy@n^0,c
 18192  00694A  EC52  F044         	call	_memcpy	;wreg free
 18193  00694E  0012               	return		;funcret
 18194  006950                     __end_of_NormalKeyGen:
 18195                           	callstack 0
 18196                           
 18197 ;; *************** function _LoadManufCode *****************
 18198 ;; Defined at:
 18199 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 18200 ;; Parameters:    Size  Location     Type
 18201 ;;		None
 18202 ;; Auto vars:     Size  Location     Type
 18203 ;;		None
 18204 ;; Return value:  Size  Location     Type
 18205 ;;                  1    wreg      void 
 18206 ;; Registers used:
 18207 ;;		wreg, status,2
 18208 ;; Tracked objects:
 18209 ;;		On entry : 0/2
 18210 ;;		On exit  : 3F/2
 18211 ;;		Unchanged: 0/0
 18212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18217 ;;Total ram usage:        0 bytes
 18218 ;; Hardware stack levels used: 1
 18219 ;; Hardware stack levels required when called: 4
 18220 ;; This function calls:
 18221 ;;		Nothing
 18222 ;; This function is called by:
 18223 ;;		_NormalKeyGen
 18224 ;; This function uses a non-reentrant model
 18225 ;;
 18226                           
 18227                           	psect	text64
 18228  008F3C                     __ptext64:
 18229                           	callstack 0
 18230  008F3C                     _LoadManufCode:
 18231                           	callstack 22
 18232                           
 18233                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 18234                           
 18235                           ;incstack = 0
 18236  008F3C  0102               	movlb	2	; () banked
 18237  008F3E  69D1               	setf	_DKEY& (0+255),b
 18238                           
 18239                           ; BSR set to: 2
 18240                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 18241  008F40  0ECA               	movlw	202
 18242  008F42  6FD2               	movwf	(_DKEY+1)& (0+255),b
 18243                           
 18244                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 18245  008F44  0E76               	movlw	118
 18246  008F46  6FD3               	movwf	(_DKEY+2)& (0+255),b
 18247                           
 18248                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 18249  008F48  0E94               	movlw	148
 18250  008F4A  6FD4               	movwf	(_DKEY+3)& (0+255),b
 18251                           
 18252                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 18253  008F4C  0E22               	movlw	34
 18254  008F4E  6FD5               	movwf	(_DKEY+4)& (0+255),b
 18255                           
 18256                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 18257  008F50  0E68               	movlw	104
 18258  008F52  6FD6               	movwf	(_DKEY+5)& (0+255),b
 18259                           
 18260                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18261  008F54  0E27               	movlw	39
 18262  008F56  6FD7               	movwf	(_DKEY+6)& (0+255),b
 18263                           
 18264                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18265  008F58  0E57               	movlw	87
 18266  008F5A  6FD8               	movwf	(_DKEY+7)& (0+255),b
 18267                           
 18268                           ; BSR set to: 2
 18269  008F5C  0012               	return		;funcret
 18270  008F5E                     __end_of_LoadManufCode:
 18271                           	callstack 0
 18272                           
 18273 ;; *************** function _Decrypt *****************
 18274 ;; Defined at:
 18275 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18276 ;; Parameters:    Size  Location     Type
 18277 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18278 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18279 ;; Auto vars:     Size  Location     Type
 18280 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18281 ;;  aux             1   32[COMRAM] unsigned char 
 18282 ;;  p               1   31[COMRAM] char 
 18283 ;;  j               1   30[COMRAM] unsigned char 
 18284 ;;  i               1   29[COMRAM] unsigned char 
 18285 ;;  key             1   28[COMRAM] unsigned char 
 18286 ;; Return value:  Size  Location     Type
 18287 ;;                  1    wreg      void 
 18288 ;; Registers used:
 18289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18290 ;; Tracked objects:
 18291 ;;		On entry : 0/0
 18292 ;;		On exit  : 0/0
 18293 ;;		Unchanged: 0/0
 18294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18296 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18298 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18299 ;;Total ram usage:       11 bytes
 18300 ;; Hardware stack levels used: 1
 18301 ;; Hardware stack levels required when called: 5
 18302 ;; This function calls:
 18303 ;;		_memcpy
 18304 ;; This function is called by:
 18305 ;;		_NormalKeyGen
 18306 ;;		_keeloq_classic_decrypt_packet
 18307 ;; This function uses a non-reentrant model
 18308 ;;
 18309                           
 18310                           	psect	text65
 18311  006F10                     __ptext65:
 18312                           	callstack 0
 18313  006F10                     _Decrypt:
 18314                           	callstack 21
 18315                           
 18316                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18317                           
 18318                           ; BSR set to: 2
 18319                           ;incstack = 0
 18320  006F10  0E22               	movlw	low Decrypt@Buffer
 18321  006F12  6E10               	movwf	memcpy@d1^0,c
 18322  006F14  6A11               	clrf	(memcpy@d1+1)^0,c
 18323  006F16  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18324  006F1A  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18325  006F1E  0E00               	movlw	0
 18326  006F20  6E15               	movwf	(memcpy@n+1)^0,c
 18327  006F22  0E04               	movlw	4
 18328  006F24  6E14               	movwf	memcpy@n^0,c
 18329  006F26  EC52  F044         	call	_memcpy	;wreg free
 18330                           
 18331                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18332  006F2A  0E01               	movlw	1
 18333  006F2C  6E20               	movwf	Decrypt@p^0,c
 18334                           
 18335                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18336  006F2E  0E42               	movlw	66
 18337  006F30  6E1F               	movwf	Decrypt@j^0,c
 18338  006F32                     l19473:
 18339                           
 18340                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18341  006F32  0ED1               	movlw	low _DKEY
 18342  006F34  2420               	addwf	Decrypt@p^0,w,c
 18343  006F36  6ED9               	movwf	fsr2l,c
 18344  006F38  6ADA               	clrf	fsr2h,c
 18345  006F3A  0E02               	movlw	high _DKEY
 18346  006F3C  22DA               	addwfc	fsr2h,f,c
 18347  006F3E  50DF               	movf	indf2,w,c
 18348  006F40  6E1D               	movwf	Decrypt@key^0,c
 18349  006F42  0620               	decf	Decrypt@p^0,f,c
 18350                           
 18351                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18352  006F44  AE20               	btfss	Decrypt@p^0,7,c
 18353  006F46  D002               	goto	l19481
 18354                           
 18355                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18356  006F48  0E08               	movlw	8
 18357  006F4A  2620               	addwf	Decrypt@p^0,f,c
 18358  006F4C                     l19481:
 18359                           
 18360                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18361  006F4C  0E08               	movlw	8
 18362  006F4E  6E1E               	movwf	Decrypt@i^0,c
 18363  006F50                     l1854:
 18364                           
 18365                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18366  006F50  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18367  006F52  D006               	goto	l1856
 18368                           
 18369                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18370  006F54  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18371  006F56  D002               	goto	l19491
 18372                           
 18373                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18374  006F58  0E3A               	movlw	58
 18375  006F5A  D007               	goto	L81
 18376  006F5C                     l19491:
 18377                           
 18378                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18379  006F5C  0E5C               	movlw	92
 18380  006F5E  D005               	goto	L81
 18381  006F60                     l1856:
 18382                           
 18383                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18384  006F60  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18385  006F62  D002               	goto	l19495
 18386                           
 18387                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18388  006F64  0E74               	movlw	116
 18389  006F66  D001               	goto	L81
 18390  006F68                     l19495:
 18391                           
 18392                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18393  006F68  0E2E               	movlw	46
 18394  006F6A                     L81:
 18395  006F6A  6E21               	movwf	Decrypt@aux^0,c
 18396                           
 18397                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18398  006F6C  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18399                           
 18400                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18401  006F6E  3A21               	swapf	Decrypt@aux^0,f,c
 18402                           
 18403                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18404  006F70  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18405  006F72  D004               	goto	l19503
 18406                           
 18407                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18408  006F74  90D8               	bcf	status,0,c
 18409  006F76  3621               	rlcf	Decrypt@aux^0,f,c
 18410  006F78  90D8               	bcf	status,0,c
 18411  006F7A  3621               	rlcf	Decrypt@aux^0,f,c
 18412  006F7C                     l19503:
 18413                           
 18414                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18415  006F7C  A022               	btfss	Decrypt@Buffer^0,0,c
 18416  006F7E  D002               	goto	l1864
 18417                           
 18418                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18419  006F80  90D8               	bcf	status,0,c
 18420  006F82  3621               	rlcf	Decrypt@aux^0,f,c
 18421  006F84                     l1864:
 18422                           
 18423                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18424  006F84  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18425  006F86  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18426  006F88  181D               	xorwf	Decrypt@key^0,w,c
 18427  006F8A  1A21               	xorwf	Decrypt@aux^0,f,c
 18428                           
 18429                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18430  006F8C  90D8               	bcf	status,0,c
 18431  006F8E  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18432  006F90  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18433  006F92  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18434                           
 18435                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18436  006F94  90D8               	bcf	status,0,c
 18437  006F96  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18438  006F98  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18439  006F9A  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18440                           
 18441                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18442  006F9C  90D8               	bcf	status,0,c
 18443  006F9E  3422               	rlcf	Decrypt@Buffer^0,w,c
 18444  006FA0  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18445  006FA2  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18446                           
 18447                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18448  006FA4  90D8               	bcf	status,0,c
 18449  006FA6  3421               	rlcf	Decrypt@aux^0,w,c
 18450  006FA8  3422               	rlcf	Decrypt@Buffer^0,w,c
 18451  006FAA  6E22               	movwf	Decrypt@Buffer^0,c
 18452                           
 18453                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18454  006FAC  90D8               	bcf	status,0,c
 18455  006FAE  361D               	rlcf	Decrypt@key^0,f,c
 18456                           
 18457                           ;keeloqDecrypt_MC50.c: 189:         }
 18458  006FB0  061E               	decf	Decrypt@i^0,f,c
 18459  006FB2  501E               	movf	Decrypt@i^0,w,c
 18460  006FB4  A4D8               	btfss	status,2,c
 18461  006FB6  D7CC               	goto	l1854
 18462                           
 18463                           ;keeloqDecrypt_MC50.c: 190:     }
 18464  006FB8  061F               	decf	Decrypt@j^0,f,c
 18465  006FBA  501F               	movf	Decrypt@j^0,w,c
 18466  006FBC  A4D8               	btfss	status,2,c
 18467  006FBE  D7B9               	goto	l19473
 18468                           
 18469                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18470  006FC0  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18471  006FC4  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18472  006FC8  0E22               	movlw	low Decrypt@Buffer
 18473  006FCA  6E12               	movwf	memcpy@s1^0,c
 18474  006FCC  6A13               	clrf	(memcpy@s1+1)^0,c
 18475  006FCE  0E00               	movlw	0
 18476  006FD0  6E15               	movwf	(memcpy@n+1)^0,c
 18477  006FD2  0E04               	movlw	4
 18478  006FD4  6E14               	movwf	memcpy@n^0,c
 18479  006FD6  EC52  F044         	call	_memcpy	;wreg free
 18480  006FDA  0012               	return		;funcret
 18481  006FDC                     __end_of_Decrypt:
 18482                           	callstack 0
 18483                           
 18484 ;; *************** function _HopCHK *****************
 18485 ;; Defined at:
 18486 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18487 ;; Parameters:    Size  Location     Type
 18488 ;;  data            2   35[COMRAM] PTR struct .
 18489 ;;		 -> classic_data(16), 
 18490 ;; Auto vars:     Size  Location     Type
 18491 ;;  hopDiff         2   37[COMRAM] short 
 18492 ;; Return value:  Size  Location     Type
 18493 ;;                  1    wreg      enum E10730
 18494 ;; Registers used:
 18495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18496 ;; Tracked objects:
 18497 ;;		On entry : 3F/0
 18498 ;;		On exit  : 3C/0
 18499 ;;		Unchanged: 0/0
 18500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18504 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18505 ;;Total ram usage:        4 bytes
 18506 ;; Hardware stack levels used: 1
 18507 ;; Hardware stack levels required when called: 6
 18508 ;; This function calls:
 18509 ;;		_ReqResync
 18510 ;;		_getHopCode
 18511 ;; This function is called by:
 18512 ;;		_keeloqDecryptPacket
 18513 ;; This function uses a non-reentrant model
 18514 ;;
 18515                           
 18516                           	psect	text66
 18517  0078C0                     __ptext66:
 18518                           	callstack 0
 18519  0078C0                     _HopCHK:
 18520                           	callstack 22
 18521                           
 18522                           ; BSR set to: 0
 18523                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18524                           
 18525                           ;incstack = 0
 18526  0078C0  EE20 F008          	lfsr	2,8
 18527  0078C4  5024               	movf	HopCHK@data^0,w,c
 18528  0078C6  26D9               	addwf	fsr2l,f,c
 18529  0078C8  5025               	movf	(HopCHK@data+1)^0,w,c
 18530  0078CA  22DA               	addwfc	fsr2h,f,c
 18531  0078CC  CFDE F07C          	movff	postinc2,_Hop
 18532  0078D0  CFDD F07D          	movff	postdec2,_Hop+1
 18533                           
 18534                           ; BSR set to: 0
 18535                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18536  0078D4  C024  F016         	movff	HopCHK@data,getHopCode@data
 18537  0078D8  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18538  0078DC  EC45  F031         	call	_getHopCode	;wreg free
 18539  0078E0  C016  F28C         	movff	?_getHopCode,_EHop
 18540  0078E4  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18541                           
 18542                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18543  0078E8  0101               	movlb	1	; () banked
 18544  0078EA  5195               	movf	_F2Chance& (0+255),w,b
 18545  0078EC  B4D8               	btfsc	status,2,c
 18546  0078EE  D010               	goto	l20233
 18547                           
 18548                           ; BSR set to: 1
 18549                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18550  0078F0  0100               	movlb	0	; () banked
 18551  0078F2  517C               	movf	_Hop& (0+255),w,b
 18552  0078F4  0102               	movlb	2	; () banked
 18553  0078F6  198E               	xorwf	_NextHop& (0+255),w,b
 18554  0078F8  E10B               	bnz	l20233
 18555  0078FA  0100               	movlb	0	; () banked
 18556  0078FC  517D               	movf	(_Hop+1)& (0+255),w,b
 18557  0078FE  0102               	movlb	2	; () banked
 18558  007900  198F               	xorwf	(_NextHop+1)& (0+255),w,b
 18559  007902  A4D8               	btfss	status,2,c
 18560  007904  D005               	goto	l20233
 18561                           
 18562                           ; BSR set to: 2
 18563                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18564  007906  0E00               	movlw	0
 18565  007908  0101               	movlb	1	; () banked
 18566  00790A  6F95               	movwf	_F2Chance& (0+255),b
 18567  00790C                     l20229:
 18568                           
 18569                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18570  00790C  0E01               	movlw	1
 18571  00790E  0012               	return	
 18572  007910                     l20233:
 18573                           
 18574                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18575  007910  0102               	movlb	2	; () banked
 18576  007912  518C               	movf	_EHop& (0+255),w,b
 18577  007914  0100               	movlb	0	; () banked
 18578  007916  5D7C               	subwf	_Hop& (0+255),w,b
 18579  007918  6E26               	movwf	HopCHK@hopDiff^0,c
 18580  00791A  0102               	movlb	2	; () banked
 18581  00791C  518D               	movf	(_EHop+1)& (0+255),w,b
 18582  00791E  0100               	movlb	0	; () banked
 18583  007920  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18584  007922  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18585                           
 18586                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18587  007924  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18588  007926  D002               	goto	l20241
 18589                           
 18590                           ; BSR set to: 0
 18591                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18592  007928  0E0A               	movlw	10
 18593  00792A  0012               	return	
 18594  00792C                     l20241:
 18595                           
 18596                           ; BSR set to: 0
 18597  00792C  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18598  00792E  D7EE               	goto	l20229
 18599  007930  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18600  007932  E104               	bnz	u23340
 18601  007934  0E11               	movlw	17
 18602  007936  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18603  007938  A0D8               	btfss	status,0,c
 18604  00793A  D7E8               	goto	l20229
 18605  00793C                     u23340:
 18606                           
 18607                           ; BSR set to: 0
 18608                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18609  00793C  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18610  007940  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18611  007944  EC67  F048         	call	_ReqResync	;wreg free
 18612  007948  0012               	return		;funcret
 18613  00794A                     __end_of_HopCHK:
 18614                           	callstack 0
 18615                           
 18616 ;; *************** function _getHopCode *****************
 18617 ;; Defined at:
 18618 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18619 ;; Parameters:    Size  Location     Type
 18620 ;;  data            2   21[COMRAM] PTR struct .
 18621 ;;		 -> classic_data(16), 
 18622 ;; Auto vars:     Size  Location     Type
 18623 ;;  tempHop         2   31[COMRAM] unsigned short 
 18624 ;;  i               1   34[COMRAM] unsigned char 
 18625 ;;  tempPos         1   33[COMRAM] char 
 18626 ;; Return value:  Size  Location     Type
 18627 ;;                  2   21[COMRAM] unsigned short 
 18628 ;; Registers used:
 18629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18630 ;; Tracked objects:
 18631 ;;		On entry : 3F/0
 18632 ;;		On exit  : 3D/0
 18633 ;;		Unchanged: 0/0
 18634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18636 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18637 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18638 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18639 ;;Total ram usage:       14 bytes
 18640 ;; Hardware stack levels used: 1
 18641 ;; Hardware stack levels required when called: 5
 18642 ;; This function calls:
 18643 ;;		_ReqResync
 18644 ;;		___wmul
 18645 ;; This function is called by:
 18646 ;;		_HopCHK
 18647 ;; This function uses a non-reentrant model
 18648 ;;
 18649                           
 18650                           	psect	text67
 18651  00628A                     __ptext67:
 18652                           	callstack 0
 18653  00628A                     _getHopCode:
 18654                           	callstack 22
 18655                           
 18656                           ; BSR set to: 0
 18657                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18658                           
 18659                           ;incstack = 0
 18660  00628A  0E00               	movlw	0
 18661  00628C  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18662  00628E  0E00               	movlw	0
 18663  006290  6E20               	movwf	getHopCode@tempHop^0,c
 18664                           
 18665                           ; BSR set to: 0
 18666                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18667  006292  6822               	setf	getHopCode@tempPos^0,c
 18668                           
 18669                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18670  006294  0E00               	movlw	0
 18671  006296  6E23               	movwf	getHopCode@i^0,c
 18672  006298                     l19721:
 18673                           
 18674                           ; BSR set to: 0
 18675                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18676  006298  EE20 F004          	lfsr	2,4
 18677  00629C  5016               	movf	getHopCode@data^0,w,c
 18678  00629E  26D9               	addwf	fsr2l,f,c
 18679  0062A0  5017               	movf	(getHopCode@data+1)^0,w,c
 18680  0062A2  22DA               	addwfc	fsr2h,f,c
 18681  0062A4  5023               	movf	getHopCode@i^0,w,c
 18682  0062A6  0D06               	mullw	6
 18683  0062A8  0E00               	movlw	low _listSyncValues
 18684  0062AA  24F3               	addwf	243,w,c
 18685  0062AC  6EE1               	movwf	fsr1l,c
 18686  0062AE  0E03               	movlw	high _listSyncValues
 18687  0062B0  20F4               	addwfc	prodh,w,c
 18688  0062B2  6EE2               	movwf	fsr1h,c
 18689  0062B4  50DE               	movf	postinc2,w,c
 18690  0062B6  18E6               	xorwf	postinc1,w,c
 18691  0062B8  E118               	bnz	l19727
 18692  0062BA  50DE               	movf	postinc2,w,c
 18693  0062BC  18E6               	xorwf	postinc1,w,c
 18694  0062BE  E115               	bnz	l19727
 18695  0062C0  50DE               	movf	postinc2,w,c
 18696  0062C2  18E6               	xorwf	postinc1,w,c
 18697  0062C4  E112               	bnz	l19727
 18698  0062C6  50DE               	movf	postinc2,w,c
 18699  0062C8  18E6               	xorwf	postinc1,w,c
 18700  0062CA  A4D8               	btfss	status,2,c
 18701  0062CC  D00E               	goto	l19727
 18702                           
 18703                           ; BSR set to: 0
 18704                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18705  0062CE  5023               	movf	getHopCode@i^0,w,c
 18706  0062D0  0D06               	mullw	6
 18707  0062D2  0E04               	movlw	low (_listSyncValues+4)
 18708  0062D4  24F3               	addwf	243,w,c
 18709  0062D6  6ED9               	movwf	fsr2l,c
 18710  0062D8  0E03               	movlw	high (_listSyncValues+4)
 18711  0062DA  20F4               	addwfc	prodh,w,c
 18712  0062DC  6EDA               	movwf	fsr2h,c
 18713  0062DE  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18714  0062E2  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18715                           
 18716                           ; BSR set to: 0
 18717                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18718  0062E6  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18719  0062EA                     l19727:
 18720                           
 18721                           ; BSR set to: 0
 18722                           ;keeloqDecrypt_MC50.c: 278:     }
 18723  0062EA  2A23               	incf	getHopCode@i^0,f,c
 18724                           
 18725                           ; BSR set to: 0
 18726  0062EC  0E18               	movlw	24
 18727  0062EE  6423               	cpfsgt	getHopCode@i^0,c
 18728  0062F0  D7D3               	goto	l19721
 18729                           
 18730                           ; BSR set to: 0
 18731                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18732  0062F2  AE22               	btfss	getHopCode@tempPos^0,7,c
 18733  0062F4  D050               	goto	l19747
 18734                           
 18735                           ; BSR set to: 0
 18736                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18737  0062F6  EE20 F004          	lfsr	2,4
 18738  0062FA  5016               	movf	getHopCode@data^0,w,c
 18739  0062FC  26D9               	addwf	fsr2l,f,c
 18740  0062FE  5017               	movf	(getHopCode@data+1)^0,w,c
 18741  006300  22DA               	addwfc	fsr2h,f,c
 18742  006302  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18743  006306  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18744  00630A  0E00               	movlw	0
 18745  00630C  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18746  00630E  0E06               	movlw	6
 18747  006310  6E12               	movwf	___wmul@multiplicand^0,c
 18748  006312  EC53  F047         	call	___wmul	;wreg free
 18749  006316  0E00               	movlw	low _listSyncValues
 18750  006318  2410               	addwf	?___wmul^0,w,c
 18751  00631A  6EE1               	movwf	fsr1l,c
 18752  00631C  0E03               	movlw	high _listSyncValues
 18753  00631E  2011               	addwfc	(?___wmul+1)^0,w,c
 18754  006320  6EE2               	movwf	fsr1h,c
 18755  006322  CFDE FFE6          	movff	postinc2,postinc1
 18756  006326  CFDE FFE6          	movff	postinc2,postinc1
 18757  00632A  CFDE FFE6          	movff	postinc2,postinc1
 18758  00632E  CFDE FFE6          	movff	postinc2,postinc1
 18759                           
 18760                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18761  006332  EE20 F008          	lfsr	2,8
 18762  006336  5016               	movf	getHopCode@data^0,w,c
 18763  006338  26D9               	addwf	fsr2l,f,c
 18764  00633A  5017               	movf	(getHopCode@data+1)^0,w,c
 18765  00633C  22DA               	addwfc	fsr2h,f,c
 18766  00633E  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18767  006342  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18768  006346  0E00               	movlw	0
 18769  006348  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18770  00634A  0E06               	movlw	6
 18771  00634C  6E12               	movwf	___wmul@multiplicand^0,c
 18772  00634E  EC53  F047         	call	___wmul	;wreg free
 18773  006352  0E04               	movlw	low (_listSyncValues+4)
 18774  006354  2410               	addwf	?___wmul^0,w,c
 18775  006356  6EE1               	movwf	fsr1l,c
 18776  006358  0E03               	movlw	high (_listSyncValues+4)
 18777  00635A  2011               	addwfc	(?___wmul+1)^0,w,c
 18778  00635C  6EE2               	movwf	fsr1h,c
 18779  00635E  CFDE FFE6          	movff	postinc2,postinc1
 18780  006362  CFDD FFE5          	movff	postdec2,postdec1
 18781                           
 18782                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18783  006366  0100               	movlb	0	; () banked
 18784  006368  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18785  00636A  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18786                           
 18787                           ; BSR set to: 0
 18788                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18789  00636C  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18790  00636E  E104               	bnz	u22660
 18791  006370  0E19               	movlw	25
 18792  006372  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18793  006374  A0D8               	btfss	status,0,c
 18794  006376  D004               	goto	l19741
 18795  006378                     u22660:
 18796                           
 18797                           ; BSR set to: 0
 18798                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18799  006378  0E00               	movlw	0
 18800  00637A  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18801  00637C  0E00               	movlw	0
 18802  00637E  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18803  006380                     l19741:
 18804                           
 18805                           ; BSR set to: 0
 18806                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18807  006380  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18808  006384  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18809  006388  EC67  F048         	call	_ReqResync	;wreg free
 18810  00638C  6E18               	movwf	??_getHopCode^0,c
 18811  00638E  5018               	movf	??_getHopCode^0,w,c
 18812  006390  6E16               	movwf	?_getHopCode^0,c
 18813  006392  6A17               	clrf	(?_getHopCode+1)^0,c
 18814  006394  0012               	return	
 18815  006396                     l19747:
 18816                           
 18817                           ; BSR set to: 0
 18818                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18819  006396  5022               	movf	getHopCode@tempPos^0,w,c
 18820  006398  0D06               	mullw	6
 18821  00639A  0E04               	movlw	low (_listSyncValues+4)
 18822  00639C  24F3               	addwf	243,w,c
 18823  00639E  6ED9               	movwf	fsr2l,c
 18824  0063A0  0E03               	movlw	high (_listSyncValues+4)
 18825  0063A2  20F4               	addwfc	prodh,w,c
 18826  0063A4  6EDA               	movwf	fsr2h,c
 18827  0063A6  C07C  FFDE         	movff	_Hop,postinc2
 18828  0063AA  C07D  FFDD         	movff	_Hop+1,postdec2
 18829                           
 18830                           ; BSR set to: 0
 18831                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18832  0063AE  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18833  0063B2  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18834  0063B6  0012               	return		;funcret
 18835  0063B8                     __end_of_getHopCode:
 18836                           	callstack 0
 18837                           
 18838 ;; *************** function _ReqResync *****************
 18839 ;; Defined at:
 18840 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18841 ;; Parameters:    Size  Location     Type
 18842 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18843 ;; Auto vars:     Size  Location     Type
 18844 ;;		None
 18845 ;; Return value:  Size  Location     Type
 18846 ;;                  1    wreg      enum E10730
 18847 ;; Registers used:
 18848 ;;		wreg, status,2, status,0
 18849 ;; Tracked objects:
 18850 ;;		On entry : 3F/0
 18851 ;;		On exit  : 3F/2
 18852 ;;		Unchanged: 0/0
 18853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18857 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18858 ;;Total ram usage:        2 bytes
 18859 ;; Hardware stack levels used: 1
 18860 ;; Hardware stack levels required when called: 4
 18861 ;; This function calls:
 18862 ;;		Nothing
 18863 ;; This function is called by:
 18864 ;;		_HopCHK
 18865 ;;		_getHopCode
 18866 ;; This function uses a non-reentrant model
 18867 ;;
 18868                           
 18869                           	psect	text68
 18870  0090CE                     __ptext68:
 18871                           	callstack 0
 18872  0090CE                     _ReqResync:
 18873                           	callstack 22
 18874                           
 18875                           ; BSR set to: 0
 18876                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18877                           
 18878                           ;incstack = 0
 18879  0090CE  0E01               	movlw	1
 18880  0090D0  0101               	movlb	1	; () banked
 18881  0090D2  6F95               	movwf	_F2Chance& (0+255),b
 18882                           
 18883                           ; BSR set to: 1
 18884                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18885  0090D4  0E01               	movlw	1
 18886  0090D6  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18887  0090D8  0102               	movlb	2	; () banked
 18888  0090DA  6F8E               	movwf	_NextHop& (0+255),b
 18889  0090DC  0E00               	movlw	0
 18890  0090DE  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18891  0090E0  6F8F               	movwf	(_NextHop+1)& (0+255),b
 18892                           
 18893                           ; BSR set to: 2
 18894                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18895  0090E2  0E09               	movlw	9
 18896                           
 18897                           ; BSR set to: 2
 18898  0090E4  0012               	return		;funcret
 18899  0090E6                     __end_of_ReqResync:
 18900                           	callstack 0
 18901                           
 18902 ;; *************** function _DecCHK *****************
 18903 ;; Defined at:
 18904 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18905 ;; Parameters:    Size  Location     Type
 18906 ;;  data            2   15[COMRAM] PTR struct .
 18907 ;;		 -> classic_data(16), 
 18908 ;; Auto vars:     Size  Location     Type
 18909 ;;		None
 18910 ;; Return value:  Size  Location     Type
 18911 ;;                  1    wreg      _Bool 
 18912 ;; Registers used:
 18913 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18914 ;; Tracked objects:
 18915 ;;		On entry : 3F/0
 18916 ;;		On exit  : 3F/0
 18917 ;;		Unchanged: 3F/0
 18918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18921 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18922 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18923 ;;Total ram usage:        4 bytes
 18924 ;; Hardware stack levels used: 1
 18925 ;; Hardware stack levels required when called: 4
 18926 ;; This function calls:
 18927 ;;		Nothing
 18928 ;; This function is called by:
 18929 ;;		_keeloqDecryptPacket
 18930 ;; This function uses a non-reentrant model
 18931 ;;
 18932                           
 18933                           	psect	text69
 18934  008B0C                     __ptext69:
 18935                           	callstack 0
 18936  008B0C                     _DecCHK:
 18937                           	callstack 24
 18938                           
 18939                           ; BSR set to: 0
 18940                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18941                           
 18942                           ; BSR set to: 2
 18943                           ;incstack = 0
 18944  008B0C  EE20 F00D          	lfsr	2,13
 18945  008B10  5010               	movf	DecCHK@data^0,w,c
 18946  008B12  26D9               	addwf	fsr2l,f,c
 18947  008B14  5011               	movf	(DecCHK@data+1)^0,w,c
 18948  008B16  22DA               	addwfc	fsr2h,f,c
 18949  008B18  50DF               	movf	indf2,w,c
 18950  008B1A  6E12               	movwf	??_DecCHK^0,c
 18951  008B1C  EE20 F00C          	lfsr	2,12
 18952  008B20  5010               	movf	DecCHK@data^0,w,c
 18953  008B22  26D9               	addwf	fsr2l,f,c
 18954  008B24  5011               	movf	(DecCHK@data+1)^0,w,c
 18955  008B26  22DA               	addwfc	fsr2h,f,c
 18956  008B28  50DF               	movf	indf2,w,c
 18957  008B2A  1812               	xorwf	??_DecCHK^0,w,c
 18958  008B2C  6E13               	movwf	(??_DecCHK+1)^0,c
 18959  008B2E  0E0F               	movlw	15
 18960  008B30  1613               	andwf	(??_DecCHK+1)^0,f,c
 18961  008B32  B4D8               	btfsc	status,2,c
 18962  008B34  D002               	goto	l20215
 18963                           
 18964                           ; BSR set to: 0
 18965                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18966  008B36  0E00               	movlw	0
 18967  008B38  0012               	return	
 18968  008B3A                     l20215:
 18969                           
 18970                           ; BSR set to: 0
 18971                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18972  008B3A  0E01               	movlw	1
 18973                           
 18974                           ; BSR set to: 0
 18975  008B3C  0012               	return		;funcret
 18976  008B3E                     __end_of_DecCHK:
 18977                           	callstack 0
 18978                           
 18979 ;; *************** function _DecryptPacket_12BIT *****************
 18980 ;; Defined at:
 18981 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18982 ;; Parameters:    Size  Location     Type
 18983 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18984 ;;		 -> BufferRF(9), 
 18985 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18986 ;;		 -> classic_data(16), 
 18987 ;; Auto vars:     Size  Location     Type
 18988 ;;  commandType     1   12[BANK0 ] enum E10539
 18989 ;; Return value:  Size  Location     Type
 18990 ;;                  1    wreg      enum E10539
 18991 ;; Registers used:
 18992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18993 ;; Tracked objects:
 18994 ;;		On entry : 3F/0
 18995 ;;		On exit  : 3F/0
 18996 ;;		Unchanged: 0/0
 18997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18998 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18999 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19001 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19002 ;;Total ram usage:        5 bytes
 19003 ;; Hardware stack levels used: 1
 19004 ;; Hardware stack levels required when called: 14
 19005 ;; This function calls:
 19006 ;;		_memcpy
 19007 ;;		_validateRemoteSerialNumber
 19008 ;; This function is called by:
 19009 ;;		_readRFButtons
 19010 ;; This function uses a non-reentrant model
 19011 ;;
 19012                           
 19013                           	psect	text70
 19014  00771C                     __ptext70:
 19015                           	callstack 0
 19016  00771C                     _DecryptPacket_12BIT:
 19017                           	callstack 15
 19018                           
 19019                           ; BSR set to: 0
 19020                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 19021                           
 19022                           ; BSR set to: 0
 19023                           ;incstack = 0
 19024  00771C  0E04               	movlw	4
 19025  00771E  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19026  007720  6E10               	movwf	memcpy@d1^0,c
 19027  007722  0E00               	movlw	0
 19028  007724  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19029  007726  6E11               	movwf	(memcpy@d1+1)^0,c
 19030  007728  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 19031  00772C  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 19032  007730  0E00               	movlw	0
 19033  007732  6E15               	movwf	(memcpy@n+1)^0,c
 19034  007734  0E04               	movlw	4
 19035  007736  6E14               	movwf	memcpy@n^0,c
 19036  007738  EC52  F044         	call	_memcpy	;wreg free
 19037                           
 19038                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 19039  00773C  0100               	movlb	0	; () banked
 19040  00773E  EE20 F004          	lfsr	2,4
 19041  007742  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19042  007744  26D9               	addwf	fsr2l,f,c
 19043  007746  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19044  007748  22DA               	addwfc	fsr2h,f,c
 19045  00774A  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 19046  00774E  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 19047  007752  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 19048  007756  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 19049  00775A  0E00               	movlw	0
 19050  00775C  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 19051  00775E  0E0F               	movlw	15
 19052  007760  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19053  007762  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 19054  007764  0E00               	movlw	0
 19055  007766  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19056  007768  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 19057  00776A  EC80  F02A         	call	_validateRemoteSerialNumber	;wreg free
 19058  00776E  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 19059                           
 19060                           ; BSR set to: 0
 19061                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 19062  007770  EE20 F00C          	lfsr	2,12
 19063  007774  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19064  007776  26D9               	addwf	fsr2l,f,c
 19065  007778  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19066  00777A  22DA               	addwfc	fsr2h,f,c
 19067  00777C  0E00               	movlw	0
 19068  00777E  6EDF               	movwf	indf2,c
 19069                           
 19070                           ; BSR set to: 0
 19071                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 19072  007780  EE20 F008          	lfsr	2,8
 19073  007784  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19074  007786  26D9               	addwf	fsr2l,f,c
 19075  007788  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19076  00778A  22DA               	addwfc	fsr2h,f,c
 19077  00778C  0E00               	movlw	0
 19078  00778E  6EDE               	movwf	postinc2,c
 19079  007790  0E00               	movlw	0
 19080  007792  6EDD               	movwf	postdec2,c
 19081                           
 19082                           ; BSR set to: 0
 19083                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 19084  007794  EE20 F00E          	lfsr	2,14
 19085  007798  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19086  00779A  26D9               	addwf	fsr2l,f,c
 19087  00779C  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19088  00779E  22DA               	addwfc	fsr2h,f,c
 19089  0077A0  0E02               	movlw	2
 19090  0077A2  6EDF               	movwf	indf2,c
 19091                           
 19092                           ; BSR set to: 0
 19093                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 19094  0077A4  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 19095                           
 19096                           ; BSR set to: 0
 19097  0077A6  0012               	return		;funcret
 19098  0077A8                     __end_of_DecryptPacket_12BIT:
 19099                           	callstack 0
 19100                           
 19101 ;; *************** function _validateRemoteSerialNumber *****************
 19102 ;; Defined at:
 19103 ;;		line 27 in file "controlMemory_MC50.c"
 19104 ;; Parameters:    Size  Location     Type
 19105 ;;  serial          4   45[COMRAM] unsigned long 
 19106 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 19107 ;;  position        2   50[COMRAM] PTR unsigned char 
 19108 ;;		 -> controlSelectRemote@pos(1), classic_data(16), 
 19109 ;; Auto vars:     Size  Location     Type
 19110 ;;  mask            4   52[COMRAM] unsigned long 
 19111 ;;  i               1   57[COMRAM] unsigned char 
 19112 ;;  j               1   56[COMRAM] unsigned char 
 19113 ;; Return value:  Size  Location     Type
 19114 ;;                  1    wreg      enum E10539
 19115 ;; Registers used:
 19116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19117 ;; Tracked objects:
 19118 ;;		On entry : 3F/0
 19119 ;;		On exit  : 3F/0
 19120 ;;		Unchanged: 0/0
 19121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19122 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19123 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19124 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19125 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19126 ;;Total ram usage:       21 bytes
 19127 ;; Hardware stack levels used: 1
 19128 ;; Hardware stack levels required when called: 13
 19129 ;; This function calls:
 19130 ;;		_i2c_readDataBlock
 19131 ;; This function is called by:
 19132 ;;		_keeloqDecryptPacket
 19133 ;;		_DecryptPacket_12BIT
 19134 ;;		_controlSelectRemote
 19135 ;; This function uses a non-reentrant model
 19136 ;;
 19137                           
 19138                           	psect	text71
 19139  005500                     __ptext71:
 19140                           	callstack 0
 19141  005500                     _validateRemoteSerialNumber:
 19142                           	callstack 14
 19143                           
 19144                           ; BSR set to: 0
 19145                           ;controlMemory_MC50.c: 29:     char j=0;
 19146                           
 19147                           ; BSR set to: 0
 19148                           ;incstack = 0
 19149  005500  0E00               	movlw	0
 19150  005502  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19151                           
 19152                           ; BSR set to: 0
 19153                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 19154  005504  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 19155  005506  A4D8               	btfss	status,2,c
 19156  005508  D009               	goto	l1436
 19157                           
 19158                           ; BSR set to: 0
 19159                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 19160  00550A  0EFF               	movlw	255
 19161  00550C  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 19162  00550E  0EFF               	movlw	255
 19163  005510  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 19164  005512  0EFF               	movlw	255
 19165  005514  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 19166  005516  0E0F               	movlw	15
 19167  005518  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 19168                           
 19169                           ;controlMemory_MC50.c: 36:     }
 19170  00551A  D004               	goto	l19575
 19171  00551C                     l1436:
 19172                           
 19173                           ; BSR set to: 0
 19174                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 19175  00551C  6835               	setf	validateRemoteSerialNumber@mask^0,c
 19176  00551E  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 19177  005520  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 19178  005522  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 19179  005524                     l19575:
 19180                           
 19181                           ; BSR set to: 0
 19182                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 19183  005524  0E00               	movlw	0
 19184  005526  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 19185  005528  D056               	goto	l19593
 19186  00552A                     l19577:
 19187                           
 19188                           ; BSR set to: 0
 19189                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 19190  00552A  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 19191  00552E  0E03               	movlw	3
 19192  005530  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 19193  005532  A4D8               	btfss	status,2,c
 19194  005534  D01C               	goto	l19583
 19195                           
 19196                           ; BSR set to: 0
 19197                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 19198  005536  0E00               	movlw	0
 19199  005538  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19200                           
 19201                           ; BSR set to: 0
 19202                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 19203  00553A  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 19204  00553C  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 19205  00553E  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 19206  005540  90D8               	bcf	status,0,c
 19207  005542  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19208  005544  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19209  005546  90D8               	bcf	status,0,c
 19210  005548  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19211  00554A  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19212  00554C  0E00               	movlw	0
 19213  00554E  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 19214  005550  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19215  005552  0E02               	movlw	2
 19216  005554  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19217  005556  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19218  005558  0EA2               	movlw	low _memoryTEMP
 19219  00555A  6E24               	movwf	i2c_readDataBlock@data^0,c
 19220  00555C  0E02               	movlw	high _memoryTEMP
 19221  00555E  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19222  005560  0E00               	movlw	0
 19223  005562  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19224  005564  0E10               	movlw	16
 19225  005566  6E26               	movwf	i2c_readDataBlock@len^0,c
 19226  005568  0E50               	movlw	80
 19227  00556A  EC1F  F03F         	call	_i2c_readDataBlock
 19228  00556E                     l19583:
 19229                           
 19230                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 19231  00556E  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 19232  005570  0D04               	mullw	4
 19233  005572  0EA2               	movlw	low _memoryTEMP
 19234  005574  24F3               	addwf	243,w,c
 19235  005576  6ED9               	movwf	fsr2l,c
 19236  005578  0E02               	movlw	high _memoryTEMP
 19237  00557A  20F4               	addwfc	prodh,w,c
 19238  00557C  6EDA               	movwf	fsr2h,c
 19239  00557E  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 19240  005582  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 19241  005586  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 19242  00558A  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 19243  00558E  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 19244  005590  0100               	movlb	0	; () banked
 19245  005592  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 19246  005594  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 19247  005596  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 19248  005598  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19249  00559A  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 19250  00559C  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 19251  00559E  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 19252  0055A0  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 19253  0055A2  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 19254  0055A4  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 19255  0055A6  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 19256  0055A8  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 19257  0055AA  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 19258  0055AC  E112               	bnz	l19591
 19259  0055AE  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 19260  0055B0  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 19261  0055B2  E10F               	bnz	l19591
 19262  0055B4  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 19263  0055B6  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 19264  0055B8  E10C               	bnz	l19591
 19265  0055BA  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 19266  0055BC  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 19267  0055BE  A4D8               	btfss	status,2,c
 19268  0055C0  D008               	goto	l19591
 19269                           
 19270                           ; BSR set to: 0
 19271                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 19272  0055C2  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 19273  0055C6  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 19274  0055CA  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 19275                           
 19276                           ; BSR set to: 0
 19277                           ;controlMemory_MC50.c: 54:             return TypeFull;
 19278  0055CE  0E01               	movlw	1
 19279  0055D0  0012               	return	
 19280  0055D2                     l19591:
 19281                           
 19282                           ; BSR set to: 0
 19283                           ;controlMemory_MC50.c: 57:         j++;
 19284  0055D2  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 19285                           
 19286                           ;controlMemory_MC50.c: 59:     }
 19287  0055D4  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 19288  0055D6                     l19593:
 19289                           
 19290                           ; BSR set to: 0
 19291  0055D6  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 19292  0055D8  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 19293  0055DA  A0D8               	btfss	status,0,c
 19294  0055DC  D7A6               	goto	l19577
 19295                           
 19296                           ; BSR set to: 0
 19297                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 19298  0055DE  0E00               	movlw	0
 19299  0055E0  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 19300  0055E2  D056               	goto	l19613
 19301  0055E4                     l19597:
 19302                           
 19303                           ; BSR set to: 0
 19304                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 19305  0055E4  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 19306  0055E8  0E03               	movlw	3
 19307  0055EA  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 19308  0055EC  A4D8               	btfss	status,2,c
 19309  0055EE  D01C               	goto	l19603
 19310                           
 19311                           ; BSR set to: 0
 19312                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 19313  0055F0  0E00               	movlw	0
 19314  0055F2  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19315                           
 19316                           ; BSR set to: 0
 19317                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 19318  0055F4  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 19319  0055F6  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 19320  0055F8  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 19321  0055FA  90D8               	bcf	status,0,c
 19322  0055FC  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19323  0055FE  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19324  005600  90D8               	bcf	status,0,c
 19325  005602  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19326  005604  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19327  005606  0E00               	movlw	0
 19328  005608  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 19329  00560A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19330  00560C  0E05               	movlw	5
 19331  00560E  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19332  005610  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19333  005612  0EA2               	movlw	low _memoryTEMP
 19334  005614  6E24               	movwf	i2c_readDataBlock@data^0,c
 19335  005616  0E02               	movlw	high _memoryTEMP
 19336  005618  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19337  00561A  0E00               	movlw	0
 19338  00561C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19339  00561E  0E10               	movlw	16
 19340  005620  6E26               	movwf	i2c_readDataBlock@len^0,c
 19341  005622  0E50               	movlw	80
 19342  005624  EC1F  F03F         	call	_i2c_readDataBlock
 19343  005628                     l19603:
 19344                           
 19345                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 19346  005628  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 19347  00562A  0D04               	mullw	4
 19348  00562C  0EA2               	movlw	low _memoryTEMP
 19349  00562E  24F3               	addwf	243,w,c
 19350  005630  6ED9               	movwf	fsr2l,c
 19351  005632  0E02               	movlw	high _memoryTEMP
 19352  005634  20F4               	addwfc	prodh,w,c
 19353  005636  6EDA               	movwf	fsr2h,c
 19354  005638  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 19355  00563C  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 19356  005640  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 19357  005644  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 19358  005648  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 19359  00564A  0100               	movlb	0	; () banked
 19360  00564C  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 19361  00564E  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 19362  005650  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 19363  005652  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19364  005654  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 19365  005656  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 19366  005658  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 19367  00565A  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 19368  00565C  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 19369  00565E  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 19370  005660  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 19371  005662  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 19372  005664  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 19373  005666  E112               	bnz	l19611
 19374  005668  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 19375  00566A  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 19376  00566C  E10F               	bnz	l19611
 19377  00566E  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 19378  005670  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 19379  005672  E10C               	bnz	l19611
 19380  005674  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 19381  005676  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 19382  005678  A4D8               	btfss	status,2,c
 19383  00567A  D008               	goto	l19611
 19384                           
 19385                           ; BSR set to: 0
 19386                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 19387  00567C  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 19388  005680  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 19389  005684  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 19390                           
 19391                           ; BSR set to: 0
 19392                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 19393  005688  0E02               	movlw	2
 19394  00568A  0012               	return	
 19395  00568C                     l19611:
 19396                           
 19397                           ; BSR set to: 0
 19398                           ;controlMemory_MC50.c: 75:         j++;
 19399  00568C  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 19400                           
 19401                           ;controlMemory_MC50.c: 76:     }
 19402  00568E  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 19403  005690                     l19613:
 19404                           
 19405                           ; BSR set to: 0
 19406  005690  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 19407  005692  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 19408  005694  A0D8               	btfss	status,0,c
 19409  005696  D7A6               	goto	l19597
 19410                           
 19411                           ; BSR set to: 0
 19412                           ;controlMemory_MC50.c: 78:     return NoCMD;
 19413  005698  0E00               	movlw	0
 19414                           
 19415                           ; BSR set to: 0
 19416  00569A  0012               	return		;funcret
 19417  00569C                     __end_of_validateRemoteSerialNumber:
 19418                           	callstack 0
 19419                           
 19420 ;; *************** function _readInputs *****************
 19421 ;; Defined at:
 19422 ;;		line 528 in file "inputs_MC50.c"
 19423 ;; Parameters:    Size  Location     Type
 19424 ;;		None
 19425 ;; Auto vars:     Size  Location     Type
 19426 ;;		None
 19427 ;; Return value:  Size  Location     Type
 19428 ;;                  1    wreg      void 
 19429 ;; Registers used:
 19430 ;;		wreg, status,2, status,0
 19431 ;; Tracked objects:
 19432 ;;		On entry : 3F/1
 19433 ;;		On exit  : 3E/0
 19434 ;;		Unchanged: 0/0
 19435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19440 ;;Total ram usage:        0 bytes
 19441 ;; Hardware stack levels used: 1
 19442 ;; Hardware stack levels required when called: 4
 19443 ;; This function calls:
 19444 ;;		Nothing
 19445 ;; This function is called by:
 19446 ;;		_main
 19447 ;; This function uses a non-reentrant model
 19448 ;;
 19449                           
 19450                           	psect	text72
 19451  006950                     __ptext72:
 19452                           	callstack 0
 19453  006950                     _readInputs:
 19454                           	callstack 26
 19455                           
 19456                           ; BSR set to: 1
 19457                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 19458                           
 19459                           ; BSR set to: 0
 19460                           ;incstack = 0
 19461  006950  0100               	movlb	0	; () banked
 19462  006952  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19463  006954  A4D8               	btfss	status,2,c
 19464  006956  D006               	goto	l16627
 19465                           
 19466                           ; BSR set to: 0
 19467  006958  0E00               	movlw	0
 19468  00695A  B28D               	btfsc	141,1,c	;volatile
 19469  00695C  0E01               	movlw	1
 19470  00695E  0101               	movlb	1	; () banked
 19471  006960  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19472  006962  D005               	goto	l16629
 19473  006964                     l16627:
 19474                           
 19475                           ; BSR set to: 0
 19476  006964  0E00               	movlw	0
 19477  006966  B48D               	btfsc	141,2,c	;volatile
 19478  006968  0E01               	movlw	1
 19479  00696A  0101               	movlb	1	; () banked
 19480  00696C  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19481  00696E                     l16629:
 19482                           
 19483                           ; BSR set to: 1
 19484                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 19485  00696E  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 19486  006970  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 19487  006972  A4D8               	btfss	status,2,c
 19488  006974  D002               	goto	l1726
 19489                           
 19490                           ; BSR set to: 1
 19491                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 19492  006976  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 19493                           
 19494                           ;inputs_MC50.c: 544:     }
 19495  006978  D004               	goto	l1727
 19496  00697A                     l1726:
 19497                           
 19498                           ; BSR set to: 1
 19499                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 19500  00697A  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 19501                           
 19502                           ; BSR set to: 1
 19503                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 19504  00697E  0E00               	movlw	0
 19505  006980  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 19506  006982                     l1727:
 19507                           
 19508                           ; BSR set to: 1
 19509                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 19510  006982  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 19511  006984  A4D8               	btfss	status,2,c
 19512                           
 19513                           ; BSR set to: 1
 19514                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 19515  006986  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 19516                           
 19517                           ; BSR set to: 1
 19518                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 19519  00698A  0100               	movlb	0	; () banked
 19520  00698C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19521  00698E  A4D8               	btfss	status,2,c
 19522  006990  D006               	goto	l16641
 19523                           
 19524                           ; BSR set to: 0
 19525  006992  0E00               	movlw	0
 19526  006994  B48D               	btfsc	141,2,c	;volatile
 19527  006996  0E01               	movlw	1
 19528  006998  0101               	movlb	1	; () banked
 19529  00699A  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19530  00699C  D005               	goto	l16643
 19531  00699E                     l16641:
 19532                           
 19533                           ; BSR set to: 0
 19534  00699E  0E00               	movlw	0
 19535  0069A0  B28D               	btfsc	141,1,c	;volatile
 19536  0069A2  0E01               	movlw	1
 19537  0069A4  0101               	movlb	1	; () banked
 19538  0069A6  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19539  0069A8                     l16643:
 19540                           
 19541                           ; BSR set to: 1
 19542                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 19543  0069A8  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 19544  0069AA  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 19545  0069AC  A4D8               	btfss	status,2,c
 19546  0069AE  D002               	goto	l1731
 19547                           
 19548                           ; BSR set to: 1
 19549                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 19550  0069B0  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 19551                           
 19552                           ;inputs_MC50.c: 573:     }
 19553  0069B2  D004               	goto	l1732
 19554  0069B4                     l1731:
 19555                           
 19556                           ; BSR set to: 1
 19557                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 19558  0069B4  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 19559                           
 19560                           ; BSR set to: 1
 19561                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 19562  0069B8  0E00               	movlw	0
 19563  0069BA  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 19564  0069BC                     l1732:
 19565                           
 19566                           ; BSR set to: 1
 19567                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 19568  0069BC  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 19569  0069BE  A4D8               	btfss	status,2,c
 19570                           
 19571                           ; BSR set to: 1
 19572                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 19573  0069C0  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 19574                           
 19575                           ; BSR set to: 1
 19576                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 19577  0069C4  0E00               	movlw	0
 19578  0069C6  B88D               	btfsc	141,4,c	;volatile
 19579  0069C8  0E01               	movlw	1
 19580  0069CA  6F6A               	movwf	_security& (0+255),b	;volatile
 19581                           
 19582                           ; BSR set to: 1
 19583                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19584  0069CC  516A               	movf	_security& (0+255),w,b	;volatile
 19585  0069CE  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19586  0069D0  A4D8               	btfss	status,2,c
 19587  0069D2  D002               	goto	l1734
 19588                           
 19589                           ; BSR set to: 1
 19590                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19591  0069D4  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 19592                           
 19593                           ;inputs_MC50.c: 597:     }
 19594  0069D6  D004               	goto	l1735
 19595  0069D8                     l1734:
 19596                           
 19597                           ; BSR set to: 1
 19598                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19599  0069D8  C16A  F16B         	movff	_security,_security+1	;volatile
 19600                           
 19601                           ; BSR set to: 1
 19602                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19603  0069DC  0E00               	movlw	0
 19604  0069DE  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 19605  0069E0                     l1735:
 19606                           
 19607                           ; BSR set to: 1
 19608                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19609  0069E0  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 19610  0069E2  A4D8               	btfss	status,2,c
 19611                           
 19612                           ; BSR set to: 1
 19613                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19614  0069E4  C16A  F101         	movff	_security,_var_sys+1	;volatile
 19615                           
 19616                           ; BSR set to: 1
 19617                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19618  0069E8  0E00               	movlw	0
 19619  0069EA  BA8D               	btfsc	141,5,c	;volatile
 19620  0069EC  0E01               	movlw	1
 19621  0069EE  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 19622                           
 19623                           ; BSR set to: 1
 19624                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19625  0069F0  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19626  0069F2  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19627  0069F4  A4D8               	btfss	status,2,c
 19628  0069F6  D002               	goto	l1737
 19629                           
 19630                           ; BSR set to: 1
 19631                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19632  0069F8  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19633                           
 19634                           ;inputs_MC50.c: 619:     }
 19635  0069FA  D004               	goto	l1738
 19636  0069FC                     l1737:
 19637                           
 19638                           ; BSR set to: 1
 19639                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19640  0069FC  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19641                           
 19642                           ; BSR set to: 1
 19643                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19644  006A00  0E00               	movlw	0
 19645  006A02  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19646  006A04                     l1738:
 19647                           
 19648                           ; BSR set to: 1
 19649                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19650  006A04  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19651  006A06  A4D8               	btfss	status,2,c
 19652                           
 19653                           ; BSR set to: 1
 19654                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19655  006A08  C16D  F170         	movff	_security+3,_security+6	;volatile
 19656                           
 19657                           ; BSR set to: 1
 19658                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19659  006A0C  0E00               	movlw	0
 19660  006A0E  BC8D               	btfsc	141,6,c	;volatile
 19661  006A10  0E01               	movlw	1
 19662  006A12  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19663                           
 19664                           ; BSR set to: 1
 19665                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19666  006A14  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19667  006A16  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19668  006A18  A4D8               	btfss	status,2,c
 19669  006A1A  D002               	goto	l1740
 19670                           
 19671                           ; BSR set to: 1
 19672                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19673  006A1C  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19674                           
 19675                           ;inputs_MC50.c: 640:     }
 19676  006A1E  D004               	goto	l1741
 19677  006A20                     l1740:
 19678                           
 19679                           ; BSR set to: 1
 19680                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19681  006A20  C171  F172         	movff	_security+7,_security+8	;volatile
 19682                           
 19683                           ; BSR set to: 1
 19684                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19685  006A24  0E00               	movlw	0
 19686  006A26  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19687  006A28                     l1741:
 19688                           
 19689                           ; BSR set to: 1
 19690                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19691  006A28  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19692  006A2A  A4D8               	btfss	status,2,c
 19693                           
 19694                           ; BSR set to: 1
 19695                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19696  006A2C  C171  F174         	movff	_security+7,_security+10	;volatile
 19697                           
 19698                           ; BSR set to: 1
 19699                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19700  006A30  0100               	movlb	0	; () banked
 19701  006A32  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19702  006A34  A4D8               	btfss	status,2,c
 19703  006A36  D00D               	goto	l1743
 19704                           
 19705                           ; BSR set to: 0
 19706                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19707  006A38  0101               	movlb	1	; () banked
 19708  006A3A  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19709  006A3C  A4D8               	btfss	status,2,c
 19710  006A3E  D006               	goto	l16689
 19711                           
 19712                           ; BSR set to: 1
 19713  006A40  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19714  006A42  A4D8               	btfss	status,2,c
 19715  006A44  D003               	goto	l16689
 19716                           
 19717                           ; BSR set to: 1
 19718                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19719  006A46  0E00               	movlw	0
 19720  006A48  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19721                           
 19722                           ;inputs_MC50.c: 660:         }
 19723  006A4A  0012               	return	
 19724  006A4C                     l16689:
 19725                           
 19726                           ; BSR set to: 1
 19727                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19728  006A4C  0E01               	movlw	1
 19729  006A4E  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19730  006A50  0012               	return	
 19731  006A52                     l1743:
 19732                           
 19733                           ; BSR set to: 0
 19734                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19735  006A52  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19736  006A56  0012               	return		;funcret
 19737  006A58                     __end_of_readInputs:
 19738                           	callstack 0
 19739                           
 19740 ;; *************** function _loadNVM_VarSystem *****************
 19741 ;; Defined at:
 19742 ;;		line 139 in file "controlMemory_MC50.c"
 19743 ;; Parameters:    Size  Location     Type
 19744 ;;		None
 19745 ;; Auto vars:     Size  Location     Type
 19746 ;;		None
 19747 ;; Return value:  Size  Location     Type
 19748 ;;                  1    wreg      void 
 19749 ;; Registers used:
 19750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19751 ;; Tracked objects:
 19752 ;;		On entry : 3F/0
 19753 ;;		On exit  : 0/0
 19754 ;;		Unchanged: 0/0
 19755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19760 ;;Total ram usage:        0 bytes
 19761 ;; Hardware stack levels used: 1
 19762 ;; Hardware stack levels required when called: 15
 19763 ;; This function calls:
 19764 ;;		_I2C1_Read1ByteRegister
 19765 ;;		_ResetDefaultMemory
 19766 ;;		_SaveNVM_VarSystem
 19767 ;;		_checkNVM_VarSystem
 19768 ;;		_i2c_readDataBlock
 19769 ;; This function is called by:
 19770 ;;		_main
 19771 ;; This function uses a non-reentrant model
 19772 ;;
 19773                           
 19774                           	psect	text73
 19775  0063B8                     __ptext73:
 19776                           	callstack 0
 19777  0063B8                     _loadNVM_VarSystem:
 19778                           	callstack 15
 19779                           
 19780                           ; BSR set to: 0
 19781                           ;controlMemory_MC50.c: 141:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19782                           
 19783                           ;incstack = 0
 19784  0063B8  0E00               	movlw	0
 19785  0063BA  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19786  0063BC  0E50               	movlw	80
 19787  0063BE  ECCB  F041         	call	_I2C1_Read1ByteRegister
 19788  0063C2  0AFF               	xorlw	255
 19789  0063C4  A4D8               	btfss	status,2,c
 19790  0063C6  D04C               	goto	l22689
 19791  0063C8  0E10               	movlw	16
 19792  0063CA  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19793  0063CC  0E50               	movlw	80
 19794  0063CE  ECCB  F041         	call	_I2C1_Read1ByteRegister
 19795  0063D2  0AFF               	xorlw	255
 19796  0063D4  A4D8               	btfss	status,2,c
 19797  0063D6  D044               	goto	l22689
 19798                           
 19799                           ;controlMemory_MC50.c: 142:     {;controlMemory_MC50.c: 143:         ResetDefaultMemory(
      +                          SC);
 19800  0063D8  0E00               	movlw	0
 19801  0063DA  ECB3  F02D         	call	_ResetDefaultMemory
 19802                           
 19803                           ;controlMemory_MC50.c: 144:         var_sys_NVM.learningTimeToClose = 0;
 19804  0063DE  0E00               	movlw	0
 19805  0063E0  0100               	movlb	0	; () banked
 19806  0063E2  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19807  0063E4  0E00               	movlw	0
 19808  0063E6  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19809  0063E8  0E00               	movlw	0
 19810  0063EA  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19811  0063EC  0E00               	movlw	0
 19812  0063EE  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19813                           
 19814                           ; BSR set to: 0
 19815                           ;controlMemory_MC50.c: 145:         var_sys_NVM.learningTimeToOpen = 0;
 19816  0063F0  0E00               	movlw	0
 19817  0063F2  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19818  0063F4  0E00               	movlw	0
 19819  0063F6  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19820  0063F8  0E00               	movlw	0
 19821  0063FA  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19822  0063FC  0E00               	movlw	0
 19823  0063FE  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19824                           
 19825                           ; BSR set to: 0
 19826                           ;controlMemory_MC50.c: 146:         var_sys_NVM.learningCurrentNormalClose = 0;
 19827  006400  0E00               	movlw	0
 19828  006402  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19829  006404  0E00               	movlw	0
 19830  006406  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19831                           
 19832                           ; BSR set to: 0
 19833                           ;controlMemory_MC50.c: 147:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19834  006408  0E00               	movlw	0
 19835  00640A  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19836  00640C  0E00               	movlw	0
 19837  00640E  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19838                           
 19839                           ; BSR set to: 0
 19840                           ;controlMemory_MC50.c: 148:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19841  006410  0E00               	movlw	0
 19842  006412  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19843  006414  0E00               	movlw	0
 19844  006416  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19845  006418  0E00               	movlw	0
 19846  00641A  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19847  00641C  0E00               	movlw	0
 19848  00641E  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19849                           
 19850                           ; BSR set to: 0
 19851                           ;controlMemory_MC50.c: 149:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19852  006420  0E00               	movlw	0
 19853  006422  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19854  006424  0E00               	movlw	0
 19855  006426  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19856  006428  0E00               	movlw	0
 19857  00642A  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19858  00642C  0E00               	movlw	0
 19859  00642E  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19860                           
 19861                           ;controlMemory_MC50.c: 150:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19862  006430  0E03               	movlw	3
 19863  006432  EC50  F045         	call	_SaveNVM_VarSystem
 19864                           
 19865                           ;controlMemory_MC50.c: 151:         var_sys_NVM.positionRemotesFull = 0;
 19866  006436  0E00               	movlw	0
 19867  006438  0100               	movlb	0	; () banked
 19868  00643A  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19869                           
 19870                           ; BSR set to: 0
 19871                           ;controlMemory_MC50.c: 152:         var_sys_NVM.positionRemotesWalk = 0;
 19872  00643C  0E00               	movlw	0
 19873  00643E  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19874                           
 19875                           ; BSR set to: 0
 19876                           ;controlMemory_MC50.c: 153:         var_sys_NVM.OnlyRollingCode = NO;
 19877  006440  0E00               	movlw	0
 19878  006442  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19879                           
 19880                           ; BSR set to: 0
 19881                           ;controlMemory_MC50.c: 154:         var_sys_NVM.counterMoves = 0;
 19882  006444  0E00               	movlw	0
 19883  006446  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19884  006448  0E00               	movlw	0
 19885  00644A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19886  00644C  0E00               	movlw	0
 19887  00644E  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19888  006450  0E00               	movlw	0
 19889  006452  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19890                           
 19891                           ;controlMemory_MC50.c: 155:        SaveNVM_VarSystem(pageMemoryCounters);
 19892  006454  0E02               	movlw	2
 19893  006456  EC50  F045         	call	_SaveNVM_VarSystem
 19894                           
 19895                           ;controlMemory_MC50.c: 157:          var_sys_NVM.TypeofMotor = 0;
 19896  00645A  0E00               	movlw	0
 19897  00645C  0100               	movlb	0	; () banked
 19898  00645E  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19899  006460                     l22689:
 19900                           
 19901                           ;controlMemory_MC50.c: 160:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19902  006460  0E00               	movlw	0
 19903  006462  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19904  006464  0E00               	movlw	0
 19905  006466  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19906  006468  0E98               	movlw	low _var_sys_NVM
 19907  00646A  6E24               	movwf	i2c_readDataBlock@data^0,c
 19908  00646C  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19909  00646E  0E00               	movlw	0
 19910  006470  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19911  006472  0E10               	movlw	16
 19912  006474  6E26               	movwf	i2c_readDataBlock@len^0,c
 19913  006476  0E50               	movlw	80
 19914  006478  EC1F  F03F         	call	_i2c_readDataBlock
 19915                           
 19916                           ;controlMemory_MC50.c: 161:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19917  00647C  0E00               	movlw	0
 19918  00647E  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19919  006480  0E10               	movlw	16
 19920  006482  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19921  006484  0EA8               	movlw	low (_var_sys_NVM+16)
 19922  006486  6E24               	movwf	i2c_readDataBlock@data^0,c
 19923  006488  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19924  00648A  0E00               	movlw	0
 19925  00648C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19926  00648E  0E10               	movlw	16
 19927  006490  6E26               	movwf	i2c_readDataBlock@len^0,c
 19928  006492  0E50               	movlw	80
 19929  006494  EC1F  F03F         	call	_i2c_readDataBlock
 19930                           
 19931                           ;controlMemory_MC50.c: 162:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19932  006498  0E00               	movlw	0
 19933  00649A  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19934  00649C  0E20               	movlw	32
 19935  00649E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19936  0064A0  0EB8               	movlw	low (_var_sys_NVM+32)
 19937  0064A2  6E24               	movwf	i2c_readDataBlock@data^0,c
 19938  0064A4  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19939  0064A6  0E00               	movlw	0
 19940  0064A8  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19941  0064AA  0E10               	movlw	16
 19942  0064AC  6E26               	movwf	i2c_readDataBlock@len^0,c
 19943  0064AE  0E50               	movlw	80
 19944  0064B0  EC1F  F03F         	call	_i2c_readDataBlock
 19945                           
 19946                           ;controlMemory_MC50.c: 163:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19947  0064B4  0E00               	movlw	0
 19948  0064B6  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19949  0064B8  0E30               	movlw	48
 19950  0064BA  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19951  0064BC  0EC8               	movlw	low (_var_sys_NVM+48)
 19952  0064BE  6E24               	movwf	i2c_readDataBlock@data^0,c
 19953  0064C0  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19954  0064C2  0E00               	movlw	0
 19955  0064C4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19956  0064C6  0E10               	movlw	16
 19957  0064C8  6E26               	movwf	i2c_readDataBlock@len^0,c
 19958  0064CA  0E50               	movlw	80
 19959  0064CC  EC1F  F03F         	call	_i2c_readDataBlock
 19960                           
 19961                           ;controlMemory_MC50.c: 166:     checkNVM_VarSystem();
 19962  0064D0  ECB0  F029         	call	_checkNVM_VarSystem	;wreg free
 19963                           
 19964                           ;controlMemory_MC50.c: 168:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19965  0064D4  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19966  0064D8  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19967  0064DC  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19968  0064E0  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19969  0064E4  0012               	return		;funcret
 19970  0064E6                     __end_of_loadNVM_VarSystem:
 19971                           	callstack 0
 19972                           
 19973 ;; *************** function _i2c_readDataBlock *****************
 19974 ;; Defined at:
 19975 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19976 ;; Parameters:    Size  Location     Type
 19977 ;;  address         1    wreg     unsigned char 
 19978 ;;  reg             2   33[COMRAM] unsigned short 
 19979 ;;  data            2   35[COMRAM] PTR void 
 19980 ;;		 -> var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemotesFull(1), memoryTEMP(16)
      +, 
 19981 ;;		 -> var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 19982 ;;  len             2   37[COMRAM] unsigned int 
 19983 ;; Auto vars:     Size  Location     Type
 19984 ;;  address         1   40[COMRAM] unsigned char 
 19985 ;;  d               4   41[COMRAM] struct .
 19986 ;; Return value:  Size  Location     Type
 19987 ;;                  1    wreg      void 
 19988 ;; Registers used:
 19989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19990 ;; Tracked objects:
 19991 ;;		On entry : 0/1
 19992 ;;		On exit  : 0/0
 19993 ;;		Unchanged: 0/0
 19994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19995 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19996 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19998 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19999 ;;Total ram usage:       12 bytes
 20000 ;; Hardware stack levels used: 1
 20001 ;; Hardware stack levels required when called: 12
 20002 ;; This function calls:
 20003 ;;		_I2C1_Close
 20004 ;;		_I2C1_MasterWrite
 20005 ;;		_I2C1_Open
 20006 ;;		_I2C1_SetAddressNackCallback
 20007 ;;		_I2C1_SetBuffer
 20008 ;;		_I2C1_SetDataCompleteCallback
 20009 ;; This function is called by:
 20010 ;;		_validateRemoteSerialNumber
 20011 ;;		_cmdMemoryIsEmpty
 20012 ;;		_loadNVM_VarSystem
 20013 ;; This function uses a non-reentrant model
 20014 ;;
 20015                           
 20016                           	psect	text74
 20017  007E3E                     __ptext74:
 20018                           	callstack 0
 20019  007E3E                     _i2c_readDataBlock:
 20020                           	callstack 14
 20021                           
 20022                           ;incstack = 0
 20023                           ;i2c_readDataBlock@address stored from wreg
 20024  007E3E  6E29               	movwf	i2c_readDataBlock@address^0,c
 20025                           
 20026                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 20027  007E40  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 20028  007E44  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 20029                           
 20030                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 20031  007E48  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 20032  007E4C  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 20033  007E50                     l19443:
 20034  007E50  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 20035  007E52  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 20036  007E54  EC2A  F03D         	call	_I2C1_Open
 20037  007E58  0900               	iorlw	0
 20038  007E5A  B4D8               	btfsc	status,2,c
 20039  007E5C  D7F9               	goto	l19443
 20040                           
 20041                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 20042  007E5E  0EAA               	movlw	low _rdBlkRegCompleteHandler
 20043  007E60  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20044  007E62  0E89               	movlw	high _rdBlkRegCompleteHandler
 20045  007E64  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20046  007E66  0E2A               	movlw	low i2c_readDataBlock@d
 20047  007E68  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20048  007E6A  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20049  007E6C  EC97  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20050                           
 20051                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 20052  007E70  0E22               	movlw	low i2c_readDataBlock@reg
 20053  007E72  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20054  007E74  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20055  007E76  0E00               	movlw	0
 20056  007E78  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20057  007E7A  0E01               	movlw	1
 20058  007E7C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20059  007E7E  EC4E  F048         	call	_I2C1_SetBuffer	;wreg free
 20060                           
 20061                           ; BSR set to: 2
 20062                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 20063  007E82  0E00               	movlw	0
 20064  007E84  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20065  007E86  0E00               	movlw	0
 20066  007E88  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20067  007E8A  0E00               	movlw	0
 20068  007E8C  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20069  007E8E  0E00               	movlw	0
 20070  007E90  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20071  007E92  EC7F  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 20072                           
 20073                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 20074  007E96  EC4D  F049         	call	_I2C1_MasterWrite	;wreg free
 20075  007E9A                     l19453:
 20076  007E9A  ECC0  F047         	call	_I2C1_Close	;wreg free
 20077  007E9E  06E8               	decf	wreg,f,c
 20078  007EA0  B4D8               	btfsc	status,2,c
 20079  007EA2  D7FB               	goto	l19453
 20080                           
 20081                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 20082  007EA4  0ED0               	movlw	208
 20083  007EA6  6E28               	movwf	??_i2c_readDataBlock^0,c
 20084  007EA8  0ECA               	movlw	202
 20085  007EAA                     u28957:
 20086  007EAA  2EE8               	decfsz	wreg,f,c
 20087  007EAC  D7FE               	bra	u28957
 20088  007EAE  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 20089  007EB0  D7FC               	bra	u28957
 20090  007EB2  0012               	return		;funcret
 20091  007EB4                     __end_of_i2c_readDataBlock:
 20092                           	callstack 0
 20093                           
 20094 ;; *************** function _checkNVM_VarSystem *****************
 20095 ;; Defined at:
 20096 ;;		line 314 in file "controlMemory_MC50.c"
 20097 ;; Parameters:    Size  Location     Type
 20098 ;;		None
 20099 ;; Auto vars:     Size  Location     Type
 20100 ;;  saveParam       1   57[COMRAM] unsigned char 
 20101 ;; Return value:  Size  Location     Type
 20102 ;;                  1    wreg      void 
 20103 ;; Registers used:
 20104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20105 ;; Tracked objects:
 20106 ;;		On entry : 0/2
 20107 ;;		On exit  : 0/0
 20108 ;;		Unchanged: 0/0
 20109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20114 ;;Total ram usage:        1 bytes
 20115 ;; Hardware stack levels used: 1
 20116 ;; Hardware stack levels required when called: 14
 20117 ;; This function calls:
 20118 ;;		_SaveNVM_VarSystem
 20119 ;; This function is called by:
 20120 ;;		_loadNVM_VarSystem
 20121 ;; This function uses a non-reentrant model
 20122 ;;
 20123                           
 20124                           	psect	text75
 20125  005360                     __ptext75:
 20126                           	callstack 0
 20127  005360                     _checkNVM_VarSystem:
 20128                           	callstack 15
 20129                           
 20130                           ;controlMemory_MC50.c: 316:     char saveParam;;controlMemory_MC50.c: 319:     saveParam
      +                           = 0;
 20131                           
 20132                           ;incstack = 0
 20133  005360  0E00               	movlw	0
 20134  005362  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20135                           
 20136                           ;controlMemory_MC50.c: 327:     if ( var_sys_NVM.decelarationOpen>45 )
 20137  005364  0E2D               	movlw	45
 20138  005366  0100               	movlb	0	; () banked
 20139  005368  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 20140  00536A  D004               	goto	l21139
 20141                           
 20142                           ; BSR set to: 0
 20143                           ;controlMemory_MC50.c: 328:     {;controlMemory_MC50.c: 330:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 20144  00536C  0E03               	movlw	3
 20145  00536E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20146                           
 20147                           ;controlMemory_MC50.c: 331:         saveParam=1;
 20148  005370  0E01               	movlw	1
 20149  005372  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20150  005374                     l21139:
 20151                           
 20152                           ; BSR set to: 0
 20153                           ;controlMemory_MC50.c: 334:     if ( var_sys_NVM.decelarationClose>45 )
 20154  005374  0E2D               	movlw	45
 20155  005376  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 20156  005378  D004               	goto	l1490
 20157                           
 20158                           ; BSR set to: 0
 20159                           ;controlMemory_MC50.c: 335:     {;controlMemory_MC50.c: 337:         var_sys_NVM.decelar
      +                          ationClose = 3;
 20160  00537A  0E03               	movlw	3
 20161  00537C  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20162                           
 20163                           ;controlMemory_MC50.c: 338:         saveParam=1;
 20164  00537E  0E01               	movlw	1
 20165  005380  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20166  005382                     l1490:
 20167                           
 20168                           ; BSR set to: 0
 20169                           ;controlMemory_MC50.c: 341:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 20170  005382  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 20171  005384  B4D8               	btfsc	status,2,c
 20172  005386  D003               	goto	u24360
 20173                           
 20174                           ; BSR set to: 0
 20175  005388  0E09               	movlw	9
 20176  00538A  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 20177  00538C  D004               	goto	l21147
 20178  00538E                     u24360:
 20179                           
 20180                           ; BSR set to: 0
 20181                           ;controlMemory_MC50.c: 342:     {;controlMemory_MC50.c: 344:         var_sys_NVM.motorPo
      +                          wer = 9;
 20182  00538E  0E09               	movlw	9
 20183  005390  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20184                           
 20185                           ;controlMemory_MC50.c: 345:         saveParam=1;
 20186  005392  0E01               	movlw	1
 20187  005394  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20188  005396                     l21147:
 20189                           
 20190                           ; BSR set to: 0
 20191                           ;controlMemory_MC50.c: 348:     if ( var_sys_NVM.motorSensitivity>9 )
 20192  005396  0E09               	movlw	9
 20193  005398  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 20194  00539A  D004               	goto	l21151
 20195                           
 20196                           ; BSR set to: 0
 20197                           ;controlMemory_MC50.c: 349:     {;controlMemory_MC50.c: 351:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 20198  00539C  0E00               	movlw	0
 20199  00539E  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20200                           
 20201                           ;controlMemory_MC50.c: 352:         saveParam=1;
 20202  0053A0  0E01               	movlw	1
 20203  0053A2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20204  0053A4                     l21151:
 20205                           
 20206                           ; BSR set to: 0
 20207                           ;controlMemory_MC50.c: 355:     if ( var_sys_NVM.walkTime>99 )
 20208  0053A4  0E63               	movlw	99
 20209  0053A6  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 20210  0053A8  D004               	goto	l21155
 20211                           
 20212                           ; BSR set to: 0
 20213                           ;controlMemory_MC50.c: 356:     {;controlMemory_MC50.c: 358:         var_sys_NVM.walkTim
      +                          e = 10;
 20214  0053AA  0E0A               	movlw	10
 20215  0053AC  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20216                           
 20217                           ;controlMemory_MC50.c: 359:         saveParam=1;
 20218  0053AE  0E01               	movlw	1
 20219  0053B0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20220  0053B2                     l21155:
 20221                           
 20222                           ; BSR set to: 0
 20223                           ;controlMemory_MC50.c: 362:     if ( var_sys_NVM.autoTimeFullClose>99 )
 20224  0053B2  0E63               	movlw	99
 20225  0053B4  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 20226  0053B6  D004               	goto	l21159
 20227                           
 20228                           ; BSR set to: 0
 20229                           ;controlMemory_MC50.c: 363:     {;controlMemory_MC50.c: 365:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 20230  0053B8  0E00               	movlw	0
 20231  0053BA  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20232                           
 20233                           ;controlMemory_MC50.c: 366:         saveParam=1;
 20234  0053BC  0E01               	movlw	1
 20235  0053BE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20236  0053C0                     l21159:
 20237                           
 20238                           ; BSR set to: 0
 20239                           ;controlMemory_MC50.c: 369:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 20240  0053C0  0E63               	movlw	99
 20241  0053C2  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 20242  0053C4  D004               	goto	l21163
 20243                           
 20244                           ; BSR set to: 0
 20245                           ;controlMemory_MC50.c: 370:     {;controlMemory_MC50.c: 372:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 20246  0053C6  0E00               	movlw	0
 20247  0053C8  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20248                           
 20249                           ;controlMemory_MC50.c: 373:         saveParam=1;
 20250  0053CA  0E01               	movlw	1
 20251  0053CC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20252  0053CE                     l21163:
 20253                           
 20254                           ; BSR set to: 0
 20255                           ;controlMemory_MC50.c: 376:     if ( var_sys_NVM.photoCellIsON>1 )
 20256  0053CE  0E01               	movlw	1
 20257  0053D0  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 20258  0053D2  D004               	goto	l21167
 20259                           
 20260                           ; BSR set to: 0
 20261                           ;controlMemory_MC50.c: 377:     {;controlMemory_MC50.c: 379:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 20262  0053D4  0E00               	movlw	0
 20263  0053D6  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20264                           
 20265                           ;controlMemory_MC50.c: 380:         saveParam=1;
 20266  0053D8  0E01               	movlw	1
 20267  0053DA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20268  0053DC                     l21167:
 20269                           
 20270                           ; BSR set to: 0
 20271                           ;controlMemory_MC50.c: 383:     if ( var_sys_NVM.photoCellInOpen>1 )
 20272  0053DC  0E01               	movlw	1
 20273  0053DE  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 20274  0053E0  D004               	goto	l21171
 20275                           
 20276                           ; BSR set to: 0
 20277                           ;controlMemory_MC50.c: 384:     {;controlMemory_MC50.c: 386:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 20278  0053E2  0E00               	movlw	0
 20279  0053E4  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20280                           
 20281                           ;controlMemory_MC50.c: 387:         saveParam=1;
 20282  0053E6  0E01               	movlw	1
 20283  0053E8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20284  0053EA                     l21171:
 20285                           
 20286                           ; BSR set to: 0
 20287                           ;controlMemory_MC50.c: 390:     if ( var_sys_NVM.securityBandIsON>1 )
 20288  0053EA  0E01               	movlw	1
 20289  0053EC  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 20290  0053EE  D004               	goto	l21175
 20291                           
 20292                           ; BSR set to: 0
 20293                           ;controlMemory_MC50.c: 391:     {;controlMemory_MC50.c: 393:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 20294  0053F0  0E00               	movlw	0
 20295  0053F2  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20296                           
 20297                           ;controlMemory_MC50.c: 394:         saveParam=1;
 20298  0053F4  0E01               	movlw	1
 20299  0053F6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20300  0053F8                     l21175:
 20301                           
 20302                           ; BSR set to: 0
 20303                           ;controlMemory_MC50.c: 397:     if ( var_sys_NVM.securityBandType>1 )
 20304  0053F8  0E01               	movlw	1
 20305  0053FA  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 20306  0053FC  D004               	goto	l21179
 20307                           
 20308                           ; BSR set to: 0
 20309                           ;controlMemory_MC50.c: 398:     {;controlMemory_MC50.c: 400:         var_sys_NVM.securit
      +                          yBandType = 1;
 20310  0053FE  0E01               	movlw	1
 20311  005400  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20312                           
 20313                           ;controlMemory_MC50.c: 401:         saveParam=1;
 20314  005402  0E01               	movlw	1
 20315  005404  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20316  005406                     l21179:
 20317                           
 20318                           ; BSR set to: 0
 20319                           ;controlMemory_MC50.c: 404:     if ( var_sys_NVM.securityBandInOpen>1 )
 20320  005406  0E01               	movlw	1
 20321  005408  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 20322  00540A  D004               	goto	l21183
 20323                           
 20324                           ; BSR set to: 0
 20325                           ;controlMemory_MC50.c: 405:     {;controlMemory_MC50.c: 407:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 20326  00540C  0E00               	movlw	0
 20327  00540E  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20328                           
 20329                           ;controlMemory_MC50.c: 408:         saveParam=1;
 20330  005410  0E01               	movlw	1
 20331  005412  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20332  005414                     l21183:
 20333                           
 20334                           ; BSR set to: 0
 20335                           ;controlMemory_MC50.c: 411:     if ( var_sys_NVM.operationMode>2 )
 20336  005414  0E02               	movlw	2
 20337  005416  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 20338  005418  D004               	goto	l21187
 20339                           
 20340                           ; BSR set to: 0
 20341                           ;controlMemory_MC50.c: 412:     {;controlMemory_MC50.c: 414:         var_sys_NVM.operati
      +                          onMode = 0;
 20342  00541A  0E00               	movlw	0
 20343  00541C  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20344                           
 20345                           ;controlMemory_MC50.c: 415:         saveParam=1;
 20346  00541E  0E01               	movlw	1
 20347  005420  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20348  005422                     l21187:
 20349                           
 20350                           ; BSR set to: 0
 20351                           ;controlMemory_MC50.c: 418:     if ( var_sys_NVM.flashLightMode>3 )
 20352  005422  0E03               	movlw	3
 20353  005424  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 20354  005426  D004               	goto	l21191
 20355                           
 20356                           ; BSR set to: 0
 20357                           ;controlMemory_MC50.c: 419:     {;controlMemory_MC50.c: 421:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 20358  005428  0E00               	movlw	0
 20359  00542A  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20360                           
 20361                           ;controlMemory_MC50.c: 422:         saveParam=1;
 20362  00542C  0E01               	movlw	1
 20363  00542E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20364  005430                     l21191:
 20365                           
 20366                           ; BSR set to: 0
 20367                           ;controlMemory_MC50.c: 425:     if ( var_sys_NVM.programmingDistance>1 )
 20368  005430  0E01               	movlw	1
 20369  005432  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 20370  005434  D004               	goto	l21195
 20371                           
 20372                           ; BSR set to: 0
 20373                           ;controlMemory_MC50.c: 426:     {;controlMemory_MC50.c: 428:         var_sys_NVM.program
      +                          mingDistance = 0;
 20374  005436  0E00               	movlw	0
 20375  005438  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20376                           
 20377                           ;controlMemory_MC50.c: 429:         saveParam=1;
 20378  00543A  0E01               	movlw	1
 20379  00543C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20380  00543E                     l21195:
 20381                           
 20382                           ; BSR set to: 0
 20383                           ;controlMemory_MC50.c: 432:     if ( var_sys_NVM.decelarationSensivity>9 )
 20384  00543E  0E09               	movlw	9
 20385  005440  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 20386  005442  D004               	goto	l21199
 20387                           
 20388                           ; BSR set to: 0
 20389                           ;controlMemory_MC50.c: 433:     {;controlMemory_MC50.c: 435:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 20390  005444  0E00               	movlw	0
 20391  005446  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20392                           
 20393                           ;controlMemory_MC50.c: 436:         saveParam=1;
 20394  005448  0E01               	movlw	1
 20395  00544A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20396  00544C                     l21199:
 20397                           
 20398                           ; BSR set to: 0
 20399                           ;controlMemory_MC50.c: 441:     if ( var_sys_NVM.homemPresente>2 )
 20400  00544C  0E02               	movlw	2
 20401  00544E  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 20402  005450  D004               	goto	l21203
 20403                           
 20404                           ; BSR set to: 0
 20405                           ;controlMemory_MC50.c: 442:     {;controlMemory_MC50.c: 444:         var_sys_NVM.homemPr
      +                          esente = 0;
 20406  005452  0E00               	movlw	0
 20407  005454  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20408                           
 20409                           ;controlMemory_MC50.c: 445:         saveParam=1;
 20410  005456  0E01               	movlw	1
 20411  005458  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20412  00545A                     l21203:
 20413                           
 20414                           ; BSR set to: 0
 20415                           ;controlMemory_MC50.c: 448:     if ( var_sys_NVM.logicDigital>1 )
 20416  00545A  0E01               	movlw	1
 20417  00545C  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 20418  00545E  D004               	goto	l21207
 20419                           
 20420                           ; BSR set to: 0
 20421                           ;controlMemory_MC50.c: 449:     {;controlMemory_MC50.c: 451:         var_sys_NVM.logicDi
      +                          gital = 0;
 20422  005460  0E00               	movlw	0
 20423  005462  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20424                           
 20425                           ;controlMemory_MC50.c: 452:         saveParam=1;
 20426  005464  0E01               	movlw	1
 20427  005466  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20428  005468                     l21207:
 20429                           
 20430                           ; BSR set to: 0
 20431                           ;controlMemory_MC50.c: 455:     if ( var_sys_NVM.softStart>9 )
 20432  005468  0E09               	movlw	9
 20433  00546A  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 20434  00546C  D004               	goto	l21211
 20435                           
 20436                           ; BSR set to: 0
 20437                           ;controlMemory_MC50.c: 456:     {;controlMemory_MC50.c: 458:         var_sys_NVM.softSta
      +                          rt = 0;
 20438  00546E  0E00               	movlw	0
 20439  005470  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20440                           
 20441                           ;controlMemory_MC50.c: 459:         saveParam=1;
 20442  005472  0E01               	movlw	1
 20443  005474  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20444  005476                     l21211:
 20445                           
 20446                           ; BSR set to: 0
 20447                           ;controlMemory_MC50.c: 463:     if ( var_sys_NVM.ligthTime>99 )
 20448  005476  0E63               	movlw	99
 20449  005478  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 20450  00547A  D004               	goto	l21215
 20451                           
 20452                           ; BSR set to: 0
 20453                           ;controlMemory_MC50.c: 464:     {;controlMemory_MC50.c: 466:         var_sys_NVM.ligthTi
      +                          me = 3;
 20454  00547C  0E03               	movlw	3
 20455  00547E  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20456                           
 20457                           ;controlMemory_MC50.c: 467:         saveParam=1;
 20458  005480  0E01               	movlw	1
 20459  005482  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20460  005484                     l21215:
 20461                           
 20462                           ; BSR set to: 0
 20463                           ;controlMemory_MC50.c: 470:     if ( var_sys_NVM.folow_me>9 )
 20464  005484  0E09               	movlw	9
 20465  005486  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 20466  005488  D004               	goto	l21219
 20467                           
 20468                           ; BSR set to: 0
 20469                           ;controlMemory_MC50.c: 471:     {;controlMemory_MC50.c: 473:         var_sys_NVM.folow_m
      +                          e = 0;
 20470  00548A  0E00               	movlw	0
 20471  00548C  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20472                           
 20473                           ;controlMemory_MC50.c: 474:         saveParam=1;
 20474  00548E  0E01               	movlw	1
 20475  005490  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20476  005492                     l21219:
 20477                           
 20478                           ; BSR set to: 0
 20479                           ;controlMemory_MC50.c: 479:     if ( var_sys_NVM.electricBrake>1 )
 20480  005492  0E01               	movlw	1
 20481  005494  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 20482  005496  D004               	goto	l1512
 20483                           
 20484                           ; BSR set to: 0
 20485                           ;controlMemory_MC50.c: 480:     {;controlMemory_MC50.c: 482:         var_sys_NVM.electri
      +                          cBrake = 0;
 20486  005498  0E00               	movlw	0
 20487  00549A  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20488                           
 20489                           ;controlMemory_MC50.c: 483:         saveParam=1;
 20490  00549C  0E01               	movlw	1
 20491  00549E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20492  0054A0                     l1512:
 20493                           
 20494                           ; BSR set to: 0
 20495                           ;controlMemory_MC50.c: 486:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 20496  0054A0  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 20497  0054A2  B4D8               	btfsc	status,2,c
 20498  0054A4  D003               	goto	u24570
 20499                           
 20500                           ; BSR set to: 0
 20501  0054A6  0E09               	movlw	9
 20502  0054A8  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 20503  0054AA  D004               	goto	l21227
 20504  0054AC                     u24570:
 20505                           
 20506                           ; BSR set to: 0
 20507                           ;controlMemory_MC50.c: 487:     {;controlMemory_MC50.c: 489:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 20508  0054AC  0E05               	movlw	5
 20509  0054AE  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20510                           
 20511                           ;controlMemory_MC50.c: 490:         saveParam=1;
 20512  0054B0  0E01               	movlw	1
 20513  0054B2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20514  0054B4                     l21227:
 20515                           
 20516                           ; BSR set to: 0
 20517                           ;controlMemory_MC50.c: 493:     if ( var_sys_NVM.flashRGBMode>3 )
 20518  0054B4  0E03               	movlw	3
 20519  0054B6  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 20520  0054B8  D004               	goto	l21231
 20521                           
 20522                           ; BSR set to: 0
 20523                           ;controlMemory_MC50.c: 494:     {;controlMemory_MC50.c: 496:         var_sys_NVM.flashRG
      +                          BMode = 3;
 20524  0054BA  0E03               	movlw	3
 20525  0054BC  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20526                           
 20527                           ;controlMemory_MC50.c: 497:         saveParam=1;
 20528  0054BE  0E01               	movlw	1
 20529  0054C0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20530  0054C2                     l21231:
 20531                           
 20532                           ; BSR set to: 0
 20533                           ;controlMemory_MC50.c: 499:         if ( var_sys_NVM.Stopboton > 1 )
 20534  0054C2  0E01               	movlw	1
 20535  0054C4  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 20536  0054C6  D004               	goto	l21235
 20537                           
 20538                           ; BSR set to: 0
 20539                           ;controlMemory_MC50.c: 500:     {;controlMemory_MC50.c: 502:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 20540  0054C8  0E00               	movlw	0
 20541  0054CA  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20542                           
 20543                           ;controlMemory_MC50.c: 503:         saveParam=1;
 20544  0054CC  0E01               	movlw	1
 20545  0054CE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20546  0054D0                     l21235:
 20547                           
 20548                           ; BSR set to: 0
 20549                           ;controlMemory_MC50.c: 505:         if ( var_sys_NVM.Direction_motor>1 )
 20550  0054D0  0E01               	movlw	1
 20551  0054D2  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 20552  0054D4  D004               	goto	l21239
 20553                           
 20554                           ; BSR set to: 0
 20555                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.Directi
      +                          on_motor = 1;
 20556  0054D6  0E01               	movlw	1
 20557  0054D8  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20558                           
 20559                           ;controlMemory_MC50.c: 509:         saveParam=1;
 20560  0054DA  0E01               	movlw	1
 20561  0054DC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20562  0054DE                     l21239:
 20563                           
 20564                           ; BSR set to: 0
 20565                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.softstop>9 )
 20566  0054DE  0E09               	movlw	9
 20567  0054E0  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 20568  0054E2  D004               	goto	l1519
 20569                           
 20570                           ; BSR set to: 0
 20571                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.softsto
      +                          p = 0;
 20572  0054E4  0E00               	movlw	0
 20573  0054E6  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20574                           
 20575                           ;controlMemory_MC50.c: 515:         saveParam=1;
 20576  0054E8  0E01               	movlw	1
 20577  0054EA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20578  0054EC                     l1519:
 20579                           
 20580                           ; BSR set to: 0
 20581                           ;controlMemory_MC50.c: 540:     if ( saveParam != 0 )
 20582  0054EC  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 20583  0054EE  B4D8               	btfsc	status,2,c
 20584  0054F0  0012               	return	
 20585                           
 20586                           ; BSR set to: 0
 20587                           ;controlMemory_MC50.c: 541:     {;controlMemory_MC50.c: 542:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 20588  0054F2  0E00               	movlw	0
 20589  0054F4  EC50  F045         	call	_SaveNVM_VarSystem
 20590                           
 20591                           ;controlMemory_MC50.c: 543:         SaveNVM_VarSystem(pageMemoryE);
 20592  0054F8  0E01               	movlw	1
 20593  0054FA  EC50  F045         	call	_SaveNVM_VarSystem
 20594  0054FE  0012               	return		;funcret
 20595  005500                     __end_of_checkNVM_VarSystem:
 20596                           	callstack 0
 20597                           
 20598 ;; *************** function _ResetDefaultMemory *****************
 20599 ;; Defined at:
 20600 ;;		line 186 in file "controlMemory_MC50.c"
 20601 ;; Parameters:    Size  Location     Type
 20602 ;;  type            1    wreg     unsigned char 
 20603 ;; Auto vars:     Size  Location     Type
 20604 ;;  type            1   57[COMRAM] unsigned char 
 20605 ;; Return value:  Size  Location     Type
 20606 ;;                  1    wreg      void 
 20607 ;; Registers used:
 20608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20609 ;; Tracked objects:
 20610 ;;		On entry : 31/0
 20611 ;;		On exit  : 0/0
 20612 ;;		Unchanged: 0/0
 20613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20618 ;;Total ram usage:        1 bytes
 20619 ;; Hardware stack levels used: 1
 20620 ;; Hardware stack levels required when called: 14
 20621 ;; This function calls:
 20622 ;;		_SaveNVM_VarSystem
 20623 ;; This function is called by:
 20624 ;;		_loadNVM_VarSystem
 20625 ;;		_sm_execute_menuConfiguration
 20626 ;; This function uses a non-reentrant model
 20627 ;;
 20628                           
 20629                           	psect	text76
 20630  005B66                     __ptext76:
 20631                           	callstack 0
 20632  005B66                     _ResetDefaultMemory:
 20633                           	callstack 14
 20634                           
 20635                           ;incstack = 0
 20636                           ;ResetDefaultMemory@type stored from wreg
 20637  005B66  6E3A               	movwf	ResetDefaultMemory@type^0,c
 20638                           
 20639                           ;controlMemory_MC50.c: 186: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 187: {;controlMemory_MC50.c: 190:     var_sys_NVM.decelarationOpen = 3;
 20640  005B68  0E03               	movlw	3
 20641  005B6A  0100               	movlb	0	; () banked
 20642  005B6C  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20643                           
 20644                           ;controlMemory_MC50.c: 191:     var_sys_NVM.motorPower = 9;
 20645  005B6E  0E09               	movlw	9
 20646  005B70  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20647                           
 20648                           ;controlMemory_MC50.c: 192:     var_sys_NVM.decelarationClose = 3;
 20649  005B72  0E03               	movlw	3
 20650  005B74  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20651                           
 20652                           ;controlMemory_MC50.c: 193:     var_sys_NVM.photoCellIsON = 0;
 20653  005B76  0E00               	movlw	0
 20654  005B78  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20655                           
 20656                           ;controlMemory_MC50.c: 194:     var_sys_NVM.photoCellInOpen = 0;
 20657  005B7A  0E00               	movlw	0
 20658  005B7C  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20659                           
 20660                           ;controlMemory_MC50.c: 195:     var_sys_NVM.securityBandIsON = 0 ;
 20661  005B7E  0E00               	movlw	0
 20662  005B80  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20663                           
 20664                           ;controlMemory_MC50.c: 196:     var_sys_NVM.securityBandType = 1;
 20665  005B82  0E01               	movlw	1
 20666  005B84  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20667                           
 20668                           ;controlMemory_MC50.c: 197:     var_sys_NVM.securityBandInOpen = 0;
 20669  005B86  0E00               	movlw	0
 20670  005B88  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20671                           
 20672                           ;controlMemory_MC50.c: 198:     var_sys_NVM.flashLightMode = 0;
 20673  005B8A  0E00               	movlw	0
 20674  005B8C  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20675                           
 20676                           ;controlMemory_MC50.c: 199:     var_sys_NVM.programmingDistance = 0;
 20677  005B8E  0E00               	movlw	0
 20678  005B90  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20679                           
 20680                           ;controlMemory_MC50.c: 200:     var_sys_NVM.decelarationSensivity = 0;
 20681  005B92  0E00               	movlw	0
 20682  005B94  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20683                           
 20684                           ;controlMemory_MC50.c: 201:     var_sys_NVM.homemPresente = 0;
 20685  005B96  0E00               	movlw	0
 20686  005B98  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20687                           
 20688                           ;controlMemory_MC50.c: 202:     var_sys_NVM.autoTimeWalkClose = 0;
 20689  005B9A  0E00               	movlw	0
 20690  005B9C  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20691                           
 20692                           ;controlMemory_MC50.c: 203:     var_sys_NVM.ligthTime = 3;
 20693  005B9E  0E03               	movlw	3
 20694  005BA0  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20695                           
 20696                           ;controlMemory_MC50.c: 204:     var_sys_NVM.folow_me = 0;
 20697  005BA2  0E00               	movlw	0
 20698  005BA4  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20699                           
 20700                           ;controlMemory_MC50.c: 205:     var_sys_NVM.electricBrake = 0;
 20701  005BA6  0E00               	movlw	0
 20702  005BA8  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20703                           
 20704                           ;controlMemory_MC50.c: 206:     var_sys_NVM.autoTimeWalkClose = 0;
 20705  005BAA  0E00               	movlw	0
 20706  005BAC  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20707                           
 20708                           ;controlMemory_MC50.c: 207:     var_sys_NVM.Direction_motor = 1 ;
 20709  005BAE  0E01               	movlw	1
 20710  005BB0  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20711                           
 20712                           ; BSR set to: 0
 20713                           ;controlMemory_MC50.c: 210:     if (type == SC){
 20714  005BB2  503A               	movf	ResetDefaultMemory@type^0,w,c
 20715  005BB4  A4D8               	btfss	status,2,c
 20716  005BB6  D014               	goto	l19941
 20717                           
 20718                           ; BSR set to: 0
 20719                           ;controlMemory_MC50.c: 212:         var_sys_NVM.motorSensitivity = 0;
 20720  005BB8  0E00               	movlw	0
 20721  005BBA  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20722                           
 20723                           ;controlMemory_MC50.c: 213:         var_sys_NVM.logicDigital = 0;
 20724  005BBC  0E00               	movlw	0
 20725  005BBE  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20726                           
 20727                           ;controlMemory_MC50.c: 214:         var_sys_NVM.Stopboton = 0;
 20728  005BC0  0E00               	movlw	0
 20729  005BC2  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20730                           
 20731                           ;controlMemory_MC50.c: 215:         var_sys_NVM.autoTimeFullClose = 0;
 20732  005BC4  0E00               	movlw	0
 20733  005BC6  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20734                           
 20735                           ;controlMemory_MC50.c: 216:         var_sys_NVM.operationMode = 0;
 20736  005BC8  0E00               	movlw	0
 20737  005BCA  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20738                           
 20739                           ;controlMemory_MC50.c: 217:         var_sys_NVM.velocityDecelaration = 5;
 20740  005BCC  0E05               	movlw	5
 20741  005BCE  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20742                           
 20743                           ;controlMemory_MC50.c: 218:         var_sys_NVM.flashRGBMode = 3;
 20744  005BD0  0E03               	movlw	3
 20745  005BD2  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20746                           
 20747                           ;controlMemory_MC50.c: 219:         var_sys_NVM.softstop = 0;
 20748  005BD4  0E00               	movlw	0
 20749  005BD6  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20750                           
 20751                           ;controlMemory_MC50.c: 220:         var_sys_NVM.softStart = 0;
 20752  005BD8  0E00               	movlw	0
 20753  005BDA  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20754                           
 20755                           ;controlMemory_MC50.c: 221:         var_sys_NVM.walkTime = 10;
 20756  005BDC  0E0A               	movlw	10
 20757  005BDE  D039               	goto	L82
 20758  005BE0                     l19941:
 20759                           
 20760                           ; BSR set to: 0
 20761  005BE0  043A               	decf	ResetDefaultMemory@type^0,w,c
 20762  005BE2  A4D8               	btfss	status,2,c
 20763  005BE4  D01B               	goto	l19945
 20764                           
 20765                           ; BSR set to: 0
 20766                           ;controlMemory_MC50.c: 225:         var_sys_NVM.decelarationClose = 4;
 20767  005BE6  0E04               	movlw	4
 20768  005BE8  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20769                           
 20770                           ;controlMemory_MC50.c: 226:         var_sys_NVM.decelarationOpen = 4;
 20771  005BEA  0E04               	movlw	4
 20772  005BEC  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20773                           
 20774                           ;controlMemory_MC50.c: 227:         var_sys_NVM.motorSensitivity = 4;
 20775  005BEE  0E04               	movlw	4
 20776  005BF0  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20777                           
 20778                           ;controlMemory_MC50.c: 228:         var_sys_NVM.logicDigital = 1;
 20779  005BF2  0E01               	movlw	1
 20780  005BF4  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20781                           
 20782                           ;controlMemory_MC50.c: 229:         var_sys_NVM.Stopboton = 1;
 20783  005BF6  0E01               	movlw	1
 20784  005BF8  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20785                           
 20786                           ;controlMemory_MC50.c: 230:         var_sys_NVM.autoTimeFullClose = 0;
 20787  005BFA  0E00               	movlw	0
 20788  005BFC  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20789                           
 20790                           ;controlMemory_MC50.c: 231:         var_sys_NVM.operationMode = 0;
 20791  005BFE  0E00               	movlw	0
 20792  005C00  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20793                           
 20794                           ;controlMemory_MC50.c: 232:         var_sys_NVM.velocityDecelaration = 5;
 20795  005C02  0E05               	movlw	5
 20796  005C04  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20797                           
 20798                           ;controlMemory_MC50.c: 233:         var_sys_NVM.flashRGBMode = 3;
 20799  005C06  0E03               	movlw	3
 20800  005C08  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20801                           
 20802                           ;controlMemory_MC50.c: 234:         var_sys_NVM.softstop = 0;
 20803  005C0A  0E00               	movlw	0
 20804  005C0C  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20805                           
 20806                           ;controlMemory_MC50.c: 235:         var_sys_NVM.softStart = 5;
 20807  005C0E  0E05               	movlw	5
 20808  005C10  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20809                           
 20810                           ;controlMemory_MC50.c: 236:         var_sys_NVM.walkTime = 0;
 20811  005C12  0E00               	movlw	0
 20812  005C14  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20813                           
 20814                           ;controlMemory_MC50.c: 237:         var_sys_NVM.Direction_motor = 0 ;
 20815  005C16  0E00               	movlw	0
 20816  005C18  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20817                           
 20818                           ;controlMemory_MC50.c: 239:     }
 20819  005C1A  D01C               	goto	l19949
 20820  005C1C                     l19945:
 20821                           
 20822                           ; BSR set to: 0
 20823  005C1C  0E02               	movlw	2
 20824  005C1E  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20825  005C20  A4D8               	btfss	status,2,c
 20826  005C22  D018               	goto	l19949
 20827                           
 20828                           ; BSR set to: 0
 20829                           ;controlMemory_MC50.c: 241:         var_sys_NVM.decelarationClose = 6;
 20830  005C24  0E06               	movlw	6
 20831  005C26  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20832                           
 20833                           ;controlMemory_MC50.c: 242:         var_sys_NVM.decelarationOpen = 2;
 20834  005C28  0E02               	movlw	2
 20835  005C2A  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20836                           
 20837                           ;controlMemory_MC50.c: 243:         var_sys_NVM.motorSensitivity = 0;
 20838  005C2C  0E00               	movlw	0
 20839  005C2E  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20840                           
 20841                           ;controlMemory_MC50.c: 244:         var_sys_NVM.logicDigital = 0;
 20842  005C30  0E00               	movlw	0
 20843  005C32  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20844                           
 20845                           ;controlMemory_MC50.c: 245:         var_sys_NVM.Stopboton = 0;
 20846  005C34  0E00               	movlw	0
 20847  005C36  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20848                           
 20849                           ;controlMemory_MC50.c: 246:         var_sys_NVM.autoTimeFullClose = 0;
 20850  005C38  0E00               	movlw	0
 20851  005C3A  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20852                           
 20853                           ;controlMemory_MC50.c: 247:         var_sys_NVM.operationMode = 2;
 20854  005C3C  0E02               	movlw	2
 20855  005C3E  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20856                           
 20857                           ;controlMemory_MC50.c: 248:         var_sys_NVM.velocityDecelaration = 5;
 20858  005C40  0E05               	movlw	5
 20859  005C42  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20860                           
 20861                           ;controlMemory_MC50.c: 249:         var_sys_NVM.flashRGBMode = 1;
 20862  005C44  0E01               	movlw	1
 20863  005C46  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20864                           
 20865                           ;controlMemory_MC50.c: 250:         var_sys_NVM.softstop = 5;
 20866  005C48  0E05               	movlw	5
 20867  005C4A  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20868                           
 20869                           ;controlMemory_MC50.c: 251:         var_sys_NVM.softStart = 0;
 20870  005C4C  0E00               	movlw	0
 20871  005C4E  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20872                           
 20873                           ;controlMemory_MC50.c: 252:         var_sys_NVM.walkTime = 0;
 20874  005C50  0E00               	movlw	0
 20875  005C52                     L82:
 20876  005C52  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20877  005C54                     l19949:
 20878                           
 20879                           ; BSR set to: 0
 20880                           ;controlMemory_MC50.c: 260:     SaveNVM_VarSystem(pageMemoryE);
 20881  005C54  0E01               	movlw	1
 20882  005C56  EC50  F045         	call	_SaveNVM_VarSystem
 20883                           
 20884                           ;controlMemory_MC50.c: 261:     SaveNVM_VarSystem(pageMemoryP);
 20885  005C5A  0E00               	movlw	0
 20886  005C5C  EC50  F045         	call	_SaveNVM_VarSystem
 20887                           
 20888                           ;controlMemory_MC50.c: 266:     var_sys_NVM.learningTimeToClose = 0;
 20889  005C60  0E00               	movlw	0
 20890  005C62  0100               	movlb	0	; () banked
 20891  005C64  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20892  005C66  0E00               	movlw	0
 20893  005C68  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20894  005C6A  0E00               	movlw	0
 20895  005C6C  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20896  005C6E  0E00               	movlw	0
 20897  005C70  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20898                           
 20899                           ;controlMemory_MC50.c: 267:     var_sys_NVM.learningTimeToOpen = 0;
 20900  005C72  0E00               	movlw	0
 20901  005C74  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20902  005C76  0E00               	movlw	0
 20903  005C78  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20904  005C7A  0E00               	movlw	0
 20905  005C7C  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20906  005C7E  0E00               	movlw	0
 20907  005C80  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20908                           
 20909                           ;controlMemory_MC50.c: 268:     var_sys_NVM.learningCurrentNormalClose = 0;
 20910  005C82  0E00               	movlw	0
 20911  005C84  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20912  005C86  0E00               	movlw	0
 20913  005C88  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20914                           
 20915                           ;controlMemory_MC50.c: 269:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20916  005C8A  0E00               	movlw	0
 20917  005C8C  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20918  005C8E  0E00               	movlw	0
 20919  005C90  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20920                           
 20921                           ;controlMemory_MC50.c: 270:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20922  005C92  0E00               	movlw	0
 20923  005C94  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20924  005C96  0E00               	movlw	0
 20925  005C98  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20926  005C9A  0E00               	movlw	0
 20927  005C9C  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20928  005C9E  0E00               	movlw	0
 20929  005CA0  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20930                           
 20931                           ;controlMemory_MC50.c: 271:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20932  005CA2  0E00               	movlw	0
 20933  005CA4  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20934  005CA6  0E00               	movlw	0
 20935  005CA8  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20936  005CAA  0E00               	movlw	0
 20937  005CAC  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20938  005CAE  0E00               	movlw	0
 20939  005CB0  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20940                           
 20941                           ; BSR set to: 0
 20942                           ;controlMemory_MC50.c: 277:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20943  005CB2  A48D               	btfss	141,2,c	;volatile
 20944                           
 20945                           ; BSR set to: 0
 20946  005CB4  B28D               	btfsc	141,1,c	;volatile
 20947  005CB6  D015               	goto	l19963
 20948                           
 20949                           ; BSR set to: 0
 20950  005CB8  A08E               	btfss	142,0,c	;volatile
 20951                           
 20952                           ; BSR set to: 0
 20953  005CBA  BA8D               	btfsc	141,5,c	;volatile
 20954  005CBC  D012               	goto	l19963
 20955                           
 20956                           ; BSR set to: 0
 20957                           ;controlMemory_MC50.c: 278:      var_sys.actualCounterMoves = 0;
 20958  005CBE  0E00               	movlw	0
 20959  005CC0  0101               	movlb	1	; () banked
 20960  005CC2  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20961  005CC4  0E00               	movlw	0
 20962  005CC6  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20963  005CC8  0E00               	movlw	0
 20964  005CCA  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20965  005CCC  0E00               	movlw	0
 20966  005CCE  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20967                           
 20968                           ;controlMemory_MC50.c: 279:      var_sys_NVM.counterMoves = 0;
 20969  005CD0  0E00               	movlw	0
 20970  005CD2  0100               	movlb	0	; () banked
 20971  005CD4  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20972  005CD6  0E00               	movlw	0
 20973  005CD8  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20974  005CDA  0E00               	movlw	0
 20975  005CDC  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20976  005CDE  0E00               	movlw	0
 20977  005CE0  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20978  005CE2                     l19963:
 20979                           
 20980                           ; BSR set to: 0
 20981                           ;controlMemory_MC50.c: 284:     SaveNVM_VarSystem(pageMemoryCounters);
 20982  005CE2  0E02               	movlw	2
 20983  005CE4  EC50  F045         	call	_SaveNVM_VarSystem
 20984                           
 20985                           ;controlMemory_MC50.c: 285:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20986  005CE8  0E03               	movlw	3
 20987  005CEA  EC50  F045         	call	_SaveNVM_VarSystem
 20988  005CEE  0012               	return		;funcret
 20989  005CF0                     __end_of_ResetDefaultMemory:
 20990                           	callstack 0
 20991                           
 20992 ;; *************** function _I2C1_Read1ByteRegister *****************
 20993 ;; Defined at:
 20994 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20995 ;; Parameters:    Size  Location     Type
 20996 ;;  address         1    wreg     unsigned char 
 20997 ;;  reg             1   33[COMRAM] unsigned char 
 20998 ;; Auto vars:     Size  Location     Type
 20999 ;;  address         1   34[COMRAM] unsigned char 
 21000 ;;  returnValue     1   35[COMRAM] unsigned char 
 21001 ;; Return value:  Size  Location     Type
 21002 ;;                  1    wreg      unsigned char 
 21003 ;; Registers used:
 21004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21005 ;; Tracked objects:
 21006 ;;		On entry : 31/0
 21007 ;;		On exit  : 33/2
 21008 ;;		Unchanged: 0/0
 21009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21010 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21013 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21014 ;;Total ram usage:        3 bytes
 21015 ;; Hardware stack levels used: 1
 21016 ;; Hardware stack levels required when called: 12
 21017 ;; This function calls:
 21018 ;;		_I2C1_Close
 21019 ;;		_I2C1_MasterWrite
 21020 ;;		_I2C1_Open
 21021 ;;		_I2C1_SetAddressNackCallback
 21022 ;;		_I2C1_SetBuffer
 21023 ;;		_I2C1_SetDataCompleteCallback
 21024 ;; This function is called by:
 21025 ;;		_loadNVM_VarSystem
 21026 ;; This function uses a non-reentrant model
 21027 ;;
 21028                           
 21029                           	psect	text77
 21030  008396                     __ptext77:
 21031                           	callstack 0
 21032  008396                     _I2C1_Read1ByteRegister:
 21033                           	callstack 17
 21034                           
 21035                           ;incstack = 0
 21036                           ;I2C1_Read1ByteRegister@address stored from wreg
 21037  008396  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 21038                           
 21039                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 21040  008398  0E00               	movlw	0
 21041  00839A  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 21042  00839C                     l21117:
 21043  00839C  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 21044  00839E  EC2A  F03D         	call	_I2C1_Open
 21045  0083A2  0900               	iorlw	0
 21046  0083A4  B4D8               	btfsc	status,2,c
 21047  0083A6  D7FA               	goto	l21117
 21048                           
 21049                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 21050  0083A8  0ED6               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 21051  0083AA  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 21052  0083AC  0E8C               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 21053  0083AE  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 21054  0083B0  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 21055  0083B2  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 21056  0083B4  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 21057  0083B6  EC97  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 21058                           
 21059                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 21060  0083BA  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 21061  0083BC  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 21062  0083BE  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 21063  0083C0  0E00               	movlw	0
 21064  0083C2  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 21065  0083C4  0E01               	movlw	1
 21066  0083C6  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 21067  0083C8  EC4E  F048         	call	_I2C1_SetBuffer	;wreg free
 21068                           
 21069                           ; BSR set to: 2
 21070                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 21071  0083CC  0E00               	movlw	0
 21072  0083CE  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 21073  0083D0  0E00               	movlw	0
 21074  0083D2  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 21075  0083D4  0E00               	movlw	0
 21076  0083D6  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 21077  0083D8  0E00               	movlw	0
 21078  0083DA  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 21079  0083DC  EC7F  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 21080                           
 21081                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 21082  0083E0  EC4D  F049         	call	_I2C1_MasterWrite	;wreg free
 21083  0083E4                     l21127:
 21084  0083E4  ECC0  F047         	call	_I2C1_Close	;wreg free
 21085  0083E8  06E8               	decf	wreg,f,c
 21086  0083EA  B4D8               	btfsc	status,2,c
 21087  0083EC  D7FB               	goto	l21127
 21088                           
 21089                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 21090  0083EE  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 21091  0083F0  0012               	return		;funcret
 21092  0083F2                     __end_of_I2C1_Read1ByteRegister:
 21093                           	callstack 0
 21094                           
 21095 ;; *************** function _getKeyPressed *****************
 21096 ;; Defined at:
 21097 ;;		line 217 in file "inputs_MC50.c"
 21098 ;; Parameters:    Size  Location     Type
 21099 ;;		None
 21100 ;; Auto vars:     Size  Location     Type
 21101 ;;  temp            1   15[COMRAM] char 
 21102 ;; Return value:  Size  Location     Type
 21103 ;;                  1    wreg      char 
 21104 ;; Registers used:
 21105 ;;		wreg, status,2, status,0
 21106 ;; Tracked objects:
 21107 ;;		On entry : 3E/1
 21108 ;;		On exit  : 3D/0
 21109 ;;		Unchanged: 0/0
 21110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21114 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21115 ;;Total ram usage:        1 bytes
 21116 ;; Hardware stack levels used: 1
 21117 ;; Hardware stack levels required when called: 4
 21118 ;; This function calls:
 21119 ;;		Nothing
 21120 ;; This function is called by:
 21121 ;;		_main
 21122 ;; This function uses a non-reentrant model
 21123 ;;
 21124                           
 21125                           	psect	text78
 21126  0090E6                     __ptext78:
 21127                           	callstack 0
 21128  0090E6                     _getKeyPressed:
 21129                           	callstack 26
 21130                           
 21131                           ;inputs_MC50.c: 218:     signed char temp=-1;
 21132                           
 21133                           ;incstack = 0
 21134  0090E6  6810               	setf	getKeyPressed@temp^0,c
 21135                           
 21136                           ;inputs_MC50.c: 219:     if(RFFull)
 21137  0090E8  0100               	movlb	0	; () banked
 21138  0090EA  518B               	movf	_RFFull& (0+255),w,b	;volatile
 21139  0090EC  B4D8               	btfsc	status,2,c
 21140  0090EE  D005               	goto	l16521
 21141                           
 21142                           ; BSR set to: 0
 21143                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 21144  0090F0  0102               	movlb	2	; () banked
 21145  0090F2  39CF               	swapf	(_BufferRF+7)& (0+255),w,b
 21146  0090F4  0B0F               	andlw	15
 21147  0090F6  0B0F               	andlw	15
 21148  0090F8  6E10               	movwf	getKeyPressed@temp^0,c
 21149  0090FA                     l16521:
 21150                           
 21151                           ;inputs_MC50.c: 223:     return temp;
 21152  0090FA  5010               	movf	getKeyPressed@temp^0,w,c
 21153  0090FC  0012               	return		;funcret
 21154  0090FE                     __end_of_getKeyPressed:
 21155                           	callstack 0
 21156                           
 21157 ;; *************** function _eusartparser *****************
 21158 ;; Defined at:
 21159 ;;		line 448 in file "eusartparser.c"
 21160 ;; Parameters:    Size  Location     Type
 21161 ;;  package         1   57[COMRAM] PTR struct package_t
 21162 ;;		 -> main@package(7), 
 21163 ;; Auto vars:     Size  Location     Type
 21164 ;;  a               7    0        struct package_t
 21165 ;; Return value:  Size  Location     Type
 21166 ;;                  1    wreg      void 
 21167 ;; Registers used:
 21168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 21169 ;; Tracked objects:
 21170 ;;		On entry : 3F/E
 21171 ;;		On exit  : 0/0
 21172 ;;		Unchanged: 0/0
 21173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21174 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21176 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21177 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21178 ;;Total ram usage:        3 bytes
 21179 ;; Hardware stack levels used: 1
 21180 ;; Hardware stack levels required when called: 14
 21181 ;; This function calls:
 21182 ;;		_SaveNVM_VarSystem
 21183 ;;		_read_eusartparser
 21184 ;;		_write_eusartparser
 21185 ;;		_write_package
 21186 ;; This function is called by:
 21187 ;;		_main
 21188 ;; This function uses a non-reentrant model
 21189 ;;
 21190                           
 21191                           	psect	text79
 21192  005FE6                     __ptext79:
 21193                           	callstack 0
 21194  005FE6                     _eusartparser:
 21195                           	callstack 16
 21196                           
 21197                           ; BSR set to: 14
 21198                           ;eusartparser.c: 449:         struct package_t a;;eusartparser.c: 450:         switch(pa
      +                          ckage->functioncode){
 21199                           
 21200                           ;incstack = 0
 21201  005FE6  D091               	goto	l22823
 21202  005FE8                     l22783:
 21203                           
 21204                           ; BSR set to: 0
 21205                           ;eusartparser.c: 452:                 if(programmer_enable)
 21206  005FE8  5185               	movf	_programmer_enable& (0+255),w,b
 21207  005FEA  B4D8               	btfsc	status,2,c
 21208  005FEC  0012               	return	
 21209                           
 21210                           ; BSR set to: 0
 21211                           ;eusartparser.c: 453:                     read_eusartparser(package);
 21212  005FEE  C03A  F018         	movff	eusartparser@package,read_eusartparser@package
 21213  005FF2  ECD4  F014         	call	_read_eusartparser	;wreg free
 21214  005FF6  0012               	return	
 21215  005FF8                     l22787:
 21216                           
 21217                           ; BSR set to: 0
 21218                           ;eusartparser.c: 457:                 if(programmer_enable)
 21219  005FF8  5185               	movf	_programmer_enable& (0+255),w,b
 21220  005FFA  B4D8               	btfsc	status,2,c
 21221  005FFC  0012               	return	
 21222                           
 21223                           ; BSR set to: 0
 21224                           ;eusartparser.c: 458:                     write_eusartparser(*package);
 21225  005FFE  503A               	movf	eusartparser@package^0,w,c
 21226  006000  6ED9               	movwf	fsr2l,c
 21227  006002  6ADA               	clrf	fsr2h,c
 21228  006004  EE00  F010         	lfsr	0,write_eusartparser@package
 21229  006008  0E06               	movlw	6
 21230  00600A                     u27841:
 21231  00600A  CFDB FFEB          	movff	plusw2,plusw0
 21232  00600E  06E8               	decf	wreg,f,c
 21233  006010  E2FC               	bc	u27841
 21234  006012  EC58  F017         	call	_write_eusartparser	;wreg free
 21235  006016  0012               	return	
 21236  006018                     l22791:
 21237                           
 21238                           ; BSR set to: 0
 21239                           ;eusartparser.c: 462:                 if(programmer_enable){
 21240  006018  5185               	movf	_programmer_enable& (0+255),w,b
 21241  00601A  B4D8               	btfsc	status,2,c
 21242  00601C  D008               	goto	l22797
 21243                           
 21244                           ; BSR set to: 0
 21245                           ;eusartparser.c: 463:                     SaveNVM_VarSystem(pageMemoryE);
 21246  00601E  0E01               	movlw	1
 21247  006020  EC50  F045         	call	_SaveNVM_VarSystem
 21248                           
 21249                           ;eusartparser.c: 464:                     SaveNVM_VarSystem(pageMemoryP);
 21250  006024  0E00               	movlw	0
 21251  006026  EC50  F045         	call	_SaveNVM_VarSystem
 21252                           
 21253                           ;eusartparser.c: 465:                     programmer_enable=0;
 21254  00602A  0E00               	movlw	0
 21255  00602C  D005               	goto	L83
 21256  00602E                     l22797:
 21257                           
 21258                           ; BSR set to: 0
 21259                           ;eusartparser.c: 468:                     if((sm_state_Main_t)main_stateMachine.current_
      +                          state==st_standBy)
 21260  00602E  0101               	movlb	1	; () banked
 21261  006030  51ED               	movf	_main_stateMachine& (0+255),w,b
 21262  006032  A4D8               	btfss	status,2,c
 21263  006034  D004               	goto	l22801
 21264                           
 21265                           ; BSR set to: 1
 21266                           ;eusartparser.c: 469:                         programmer_enable=1;
 21267  006036  0E01               	movlw	1
 21268  006038                     L83:
 21269  006038  0100               	movlb	0	; () banked
 21270  00603A  6F85               	movwf	_programmer_enable& (0+255),b
 21271  00603C  D016               	goto	l22805
 21272  00603E                     l22801:
 21273                           
 21274                           ; BSR set to: 1
 21275                           ;eusartparser.c: 471:                         package->data.data16=(uint16_t)2;
 21276  00603E  503A               	movf	eusartparser@package^0,w,c
 21277  006040  6ED9               	movwf	fsr2l,c
 21278  006042  6ADA               	clrf	fsr2h,c
 21279  006044  0E02               	movlw	2
 21280  006046  26D9               	addwf	fsr2l,f,c
 21281  006048  0E02               	movlw	2
 21282  00604A  6EDE               	movwf	postinc2,c
 21283  00604C  0E00               	movlw	0
 21284  00604E  6EDD               	movwf	postdec2,c
 21285  006050                     l22803:
 21286                           
 21287                           ;eusartparser.c: 472:                         write_package(*package);
 21288  006050  503A               	movf	eusartparser@package^0,w,c
 21289  006052  6ED9               	movwf	fsr2l,c
 21290  006054  6ADA               	clrf	fsr2h,c
 21291  006056  EE00  F011         	lfsr	0,write_package@package
 21292  00605A  0E06               	movlw	6
 21293  00605C                     u27871:
 21294  00605C  CFDB FFEB          	movff	plusw2,plusw0
 21295  006060  06E8               	decf	wreg,f,c
 21296  006062  E2FC               	bc	u27871
 21297  006064  ECFD  F045         	call	_write_package	;wreg free
 21298                           
 21299                           ;eusartparser.c: 473:                         break;
 21300  006068  0012               	return	
 21301  00606A                     l22805:
 21302                           
 21303                           ; BSR set to: 0
 21304                           ;eusartparser.c: 477:                 package->data.data16=(uint16_t)programmer_enable;
 21305  00606A  5185               	movf	_programmer_enable& (0+255),w,b
 21306  00606C  6FDC               	movwf	??_eusartparser& (0+255),b
 21307  00606E  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21308  006070  503A               	movf	eusartparser@package^0,w,c
 21309  006072  6ED9               	movwf	fsr2l,c
 21310  006074  6ADA               	clrf	fsr2h,c
 21311  006076  0E02               	movlw	2
 21312  006078  26D9               	addwf	fsr2l,f,c
 21313  00607A  C0DC  FFDE         	movff	??_eusartparser,postinc2
 21314  00607E  C0DD  FFDD         	movff	??_eusartparser+1,postdec2
 21315  006082  D7E6               	goto	l22803
 21316  006084                     l22809:
 21317                           
 21318                           ; BSR set to: 0
 21319                           ;eusartparser.c: 481:                 package->functioncode=0x03;
 21320  006084  503A               	movf	eusartparser@package^0,w,c
 21321  006086  6ED9               	movwf	fsr2l,c
 21322  006088  6ADA               	clrf	fsr2h,c
 21323  00608A  0E03               	movlw	3
 21324  00608C  6EDF               	movwf	indf2,c
 21325                           
 21326                           ; BSR set to: 0
 21327                           ;eusartparser.c: 482:                 package->address=0x00;
 21328  00608E  503A               	movf	eusartparser@package^0,w,c
 21329  006090  6ED9               	movwf	fsr2l,c
 21330  006092  6ADA               	clrf	fsr2h,c
 21331  006094  0E01               	movlw	1
 21332  006096  26D9               	addwf	fsr2l,f,c
 21333  006098  0E00               	movlw	0
 21334  00609A  6EDF               	movwf	indf2,c
 21335                           
 21336                           ; BSR set to: 0
 21337                           ;eusartparser.c: 483:                 package->data.data16=0x0001;
 21338  00609C  503A               	movf	eusartparser@package^0,w,c
 21339  00609E  6ED9               	movwf	fsr2l,c
 21340  0060A0  6ADA               	clrf	fsr2h,c
 21341  0060A2  0E02               	movlw	2
 21342  0060A4  26D9               	addwf	fsr2l,f,c
 21343  0060A6  0E01               	movlw	1
 21344  0060A8  6EDE               	movwf	postinc2,c
 21345  0060AA  0E00               	movlw	0
 21346  0060AC  6EDD               	movwf	postdec2,c
 21347                           
 21348                           ; BSR set to: 0
 21349                           ;eusartparser.c: 484:                 write_package(*package);
 21350  0060AE  503A               	movf	eusartparser@package^0,w,c
 21351  0060B0  6ED9               	movwf	fsr2l,c
 21352  0060B2  6ADA               	clrf	fsr2h,c
 21353  0060B4  EE00  F011         	lfsr	0,write_package@package
 21354  0060B8  0E06               	movlw	6
 21355  0060BA                     u27881:
 21356  0060BA  CFDB FFEB          	movff	plusw2,plusw0
 21357  0060BE  06E8               	decf	wreg,f,c
 21358  0060C0  E2FC               	bc	u27881
 21359  0060C2  ECFD  F045         	call	_write_package	;wreg free
 21360  0060C6                     l22817:
 21361                           
 21362                           ;eusartparser.c: 486:                 package->functioncode=0x03;
 21363  0060C6  503A               	movf	eusartparser@package^0,w,c
 21364  0060C8  6ED9               	movwf	fsr2l,c
 21365  0060CA  6ADA               	clrf	fsr2h,c
 21366  0060CC  0E03               	movlw	3
 21367  0060CE  6EDF               	movwf	indf2,c
 21368                           
 21369                           ;eusartparser.c: 487:                 package->address=0x00;
 21370  0060D0  503A               	movf	eusartparser@package^0,w,c
 21371  0060D2  6ED9               	movwf	fsr2l,c
 21372  0060D4  6ADA               	clrf	fsr2h,c
 21373  0060D6  0E01               	movlw	1
 21374  0060D8  26D9               	addwf	fsr2l,f,c
 21375  0060DA  0E00               	movlw	0
 21376  0060DC  6EDF               	movwf	indf2,c
 21377                           
 21378                           ;eusartparser.c: 488:                 package->data.data16=0x0000;
 21379  0060DE  503A               	movf	eusartparser@package^0,w,c
 21380  0060E0  6ED9               	movwf	fsr2l,c
 21381  0060E2  6ADA               	clrf	fsr2h,c
 21382  0060E4  0E02               	movlw	2
 21383  0060E6  26D9               	addwf	fsr2l,f,c
 21384  0060E8  0E00               	movlw	0
 21385  0060EA  6EDE               	movwf	postinc2,c
 21386  0060EC  0E00               	movlw	0
 21387  0060EE  6EDD               	movwf	postdec2,c
 21388                           
 21389                           ;eusartparser.c: 489:                 write_package(*package);
 21390  0060F0  503A               	movf	eusartparser@package^0,w,c
 21391  0060F2  6ED9               	movwf	fsr2l,c
 21392  0060F4  6ADA               	clrf	fsr2h,c
 21393  0060F6  EE00  F011         	lfsr	0,write_package@package
 21394  0060FA  0E06               	movlw	6
 21395  0060FC                     u27891:
 21396  0060FC  CFDB FFEB          	movff	plusw2,plusw0
 21397  006100  06E8               	decf	wreg,f,c
 21398  006102  E2FC               	bc	u27891
 21399  006104  ECFD  F045         	call	_write_package	;wreg free
 21400                           
 21401                           ;eusartparser.c: 490:         }
 21402  006108  0012               	return	
 21403  00610A                     l22823:
 21404                           
 21405                           ; BSR set to: 14
 21406  00610A  503A               	movf	eusartparser@package^0,w,c
 21407  00610C  6ED9               	movwf	fsr2l,c
 21408  00610E  6ADA               	clrf	fsr2h,c
 21409  006110  50DF               	movf	indf2,w,c
 21410  006112  0100               	movlb	0	; () banked
 21411  006114  6FDC               	movwf	??_eusartparser& (0+255),b
 21412  006116  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21413                           
 21414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21415                           ; Switch size 1, requested type "simple"
 21416                           ; Number of cases is 1, Range of values is 0 to 0
 21417                           ; switch strategies available:
 21418                           ; Name         Instructions Cycles
 21419                           ; simple_byte            4     3 (average)
 21420                           ;	Chosen strategy is simple_byte
 21421  006118  51DD               	movf	(??_eusartparser+1)& (0+255),w,b
 21422  00611A  0A00               	xorlw	0	; case 0
 21423  00611C  A4D8               	btfss	status,2,c
 21424  00611E  D7D3               	goto	l22817
 21425                           
 21426                           ; BSR set to: 0
 21427                           ; Switch size 1, requested type "simple"
 21428                           ; Number of cases is 4, Range of values is 0 to 3
 21429                           ; switch strategies available:
 21430                           ; Name         Instructions Cycles
 21431                           ; simple_byte           13     7 (average)
 21432                           ;	Chosen strategy is simple_byte
 21433  006120  51DC               	movf	??_eusartparser& (0+255),w,b
 21434  006122  0A00               	xorlw	0	; case 0
 21435  006124  B4D8               	btfsc	status,2,c
 21436  006126  D760               	goto	l22783
 21437  006128  0A01               	xorlw	1	; case 1
 21438  00612A  B4D8               	btfsc	status,2,c
 21439  00612C  D765               	goto	l22787
 21440  00612E  0A03               	xorlw	3	; case 2
 21441  006130  B4D8               	btfsc	status,2,c
 21442  006132  D772               	goto	l22791
 21443  006134  0A01               	xorlw	1	; case 3
 21444  006136  B4D8               	btfsc	status,2,c
 21445  006138  D7A5               	goto	l22809
 21446  00613A  D7C5               	goto	l22817
 21447  00613C                     __end_of_eusartparser:
 21448                           	callstack 0
 21449                           
 21450 ;; *************** function _write_eusartparser *****************
 21451 ;; Defined at:
 21452 ;;		line 248 in file "eusartparser.c"
 21453 ;; Parameters:    Size  Location     Type
 21454 ;;  package         7   15[COMRAM] struct package_t
 21455 ;; Auto vars:     Size  Location     Type
 21456 ;;  debug2          2   32[COMRAM] volatile int 
 21457 ;;  debug           2   30[COMRAM] volatile int 
 21458 ;; Return value:  Size  Location     Type
 21459 ;;                  1    wreg      void 
 21460 ;; Registers used:
 21461 ;;		wreg, status,2, status,0
 21462 ;; Tracked objects:
 21463 ;;		On entry : 3F/0
 21464 ;;		On exit  : 3F/0
 21465 ;;		Unchanged: 0/0
 21466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21467 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21468 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21469 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21470 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21471 ;;Total ram usage:       19 bytes
 21472 ;; Hardware stack levels used: 1
 21473 ;; Hardware stack levels required when called: 4
 21474 ;; This function calls:
 21475 ;;		Nothing
 21476 ;; This function is called by:
 21477 ;;		_eusartparser
 21478 ;; This function uses a non-reentrant model
 21479 ;;
 21480                           
 21481                           	psect	text80
 21482  002EB0                     __ptext80:
 21483                           	callstack 0
 21484  002EB0                     _write_eusartparser:
 21485                           	callstack 25
 21486                           
 21487                           ; BSR set to: 0
 21488                           ;eusartparser.c: 249:         volatile int debug=(uint8_t)package.address;
 21489                           
 21490                           ;incstack = 0
 21491  002EB0  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 21492  002EB4  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 21493                           
 21494                           ; BSR set to: 0
 21495                           ;eusartparser.c: 250:         volatile int debug2=0x10;
 21496  002EB6  0E00               	movlw	0
 21497  002EB8  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 21498  002EBA  0E10               	movlw	16
 21499  002EBC  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 21500                           
 21501                           ;eusartparser.c: 251:         switch((uint8_t)package.address){
 21502  002EBE  D180               	goto	l16213
 21503  002EC0                     l3587:
 21504                           
 21505                           ; BSR set to: 0
 21506                           ;eusartparser.c: 256:                 var_sys_NVM.decelarationOpen=package.data.data8[0]
      +                          ;
 21507  002EC0  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 21508                           
 21509                           ;eusartparser.c: 257:                 var_sys_NVM.decelarationClose=package.data.data8[1
      +                          ];
 21510  002EC4  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 21511                           
 21512                           ;eusartparser.c: 258:                 break;
 21513  002EC8  0012               	return	
 21514  002ECA                     l3589:
 21515                           
 21516                           ; BSR set to: 0
 21517                           ;eusartparser.c: 262:                 var_sys_NVM.motorPower=package.data.data8[0];
 21518  002ECA  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 21519                           
 21520                           ;eusartparser.c: 263:                 var_sys_NVM.motorSensitivity=package.data.data8[1]
      +                          ;
 21521  002ECE  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 21522                           
 21523                           ;eusartparser.c: 264:                 break;
 21524  002ED2  0012               	return	
 21525  002ED4                     l3590:
 21526                           
 21527                           ; BSR set to: 0
 21528                           ;eusartparser.c: 268:                 var_sys_NVM.walkTime=package.data.data8[1];
 21529  002ED4  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 21530                           
 21531                           ;eusartparser.c: 269:                 break;
 21532  002ED8  0012               	return	
 21533  002EDA                     l3592:
 21534                           
 21535                           ; BSR set to: 0
 21536                           ;eusartparser.c: 274:                 var_sys_NVM.autoTimeFullClose=package.data.data8[0
      +                          ];
 21537  002EDA  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 21538                           
 21539                           ;eusartparser.c: 275:                 var_sys_NVM.autoTimeWalkClose=package.data.data8[1
      +                          ];
 21540  002EDE  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 21541                           
 21542                           ;eusartparser.c: 276:                 break;
 21543  002EE2  0012               	return	
 21544  002EE4                     l3594:
 21545                           
 21546                           ; BSR set to: 0
 21547                           ;eusartparser.c: 281:                 var_sys_NVM.photoCellIsON=package.data.data8[0];
 21548  002EE4  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 21549                           
 21550                           ;eusartparser.c: 282:                 var_sys_NVM.photoCellInOpen=package.data.data8[1];
 21551  002EE8  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 21552                           
 21553                           ;eusartparser.c: 283:                 break;
 21554  002EEC  0012               	return	
 21555  002EEE                     l3595:
 21556                           
 21557                           ; BSR set to: 0
 21558                           ;eusartparser.c: 287:                 var_sys_NVM.securityBandIsON=package.data.data8[0]
      +                          ;
 21559  002EEE  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 21560                           
 21561                           ;eusartparser.c: 288:                 var_sys_NVM.securityBandType=package.data.data8[1]
      +                          ;
 21562  002EF2  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 21563                           
 21564                           ;eusartparser.c: 289:                 break;
 21565  002EF6  0012               	return	
 21566  002EF8                     l3596:
 21567                           
 21568                           ; BSR set to: 0
 21569                           ;eusartparser.c: 293:                 var_sys_NVM.securityBandInOpen=package.data.data8[
      +                          1];
 21570  002EF8  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 21571                           
 21572                           ;eusartparser.c: 294:                 break;
 21573  002EFC  0012               	return	
 21574  002EFE                     l3597:
 21575                           
 21576                           ; BSR set to: 0
 21577                           ;eusartparser.c: 298:                 var_sys_NVM.operationMode=package.data.data8[1];
 21578  002EFE  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 21579                           
 21580                           ;eusartparser.c: 299:                 break;
 21581  002F02  0012               	return	
 21582  002F04                     l3598:
 21583                           
 21584                           ; BSR set to: 0
 21585                           ;eusartparser.c: 303:                 var_sys_NVM.flashLightMode=package.data.data8[1];
 21586  002F04  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 21587                           
 21588                           ;eusartparser.c: 304:                 break;
 21589  002F08  0012               	return	
 21590  002F0A                     l3599:
 21591                           
 21592                           ; BSR set to: 0
 21593                           ;eusartparser.c: 308:                 var_sys_NVM.programmingDistance=package.data.data8
      +                          [1];
 21594  002F0A  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 21595                           
 21596                           ;eusartparser.c: 309:                 break;
 21597  002F0E  0012               	return	
 21598  002F10                     l3600:
 21599                           
 21600                           ; BSR set to: 0
 21601                           ;eusartparser.c: 313:                 var_sys_NVM.decelarationSensivity=package.data.dat
      +                          a8[1];
 21602  002F10  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 21603                           
 21604                           ;eusartparser.c: 314:                 break;
 21605  002F14  0012               	return	
 21606  002F16                     l3601:
 21607                           
 21608                           ; BSR set to: 0
 21609                           ;eusartparser.c: 319:                 var_sys_NVM.homemPresente=package.data.data8[1];
 21610  002F16  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 21611                           
 21612                           ;eusartparser.c: 320:                 break;
 21613  002F1A  0012               	return	
 21614  002F1C                     l3603:
 21615                           
 21616                           ; BSR set to: 0
 21617                           ;eusartparser.c: 325:                 var_sys_NVM.logicDigital=package.data.data8[1];
 21618  002F1C  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 21619                           
 21620                           ;eusartparser.c: 326:                 break;
 21621  002F20  0012               	return	
 21622  002F22                     l3604:
 21623                           
 21624                           ; BSR set to: 0
 21625                           ;eusartparser.c: 330:                 var_sys_NVM.softStart=package.data.data8[0];
 21626  002F22  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 21627                           
 21628                           ;eusartparser.c: 331:                 var_sys_NVM.softstop=package.data.data8[1];
 21629  002F26  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 21630                           
 21631                           ;eusartparser.c: 332:                 break;
 21632  002F2A  0012               	return	
 21633  002F2C                     l3606:
 21634                           
 21635                           ; BSR set to: 0
 21636                           ;eusartparser.c: 337:                 var_sys_NVM.ligthTime=package.data.data8[1];
 21637  002F2C  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 21638                           
 21639                           ;eusartparser.c: 338:                 break;
 21640  002F30  0012               	return	
 21641  002F32                     l3608:
 21642                           
 21643                           ; BSR set to: 0
 21644                           ;eusartparser.c: 343:                 var_sys_NVM.folow_me=package.data.data8[1];
 21645  002F32  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 21646                           
 21647                           ;eusartparser.c: 344:                 break;
 21648  002F36  0012               	return	
 21649  002F38                     l3609:
 21650                           
 21651                           ; BSR set to: 0
 21652                           ;eusartparser.c: 348:                 var_sys_NVM.Stopboton=package.data.data8[1];
 21653  002F38  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 21654                           
 21655                           ;eusartparser.c: 349:                 break;
 21656  002F3C  0012               	return	
 21657  002F3E                     l3610:
 21658                           
 21659                           ; BSR set to: 0
 21660                           ;eusartparser.c: 353:                 var_sys_NVM.electricBrake=package.data.data8[1];
 21661  002F3E  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 21662                           
 21663                           ;eusartparser.c: 354:                 break;
 21664  002F42  0012               	return	
 21665  002F44                     l3611:
 21666                           
 21667                           ; BSR set to: 0
 21668                           ;eusartparser.c: 358:                 var_sys_NVM.velocityDecelaration=package.data.data
      +                          8[1];
 21669  002F44  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 21670                           
 21671                           ;eusartparser.c: 359:                 break;
 21672  002F48  0012               	return	
 21673  002F4A                     l3613:
 21674                           
 21675                           ; BSR set to: 0
 21676                           ;eusartparser.c: 364:                 var_sys_NVM.flashRGBMode=package.data.data8[1];
 21677  002F4A  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 21678                           
 21679                           ;eusartparser.c: 365:                 break;
 21680  002F4E  0012               	return	
 21681  002F50                     l3614:
 21682                           
 21683                           ; BSR set to: 0
 21684                           ;eusartparser.c: 369:                 var_sys_NVM.Direction_motor=package.data.data8[1];
 21685  002F50  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 21686                           
 21687                           ;eusartparser.c: 370:                 break;
 21688  002F54  0012               	return	
 21689  002F56                     l3615:
 21690                           
 21691                           ; BSR set to: 0
 21692                           ;eusartparser.c: 374:                 var_sys_NVM.TypeofMotor=package.data.data8[1];
 21693  002F56  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 21694                           
 21695                           ;eusartparser.c: 375:                 break;
 21696  002F5A  0012               	return	
 21697  002F5C                     l3616:
 21698                           
 21699                           ; BSR set to: 0
 21700                           ;eusartparser.c: 379:                 var_sys_NVM.positionRemotesFull=package.data.data8
      +                          [0];
 21701  002F5C  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 21702                           
 21703                           ;eusartparser.c: 380:                 var_sys_NVM.positionRemotesWalk=package.data.data8
      +                          [1];
 21704  002F60  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 21705                           
 21706                           ;eusartparser.c: 381:                 break;
 21707  002F64  0012               	return	
 21708  002F66                     l16191:
 21709                           
 21710                           ; BSR set to: 0
 21711                           ;eusartparser.c: 384:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21712  002F66  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21713  002F68  6E17               	movwf	??_write_eusartparser^0,c
 21714  002F6A  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21715  002F6C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21716  002F6E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21717  002F70  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21718  002F72  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21719  002F76  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21720  002F7A  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21721  002F7C  6A17               	clrf	??_write_eusartparser^0,c
 21722  002F7E  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21723  002F80  1017               	iorwf	??_write_eusartparser^0,w,c
 21724  002F82  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21725  002F84  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21726  002F86  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21727  002F88  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21728  002F8A  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21729  002F8C  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21730  002F8E  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21731  002F90  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21732  002F92  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21733  002F94  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21734                           
 21735                           ;eusartparser.c: 385:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21736  002F96  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21737  002F98  6E17               	movwf	??_write_eusartparser^0,c
 21738  002F9A  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21739  002F9C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21740  002F9E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21741  002FA0  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21742  002FA2  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21743  002FA6  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21744  002FAA  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21745  002FAC  6A17               	clrf	??_write_eusartparser^0,c
 21746  002FAE  1C17               	comf	??_write_eusartparser^0,w,c
 21747  002FB0  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21748  002FB2  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21749  002FB4  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21750  002FB6  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21751  002FB8  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21752  002FBA  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21753  002FBC  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21754  002FBE  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21755  002FC0  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21756  002FC2  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21757  002FC4  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21758  002FC6  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21759  002FC8  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21760  002FCA  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21761  002FCC  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21762  002FCE  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21763  002FD0  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21764  002FD2  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21765  002FD4  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21766                           
 21767                           ;eusartparser.c: 386:                 break;
 21768  002FD6  0012               	return	
 21769  002FD8                     l16193:
 21770                           
 21771                           ; BSR set to: 0
 21772                           ;eusartparser.c: 388:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21773  002FD8  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21774  002FDA  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21775  002FDC  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21776  002FDE  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21777  002FE0  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21778  002FE2  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21779  002FE4  0E00               	movlw	0
 21780  002FE6  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21781  002FE8  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21782  002FEA  0E00               	movlw	0
 21783  002FEC  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21784  002FEE  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21785                           
 21786                           ;eusartparser.c: 389:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21787  002FF0  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21788  002FF2  6E17               	movwf	??_write_eusartparser^0,c
 21789  002FF4  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21790  002FF6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21791  002FF8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21792  002FFA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21793  002FFC  1C17               	comf	??_write_eusartparser^0,w,c
 21794  002FFE  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21795  003000  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21796  003002  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21797  003004  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21798  003006  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21799  003008  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21800  00300A  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21801  00300C  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21802  00300E  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21803  003010  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21804  003012  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21805  003014  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21806  003016  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21807  003018  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21808  00301A  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21809  00301C  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21810  00301E  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21811  003020  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21812  003022  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21813                           
 21814                           ;eusartparser.c: 390:                 break;
 21815  003024  0012               	return	
 21816  003026                     l3619:
 21817                           
 21818                           ; BSR set to: 0
 21819                           ;eusartparser.c: 395:                 var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 21820  003026  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 21821                           
 21822                           ;eusartparser.c: 396:                 break;
 21823  00302A  0012               	return	
 21824  00302C                     l16195:
 21825                           
 21826                           ; BSR set to: 0
 21827                           ;eusartparser.c: 399:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21828  00302C  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21829  00302E  6E17               	movwf	??_write_eusartparser^0,c
 21830  003030  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21831  003032  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21832  003034  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21833  003036  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21834  003038  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21835  00303C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21836  003040  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21837  003042  6A17               	clrf	??_write_eusartparser^0,c
 21838  003044  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21839  003046  1017               	iorwf	??_write_eusartparser^0,w,c
 21840  003048  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21841  00304A  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21842  00304C  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21843  00304E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21844  003050  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21845  003052  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21846  003054  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21847  003056  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21848  003058  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21849  00305A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21850                           
 21851                           ;eusartparser.c: 400:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 21852  00305C  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21853  00305E  6E17               	movwf	??_write_eusartparser^0,c
 21854  003060  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21855  003062  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21856  003064  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21857  003066  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21858  003068  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21859  00306C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21860  003070  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21861  003072  6A17               	clrf	??_write_eusartparser^0,c
 21862  003074  1C17               	comf	??_write_eusartparser^0,w,c
 21863  003076  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21864  003078  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21865  00307A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21866  00307C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21867  00307E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21868  003080  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21869  003082  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21870  003084  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21871  003086  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21872  003088  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21873  00308A  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21874  00308C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21875  00308E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21876  003090  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21877  003092  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21878  003094  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21879  003096  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21880  003098  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21881  00309A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21882                           
 21883                           ;eusartparser.c: 401:                 break;
 21884  00309C  0012               	return	
 21885  00309E                     l16197:
 21886                           
 21887                           ; BSR set to: 0
 21888                           ;eusartparser.c: 403:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21889  00309E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21890  0030A0  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21891  0030A2  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21892  0030A4  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21893  0030A6  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21894  0030A8  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21895  0030AA  0E00               	movlw	0
 21896  0030AC  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21897  0030AE  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21898  0030B0  0E00               	movlw	0
 21899  0030B2  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21900  0030B4  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21901                           
 21902                           ;eusartparser.c: 404:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(0*16));
 21903  0030B6  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21904  0030B8  6E17               	movwf	??_write_eusartparser^0,c
 21905  0030BA  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21906  0030BC  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21907  0030BE  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21908  0030C0  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21909  0030C2  1C17               	comf	??_write_eusartparser^0,w,c
 21910  0030C4  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21911  0030C6  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21912  0030C8  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21913  0030CA  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21914  0030CC  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21915  0030CE  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21916  0030D0  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21917  0030D2  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21918  0030D4  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21919  0030D6  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21920  0030D8  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21921  0030DA  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21922  0030DC  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21923  0030DE  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21924  0030E0  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21925  0030E2  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21926  0030E4  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21927  0030E6  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21928  0030E8  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21929                           
 21930                           ;eusartparser.c: 405:                 break;
 21931  0030EA  0012               	return	
 21932  0030EC                     l16199:
 21933                           
 21934                           ; BSR set to: 0
 21935                           ;eusartparser.c: 408:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 21936  0030EC  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21937  0030EE  6E17               	movwf	??_write_eusartparser^0,c
 21938  0030F0  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21939  0030F2  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21940  0030F4  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21941  0030F6  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21942  0030F8  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21943  0030FC  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21944  003100  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21945  003102  6A17               	clrf	??_write_eusartparser^0,c
 21946  003104  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21947  003106  1017               	iorwf	??_write_eusartparser^0,w,c
 21948  003108  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21949  00310A  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21950  00310C  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21951  00310E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21952  003110  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21953  003112  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21954  003114  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21955  003116  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21956  003118  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21957  00311A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21958                           
 21959                           ;eusartparser.c: 409:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21960  00311C  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21961  00311E  6E17               	movwf	??_write_eusartparser^0,c
 21962  003120  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21963  003122  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21964  003124  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21965  003126  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21966  003128  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21967  00312C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21968  003130  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21969  003132  6A17               	clrf	??_write_eusartparser^0,c
 21970  003134  1C17               	comf	??_write_eusartparser^0,w,c
 21971  003136  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21972  003138  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21973  00313A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21974  00313C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21975  00313E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21976  003140  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21977  003142  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21978  003144  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21979  003146  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21980  003148  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21981  00314A  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21982  00314C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21983  00314E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21984  003150  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21985  003152  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21986  003154  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21987  003156  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21988  003158  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21989  00315A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21990                           
 21991                           ;eusartparser.c: 410:                 break;
 21992  00315C  0012               	return	
 21993  00315E                     l16201:
 21994                           
 21995                           ; BSR set to: 0
 21996                           ;eusartparser.c: 412:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 21997  00315E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21998  003160  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21999  003162  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22000  003164  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22001  003166  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22002  003168  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22003  00316A  0E00               	movlw	0
 22004  00316C  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22005  00316E  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22006  003170  0E00               	movlw	0
 22007  003172  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22008  003174  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22009                           
 22010                           ;eusartparser.c: 413:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 22011  003176  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22012  003178  6E17               	movwf	??_write_eusartparser^0,c
 22013  00317A  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22014  00317C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22015  00317E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22016  003180  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22017  003182  1C17               	comf	??_write_eusartparser^0,w,c
 22018  003184  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22019  003186  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22020  003188  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22021  00318A  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22022  00318C  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22023  00318E  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22024  003190  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22025  003192  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22026  003194  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22027  003196  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22028  003198  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22029  00319A  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22030  00319C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22031  00319E  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22032  0031A0  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22033  0031A2  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22034  0031A4  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22035  0031A6  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22036  0031A8  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22037                           
 22038                           ;eusartparser.c: 414:                 break;
 22039  0031AA  0012               	return	
 22040  0031AC                     l3624:
 22041                           
 22042                           ; BSR set to: 0
 22043                           ;eusartparser.c: 417:                 var_sys_NVM.learningCurrentNormalClose=package.dat
      +                          a.data16;
 22044  0031AC  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 22045  0031B0  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 22046                           
 22047                           ;eusartparser.c: 418:                 break;
 22048  0031B4  0012               	return	
 22049  0031B6                     l3625:
 22050                           
 22051                           ; BSR set to: 0
 22052                           ;eusartparser.c: 421:                 var_sys_NVM.learningCurrentNormalOpen=package.data
      +                          .data16;
 22053  0031B6  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 22054  0031BA  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 22055                           
 22056                           ;eusartparser.c: 422:                 break;
 22057  0031BE  0012               	return	
 22058  0031C0                     l16213:
 22059                           
 22060                           ; BSR set to: 0
 22061  0031C0  5011               	movf	(write_eusartparser@package+1)^0,w,c
 22062  0031C2  6E17               	movwf	??_write_eusartparser^0,c
 22063  0031C4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22064                           
 22065                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22066                           ; Switch size 1, requested type "simple"
 22067                           ; Number of cases is 1, Range of values is 0 to 0
 22068                           ; switch strategies available:
 22069                           ; Name         Instructions Cycles
 22070                           ; simple_byte            4     3 (average)
 22071                           ;	Chosen strategy is simple_byte
 22072  0031C6  5018               	movf	(??_write_eusartparser+1)^0,w,c
 22073  0031C8  0A00               	xorlw	0	; case 0
 22074  0031CA  A4D8               	btfss	status,2,c
 22075  0031CC  0012               	return	
 22076                           
 22077                           ; BSR set to: 0
 22078                           ; Switch size 1, requested type "simple"
 22079                           ; Number of cases is 43, Range of values is 0 to 51
 22080                           ; switch strategies available:
 22081                           ; Name         Instructions Cycles
 22082                           ; simple_byte          130    66 (average)
 22083                           ;	Chosen strategy is simple_byte
 22084  0031CE  5017               	movf	??_write_eusartparser^0,w,c
 22085  0031D0  0A00               	xorlw	0	; case 0
 22086  0031D2  B4D8               	btfsc	status,2,c
 22087  0031D4  D675               	goto	l3587
 22088  0031D6  0A02               	xorlw	2	; case 2
 22089  0031D8  B4D8               	btfsc	status,2,c
 22090  0031DA  D67F               	goto	l3592
 22091  0031DC  0A01               	xorlw	1	; case 3
 22092  0031DE  B4D8               	btfsc	status,2,c
 22093  0031E0  D6A5               	goto	l3606
 22094  0031E2  0A06               	xorlw	6	; case 5
 22095  0031E4  B4D8               	btfsc	status,2,c
 22096  0031E6  D67E               	goto	l3594
 22097  0031E8  0A02               	xorlw	2	; case 7
 22098  0031EA  B4D8               	btfsc	status,2,c
 22099  0031EC  D697               	goto	l3603
 22100  0031EE  0A0F               	xorlw	15	; case 8
 22101  0031F0  B4D8               	btfsc	status,2,c
 22102  0031F2  D6AB               	goto	l3613
 22103  0031F4  0A02               	xorlw	2	; case 10
 22104  0031F6  B4D8               	btfsc	status,2,c
 22105  0031F8  D69C               	goto	l3608
 22106  0031FA  0A1A               	xorlw	26	; case 16
 22107  0031FC  B4D8               	btfsc	status,2,c
 22108  0031FE  D660               	goto	l3587
 22109  003200  0A01               	xorlw	1	; case 17
 22110  003202  B4D8               	btfsc	status,2,c
 22111  003204  D662               	goto	l3589
 22112  003206  0A03               	xorlw	3	; case 18
 22113  003208  B4D8               	btfsc	status,2,c
 22114  00320A  D664               	goto	l3590
 22115  00320C  0A01               	xorlw	1	; case 19
 22116  00320E  B4D8               	btfsc	status,2,c
 22117  003210  D664               	goto	l3592
 22118  003212  0A07               	xorlw	7	; case 20
 22119  003214  B4D8               	btfsc	status,2,c
 22120  003216  D666               	goto	l3594
 22121  003218  0A01               	xorlw	1	; case 21
 22122  00321A  B4D8               	btfsc	status,2,c
 22123  00321C  D668               	goto	l3595
 22124  00321E  0A03               	xorlw	3	; case 22
 22125  003220  B4D8               	btfsc	status,2,c
 22126  003222  D66A               	goto	l3596
 22127  003224  0A01               	xorlw	1	; case 23
 22128  003226  B4D8               	btfsc	status,2,c
 22129  003228  D66A               	goto	l3597
 22130  00322A  0A0F               	xorlw	15	; case 24
 22131  00322C  B4D8               	btfsc	status,2,c
 22132  00322E  D66A               	goto	l3598
 22133  003230  0A01               	xorlw	1	; case 25
 22134  003232  B4D8               	btfsc	status,2,c
 22135  003234  D66A               	goto	l3599
 22136  003236  0A03               	xorlw	3	; case 26
 22137  003238  B4D8               	btfsc	status,2,c
 22138  00323A  D66A               	goto	l3600
 22139  00323C  0A01               	xorlw	1	; case 27
 22140  00323E  B4D8               	btfsc	status,2,c
 22141  003240  D66A               	goto	l3601
 22142  003242  0A07               	xorlw	7	; case 28
 22143  003244  B4D8               	btfsc	status,2,c
 22144  003246  D66A               	goto	l3603
 22145  003248  0A01               	xorlw	1	; case 29
 22146  00324A  B4D8               	btfsc	status,2,c
 22147  00324C  D66A               	goto	l3604
 22148  00324E  0A03               	xorlw	3	; case 30
 22149  003250  B4D8               	btfsc	status,2,c
 22150  003252  D66C               	goto	l3606
 22151  003254  0A01               	xorlw	1	; case 31
 22152  003256  B4D8               	btfsc	status,2,c
 22153  003258  D66C               	goto	l3608
 22154  00325A  0A3F               	xorlw	63	; case 32
 22155  00325C  B4D8               	btfsc	status,2,c
 22156  00325E  D66C               	goto	l3609
 22157  003260  0A01               	xorlw	1	; case 33
 22158  003262  B4D8               	btfsc	status,2,c
 22159  003264  D66C               	goto	l3610
 22160  003266  0A03               	xorlw	3	; case 34
 22161  003268  B4D8               	btfsc	status,2,c
 22162  00326A  D66C               	goto	l3611
 22163  00326C  0A01               	xorlw	1	; case 35
 22164  00326E  B4D8               	btfsc	status,2,c
 22165  003270  D66C               	goto	l3613
 22166  003272  0A07               	xorlw	7	; case 36
 22167  003274  B4D8               	btfsc	status,2,c
 22168  003276  D66C               	goto	l3614
 22169  003278  0A01               	xorlw	1	; case 37
 22170  00327A  B4D8               	btfsc	status,2,c
 22171  00327C  D66C               	goto	l3615
 22172  00327E  0A03               	xorlw	3	; case 38
 22173  003280  B4D8               	btfsc	status,2,c
 22174  003282  D66C               	goto	l3616
 22175  003284  0A01               	xorlw	1	; case 39
 22176  003286  B4D8               	btfsc	status,2,c
 22177  003288  D66E               	goto	l16191
 22178  00328A  0A0F               	xorlw	15	; case 40
 22179  00328C  B4D8               	btfsc	status,2,c
 22180  00328E  D6A4               	goto	l16193
 22181  003290  0A01               	xorlw	1	; case 41
 22182  003292  B4D8               	btfsc	status,2,c
 22183  003294  D6C8               	goto	l3619
 22184  003296  0A03               	xorlw	3	; case 42
 22185  003298  B4D8               	btfsc	status,2,c
 22186  00329A  D6C8               	goto	l16195
 22187  00329C  0A01               	xorlw	1	; case 43
 22188  00329E  B4D8               	btfsc	status,2,c
 22189  0032A0  D6FE               	goto	l16197
 22190  0032A2  0A07               	xorlw	7	; case 44
 22191  0032A4  B4D8               	btfsc	status,2,c
 22192  0032A6  D722               	goto	l16199
 22193  0032A8  0A01               	xorlw	1	; case 45
 22194  0032AA  B4D8               	btfsc	status,2,c
 22195  0032AC  D758               	goto	l16201
 22196  0032AE  0A03               	xorlw	3	; case 46
 22197  0032B0  B4D8               	btfsc	status,2,c
 22198  0032B2  D77C               	goto	l3624
 22199  0032B4  0A01               	xorlw	1	; case 47
 22200  0032B6  B4D8               	btfsc	status,2,c
 22201  0032B8  D77E               	goto	l3625
 22202  0032BA  0A1F               	xorlw	31	; case 48
 22203  0032BC  B4D8               	btfsc	status,2,c
 22204  0032BE  D716               	goto	l16199
 22205  0032C0  0A01               	xorlw	1	; case 49
 22206  0032C2  B4D8               	btfsc	status,2,c
 22207  0032C4  D74C               	goto	l16201
 22208  0032C6  0A03               	xorlw	3	; case 50
 22209  0032C8  B4D8               	btfsc	status,2,c
 22210  0032CA  D710               	goto	l16199
 22211  0032CC  0A01               	xorlw	1	; case 51
 22212  0032CE  A4D8               	btfss	status,2,c
 22213  0032D0  0012               	return	
 22214  0032D2  D745               	goto	l16201
 22215  0032D4                     __end_of_write_eusartparser:
 22216                           	callstack 0
 22217                           
 22218 ;; *************** function _read_eusartparser *****************
 22219 ;; Defined at:
 22220 ;;		line 12 in file "eusartparser.c"
 22221 ;; Parameters:    Size  Location     Type
 22222 ;;  package         1   23[COMRAM] PTR struct package_t
 22223 ;;		 -> main@package(7), 
 22224 ;; Auto vars:     Size  Location     Type
 22225 ;;		None
 22226 ;; Return value:  Size  Location     Type
 22227 ;;                  1    wreg      void 
 22228 ;; Registers used:
 22229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22230 ;; Tracked objects:
 22231 ;;		On entry : 3F/0
 22232 ;;		On exit  : 0/0
 22233 ;;		Unchanged: 0/0
 22234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22235 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22237 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22238 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22239 ;;Total ram usage:        3 bytes
 22240 ;; Hardware stack levels used: 1
 22241 ;; Hardware stack levels required when called: 6
 22242 ;; This function calls:
 22243 ;;		_write_package
 22244 ;; This function is called by:
 22245 ;;		_eusartparser
 22246 ;; This function uses a non-reentrant model
 22247 ;;
 22248                           
 22249                           	psect	text81
 22250  0029A8                     __ptext81:
 22251                           	callstack 0
 22252  0029A8                     _read_eusartparser:
 22253                           	callstack 23
 22254                           
 22255                           ; BSR set to: 0
 22256                           ;eusartparser.c: 13:         switch(package->address){
 22257                           
 22258                           ; BSR set to: 0
 22259                           ;incstack = 0
 22260  0029A8  D203               	goto	l16181
 22261  0029AA                     l16045:
 22262                           
 22263                           ; BSR set to: 0
 22264                           ;eusartparser.c: 18:                 package->data.data8[1]=var_sys_NVM.decelarationClos
      +                          e;
 22265  0029AA  5018               	movf	read_eusartparser@package^0,w,c
 22266  0029AC  6ED9               	movwf	fsr2l,c
 22267  0029AE  6ADA               	clrf	fsr2h,c
 22268  0029B0  0E03               	movlw	3
 22269  0029B2  26D9               	addwf	fsr2l,f,c
 22270  0029B4  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 22271                           
 22272                           ;eusartparser.c: 19:                 package->data.data8[0]=var_sys_NVM.decelarationOpen
      +                          ;
 22273  0029B8  5018               	movf	read_eusartparser@package^0,w,c
 22274  0029BA  6ED9               	movwf	fsr2l,c
 22275  0029BC  6ADA               	clrf	fsr2h,c
 22276  0029BE  0E02               	movlw	2
 22277  0029C0  26D9               	addwf	fsr2l,f,c
 22278  0029C2  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 22279  0029C6                     l16047:
 22280                           
 22281                           ; BSR set to: 0
 22282                           ;eusartparser.c: 20:                 write_package(*package);
 22283  0029C6  5018               	movf	read_eusartparser@package^0,w,c
 22284  0029C8  6ED9               	movwf	fsr2l,c
 22285  0029CA  6ADA               	clrf	fsr2h,c
 22286  0029CC  EE00  F011         	lfsr	0,write_package@package
 22287  0029D0  0E06               	movlw	6
 22288  0029D2                     u18121:
 22289  0029D2  CFDB FFEB          	movff	plusw2,plusw0
 22290  0029D6  06E8               	decf	wreg,f,c
 22291  0029D8  E2FC               	bc	u18121
 22292  0029DA  ECFD  F045         	call	_write_package	;wreg free
 22293                           
 22294                           ;eusartparser.c: 21:                 break;
 22295  0029DE  0012               	return	
 22296  0029E0                     l16049:
 22297                           
 22298                           ; BSR set to: 0
 22299                           ;eusartparser.c: 25:                 package->data.data8[1]=var_sys_NVM.motorSensitivity
      +                          ;
 22300  0029E0  5018               	movf	read_eusartparser@package^0,w,c
 22301  0029E2  6ED9               	movwf	fsr2l,c
 22302  0029E4  6ADA               	clrf	fsr2h,c
 22303  0029E6  0E03               	movlw	3
 22304  0029E8  26D9               	addwf	fsr2l,f,c
 22305  0029EA  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 22306                           
 22307                           ;eusartparser.c: 26:                 package->data.data8[0]=var_sys_NVM.motorPower;
 22308  0029EE  5018               	movf	read_eusartparser@package^0,w,c
 22309  0029F0  6ED9               	movwf	fsr2l,c
 22310  0029F2  6ADA               	clrf	fsr2h,c
 22311  0029F4  0E02               	movlw	2
 22312  0029F6  26D9               	addwf	fsr2l,f,c
 22313  0029F8  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 22314  0029FC  D7E4               	goto	l16047
 22315  0029FE                     l16053:
 22316                           
 22317                           ; BSR set to: 0
 22318                           ;eusartparser.c: 32:                 package->data.data8[1]=var_sys_NVM.walkTime;
 22319  0029FE  5018               	movf	read_eusartparser@package^0,w,c
 22320  002A00  6ED9               	movwf	fsr2l,c
 22321  002A02  6ADA               	clrf	fsr2h,c
 22322  002A04  0E03               	movlw	3
 22323  002A06  26D9               	addwf	fsr2l,f,c
 22324  002A08  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 22325  002A0C  D0F9               	goto	L99
 22326  002A0E                     l16057:
 22327                           
 22328                           ; BSR set to: 0
 22329                           ;eusartparser.c: 40:                 package->data.data8[1]=var_sys_NVM.autoTimeWalkClos
      +                          e;
 22330  002A0E  5018               	movf	read_eusartparser@package^0,w,c
 22331  002A10  6ED9               	movwf	fsr2l,c
 22332  002A12  6ADA               	clrf	fsr2h,c
 22333  002A14  0E03               	movlw	3
 22334  002A16  26D9               	addwf	fsr2l,f,c
 22335  002A18  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 22336                           
 22337                           ;eusartparser.c: 41:                 package->data.data8[0]=var_sys_NVM.autoTimeFullClos
      +                          e;
 22338  002A1C  5018               	movf	read_eusartparser@package^0,w,c
 22339  002A1E  6ED9               	movwf	fsr2l,c
 22340  002A20  6ADA               	clrf	fsr2h,c
 22341  002A22  0E02               	movlw	2
 22342  002A24  26D9               	addwf	fsr2l,f,c
 22343  002A26  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 22344  002A2A  D7CD               	goto	l16047
 22345  002A2C                     l16061:
 22346                           
 22347                           ; BSR set to: 0
 22348                           ;eusartparser.c: 48:                 package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 22349  002A2C  5018               	movf	read_eusartparser@package^0,w,c
 22350  002A2E  6ED9               	movwf	fsr2l,c
 22351  002A30  6ADA               	clrf	fsr2h,c
 22352  002A32  0E03               	movlw	3
 22353  002A34  26D9               	addwf	fsr2l,f,c
 22354  002A36  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 22355                           
 22356                           ;eusartparser.c: 49:                 package->data.data8[0]=var_sys_NVM.photoCellIsON;
 22357  002A3A  5018               	movf	read_eusartparser@package^0,w,c
 22358  002A3C  6ED9               	movwf	fsr2l,c
 22359  002A3E  6ADA               	clrf	fsr2h,c
 22360  002A40  0E02               	movlw	2
 22361  002A42  26D9               	addwf	fsr2l,f,c
 22362  002A44  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 22363  002A48  D7BE               	goto	l16047
 22364  002A4A                     l16065:
 22365                           
 22366                           ; BSR set to: 0
 22367                           ;eusartparser.c: 55:                 package->data.data8[1]=var_sys_NVM.securityBandType
      +                          ;
 22368  002A4A  5018               	movf	read_eusartparser@package^0,w,c
 22369  002A4C  6ED9               	movwf	fsr2l,c
 22370  002A4E  6ADA               	clrf	fsr2h,c
 22371  002A50  0E03               	movlw	3
 22372  002A52  26D9               	addwf	fsr2l,f,c
 22373  002A54  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 22374                           
 22375                           ;eusartparser.c: 56:                 package->data.data8[0]=var_sys_NVM.securityBandIsON
      +                          ;
 22376  002A58  5018               	movf	read_eusartparser@package^0,w,c
 22377  002A5A  6ED9               	movwf	fsr2l,c
 22378  002A5C  6ADA               	clrf	fsr2h,c
 22379  002A5E  0E02               	movlw	2
 22380  002A60  26D9               	addwf	fsr2l,f,c
 22381  002A62  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 22382  002A66  D7AF               	goto	l16047
 22383  002A68                     l16069:
 22384                           
 22385                           ; BSR set to: 0
 22386                           ;eusartparser.c: 62:                 package->data.data8[1]=var_sys_NVM.securityBandInOp
      +                          en;
 22387  002A68  5018               	movf	read_eusartparser@package^0,w,c
 22388  002A6A  6ED9               	movwf	fsr2l,c
 22389  002A6C  6ADA               	clrf	fsr2h,c
 22390  002A6E  0E03               	movlw	3
 22391  002A70  26D9               	addwf	fsr2l,f,c
 22392  002A72  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 22393  002A76  D0C4               	goto	L99
 22394  002A78                     l16073:
 22395                           
 22396                           ; BSR set to: 0
 22397                           ;eusartparser.c: 69:                 package->data.data8[1]=var_sys_NVM.operationMode;
 22398  002A78  5018               	movf	read_eusartparser@package^0,w,c
 22399  002A7A  6ED9               	movwf	fsr2l,c
 22400  002A7C  6ADA               	clrf	fsr2h,c
 22401  002A7E  0E03               	movlw	3
 22402  002A80  26D9               	addwf	fsr2l,f,c
 22403  002A82  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 22404  002A86  D0BC               	goto	L99
 22405  002A88                     l16077:
 22406                           
 22407                           ; BSR set to: 0
 22408                           ;eusartparser.c: 76:                 package->data.data8[1]=var_sys_NVM.flashLightMode;
 22409  002A88  5018               	movf	read_eusartparser@package^0,w,c
 22410  002A8A  6ED9               	movwf	fsr2l,c
 22411  002A8C  6ADA               	clrf	fsr2h,c
 22412  002A8E  0E03               	movlw	3
 22413  002A90  26D9               	addwf	fsr2l,f,c
 22414  002A92  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 22415  002A96  D0B4               	goto	L99
 22416  002A98                     l16081:
 22417                           
 22418                           ; BSR set to: 0
 22419                           ;eusartparser.c: 83:                 package->data.data8[1]=var_sys_NVM.programmingDista
      +                          nce;
 22420  002A98  5018               	movf	read_eusartparser@package^0,w,c
 22421  002A9A  6ED9               	movwf	fsr2l,c
 22422  002A9C  6ADA               	clrf	fsr2h,c
 22423  002A9E  0E03               	movlw	3
 22424  002AA0  26D9               	addwf	fsr2l,f,c
 22425  002AA2  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 22426  002AA6  D0AC               	goto	L99
 22427  002AA8                     l16085:
 22428                           
 22429                           ; BSR set to: 0
 22430                           ;eusartparser.c: 90:                 package->data.data8[1]=var_sys_NVM.decelarationSens
      +                          ivity;
 22431  002AA8  5018               	movf	read_eusartparser@package^0,w,c
 22432  002AAA  6ED9               	movwf	fsr2l,c
 22433  002AAC  6ADA               	clrf	fsr2h,c
 22434  002AAE  0E03               	movlw	3
 22435  002AB0  26D9               	addwf	fsr2l,f,c
 22436  002AB2  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 22437  002AB6  D0A4               	goto	L99
 22438  002AB8                     l16089:
 22439                           
 22440                           ; BSR set to: 0
 22441                           ;eusartparser.c: 98:                 package->data.data8[1]=var_sys_NVM.homemPresente;
 22442  002AB8  5018               	movf	read_eusartparser@package^0,w,c
 22443  002ABA  6ED9               	movwf	fsr2l,c
 22444  002ABC  6ADA               	clrf	fsr2h,c
 22445  002ABE  0E03               	movlw	3
 22446  002AC0  26D9               	addwf	fsr2l,f,c
 22447  002AC2  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 22448  002AC6  D09C               	goto	L99
 22449  002AC8                     l16093:
 22450                           
 22451                           ; BSR set to: 0
 22452                           ;eusartparser.c: 106:                 package->data.data8[1]=var_sys_NVM.logicDigital;
 22453  002AC8  5018               	movf	read_eusartparser@package^0,w,c
 22454  002ACA  6ED9               	movwf	fsr2l,c
 22455  002ACC  6ADA               	clrf	fsr2h,c
 22456  002ACE  0E03               	movlw	3
 22457  002AD0  26D9               	addwf	fsr2l,f,c
 22458  002AD2  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 22459  002AD6  D094               	goto	L99
 22460  002AD8                     l16097:
 22461                           
 22462                           ; BSR set to: 0
 22463                           ;eusartparser.c: 113:                 package->data.data8[1]=var_sys_NVM.softstop;
 22464  002AD8  5018               	movf	read_eusartparser@package^0,w,c
 22465  002ADA  6ED9               	movwf	fsr2l,c
 22466  002ADC  6ADA               	clrf	fsr2h,c
 22467  002ADE  0E03               	movlw	3
 22468  002AE0  26D9               	addwf	fsr2l,f,c
 22469  002AE2  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 22470                           
 22471                           ;eusartparser.c: 114:                 package->data.data8[0]=var_sys_NVM.softStart;
 22472  002AE6  5018               	movf	read_eusartparser@package^0,w,c
 22473  002AE8  6ED9               	movwf	fsr2l,c
 22474  002AEA  6ADA               	clrf	fsr2h,c
 22475  002AEC  0E02               	movlw	2
 22476  002AEE  26D9               	addwf	fsr2l,f,c
 22477  002AF0  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 22478  002AF4  D768               	goto	l16047
 22479  002AF6                     l16101:
 22480                           
 22481                           ; BSR set to: 0
 22482                           ;eusartparser.c: 121:                 package->data.data8[1]=var_sys_NVM.ligthTime;
 22483  002AF6  5018               	movf	read_eusartparser@package^0,w,c
 22484  002AF8  6ED9               	movwf	fsr2l,c
 22485  002AFA  6ADA               	clrf	fsr2h,c
 22486  002AFC  0E03               	movlw	3
 22487  002AFE  26D9               	addwf	fsr2l,f,c
 22488  002B00  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 22489  002B04  D07D               	goto	L99
 22490  002B06                     l16105:
 22491                           
 22492                           ; BSR set to: 0
 22493                           ;eusartparser.c: 129:                 package->data.data8[1]=var_sys_NVM.folow_me;
 22494  002B06  5018               	movf	read_eusartparser@package^0,w,c
 22495  002B08  6ED9               	movwf	fsr2l,c
 22496  002B0A  6ADA               	clrf	fsr2h,c
 22497  002B0C  0E03               	movlw	3
 22498  002B0E  26D9               	addwf	fsr2l,f,c
 22499  002B10  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 22500  002B14  D075               	goto	L99
 22501  002B16                     l16109:
 22502                           
 22503                           ; BSR set to: 0
 22504                           ;eusartparser.c: 136:                 package->data.data8[1]=var_sys_NVM.Stopboton;
 22505  002B16  5018               	movf	read_eusartparser@package^0,w,c
 22506  002B18  6ED9               	movwf	fsr2l,c
 22507  002B1A  6ADA               	clrf	fsr2h,c
 22508  002B1C  0E03               	movlw	3
 22509  002B1E  26D9               	addwf	fsr2l,f,c
 22510  002B20  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 22511  002B24  D06D               	goto	L99
 22512  002B26                     l16113:
 22513                           
 22514                           ; BSR set to: 0
 22515                           ;eusartparser.c: 143:                 package->data.data8[1]=var_sys_NVM.electricBrake;
 22516  002B26  5018               	movf	read_eusartparser@package^0,w,c
 22517  002B28  6ED9               	movwf	fsr2l,c
 22518  002B2A  6ADA               	clrf	fsr2h,c
 22519  002B2C  0E03               	movlw	3
 22520  002B2E  26D9               	addwf	fsr2l,f,c
 22521  002B30  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 22522  002B34  D065               	goto	L99
 22523  002B36                     l16117:
 22524                           
 22525                           ; BSR set to: 0
 22526                           ;eusartparser.c: 150:                 package->data.data8[1]=var_sys_NVM.velocityDecelar
      +                          ation;
 22527  002B36  5018               	movf	read_eusartparser@package^0,w,c
 22528  002B38  6ED9               	movwf	fsr2l,c
 22529  002B3A  6ADA               	clrf	fsr2h,c
 22530  002B3C  0E03               	movlw	3
 22531  002B3E  26D9               	addwf	fsr2l,f,c
 22532  002B40  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 22533  002B44  D05D               	goto	L99
 22534  002B46                     l16121:
 22535                           
 22536                           ; BSR set to: 0
 22537                           ;eusartparser.c: 158:                 package->data.data8[1]=var_sys_NVM.flashRGBMode;
 22538  002B46  5018               	movf	read_eusartparser@package^0,w,c
 22539  002B48  6ED9               	movwf	fsr2l,c
 22540  002B4A  6ADA               	clrf	fsr2h,c
 22541  002B4C  0E03               	movlw	3
 22542  002B4E  26D9               	addwf	fsr2l,f,c
 22543  002B50  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 22544  002B54  D055               	goto	L99
 22545  002B56                     l16125:
 22546                           
 22547                           ; BSR set to: 0
 22548                           ;eusartparser.c: 165:                 package->data.data8[1]=var_sys_NVM.Direction_motor
      +                          ;
 22549  002B56  5018               	movf	read_eusartparser@package^0,w,c
 22550  002B58  6ED9               	movwf	fsr2l,c
 22551  002B5A  6ADA               	clrf	fsr2h,c
 22552  002B5C  0E03               	movlw	3
 22553  002B5E  26D9               	addwf	fsr2l,f,c
 22554  002B60  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 22555  002B64  D04D               	goto	L99
 22556  002B66                     l16129:
 22557                           
 22558                           ; BSR set to: 0
 22559                           ;eusartparser.c: 172:                 package->data.data8[1]=var_sys_NVM.TypeofMotor;
 22560  002B66  5018               	movf	read_eusartparser@package^0,w,c
 22561  002B68  6ED9               	movwf	fsr2l,c
 22562  002B6A  6ADA               	clrf	fsr2h,c
 22563  002B6C  0E03               	movlw	3
 22564  002B6E  26D9               	addwf	fsr2l,f,c
 22565  002B70  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 22566  002B74  D045               	goto	L99
 22567  002B76                     l16133:
 22568                           
 22569                           ; BSR set to: 0
 22570                           ;eusartparser.c: 179:                 package->data.data8[1]=var_sys_NVM.positionRemotes
      +                          Walk;
 22571  002B76  5018               	movf	read_eusartparser@package^0,w,c
 22572  002B78  6ED9               	movwf	fsr2l,c
 22573  002B7A  6ADA               	clrf	fsr2h,c
 22574  002B7C  0E03               	movlw	3
 22575  002B7E  26D9               	addwf	fsr2l,f,c
 22576  002B80  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 22577                           
 22578                           ;eusartparser.c: 180:                 package->data.data8[0]=var_sys_NVM.positionRemotes
      +                          Full;
 22579  002B84  5018               	movf	read_eusartparser@package^0,w,c
 22580  002B86  6ED9               	movwf	fsr2l,c
 22581  002B88  6ADA               	clrf	fsr2h,c
 22582  002B8A  0E02               	movlw	2
 22583  002B8C  26D9               	addwf	fsr2l,f,c
 22584  002B8E  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 22585  002B92  D719               	goto	l16047
 22586  002B94                     l16137:
 22587                           
 22588                           ; BSR set to: 0
 22589                           ;eusartparser.c: 186:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+1);
 22590  002B94  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 22591  002B98  5018               	movf	read_eusartparser@package^0,w,c
 22592  002B9A  6EE1               	movwf	fsr1l,c
 22593  002B9C  6AE2               	clrf	fsr1h,c
 22594  002B9E  0E02               	movlw	2
 22595  002BA0  26E1               	addwf	fsr1l,f,c
 22596  002BA2  CFDE FFE6          	movff	postinc2,postinc1
 22597  002BA6  CFDD FFE5          	movff	postdec2,postdec1
 22598                           
 22599                           ; BSR set to: 0
 22600                           ;eusartparser.c: 187:                 write_package(*package);
 22601  002BAA  5018               	movf	read_eusartparser@package^0,w,c
 22602  002BAC  6ED9               	movwf	fsr2l,c
 22603  002BAE  6ADA               	clrf	fsr2h,c
 22604  002BB0  EE00  F011         	lfsr	0,write_package@package
 22605  002BB4  0E06               	movlw	6
 22606  002BB6                     u18131:
 22607  002BB6  CFDB FFEB          	movff	plusw2,plusw0
 22608  002BBA  06E8               	decf	wreg,f,c
 22609  002BBC  E2FC               	bc	u18131
 22610  002BBE  ECFD  F045         	call	_write_package	;wreg free
 22611                           
 22612                           ;eusartparser.c: 188:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+0);
 22613  002BC2  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 22614  002BC6  5018               	movf	read_eusartparser@package^0,w,c
 22615  002BC8  6EE1               	movwf	fsr1l,c
 22616  002BCA  6AE2               	clrf	fsr1h,c
 22617  002BCC  0E02               	movlw	2
 22618  002BCE  26E1               	addwf	fsr1l,f,c
 22619  002BD0  CFDE FFE6          	movff	postinc2,postinc1
 22620  002BD4  CFDD FFE5          	movff	postdec2,postdec1
 22621                           
 22622                           ;eusartparser.c: 189:                 write_package(*package);
 22623  002BD8  5018               	movf	read_eusartparser@package^0,w,c
 22624  002BDA  6ED9               	movwf	fsr2l,c
 22625  002BDC  6ADA               	clrf	fsr2h,c
 22626  002BDE  EE00  F011         	lfsr	0,write_package@package
 22627  002BE2  0E06               	movlw	6
 22628  002BE4                     u18141:
 22629  002BE4  CFDB FFEB          	movff	plusw2,plusw0
 22630  002BE8  06E8               	decf	wreg,f,c
 22631  002BEA  E2FC               	bc	u18141
 22632  002BEC  ECFD  F045         	call	_write_package	;wreg free
 22633                           
 22634                           ;eusartparser.c: 190:                 break;
 22635  002BF0  0012               	return	
 22636  002BF2                     l16143:
 22637                           
 22638                           ; BSR set to: 0
 22639                           ;eusartparser.c: 194:                 package->data.data8[1]=var_sys_NVM.OnlyRollingCode
      +                          ;
 22640  002BF2  5018               	movf	read_eusartparser@package^0,w,c
 22641  002BF4  6ED9               	movwf	fsr2l,c
 22642  002BF6  6ADA               	clrf	fsr2h,c
 22643  002BF8  0E03               	movlw	3
 22644  002BFA  26D9               	addwf	fsr2l,f,c
 22645  002BFC  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 22646  002C00                     L99:
 22647                           
 22648                           ;eusartparser.c: 195:                 package->data.data8[0]=0x00;
 22649  002C00  5018               	movf	read_eusartparser@package^0,w,c
 22650  002C02  6ED9               	movwf	fsr2l,c
 22651  002C04  6ADA               	clrf	fsr2h,c
 22652  002C06  0E02               	movlw	2
 22653  002C08  26D9               	addwf	fsr2l,f,c
 22654  002C0A  0E00               	movlw	0
 22655  002C0C  6EDF               	movwf	indf2,c
 22656  002C0E  D6DB               	goto	l16047
 22657  002C10                     l16147:
 22658                           
 22659                           ; BSR set to: 0
 22660                           ;eusartparser.c: 201:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+1);
 22661  002C10  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 22662  002C14  5018               	movf	read_eusartparser@package^0,w,c
 22663  002C16  6EE1               	movwf	fsr1l,c
 22664  002C18  6AE2               	clrf	fsr1h,c
 22665  002C1A  0E02               	movlw	2
 22666  002C1C  26E1               	addwf	fsr1l,f,c
 22667  002C1E  CFDE FFE6          	movff	postinc2,postinc1
 22668  002C22  CFDD FFE5          	movff	postdec2,postdec1
 22669                           
 22670                           ; BSR set to: 0
 22671                           ;eusartparser.c: 202:                 write_package(*package);
 22672  002C26  5018               	movf	read_eusartparser@package^0,w,c
 22673  002C28  6ED9               	movwf	fsr2l,c
 22674  002C2A  6ADA               	clrf	fsr2h,c
 22675  002C2C  EE00  F011         	lfsr	0,write_package@package
 22676  002C30  0E06               	movlw	6
 22677  002C32                     u18151:
 22678  002C32  CFDB FFEB          	movff	plusw2,plusw0
 22679  002C36  06E8               	decf	wreg,f,c
 22680  002C38  E2FC               	bc	u18151
 22681  002C3A  ECFD  F045         	call	_write_package	;wreg free
 22682                           
 22683                           ;eusartparser.c: 203:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+0);
 22684  002C3E  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 22685  002C42  5018               	movf	read_eusartparser@package^0,w,c
 22686  002C44  6EE1               	movwf	fsr1l,c
 22687  002C46  6AE2               	clrf	fsr1h,c
 22688  002C48  0E02               	movlw	2
 22689  002C4A  26E1               	addwf	fsr1l,f,c
 22690  002C4C  CFDE FFE6          	movff	postinc2,postinc1
 22691  002C50  CFDD FFE5          	movff	postdec2,postdec1
 22692                           
 22693                           ;eusartparser.c: 204:                 write_package(*package);
 22694  002C54  5018               	movf	read_eusartparser@package^0,w,c
 22695  002C56  6ED9               	movwf	fsr2l,c
 22696  002C58  6ADA               	clrf	fsr2h,c
 22697  002C5A  EE00  F011         	lfsr	0,write_package@package
 22698  002C5E  0E06               	movlw	6
 22699  002C60                     u18161:
 22700  002C60  CFDB FFEB          	movff	plusw2,plusw0
 22701  002C64  06E8               	decf	wreg,f,c
 22702  002C66  E2FC               	bc	u18161
 22703  002C68  ECFD  F045         	call	_write_package	;wreg free
 22704                           
 22705                           ;eusartparser.c: 205:                 break;
 22706  002C6C  0012               	return	
 22707  002C6E                     l16153:
 22708                           
 22709                           ; BSR set to: 0
 22710                           ;eusartparser.c: 209:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+1);
 22711  002C6E  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 22712  002C72  5018               	movf	read_eusartparser@package^0,w,c
 22713  002C74  6EE1               	movwf	fsr1l,c
 22714  002C76  6AE2               	clrf	fsr1h,c
 22715  002C78  0E02               	movlw	2
 22716  002C7A  26E1               	addwf	fsr1l,f,c
 22717  002C7C  CFDE FFE6          	movff	postinc2,postinc1
 22718  002C80  CFDD FFE5          	movff	postdec2,postdec1
 22719                           
 22720                           ; BSR set to: 0
 22721                           ;eusartparser.c: 210:                 write_package(*package);
 22722  002C84  5018               	movf	read_eusartparser@package^0,w,c
 22723  002C86  6ED9               	movwf	fsr2l,c
 22724  002C88  6ADA               	clrf	fsr2h,c
 22725  002C8A  EE00  F011         	lfsr	0,write_package@package
 22726  002C8E  0E06               	movlw	6
 22727  002C90                     u18171:
 22728  002C90  CFDB FFEB          	movff	plusw2,plusw0
 22729  002C94  06E8               	decf	wreg,f,c
 22730  002C96  E2FC               	bc	u18171
 22731  002C98  ECFD  F045         	call	_write_package	;wreg free
 22732                           
 22733                           ;eusartparser.c: 211:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+0);
 22734  002C9C  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 22735  002CA0  5018               	movf	read_eusartparser@package^0,w,c
 22736  002CA2  6EE1               	movwf	fsr1l,c
 22737  002CA4  6AE2               	clrf	fsr1h,c
 22738  002CA6  0E02               	movlw	2
 22739  002CA8  26E1               	addwf	fsr1l,f,c
 22740  002CAA  CFDE FFE6          	movff	postinc2,postinc1
 22741  002CAE  CFDD FFE5          	movff	postdec2,postdec1
 22742                           
 22743                           ;eusartparser.c: 212:                 write_package(*package);
 22744  002CB2  5018               	movf	read_eusartparser@package^0,w,c
 22745  002CB4  6ED9               	movwf	fsr2l,c
 22746  002CB6  6ADA               	clrf	fsr2h,c
 22747  002CB8  EE00  F011         	lfsr	0,write_package@package
 22748  002CBC  0E06               	movlw	6
 22749  002CBE                     u18181:
 22750  002CBE  CFDB FFEB          	movff	plusw2,plusw0
 22751  002CC2  06E8               	decf	wreg,f,c
 22752  002CC4  E2FC               	bc	u18181
 22753  002CC6  ECFD  F045         	call	_write_package	;wreg free
 22754                           
 22755                           ;eusartparser.c: 213:                 break;
 22756  002CCA  0012               	return	
 22757  002CCC                     l16159:
 22758                           
 22759                           ; BSR set to: 0
 22760                           ;eusartparser.c: 217:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalClose;
 22761  002CCC  5018               	movf	read_eusartparser@package^0,w,c
 22762  002CCE  6ED9               	movwf	fsr2l,c
 22763  002CD0  6ADA               	clrf	fsr2h,c
 22764  002CD2  0E02               	movlw	2
 22765  002CD4  26D9               	addwf	fsr2l,f,c
 22766  002CD6  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 22767  002CDA  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 22768  002CDE  D673               	goto	l16047
 22769  002CE0                     l16163:
 22770                           
 22771                           ; BSR set to: 0
 22772                           ;eusartparser.c: 223:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalOpen;
 22773  002CE0  5018               	movf	read_eusartparser@package^0,w,c
 22774  002CE2  6ED9               	movwf	fsr2l,c
 22775  002CE4  6ADA               	clrf	fsr2h,c
 22776  002CE6  0E02               	movlw	2
 22777  002CE8  26D9               	addwf	fsr2l,f,c
 22778  002CEA  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 22779  002CEE  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 22780  002CF2  D669               	goto	l16047
 22781  002CF4                     l16167:
 22782                           
 22783                           ; BSR set to: 0
 22784                           ;eusartparser.c: 229:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+1);
 22785  002CF4  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 22786  002CF8  5018               	movf	read_eusartparser@package^0,w,c
 22787  002CFA  6EE1               	movwf	fsr1l,c
 22788  002CFC  6AE2               	clrf	fsr1h,c
 22789  002CFE  0E02               	movlw	2
 22790  002D00  26E1               	addwf	fsr1l,f,c
 22791  002D02  CFDE FFE6          	movff	postinc2,postinc1
 22792  002D06  CFDD FFE5          	movff	postdec2,postdec1
 22793                           
 22794                           ; BSR set to: 0
 22795                           ;eusartparser.c: 230:                 write_package(*package);
 22796  002D0A  5018               	movf	read_eusartparser@package^0,w,c
 22797  002D0C  6ED9               	movwf	fsr2l,c
 22798  002D0E  6ADA               	clrf	fsr2h,c
 22799  002D10  EE00  F011         	lfsr	0,write_package@package
 22800  002D14  0E06               	movlw	6
 22801  002D16                     u18191:
 22802  002D16  CFDB FFEB          	movff	plusw2,plusw0
 22803  002D1A  06E8               	decf	wreg,f,c
 22804  002D1C  E2FC               	bc	u18191
 22805  002D1E  ECFD  F045         	call	_write_package	;wreg free
 22806                           
 22807                           ;eusartparser.c: 231:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+0);
 22808  002D22  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 22809  002D26  5018               	movf	read_eusartparser@package^0,w,c
 22810  002D28  6EE1               	movwf	fsr1l,c
 22811  002D2A  6AE2               	clrf	fsr1h,c
 22812  002D2C  0E02               	movlw	2
 22813  002D2E  26E1               	addwf	fsr1l,f,c
 22814  002D30  CFDE FFE6          	movff	postinc2,postinc1
 22815  002D34  CFDD FFE5          	movff	postdec2,postdec1
 22816                           
 22817                           ;eusartparser.c: 232:                 write_package(*package);
 22818  002D38  5018               	movf	read_eusartparser@package^0,w,c
 22819  002D3A  6ED9               	movwf	fsr2l,c
 22820  002D3C  6ADA               	clrf	fsr2h,c
 22821  002D3E  EE00  F011         	lfsr	0,write_package@package
 22822  002D42  0E06               	movlw	6
 22823  002D44                     u18201:
 22824  002D44  CFDB FFEB          	movff	plusw2,plusw0
 22825  002D48  06E8               	decf	wreg,f,c
 22826  002D4A  E2FC               	bc	u18201
 22827  002D4C  ECFD  F045         	call	_write_package	;wreg free
 22828                           
 22829                           ;eusartparser.c: 233:                 break;
 22830  002D50  0012               	return	
 22831  002D52                     l16173:
 22832                           
 22833                           ; BSR set to: 0
 22834                           ;eusartparser.c: 237:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+1);
 22835  002D52  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 22836  002D56  5018               	movf	read_eusartparser@package^0,w,c
 22837  002D58  6EE1               	movwf	fsr1l,c
 22838  002D5A  6AE2               	clrf	fsr1h,c
 22839  002D5C  0E02               	movlw	2
 22840  002D5E  26E1               	addwf	fsr1l,f,c
 22841  002D60  CFDE FFE6          	movff	postinc2,postinc1
 22842  002D64  CFDD FFE5          	movff	postdec2,postdec1
 22843                           
 22844                           ; BSR set to: 0
 22845                           ;eusartparser.c: 238:                 write_package(*package);
 22846  002D68  5018               	movf	read_eusartparser@package^0,w,c
 22847  002D6A  6ED9               	movwf	fsr2l,c
 22848  002D6C  6ADA               	clrf	fsr2h,c
 22849  002D6E  EE00  F011         	lfsr	0,write_package@package
 22850  002D72  0E06               	movlw	6
 22851  002D74                     u18211:
 22852  002D74  CFDB FFEB          	movff	plusw2,plusw0
 22853  002D78  06E8               	decf	wreg,f,c
 22854  002D7A  E2FC               	bc	u18211
 22855  002D7C  ECFD  F045         	call	_write_package	;wreg free
 22856                           
 22857                           ;eusartparser.c: 239:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+0);
 22858  002D80  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 22859  002D84  5018               	movf	read_eusartparser@package^0,w,c
 22860  002D86  6EE1               	movwf	fsr1l,c
 22861  002D88  6AE2               	clrf	fsr1h,c
 22862  002D8A  0E02               	movlw	2
 22863  002D8C  26E1               	addwf	fsr1l,f,c
 22864  002D8E  CFDE FFE6          	movff	postinc2,postinc1
 22865  002D92  CFDD FFE5          	movff	postdec2,postdec1
 22866                           
 22867                           ;eusartparser.c: 240:                 write_package(*package);
 22868  002D96  5018               	movf	read_eusartparser@package^0,w,c
 22869  002D98  6ED9               	movwf	fsr2l,c
 22870  002D9A  6ADA               	clrf	fsr2h,c
 22871  002D9C  EE00  F011         	lfsr	0,write_package@package
 22872  002DA0  0E06               	movlw	6
 22873  002DA2                     u18221:
 22874  002DA2  CFDB FFEB          	movff	plusw2,plusw0
 22875  002DA6  06E8               	decf	wreg,f,c
 22876  002DA8  E2FC               	bc	u18221
 22877  002DAA  ECFD  F045         	call	_write_package	;wreg free
 22878                           
 22879                           ;eusartparser.c: 241:                 break;
 22880  002DAE  0012               	return	
 22881  002DB0                     l16181:
 22882                           
 22883                           ; BSR set to: 0
 22884  002DB0  5018               	movf	read_eusartparser@package^0,w,c
 22885  002DB2  6ED9               	movwf	fsr2l,c
 22886  002DB4  6ADA               	clrf	fsr2h,c
 22887  002DB6  0E01               	movlw	1
 22888  002DB8  26D9               	addwf	fsr2l,f,c
 22889  002DBA  50DF               	movf	indf2,w,c
 22890  002DBC  6E19               	movwf	??_read_eusartparser^0,c
 22891  002DBE  6A1A               	clrf	(??_read_eusartparser+1)^0,c
 22892                           
 22893                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22894                           ; Switch size 1, requested type "simple"
 22895                           ; Number of cases is 1, Range of values is 0 to 0
 22896                           ; switch strategies available:
 22897                           ; Name         Instructions Cycles
 22898                           ; simple_byte            4     3 (average)
 22899                           ;	Chosen strategy is simple_byte
 22900  002DC0  501A               	movf	(??_read_eusartparser+1)^0,w,c
 22901  002DC2  0A00               	xorlw	0	; case 0
 22902  002DC4  A4D8               	btfss	status,2,c
 22903  002DC6  0012               	return	
 22904                           
 22905                           ; BSR set to: 0
 22906                           ; Switch size 1, requested type "simple"
 22907                           ; Number of cases is 38, Range of values is 0 to 50
 22908                           ; switch strategies available:
 22909                           ; Name         Instructions Cycles
 22910                           ; simple_byte          115    58 (average)
 22911                           ;	Chosen strategy is simple_byte
 22912  002DC8  5019               	movf	??_read_eusartparser^0,w,c
 22913  002DCA  0A00               	xorlw	0	; case 0
 22914  002DCC  B4D8               	btfsc	status,2,c
 22915  002DCE  D5ED               	goto	l16045
 22916  002DD0  0A02               	xorlw	2	; case 2
 22917  002DD2  B4D8               	btfsc	status,2,c
 22918  002DD4  D61C               	goto	l16057
 22919  002DD6  0A01               	xorlw	1	; case 3
 22920  002DD8  B4D8               	btfsc	status,2,c
 22921  002DDA  D68D               	goto	l16101
 22922  002DDC  0A06               	xorlw	6	; case 5
 22923  002DDE  B4D8               	btfsc	status,2,c
 22924  002DE0  D625               	goto	l16061
 22925  002DE2  0A02               	xorlw	2	; case 7
 22926  002DE4  B4D8               	btfsc	status,2,c
 22927  002DE6  D670               	goto	l16093
 22928  002DE8  0A0F               	xorlw	15	; case 8
 22929  002DEA  B4D8               	btfsc	status,2,c
 22930  002DEC  D6AC               	goto	l16121
 22931  002DEE  0A02               	xorlw	2	; case 10
 22932  002DF0  B4D8               	btfsc	status,2,c
 22933  002DF2  D689               	goto	l16105
 22934  002DF4  0A1A               	xorlw	26	; case 16
 22935  002DF6  B4D8               	btfsc	status,2,c
 22936  002DF8  D5D8               	goto	l16045
 22937  002DFA  0A01               	xorlw	1	; case 17
 22938  002DFC  B4D8               	btfsc	status,2,c
 22939  002DFE  D5F0               	goto	l16049
 22940  002E00  0A03               	xorlw	3	; case 18
 22941  002E02  B4D8               	btfsc	status,2,c
 22942  002E04  D5FC               	goto	l16053
 22943  002E06  0A01               	xorlw	1	; case 19
 22944  002E08  B4D8               	btfsc	status,2,c
 22945  002E0A  D601               	goto	l16057
 22946  002E0C  0A07               	xorlw	7	; case 20
 22947  002E0E  B4D8               	btfsc	status,2,c
 22948  002E10  D60D               	goto	l16061
 22949  002E12  0A01               	xorlw	1	; case 21
 22950  002E14  B4D8               	btfsc	status,2,c
 22951  002E16  D619               	goto	l16065
 22952  002E18  0A03               	xorlw	3	; case 22
 22953  002E1A  B4D8               	btfsc	status,2,c
 22954  002E1C  D625               	goto	l16069
 22955  002E1E  0A01               	xorlw	1	; case 23
 22956  002E20  B4D8               	btfsc	status,2,c
 22957  002E22  D62A               	goto	l16073
 22958  002E24  0A0F               	xorlw	15	; case 24
 22959  002E26  B4D8               	btfsc	status,2,c
 22960  002E28  D62F               	goto	l16077
 22961  002E2A  0A01               	xorlw	1	; case 25
 22962  002E2C  B4D8               	btfsc	status,2,c
 22963  002E2E  D634               	goto	l16081
 22964  002E30  0A03               	xorlw	3	; case 26
 22965  002E32  B4D8               	btfsc	status,2,c
 22966  002E34  D639               	goto	l16085
 22967  002E36  0A01               	xorlw	1	; case 27
 22968  002E38  B4D8               	btfsc	status,2,c
 22969  002E3A  D63E               	goto	l16089
 22970  002E3C  0A07               	xorlw	7	; case 28
 22971  002E3E  B4D8               	btfsc	status,2,c
 22972  002E40  D643               	goto	l16093
 22973  002E42  0A01               	xorlw	1	; case 29
 22974  002E44  B4D8               	btfsc	status,2,c
 22975  002E46  D648               	goto	l16097
 22976  002E48  0A03               	xorlw	3	; case 30
 22977  002E4A  B4D8               	btfsc	status,2,c
 22978  002E4C  D654               	goto	l16101
 22979  002E4E  0A01               	xorlw	1	; case 31
 22980  002E50  B4D8               	btfsc	status,2,c
 22981  002E52  D659               	goto	l16105
 22982  002E54  0A3F               	xorlw	63	; case 32
 22983  002E56  B4D8               	btfsc	status,2,c
 22984  002E58  D65E               	goto	l16109
 22985  002E5A  0A01               	xorlw	1	; case 33
 22986  002E5C  B4D8               	btfsc	status,2,c
 22987  002E5E  D663               	goto	l16113
 22988  002E60  0A03               	xorlw	3	; case 34
 22989  002E62  B4D8               	btfsc	status,2,c
 22990  002E64  D668               	goto	l16117
 22991  002E66  0A01               	xorlw	1	; case 35
 22992  002E68  B4D8               	btfsc	status,2,c
 22993  002E6A  D66D               	goto	l16121
 22994  002E6C  0A07               	xorlw	7	; case 36
 22995  002E6E  B4D8               	btfsc	status,2,c
 22996  002E70  D672               	goto	l16125
 22997  002E72  0A01               	xorlw	1	; case 37
 22998  002E74  B4D8               	btfsc	status,2,c
 22999  002E76  D677               	goto	l16129
 23000  002E78  0A03               	xorlw	3	; case 38
 23001  002E7A  B4D8               	btfsc	status,2,c
 23002  002E7C  D67C               	goto	l16133
 23003  002E7E  0A01               	xorlw	1	; case 39
 23004  002E80  B4D8               	btfsc	status,2,c
 23005  002E82  D688               	goto	l16137
 23006  002E84  0A0E               	xorlw	14	; case 41
 23007  002E86  B4D8               	btfsc	status,2,c
 23008  002E88  D6B4               	goto	l16143
 23009  002E8A  0A03               	xorlw	3	; case 42
 23010  002E8C  B4D8               	btfsc	status,2,c
 23011  002E8E  D6C0               	goto	l16147
 23012  002E90  0A06               	xorlw	6	; case 44
 23013  002E92  B4D8               	btfsc	status,2,c
 23014  002E94  D6EC               	goto	l16153
 23015  002E96  0A02               	xorlw	2	; case 46
 23016  002E98  B4D8               	btfsc	status,2,c
 23017  002E9A  D718               	goto	l16159
 23018  002E9C  0A01               	xorlw	1	; case 47
 23019  002E9E  B4D8               	btfsc	status,2,c
 23020  002EA0  D71F               	goto	l16163
 23021  002EA2  0A1F               	xorlw	31	; case 48
 23022  002EA4  B4D8               	btfsc	status,2,c
 23023  002EA6  D726               	goto	l16167
 23024  002EA8  0A02               	xorlw	2	; case 50
 23025  002EAA  A4D8               	btfss	status,2,c
 23026  002EAC  0012               	return	
 23027  002EAE  D751               	goto	l16173
 23028  002EB0                     __end_of_read_eusartparser:
 23029                           	callstack 0
 23030                           
 23031 ;; *************** function _write_package *****************
 23032 ;; Defined at:
 23033 ;;		line 50 in file "eusartpackage.c"
 23034 ;; Parameters:    Size  Location     Type
 23035 ;;  package         7   16[COMRAM] const struct package_t
 23036 ;; Auto vars:     Size  Location     Type
 23037 ;;		None
 23038 ;; Return value:  Size  Location     Type
 23039 ;;                  1    wreg      void 
 23040 ;; Registers used:
 23041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23042 ;; Tracked objects:
 23043 ;;		On entry : 0/1
 23044 ;;		On exit  : 0/0
 23045 ;;		Unchanged: 0/0
 23046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23047 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23050 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23051 ;;Total ram usage:        7 bytes
 23052 ;; Hardware stack levels used: 1
 23053 ;; Hardware stack levels required when called: 5
 23054 ;; This function calls:
 23055 ;;		_EUSART1_Write
 23056 ;; This function is called by:
 23057 ;;		_read_eusartparser
 23058 ;;		_eusartparser
 23059 ;; This function uses a non-reentrant model
 23060 ;;
 23061                           
 23062                           	psect	text82
 23063  008BFA                     __ptext82:
 23064                           	callstack 0
 23065  008BFA                     _write_package:
 23066                           	callstack 24
 23067                           
 23068                           ;eusartpackage.c: 52:         if(package.valid==0)
 23069                           
 23070                           ;incstack = 0
 23071  008BFA  5017               	movf	(write_package@package+6)^0,w,c
 23072  008BFC  B4D8               	btfsc	status,2,c
 23073  008BFE  0012               	return	
 23074                           
 23075                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 23076  008C00  5015               	movf	(write_package@package+4)^0,w,c
 23077  008C02  EC95  F044         	call	_EUSART1_Write
 23078                           
 23079                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 23080  008C06  5011               	movf	write_package@package^0,w,c
 23081  008C08  EC95  F044         	call	_EUSART1_Write
 23082                           
 23083                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 23084  008C0C  5012               	movf	(write_package@package+1)^0,w,c
 23085  008C0E  EC95  F044         	call	_EUSART1_Write
 23086                           
 23087                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 23088  008C12  5013               	movf	(write_package@package+2)^0,w,c
 23089  008C14  EC95  F044         	call	_EUSART1_Write
 23090                           
 23091                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 23092  008C18  5014               	movf	(write_package@package+3)^0,w,c
 23093  008C1A  EC95  F044         	call	_EUSART1_Write
 23094                           
 23095                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 23096  008C1E  5016               	movf	(write_package@package+5)^0,w,c
 23097  008C20  EC95  F044         	call	_EUSART1_Write
 23098  008C24  0012               	return		;funcret
 23099  008C26                     __end_of_write_package:
 23100                           	callstack 0
 23101                           
 23102 ;; *************** function _EUSART1_Write *****************
 23103 ;; Defined at:
 23104 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23105 ;; Parameters:    Size  Location     Type
 23106 ;;  txData          1    wreg     unsigned char 
 23107 ;; Auto vars:     Size  Location     Type
 23108 ;;  txData          1   15[COMRAM] unsigned char 
 23109 ;; Return value:  Size  Location     Type
 23110 ;;                  1    wreg      void 
 23111 ;; Registers used:
 23112 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23113 ;; Tracked objects:
 23114 ;;		On entry : 0/1
 23115 ;;		On exit  : 3F/E
 23116 ;;		Unchanged: 0/0
 23117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23121 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23122 ;;Total ram usage:        1 bytes
 23123 ;; Hardware stack levels used: 1
 23124 ;; Hardware stack levels required when called: 4
 23125 ;; This function calls:
 23126 ;;		Nothing
 23127 ;; This function is called by:
 23128 ;;		_write_package
 23129 ;; This function uses a non-reentrant model
 23130 ;;
 23131                           
 23132                           	psect	text83
 23133  00892A                     __ptext83:
 23134                           	callstack 0
 23135  00892A                     _EUSART1_Write:
 23136                           	callstack 24
 23137                           
 23138                           ;incstack = 0
 23139                           ;EUSART1_Write@txData stored from wreg
 23140  00892A  6E10               	movwf	EUSART1_Write@txData^0,c
 23141  00892C                     
 23142                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23143                           
 23144                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23145  00892C  0101               	movlb	1	; () banked
 23146  00892E  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 23147  008930  B4D8               	btfsc	status,2,c
 23148  008932  D7FC               	goto	l12025
 23149                           
 23150                           ; BSR set to: 1
 23151                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23152  008934  010E               	movlb	14	; () banked
 23153  008936  B9C5               	btfsc	197,4,b	;volatile
 23154  008938  D003               	goto	l100
 23155                           
 23156                           ; BSR set to: 14
 23157                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23158  00893A  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 23159                           
 23160                           ;mcc_generated_files/eusart1.c: 182:     }
 23161  00893E  D012               	goto	l12041
 23162  008940                     l100:
 23163                           
 23164                           ; BSR set to: 14
 23165                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23166  008940  99C5               	bcf	197,4,b	;volatile
 23167                           
 23168                           ; BSR set to: 14
 23169                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23170  008942  0E84               	movlw	low _eusart1TxBuffer
 23171  008944  0100               	movlb	0	; () banked
 23172  008946  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 23173  008948  6ED9               	movwf	fsr2l,c
 23174  00894A  6ADA               	clrf	fsr2h,c
 23175  00894C  0E02               	movlw	high _eusart1TxBuffer
 23176  00894E  22DA               	addwfc	fsr2h,f,c
 23177  008950  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 23178                           
 23179                           ; BSR set to: 0
 23180  008954  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 23181                           
 23182                           ; BSR set to: 0
 23183                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23184  008956  0E07               	movlw	7
 23185  008958  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 23186  00895A  D002               	goto	l12039
 23187                           
 23188                           ; BSR set to: 0
 23189                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23190  00895C  0E00               	movlw	0
 23191  00895E  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 23192  008960                     l12039:
 23193                           
 23194                           ; BSR set to: 0
 23195                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23196  008960  0101               	movlb	1	; () banked
 23197  008962  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 23198  008964                     l12041:
 23199                           
 23200                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23201  008964  010E               	movlb	14	; () banked
 23202  008966  89C5               	bsf	197,4,b	;volatile
 23203                           
 23204                           ; BSR set to: 14
 23205  008968  0012               	return		;funcret
 23206  00896A                     __end_of_EUSART1_Write:
 23207                           	callstack 0
 23208                           
 23209 ;; *************** function _WWDT_TimerClear *****************
 23210 ;; Defined at:
 23211 ;;		line 128 in file "mcc_generated_files/mcc.c"
 23212 ;; Parameters:    Size  Location     Type
 23213 ;;		None
 23214 ;; Auto vars:     Size  Location     Type
 23215 ;;  state           1   15[COMRAM] _Bool 
 23216 ;;  readBack        1    0        unsigned char 
 23217 ;; Return value:  Size  Location     Type
 23218 ;;                  1    wreg      void 
 23219 ;; Registers used:
 23220 ;;		wreg, status,2
 23221 ;; Tracked objects:
 23222 ;;		On entry : 0/0
 23223 ;;		On exit  : 0/0
 23224 ;;		Unchanged: 0/0
 23225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23230 ;;Total ram usage:        1 bytes
 23231 ;; Hardware stack levels used: 1
 23232 ;; Hardware stack levels required when called: 4
 23233 ;; This function calls:
 23234 ;;		Nothing
 23235 ;; This function is called by:
 23236 ;;		_main
 23237 ;; This function uses a non-reentrant model
 23238 ;;
 23239                           
 23240                           	psect	text84
 23241  008FE0                     __ptext84:
 23242                           	callstack 0
 23243  008FE0                     _WWDT_TimerClear:
 23244                           	callstack 26
 23245                           
 23246                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 23247                           
 23248                           ; BSR set to: 14
 23249                           ;incstack = 0
 23250  008FE0  0E00               	movlw	0
 23251  008FE2  BEF2               	btfsc	4082,7,c	;volatile
 23252  008FE4  0E01               	movlw	1
 23253  008FE6  6E10               	movwf	WWDT_TimerClear@state^0,c
 23254                           
 23255                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 23256  008FE8  9EF2               	bcf	4082,7,c	;volatile
 23257  008FEA  010E               	movlb	14	; () banked
 23258  008FEC  51D2               	movf	210,w,b	;volatile
 23259  008FEE  0004               	clrwdt		;# 
 23260                           
 23261                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 23262  008FF0  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 23263  008FF2  D002               	bra	u18635
 23264  008FF4  9EF2               	bcf	4082,7,c	;volatile
 23265  008FF6  D001               	bra	u18636
 23266  008FF8                     u18635:
 23267  008FF8  8EF2               	bsf	4082,7,c	;volatile
 23268  008FFA                     u18636:
 23269  008FFA  0012               	return		;funcret
 23270  008FFC                     __end_of_WWDT_TimerClear:
 23271                           	callstack 0
 23272                           
 23273 ;; *************** function _WWDT_SoftEnable *****************
 23274 ;; Defined at:
 23275 ;;		line 104 in file "mcc_generated_files/mcc.c"
 23276 ;; Parameters:    Size  Location     Type
 23277 ;;		None
 23278 ;; Auto vars:     Size  Location     Type
 23279 ;;		None
 23280 ;; Return value:  Size  Location     Type
 23281 ;;                  1    wreg      void 
 23282 ;; Registers used:
 23283 ;;		None
 23284 ;; Tracked objects:
 23285 ;;		On entry : 3F/E
 23286 ;;		On exit  : 3F/E
 23287 ;;		Unchanged: 0/0
 23288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23293 ;;Total ram usage:        0 bytes
 23294 ;; Hardware stack levels used: 1
 23295 ;; Hardware stack levels required when called: 4
 23296 ;; This function calls:
 23297 ;;		Nothing
 23298 ;; This function is called by:
 23299 ;;		_main
 23300 ;; This function uses a non-reentrant model
 23301 ;;
 23302                           
 23303                           	psect	text85
 23304  009320                     __ptext85:
 23305                           	callstack 0
 23306  009320                     _WWDT_SoftEnable:
 23307                           	callstack 26
 23308                           
 23309                           ; BSR set to: 14
 23310                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 23311                           
 23312                           ;incstack = 0
 23313  009320  81D2               	bsf	210,0,b	;volatile
 23314                           
 23315                           ; BSR set to: 14
 23316  009322  0012               	return		;funcret
 23317  009324                     __end_of_WWDT_SoftEnable:
 23318                           	callstack 0
 23319                           
 23320 ;; *************** function _ShowVersion *****************
 23321 ;; Defined at:
 23322 ;;		line 254 in file "main_MC50.c"
 23323 ;; Parameters:    Size  Location     Type
 23324 ;;		None
 23325 ;; Auto vars:     Size  Location     Type
 23326 ;;		None
 23327 ;; Return value:  Size  Location     Type
 23328 ;;                  1    wreg      void 
 23329 ;; Registers used:
 23330 ;;		wreg, status,2, status,0, cstack
 23331 ;; Tracked objects:
 23332 ;;		On entry : 3F/1
 23333 ;;		On exit  : 3F/1
 23334 ;;		Unchanged: 0/0
 23335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23340 ;;Total ram usage:        0 bytes
 23341 ;; Hardware stack levels used: 1
 23342 ;; Hardware stack levels required when called: 5
 23343 ;; This function calls:
 23344 ;;		_SetSegmentValue
 23345 ;; This function is called by:
 23346 ;;		_main
 23347 ;; This function uses a non-reentrant model
 23348 ;;
 23349                           
 23350                           	psect	text86
 23351  0081B8                     __ptext86:
 23352                           	callstack 0
 23353  0081B8                     _ShowVersion:
 23354                           	callstack 25
 23355                           
 23356                           ; BSR set to: 1
 23357                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 23358                           
 23359                           ; BSR set to: 14
 23360                           ;incstack = 0
 23361  0081B8  BFD7               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 23362  0081BA  D005               	goto	u19740
 23363  0081BC  51D7               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 23364  0081BE  E12E               	bnz	l2039
 23365  0081C0  05D6               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 23366  0081C2  B0D8               	btfsc	status,0,c
 23367  0081C4  0012               	return	
 23368  0081C6                     u19740:
 23369                           
 23370                           ; BSR set to: 1
 23371                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 23372  0081C6  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 23373  0081C8  A4D8               	btfss	status,2,c
 23374  0081CA  D006               	goto	l16857
 23375                           
 23376                           ; BSR set to: 1
 23377                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 23378  0081CC  0E01               	movlw	1
 23379  0081CE  6E1C               	movwf	SetSegmentValue@d2^0,c
 23380  0081D0  0E00               	movlw	0
 23381  0081D2  EC41  F048         	call	_SetSegmentValue
 23382                           
 23383                           ;main_MC50.c: 262:             }
 23384  0081D6  D01C               	goto	l2034
 23385  0081D8                     l16857:
 23386                           
 23387                           ; BSR set to: 1
 23388  0081D8  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 23389  0081DA  A4D8               	btfss	status,2,c
 23390  0081DC  D006               	goto	l16861
 23391                           
 23392                           ; BSR set to: 1
 23393                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 23394  0081DE  0E01               	movlw	1
 23395  0081E0  6E1C               	movwf	SetSegmentValue@d2^0,c
 23396  0081E2  0E14               	movlw	20
 23397  0081E4  EC41  F048         	call	_SetSegmentValue
 23398                           
 23399                           ;main_MC50.c: 266:             }
 23400  0081E8  D013               	goto	l2034
 23401  0081EA                     l16861:
 23402                           
 23403                           ; BSR set to: 1
 23404  0081EA  0E02               	movlw	2
 23405  0081EC  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 23406  0081EE  A4D8               	btfss	status,2,c
 23407  0081F0  D006               	goto	l16865
 23408                           
 23409                           ; BSR set to: 1
 23410                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 23411  0081F2  0E00               	movlw	0
 23412  0081F4  6E1C               	movwf	SetSegmentValue@d2^0,c
 23413  0081F6  0E08               	movlw	8
 23414  0081F8  EC41  F048         	call	_SetSegmentValue
 23415                           
 23416                           ;main_MC50.c: 270:             }
 23417  0081FC  D009               	goto	l2034
 23418  0081FE                     l16865:
 23419                           
 23420                           ; BSR set to: 1
 23421  0081FE  0E03               	movlw	3
 23422  008200  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 23423  008202  A4D8               	btfss	status,2,c
 23424  008204  D005               	goto	l2034
 23425                           
 23426                           ; BSR set to: 1
 23427                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 23428  008206  0E02               	movlw	2
 23429  008208  6E1C               	movwf	SetSegmentValue@d2^0,c
 23430  00820A  0E14               	movlw	20
 23431  00820C  EC41  F048         	call	_SetSegmentValue
 23432  008210                     l2034:
 23433                           
 23434                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 23435                           
 23436                           ; BSR set to: 1
 23437  008210  0101               	movlb	1	; () banked
 23438  008212  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 23439                           
 23440                           ; BSR set to: 1
 23441                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 23442  008214  0E00               	movlw	0
 23443  008216  6FD7               	movwf	(_ts_system+61)& (0+255),b	;volatile
 23444  008218  0E14               	movlw	20
 23445  00821A  6FD6               	movwf	(_ts_system+60)& (0+255),b	;volatile
 23446  00821C                     l2039:
 23447                           
 23448                           ; BSR set to: 1
 23449  00821C  0012               	return		;funcret
 23450  00821E                     __end_of_ShowVersion:
 23451                           	callstack 0
 23452                           
 23453 ;; *************** function _SetSegmentValue *****************
 23454 ;; Defined at:
 23455 ;;		line 112 in file "outputs_MC50.c"
 23456 ;; Parameters:    Size  Location     Type
 23457 ;;  d1              1    wreg     unsigned char 
 23458 ;;  d2              1   27[COMRAM] unsigned char 
 23459 ;; Auto vars:     Size  Location     Type
 23460 ;;  d1              1   28[COMRAM] unsigned char 
 23461 ;; Return value:  Size  Location     Type
 23462 ;;                  1    wreg      void 
 23463 ;; Registers used:
 23464 ;;		wreg, status,2
 23465 ;; Tracked objects:
 23466 ;;		On entry : 0/0
 23467 ;;		On exit  : 3F/0
 23468 ;;		Unchanged: 0/0
 23469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23470 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23474 ;;Total ram usage:        2 bytes
 23475 ;; Hardware stack levels used: 1
 23476 ;; Hardware stack levels required when called: 4
 23477 ;; This function calls:
 23478 ;;		Nothing
 23479 ;; This function is called by:
 23480 ;;		_main
 23481 ;;		_ShowVersion
 23482 ;;		_controlSelectRemote
 23483 ;; This function uses a non-reentrant model
 23484 ;;
 23485                           
 23486                           	psect	text87
 23487  009082                     __ptext87:
 23488                           	callstack 0
 23489  009082                     _SetSegmentValue:
 23490                           	callstack 23
 23491                           
 23492                           ; BSR set to: 1
 23493                           ;incstack = 0
 23494                           ;SetSegmentValue@d1 stored from wreg
 23495  009082  6E1D               	movwf	SetSegmentValue@d1^0,c
 23496                           
 23497                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 23498  009084  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 23499                           
 23500                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 23501  009088  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 23502                           
 23503                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 23504  00908C  0E00               	movlw	0
 23505  00908E  0100               	movlb	0	; () banked
 23506  009090  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 23507  009092  0E00               	movlw	0
 23508  009094  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 23509                           
 23510                           ; BSR set to: 0
 23511                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 23512  009096  0E00               	movlw	0
 23513  009098  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 23514                           
 23515                           ; BSR set to: 0
 23516  00909A  0012               	return		;funcret
 23517  00909C                     __end_of_SetSegmentValue:
 23518                           	callstack 0
 23519                           
 23520 ;; *************** function _SYSTEM_Initialize *****************
 23521 ;; Defined at:
 23522 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23523 ;; Parameters:    Size  Location     Type
 23524 ;;		None
 23525 ;; Auto vars:     Size  Location     Type
 23526 ;;		None
 23527 ;; Return value:  Size  Location     Type
 23528 ;;                  1    wreg      void 
 23529 ;; Registers used:
 23530 ;;		wreg, status,2, status,0, cstack
 23531 ;; Tracked objects:
 23532 ;;		On entry : 3F/0
 23533 ;;		On exit  : 3F/E
 23534 ;;		Unchanged: 0/0
 23535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23540 ;;Total ram usage:        0 bytes
 23541 ;; Hardware stack levels used: 1
 23542 ;; Hardware stack levels required when called: 6
 23543 ;; This function calls:
 23544 ;;		_ADCC_Initialize
 23545 ;;		_EUSART1_Initialize
 23546 ;;		_I2C1_Initialize
 23547 ;;		_INTERRUPT_Initialize
 23548 ;;		_OSCILLATOR_Initialize
 23549 ;;		_PIN_MANAGER_Initialize
 23550 ;;		_PMD_Initialize
 23551 ;;		_TMR0_Initialize
 23552 ;;		_TMR1_Initialize
 23553 ;;		_TMR2_Initialize
 23554 ;;		_WWDT_Initialize
 23555 ;; This function is called by:
 23556 ;;		_main
 23557 ;; This function uses a non-reentrant model
 23558 ;;
 23559                           
 23560                           	psect	text88
 23561  008BA0                     __ptext88:
 23562                           	callstack 0
 23563  008BA0                     _SYSTEM_Initialize:
 23564                           	callstack 24
 23565                           
 23566                           ; BSR set to: 0
 23567                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23568                           
 23569                           ; BSR set to: 0
 23570                           ;incstack = 0
 23571  008BA0  EC92  F049         	call	_INTERRUPT_Initialize	;wreg free
 23572                           
 23573                           ; BSR set to: 0
 23574                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23575  008BA4  ECFE  F047         	call	_PMD_Initialize	;wreg free
 23576                           
 23577                           ; BSR set to: 14
 23578                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 23579  008BA8  ECCD  F048         	call	_I2C1_Initialize	;wreg free
 23580                           
 23581                           ; BSR set to: 14
 23582                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 23583  008BAC  ECB1  F03A         	call	_PIN_MANAGER_Initialize	;wreg free
 23584                           
 23585                           ; BSR set to: 14
 23586                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 23587  008BB0  ECA3  F048         	call	_OSCILLATOR_Initialize	;wreg free
 23588                           
 23589                           ; BSR set to: 14
 23590                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 23591  008BB4  EC11  F049         	call	_WWDT_Initialize	;wreg free
 23592                           
 23593                           ; BSR set to: 14
 23594                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 23595  008BB8  EC4E  F043         	call	_ADCC_Initialize	;wreg free
 23596                           
 23597                           ; BSR set to: 15
 23598                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23599  008BBC  EC13  F046         	call	_TMR2_Initialize	;wreg free
 23600                           
 23601                           ; BSR set to: 14
 23602                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 23603  008BC0  EC74  F044         	call	_TMR1_Initialize	;wreg free
 23604                           
 23605                           ; BSR set to: 14
 23606                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 23607  008BC4  ECAF  F047         	call	_TMR0_Initialize	;wreg free
 23608                           
 23609                           ; BSR set to: 14
 23610                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 23611  008BC8  ECED  F03D         	call	_EUSART1_Initialize	;wreg free
 23612                           
 23613                           ; BSR set to: 14
 23614  008BCC  0012               	return		;funcret
 23615  008BCE                     __end_of_SYSTEM_Initialize:
 23616                           	callstack 0
 23617                           
 23618 ;; *************** function _WWDT_Initialize *****************
 23619 ;; Defined at:
 23620 ;;		line 96 in file "mcc_generated_files/mcc.c"
 23621 ;; Parameters:    Size  Location     Type
 23622 ;;		None
 23623 ;; Auto vars:     Size  Location     Type
 23624 ;;		None
 23625 ;; Return value:  Size  Location     Type
 23626 ;;                  1    wreg      void 
 23627 ;; Registers used:
 23628 ;;		wreg, status,2
 23629 ;; Tracked objects:
 23630 ;;		On entry : 3F/E
 23631 ;;		On exit  : 3F/E
 23632 ;;		Unchanged: 0/0
 23633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23638 ;;Total ram usage:        0 bytes
 23639 ;; Hardware stack levels used: 1
 23640 ;; Hardware stack levels required when called: 4
 23641 ;; This function calls:
 23642 ;;		Nothing
 23643 ;; This function is called by:
 23644 ;;		_SYSTEM_Initialize
 23645 ;; This function uses a non-reentrant model
 23646 ;;
 23647                           
 23648                           	psect	text89
 23649  009222                     __ptext89:
 23650                           	callstack 0
 23651  009222                     _WWDT_Initialize:
 23652                           	callstack 25
 23653                           
 23654                           ; BSR set to: 14
 23655                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 23656                           
 23657                           ; BSR set to: 14
 23658                           ;incstack = 0
 23659  009222  0E16               	movlw	22
 23660  009224  6FD2               	movwf	210,b	;volatile
 23661                           
 23662                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 23663  009226  0E27               	movlw	39
 23664  009228  6FD3               	movwf	211,b	;volatile
 23665                           
 23666                           ; BSR set to: 14
 23667  00922A  0012               	return		;funcret
 23668  00922C                     __end_of_WWDT_Initialize:
 23669                           	callstack 0
 23670                           
 23671 ;; *************** function _TMR2_Initialize *****************
 23672 ;; Defined at:
 23673 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 23674 ;; Parameters:    Size  Location     Type
 23675 ;;		None
 23676 ;; Auto vars:     Size  Location     Type
 23677 ;;		None
 23678 ;; Return value:  Size  Location     Type
 23679 ;;                  1    wreg      void 
 23680 ;; Registers used:
 23681 ;;		wreg, status,2, status,0, cstack
 23682 ;; Tracked objects:
 23683 ;;		On entry : 3F/F
 23684 ;;		On exit  : 3F/E
 23685 ;;		Unchanged: 0/0
 23686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23691 ;;Total ram usage:        0 bytes
 23692 ;; Hardware stack levels used: 1
 23693 ;; Hardware stack levels required when called: 5
 23694 ;; This function calls:
 23695 ;;		_TMR2_SetInterruptHandler
 23696 ;; This function is called by:
 23697 ;;		_SYSTEM_Initialize
 23698 ;; This function uses a non-reentrant model
 23699 ;;
 23700                           
 23701                           	psect	text90
 23702  008C26                     __ptext90:
 23703                           	callstack 0
 23704  008C26                     _TMR2_Initialize:
 23705                           	callstack 24
 23706                           
 23707                           ; BSR set to: 15
 23708                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 23709                           
 23710                           ; BSR set to: 14
 23711                           ;incstack = 0
 23712  008C26  0E02               	movlw	2
 23713  008C28  6EBF               	movwf	191,c	;volatile
 23714                           
 23715                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 23716  008C2A  0E40               	movlw	64
 23717  008C2C  6EBE               	movwf	190,c	;volatile
 23718                           
 23719                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 23720  008C2E  0E00               	movlw	0
 23721  008C30  6EC0               	movwf	192,c	;volatile
 23722                           
 23723                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 23724  008C32  0EC7               	movlw	199
 23725  008C34  6EBC               	movwf	188,c	;volatile
 23726                           
 23727                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 23728  008C36  0E00               	movlw	0
 23729  008C38  6EBB               	movwf	187,c	;volatile
 23730                           
 23731                           ; BSR set to: 15
 23732                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 23733  008C3A  010E               	movlb	14	; () banked
 23734  008C3C  93CE               	bcf	206,1,b	;volatile
 23735                           
 23736                           ; BSR set to: 14
 23737                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 23738  008C3E  83C6               	bsf	198,1,b	;volatile
 23739                           
 23740                           ; BSR set to: 14
 23741                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 23742  008C40  0E50               	movlw	low _TMR2_DefaultInterruptHandler
 23743  008C42  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 23744  008C44  0E93               	movlw	high _TMR2_DefaultInterruptHandler
 23745  008C46  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 23746  008C48  EC16  F049         	call	_TMR2_SetInterruptHandler	;wreg free
 23747                           
 23748                           ; BSR set to: 14
 23749                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 23750  008C4C  0ED9               	movlw	217
 23751  008C4E  6EBD               	movwf	189,c	;volatile
 23752                           
 23753                           ; BSR set to: 14
 23754  008C50  0012               	return		;funcret
 23755  008C52                     __end_of_TMR2_Initialize:
 23756                           	callstack 0
 23757                           
 23758 ;; *************** function _TMR2_SetInterruptHandler *****************
 23759 ;; Defined at:
 23760 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 23761 ;; Parameters:    Size  Location     Type
 23762 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23763 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 23764 ;; Auto vars:     Size  Location     Type
 23765 ;;		None
 23766 ;; Return value:  Size  Location     Type
 23767 ;;                  1    wreg      void 
 23768 ;; Registers used:
 23769 ;;		wreg, status,2, status,0
 23770 ;; Tracked objects:
 23771 ;;		On entry : 3F/E
 23772 ;;		On exit  : 3F/E
 23773 ;;		Unchanged: 3F/0
 23774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23775 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23778 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23779 ;;Total ram usage:        2 bytes
 23780 ;; Hardware stack levels used: 1
 23781 ;; Hardware stack levels required when called: 4
 23782 ;; This function calls:
 23783 ;;		Nothing
 23784 ;; This function is called by:
 23785 ;;		_TMR2_Initialize
 23786 ;; This function uses a non-reentrant model
 23787 ;;
 23788                           
 23789                           	psect	text91
 23790  00922C                     __ptext91:
 23791                           	callstack 0
 23792  00922C                     _TMR2_SetInterruptHandler:
 23793                           	callstack 24
 23794                           
 23795                           ; BSR set to: 14
 23796                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 23797                           
 23798                           ; BSR set to: 14
 23799                           ;incstack = 0
 23800  00922C  C010  F2DD         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 23801  009230  C011  F2DE         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 23802                           
 23803                           ; BSR set to: 14
 23804  009234  0012               	return		;funcret
 23805  009236                     __end_of_TMR2_SetInterruptHandler:
 23806                           	callstack 0
 23807                           
 23808 ;; *************** function _TMR1_Initialize *****************
 23809 ;; Defined at:
 23810 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 23811 ;; Parameters:    Size  Location     Type
 23812 ;;		None
 23813 ;; Auto vars:     Size  Location     Type
 23814 ;;		None
 23815 ;; Return value:  Size  Location     Type
 23816 ;;                  1    wreg      void 
 23817 ;; Registers used:
 23818 ;;		wreg, status,2, status,0, cstack
 23819 ;; Tracked objects:
 23820 ;;		On entry : 3F/E
 23821 ;;		On exit  : 3F/E
 23822 ;;		Unchanged: 0/0
 23823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23828 ;;Total ram usage:        2 bytes
 23829 ;; Hardware stack levels used: 1
 23830 ;; Hardware stack levels required when called: 5
 23831 ;; This function calls:
 23832 ;;		_TMR1_SetInterruptHandler
 23833 ;; This function is called by:
 23834 ;;		_SYSTEM_Initialize
 23835 ;; This function uses a non-reentrant model
 23836 ;;
 23837                           
 23838                           	psect	text92
 23839  0088E8                     __ptext92:
 23840                           	callstack 0
 23841  0088E8                     _TMR1_Initialize:
 23842                           	callstack 24
 23843                           
 23844                           ; BSR set to: 14
 23845                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 23846                           
 23847                           ; BSR set to: 14
 23848                           ;incstack = 0
 23849  0088E8  0E00               	movlw	0
 23850  0088EA  6ED0               	movwf	208,c	;volatile
 23851                           
 23852                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 23853  0088EC  0E00               	movlw	0
 23854  0088EE  6ED1               	movwf	209,c	;volatile
 23855                           
 23856                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 23857  0088F0  0E01               	movlw	1
 23858  0088F2  6ED2               	movwf	210,c	;volatile
 23859                           
 23860                           ; BSR set to: 14
 23861                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 23862  0088F4  68CE               	setf	206,c	;volatile
 23863                           
 23864                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 23865  0088F6  0E38               	movlw	56
 23866  0088F8  6ECD               	movwf	205,c	;volatile
 23867                           
 23868                           ; BSR set to: 14
 23869                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 23870  0088FA  91CE               	bcf	206,0,b	;volatile
 23871                           
 23872                           ; BSR set to: 14
 23873                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 23874  0088FC  50CD               	movf	205,w,c	;volatile
 23875  0088FE  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 23876  008902  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 23877  008904  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 23878  008908  6A12               	clrf	??_TMR1_Initialize^0,c
 23879  00890A  1012               	iorwf	??_TMR1_Initialize^0,w,c
 23880  00890C  0102               	movlb	2	; () banked
 23881  00890E  6FE1               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 23882  008910  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 23883  008912  6FE2               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 23884                           
 23885                           ; BSR set to: 2
 23886                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 23887  008914  010E               	movlb	14	; () banked
 23888  008916  81C6               	bsf	198,0,b	;volatile
 23889                           
 23890                           ; BSR set to: 14
 23891                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 23892  008918  0E52               	movlw	low _TMR1_DefaultInterruptHandler
 23893  00891A  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 23894  00891C  0E93               	movlw	high _TMR1_DefaultInterruptHandler
 23895  00891E  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 23896  008920  EC1B  F049         	call	_TMR1_SetInterruptHandler	;wreg free
 23897                           
 23898                           ; BSR set to: 14
 23899                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 23900  008924  0E31               	movlw	49
 23901  008926  6ECF               	movwf	207,c	;volatile
 23902                           
 23903                           ; BSR set to: 14
 23904  008928  0012               	return		;funcret
 23905  00892A                     __end_of_TMR1_Initialize:
 23906                           	callstack 0
 23907                           
 23908 ;; *************** function _TMR1_SetInterruptHandler *****************
 23909 ;; Defined at:
 23910 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 23911 ;; Parameters:    Size  Location     Type
 23912 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23913 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 23914 ;; Auto vars:     Size  Location     Type
 23915 ;;		None
 23916 ;; Return value:  Size  Location     Type
 23917 ;;                  1    wreg      void 
 23918 ;; Registers used:
 23919 ;;		wreg, status,2, status,0
 23920 ;; Tracked objects:
 23921 ;;		On entry : 3F/E
 23922 ;;		On exit  : 3F/E
 23923 ;;		Unchanged: 3F/0
 23924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23929 ;;Total ram usage:        2 bytes
 23930 ;; Hardware stack levels used: 1
 23931 ;; Hardware stack levels required when called: 4
 23932 ;; This function calls:
 23933 ;;		Nothing
 23934 ;; This function is called by:
 23935 ;;		_TMR1_Initialize
 23936 ;; This function uses a non-reentrant model
 23937 ;;
 23938                           
 23939                           	psect	text93
 23940  009236                     __ptext93:
 23941                           	callstack 0
 23942  009236                     _TMR1_SetInterruptHandler:
 23943                           	callstack 24
 23944                           
 23945                           ; BSR set to: 14
 23946                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 23947                           
 23948                           ; BSR set to: 14
 23949                           ;incstack = 0
 23950  009236  C010  F2DF         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 23951  00923A  C011  F2E0         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 23952                           
 23953                           ; BSR set to: 14
 23954  00923E  0012               	return		;funcret
 23955  009240                     __end_of_TMR1_SetInterruptHandler:
 23956                           	callstack 0
 23957                           
 23958 ;; *************** function _TMR0_Initialize *****************
 23959 ;; Defined at:
 23960 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 23961 ;; Parameters:    Size  Location     Type
 23962 ;;		None
 23963 ;; Auto vars:     Size  Location     Type
 23964 ;;		None
 23965 ;; Return value:  Size  Location     Type
 23966 ;;                  1    wreg      void 
 23967 ;; Registers used:
 23968 ;;		wreg, status,2, status,0, cstack
 23969 ;; Tracked objects:
 23970 ;;		On entry : 3F/E
 23971 ;;		On exit  : 3F/E
 23972 ;;		Unchanged: 0/0
 23973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23978 ;;Total ram usage:        0 bytes
 23979 ;; Hardware stack levels used: 1
 23980 ;; Hardware stack levels required when called: 5
 23981 ;; This function calls:
 23982 ;;		_TMR0_SetInterruptHandler
 23983 ;; This function is called by:
 23984 ;;		_SYSTEM_Initialize
 23985 ;; This function uses a non-reentrant model
 23986 ;;
 23987                           
 23988                           	psect	text94
 23989  008F5E                     __ptext94:
 23990                           	callstack 0
 23991  008F5E                     _TMR0_Initialize:
 23992                           	callstack 24
 23993                           
 23994                           ; BSR set to: 14
 23995                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 23996                           
 23997                           ; BSR set to: 14
 23998                           ;incstack = 0
 23999  008F5E  0E41               	movlw	65
 24000  008F60  6ED6               	movwf	214,c	;volatile
 24001                           
 24002                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 24003  008F62  0E84               	movlw	132
 24004  008F64  6ED4               	movwf	212,c	;volatile
 24005                           
 24006                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 24007  008F66  0E00               	movlw	0
 24008  008F68  6ED3               	movwf	211,c	;volatile
 24009                           
 24010                           ; BSR set to: 14
 24011                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 24012  008F6A  9BCA               	bcf	202,5,b	;volatile
 24013                           
 24014                           ; BSR set to: 14
 24015                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 24016  008F6C  8BC2               	bsf	194,5,b	;volatile
 24017                           
 24018                           ; BSR set to: 14
 24019                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 24020  008F6E  0E54               	movlw	low _TMR0_DefaultInterruptHandler
 24021  008F70  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 24022  008F72  0E93               	movlw	high _TMR0_DefaultInterruptHandler
 24023  008F74  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 24024  008F76  EC20  F049         	call	_TMR0_SetInterruptHandler	;wreg free
 24025                           
 24026                           ; BSR set to: 14
 24027                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 24028  008F7A  0E87               	movlw	135
 24029  008F7C  6ED5               	movwf	213,c	;volatile
 24030                           
 24031                           ; BSR set to: 14
 24032  008F7E  0012               	return		;funcret
 24033  008F80                     __end_of_TMR0_Initialize:
 24034                           	callstack 0
 24035                           
 24036 ;; *************** function _TMR0_SetInterruptHandler *****************
 24037 ;; Defined at:
 24038 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 24039 ;; Parameters:    Size  Location     Type
 24040 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 24041 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 24042 ;; Auto vars:     Size  Location     Type
 24043 ;;		None
 24044 ;; Return value:  Size  Location     Type
 24045 ;;                  1    wreg      void 
 24046 ;; Registers used:
 24047 ;;		wreg, status,2, status,0
 24048 ;; Tracked objects:
 24049 ;;		On entry : 3F/E
 24050 ;;		On exit  : 3F/E
 24051 ;;		Unchanged: 3F/0
 24052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24057 ;;Total ram usage:        2 bytes
 24058 ;; Hardware stack levels used: 1
 24059 ;; Hardware stack levels required when called: 4
 24060 ;; This function calls:
 24061 ;;		Nothing
 24062 ;; This function is called by:
 24063 ;;		_TMR0_Initialize
 24064 ;; This function uses a non-reentrant model
 24065 ;;
 24066                           
 24067                           	psect	text95
 24068  009240                     __ptext95:
 24069                           	callstack 0
 24070  009240                     _TMR0_SetInterruptHandler:
 24071                           	callstack 24
 24072                           
 24073                           ; BSR set to: 14
 24074                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 24075                           
 24076                           ; BSR set to: 14
 24077                           ;incstack = 0
 24078  009240  C010  F2E3         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 24079  009244  C011  F2E4         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 24080                           
 24081                           ; BSR set to: 14
 24082  009248  0012               	return		;funcret
 24083  00924A                     __end_of_TMR0_SetInterruptHandler:
 24084                           	callstack 0
 24085                           
 24086 ;; *************** function _PMD_Initialize *****************
 24087 ;; Defined at:
 24088 ;;		line 79 in file "mcc_generated_files/mcc.c"
 24089 ;; Parameters:    Size  Location     Type
 24090 ;;		None
 24091 ;; Auto vars:     Size  Location     Type
 24092 ;;		None
 24093 ;; Return value:  Size  Location     Type
 24094 ;;                  1    wreg      void 
 24095 ;; Registers used:
 24096 ;;		wreg, status,2
 24097 ;; Tracked objects:
 24098 ;;		On entry : 3F/0
 24099 ;;		On exit  : 3F/E
 24100 ;;		Unchanged: 0/0
 24101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24106 ;;Total ram usage:        0 bytes
 24107 ;; Hardware stack levels used: 1
 24108 ;; Hardware stack levels required when called: 4
 24109 ;; This function calls:
 24110 ;;		Nothing
 24111 ;; This function is called by:
 24112 ;;		_SYSTEM_Initialize
 24113 ;; This function uses a non-reentrant model
 24114 ;;
 24115                           
 24116                           	psect	text96
 24117  008FFC                     __ptext96:
 24118                           	callstack 0
 24119  008FFC                     _PMD_Initialize:
 24120                           	callstack 25
 24121                           
 24122                           ; BSR set to: 0
 24123                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 24124                           
 24125                           ; BSR set to: 14
 24126                           ;incstack = 0
 24127  008FFC  0E00               	movlw	0
 24128  008FFE  010E               	movlb	14	; () banked
 24129  009000  6FE1               	movwf	225,b	;volatile
 24130                           
 24131                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 24132  009002  0E00               	movlw	0
 24133  009004  6FE2               	movwf	226,b	;volatile
 24134                           
 24135                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 24136  009006  0E00               	movlw	0
 24137  009008  6FE3               	movwf	227,b	;volatile
 24138                           
 24139                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 24140  00900A  0E00               	movlw	0
 24141  00900C  6FE4               	movwf	228,b	;volatile
 24142                           
 24143                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 24144  00900E  0E00               	movlw	0
 24145  009010  6FE5               	movwf	229,b	;volatile
 24146                           
 24147                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 24148  009012  0E00               	movlw	0
 24149  009014  6FE6               	movwf	230,b	;volatile
 24150                           
 24151                           ; BSR set to: 14
 24152  009016  0012               	return		;funcret
 24153  009018                     __end_of_PMD_Initialize:
 24154                           	callstack 0
 24155                           
 24156 ;; *************** function _PIN_MANAGER_Initialize *****************
 24157 ;; Defined at:
 24158 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 24159 ;; Parameters:    Size  Location     Type
 24160 ;;		None
 24161 ;; Auto vars:     Size  Location     Type
 24162 ;;		None
 24163 ;; Return value:  Size  Location     Type
 24164 ;;                  1    wreg      void 
 24165 ;; Registers used:
 24166 ;;		wreg, status,2
 24167 ;; Tracked objects:
 24168 ;;		On entry : 3F/E
 24169 ;;		On exit  : 3F/E
 24170 ;;		Unchanged: 0/0
 24171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24176 ;;Total ram usage:        0 bytes
 24177 ;; Hardware stack levels used: 1
 24178 ;; Hardware stack levels required when called: 4
 24179 ;; This function calls:
 24180 ;;		Nothing
 24181 ;; This function is called by:
 24182 ;;		_SYSTEM_Initialize
 24183 ;; This function uses a non-reentrant model
 24184 ;;
 24185                           
 24186                           	psect	text97
 24187  007562                     __ptext97:
 24188                           	callstack 0
 24189  007562                     _PIN_MANAGER_Initialize:
 24190                           	callstack 25
 24191                           
 24192                           ; BSR set to: 14
 24193                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 24194                           
 24195                           ; BSR set to: 14
 24196                           ;incstack = 0
 24197  007562  0E00               	movlw	0
 24198  007564  6E87               	movwf	135,c	;volatile
 24199                           
 24200                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 24201  007566  0E00               	movlw	0
 24202  007568  6E86               	movwf	134,c	;volatile
 24203                           
 24204                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 24205  00756A  0E00               	movlw	0
 24206  00756C  6E83               	movwf	131,c	;volatile
 24207                           
 24208                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 24209  00756E  0E00               	movlw	0
 24210  007570  6E84               	movwf	132,c	;volatile
 24211                           
 24212                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 24213  007572  0E00               	movlw	0
 24214  007574  6E85               	movwf	133,c	;volatile
 24215                           
 24216                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 24217  007576  0E00               	movlw	0
 24218  007578  6E8C               	movwf	140,c	;volatile
 24219                           
 24220                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 24221  00757A  0E7F               	movlw	127
 24222  00757C  6E88               	movwf	136,c	;volatile
 24223                           
 24224                           ; BSR set to: 14
 24225                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 24226  00757E  6889               	setf	137,c	;volatile
 24227                           
 24228                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 24229  007580  0E58               	movlw	88
 24230  007582  6E8A               	movwf	138,c	;volatile
 24231                           
 24232                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 24233  007584  0E00               	movlw	0
 24234  007586  6E8B               	movwf	139,c	;volatile
 24235                           
 24236                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 24237  007588  0E00               	movlw	0
 24238  00758A  010F               	movlb	15	; () banked
 24239  00758C  6F26               	movwf	38,b	;volatile
 24240                           
 24241                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 24242  00758E  0E00               	movlw	0
 24243  007590  6F21               	movwf	33,b	;volatile
 24244                           
 24245                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 24246  007592  0E00               	movlw	0
 24247  007594  6F19               	movwf	25,b	;volatile
 24248                           
 24249                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 24250  007596  0E00               	movlw	0
 24251  007598  6F2E               	movwf	46,b	;volatile
 24252                           
 24253                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 24254  00759A  0E01               	movlw	1
 24255  00759C  6F11               	movwf	17,b	;volatile
 24256                           
 24257                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 24258  00759E  0E00               	movlw	0
 24259  0075A0  6F25               	movwf	37,b	;volatile
 24260                           
 24261                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 24262  0075A2  0E00               	movlw	0
 24263  0075A4  6F2D               	movwf	45,b	;volatile
 24264                           
 24265                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 24266  0075A6  0EF7               	movlw	247
 24267  0075A8  6F18               	movwf	24,b	;volatile
 24268                           
 24269                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 24270  0075AA  0E00               	movlw	0
 24271  0075AC  6F10               	movwf	16,b	;volatile
 24272                           
 24273                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 24274  0075AE  0E00               	movlw	0
 24275  0075B0  6F20               	movwf	32,b	;volatile
 24276                           
 24277                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 24278  0075B2  0E00               	movlw	0
 24279  0075B4  6F2C               	movwf	44,b	;volatile
 24280                           
 24281                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 24282  0075B6  0E00               	movlw	0
 24283  0075B8  6F0F               	movwf	15,b	;volatile
 24284                           
 24285                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 24286  0075BA  0E00               	movlw	0
 24287  0075BC  6F17               	movwf	23,b	;volatile
 24288                           
 24289                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 24290  0075BE  0E00               	movlw	0
 24291  0075C0  6F1F               	movwf	31,b	;volatile
 24292                           
 24293                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 24294  0075C2  0E00               	movlw	0
 24295  0075C4  6F24               	movwf	36,b	;volatile
 24296                           
 24297                           ; BSR set to: 15
 24298                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 24299  0075C6  690E               	setf	14,b	;volatile
 24300                           
 24301                           ; BSR set to: 15
 24302                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 24303  0075C8  6916               	setf	22,b	;volatile
 24304                           
 24305                           ; BSR set to: 15
 24306                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 24307  0075CA  691E               	setf	30,b	;volatile
 24308                           
 24309                           ; BSR set to: 15
 24310                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 24311  0075CC  6923               	setf	35,b	;volatile
 24312                           
 24313                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 24314  0075CE  0E07               	movlw	7
 24315  0075D0  6F2B               	movwf	43,b	;volatile
 24316                           
 24317                           ; BSR set to: 15
 24318                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 24319  0075D2  690D               	setf	13,b	;volatile
 24320                           
 24321                           ; BSR set to: 15
 24322                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 24323  0075D4  6915               	setf	21,b	;volatile
 24324                           
 24325                           ; BSR set to: 15
 24326                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 24327  0075D6  691D               	setf	29,b	;volatile
 24328                           
 24329                           ; BSR set to: 15
 24330                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 24331  0075D8  6922               	setf	34,b	;volatile
 24332                           
 24333                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 24334  0075DA  0E0F               	movlw	15
 24335  0075DC  6F2A               	movwf	42,b	;volatile
 24336                           
 24337                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 24338  0075DE  0E13               	movlw	19
 24339  0075E0  010E               	movlb	14	; () banked
 24340  0075E2  6FB7               	movwf	183,b	;volatile
 24341                           
 24342                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 24343  0075E4  0E16               	movlw	22
 24344  0075E6  6FB5               	movwf	181,b	;volatile
 24345                           
 24346                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 24347  0075E8  0E0F               	movlw	15
 24348  0075EA  6FFA               	movwf	250,b	;volatile
 24349                           
 24350                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 24351  0075EC  0E10               	movlw	16
 24352  0075EE  6FFB               	movwf	251,b	;volatile
 24353                           
 24354                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 24355  0075F0  0E09               	movlw	9
 24356  0075F2  6FFE               	movwf	254,b	;volatile
 24357                           
 24358                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 24359  0075F4  0E14               	movlw	20
 24360  0075F6  6FB8               	movwf	184,b	;volatile
 24361                           
 24362                           ; BSR set to: 14
 24363  0075F8  0012               	return		;funcret
 24364  0075FA                     __end_of_PIN_MANAGER_Initialize:
 24365                           	callstack 0
 24366                           
 24367 ;; *************** function _OSCILLATOR_Initialize *****************
 24368 ;; Defined at:
 24369 ;;		line 65 in file "mcc_generated_files/mcc.c"
 24370 ;; Parameters:    Size  Location     Type
 24371 ;;		None
 24372 ;; Auto vars:     Size  Location     Type
 24373 ;;		None
 24374 ;; Return value:  Size  Location     Type
 24375 ;;                  1    wreg      void 
 24376 ;; Registers used:
 24377 ;;		wreg, status,2
 24378 ;; Tracked objects:
 24379 ;;		On entry : 3F/E
 24380 ;;		On exit  : 3F/E
 24381 ;;		Unchanged: 0/0
 24382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24387 ;;Total ram usage:        0 bytes
 24388 ;; Hardware stack levels used: 1
 24389 ;; Hardware stack levels required when called: 4
 24390 ;; This function calls:
 24391 ;;		Nothing
 24392 ;; This function is called by:
 24393 ;;		_SYSTEM_Initialize
 24394 ;; This function uses a non-reentrant model
 24395 ;;
 24396                           
 24397                           	psect	text98
 24398  009146                     __ptext98:
 24399                           	callstack 0
 24400  009146                     _OSCILLATOR_Initialize:
 24401                           	callstack 25
 24402                           
 24403                           ; BSR set to: 14
 24404                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 24405                           
 24406                           ; BSR set to: 14
 24407                           ;incstack = 0
 24408  009146  0E60               	movlw	96
 24409  009148  6FD8               	movwf	216,b	;volatile
 24410                           
 24411                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 24412  00914A  0E00               	movlw	0
 24413  00914C  6FDA               	movwf	218,b	;volatile
 24414                           
 24415                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 24416  00914E  0E00               	movlw	0
 24417  009150  6FDC               	movwf	220,b	;volatile
 24418                           
 24419                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 24420  009152  0E08               	movlw	8
 24421  009154  6FDE               	movwf	222,b	;volatile
 24422                           
 24423                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 24424  009156  0E00               	movlw	0
 24425  009158  6FDD               	movwf	221,b	;volatile
 24426                           
 24427                           ; BSR set to: 14
 24428  00915A  0012               	return		;funcret
 24429  00915C                     __end_of_OSCILLATOR_Initialize:
 24430                           	callstack 0
 24431                           
 24432 ;; *************** function _INTERRUPT_Initialize *****************
 24433 ;; Defined at:
 24434 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24435 ;; Parameters:    Size  Location     Type
 24436 ;;		None
 24437 ;; Auto vars:     Size  Location     Type
 24438 ;;		None
 24439 ;; Return value:  Size  Location     Type
 24440 ;;                  1    wreg      void 
 24441 ;; Registers used:
 24442 ;;		None
 24443 ;; Tracked objects:
 24444 ;;		On entry : 3F/0
 24445 ;;		On exit  : 3F/0
 24446 ;;		Unchanged: 3F/0
 24447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24452 ;;Total ram usage:        0 bytes
 24453 ;; Hardware stack levels used: 1
 24454 ;; Hardware stack levels required when called: 4
 24455 ;; This function calls:
 24456 ;;		Nothing
 24457 ;; This function is called by:
 24458 ;;		_SYSTEM_Initialize
 24459 ;; This function uses a non-reentrant model
 24460 ;;
 24461                           
 24462                           	psect	text99
 24463  009324                     __ptext99:
 24464                           	callstack 0
 24465  009324                     _INTERRUPT_Initialize:
 24466                           	callstack 25
 24467                           
 24468                           ; BSR set to: 0
 24469                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 24470                           
 24471                           ; BSR set to: 14
 24472                           ;incstack = 0
 24473  009324  9AF2               	bcf	242,5,c	;volatile
 24474                           
 24475                           ; BSR set to: 0
 24476  009326  0012               	return		;funcret
 24477  009328                     __end_of_INTERRUPT_Initialize:
 24478                           	callstack 0
 24479                           
 24480 ;; *************** function _I2C1_Initialize *****************
 24481 ;; Defined at:
 24482 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 24483 ;; Parameters:    Size  Location     Type
 24484 ;;		None
 24485 ;; Auto vars:     Size  Location     Type
 24486 ;;		None
 24487 ;; Return value:  Size  Location     Type
 24488 ;;                  1    wreg      void 
 24489 ;; Registers used:
 24490 ;;		wreg, status,2
 24491 ;; Tracked objects:
 24492 ;;		On entry : 3F/E
 24493 ;;		On exit  : 3F/E
 24494 ;;		Unchanged: 3F/0
 24495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24500 ;;Total ram usage:        0 bytes
 24501 ;; Hardware stack levels used: 1
 24502 ;; Hardware stack levels required when called: 4
 24503 ;; This function calls:
 24504 ;;		Nothing
 24505 ;; This function is called by:
 24506 ;;		_SYSTEM_Initialize
 24507 ;; This function uses a non-reentrant model
 24508 ;;
 24509                           
 24510                           	psect	text100
 24511  00919A                     __ptext100:
 24512                           	callstack 0
 24513  00919A                     _I2C1_Initialize:
 24514                           	callstack 25
 24515                           
 24516                           ; BSR set to: 14
 24517                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 24518                           
 24519                           ; BSR set to: 0
 24520                           ;incstack = 0
 24521  00919A  0E80               	movlw	128
 24522  00919C  6E95               	movwf	149,c	;volatile
 24523                           
 24524                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 24525  00919E  0E08               	movlw	8
 24526  0091A0  6E96               	movwf	150,c	;volatile
 24527                           
 24528                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 24529  0091A2  0E00               	movlw	0
 24530  0091A4  6E97               	movwf	151,c	;volatile
 24531                           
 24532                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 24533  0091A6  0E9F               	movlw	159
 24534  0091A8  6E93               	movwf	147,c	;volatile
 24535                           
 24536                           ; BSR set to: 14
 24537                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 24538  0091AA  9A96               	bcf	150,5,c	;volatile
 24539                           
 24540                           ; BSR set to: 14
 24541  0091AC  0012               	return		;funcret
 24542  0091AE                     __end_of_I2C1_Initialize:
 24543                           	callstack 0
 24544                           
 24545 ;; *************** function _EUSART1_Initialize *****************
 24546 ;; Defined at:
 24547 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 24548 ;; Parameters:    Size  Location     Type
 24549 ;;		None
 24550 ;; Auto vars:     Size  Location     Type
 24551 ;;		None
 24552 ;; Return value:  Size  Location     Type
 24553 ;;                  1    wreg      void 
 24554 ;; Registers used:
 24555 ;;		wreg, status,2, status,0, cstack
 24556 ;; Tracked objects:
 24557 ;;		On entry : 3F/E
 24558 ;;		On exit  : 3F/E
 24559 ;;		Unchanged: 0/0
 24560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24565 ;;Total ram usage:        0 bytes
 24566 ;; Hardware stack levels used: 1
 24567 ;; Hardware stack levels required when called: 5
 24568 ;; This function calls:
 24569 ;;		_EUSART1_SetErrorHandler
 24570 ;;		_EUSART1_SetFramingErrorHandler
 24571 ;;		_EUSART1_SetOverrunErrorHandler
 24572 ;;		_EUSART1_SetRxInterruptHandler
 24573 ;;		_EUSART1_SetTxInterruptHandler
 24574 ;; This function is called by:
 24575 ;;		_SYSTEM_Initialize
 24576 ;; This function uses a non-reentrant model
 24577 ;;
 24578                           
 24579                           	psect	text101
 24580  007BDA                     __ptext101:
 24581                           	callstack 0
 24582  007BDA                     _EUSART1_Initialize:
 24583                           	callstack 24
 24584                           
 24585                           ; BSR set to: 14
 24586                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 24587                           
 24588                           ; BSR set to: 14
 24589                           ;incstack = 0
 24590  007BDA  9BC5               	bcf	197,5,b	;volatile
 24591                           
 24592                           ; BSR set to: 14
 24593                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 24594  007BDC  0EC8               	movlw	low _EUSART1_Receive_ISR
 24595  007BDE  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 24596  007BE0  0E74               	movlw	high _EUSART1_Receive_ISR
 24597  007BE2  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 24598  007BE4  EC2A  F049         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 24599                           
 24600                           ; BSR set to: 14
 24601                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 24602  007BE8  99C5               	bcf	197,4,b	;volatile
 24603                           
 24604                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 24605  007BEA  0E3E               	movlw	low _EUSART1_Transmit_ISR
 24606  007BEC  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 24607  007BEE  0E8B               	movlw	high _EUSART1_Transmit_ISR
 24608  007BF0  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 24609  007BF2  EC25  F049         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 24610                           
 24611                           ; BSR set to: 14
 24612                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 24613  007BF6  0E08               	movlw	8
 24614  007BF8  6E9F               	movwf	159,c	;volatile
 24615                           
 24616                           ; BSR set to: 14
 24617                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 24618  007BFA  0E90               	movlw	144
 24619  007BFC  6E9D               	movwf	157,c	;volatile
 24620                           
 24621                           ; BSR set to: 14
 24622                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 24623  007BFE  0E24               	movlw	36
 24624  007C00  6E9E               	movwf	158,c	;volatile
 24625                           
 24626                           ; BSR set to: 14
 24627                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 24628  007C02  0E82               	movlw	130
 24629  007C04  6E9B               	movwf	155,c	;volatile
 24630                           
 24631                           ; BSR set to: 14
 24632                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 24633  007C06  0E06               	movlw	6
 24634  007C08  6E9C               	movwf	156,c	;volatile
 24635                           
 24636                           ; BSR set to: 14
 24637                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 24638  007C0A  0E56               	movlw	low _EUSART1_DefaultFramingErrorHandler
 24639  007C0C  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 24640  007C0E  0E93               	movlw	high _EUSART1_DefaultFramingErrorHandler
 24641  007C10  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 24642  007C12  EC34  F049         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 24643                           
 24644                           ; BSR set to: 14
 24645                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 24646  007C16  0E0E               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 24647  007C18  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 24648  007C1A  0E93               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 24649  007C1C  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 24650  007C1E  EC2F  F049         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 24651                           
 24652                           ; BSR set to: 14
 24653                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 24654  007C22  0E14               	movlw	low _EUSART1_DefaultErrorHandler
 24655  007C24  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 24656  007C26  0E93               	movlw	high _EUSART1_DefaultErrorHandler
 24657  007C28  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 24658  007C2A  EC39  F049         	call	_EUSART1_SetErrorHandler	;wreg free
 24659                           
 24660                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 24661  007C2E  0E00               	movlw	0
 24662  007C30  0101               	movlb	1	; () banked
 24663  007C32  6F99               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 24664                           
 24665                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 24666  007C34  0E00               	movlw	0
 24667  007C36  0100               	movlb	0	; () banked
 24668  007C38  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 24669                           
 24670                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 24671  007C3A  0E00               	movlw	0
 24672  007C3C  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 24673                           
 24674                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 24675  007C3E  0E08               	movlw	8
 24676  007C40  0101               	movlb	1	; () banked
 24677  007C42  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 24678                           
 24679                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 24680  007C44  0E00               	movlw	0
 24681  007C46  0100               	movlb	0	; () banked
 24682  007C48  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 24683                           
 24684                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 24685  007C4A  0E00               	movlw	0
 24686  007C4C  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 24687                           
 24688                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 24689  007C4E  0E00               	movlw	0
 24690  007C50  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 24691                           
 24692                           ; BSR set to: 0
 24693                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 24694  007C52  010E               	movlb	14	; () banked
 24695  007C54  8BC5               	bsf	197,5,b	;volatile
 24696                           
 24697                           ; BSR set to: 14
 24698  007C56  0012               	return		;funcret
 24699  007C58                     __end_of_EUSART1_Initialize:
 24700                           	callstack 0
 24701                           
 24702 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 24703 ;; Defined at:
 24704 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 24705 ;; Parameters:    Size  Location     Type
 24706 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24707 ;;		 -> EUSART1_Transmit_ISR(1), 
 24708 ;; Auto vars:     Size  Location     Type
 24709 ;;		None
 24710 ;; Return value:  Size  Location     Type
 24711 ;;                  1    wreg      void 
 24712 ;; Registers used:
 24713 ;;		wreg, status,2, status,0
 24714 ;; Tracked objects:
 24715 ;;		On entry : 3F/E
 24716 ;;		On exit  : 3F/E
 24717 ;;		Unchanged: 3F/0
 24718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24722 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24723 ;;Total ram usage:        2 bytes
 24724 ;; Hardware stack levels used: 1
 24725 ;; Hardware stack levels required when called: 4
 24726 ;; This function calls:
 24727 ;;		Nothing
 24728 ;; This function is called by:
 24729 ;;		_EUSART1_Initialize
 24730 ;; This function uses a non-reentrant model
 24731 ;;
 24732                           
 24733                           	psect	text102
 24734  00924A                     __ptext102:
 24735                           	callstack 0
 24736  00924A                     _EUSART1_SetTxInterruptHandler:
 24737                           	callstack 24
 24738                           
 24739                           ; BSR set to: 14
 24740                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 24741                           
 24742                           ; BSR set to: 14
 24743                           ;incstack = 0
 24744  00924A  C010  F2ED         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 24745  00924E  C011  F2EE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 24746                           
 24747                           ; BSR set to: 14
 24748  009252  0012               	return		;funcret
 24749  009254                     __end_of_EUSART1_SetTxInterruptHandler:
 24750                           	callstack 0
 24751                           
 24752 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 24753 ;; Defined at:
 24754 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 24755 ;; Parameters:    Size  Location     Type
 24756 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24757 ;;		 -> EUSART1_Receive_ISR(1), 
 24758 ;; Auto vars:     Size  Location     Type
 24759 ;;		None
 24760 ;; Return value:  Size  Location     Type
 24761 ;;                  1    wreg      void 
 24762 ;; Registers used:
 24763 ;;		wreg, status,2, status,0
 24764 ;; Tracked objects:
 24765 ;;		On entry : 3F/E
 24766 ;;		On exit  : 3F/E
 24767 ;;		Unchanged: 3F/0
 24768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24772 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24773 ;;Total ram usage:        2 bytes
 24774 ;; Hardware stack levels used: 1
 24775 ;; Hardware stack levels required when called: 4
 24776 ;; This function calls:
 24777 ;;		Nothing
 24778 ;; This function is called by:
 24779 ;;		_EUSART1_Initialize
 24780 ;; This function uses a non-reentrant model
 24781 ;;
 24782                           
 24783                           	psect	text103
 24784  009254                     __ptext103:
 24785                           	callstack 0
 24786  009254                     _EUSART1_SetRxInterruptHandler:
 24787                           	callstack 24
 24788                           
 24789                           ; BSR set to: 14
 24790                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 24791                           
 24792                           ; BSR set to: 14
 24793                           ;incstack = 0
 24794  009254  C010  F2EB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 24795  009258  C011  F2EC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 24796                           
 24797                           ; BSR set to: 14
 24798  00925C  0012               	return		;funcret
 24799  00925E                     __end_of_EUSART1_SetRxInterruptHandler:
 24800                           	callstack 0
 24801                           
 24802 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 24803 ;; Defined at:
 24804 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 24805 ;; Parameters:    Size  Location     Type
 24806 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24807 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 24808 ;; Auto vars:     Size  Location     Type
 24809 ;;		None
 24810 ;; Return value:  Size  Location     Type
 24811 ;;                  1    wreg      void 
 24812 ;; Registers used:
 24813 ;;		wreg, status,2, status,0
 24814 ;; Tracked objects:
 24815 ;;		On entry : 3F/E
 24816 ;;		On exit  : 3F/E
 24817 ;;		Unchanged: 3F/0
 24818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24823 ;;Total ram usage:        2 bytes
 24824 ;; Hardware stack levels used: 1
 24825 ;; Hardware stack levels required when called: 4
 24826 ;; This function calls:
 24827 ;;		Nothing
 24828 ;; This function is called by:
 24829 ;;		_EUSART1_Initialize
 24830 ;; This function uses a non-reentrant model
 24831 ;;
 24832                           
 24833                           	psect	text104
 24834  00925E                     __ptext104:
 24835                           	callstack 0
 24836  00925E                     _EUSART1_SetOverrunErrorHandler:
 24837                           	callstack 24
 24838                           
 24839                           ; BSR set to: 14
 24840                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 24841                           
 24842                           ; BSR set to: 14
 24843                           ;incstack = 0
 24844  00925E  C010  F2E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 24845  009262  C011  F2E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 24846                           
 24847                           ; BSR set to: 14
 24848  009266  0012               	return		;funcret
 24849  009268                     __end_of_EUSART1_SetOverrunErrorHandler:
 24850                           	callstack 0
 24851                           
 24852 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 24853 ;; Defined at:
 24854 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 24855 ;; Parameters:    Size  Location     Type
 24856 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24857 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 24858 ;; Auto vars:     Size  Location     Type
 24859 ;;		None
 24860 ;; Return value:  Size  Location     Type
 24861 ;;                  1    wreg      void 
 24862 ;; Registers used:
 24863 ;;		wreg, status,2, status,0
 24864 ;; Tracked objects:
 24865 ;;		On entry : 3F/E
 24866 ;;		On exit  : 3F/E
 24867 ;;		Unchanged: 3F/0
 24868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24872 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24873 ;;Total ram usage:        2 bytes
 24874 ;; Hardware stack levels used: 1
 24875 ;; Hardware stack levels required when called: 4
 24876 ;; This function calls:
 24877 ;;		Nothing
 24878 ;; This function is called by:
 24879 ;;		_EUSART1_Initialize
 24880 ;; This function uses a non-reentrant model
 24881 ;;
 24882                           
 24883                           	psect	text105
 24884  009268                     __ptext105:
 24885                           	callstack 0
 24886  009268                     _EUSART1_SetFramingErrorHandler:
 24887                           	callstack 24
 24888                           
 24889                           ; BSR set to: 14
 24890                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 24891                           
 24892                           ; BSR set to: 14
 24893                           ;incstack = 0
 24894  009268  C010  F2E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 24895  00926C  C011  F2EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 24896                           
 24897                           ; BSR set to: 14
 24898  009270  0012               	return		;funcret
 24899  009272                     __end_of_EUSART1_SetFramingErrorHandler:
 24900                           	callstack 0
 24901                           
 24902 ;; *************** function _EUSART1_SetErrorHandler *****************
 24903 ;; Defined at:
 24904 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 24905 ;; Parameters:    Size  Location     Type
 24906 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24907 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 24908 ;; Auto vars:     Size  Location     Type
 24909 ;;		None
 24910 ;; Return value:  Size  Location     Type
 24911 ;;                  1    wreg      void 
 24912 ;; Registers used:
 24913 ;;		wreg, status,2, status,0
 24914 ;; Tracked objects:
 24915 ;;		On entry : 3F/E
 24916 ;;		On exit  : 3F/E
 24917 ;;		Unchanged: 3F/0
 24918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24922 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24923 ;;Total ram usage:        2 bytes
 24924 ;; Hardware stack levels used: 1
 24925 ;; Hardware stack levels required when called: 4
 24926 ;; This function calls:
 24927 ;;		Nothing
 24928 ;; This function is called by:
 24929 ;;		_EUSART1_Initialize
 24930 ;; This function uses a non-reentrant model
 24931 ;;
 24932                           
 24933                           	psect	text106
 24934  009272                     __ptext106:
 24935                           	callstack 0
 24936  009272                     _EUSART1_SetErrorHandler:
 24937                           	callstack 24
 24938                           
 24939                           ; BSR set to: 14
 24940                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 24941                           
 24942                           ; BSR set to: 14
 24943                           ;incstack = 0
 24944  009272  C010  F2E5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 24945  009276  C011  F2E6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 24946                           
 24947                           ; BSR set to: 14
 24948  00927A  0012               	return		;funcret
 24949  00927C                     __end_of_EUSART1_SetErrorHandler:
 24950                           	callstack 0
 24951                           
 24952 ;; *************** function _ADCC_Initialize *****************
 24953 ;; Defined at:
 24954 ;;		line 62 in file "mcc_generated_files/adcc.c"
 24955 ;; Parameters:    Size  Location     Type
 24956 ;;		None
 24957 ;; Auto vars:     Size  Location     Type
 24958 ;;		None
 24959 ;; Return value:  Size  Location     Type
 24960 ;;                  1    wreg      void 
 24961 ;; Registers used:
 24962 ;;		wreg, status,2
 24963 ;; Tracked objects:
 24964 ;;		On entry : 3F/E
 24965 ;;		On exit  : 3F/F
 24966 ;;		Unchanged: 0/0
 24967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24972 ;;Total ram usage:        0 bytes
 24973 ;; Hardware stack levels used: 1
 24974 ;; Hardware stack levels required when called: 4
 24975 ;; This function calls:
 24976 ;;		Nothing
 24977 ;; This function is called by:
 24978 ;;		_SYSTEM_Initialize
 24979 ;; This function uses a non-reentrant model
 24980 ;;
 24981                           
 24982                           	psect	text107
 24983  00869C                     __ptext107:
 24984                           	callstack 0
 24985  00869C                     _ADCC_Initialize:
 24986                           	callstack 25
 24987                           
 24988                           ; BSR set to: 14
 24989                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 24990                           
 24991                           ; BSR set to: 14
 24992                           ;incstack = 0
 24993  00869C  0E00               	movlw	0
 24994  00869E  6E6A               	movwf	106,c	;volatile
 24995                           
 24996                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 24997  0086A0  0E00               	movlw	0
 24998  0086A2  6E6B               	movwf	107,c	;volatile
 24999                           
 25000                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 25001  0086A4  0E00               	movlw	0
 25002  0086A6  6E6C               	movwf	108,c	;volatile
 25003                           
 25004                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 25005  0086A8  0E00               	movlw	0
 25006  0086AA  6E6D               	movwf	109,c	;volatile
 25007                           
 25008                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 25009  0086AC  0E00               	movlw	0
 25010  0086AE  6E68               	movwf	104,c	;volatile
 25011                           
 25012                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 25013  0086B0  0E00               	movlw	0
 25014  0086B2  6E69               	movwf	105,c	;volatile
 25015                           
 25016                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 25017  0086B4  0E00               	movlw	0
 25018  0086B6  6E66               	movwf	102,c	;volatile
 25019                           
 25020                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 25021  0086B8  0E00               	movlw	0
 25022  0086BA  010F               	movlb	15	; () banked
 25023  0086BC  6F5F               	movwf	95,b	;volatile
 25024                           
 25025                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 25026  0086BE  0E00               	movlw	0
 25027  0086C0  6F5D               	movwf	93,b	;volatile
 25028                           
 25029                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 25030  0086C2  0E00               	movlw	0
 25031  0086C4  6F5E               	movwf	94,b	;volatile
 25032                           
 25033                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 25034  0086C6  0E00               	movlw	0
 25035  0086C8  6F59               	movwf	89,b	;volatile
 25036                           
 25037                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 25038  0086CA  0E00               	movlw	0
 25039  0086CC  6F5A               	movwf	90,b	;volatile
 25040                           
 25041                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 25042  0086CE  0E00               	movlw	0
 25043  0086D0  6F5B               	movwf	91,b	;volatile
 25044                           
 25045                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 25046  0086D2  0E00               	movlw	0
 25047  0086D4  6E65               	movwf	101,c	;volatile
 25048                           
 25049                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 25050  0086D6  0E00               	movlw	0
 25051  0086D8  6F58               	movwf	88,b	;volatile
 25052                           
 25053                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 25054  0086DA  0E00               	movlw	0
 25055  0086DC  6F56               	movwf	86,b	;volatile
 25056                           
 25057                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 25058  0086DE  0E3F               	movlw	63
 25059  0086E0  6F57               	movwf	87,b	;volatile
 25060                           
 25061                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 25062  0086E2  0E80               	movlw	128
 25063  0086E4  6E60               	movwf	96,c	;volatile
 25064                           
 25065                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 25066  0086E6  0E00               	movlw	0
 25067  0086E8  6F5C               	movwf	92,b	;volatile
 25068                           
 25069                           ; BSR set to: 15
 25070  0086EA  0012               	return		;funcret
 25071  0086EC                     __end_of_ADCC_Initialize:
 25072                           	callstack 0
 25073                           
 25074 ;; *************** function _EUSART1_is_rx_ready *****************
 25075 ;; Defined at:
 25076 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 25077 ;; Parameters:    Size  Location     Type
 25078 ;;		None
 25079 ;; Auto vars:     Size  Location     Type
 25080 ;;		None
 25081 ;; Return value:  Size  Location     Type
 25082 ;;                  1    wreg      _Bool 
 25083 ;; Registers used:
 25084 ;;		wreg, status,2
 25085 ;; Tracked objects:
 25086 ;;		On entry : 0/1
 25087 ;;		On exit  : 3F/0
 25088 ;;		Unchanged: 0/0
 25089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25094 ;;Total ram usage:        0 bytes
 25095 ;; Hardware stack levels used: 1
 25096 ;; Hardware stack levels required when called: 4
 25097 ;; This function calls:
 25098 ;;		Nothing
 25099 ;; This function is called by:
 25100 ;;		_main
 25101 ;; This function uses a non-reentrant model
 25102 ;;
 25103                           
 25104                           	psect	text108
 25105  0091C0                     __ptext108:
 25106                           	callstack 0
 25107  0091C0                     _EUSART1_is_rx_ready:
 25108                           	callstack 26
 25109                           
 25110                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 25111                           
 25112                           ; BSR set to: 15
 25113                           ;incstack = 0
 25114  0091C0  0100               	movlb	0	; () banked
 25115  0091C2  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 25116  0091C4  B4D8               	btfsc	status,2,c
 25117  0091C6  D002               	goto	u18230
 25118  0091C8  0E01               	movlw	1
 25119  0091CA  0012               	return	
 25120  0091CC                     u18230:
 25121  0091CC  0E00               	movlw	0
 25122                           
 25123                           ; BSR set to: 0
 25124  0091CE  0012               	return		;funcret
 25125  0091D0                     __end_of_EUSART1_is_rx_ready:
 25126                           	callstack 0
 25127                           
 25128 ;; *************** function _ControlMotor *****************
 25129 ;; Defined at:
 25130 ;;		line 703 in file "outputs_MC50.c"
 25131 ;; Parameters:    Size  Location     Type
 25132 ;;		None
 25133 ;; Auto vars:     Size  Location     Type
 25134 ;;  stateMotor      1   23[COMRAM] enum E10381
 25135 ;; Return value:  Size  Location     Type
 25136 ;;                  1    wreg      void 
 25137 ;; Registers used:
 25138 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 25139 ;; Tracked objects:
 25140 ;;		On entry : 3E/1
 25141 ;;		On exit  : 3E/0
 25142 ;;		Unchanged: 0/0
 25143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25146 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25147 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25148 ;;Total ram usage:        7 bytes
 25149 ;; Hardware stack levels used: 1
 25150 ;; Hardware stack levels required when called: 5
 25151 ;; This function calls:
 25152 ;;		_VerifyElectricalBrake
 25153 ;; This function is called by:
 25154 ;;		_main
 25155 ;; This function uses a non-reentrant model
 25156 ;;
 25157                           
 25158                           	psect	text109
 25159  00474E                     __ptext109:
 25160                           	callstack 0
 25161  00474E                     _ControlMotor:
 25162                           	callstack 25
 25163                           
 25164                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 25165                           
 25166                           ; BSR set to: 0
 25167                           ;incstack = 0
 25168  00474E  0101               	movlb	1	; () banked
 25169  004750  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 25170  004752  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 25171  004754  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 25172  004756  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 25173  004758  A4D8               	btfss	status,2,c
 25174  00475A  D00D               	goto	l16883
 25175                           
 25176                           ; BSR set to: 1
 25177  00475C  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 25178  00475E  B4D8               	btfsc	status,2,c
 25179  004760  D00A               	goto	l16883
 25180                           
 25181                           ; BSR set to: 1
 25182  004762  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 25183  004764  A4D8               	btfss	status,2,c
 25184  004766  D007               	goto	l16883
 25185                           
 25186                           ; BSR set to: 1
 25187  004768  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 25188  00476A  A4D8               	btfss	status,2,c
 25189  00476C  D004               	goto	l16883
 25190                           
 25191                           ; BSR set to: 1
 25192                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 25193  00476E  0E00               	movlw	0
 25194  004770  6F00               	movwf	_var_sys& (0+255),b	;volatile
 25195                           
 25196                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 25197  004772  0E02               	movlw	2
 25198  004774  D007               	goto	L100
 25199  004776                     l16883:
 25200                           
 25201                           ; BSR set to: 1
 25202  004776  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 25203  004778  A4D8               	btfss	status,2,c
 25204  00477A  D005               	goto	l16889
 25205                           
 25206                           ; BSR set to: 1
 25207  00477C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25208  00477E  A4D8               	btfss	status,2,c
 25209  004780  D002               	goto	l16889
 25210                           
 25211                           ; BSR set to: 1
 25212                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 25213  004782  0E00               	movlw	0
 25214  004784                     L100:
 25215  004784  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 25216  004786                     l16889:
 25217                           
 25218                           ; BSR set to: 1
 25219                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 25220  004786  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25221  004788  ECA7  F03E         	call	_VerifyElectricalBrake
 25222  00478C  6E18               	movwf	ControlMotor@stateMotor^0,c
 25223                           
 25224                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 25225  00478E  5018               	movf	ControlMotor@stateMotor^0,w,c
 25226  004790  A4D8               	btfss	status,2,c
 25227  004792  D00A               	goto	l16899
 25228                           
 25229                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 25230  004794  0E01               	movlw	1
 25231  004796  0101               	movlb	1	; () banked
 25232  004798  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25233                           
 25234                           ; BSR set to: 1
 25235                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 25236  00479A  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 25237  00479C  0012               	return	
 25238                           
 25239                           ; BSR set to: 1
 25240                           
 25241                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 25242  00479E  9287               	bcf	135,1,c	;volatile
 25243                           
 25244                           ; BSR set to: 1
 25245                           
 25246                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 25247  0047A0  9087               	bcf	135,0,c	;volatile
 25248  0047A2                     l16897:
 25249                           
 25250                           ; BSR set to: 1
 25251                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 25252  0047A2  0E00               	movlw	0
 25253  0047A4  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25254  0047A6  0012               	return	
 25255  0047A8                     l16899:
 25256  0047A8  0100               	movlb	0	; () banked
 25257  0047AA  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 25258  0047AC  A4D8               	btfss	status,2,c
 25259  0047AE  D022               	goto	l16915
 25260                           
 25261                           ; BSR set to: 0
 25262  0047B0  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 25263  0047B2  A4D8               	btfss	status,2,c
 25264  0047B4  D01F               	goto	l16915
 25265                           
 25266                           ; BSR set to: 0
 25267  0047B6  0101               	movlb	1	; () banked
 25268  0047B8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25269  0047BA  A4D8               	btfss	status,2,c
 25270  0047BC  D01B               	goto	l16915
 25271                           
 25272                           ; BSR set to: 1
 25273  0047BE  5018               	movf	ControlMotor@stateMotor^0,w,c
 25274  0047C0  A4D8               	btfss	status,2,c
 25275                           
 25276                           ; BSR set to: 1
 25277  0047C2  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25278  0047C4  D017               	goto	l16915
 25279  0047C6  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25280  0047C8  E103               	bnz	u19910
 25281  0047CA  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 25282  0047CC  A0D8               	btfss	status,0,c
 25283  0047CE  D012               	goto	l16915
 25284  0047D0                     u19910:
 25285                           
 25286                           ; BSR set to: 1
 25287  0047D0  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 25288  0047D2  D005               	goto	u19920
 25289  0047D4  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 25290  0047D6  E10E               	bnz	l16915
 25291  0047D8  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 25292  0047DA  B0D8               	btfsc	status,0,c
 25293  0047DC  D00B               	goto	l16915
 25294  0047DE                     u19920:
 25295                           
 25296                           ; BSR set to: 1
 25297                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 25298  0047DE  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25299  0047E0  D006               	goto	u19930
 25300  0047E2  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25301  0047E4  E103               	bnz	u19931
 25302  0047E6  0E12               	movlw	18
 25303  0047E8  5DC2               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 25304  0047EA  B0D8               	btfsc	status,0,c
 25305  0047EC                     u19931:
 25306  0047EC  0012               	return	
 25307  0047EE                     u19930:
 25308                           
 25309                           ; BSR set to: 1
 25310                           
 25311                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 25312  0047EE  8287               	bsf	135,1,c	;volatile
 25313                           
 25314                           ; BSR set to: 1
 25315                           
 25316                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 25317  0047F0  8087               	bsf	135,0,c	;volatile
 25318  0047F2  D7D7               	goto	l16897
 25319  0047F4                     l16915:
 25320  0047F4  0418               	decf	ControlMotor@stateMotor^0,w,c
 25321  0047F6  B4D8               	btfsc	status,2,c
 25322  0047F8  D004               	goto	u19950
 25323  0047FA  0E02               	movlw	2
 25324  0047FC  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 25325  0047FE  A4D8               	btfss	status,2,c
 25326  004800  D063               	goto	l16945
 25327  004802                     u19950:
 25328  004802  0101               	movlb	1	; () banked
 25329  004804  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 25330  004806  A4D8               	btfss	status,2,c
 25331  004808  D05F               	goto	l16945
 25332                           
 25333                           ; BSR set to: 1
 25334                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 25335  00480A  B291               	btfsc	145,1,c	;volatile
 25336  00480C  D004               	goto	u19980
 25337                           
 25338                           ; BSR set to: 1
 25339  00480E  0100               	movlb	0	; () banked
 25340  004810  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25341  004812  B4D8               	btfsc	status,2,c
 25342  004814  D006               	goto	u20000
 25343  004816                     u19980:
 25344  004816  B091               	btfsc	145,0,c	;volatile
 25345  004818  D04F               	goto	l2348
 25346  00481A  0100               	movlb	0	; () banked
 25347  00481C  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25348  00481E  A4D8               	btfss	status,2,c
 25349  004820  D04B               	goto	l2348
 25350  004822                     u20000:
 25351                           
 25352                           ; BSR set to: 0
 25353                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 25354  004822  B091               	btfsc	145,0,c	;volatile
 25355  004824  D003               	goto	u20020
 25356                           
 25357                           ; BSR set to: 0
 25358  004826  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25359  004828  B4D8               	btfsc	status,2,c
 25360  00482A  D005               	goto	u20040
 25361  00482C                     u20020:
 25362                           
 25363                           ; BSR set to: 0
 25364  00482C  B291               	btfsc	145,1,c	;volatile
 25365  00482E  D03A               	goto	l16941
 25366                           
 25367                           ; BSR set to: 0
 25368  004830  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25369  004832  A4D8               	btfss	status,2,c
 25370  004834  D037               	goto	l16941
 25371  004836                     u20040:
 25372                           
 25373                           ; BSR set to: 0
 25374                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 25375  004836  0E00               	movlw	0
 25376  004838  0101               	movlb	1	; () banked
 25377  00483A  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25378                           
 25379                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 25380  00483C  0E00               	movlw	0
 25381  00483E  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 25382  004840  0EC8               	movlw	200
 25383  004842  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 25384                           
 25385                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 25386  004844  0E00               	movlw	0
 25387  004846  6FB5               	movwf	(_ts_system+27)& (0+255),b	;volatile
 25388  004848  0E14               	movlw	20
 25389  00484A  6FB4               	movwf	(_ts_system+26)& (0+255),b	;volatile
 25390                           
 25391                           ; BSR set to: 1
 25392                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 25393  00484C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 25394  00484E  B4D8               	btfsc	status,2,c
 25395  004850  D003               	goto	u20060
 25396                           
 25397                           ; BSR set to: 1
 25398  004852  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 25399  004854  A4D8               	btfss	status,2,c
 25400  004856  D024               	goto	l16939
 25401  004858                     u20060:
 25402                           
 25403                           ; BSR set to: 1
 25404                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 25405  004858  0100               	movlb	0	; () banked
 25406  00485A  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 25407  00485C  0D0A               	mullw	10
 25408  00485E  CFF3 F012          	movff	prodl,??_ControlMotor
 25409  004862  CFF4 F013          	movff	prodh,??_ControlMotor+1
 25410  004866  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 25411  004868  2612               	addwf	??_ControlMotor^0,f,c
 25412  00486A  0E00               	movlw	0
 25413  00486C  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 25414  00486E  5012               	movf	??_ControlMotor^0,w,c
 25415  004870  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 25416  004872  6E14               	movwf	(??_ControlMotor+2)^0,c
 25417  004874  5013               	movf	(??_ControlMotor+1)^0,w,c
 25418  004876  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 25419  004878  6E15               	movwf	(??_ControlMotor+3)^0,c
 25420  00487A  0E00               	movlw	0
 25421  00487C  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 25422  00487E  6E16               	movwf	(??_ControlMotor+4)^0,c
 25423  004880  0E00               	movlw	0
 25424  004882  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 25425  004884  6E17               	movwf	(??_ControlMotor+5)^0,c
 25426  004886  0E50               	movlw	80
 25427  004888  2414               	addwf	(??_ControlMotor+2)^0,w,c
 25428  00488A  0101               	movlb	1	; () banked
 25429  00488C  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 25430  00488E  0E00               	movlw	0
 25431  004890  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 25432  004892  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 25433  004894  0E00               	movlw	0
 25434  004896  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 25435  004898  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 25436  00489A  0E00               	movlw	0
 25437  00489C  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 25438  00489E  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 25439  0048A0                     l16939:
 25440                           
 25441                           ; BSR set to: 1
 25442                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 25443  0048A0  0E02               	movlw	2
 25444  0048A2  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 25445  0048A4                     l16941:
 25446                           
 25447                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 25448  0048A4  0100               	movlb	0	; () banked
 25449  0048A6  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25450  0048A8  A4D8               	btfss	status,2,c
 25451  0048AA  D002               	goto	l2365
 25452                           
 25453                           ; BSR set to: 0
 25454  0048AC  8087               	bsf	135,0,c	;volatile
 25455  0048AE  D001               	goto	l16943
 25456  0048B0                     l2365:
 25457                           
 25458                           ; BSR set to: 0
 25459  0048B0  8287               	bsf	135,1,c	;volatile
 25460  0048B2                     l16943:
 25461                           
 25462                           ; BSR set to: 0
 25463                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 25464  0048B2  0E01               	movlw	1
 25465  0048B4  0101               	movlb	1	; () banked
 25466  0048B6  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25467  0048B8                     l2348:
 25468                           
 25469                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 25470  0048B8  0100               	movlb	0	; () banked
 25471  0048BA  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25472  0048BC  A4D8               	btfss	status,2,c
 25473  0048BE  D002               	goto	l2371
 25474                           
 25475                           ; BSR set to: 0
 25476  0048C0  9287               	bcf	135,1,c	;volatile
 25477  0048C2  0012               	return	
 25478  0048C4                     l2371:
 25479                           
 25480                           ; BSR set to: 0
 25481  0048C4  9087               	bcf	135,0,c	;volatile
 25482  0048C6  0012               	return	
 25483  0048C8                     l16945:
 25484  0048C8  0E03               	movlw	3
 25485  0048CA  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 25486  0048CC  A4D8               	btfss	status,2,c
 25487  0048CE  0012               	return	
 25488  0048D0  0101               	movlb	1	; () banked
 25489  0048D2  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 25490  0048D4  A4D8               	btfss	status,2,c
 25491  0048D6  0012               	return	
 25492                           
 25493                           ; BSR set to: 1
 25494                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 25495  0048D8  B091               	btfsc	145,0,c	;volatile
 25496  0048DA  D004               	goto	u20120
 25497                           
 25498                           ; BSR set to: 1
 25499  0048DC  0100               	movlb	0	; () banked
 25500  0048DE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25501  0048E0  B4D8               	btfsc	status,2,c
 25502  0048E2  D006               	goto	u20140
 25503  0048E4                     u20120:
 25504  0048E4  B291               	btfsc	145,1,c	;volatile
 25505  0048E6  D050               	goto	l2375
 25506  0048E8  0100               	movlb	0	; () banked
 25507  0048EA  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25508  0048EC  A4D8               	btfss	status,2,c
 25509  0048EE  D04C               	goto	l2375
 25510  0048F0                     u20140:
 25511                           
 25512                           ; BSR set to: 0
 25513                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 25514  0048F0  B291               	btfsc	145,1,c	;volatile
 25515  0048F2  D003               	goto	u20160
 25516                           
 25517                           ; BSR set to: 0
 25518  0048F4  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25519  0048F6  B4D8               	btfsc	status,2,c
 25520  0048F8  D005               	goto	u20180
 25521  0048FA                     u20160:
 25522                           
 25523                           ; BSR set to: 0
 25524  0048FA  B091               	btfsc	145,0,c	;volatile
 25525  0048FC  D03B               	goto	l16969
 25526                           
 25527                           ; BSR set to: 0
 25528  0048FE  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25529  004900  A4D8               	btfss	status,2,c
 25530  004902  D038               	goto	l16969
 25531  004904                     u20180:
 25532                           
 25533                           ; BSR set to: 0
 25534                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 25535  004904  0E00               	movlw	0
 25536  004906  0101               	movlb	1	; () banked
 25537  004908  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25538                           
 25539                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 25540  00490A  0E00               	movlw	0
 25541  00490C  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 25542  00490E  0EC8               	movlw	200
 25543  004910  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 25544                           
 25545                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 25546  004912  0E00               	movlw	0
 25547  004914  6FB5               	movwf	(_ts_system+27)& (0+255),b	;volatile
 25548  004916  0E14               	movlw	20
 25549  004918  6FB4               	movwf	(_ts_system+26)& (0+255),b	;volatile
 25550                           
 25551                           ; BSR set to: 1
 25552                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 25553  00491A  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 25554  00491C  B4D8               	btfsc	status,2,c
 25555  00491E  D004               	goto	u20200
 25556                           
 25557                           ; BSR set to: 1
 25558  004920  0E04               	movlw	4
 25559  004922  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 25560  004924  A4D8               	btfss	status,2,c
 25561  004926  D024               	goto	l16967
 25562  004928                     u20200:
 25563                           
 25564                           ; BSR set to: 1
 25565                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 25566  004928  0100               	movlb	0	; () banked
 25567  00492A  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 25568  00492C  0D0A               	mullw	10
 25569  00492E  CFF3 F012          	movff	prodl,??_ControlMotor
 25570  004932  CFF4 F013          	movff	prodh,??_ControlMotor+1
 25571  004936  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 25572  004938  2612               	addwf	??_ControlMotor^0,f,c
 25573  00493A  0E00               	movlw	0
 25574  00493C  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 25575  00493E  5012               	movf	??_ControlMotor^0,w,c
 25576  004940  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 25577  004942  6E14               	movwf	(??_ControlMotor+2)^0,c
 25578  004944  5013               	movf	(??_ControlMotor+1)^0,w,c
 25579  004946  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 25580  004948  6E15               	movwf	(??_ControlMotor+3)^0,c
 25581  00494A  0E00               	movlw	0
 25582  00494C  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 25583  00494E  6E16               	movwf	(??_ControlMotor+4)^0,c
 25584  004950  0E00               	movlw	0
 25585  004952  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 25586  004954  6E17               	movwf	(??_ControlMotor+5)^0,c
 25587  004956  0E50               	movlw	80
 25588  004958  2414               	addwf	(??_ControlMotor+2)^0,w,c
 25589  00495A  0101               	movlb	1	; () banked
 25590  00495C  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 25591  00495E  0E00               	movlw	0
 25592  004960  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 25593  004962  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 25594  004964  0E00               	movlw	0
 25595  004966  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 25596  004968  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 25597  00496A  0E00               	movlw	0
 25598  00496C  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 25599  00496E  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 25600  004970                     l16967:
 25601                           
 25602                           ; BSR set to: 1
 25603                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 25604  004970  0E03               	movlw	3
 25605  004972  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 25606  004974                     l16969:
 25607                           
 25608                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 25609  004974  0100               	movlb	0	; () banked
 25610  004976  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25611  004978  A4D8               	btfss	status,2,c
 25612  00497A  D002               	goto	l2392
 25613                           
 25614                           ; BSR set to: 0
 25615  00497C  8287               	bsf	135,1,c	;volatile
 25616  00497E  D001               	goto	l16971
 25617  004980                     l2392:
 25618                           
 25619                           ; BSR set to: 0
 25620  004980  8087               	bsf	135,0,c	;volatile
 25621  004982                     l16971:
 25622                           
 25623                           ; BSR set to: 0
 25624                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 25625  004982  0E02               	movlw	2
 25626  004984  0101               	movlb	1	; () banked
 25627  004986  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25628  004988                     l2375:
 25629                           
 25630                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 25631  004988  0100               	movlb	0	; () banked
 25632  00498A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25633  00498C  A4D8               	btfss	status,2,c
 25634  00498E  D002               	goto	l2398
 25635                           
 25636                           ; BSR set to: 0
 25637  004990  9087               	bcf	135,0,c	;volatile
 25638  004992  0012               	return	
 25639  004994                     l2398:
 25640                           
 25641                           ; BSR set to: 0
 25642  004994  9287               	bcf	135,1,c	;volatile
 25643  004996  0012               	return		;funcret
 25644  004998                     __end_of_ControlMotor:
 25645                           	callstack 0
 25646                           
 25647 ;; *************** function _VerifyElectricalBrake *****************
 25648 ;; Defined at:
 25649 ;;		line 658 in file "outputs_MC50.c"
 25650 ;; Parameters:    Size  Location     Type
 25651 ;;  actualState     1    wreg     enum E10381
 25652 ;; Auto vars:     Size  Location     Type
 25653 ;;  actualState     1   16[COMRAM] enum E10381
 25654 ;;  tempState       1   15[COMRAM] enum E10381
 25655 ;; Return value:  Size  Location     Type
 25656 ;;                  1    wreg      enum E10381
 25657 ;; Registers used:
 25658 ;;		wreg, status,2, status,0
 25659 ;; Tracked objects:
 25660 ;;		On entry : 3F/1
 25661 ;;		On exit  : 3E/0
 25662 ;;		Unchanged: 0/0
 25663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25668 ;;Total ram usage:        2 bytes
 25669 ;; Hardware stack levels used: 1
 25670 ;; Hardware stack levels required when called: 4
 25671 ;; This function calls:
 25672 ;;		Nothing
 25673 ;; This function is called by:
 25674 ;;		_ControlMotor
 25675 ;; This function uses a non-reentrant model
 25676 ;;
 25677                           
 25678                           	psect	text110
 25679  007D4E                     __ptext110:
 25680                           	callstack 0
 25681  007D4E                     _VerifyElectricalBrake:
 25682                           	callstack 25
 25683                           
 25684                           ;incstack = 0
 25685                           ;VerifyElectricalBrake@actualState stored from wreg
 25686  007D4E  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 25687                           
 25688                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 25689  007D50  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 25690                           
 25691                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 25692  007D54  0100               	movlb	0	; () banked
 25693  007D56  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 25694  007D58  A4D8               	btfss	status,2,c
 25695  007D5A  D02E               	goto	l2318
 25696                           
 25697                           ; BSR set to: 0
 25698  007D5C  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 25699  007D5E  A4D8               	btfss	status,2,c
 25700  007D60  D02B               	goto	l2318
 25701                           
 25702                           ; BSR set to: 0
 25703  007D62  0101               	movlb	1	; () banked
 25704  007D64  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 25705  007D66  D005               	goto	u15310
 25706  007D68  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 25707  007D6A  E126               	bnz	l2318
 25708  007D6C  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 25709  007D6E  B0D8               	btfsc	status,0,c
 25710  007D70  D023               	goto	l2318
 25711  007D72                     u15310:
 25712                           
 25713                           ; BSR set to: 1
 25714                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 25715  007D72  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 25716  007D74  0100               	movlb	0	; () banked
 25717  007D76  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 25718  007D78  B4D8               	btfsc	status,2,c
 25719  007D7A  D00B               	goto	l14719
 25720                           
 25721                           ; BSR set to: 0
 25722  007D7C  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 25723  007D7E  A4D8               	btfss	status,2,c
 25724  007D80  D008               	goto	l14719
 25725                           
 25726                           ; BSR set to: 0
 25727                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 25728  007D82  0E01               	movlw	1
 25729  007D84  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 25730                           
 25731                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 25732  007D86  0E00               	movlw	0
 25733  007D88  0101               	movlb	1	; () banked
 25734  007D8A  6FC3               	movwf	(_ts_system+41)& (0+255),b	;volatile
 25735  007D8C  0E16               	movlw	22
 25736  007D8E  6FC2               	movwf	(_ts_system+40)& (0+255),b	;volatile
 25737                           
 25738                           ;outputs_MC50.c: 670:         }
 25739  007D90  D018               	goto	l2323
 25740  007D92                     l14719:
 25741                           
 25742                           ; BSR set to: 0
 25743  007D92  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 25744  007D94  A4D8               	btfss	status,2,c
 25745  007D96  D00B               	goto	l14725
 25746                           
 25747                           ; BSR set to: 0
 25748  007D98  0101               	movlb	1	; () banked
 25749  007D9A  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25750  007D9C  D008               	goto	l14725
 25751  007D9E  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25752  007DA0  E103               	bnz	u15350
 25753  007DA2  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 25754  007DA4  A0D8               	btfss	status,0,c
 25755  007DA6  D003               	goto	l14725
 25756  007DA8                     u15350:
 25757                           
 25758                           ; BSR set to: 1
 25759                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 25760  007DA8  0E01               	movlw	1
 25761  007DAA  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 25762                           
 25763                           ;outputs_MC50.c: 686:         }
 25764  007DAC  D00A               	goto	l2323
 25765  007DAE                     l14725:
 25766                           
 25767                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 25768  007DAE  0E00               	movlw	0
 25769  007DB0  0100               	movlb	0	; () banked
 25770  007DB2  6F78               	movwf	_brakeElectric_st& (0+255),b
 25771                           
 25772                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 25773  007DB4  0E00               	movlw	0
 25774  007DB6  D004               	goto	L101
 25775  007DB8                     l2318:
 25776                           
 25777                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 25778  007DB8  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 25779                           
 25780                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 25781  007DBC  0E00               	movlw	0
 25782  007DBE  0100               	movlb	0	; () banked
 25783  007DC0                     L101:
 25784  007DC0  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 25785  007DC2                     l2323:
 25786                           
 25787                           ;outputs_MC50.c: 700:     return tempState;
 25788  007DC2  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 25789  007DC4  0012               	return		;funcret
 25790  007DC6                     __end_of_VerifyElectricalBrake:
 25791                           	callstack 0
 25792                           
 25793 ;; *************** function _ControlLights *****************
 25794 ;; Defined at:
 25795 ;;		line 816 in file "outputs_MC50.c"
 25796 ;; Parameters:    Size  Location     Type
 25797 ;;		None
 25798 ;; Auto vars:     Size  Location     Type
 25799 ;;		None
 25800 ;; Return value:  Size  Location     Type
 25801 ;;                  1    wreg      void 
 25802 ;; Registers used:
 25803 ;;		wreg, status,2, status,0, cstack
 25804 ;; Tracked objects:
 25805 ;;		On entry : 3E/1
 25806 ;;		On exit  : 3E/0
 25807 ;;		Unchanged: 0/0
 25808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25813 ;;Total ram usage:        0 bytes
 25814 ;; Hardware stack levels used: 1
 25815 ;; Hardware stack levels required when called: 6
 25816 ;; This function calls:
 25817 ;;		_setFlashLigth_ON
 25818 ;;		_setRGB_ON
 25819 ;; This function is called by:
 25820 ;;		_main
 25821 ;; This function uses a non-reentrant model
 25822 ;;
 25823                           
 25824                           	psect	text111
 25825  0039DE                     __ptext111:
 25826                           	callstack 0
 25827  0039DE                     _ControlLights:
 25828                           	callstack 24
 25829                           
 25830                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 25831                           
 25832                           ;incstack = 0
 25833  0039DE  0101               	movlb	1	; () banked
 25834  0039E0  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 25835  0039E2  A4D8               	btfss	status,2,c
 25836  0039E4  D007               	goto	l16977
 25837                           
 25838                           ; BSR set to: 1
 25839                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 25840  0039E6  0E00               	movlw	0
 25841  0039E8  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25842  0039EA  0E14               	movlw	20
 25843  0039EC  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25844  0039EE  EC15  F045         	call	_setFlashLigth_ON	;wreg free
 25845                           
 25846                           ;outputs_MC50.c: 821:     }
 25847  0039F2  D010               	goto	l16983
 25848  0039F4                     l16977:
 25849                           
 25850                           ; BSR set to: 1
 25851  0039F4  51E2               	movf	_controlGate_stateMachine& (0+255),w,b
 25852  0039F6  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25853  0039F8  A4D8               	btfss	status,2,c
 25854  0039FA  D00C               	goto	l16983
 25855                           
 25856                           ; BSR set to: 1
 25857                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 25858  0039FC  0E00               	movlw	0
 25859  0039FE  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 25860                           
 25861                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 25862  003A00  0E00               	movlw	0
 25863  003A02  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 25864                           
 25865                           ; BSR set to: 1
 25866                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 25867  003A04  0E03               	movlw	3
 25868  003A06  0100               	movlb	0	; () banked
 25869  003A08  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 25870  003A0A  B4D8               	btfsc	status,2,c
 25871  003A0C  D002               	goto	l2410
 25872                           
 25873                           ; BSR set to: 0
 25874                           
 25875                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 25876  003A0E  9487               	bcf	135,2,c	;volatile
 25877  003A10  D001               	goto	l16983
 25878  003A12                     l2410:
 25879                           
 25880                           ; BSR set to: 0
 25881  003A12  8487               	bsf	135,2,c	;volatile
 25882  003A14                     l16983:
 25883                           
 25884                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 25885  003A14  0101               	movlb	1	; () banked
 25886  003A16  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 25887  003A18  B4D8               	btfsc	status,2,c
 25888  003A1A  D005               	goto	u20270
 25889                           
 25890                           ; BSR set to: 1
 25891  003A1C  0E04               	movlw	4
 25892  003A1E  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
 25893  003A20  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25894  003A22  A4D8               	btfss	status,2,c
 25895  003A24  D01C               	goto	l16995
 25896  003A26                     u20270:
 25897                           
 25898                           ; BSR set to: 1
 25899  003A26  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 25900  003A28  D01A               	goto	l16995
 25901  003A2A  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 25902  003A2C  E103               	bnz	u20280
 25903  003A2E  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 25904  003A30  A0D8               	btfss	status,0,c
 25905  003A32  D015               	goto	l16995
 25906  003A34                     u20280:
 25907                           
 25908                           ; BSR set to: 1
 25909  003A34  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 25910  003A36  D006               	goto	u20290
 25911  003A38  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 25912  003A3A  E111               	bnz	l16995
 25913  003A3C  0E3D               	movlw	61
 25914  003A3E  5DAC               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 25915  003A40  B0D8               	btfsc	status,0,c
 25916  003A42  D00D               	goto	l16995
 25917  003A44                     u20290:
 25918                           
 25919                           ; BSR set to: 1
 25920  003A44  0E02               	movlw	2
 25921  003A46  0100               	movlb	0	; () banked
 25922  003A48  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25923  003A4A  A4D8               	btfss	status,2,c
 25924  003A4C  D008               	goto	l16995
 25925                           
 25926                           ; BSR set to: 0
 25927                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 25928  003A4E  0E00               	movlw	0
 25929  003A50  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25930  003A52  0E04               	movlw	4
 25931  003A54  6E11               	movwf	setRGB_ON@Freq^0,c
 25932  003A56  0E01               	movlw	1
 25933  003A58  EC46  F03B         	call	_setRGB_ON
 25934                           
 25935                           ;outputs_MC50.c: 838:     }
 25936  003A5C  0012               	return	
 25937  003A5E                     l16995:
 25938  003A5E  0E03               	movlw	3
 25939  003A60  0101               	movlb	1	; () banked
 25940  003A62  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 25941  003A64  A4D8               	btfss	status,2,c
 25942  003A66  D04F               	goto	l17025
 25943                           
 25944                           ; BSR set to: 1
 25945                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 25946  003A68  0E00               	movlw	0
 25947  003A6A  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 25948                           
 25949                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 25950  003A6C  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 25951  003A6E  A4D8               	btfss	status,2,c
 25952  003A70  D013               	goto	l17007
 25953                           
 25954                           ; BSR set to: 1
 25955  003A72  0E03               	movlw	3
 25956  003A74  0100               	movlb	0	; () banked
 25957  003A76  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25958  003A78  A4D8               	btfss	status,2,c
 25959  003A7A  D00E               	goto	l17007
 25960                           
 25961                           ; BSR set to: 0
 25962                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 25963  003A7C  0E00               	movlw	0
 25964  003A7E  0101               	movlb	1	; () banked
 25965  003A80  6FDD               	movwf	(_ts_system+67)& (0+255),b	;volatile
 25966  003A82  0E28               	movlw	40
 25967  003A84  6FDC               	movwf	(_ts_system+66)& (0+255),b	;volatile
 25968                           
 25969                           ; BSR set to: 1
 25970                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 25971  003A86  0E00               	movlw	0
 25972  003A88  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25973  003A8A  0E00               	movlw	0
 25974  003A8C  6E11               	movwf	setRGB_ON@Freq^0,c
 25975  003A8E  0E04               	movlw	4
 25976  003A90  EC46  F03B         	call	_setRGB_ON
 25977                           
 25978                           ; BSR set to: 1
 25979                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 25980  003A94  0E01               	movlw	1
 25981  003A96  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 25982  003A98                     l17007:
 25983                           
 25984                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 25985  003A98  0101               	movlb	1	; () banked
 25986  003A9A  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 25987  003A9C  D005               	goto	u20340
 25988  003A9E  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 25989  003AA0  E105               	bnz	l17011
 25990  003AA2  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 25991  003AA4  B0D8               	btfsc	status,0,c
 25992  003AA6  D002               	goto	l17011
 25993  003AA8                     u20340:
 25994                           
 25995                           ; BSR set to: 1
 25996  003AA8  0100               	movlb	0	; () banked
 25997  003AAA  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25998  003AAC                     l17011:
 25999                           
 26000                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 26001  003AAC  0100               	movlb	0	; () banked
 26002  003AAE  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26003  003AB0  A4D8               	btfss	status,2,c
 26004  003AB2  D010               	goto	l17017
 26005                           
 26006                           ; BSR set to: 0
 26007  003AB4  0101               	movlb	1	; () banked
 26008  003AB6  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26009  003AB8  D005               	goto	u20360
 26010  003ABA  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26011  003ABC  E10B               	bnz	l17017
 26012  003ABE  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26013  003AC0  B0D8               	btfsc	status,0,c
 26014  003AC2  D008               	goto	l17017
 26015  003AC4                     u20360:
 26016                           
 26017                           ; BSR set to: 1
 26018                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 26019  003AC4  0E00               	movlw	0
 26020  003AC6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26021  003AC8  0E05               	movlw	5
 26022  003ACA  6E11               	movwf	setRGB_ON@Freq^0,c
 26023  003ACC  0E03               	movlw	3
 26024  003ACE  EC46  F03B         	call	_setRGB_ON
 26025                           
 26026                           ;outputs_MC50.c: 862:         }
 26027  003AD2  D007               	goto	l17019
 26028  003AD4                     l17017:
 26029                           
 26030                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 26031  003AD4  0E00               	movlw	0
 26032  003AD6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26033  003AD8  0E00               	movlw	0
 26034  003ADA  6E11               	movwf	setRGB_ON@Freq^0,c
 26035  003ADC  0E03               	movlw	3
 26036  003ADE  EC46  F03B         	call	_setRGB_ON
 26037  003AE2                     l17019:
 26038                           
 26039                           ; BSR set to: 1
 26040                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 26041  003AE2  0100               	movlb	0	; () banked
 26042  003AE4  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26043  003AE6  A4D8               	btfss	status,2,c
 26044  003AE8  D007               	goto	l17023
 26045                           
 26046                           ; BSR set to: 0
 26047                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 26048  003AEA  0E00               	movlw	0
 26049  003AEC  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26050  003AEE  0E0A               	movlw	10
 26051  003AF0  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26052  003AF2  EC15  F045         	call	_setFlashLigth_ON	;wreg free
 26053                           
 26054                           ;outputs_MC50.c: 873:         }
 26055  003AF6  0012               	return	
 26056  003AF8                     l17023:
 26057                           
 26058                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 26059  003AF8  0E00               	movlw	0
 26060  003AFA  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26061  003AFC  0E00               	movlw	0
 26062  003AFE  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26063  003B00  EC15  F045         	call	_setFlashLigth_ON	;wreg free
 26064  003B04  0012               	return	
 26065  003B06                     l17025:
 26066                           
 26067                           ; BSR set to: 1
 26068  003B06  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26069  003B08  A4D8               	btfss	status,2,c
 26070  003B0A  D042               	goto	l17053
 26071                           
 26072                           ; BSR set to: 1
 26073  003B0C  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
 26074  003B0E  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26075  003B10  A4D8               	btfss	status,2,c
 26076  003B12  D03E               	goto	l17053
 26077                           
 26078                           ; BSR set to: 1
 26079                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 26080  003B14  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 26081  003B16  A4D8               	btfss	status,2,c
 26082                           
 26083                           ; BSR set to: 1
 26084                           
 26085                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 26086  003B18  8E83               	bsf	131,7,c	;volatile
 26087                           
 26088                           ; BSR set to: 1
 26089                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 26090  003B1A  0100               	movlb	0	; () banked
 26091  003B1C  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26092  003B1E  A4D8               	btfss	status,2,c
 26093  003B20  D017               	goto	l17041
 26094                           
 26095                           ; BSR set to: 0
 26096                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 26097  003B22  0E02               	movlw	2
 26098  003B24  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 26099  003B26  B4D8               	btfsc	status,2,c
 26100  003B28  D003               	goto	u20430
 26101                           
 26102                           ; BSR set to: 0
 26103  003B2A  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 26104  003B2C  A4D8               	btfss	status,2,c
 26105  003B2E  D008               	goto	l17039
 26106  003B30                     u20430:
 26107                           
 26108                           ; BSR set to: 0
 26109  003B30  0E00               	movlw	0
 26110  003B32  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26111  003B34  0E00               	movlw	0
 26112  003B36  6E11               	movwf	setRGB_ON@Freq^0,c
 26113  003B38  0E04               	movlw	4
 26114  003B3A  EC46  F03B         	call	_setRGB_ON
 26115  003B3E  D013               	goto	l17045
 26116  003B40                     l17039:
 26117                           
 26118                           ; BSR set to: 0
 26119  003B40  0E00               	movlw	0
 26120  003B42  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26121  003B44  0E28               	movlw	40
 26122  003B46  6E11               	movwf	setRGB_ON@Freq^0,c
 26123  003B48  0E04               	movlw	4
 26124  003B4A  EC46  F03B         	call	_setRGB_ON
 26125  003B4E  D00B               	goto	l17045
 26126  003B50                     l17041:
 26127                           
 26128                           ; BSR set to: 0
 26129  003B50  0E03               	movlw	3
 26130  003B52  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26131  003B54  B4D8               	btfsc	status,2,c
 26132  003B56  D007               	goto	l17045
 26133                           
 26134                           ; BSR set to: 0
 26135  003B58  0E00               	movlw	0
 26136  003B5A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26137  003B5C  0E00               	movlw	0
 26138  003B5E  6E11               	movwf	setRGB_ON@Freq^0,c
 26139  003B60  0E04               	movlw	4
 26140  003B62  EC46  F03B         	call	_setRGB_ON
 26141  003B66                     l17045:
 26142                           
 26143                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 26144  003B66  0E03               	movlw	3
 26145  003B68  0100               	movlb	0	; () banked
 26146  003B6A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26147  003B6C  B4D8               	btfsc	status,2,c
 26148  003B6E  0012               	return	
 26149                           
 26150                           ; BSR set to: 0
 26151                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 26152  003B70  0101               	movlb	1	; () banked
 26153  003B72  BFBD               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 26154  003B74  D007               	goto	l2438
 26155  003B76  51BD               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 26156  003B78  11BC               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 26157  003B7A  11BB               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 26158  003B7C  E1BD               	bnz	l17023
 26159  003B7E  05BA               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 26160  003B80  B0D8               	btfsc	status,0,c
 26161  003B82  D7BA               	goto	l17023
 26162  003B84                     l2438:
 26163                           
 26164                           ; BSR set to: 1
 26165  003B84  9487               	bcf	135,2,c	;volatile
 26166                           
 26167                           ; BSR set to: 1
 26168                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 26169  003B86  0E00               	movlw	0
 26170  003B88  6FB9               	movwf	(_ts_system+31)& (0+255),b	;volatile
 26171  003B8A  0E00               	movlw	0
 26172  003B8C  6FB8               	movwf	(_ts_system+30)& (0+255),b	;volatile
 26173                           
 26174                           ; BSR set to: 0
 26175                           ;outputs_MC50.c: 907:     }
 26176                           
 26177                           ;outputs_MC50.c: 906:         }
 26178  003B8E  0012               	return	
 26179  003B90                     l17053:
 26180                           
 26181                           ; BSR set to: 1
 26182  003B90  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26183  003B92  A4D8               	btfss	status,2,c
 26184  003B94  D048               	goto	l17087
 26185                           
 26186                           ; BSR set to: 1
 26187                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 26188  003B96  0100               	movlb	0	; () banked
 26189  003B98  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26190  003B9A  A4D8               	btfss	status,2,c
 26191  003B9C  D004               	goto	u20490
 26192                           
 26193                           ; BSR set to: 0
 26194  003B9E  0101               	movlb	1	; () banked
 26195  003BA0  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26196  003BA2  B4D8               	btfsc	status,2,c
 26197  003BA4  D00C               	goto	u20520
 26198  003BA6                     u20490:
 26199  003BA6  0100               	movlb	0	; () banked
 26200  003BA8  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26201  003BAA  A4D8               	btfss	status,2,c
 26202  003BAC  D017               	goto	l17071
 26203                           
 26204                           ; BSR set to: 0
 26205  003BAE  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26206  003BB0  B4D8               	btfsc	status,2,c
 26207  003BB2  D014               	goto	l17071
 26208                           
 26209                           ; BSR set to: 0
 26210  003BB4  0E02               	movlw	2
 26211  003BB6  0101               	movlb	1	; () banked
 26212  003BB8  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26213  003BBA  A4D8               	btfss	status,2,c
 26214  003BBC  D00F               	goto	l17071
 26215  003BBE                     u20520:
 26216                           
 26217                           ; BSR set to: 1
 26218                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26219  003BBE  0E00               	movlw	0
 26220  003BC0  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26221                           
 26222                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 26223  003BC2  0E00               	movlw	0
 26224  003BC4  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26225                           
 26226                           ; BSR set to: 1
 26227                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 26228  003BC6  0E03               	movlw	3
 26229  003BC8  0100               	movlb	0	; () banked
 26230  003BCA  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26231  003BCC  B4D8               	btfsc	status,2,c
 26232  003BCE  0012               	return	
 26233                           
 26234                           ; BSR set to: 0
 26235  003BD0  0E02               	movlw	2
 26236  003BD2  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26237  003BD4  B4D8               	btfsc	status,2,c
 26238  003BD6  0012               	return	
 26239                           
 26240                           ; BSR set to: 0
 26241                           
 26242                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 26243  003BD8  9487               	bcf	135,2,c	;volatile
 26244  003BDA  0012               	return	
 26245  003BDC                     l17071:
 26246                           
 26247                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26248  003BDC  0100               	movlb	0	; () banked
 26249  003BDE  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26250  003BE0  A4D8               	btfss	status,2,c
 26251  003BE2  D008               	goto	l17075
 26252                           
 26253                           ; BSR set to: 0
 26254                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 26255  003BE4  0E00               	movlw	0
 26256  003BE6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26257  003BE8  0E14               	movlw	20
 26258  003BEA  6E11               	movwf	setRGB_ON@Freq^0,c
 26259  003BEC  0E01               	movlw	1
 26260  003BEE  EC46  F03B         	call	_setRGB_ON
 26261                           
 26262                           ;outputs_MC50.c: 932:             }
 26263  003BF2  D007               	goto	l17077
 26264  003BF4                     l17075:
 26265                           
 26266                           ; BSR set to: 0
 26267                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 26268  003BF4  0E00               	movlw	0
 26269  003BF6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26270  003BF8  0E00               	movlw	0
 26271  003BFA  6E11               	movwf	setRGB_ON@Freq^0,c
 26272  003BFC  0E01               	movlw	1
 26273  003BFE  EC46  F03B         	call	_setRGB_ON
 26274  003C02                     l17077:
 26275                           
 26276                           ; BSR set to: 1
 26277                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 26278  003C02  0100               	movlb	0	; () banked
 26279  003C04  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26280  003C06  B4D8               	btfsc	status,2,c
 26281  003C08  D004               	goto	u20570
 26282                           
 26283                           ; BSR set to: 0
 26284  003C0A  0E03               	movlw	3
 26285  003C0C  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26286  003C0E  A4D8               	btfss	status,2,c
 26287  003C10  D002               	goto	l17081
 26288  003C12                     u20570:
 26289                           
 26290                           ; BSR set to: 0
 26291                           
 26292                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 26293  003C12  9487               	bcf	135,2,c	;volatile
 26294  003C14  0012               	return	
 26295  003C16                     l17081:
 26296                           
 26297                           ; BSR set to: 0
 26298  003C16  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26299  003C18  B4D8               	btfsc	status,2,c
 26300  003C1A  D76E               	goto	l17023
 26301                           
 26302                           ; BSR set to: 0
 26303  003C1C  0E02               	movlw	2
 26304  003C1E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26305  003C20  A4D8               	btfss	status,2,c
 26306  003C22  0012               	return	
 26307  003C24  D769               	goto	l17023
 26308  003C26                     l17087:
 26309                           
 26310                           ; BSR set to: 1
 26311                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 26312  003C26  0E00               	movlw	0
 26313  003C28  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26314                           
 26315                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 26316  003C2A  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 26317  003C2C  A4D8               	btfss	status,2,c
 26318  003C2E  D00C               	goto	l17093
 26319                           
 26320                           ; BSR set to: 1
 26321  003C30  0E03               	movlw	3
 26322  003C32  0100               	movlb	0	; () banked
 26323  003C34  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26324  003C36  A4D8               	btfss	status,2,c
 26325  003C38  D007               	goto	l17093
 26326                           
 26327                           ; BSR set to: 0
 26328                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 26329  003C3A  0E00               	movlw	0
 26330  003C3C  0101               	movlb	1	; () banked
 26331  003C3E  6FDD               	movwf	(_ts_system+67)& (0+255),b	;volatile
 26332  003C40  0E28               	movlw	40
 26333  003C42  6FDC               	movwf	(_ts_system+66)& (0+255),b	;volatile
 26334                           
 26335                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 26336  003C44  0E01               	movlw	1
 26337  003C46  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26338  003C48                     l17093:
 26339                           
 26340                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 26341  003C48  0101               	movlb	1	; () banked
 26342  003C4A  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26343  003C4C  D005               	goto	u20620
 26344  003C4E  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26345  003C50  E105               	bnz	l17097
 26346  003C52  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26347  003C54  B0D8               	btfsc	status,0,c
 26348  003C56  D002               	goto	l17097
 26349  003C58                     u20620:
 26350                           
 26351                           ; BSR set to: 1
 26352  003C58  0100               	movlb	0	; () banked
 26353  003C5A  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26354  003C5C                     l17097:
 26355                           
 26356                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 26357  003C5C  0E04               	movlw	4
 26358  003C5E  0101               	movlb	1	; () banked
 26359  003C60  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
 26360  003C62  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26361  003C64  A4D8               	btfss	status,2,c
 26362  003C66  D01B               	goto	l17109
 26363                           
 26364                           ; BSR set to: 1
 26365                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26366  003C68  0E00               	movlw	0
 26367  003C6A  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26368                           
 26369                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 26370  003C6C  0E00               	movlw	0
 26371  003C6E  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26372                           
 26373                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 26374  003C70  0100               	movlb	0	; () banked
 26375  003C72  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26376  003C74  A4D8               	btfss	status,2,c
 26377  003C76  D00A               	goto	u20670
 26378                           
 26379                           ; BSR set to: 0
 26380  003C78  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26381  003C7A  B4D8               	btfsc	status,2,c
 26382  003C7C  D003               	goto	u20660
 26383                           
 26384                           ; BSR set to: 0
 26385  003C7E  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26386  003C80  A4D8               	btfss	status,2,c
 26387  003C82  D004               	goto	u20670
 26388  003C84                     u20660:
 26389                           
 26390                           ; BSR set to: 0
 26391  003C84  0E02               	movlw	2
 26392  003C86  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 26393  003C88  A4D8               	btfss	status,2,c
 26394  003C8A  D007               	goto	l2472
 26395  003C8C                     u20670:
 26396                           
 26397                           ; BSR set to: 0
 26398                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 26399  003C8C  0E00               	movlw	0
 26400  003C8E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26401  003C90  0E00               	movlw	0
 26402  003C92  6E11               	movwf	setRGB_ON@Freq^0,c
 26403  003C94  0E01               	movlw	1
 26404  003C96  EC46  F03B         	call	_setRGB_ON
 26405  003C9A                     l2472:
 26406  003C9A  9487               	bcf	135,2,c	;volatile
 26407  003C9C  0012               	return	
 26408  003C9E                     l17109:
 26409                           
 26410                           ; BSR set to: 1
 26411                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26412  003C9E  0100               	movlb	0	; () banked
 26413  003CA0  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26414  003CA2  A4D8               	btfss	status,2,c
 26415  003CA4  D008               	goto	l17113
 26416                           
 26417                           ; BSR set to: 0
 26418                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 26419  003CA6  0E00               	movlw	0
 26420  003CA8  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26421  003CAA  0E0A               	movlw	10
 26422  003CAC  6E11               	movwf	setRGB_ON@Freq^0,c
 26423  003CAE  0E02               	movlw	2
 26424  003CB0  EC46  F03B         	call	_setRGB_ON
 26425                           
 26426                           ;outputs_MC50.c: 999:             }
 26427  003CB4  D007               	goto	l17115
 26428  003CB6                     l17113:
 26429                           
 26430                           ; BSR set to: 0
 26431                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 26432  003CB6  0E00               	movlw	0
 26433  003CB8  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26434  003CBA  0E00               	movlw	0
 26435  003CBC  6E11               	movwf	setRGB_ON@Freq^0,c
 26436  003CBE  0E02               	movlw	2
 26437  003CC0  EC46  F03B         	call	_setRGB_ON
 26438  003CC4                     l17115:
 26439                           
 26440                           ; BSR set to: 1
 26441                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 26442  003CC4  0100               	movlb	0	; () banked
 26443  003CC6  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26444  003CC8  A4D8               	btfss	status,2,c
 26445  003CCA  D007               	goto	l17119
 26446                           
 26447                           ; BSR set to: 0
 26448                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 26449  003CCC  0E00               	movlw	0
 26450  003CCE  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26451  003CD0  0E14               	movlw	20
 26452  003CD2  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26453  003CD4  EC15  F045         	call	_setFlashLigth_ON	;wreg free
 26454                           
 26455                           ;outputs_MC50.c: 1011:             }
 26456  003CD8  D00D               	goto	l17125
 26457  003CDA                     l17119:
 26458                           
 26459                           ; BSR set to: 0
 26460  003CDA  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26461  003CDC  B4D8               	btfsc	status,2,c
 26462  003CDE  D004               	goto	u20710
 26463                           
 26464                           ; BSR set to: 0
 26465  003CE0  0E02               	movlw	2
 26466  003CE2  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26467  003CE4  A4D8               	btfss	status,2,c
 26468  003CE6  D006               	goto	l17125
 26469  003CE8                     u20710:
 26470                           
 26471                           ; BSR set to: 0
 26472                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 26473  003CE8  0E00               	movlw	0
 26474  003CEA  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26475  003CEC  0E00               	movlw	0
 26476  003CEE  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26477  003CF0  EC15  F045         	call	_setFlashLigth_ON	;wreg free
 26478  003CF4                     l17125:
 26479                           
 26480                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 26481  003CF4  0E03               	movlw	3
 26482  003CF6  0100               	movlb	0	; () banked
 26483  003CF8  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26484  003CFA  A4D8               	btfss	status,2,c
 26485  003CFC  0012               	return	
 26486                           
 26487                           ; BSR set to: 0
 26488                           
 26489                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 26490  003CFE  9487               	bcf	135,2,c	;volatile
 26491  003D00  0012               	return		;funcret
 26492  003D02                     __end_of_ControlLights:
 26493                           	callstack 0
 26494                           
 26495 ;; *************** function _setRGB_ON *****************
 26496 ;; Defined at:
 26497 ;;		line 1028 in file "outputs_MC50.c"
 26498 ;; Parameters:    Size  Location     Type
 26499 ;;  RGBLigth        1    wreg     enum E10611
 26500 ;;  Freq            2   16[COMRAM] int 
 26501 ;; Auto vars:     Size  Location     Type
 26502 ;;  RGBLigth        1   20[COMRAM] enum E10611
 26503 ;; Return value:  Size  Location     Type
 26504 ;;                  1    wreg      void 
 26505 ;; Registers used:
 26506 ;;		wreg, status,2, status,0, cstack
 26507 ;; Tracked objects:
 26508 ;;		On entry : 3E/0
 26509 ;;		On exit  : 3F/1
 26510 ;;		Unchanged: 0/0
 26511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26515 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26516 ;;Total ram usage:        5 bytes
 26517 ;; Hardware stack levels used: 1
 26518 ;; Hardware stack levels required when called: 5
 26519 ;; This function calls:
 26520 ;;		_RGB_Set
 26521 ;; This function is called by:
 26522 ;;		_ControlLights
 26523 ;; This function uses a non-reentrant model
 26524 ;;
 26525                           
 26526                           	psect	text112
 26527  00768C                     __ptext112:
 26528                           	callstack 0
 26529  00768C                     _setRGB_ON:
 26530                           	callstack 24
 26531                           
 26532                           ;incstack = 0
 26533                           ;setRGB_ON@RGBLigth stored from wreg
 26534  00768C  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 26535                           
 26536                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 26537  00768E  8E83               	bsf	131,7,c	;volatile
 26538                           
 26539                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 26540  007690  5011               	movf	setRGB_ON@Freq^0,w,c
 26541  007692  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 26542  007694  B4D8               	btfsc	status,2,c
 26543  007696  D015               	goto	l14757
 26544  007698  0101               	movlb	1	; () banked
 26545  00769A  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 26546  00769C  B4D8               	btfsc	status,2,c
 26547  00769E  D011               	goto	l14757
 26548  0076A0  D024               	goto	l14759
 26549  0076A2                     l14747:
 26550                           
 26551                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 26552  0076A2  0E20               	movlw	32
 26553  0076A4  ECF0  F048         	call	_RGB_Set
 26554                           
 26555                           ;outputs_MC50.c: 1044:             break;
 26556  0076A8  D020               	goto	l14759
 26557  0076AA                     l14749:
 26558                           
 26559                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 26560  0076AA  0E04               	movlw	4
 26561  0076AC  ECF0  F048         	call	_RGB_Set
 26562                           
 26563                           ;outputs_MC50.c: 1048:             break;
 26564  0076B0  D01C               	goto	l14759
 26565  0076B2                     l14751:
 26566                           
 26567                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 26568  0076B2  0E00               	movlw	0
 26569  0076B4  ECF0  F048         	call	_RGB_Set
 26570                           
 26571                           ;outputs_MC50.c: 1052:             break;
 26572  0076B8  D018               	goto	l14759
 26573  0076BA                     l14753:
 26574                           
 26575                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 26576  0076BA  0E24               	movlw	36
 26577  0076BC  ECF0  F048         	call	_RGB_Set
 26578                           
 26579                           ;outputs_MC50.c: 1056:             break;
 26580  0076C0  D014               	goto	l14759
 26581  0076C2                     l14757:
 26582  0076C2  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 26583  0076C4  6E13               	movwf	??_setRGB_ON^0,c
 26584  0076C6  6A14               	clrf	(??_setRGB_ON+1)^0,c
 26585                           
 26586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26587                           ; Switch size 1, requested type "simple"
 26588                           ; Number of cases is 1, Range of values is 0 to 0
 26589                           ; switch strategies available:
 26590                           ; Name         Instructions Cycles
 26591                           ; simple_byte            4     3 (average)
 26592                           ;	Chosen strategy is simple_byte
 26593  0076C8  5014               	movf	(??_setRGB_ON+1)^0,w,c
 26594  0076CA  0A00               	xorlw	0	; case 0
 26595  0076CC  A4D8               	btfss	status,2,c
 26596  0076CE  D00D               	goto	l14759
 26597                           
 26598                           ; Switch size 1, requested type "simple"
 26599                           ; Number of cases is 4, Range of values is 1 to 4
 26600                           ; switch strategies available:
 26601                           ; Name         Instructions Cycles
 26602                           ; simple_byte           13     7 (average)
 26603                           ;	Chosen strategy is simple_byte
 26604  0076D0  5013               	movf	??_setRGB_ON^0,w,c
 26605  0076D2  0A01               	xorlw	1	; case 1
 26606  0076D4  B4D8               	btfsc	status,2,c
 26607  0076D6  D7ED               	goto	l14751
 26608  0076D8  0A03               	xorlw	3	; case 2
 26609  0076DA  B4D8               	btfsc	status,2,c
 26610  0076DC  D7E6               	goto	l14749
 26611  0076DE  0A01               	xorlw	1	; case 3
 26612  0076E0  B4D8               	btfsc	status,2,c
 26613  0076E2  D7DF               	goto	l14747
 26614  0076E4  0A07               	xorlw	7	; case 4
 26615  0076E6  B4D8               	btfsc	status,2,c
 26616  0076E8  D7E8               	goto	l14753
 26617  0076EA                     l14759:
 26618                           
 26619                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 26620  0076EA  0101               	movlb	1	; () banked
 26621  0076EC  BFB7               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 26622  0076EE  D005               	goto	u15420
 26623  0076F0  51B7               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 26624  0076F2  E113               	bnz	l2502
 26625  0076F4  05B6               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 26626  0076F6  B0D8               	btfsc	status,0,c
 26627  0076F8  0012               	return	
 26628  0076FA                     u15420:
 26629                           
 26630                           ; BSR set to: 1
 26631  0076FA  5011               	movf	setRGB_ON@Freq^0,w,c
 26632  0076FC  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 26633  0076FE  B4D8               	btfsc	status,2,c
 26634  007700  0012               	return	
 26635                           
 26636                           ; BSR set to: 1
 26637                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 26638  007702  C011  F1B6         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 26639  007706  C012  F1B7         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 26640                           
 26641                           ; BSR set to: 1
 26642                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 26643  00770A  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 26644  00770C  A4D8               	btfss	status,2,c
 26645  00770E  D003               	goto	l14769
 26646                           
 26647                           ; BSR set to: 1
 26648                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 26649  007710  0E00               	movlw	0
 26650  007712  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 26651                           
 26652                           ;outputs_MC50.c: 1067:         }
 26653  007714  0012               	return	
 26654  007716                     l14769:
 26655                           
 26656                           ; BSR set to: 1
 26657                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 26658  007716  0E01               	movlw	1
 26659  007718  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 26660  00771A                     l2502:
 26661                           
 26662                           ; BSR set to: 1
 26663  00771A  0012               	return		;funcret
 26664  00771C                     __end_of_setRGB_ON:
 26665                           	callstack 0
 26666                           
 26667 ;; *************** function _RGB_Set *****************
 26668 ;; Defined at:
 26669 ;;		line 98 in file "outputs_MC50.c"
 26670 ;; Parameters:    Size  Location     Type
 26671 ;;  value           1    wreg     unsigned char 
 26672 ;; Auto vars:     Size  Location     Type
 26673 ;;  value           1   15[COMRAM] unsigned char 
 26674 ;; Return value:  Size  Location     Type
 26675 ;;                  1    wreg      void 
 26676 ;; Registers used:
 26677 ;;		wreg, status,2, status,0
 26678 ;; Tracked objects:
 26679 ;;		On entry : 0/0
 26680 ;;		On exit  : 0/0
 26681 ;;		Unchanged: 0/0
 26682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26686 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26687 ;;Total ram usage:        1 bytes
 26688 ;; Hardware stack levels used: 1
 26689 ;; Hardware stack levels required when called: 4
 26690 ;; This function calls:
 26691 ;;		Nothing
 26692 ;; This function is called by:
 26693 ;;		_setRGB_ON
 26694 ;; This function uses a non-reentrant model
 26695 ;;
 26696                           
 26697                           	psect	text113
 26698  0091E0                     __ptext113:
 26699                           	callstack 0
 26700  0091E0                     _RGB_Set:
 26701                           	callstack 24
 26702                           
 26703                           ; BSR set to: 1
 26704                           ;incstack = 0
 26705                           ;RGB_Set@value stored from wreg
 26706  0091E0  6E10               	movwf	RGB_Set@value^0,c
 26707                           
 26708                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 26709  0091E2  0EDB               	movlw	219
 26710  0091E4  1685               	andwf	133,f,c	;volatile
 26711                           
 26712                           ;outputs_MC50.c: 101:    LATC |= value;
 26713  0091E6  5010               	movf	RGB_Set@value^0,w,c	;volatile
 26714  0091E8  1285               	iorwf	133,f,c	;volatile
 26715  0091EA  9E83               	bcf	131,7,c	;volatile
 26716  0091EC  0012               	return		;funcret
 26717  0091EE                     __end_of_RGB_Set:
 26718                           	callstack 0
 26719                           
 26720 ;; *************** function _setFlashLigth_ON *****************
 26721 ;; Defined at:
 26722 ;;		line 1077 in file "outputs_MC50.c"
 26723 ;; Parameters:    Size  Location     Type
 26724 ;;  Freq            2   15[COMRAM] int 
 26725 ;; Auto vars:     Size  Location     Type
 26726 ;;		None
 26727 ;; Return value:  Size  Location     Type
 26728 ;;                  1    wreg      void 
 26729 ;; Registers used:
 26730 ;;		wreg, status,2, status,0
 26731 ;; Tracked objects:
 26732 ;;		On entry : 3E/1
 26733 ;;		On exit  : 3F/1
 26734 ;;		Unchanged: 0/0
 26735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26739 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26740 ;;Total ram usage:        2 bytes
 26741 ;; Hardware stack levels used: 1
 26742 ;; Hardware stack levels required when called: 4
 26743 ;; This function calls:
 26744 ;;		Nothing
 26745 ;; This function is called by:
 26746 ;;		_ControlLights
 26747 ;; This function uses a non-reentrant model
 26748 ;;
 26749                           
 26750                           	psect	text114
 26751  008A2A                     __ptext114:
 26752                           	callstack 0
 26753  008A2A                     _setFlashLigth_ON:
 26754                           	callstack 25
 26755                           
 26756                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 26757                           
 26758                           ;incstack = 0
 26759  008A2A  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 26760  008A2C  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 26761  008A2E  B4D8               	btfsc	status,2,c
 26762  008A30  D004               	goto	u15370
 26763  008A32  0101               	movlb	1	; () banked
 26764  008A34  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 26765  008A36  A4D8               	btfss	status,2,c
 26766  008A38  D002               	goto	l2511
 26767  008A3A                     u15370:
 26768                           
 26769                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 26770  008A3A  8487               	bsf	135,2,c	;volatile
 26771  008A3C  D001               	goto	l14735
 26772  008A3E                     l2511:
 26773                           
 26774                           ; BSR set to: 1
 26775  008A3E  9487               	bcf	135,2,c	;volatile
 26776  008A40                     l14735:
 26777                           
 26778                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 26779  008A40  0101               	movlb	1	; () banked
 26780  008A42  BFB9               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 26781  008A44  D005               	goto	u15380
 26782  008A46  51B9               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 26783  008A48  E10D               	bnz	l2514
 26784  008A4A  05B8               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 26785  008A4C  B0D8               	btfsc	status,0,c
 26786  008A4E  0012               	return	
 26787  008A50                     u15380:
 26788                           
 26789                           ; BSR set to: 1
 26790  008A50  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 26791  008A52  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 26792  008A54  B4D8               	btfsc	status,2,c
 26793  008A56  0012               	return	
 26794                           
 26795                           ; BSR set to: 1
 26796                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 26797  008A58  C010  F1B8         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 26798  008A5C  C011  F1B9         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 26799                           
 26800                           ; BSR set to: 1
 26801                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 26802  008A60  0E01               	movlw	1
 26803  008A62  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 26804  008A64                     l2514:
 26805                           
 26806                           ; BSR set to: 1
 26807  008A64  0012               	return		;funcret
 26808  008A66                     __end_of_setFlashLigth_ON:
 26809                           	callstack 0
 26810                           
 26811 ;; *************** function _ControlInputs *****************
 26812 ;; Defined at:
 26813 ;;		line 674 in file "inputs_MC50.c"
 26814 ;; Parameters:    Size  Location     Type
 26815 ;;		None
 26816 ;; Auto vars:     Size  Location     Type
 26817 ;;		None
 26818 ;; Return value:  Size  Location     Type
 26819 ;;                  1    wreg      void 
 26820 ;; Registers used:
 26821 ;;		wreg, status,2, status,0
 26822 ;; Tracked objects:
 26823 ;;		On entry : 3E/1
 26824 ;;		On exit  : 3E/0
 26825 ;;		Unchanged: 0/0
 26826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26831 ;;Total ram usage:        0 bytes
 26832 ;; Hardware stack levels used: 1
 26833 ;; Hardware stack levels required when called: 4
 26834 ;; This function calls:
 26835 ;;		Nothing
 26836 ;; This function is called by:
 26837 ;;		_main
 26838 ;; This function uses a non-reentrant model
 26839 ;;
 26840                           
 26841                           	psect	text115
 26842  00660E                     __ptext115:
 26843                           	callstack 0
 26844  00660E                     _ControlInputs:
 26845                           	callstack 26
 26846                           
 26847                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 26848                           
 26849                           ; BSR set to: 1
 26850                           ;incstack = 0
 26851  00660E  0E03               	movlw	3
 26852  006610  0101               	movlb	1	; () banked
 26853  006612  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26854  006614  B4D8               	btfsc	status,2,c
 26855  006616  D00C               	goto	u19330
 26856                           
 26857                           ; BSR set to: 1
 26858  006618  A291               	btfss	145,1,c	;volatile
 26859  00661A  D004               	goto	u19310
 26860                           
 26861                           ; BSR set to: 1
 26862  00661C  0100               	movlb	0	; () banked
 26863  00661E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26864  006620  B4D8               	btfsc	status,2,c
 26865  006622  D006               	goto	u19330
 26866  006624                     u19310:
 26867  006624  A091               	btfss	145,0,c	;volatile
 26868  006626  D00A               	goto	l16703
 26869  006628  0100               	movlb	0	; () banked
 26870  00662A  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26871  00662C  A4D8               	btfss	status,2,c
 26872  00662E  D006               	goto	l16703
 26873  006630                     u19330:
 26874  006630  0101               	movlb	1	; () banked
 26875  006632  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 26876  006634  A4D8               	btfss	status,2,c
 26877  006636  D002               	goto	l16703
 26878                           
 26879                           ; BSR set to: 1
 26880                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 26881  006638  0E00               	movlw	0
 26882  00663A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26883  00663C                     l16703:
 26884                           
 26885                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 26886  00663C  0101               	movlb	1	; () banked
 26887  00663E  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26888  006640  B4D8               	btfsc	status,2,c
 26889  006642  D010               	goto	u19400
 26890                           
 26891                           ; BSR set to: 1
 26892  006644  0E02               	movlw	2
 26893  006646  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26894  006648  B4D8               	btfsc	status,2,c
 26895  00664A  D00C               	goto	u19400
 26896                           
 26897                           ; BSR set to: 1
 26898  00664C  A091               	btfss	145,0,c	;volatile
 26899  00664E  D004               	goto	u19380
 26900                           
 26901                           ; BSR set to: 1
 26902  006650  0100               	movlb	0	; () banked
 26903  006652  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26904  006654  B4D8               	btfsc	status,2,c
 26905  006656  D006               	goto	u19400
 26906  006658                     u19380:
 26907  006658  A291               	btfss	145,1,c	;volatile
 26908  00665A  D00A               	goto	l16717
 26909  00665C  0100               	movlb	0	; () banked
 26910  00665E  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26911  006660  A4D8               	btfss	status,2,c
 26912  006662  D006               	goto	l16717
 26913  006664                     u19400:
 26914  006664  0101               	movlb	1	; () banked
 26915  006666  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 26916  006668  A4D8               	btfss	status,2,c
 26917  00666A  D002               	goto	l16717
 26918                           
 26919                           ; BSR set to: 1
 26920                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 26921  00666C  0E00               	movlw	0
 26922  00666E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26923  006670                     l16717:
 26924                           
 26925                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 26926  006670  0101               	movlb	1	; () banked
 26927  006672  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 26928  006674  B4D8               	btfsc	status,2,c
 26929  006676  0012               	return	
 26930                           
 26931                           ; BSR set to: 1
 26932                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 26933  006678  0100               	movlb	0	; () banked
 26934  00667A  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 26935  00667C  A4D8               	btfss	status,2,c
 26936  00667E  D02B               	goto	l16743
 26937                           
 26938                           ; BSR set to: 0
 26939  006680  0101               	movlb	1	; () banked
 26940  006682  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 26941  006684  A4D8               	btfss	status,2,c
 26942  006686  D027               	goto	l16743
 26943                           
 26944                           ; BSR set to: 1
 26945  006688  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 26946  00668A  A4D8               	btfss	status,2,c
 26947  00668C  D024               	goto	l16743
 26948                           
 26949                           ; BSR set to: 1
 26950                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 26951  00668E  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26952  006690  B4D8               	btfsc	status,2,c
 26953  006692  D004               	goto	u19470
 26954                           
 26955                           ; BSR set to: 1
 26956  006694  0E02               	movlw	2
 26957  006696  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26958  006698  A4D8               	btfss	status,2,c
 26959  00669A  D007               	goto	l16733
 26960  00669C                     u19470:
 26961                           
 26962                           ; BSR set to: 1
 26963  00669C  0100               	movlb	0	; () banked
 26964  00669E  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 26965  0066A0  A4D8               	btfss	status,2,c
 26966  0066A2  D003               	goto	l16733
 26967                           
 26968                           ; BSR set to: 0
 26969                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 26970  0066A4  0E00               	movlw	0
 26971  0066A6  0101               	movlb	1	; () banked
 26972  0066A8  D015               	goto	L102
 26973  0066AA                     l16733:
 26974  0066AA  0E03               	movlw	3
 26975  0066AC  0101               	movlb	1	; () banked
 26976  0066AE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26977  0066B0  A4D8               	btfss	status,2,c
 26978  0066B2  D011               	goto	l16743
 26979                           
 26980                           ; BSR set to: 1
 26981  0066B4  0100               	movlb	0	; () banked
 26982  0066B6  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 26983  0066B8  A4D8               	btfss	status,2,c
 26984  0066BA  D00D               	goto	l16743
 26985                           
 26986                           ; BSR set to: 0
 26987  0066BC  0101               	movlb	1	; () banked
 26988  0066BE  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 26989  0066C0  D005               	goto	u19510
 26990  0066C2  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 26991  0066C4  E108               	bnz	l16743
 26992  0066C6  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 26993  0066C8  B0D8               	btfsc	status,0,c
 26994  0066CA  D005               	goto	l16743
 26995  0066CC                     u19510:
 26996                           
 26997                           ; BSR set to: 1
 26998  0066CC  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 26999  0066CE  A4D8               	btfss	status,2,c
 27000  0066D0  D002               	goto	l16743
 27001                           
 27002                           ; BSR set to: 1
 27003                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 27004  0066D2  0E00               	movlw	0
 27005  0066D4                     L102:
 27006  0066D4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27007  0066D6                     l16743:
 27008                           
 27009                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 27010  0066D6  0100               	movlb	0	; () banked
 27011  0066D8  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 27012  0066DA  B4D8               	btfsc	status,2,c
 27013  0066DC  D003               	goto	u19540
 27014                           
 27015                           ; BSR set to: 0
 27016  0066DE  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 27017  0066E0  A4D8               	btfss	status,2,c
 27018  0066E2  0012               	return	
 27019  0066E4                     u19540:
 27020                           
 27021                           ; BSR set to: 0
 27022  0066E4  0101               	movlb	1	; () banked
 27023  0066E6  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 27024  0066E8  A4D8               	btfss	status,2,c
 27025  0066EA  0012               	return	
 27026                           
 27027                           ; BSR set to: 1
 27028  0066EC  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 27029  0066EE  A4D8               	btfss	status,2,c
 27030  0066F0  0012               	return	
 27031                           
 27032                           ; BSR set to: 1
 27033                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 27034  0066F2  0E03               	movlw	3
 27035  0066F4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27036  0066F6  A4D8               	btfss	status,2,c
 27037  0066F8  D008               	goto	l16757
 27038                           
 27039                           ; BSR set to: 1
 27040  0066FA  0100               	movlb	0	; () banked
 27041  0066FC  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 27042  0066FE  A4D8               	btfss	status,2,c
 27043  006700  D004               	goto	l16757
 27044                           
 27045                           ; BSR set to: 0
 27046                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 27047  006702  0E00               	movlw	0
 27048  006704  0101               	movlb	1	; () banked
 27049  006706  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27050                           
 27051                           ;inputs_MC50.c: 727:             }
 27052  006708  0012               	return	
 27053  00670A                     l16757:
 27054  00670A  0101               	movlb	1	; () banked
 27055  00670C  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27056  00670E  B4D8               	btfsc	status,2,c
 27057  006710  D004               	goto	u19600
 27058                           
 27059                           ; BSR set to: 1
 27060  006712  0E02               	movlw	2
 27061  006714  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27062  006716  A4D8               	btfss	status,2,c
 27063  006718  D004               	goto	u19610
 27064  00671A                     u19600:
 27065                           
 27066                           ; BSR set to: 1
 27067  00671A  0100               	movlb	0	; () banked
 27068  00671C  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 27069  00671E  B4D8               	btfsc	status,2,c
 27070  006720  D004               	goto	u19620
 27071  006722                     u19610:
 27072  006722  0100               	movlb	0	; () banked
 27073  006724  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 27074  006726  A4D8               	btfss	status,2,c
 27075  006728  0012               	return	
 27076  00672A                     u19620:
 27077                           
 27078                           ; BSR set to: 0
 27079                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 27080  00672A  0E00               	movlw	0
 27081  00672C  0101               	movlb	1	; () banked
 27082  00672E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27083  006730  0012               	return	
 27084  006732                     __end_of_ControlInputs:
 27085                           	callstack 0
 27086                           
 27087 ;; *************** function _ControlCurrent *****************
 27088 ;; Defined at:
 27089 ;;		line 342 in file "controlCurrent_MC50.c"
 27090 ;; Parameters:    Size  Location     Type
 27091 ;;		None
 27092 ;; Auto vars:     Size  Location     Type
 27093 ;;		None
 27094 ;; Return value:  Size  Location     Type
 27095 ;;                  1    wreg      void 
 27096 ;; Registers used:
 27097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27098 ;; Tracked objects:
 27099 ;;		On entry : 3E/1
 27100 ;;		On exit  : 3E/0
 27101 ;;		Unchanged: 0/0
 27102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27105 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27106 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27107 ;;Total ram usage:        4 bytes
 27108 ;; Hardware stack levels used: 1
 27109 ;; Hardware stack levels required when called: 6
 27110 ;; This function calls:
 27111 ;;		_GetMotorPower
 27112 ;;		_getCurrentComparator
 27113 ;;		_refreshADCZeroOffset
 27114 ;;		_refreshCurrent
 27115 ;; This function is called by:
 27116 ;;		_main
 27117 ;; This function uses a non-reentrant model
 27118 ;;
 27119                           
 27120                           	psect	text116
 27121  005E72                     __ptext116:
 27122                           	callstack 0
 27123  005E72                     _ControlCurrent:
 27124                           	callstack 24
 27125                           
 27126                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 27127                           
 27128                           ;incstack = 0
 27129  005E72  EC0D  F044         	call	_refreshCurrent	;wreg free
 27130                           
 27131                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 27132  005E76  EC2C  F035         	call	_refreshADCZeroOffset	;wreg free
 27133                           
 27134                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 27135  005E7A  ECEE  F037         	call	_GetMotorPower	;wreg free
 27136  005E7E  6E23               	movwf	??_ControlCurrent^0,c
 27137  005E80  5023               	movf	??_ControlCurrent^0,w,c
 27138  005E82  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 27139  005E84  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 27140                           
 27141                           ; BSR set to: 1
 27142                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 27143  005E86  EC4E  F02B         	call	_getCurrentComparator	;wreg free
 27144  005E8A  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 27145  005E8E  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 27146  005E92  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 27147  005E96  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 27148                           
 27149                           ; BSR set to: 1
 27150                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 27151  005E9A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27152  005E9C  A4D8               	btfss	status,2,c
 27153  005E9E  D00F               	goto	l22609
 27154                           
 27155                           ; BSR set to: 1
 27156                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 27157  005EA0  0E00               	movlw	0
 27158  005EA2  0100               	movlb	0	; () banked
 27159  005EA4  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27160                           
 27161                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 27162  005EA6  0E00               	movlw	0
 27163  005EA8  0101               	movlb	1	; () banked
 27164  005EAA  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27165                           
 27166                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 27167  005EAC  0E00               	movlw	0
 27168  005EAE  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27169                           
 27170                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 27171  005EB0  0E00               	movlw	0
 27172  005EB2  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27173                           
 27174                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 27175  005EB4  0E00               	movlw	0
 27176  005EB6  6FD3               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27177  005EB8  0E14               	movlw	20
 27178  005EBA  6FD2               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27179                           
 27180                           ;controlCurrent_MC50.c: 365:     }
 27181  005EBC  0012               	return	
 27182  005EBE                     l22609:
 27183                           
 27184                           ; BSR set to: 1
 27185  005EBE  517B               	movf	_powerControl_st& (0+255),w,b
 27186  005EC0  A4D8               	btfss	status,2,c
 27187  005EC2  D05D               	goto	l22643
 27188                           
 27189                           ; BSR set to: 1
 27190                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 27191  005EC4  0E00               	movlw	0
 27192  005EC6  6FD3               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27193  005EC8  0E14               	movlw	20
 27194  005ECA  6FD2               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27195                           
 27196                           ; BSR set to: 1
 27197                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 27198  005ECC  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 27199  005ECE  6E23               	movwf	??_ControlCurrent^0,c
 27200  005ED0  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 27201  005ED2  6E24               	movwf	(??_ControlCurrent+1)^0,c
 27202  005ED4  6A25               	clrf	(??_ControlCurrent+2)^0,c
 27203  005ED6  6A26               	clrf	(??_ControlCurrent+3)^0,c
 27204  005ED8  5023               	movf	??_ControlCurrent^0,w,c
 27205  005EDA  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 27206  005EDC  5024               	movf	(??_ControlCurrent+1)^0,w,c
 27207  005EDE  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 27208  005EE0  5025               	movf	(??_ControlCurrent+2)^0,w,c
 27209  005EE2  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 27210  005EE4  5026               	movf	(??_ControlCurrent+3)^0,w,c
 27211  005EE6  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 27212  005EE8  B0D8               	btfsc	status,0,c
 27213  005EEA  D03E               	goto	l22641
 27214                           
 27215                           ; BSR set to: 1
 27216  005EEC  BFB5               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27217  005EEE  D005               	goto	u27430
 27218  005EF0  51B5               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27219  005EF2  E13A               	bnz	l22641
 27220  005EF4  05B4               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27221  005EF6  B0D8               	btfsc	status,0,c
 27222  005EF8  D037               	goto	l22641
 27223  005EFA                     u27430:
 27224                           
 27225                           ; BSR set to: 1
 27226  005EFA  0100               	movlb	0	; () banked
 27227  005EFC  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 27228  005EFE  B4D8               	btfsc	status,2,c
 27229  005F00  D033               	goto	l22641
 27230                           
 27231                           ; BSR set to: 0
 27232  005F02  0101               	movlb	1	; () banked
 27233  005F04  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27234  005F06  D005               	goto	u27450
 27235  005F08  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27236  005F0A  E12E               	bnz	l22641
 27237  005F0C  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27238  005F0E  B0D8               	btfsc	status,0,c
 27239  005F10  D02B               	goto	l22641
 27240  005F12                     u27450:
 27241                           
 27242                           ; BSR set to: 1
 27243                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 27244  005F12  0100               	movlb	0	; () banked
 27245  005F14  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 27246  005F16  B4D8               	btfsc	status,2,c
 27247  005F18  D00B               	goto	l22627
 27248                           
 27249                           ; BSR set to: 0
 27250                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 27251  005F1A  0101               	movlb	1	; () banked
 27252  005F1C  5189               	movf	_erroranterior& (0+255),w,b	;volatile
 27253  005F1E  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 27254  005F20  518A               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 27255  005F22  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 27256  005F24  B0D8               	btfsc	status,0,c
 27257  005F26  D004               	goto	l22627
 27258                           
 27259                           ; BSR set to: 1
 27260                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 27261  005F28  0E00               	movlw	0
 27262  005F2A  0100               	movlb	0	; () banked
 27263  005F2C  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27264                           
 27265                           ;controlCurrent_MC50.c: 384:                  }
 27266  005F2E  D002               	goto	l22629
 27267  005F30                     l22627:
 27268                           
 27269                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 27270  005F30  0100               	movlb	0	; () banked
 27271  005F32  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 27272  005F34                     l22629:
 27273                           
 27274                           ; BSR set to: 0
 27275                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 27276  005F34  C12E  F189         	movff	_var_sys+46,_erroranterior	;volatile
 27277  005F38  C12F  F18A         	movff	_var_sys+47,_erroranterior+1	;volatile
 27278                           
 27279                           ; BSR set to: 0
 27280                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 27281                           
 27282                           ;controlCurrent_MC50.c: 390:              }
 27283  005F3C  0101               	movlb	1	; () banked
 27284  005F3E  BFC9               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 27285  005F40  D005               	goto	u27480
 27286  005F42  51C9               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 27287  005F44  E14F               	bnz	l1405
 27288  005F46  05C8               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 27289  005F48  B0D8               	btfsc	status,0,c
 27290  005F4A  0012               	return	
 27291  005F4C                     u27480:
 27292                           
 27293                           ; BSR set to: 1
 27294  005F4C  0E01               	movlw	1
 27295  005F4E  0100               	movlb	0	; () banked
 27296  005F50  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 27297  005F52  0012               	return	
 27298                           
 27299                           ; BSR set to: 0
 27300                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 27301  005F54  0E00               	movlw	0
 27302  005F56  0101               	movlb	1	; () banked
 27303  005F58  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27304                           
 27305                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 27306  005F5A  0E00               	movlw	0
 27307  005F5C  6FC5               	movwf	(_ts_system+43)& (0+255),b	;volatile
 27308  005F5E  0EC8               	movlw	200
 27309  005F60  6FC4               	movwf	(_ts_system+42)& (0+255),b	;volatile
 27310                           
 27311                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 27312  005F62  0E01               	movlw	1
 27313  005F64  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27314  005F66  0012               	return	
 27315  005F68                     l22641:
 27316                           
 27317                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 27318  005F68  0E00               	movlw	0
 27319  005F6A  0100               	movlb	0	; () banked
 27320  005F6C  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27321                           
 27322                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 27323  005F6E  0E00               	movlw	0
 27324  005F70  0101               	movlb	1	; () banked
 27325  005F72  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27326                           
 27327                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 27328  005F74  0E00               	movlw	0
 27329  005F76  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27330                           
 27331                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 27332  005F78  0E00               	movlw	0
 27333  005F7A  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27334  005F7C  0012               	return	
 27335  005F7E                     l22643:
 27336                           
 27337                           ; BSR set to: 1
 27338                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 27339  005F7E  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 27340  005F80  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 27341  005F82  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 27342  005F84  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 27343  005F86  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 27344  005F88  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 27345  005F8A  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 27346  005F8C  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 27347  005F8E  B0D8               	btfsc	status,0,c
 27348  005F90  D7EB               	goto	l22641
 27349                           
 27350                           ; BSR set to: 1
 27351  005F92  BFB5               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27352  005F94  D005               	goto	u27510
 27353  005F96  51B5               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27354  005F98  E1E7               	bnz	l22641
 27355  005F9A  05B4               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27356  005F9C  B0D8               	btfsc	status,0,c
 27357  005F9E  D7E4               	goto	l22641
 27358  005FA0                     u27510:
 27359                           
 27360                           ; BSR set to: 1
 27361  005FA0  BFD3               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 27362  005FA2  D005               	goto	u27520
 27363  005FA4  51D3               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 27364  005FA6  E1E0               	bnz	l22641
 27365  005FA8  05D2               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 27366  005FAA  B0D8               	btfsc	status,0,c
 27367  005FAC  D7DD               	goto	l22641
 27368  005FAE                     u27520:
 27369                           
 27370                           ; BSR set to: 1
 27371  005FAE  0100               	movlb	0	; () banked
 27372  005FB0  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 27373  005FB2  B4D8               	btfsc	status,2,c
 27374  005FB4  D7D9               	goto	l22641
 27375                           
 27376                           ; BSR set to: 0
 27377                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 27378  005FB6  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 27379                           
 27380                           ; BSR set to: 0
 27381                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 27382  005FB8  0101               	movlb	1	; () banked
 27383  005FBA  BFC9               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 27384  005FBC  D005               	goto	u27540
 27385  005FBE  51C9               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 27386  005FC0  E111               	bnz	l1405
 27387  005FC2  05C8               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 27388  005FC4  B0D8               	btfsc	status,0,c
 27389  005FC6  0012               	return	
 27390  005FC8                     u27540:
 27391                           
 27392                           ; BSR set to: 1
 27393  005FC8  0E02               	movlw	2
 27394  005FCA  0100               	movlb	0	; () banked
 27395  005FCC  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 27396  005FCE  0012               	return	
 27397                           
 27398                           ; BSR set to: 0
 27399                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 27400  005FD0  0E00               	movlw	0
 27401  005FD2  0101               	movlb	1	; () banked
 27402  005FD4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27403                           
 27404                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 27405  005FD6  0E00               	movlw	0
 27406  005FD8  6FC5               	movwf	(_ts_system+43)& (0+255),b	;volatile
 27407  005FDA  0EC8               	movlw	200
 27408  005FDC  6FC4               	movwf	(_ts_system+42)& (0+255),b	;volatile
 27409                           
 27410                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 27411  005FDE  0E01               	movlw	1
 27412  005FE0  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27413  005FE2  0012               	return	
 27414  005FE4                     l1405:
 27415  005FE4  0012               	return		;funcret
 27416  005FE6                     __end_of_ControlCurrent:
 27417                           	callstack 0
 27418                           
 27419 ;; *************** function _refreshCurrent *****************
 27420 ;; Defined at:
 27421 ;;		line 233 in file "controlCurrent_MC50.c"
 27422 ;; Parameters:    Size  Location     Type
 27423 ;;		None
 27424 ;; Auto vars:     Size  Location     Type
 27425 ;;		None
 27426 ;; Return value:  Size  Location     Type
 27427 ;;                  1    wreg      void 
 27428 ;; Registers used:
 27429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27430 ;; Tracked objects:
 27431 ;;		On entry : 3E/1
 27432 ;;		On exit  : 3F/0
 27433 ;;		Unchanged: 0/0
 27434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27439 ;;Total ram usage:        0 bytes
 27440 ;; Hardware stack levels used: 1
 27441 ;; Hardware stack levels required when called: 5
 27442 ;; This function calls:
 27443 ;;		_saveEnergyADCHist
 27444 ;;		_sumEnergyADC
 27445 ;;		_sumHIST
 27446 ;; This function is called by:
 27447 ;;		_ControlCurrent
 27448 ;; This function uses a non-reentrant model
 27449 ;;
 27450                           
 27451                           	psect	text117
 27452  00881A                     __ptext117:
 27453                           	callstack 0
 27454  00881A                     _refreshCurrent:
 27455                           	callstack 24
 27456                           
 27457                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 27458                           
 27459                           ;incstack = 0
 27460  00881A  0100               	movlb	0	; () banked
 27461  00881C  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27462  00881E  A4D8               	btfss	status,2,c
 27463  008820  D008               	goto	l14465
 27464                           
 27465                           ; BSR set to: 0
 27466  008822  0101               	movlb	1	; () banked
 27467  008824  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27468  008826  D005               	goto	l14465
 27469  008828  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27470  00882A  E109               	bnz	l1372
 27471  00882C  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27472  00882E  B0D8               	btfsc	status,0,c
 27473  008830  D006               	goto	l1372
 27474  008832                     l14465:
 27475                           
 27476                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 27477  008832  ECD4  F03B         	call	_sumEnergyADC	;wreg free
 27478  008836  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 27479  00883A  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 27480  00883E                     l1372:
 27481                           
 27482                           ; BSR set to: 1
 27483                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 27484  00883E  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 27485  008842  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 27486  008846  EC19  F047         	call	_saveEnergyADCHist	;wreg free
 27487                           
 27488                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 27489  00884A  EC29  F036         	call	_sumHIST	;wreg free
 27490  00884E  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 27491  008852  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 27492  008856  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 27493  00885A  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 27494                           
 27495                           ; BSR set to: 0
 27496  00885E  0012               	return		;funcret
 27497  008860                     __end_of_refreshCurrent:
 27498                           	callstack 0
 27499                           
 27500 ;; *************** function _sumHIST *****************
 27501 ;; Defined at:
 27502 ;;		line 199 in file "controlCurrent_MC50.c"
 27503 ;; Parameters:    Size  Location     Type
 27504 ;;		None
 27505 ;; Auto vars:     Size  Location     Type
 27506 ;;  sumH            4   27[COMRAM] unsigned long 
 27507 ;;  min             2   25[COMRAM] unsigned int 
 27508 ;;  max             2   23[COMRAM] unsigned int 
 27509 ;;  i               1   31[COMRAM] unsigned char 
 27510 ;; Return value:  Size  Location     Type
 27511 ;;                  4   15[COMRAM] unsigned long 
 27512 ;; Registers used:
 27513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27514 ;; Tracked objects:
 27515 ;;		On entry : 3F/0
 27516 ;;		On exit  : 3F/0
 27517 ;;		Unchanged: 3F/0
 27518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27520 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27521 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27522 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27523 ;;Total ram usage:       17 bytes
 27524 ;; Hardware stack levels used: 1
 27525 ;; Hardware stack levels required when called: 4
 27526 ;; This function calls:
 27527 ;;		Nothing
 27528 ;; This function is called by:
 27529 ;;		_refreshCurrent
 27530 ;; This function uses a non-reentrant model
 27531 ;;
 27532                           
 27533                           	psect	text118
 27534  006C52                     __ptext118:
 27535                           	callstack 0
 27536  006C52                     _sumHIST:
 27537                           	callstack 24
 27538                           
 27539                           ; BSR set to: 0
 27540                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 27541                           
 27542                           ; BSR set to: 0
 27543                           ;incstack = 0
 27544  006C52  0E00               	movlw	0
 27545  006C54  6E1C               	movwf	sumHIST@sumH^0,c
 27546  006C56  0E00               	movlw	0
 27547  006C58  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27548  006C5A  0E00               	movlw	0
 27549  006C5C  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27550  006C5E  0E00               	movlw	0
 27551  006C60  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27552                           
 27553                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 27554  006C62  0E00               	movlw	0
 27555  006C64  6E19               	movwf	(sumHIST@max+1)^0,c
 27556  006C66  0E00               	movlw	0
 27557  006C68  6E18               	movwf	sumHIST@max^0,c
 27558                           
 27559                           ; BSR set to: 0
 27560                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 27561  006C6A  681A               	setf	sumHIST@min^0,c
 27562  006C6C  681B               	setf	(sumHIST@min+1)^0,c
 27563                           
 27564                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 27565  006C6E  0E00               	movlw	0
 27566  006C70  6E20               	movwf	sumHIST@i^0,c
 27567  006C72                     l12619:
 27568                           
 27569                           ; BSR set to: 0
 27570                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 27571  006C72  5020               	movf	sumHIST@i^0,w,c
 27572  006C74  0D02               	mullw	2
 27573  006C76  0E60               	movlw	low _SumEnergyADCHist_array
 27574  006C78  24F3               	addwf	243,w,c
 27575  006C7A  6ED9               	movwf	fsr2l,c
 27576  006C7C  0E02               	movlw	high _SumEnergyADCHist_array
 27577  006C7E  20F4               	addwfc	prodh,w,c
 27578  006C80  6EDA               	movwf	fsr2h,c
 27579  006C82  CFDE F014          	movff	postinc2,??_sumHIST
 27580  006C86  CFDD F015          	movff	postdec2,??_sumHIST+1
 27581  006C8A  5014               	movf	??_sumHIST^0,w,c
 27582  006C8C  241C               	addwf	sumHIST@sumH^0,w,c
 27583  006C8E  6E1C               	movwf	sumHIST@sumH^0,c
 27584  006C90  5015               	movf	(??_sumHIST+1)^0,w,c
 27585  006C92  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 27586  006C94  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27587  006C96  0E00               	movlw	0
 27588  006C98  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 27589  006C9A  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27590  006C9C  0E00               	movlw	0
 27591  006C9E  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 27592  006CA0  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27593                           
 27594                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 27595  006CA2  5020               	movf	sumHIST@i^0,w,c
 27596  006CA4  0D02               	mullw	2
 27597  006CA6  0E60               	movlw	low _SumEnergyADCHist_array
 27598  006CA8  24F3               	addwf	243,w,c
 27599  006CAA  6ED9               	movwf	fsr2l,c
 27600  006CAC  0E02               	movlw	high _SumEnergyADCHist_array
 27601  006CAE  20F4               	addwfc	prodh,w,c
 27602  006CB0  6EDA               	movwf	fsr2h,c
 27603  006CB2  50DE               	movf	postinc2,w,c
 27604  006CB4  5C18               	subwf	sumHIST@max^0,w,c
 27605  006CB6  50DE               	movf	postinc2,w,c
 27606  006CB8  5819               	subwfb	(sumHIST@max+1)^0,w,c
 27607  006CBA  B0D8               	btfsc	status,0,c
 27608  006CBC  D00C               	goto	l1366
 27609                           
 27610                           ; BSR set to: 0
 27611                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 27612  006CBE  5020               	movf	sumHIST@i^0,w,c
 27613  006CC0  0D02               	mullw	2
 27614  006CC2  0E60               	movlw	low _SumEnergyADCHist_array
 27615  006CC4  24F3               	addwf	243,w,c
 27616  006CC6  6ED9               	movwf	fsr2l,c
 27617  006CC8  0E02               	movlw	high _SumEnergyADCHist_array
 27618  006CCA  20F4               	addwfc	prodh,w,c
 27619  006CCC  6EDA               	movwf	fsr2h,c
 27620  006CCE  CFDE F018          	movff	postinc2,sumHIST@max
 27621  006CD2  CFDD F019          	movff	postdec2,sumHIST@max+1
 27622  006CD6                     l1366:
 27623                           
 27624                           ; BSR set to: 0
 27625                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 27626  006CD6  5020               	movf	sumHIST@i^0,w,c
 27627  006CD8  0D02               	mullw	2
 27628  006CDA  0E60               	movlw	low _SumEnergyADCHist_array
 27629  006CDC  24F3               	addwf	243,w,c
 27630  006CDE  6ED9               	movwf	fsr2l,c
 27631  006CE0  0E02               	movlw	high _SumEnergyADCHist_array
 27632  006CE2  20F4               	addwfc	prodh,w,c
 27633  006CE4  6EDA               	movwf	fsr2h,c
 27634  006CE6  501A               	movf	sumHIST@min^0,w,c
 27635  006CE8  5CDE               	subwf	postinc2,w,c
 27636  006CEA  501B               	movf	(sumHIST@min+1)^0,w,c
 27637  006CEC  58DE               	subwfb	postinc2,w,c
 27638  006CEE  B0D8               	btfsc	status,0,c
 27639  006CF0  D00C               	goto	l12625
 27640                           
 27641                           ; BSR set to: 0
 27642                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 27643  006CF2  5020               	movf	sumHIST@i^0,w,c
 27644  006CF4  0D02               	mullw	2
 27645  006CF6  0E60               	movlw	low _SumEnergyADCHist_array
 27646  006CF8  24F3               	addwf	243,w,c
 27647  006CFA  6ED9               	movwf	fsr2l,c
 27648  006CFC  0E02               	movlw	high _SumEnergyADCHist_array
 27649  006CFE  20F4               	addwfc	prodh,w,c
 27650  006D00  6EDA               	movwf	fsr2h,c
 27651  006D02  CFDE F01A          	movff	postinc2,sumHIST@min
 27652  006D06  CFDD F01B          	movff	postdec2,sumHIST@min+1
 27653  006D0A                     l12625:
 27654                           
 27655                           ; BSR set to: 0
 27656                           ;controlCurrent_MC50.c: 222:     }
 27657  006D0A  2A20               	incf	sumHIST@i^0,f,c
 27658                           
 27659                           ; BSR set to: 0
 27660  006D0C  0E09               	movlw	9
 27661  006D0E  6420               	cpfsgt	sumHIST@i^0,c
 27662  006D10  D7B0               	goto	l12619
 27663                           
 27664                           ; BSR set to: 0
 27665                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 27666  006D12  501A               	movf	sumHIST@min^0,w,c
 27667  006D14  2418               	addwf	sumHIST@max^0,w,c
 27668  006D16  6E14               	movwf	??_sumHIST^0,c
 27669  006D18  501B               	movf	(sumHIST@min+1)^0,w,c
 27670  006D1A  2019               	addwfc	(sumHIST@max+1)^0,w,c
 27671  006D1C  6E15               	movwf	(??_sumHIST+1)^0,c
 27672  006D1E  6A16               	clrf	(??_sumHIST+2)^0,c
 27673  006D20  6A17               	clrf	(??_sumHIST+3)^0,c
 27674  006D22  5014               	movf	??_sumHIST^0,w,c
 27675  006D24  5C1C               	subwf	sumHIST@sumH^0,w,c
 27676  006D26  6E1C               	movwf	sumHIST@sumH^0,c
 27677  006D28  5015               	movf	(??_sumHIST+1)^0,w,c
 27678  006D2A  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 27679  006D2C  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27680  006D2E  5016               	movf	(??_sumHIST+2)^0,w,c
 27681  006D30  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 27682  006D32  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27683  006D34  5017               	movf	(??_sumHIST+3)^0,w,c
 27684  006D36  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 27685  006D38  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27686                           
 27687                           ; BSR set to: 0
 27688                           ;controlCurrent_MC50.c: 226:     return sumH;
 27689  006D3A  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 27690  006D3E  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 27691  006D42  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 27692  006D46  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 27693                           
 27694                           ; BSR set to: 0
 27695  006D4A  0012               	return		;funcret
 27696  006D4C                     __end_of_sumHIST:
 27697                           	callstack 0
 27698                           
 27699 ;; *************** function _sumEnergyADC *****************
 27700 ;; Defined at:
 27701 ;;		line 59 in file "controlCurrent_MC50.c"
 27702 ;; Parameters:    Size  Location     Type
 27703 ;;		None
 27704 ;; Auto vars:     Size  Location     Type
 27705 ;;  auxValue        2   21[COMRAM] unsigned int 
 27706 ;;  sumE            2   19[COMRAM] unsigned int 
 27707 ;;  i               1   23[COMRAM] unsigned char 
 27708 ;; Return value:  Size  Location     Type
 27709 ;;                  2   15[COMRAM] unsigned int 
 27710 ;; Registers used:
 27711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27712 ;; Tracked objects:
 27713 ;;		On entry : 3E/0
 27714 ;;		On exit  : 3F/1
 27715 ;;		Unchanged: 0/0
 27716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27718 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27719 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27720 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27721 ;;Total ram usage:        9 bytes
 27722 ;; Hardware stack levels used: 1
 27723 ;; Hardware stack levels required when called: 4
 27724 ;; This function calls:
 27725 ;;		Nothing
 27726 ;; This function is called by:
 27727 ;;		_refreshCurrent
 27728 ;; This function uses a non-reentrant model
 27729 ;;
 27730                           
 27731                           	psect	text119
 27732  0077A8                     __ptext119:
 27733                           	callstack 0
 27734  0077A8                     _sumEnergyADC:
 27735                           	callstack 24
 27736                           
 27737                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 27738                           
 27739                           ; BSR set to: 0
 27740                           ;incstack = 0
 27741  0077A8  0E00               	movlw	0
 27742  0077AA  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 27743  0077AC  0E00               	movlw	0
 27744  0077AE  6E14               	movwf	sumEnergyADC@sumE^0,c
 27745                           
 27746                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 27747  0077B0  0E00               	movlw	0
 27748  0077B2  6E18               	movwf	sumEnergyADC@i^0,c
 27749  0077B4                     l12591:
 27750                           
 27751                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 27752  0077B4  5018               	movf	sumEnergyADC@i^0,w,c
 27753  0077B6  0D02               	mullw	2
 27754  0077B8  0E00               	movlw	low _ADC_array
 27755  0077BA  24F3               	addwf	243,w,c
 27756  0077BC  6ED9               	movwf	fsr2l,c
 27757  0077BE  0E02               	movlw	high _ADC_array
 27758  0077C0  20F4               	addwfc	prodh,w,c
 27759  0077C2  6EDA               	movwf	fsr2h,c
 27760  0077C4  50DE               	movf	postinc2,w,c
 27761  0077C6  0101               	movlb	1	; () banked
 27762  0077C8  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 27763  0077CA  50DE               	movf	postinc2,w,c
 27764  0077CC  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 27765  0077CE  B0D8               	btfsc	status,0,c
 27766  0077D0  D012               	goto	l12595
 27767                           
 27768                           ; BSR set to: 1
 27769                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 27770  0077D2  5018               	movf	sumEnergyADC@i^0,w,c
 27771  0077D4  0D02               	mullw	2
 27772  0077D6  0E00               	movlw	low _ADC_array
 27773  0077D8  24F3               	addwf	243,w,c
 27774  0077DA  6ED9               	movwf	fsr2l,c
 27775  0077DC  0E02               	movlw	high _ADC_array
 27776  0077DE  20F4               	addwfc	prodh,w,c
 27777  0077E0  6EDA               	movwf	fsr2h,c
 27778  0077E2  CFDE F012          	movff	postinc2,??_sumEnergyADC
 27779  0077E6  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 27780  0077EA  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 27781  0077EC  5C12               	subwf	??_sumEnergyADC^0,w,c
 27782  0077EE  6E16               	movwf	sumEnergyADC@auxValue^0,c
 27783  0077F0  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 27784  0077F2  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 27785  0077F4  D011               	goto	L103
 27786  0077F6                     l12595:
 27787                           
 27788                           ; BSR set to: 1
 27789                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 27790  0077F6  5018               	movf	sumEnergyADC@i^0,w,c
 27791  0077F8  0D02               	mullw	2
 27792  0077FA  0E00               	movlw	low _ADC_array
 27793  0077FC  24F3               	addwf	243,w,c
 27794  0077FE  6ED9               	movwf	fsr2l,c
 27795  007800  0E02               	movlw	high _ADC_array
 27796  007802  20F4               	addwfc	prodh,w,c
 27797  007804  6EDA               	movwf	fsr2h,c
 27798  007806  CFDE F012          	movff	postinc2,??_sumEnergyADC
 27799  00780A  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 27800  00780E  5012               	movf	??_sumEnergyADC^0,w,c
 27801  007810  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 27802  007812  6E16               	movwf	sumEnergyADC@auxValue^0,c
 27803  007814  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 27804  007816  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 27805  007818                     L103:
 27806  007818  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 27807                           
 27808                           ; BSR set to: 1
 27809                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 27810  00781A  5016               	movf	sumEnergyADC@auxValue^0,w,c
 27811  00781C  2614               	addwf	sumEnergyADC@sumE^0,f,c
 27812  00781E  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 27813  007820  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 27814                           
 27815                           ; BSR set to: 1
 27816                           ;controlCurrent_MC50.c: 94:     }
 27817  007822  2A18               	incf	sumEnergyADC@i^0,f,c
 27818                           
 27819                           ; BSR set to: 1
 27820  007824  0E1D               	movlw	29
 27821  007826  6418               	cpfsgt	sumEnergyADC@i^0,c
 27822  007828  D7C5               	goto	l12591
 27823                           
 27824                           ; BSR set to: 1
 27825                           ;controlCurrent_MC50.c: 96:     return sumE;
 27826  00782A  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 27827  00782E  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 27828                           
 27829                           ; BSR set to: 1
 27830  007832  0012               	return		;funcret
 27831  007834                     __end_of_sumEnergyADC:
 27832                           	callstack 0
 27833                           
 27834 ;; *************** function _saveEnergyADCHist *****************
 27835 ;; Defined at:
 27836 ;;		line 182 in file "controlCurrent_MC50.c"
 27837 ;; Parameters:    Size  Location     Type
 27838 ;;  valueToSave     2   15[COMRAM] unsigned int 
 27839 ;; Auto vars:     Size  Location     Type
 27840 ;;		None
 27841 ;; Return value:  Size  Location     Type
 27842 ;;                  1    wreg      void 
 27843 ;; Registers used:
 27844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27845 ;; Tracked objects:
 27846 ;;		On entry : 3F/1
 27847 ;;		On exit  : 3F/0
 27848 ;;		Unchanged: 0/0
 27849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27854 ;;Total ram usage:        2 bytes
 27855 ;; Hardware stack levels used: 1
 27856 ;; Hardware stack levels required when called: 4
 27857 ;; This function calls:
 27858 ;;		Nothing
 27859 ;; This function is called by:
 27860 ;;		_refreshCurrent
 27861 ;; This function uses a non-reentrant model
 27862 ;;
 27863                           
 27864                           	psect	text120
 27865  008E32                     __ptext120:
 27866                           	callstack 0
 27867  008E32                     _saveEnergyADCHist:
 27868                           	callstack 24
 27869                           
 27870                           ; BSR set to: 1
 27871                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 27872                           
 27873                           ; BSR set to: 1
 27874                           ;incstack = 0
 27875  008E32  0E09               	movlw	9
 27876  008E34  0100               	movlb	0	; () banked
 27877  008E36  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 27878  008E38  D002               	goto	l12607
 27879                           
 27880                           ; BSR set to: 0
 27881                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 27882  008E3A  0E00               	movlw	0
 27883  008E3C  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 27884  008E3E                     l12607:
 27885                           
 27886                           ; BSR set to: 0
 27887                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 27888  008E3E  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 27889  008E40  0D02               	mullw	2
 27890  008E42  0E60               	movlw	low _SumEnergyADCHist_array
 27891  008E44  24F3               	addwf	243,w,c
 27892  008E46  6ED9               	movwf	fsr2l,c
 27893  008E48  0E02               	movlw	high _SumEnergyADCHist_array
 27894  008E4A  20F4               	addwfc	prodh,w,c
 27895  008E4C  6EDA               	movwf	fsr2h,c
 27896  008E4E  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 27897  008E52  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 27898                           
 27899                           ; BSR set to: 0
 27900                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 27901  008E56  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 27902                           
 27903                           ; BSR set to: 0
 27904  008E58  0012               	return		;funcret
 27905  008E5A                     __end_of_saveEnergyADCHist:
 27906                           	callstack 0
 27907                           
 27908 ;; *************** function _refreshADCZeroOffset *****************
 27909 ;; Defined at:
 27910 ;;		line 103 in file "controlCurrent_MC50.c"
 27911 ;; Parameters:    Size  Location     Type
 27912 ;;		None
 27913 ;; Auto vars:     Size  Location     Type
 27914 ;;  media           2   23[COMRAM] unsigned int 
 27915 ;;  i               1   22[COMRAM] unsigned char 
 27916 ;; Return value:  Size  Location     Type
 27917 ;;                  1    wreg      void 
 27918 ;; Registers used:
 27919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27920 ;; Tracked objects:
 27921 ;;		On entry : 3F/0
 27922 ;;		On exit  : 3E/0
 27923 ;;		Unchanged: 0/0
 27924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27926 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27928 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27929 ;;Total ram usage:        3 bytes
 27930 ;; Hardware stack levels used: 1
 27931 ;; Hardware stack levels required when called: 5
 27932 ;; This function calls:
 27933 ;;		___lwdiv
 27934 ;; This function is called by:
 27935 ;;		_ControlCurrent
 27936 ;; This function uses a non-reentrant model
 27937 ;;
 27938                           
 27939                           	psect	text121
 27940  006A58                     __ptext121:
 27941                           	callstack 0
 27942  006A58                     _refreshADCZeroOffset:
 27943                           	callstack 24
 27944                           
 27945                           ; BSR set to: 0
 27946                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 27947                           
 27948                           ; BSR set to: 0
 27949                           ;incstack = 0
 27950  006A58  0E00               	movlw	0
 27951  006A5A  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27952  006A5C  0E00               	movlw	0
 27953  006A5E  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27954                           
 27955                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 27956  006A60  0101               	movlb	1	; () banked
 27957  006A62  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27958  006A64  A4D8               	btfss	status,2,c
 27959  006A66  0012               	return	
 27960                           
 27961                           ; BSR set to: 1
 27962                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 27963  006A68  BFD9               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 27964  006A6A  D005               	goto	u14730
 27965  006A6C  51D9               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 27966  006A6E  E172               	bnz	l1357
 27967  006A70  05D8               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 27968  006A72  B0D8               	btfsc	status,0,c
 27969  006A74  0012               	return	
 27970  006A76                     u14730:
 27971                           
 27972                           ; BSR set to: 1
 27973                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 27974  006A76  0E00               	movlw	0
 27975  006A78  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
 27976  006A7A  0E14               	movlw	20
 27977  006A7C  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
 27978                           
 27979                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 27980  006A7E  0E00               	movlw	0
 27981  006A80  6E17               	movwf	refreshADCZeroOffset@i^0,c
 27982  006A82                     l14417:
 27983                           
 27984                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 27985  006A82  5017               	movf	refreshADCZeroOffset@i^0,w,c
 27986  006A84  0D02               	mullw	2
 27987  006A86  0E00               	movlw	low _ADC_array
 27988  006A88  24F3               	addwf	243,w,c
 27989  006A8A  6ED9               	movwf	fsr2l,c
 27990  006A8C  0E02               	movlw	high _ADC_array
 27991  006A8E  20F4               	addwfc	prodh,w,c
 27992  006A90  6EDA               	movwf	fsr2h,c
 27993  006A92  50DE               	movf	postinc2,w,c
 27994  006A94  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 27995  006A96  50DD               	movf	postdec2,w,c
 27996  006A98  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 27997                           
 27998                           ;controlCurrent_MC50.c: 128:             }
 27999  006A9A  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 28000  006A9C  0E1D               	movlw	29
 28001  006A9E  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 28002  006AA0  D7F0               	goto	l14417
 28003                           
 28004                           ;controlCurrent_MC50.c: 130:             media = media/30;
 28005  006AA2  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 28006  006AA6  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 28007  006AAA  0E00               	movlw	0
 28008  006AAC  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 28009  006AAE  0E1E               	movlw	30
 28010  006AB0  6E12               	movwf	___lwdiv@divisor^0,c
 28011  006AB2  ECFD  F042         	call	___lwdiv	;wreg free
 28012  006AB6  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 28013  006ABA  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 28014                           
 28015                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 28016  006ABE  0EEB               	movlw	235
 28017  006AC0  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 28018  006AC2  0E01               	movlw	1
 28019  006AC4  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 28020  006AC6  A0D8               	btfss	status,0,c
 28021  006AC8  D006               	goto	l14431
 28022  006ACA  0E12               	movlw	18
 28023  006ACC  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 28024  006ACE  0E02               	movlw	2
 28025  006AD0  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 28026  006AD2  A0D8               	btfss	status,0,c
 28027  006AD4  D004               	goto	l14433
 28028  006AD6                     l14431:
 28029                           
 28030                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 28031  006AD6  0E01               	movlw	1
 28032  006AD8  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 28033  006ADA  0EFE               	movlw	254
 28034  006ADC  6E18               	movwf	refreshADCZeroOffset@media^0,c
 28035  006ADE                     l14433:
 28036                           
 28037                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 28038  006ADE  0E1D               	movlw	29
 28039  006AE0  0100               	movlb	0	; () banked
 28040  006AE2  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 28041  006AE4  D002               	goto	l14437
 28042                           
 28043                           ; BSR set to: 0
 28044                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 28045  006AE6  0E00               	movlw	0
 28046  006AE8  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 28047  006AEA                     l14437:
 28048                           
 28049                           ; BSR set to: 0
 28050                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 28051  006AEA  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 28052  006AEC  0D02               	mullw	2
 28053  006AEE  0E96               	movlw	low _ADC_zero_array
 28054  006AF0  24F3               	addwf	243,w,c
 28055  006AF2  6ED9               	movwf	fsr2l,c
 28056  006AF4  0E03               	movlw	high _ADC_zero_array
 28057  006AF6  20F4               	addwfc	prodh,w,c
 28058  006AF8  6EDA               	movwf	fsr2h,c
 28059  006AFA  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 28060  006AFE  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 28061                           
 28062                           ; BSR set to: 0
 28063                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 28064  006B02  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 28065                           
 28066                           ; BSR set to: 0
 28067                           ;controlCurrent_MC50.c: 150:             media = 0;
 28068  006B04  0E00               	movlw	0
 28069  006B06  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 28070  006B08  0E00               	movlw	0
 28071  006B0A  6E18               	movwf	refreshADCZeroOffset@media^0,c
 28072                           
 28073                           ; BSR set to: 0
 28074                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 28075  006B0C  0E00               	movlw	0
 28076  006B0E  6E17               	movwf	refreshADCZeroOffset@i^0,c
 28077  006B10                     l14449:
 28078                           
 28079                           ; BSR set to: 0
 28080                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 28081  006B10  5017               	movf	refreshADCZeroOffset@i^0,w,c
 28082  006B12  0D02               	mullw	2
 28083  006B14  0E96               	movlw	low _ADC_zero_array
 28084  006B16  24F3               	addwf	243,w,c
 28085  006B18  6ED9               	movwf	fsr2l,c
 28086  006B1A  0E03               	movlw	high _ADC_zero_array
 28087  006B1C  20F4               	addwfc	prodh,w,c
 28088  006B1E  6EDA               	movwf	fsr2h,c
 28089  006B20  50DE               	movf	postinc2,w,c
 28090  006B22  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 28091  006B24  50DD               	movf	postdec2,w,c
 28092  006B26  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 28093                           
 28094                           ; BSR set to: 0
 28095                           ;controlCurrent_MC50.c: 159:             }
 28096  006B28  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 28097                           
 28098                           ; BSR set to: 0
 28099  006B2A  0E1D               	movlw	29
 28100  006B2C  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 28101  006B2E  D7F0               	goto	l14449
 28102                           
 28103                           ; BSR set to: 0
 28104                           ;controlCurrent_MC50.c: 160:             media = media/30;
 28105  006B30  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 28106  006B34  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 28107  006B38  0E00               	movlw	0
 28108  006B3A  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 28109  006B3C  0E1E               	movlw	30
 28110  006B3E  6E12               	movwf	___lwdiv@divisor^0,c
 28111  006B40  ECFD  F042         	call	___lwdiv	;wreg free
 28112  006B44  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 28113  006B48  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 28114                           
 28115                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 28116  006B4C  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 28117  006B50  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 28118  006B54                     l1357:
 28119  006B54  0012               	return		;funcret
 28120  006B56                     __end_of_refreshADCZeroOffset:
 28121                           	callstack 0
 28122                           
 28123 ;; *************** function ___lwdiv *****************
 28124 ;; Defined at:
 28125 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 28126 ;; Parameters:    Size  Location     Type
 28127 ;;  dividend        2   15[COMRAM] unsigned int 
 28128 ;;  divisor         2   17[COMRAM] unsigned int 
 28129 ;; Auto vars:     Size  Location     Type
 28130 ;;  quotient        2   19[COMRAM] unsigned int 
 28131 ;;  counter         1   21[COMRAM] unsigned char 
 28132 ;; Return value:  Size  Location     Type
 28133 ;;                  2   15[COMRAM] unsigned int 
 28134 ;; Registers used:
 28135 ;;		wreg, status,2, status,0
 28136 ;; Tracked objects:
 28137 ;;		On entry : 3E/1
 28138 ;;		On exit  : 3E/0
 28139 ;;		Unchanged: 3E/0
 28140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28142 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28144 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28145 ;;Total ram usage:        7 bytes
 28146 ;; Hardware stack levels used: 1
 28147 ;; Hardware stack levels required when called: 4
 28148 ;; This function calls:
 28149 ;;		Nothing
 28150 ;; This function is called by:
 28151 ;;		_refreshADCZeroOffset
 28152 ;;		_sm_execute_menuConfiguration
 28153 ;; This function uses a non-reentrant model
 28154 ;;
 28155                           
 28156                           	psect	text122
 28157  0085FA                     __ptext122:
 28158                           	callstack 0
 28159  0085FA                     ___lwdiv:
 28160                           	callstack 24
 28161                           
 28162                           ;incstack = 0
 28163  0085FA  0E00               	movlw	0
 28164  0085FC  6E15               	movwf	(___lwdiv@quotient+1)^0,c
 28165  0085FE  0E00               	movlw	0
 28166  008600  6E14               	movwf	___lwdiv@quotient^0,c
 28167  008602  5012               	movf	___lwdiv@divisor^0,w,c
 28168  008604  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 28169  008606  B4D8               	btfsc	status,2,c
 28170  008608  D01C               	goto	l4141
 28171  00860A  0E01               	movlw	1
 28172  00860C  6E16               	movwf	___lwdiv@counter^0,c
 28173  00860E  D004               	goto	l13897
 28174  008610                     l13895:
 28175  008610  90D8               	bcf	status,0,c
 28176  008612  3612               	rlcf	___lwdiv@divisor^0,f,c
 28177  008614  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 28178  008616  2A16               	incf	___lwdiv@counter^0,f,c
 28179  008618                     l13897:
 28180  008618  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 28181  00861A  D7FA               	goto	l13895
 28182  00861C                     u13750:
 28183  00861C  90D8               	bcf	status,0,c
 28184  00861E  3614               	rlcf	___lwdiv@quotient^0,f,c
 28185  008620  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
 28186  008622  5012               	movf	___lwdiv@divisor^0,w,c
 28187  008624  5C10               	subwf	___lwdiv@dividend^0,w,c
 28188  008626  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28189  008628  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 28190  00862A  A0D8               	btfss	status,0,c
 28191  00862C  D005               	goto	l13907
 28192  00862E  5012               	movf	___lwdiv@divisor^0,w,c
 28193  008630  5E10               	subwf	___lwdiv@dividend^0,f,c
 28194  008632  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28195  008634  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 28196  008636  8014               	bsf	___lwdiv@quotient^0,0,c
 28197  008638                     l13907:
 28198  008638  90D8               	bcf	status,0,c
 28199  00863A  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 28200  00863C  3212               	rrcf	___lwdiv@divisor^0,f,c
 28201  00863E  2E16               	decfsz	___lwdiv@counter^0,f,c
 28202  008640  D7ED               	goto	u13750
 28203  008642                     l4141:
 28204  008642  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
 28205  008646  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 28206  00864A  0012               	return		;funcret
 28207  00864C                     __end_of___lwdiv:
 28208                           	callstack 0
 28209                           
 28210 ;; *************** function _getCurrentComparator *****************
 28211 ;; Defined at:
 28212 ;;		line 264 in file "controlCurrent_MC50.c"
 28213 ;; Parameters:    Size  Location     Type
 28214 ;;		None
 28215 ;; Auto vars:     Size  Location     Type
 28216 ;;  x               1   33[COMRAM] unsigned char 
 28217 ;;  tempOffset      2   31[COMRAM] unsigned int 
 28218 ;; Return value:  Size  Location     Type
 28219 ;;                  4   21[COMRAM] unsigned long 
 28220 ;; Registers used:
 28221 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28222 ;; Tracked objects:
 28223 ;;		On entry : 3F/1
 28224 ;;		On exit  : 3F/1
 28225 ;;		Unchanged: 0/0
 28226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28228 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28229 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28230 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28231 ;;Total ram usage:       13 bytes
 28232 ;; Hardware stack levels used: 1
 28233 ;; Hardware stack levels required when called: 5
 28234 ;; This function calls:
 28235 ;;		___wmul
 28236 ;; This function is called by:
 28237 ;;		_ControlCurrent
 28238 ;; This function uses a non-reentrant model
 28239 ;;
 28240                           
 28241                           	psect	text123
 28242  00569C                     __ptext123:
 28243                           	callstack 0
 28244  00569C                     _getCurrentComparator:
 28245                           	callstack 24
 28246                           
 28247                           ; BSR set to: 1
 28248                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 28249                           
 28250                           ; BSR set to: 1
 28251                           
 28252                           ;incstack = 0
 28253  00569C  BFB1               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 28254  00569E  D00A               	goto	l14473
 28255  0056A0  51B1               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 28256  0056A2  E103               	bnz	u14810
 28257  0056A4  05B0               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 28258  0056A6  A0D8               	btfss	status,0,c
 28259  0056A8  D005               	goto	l14473
 28260  0056AA                     u14810:
 28261                           
 28262                           ; BSR set to: 1
 28263                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 28264  0056AA  0E00               	movlw	0
 28265  0056AC  6FD5               	movwf	(_ts_system+59)& (0+255),b	;volatile
 28266  0056AE  0E14               	movlw	20
 28267  0056B0  6FD4               	movwf	(_ts_system+58)& (0+255),b	;volatile
 28268  0056B2  D007               	goto	u14820
 28269  0056B4                     l14473:
 28270                           
 28271                           ; BSR set to: 1
 28272  0056B4  BFD5               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 28273  0056B6  D009               	goto	l14477
 28274  0056B8  51D5               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 28275  0056BA  E103               	bnz	u14820
 28276  0056BC  05D4               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 28277  0056BE  A0D8               	btfss	status,0,c
 28278  0056C0  D004               	goto	l14477
 28279  0056C2                     u14820:
 28280                           
 28281                           ; BSR set to: 1
 28282                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 28283  0056C2  0E04               	movlw	4
 28284  0056C4  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 28285  0056C6  0EB0               	movlw	176
 28286  0056C8  D003               	goto	L104
 28287  0056CA                     l14477:
 28288                           
 28289                           ; BSR set to: 1
 28290                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 28291  0056CA  0E00               	movlw	0
 28292  0056CC  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 28293  0056CE  0E00               	movlw	0
 28294  0056D0                     L104:
 28295  0056D0  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 28296                           
 28297                           ; BSR set to: 1
 28298                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 28299  0056D2  517B               	movf	_powerControl_st& (0+255),w,b
 28300  0056D4  A4D8               	btfss	status,2,c
 28301  0056D6  D05B               	goto	l14493
 28302                           
 28303                           ; BSR set to: 1
 28304                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 28305  0056D8  0E03               	movlw	3
 28306  0056DA  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28307  0056DC  A4D8               	btfss	status,2,c
 28308  0056DE  D005               	goto	l14483
 28309                           
 28310                           ; BSR set to: 1
 28311                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 28312  0056E0  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 28313  0056E4  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 28314  0056E8  D004               	goto	L105
 28315  0056EA                     l14483:
 28316                           
 28317                           ; BSR set to: 1
 28318                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 28319  0056EA  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 28320  0056EE  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 28321  0056F2                     L105:
 28322  0056F2  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 28323  0056F4  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 28324                           
 28325                           ; BSR set to: 1
 28326                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 28327  0056F6  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28328  0056F8  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28329  0056FA  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 28330  0056FC  E104               	bnz	u14850
 28331  0056FE  0E65               	movlw	101
 28332  005700  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28333  005702  A0D8               	btfss	status,0,c
 28334  005704  D009               	goto	u14860
 28335  005706                     u14850:
 28336                           
 28337                           ; BSR set to: 1
 28338  005706  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28339  005708  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28340  00570A  E106               	bnz	u14860
 28341  00570C  0EC5               	movlw	197
 28342  00570E  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28343  005710  0E3B               	movlw	59
 28344  005712  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28345  005714  A0D8               	btfss	status,0,c
 28346  005716  D004               	goto	l1383
 28347  005718                     u14860:
 28348                           
 28349                           ; BSR set to: 1
 28350                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 28351  005718  0EC4               	movlw	196
 28352  00571A  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28353  00571C  0E3B               	movlw	59
 28354  00571E  D058               	goto	L107
 28355  005720                     l1383:
 28356                           
 28357                           ; BSR set to: 1
 28358                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 28359  005720  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 28360                           
 28361                           ; BSR set to: 1
 28362                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 28363  005724  5022               	movf	getCurrentComparator@x^0,w,c
 28364  005726  0222               	mulwf	getCurrentComparator@x^0,c
 28365  005728  CFF3 F010          	movff	prodl,___wmul@multiplier
 28366  00572C  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 28367  005730  0E00               	movlw	0
 28368  005732  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28369  005734  0E0A               	movlw	10
 28370  005736  6E12               	movwf	___wmul@multiplicand^0,c
 28371  005738  EC53  F047         	call	___wmul	;wreg free
 28372  00573C  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 28373  005740  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 28374  005744  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 28375  005748  6A11               	clrf	(___wmul@multiplier+1)^0,c
 28376  00574A  0EFF               	movlw	255
 28377  00574C  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28378  00574E  0E38               	movlw	56
 28379  005750  6E12               	movwf	___wmul@multiplicand^0,c
 28380  005752  EC53  F047         	call	___wmul	;wreg free
 28381  005756  5010               	movf	?___wmul^0,w,c
 28382  005758  261A               	addwf	??_getCurrentComparator^0,f,c
 28383  00575A  5011               	movf	(?___wmul+1)^0,w,c
 28384  00575C  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 28385  00575E  0E14               	movlw	20
 28386  005760  241A               	addwf	??_getCurrentComparator^0,w,c
 28387  005762  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 28388  005764  0E05               	movlw	5
 28389  005766  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 28390  005768  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 28391  00576A  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 28392  00576C  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 28393  00576E  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 28394  005770  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 28395  005772  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 28396  005774  0101               	movlb	1	; () banked
 28397  005776  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 28398  005778  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 28399  00577A  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28400  00577C  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 28401  00577E  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 28402  005780  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28403  005782  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 28404  005784  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 28405  005786  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28406  005788  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28407  00578A  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 28408  00578C  D046               	goto	L106
 28409  00578E                     l14493:
 28410                           
 28411                           ; BSR set to: 1
 28412                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 28413  00578E  0E03               	movlw	3
 28414  005790  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28415  005792  A4D8               	btfss	status,2,c
 28416  005794  D009               	goto	l1388
 28417                           
 28418                           ; BSR set to: 1
 28419                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 28420  005796  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 28421  00579A  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 28422  00579E  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 28423  0057A2  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 28424                           
 28425                           ;controlCurrent_MC50.c: 315:         }
 28426  0057A6  D008               	goto	l14497
 28427  0057A8                     l1388:
 28428                           
 28429                           ; BSR set to: 1
 28430                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 28431  0057A8  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 28432  0057AC  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 28433  0057B0  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 28434  0057B4  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 28435  0057B8                     l14497:
 28436                           
 28437                           ; BSR set to: 1
 28438                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 28439  0057B8  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28440  0057BA  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28441  0057BC  E10E               	bnz	l14501
 28442  0057BE  0E89               	movlw	137
 28443  0057C0  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28444  0057C2  0E13               	movlw	19
 28445  0057C4  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28446  0057C6  B0D8               	btfsc	status,0,c
 28447  0057C8  D008               	goto	l14501
 28448                           
 28449                           ; BSR set to: 1
 28450                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 28451  0057CA  0E88               	movlw	136
 28452  0057CC  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28453  0057CE  0E13               	movlw	19
 28454  0057D0                     L107:
 28455  0057D0  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28456  0057D2  0E00               	movlw	0
 28457  0057D4  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28458  0057D6  0E00               	movlw	0
 28459  0057D8  D020               	goto	L106
 28460  0057DA                     l14501:
 28461                           
 28462                           ; BSR set to: 1
 28463                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 28464  0057DA  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 28465  0057DE  6A11               	clrf	(___wmul@multiplier+1)^0,c
 28466  0057E0  0EFE               	movlw	254
 28467  0057E2  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28468  0057E4  0E0C               	movlw	12
 28469  0057E6  6E12               	movwf	___wmul@multiplicand^0,c
 28470  0057E8  EC53  F047         	call	___wmul	;wreg free
 28471  0057EC  0E38               	movlw	56
 28472  0057EE  2410               	addwf	?___wmul^0,w,c
 28473  0057F0  6E1A               	movwf	??_getCurrentComparator^0,c
 28474  0057F2  0E18               	movlw	24
 28475  0057F4  2011               	addwfc	(?___wmul+1)^0,w,c
 28476  0057F6  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 28477  0057F8  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 28478  0057FA  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 28479  0057FC  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 28480  0057FE  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 28481  005800  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 28482  005802  501A               	movf	??_getCurrentComparator^0,w,c
 28483  005804  0101               	movlb	1	; () banked
 28484  005806  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28485  005808  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28486  00580A  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 28487  00580C  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28488  00580E  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28489  005810  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 28490  005812  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 28491  005814  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28492  005816  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 28493  005818  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 28494  00581A                     L106:
 28495  00581A  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 28496                           
 28497                           ; BSR set to: 1
 28498                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 28499  00581C  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 28500  00581E  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 28501  005820  6E16               	movwf	?_getCurrentComparator^0,c
 28502  005822  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 28503  005824  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 28504  005826  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 28505  005828  0E00               	movlw	0
 28506  00582A  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 28507  00582C  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 28508  00582E  0E00               	movlw	0
 28509  005830  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 28510  005832  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 28511                           
 28512                           ; BSR set to: 1
 28513  005834  0012               	return		;funcret
 28514  005836                     __end_of_getCurrentComparator:
 28515                           	callstack 0
 28516                           
 28517 ;; *************** function ___wmul *****************
 28518 ;; Defined at:
 28519 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 28520 ;; Parameters:    Size  Location     Type
 28521 ;;  multiplier      2   15[COMRAM] unsigned int 
 28522 ;;  multiplicand    2   17[COMRAM] unsigned int 
 28523 ;; Auto vars:     Size  Location     Type
 28524 ;;  product         2   19[COMRAM] unsigned int 
 28525 ;; Return value:  Size  Location     Type
 28526 ;;                  2   15[COMRAM] unsigned int 
 28527 ;; Registers used:
 28528 ;;		wreg, status,2, status,0, prodl, prodh
 28529 ;; Tracked objects:
 28530 ;;		On entry : 0/0
 28531 ;;		On exit  : 0/0
 28532 ;;		Unchanged: 0/0
 28533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28534 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28537 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28538 ;;Total ram usage:        6 bytes
 28539 ;; Hardware stack levels used: 1
 28540 ;; Hardware stack levels required when called: 4
 28541 ;; This function calls:
 28542 ;;		Nothing
 28543 ;; This function is called by:
 28544 ;;		_getCurrentComparator
 28545 ;;		_getHopCode
 28546 ;; This function uses a non-reentrant model
 28547 ;;
 28548                           
 28549                           	psect	text124
 28550  008EA6                     __ptext124:
 28551                           	callstack 0
 28552  008EA6                     ___wmul:
 28553                           	callstack 22
 28554                           
 28555                           ; BSR set to: 1
 28556                           ;incstack = 0
 28557  008EA6  5010               	movf	___wmul@multiplier^0,w,c
 28558  008EA8  0212               	mulwf	___wmul@multiplicand^0,c
 28559  008EAA  CFF3 F014          	movff	prodl,___wmul@product
 28560  008EAE  CFF4 F015          	movff	prodh,___wmul@product+1
 28561  008EB2  5010               	movf	___wmul@multiplier^0,w,c
 28562  008EB4  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 28563  008EB6  50F3               	movf	243,w,c
 28564  008EB8  2615               	addwf	(___wmul@product+1)^0,f,c
 28565  008EBA  5011               	movf	(___wmul@multiplier+1)^0,w,c
 28566  008EBC  0212               	mulwf	___wmul@multiplicand^0,c
 28567  008EBE  50F3               	movf	243,w,c
 28568  008EC0  2615               	addwf	(___wmul@product+1)^0,f,c
 28569  008EC2  C014  F010         	movff	___wmul@product,?___wmul
 28570  008EC6  C015  F011         	movff	___wmul@product+1,?___wmul+1
 28571  008ECA  0012               	return		;funcret
 28572  008ECC                     __end_of___wmul:
 28573                           	callstack 0
 28574                           
 28575 ;; *************** function _GetMotorPower *****************
 28576 ;; Defined at:
 28577 ;;		line 405 in file "outputs_MC50.c"
 28578 ;; Parameters:    Size  Location     Type
 28579 ;;		None
 28580 ;; Auto vars:     Size  Location     Type
 28581 ;;  defineatraso    1   18[COMRAM] unsigned char 
 28582 ;; Return value:  Size  Location     Type
 28583 ;;                  1    wreg      unsigned char 
 28584 ;; Registers used:
 28585 ;;		wreg, status,2, status,0, prodl, prodh
 28586 ;; Tracked objects:
 28587 ;;		On entry : 3E/1
 28588 ;;		On exit  : 3F/1
 28589 ;;		Unchanged: 0/0
 28590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28593 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28595 ;;Total ram usage:        4 bytes
 28596 ;; Hardware stack levels used: 1
 28597 ;; Hardware stack levels required when called: 4
 28598 ;; This function calls:
 28599 ;;		Nothing
 28600 ;; This function is called by:
 28601 ;;		_ControlCurrent
 28602 ;;		_InitSoftStart
 28603 ;;		_InitSoftStop
 28604 ;; This function uses a non-reentrant model
 28605 ;;
 28606                           
 28607                           	psect	text125
 28608  006FDC                     __ptext125:
 28609                           	callstack 0
 28610  006FDC                     _GetMotorPower:
 28611                           	callstack 22
 28612                           
 28613                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 28614                           
 28615                           ;incstack = 0
 28616  006FDC  0101               	movlb	1	; () banked
 28617  006FDE  057B               	decf	_powerControl_st& (0+255),w,b
 28618  006FE0  A4D8               	btfss	status,2,c
 28619  006FE2  D006               	goto	l19375
 28620                           
 28621                           ; BSR set to: 1
 28622                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 28623  006FE4  0100               	movlb	0	; () banked
 28624  006FE6  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 28625  006FE8  0D06               	mullw	6
 28626  006FEA  CFF3 F18E          	movff	prodl,_temppower
 28627                           
 28628                           ;outputs_MC50.c: 416:     }
 28629  006FEE  D043               	goto	l2235
 28630  006FF0                     l19375:
 28631                           
 28632                           ; BSR set to: 1
 28633                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 28634  006FF0  0100               	movlb	0	; () banked
 28635  006FF2  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 28636  006FF4  0D06               	mullw	6
 28637  006FF6  CFF3 F082          	movff	prodl,_fullmotorPower
 28638                           
 28639                           ; BSR set to: 0
 28640                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 28641  006FFA  0101               	movlb	1	; () banked
 28642  006FFC  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28643  006FFE  D01C               	goto	l19385
 28644  007000  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28645  007002  E103               	bnz	u22130
 28646  007004  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28647  007006  A0D8               	btfss	status,0,c
 28648  007008  D017               	goto	l19385
 28649  00700A                     u22130:
 28650                           
 28651                           ; BSR set to: 1
 28652                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 28653  00700A  0100               	movlb	0	; () banked
 28654  00700C  5182               	movf	_fullmotorPower& (0+255),w,b
 28655  00700E  6E10               	movwf	??_GetMotorPower^0,c
 28656  007010  6A11               	clrf	(??_GetMotorPower+1)^0,c
 28657  007012  0101               	movlb	1	; () banked
 28658  007014  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 28659  007016  5C10               	subwf	??_GetMotorPower^0,w,c
 28660  007018  5011               	movf	(??_GetMotorPower+1)^0,w,c
 28661  00701A  0A80               	xorlw	128
 28662  00701C  6E12               	movwf	(??_GetMotorPower+2)^0,c
 28663  00701E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28664  007020  0A80               	xorlw	128
 28665  007022  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 28666  007024  B0D8               	btfsc	status,0,c
 28667  007026  D002               	goto	l19383
 28668                           
 28669                           ; BSR set to: 1
 28670                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 28671  007028  0E01               	movlw	1
 28672  00702A  D004               	goto	L109
 28673  00702C                     l19383:
 28674                           
 28675                           ; BSR set to: 1
 28676                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 28677  00702C  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 28678  00702E  0100               	movlb	0	; () banked
 28679  007030  5D82               	subwf	_fullmotorPower& (0+255),w,b
 28680  007032  D017               	goto	L110
 28681  007034                     L109:
 28682  007034  6F8E               	movwf	_temppower& (0+255),b
 28683  007036  D01F               	goto	l2235
 28684  007038                     l19385:
 28685                           
 28686                           ; BSR set to: 1
 28687  007038  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28688  00703A  D005               	goto	u22150
 28689  00703C  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28690  00703E  E113               	bnz	l19395
 28691  007040  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28692  007042  B0D8               	btfsc	status,0,c
 28693  007044  D010               	goto	l19395
 28694  007046                     u22150:
 28695                           
 28696                           ; BSR set to: 1
 28697  007046  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28698  007048  D005               	goto	u22160
 28699  00704A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28700  00704C  E10C               	bnz	l19395
 28701  00704E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28702  007050  B0D8               	btfsc	status,0,c
 28703  007052  D009               	goto	l19395
 28704  007054                     u22160:
 28705                           
 28706                           ; BSR set to: 1
 28707                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 28708  007054  C082  F18E         	movff	_fullmotorPower,_temppower
 28709                           
 28710                           ; BSR set to: 1
 28711                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 28712  007058  0E08               	movlw	8
 28713  00705A  0100               	movlb	0	; () banked
 28714  00705C  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 28715  00705E  D00B               	goto	l2235
 28716                           
 28717                           ; BSR set to: 0
 28718                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 28719  007060  0E3A               	movlw	58
 28720  007062                     L110:
 28721  007062  0101               	movlb	1	; () banked
 28722  007064  D7E7               	goto	L109
 28723  007066                     l19395:
 28724                           
 28725                           ; BSR set to: 1
 28726  007066  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28727  007068  D006               	goto	l2235
 28728  00706A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28729  00706C  E102               	bnz	u22180
 28730  00706E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28731  007070  B0D8               	btfsc	status,0,c
 28732  007072                     u22180:
 28733                           
 28734                           ; BSR set to: 1
 28735                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 28736  007072  C110  F18E         	movff	_var_sys+16,_temppower	;volatile
 28737  007076                     l2235:
 28738                           
 28739                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 28740  007076  0101               	movlb	1	; () banked
 28741  007078  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28742  00707A  D00E               	goto	l19405
 28743  00707C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28744  00707E  E103               	bnz	u22190
 28745  007080  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28746  007082  A0D8               	btfss	status,0,c
 28747  007084  D009               	goto	l19405
 28748  007086                     u22190:
 28749                           
 28750                           ; BSR set to: 1
 28751  007086  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28752  007088  D005               	goto	u22200
 28753  00708A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28754  00708C  E105               	bnz	l19405
 28755  00708E  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28756  007090  B0D8               	btfsc	status,0,c
 28757  007092  D002               	goto	l19405
 28758  007094                     u22200:
 28759                           
 28760                           ; BSR set to: 1
 28761                           ;outputs_MC50.c: 452:     defineatraso = 5;
 28762  007094  0E05               	movlw	5
 28763  007096  D001               	goto	L108
 28764  007098                     l19405:
 28765                           
 28766                           ; BSR set to: 1
 28767                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 28768  007098  0E17               	movlw	23
 28769  00709A                     L108:
 28770  00709A  6E13               	movwf	GetMotorPower@defineatraso^0,c
 28771                           
 28772                           ; BSR set to: 1
 28773                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 28774  00709C  518E               	movf	_temppower& (0+255),w,b
 28775  00709E  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 28776                           
 28777                           ; BSR set to: 1
 28778  0070A0  0012               	return		;funcret
 28779  0070A2                     __end_of_GetMotorPower:
 28780                           	callstack 0
 28781                           
 28782 ;; *************** function _ControlCounterMoves *****************
 28783 ;; Defined at:
 28784 ;;		line 293 in file "controlMemory_MC50.c"
 28785 ;; Parameters:    Size  Location     Type
 28786 ;;		None
 28787 ;; Auto vars:     Size  Location     Type
 28788 ;;		None
 28789 ;; Return value:  Size  Location     Type
 28790 ;;                  1    wreg      void 
 28791 ;; Registers used:
 28792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28793 ;; Tracked objects:
 28794 ;;		On entry : 3E/1
 28795 ;;		On exit  : 0/0
 28796 ;;		Unchanged: 0/0
 28797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28802 ;;Total ram usage:        0 bytes
 28803 ;; Hardware stack levels used: 1
 28804 ;; Hardware stack levels required when called: 14
 28805 ;; This function calls:
 28806 ;;		_SaveNVM_VarSystem
 28807 ;; This function is called by:
 28808 ;;		_main
 28809 ;; This function uses a non-reentrant model
 28810 ;;
 28811                           
 28812                           	psect	text126
 28813  0083F2                     __ptext126:
 28814                           	callstack 0
 28815  0083F2                     _ControlCounterMoves:
 28816                           	callstack 16
 28817                           
 28818                           ;controlMemory_MC50.c: 296:     if(ts_system.timeBetweenSaveCounters<=0)
 28819                           
 28820                           ; BSR set to: 1
 28821                           ;incstack = 0
 28822  0083F2  0101               	movlb	1	; () banked
 28823  0083F4  BFC1               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 28824  0083F6  D005               	goto	u27580
 28825  0083F8  51C1               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 28826  0083FA  E127               	bnz	l1486
 28827  0083FC  05C0               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 28828  0083FE  B0D8               	btfsc	status,0,c
 28829  008400  0012               	return	
 28830  008402                     u27580:
 28831                           
 28832                           ; BSR set to: 1
 28833                           ;controlMemory_MC50.c: 297:     {;controlMemory_MC50.c: 298:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 28834  008402  0E17               	movlw	23
 28835  008404  6FC1               	movwf	(_ts_system+39)& (0+255),b	;volatile
 28836  008406  0E70               	movlw	112
 28837  008408  6FC0               	movwf	(_ts_system+38)& (0+255),b	;volatile
 28838                           
 28839                           ; BSR set to: 1
 28840                           ;controlMemory_MC50.c: 300:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 28841  00840A  0100               	movlb	0	; () banked
 28842  00840C  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 28843  00840E  0101               	movlb	1	; () banked
 28844  008410  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 28845  008412  E110               	bnz	u27590
 28846  008414  0100               	movlb	0	; () banked
 28847  008416  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 28848  008418  0101               	movlb	1	; () banked
 28849  00841A  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 28850  00841C  E10B               	bnz	u27590
 28851  00841E  0100               	movlb	0	; () banked
 28852  008420  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 28853  008422  0101               	movlb	1	; () banked
 28854  008424  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 28855  008426  E106               	bnz	u27590
 28856  008428  0100               	movlb	0	; () banked
 28857  00842A  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 28858  00842C  0101               	movlb	1	; () banked
 28859  00842E  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 28860  008430  B4D8               	btfsc	status,2,c
 28861  008432  0012               	return	
 28862  008434                     u27590:
 28863                           
 28864                           ; BSR set to: 1
 28865                           ;controlMemory_MC50.c: 301:        {;controlMemory_MC50.c: 302:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 28866  008434  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 28867  008438  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 28868  00843C  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 28869  008440  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 28870                           
 28871                           ; BSR set to: 1
 28872                           ;controlMemory_MC50.c: 303:            SaveNVM_VarSystem(pageMemoryCounters);
 28873  008444  0E02               	movlw	2
 28874  008446  EC50  F045         	call	_SaveNVM_VarSystem
 28875  00844A                     l1486:
 28876  00844A  0012               	return		;funcret
 28877  00844C                     __end_of_ControlCounterMoves:
 28878                           	callstack 0
 28879                           
 28880 ;; *************** function _SaveNVM_VarSystem *****************
 28881 ;; Defined at:
 28882 ;;		line 175 in file "controlMemory_MC50.c"
 28883 ;; Parameters:    Size  Location     Type
 28884 ;;  page            1    wreg     unsigned char 
 28885 ;; Auto vars:     Size  Location     Type
 28886 ;;  page            1    0[BANK0 ] unsigned char 
 28887 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 28888 ;;  point           1    3[BANK0 ] PTR unsigned char 
 28889 ;;		 -> var_sys_NVM(64), 
 28890 ;; Return value:  Size  Location     Type
 28891 ;;                  1    wreg      void 
 28892 ;; Registers used:
 28893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28894 ;; Tracked objects:
 28895 ;;		On entry : 0/0
 28896 ;;		On exit  : 0/0
 28897 ;;		Unchanged: 0/0
 28898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28900 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28902 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28903 ;;Total ram usage:        4 bytes
 28904 ;; Hardware stack levels used: 1
 28905 ;; Hardware stack levels required when called: 13
 28906 ;; This function calls:
 28907 ;;		_i2c_writeNBytes
 28908 ;; This function is called by:
 28909 ;;		_loadNVM_VarSystem
 28910 ;;		_ResetDefaultMemory
 28911 ;;		_ControlCounterMoves
 28912 ;;		_checkNVM_VarSystem
 28913 ;;		_sm_execute_ControlLearning
 28914 ;;		_sm_execute_menuConfiguration
 28915 ;;		_setValueToEdit
 28916 ;;		_controlSelectRemote
 28917 ;;		_eusartparser
 28918 ;; This function uses a non-reentrant model
 28919 ;;
 28920                           
 28921                           	psect	text127
 28922  008AA0                     __ptext127:
 28923                           	callstack 0
 28924  008AA0                     _SaveNVM_VarSystem:
 28925                           	callstack 14
 28926                           
 28927                           ;incstack = 0
 28928                           ;SaveNVM_VarSystem@page stored from wreg
 28929  008AA0  0100               	movlb	0	; () banked
 28930  008AA2  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 28931                           
 28932                           ;controlMemory_MC50.c: 175: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 176: {;controlMemory_MC50.c: 177:     unsigned int tempAdd=page*16;
 28933  008AA4  0100               	movlb	0	; () banked
 28934  008AA6  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 28935  008AA8  0D10               	mullw	16
 28936  008AAA  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 28937  008AAE  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 28938                           
 28939                           ; BSR set to: 0
 28940                           ;controlMemory_MC50.c: 178:     char* point=(char*)&var_sys_NVM;
 28941  008AB2  0E98               	movlw	low _var_sys_NVM
 28942  008AB4  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 28943                           
 28944                           ; BSR set to: 0
 28945                           ;controlMemory_MC50.c: 179:     point=point+tempAdd;
 28946  008AB6  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 28947  008AB8  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 28948  008ABA  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 28949                           
 28950                           ; BSR set to: 0
 28951                           ;controlMemory_MC50.c: 180:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 28952  008ABC  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 28953  008AC0  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 28954  008AC4  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 28955  008AC8  0E00               	movlw	0
 28956  008ACA  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 28957  008ACC  0E10               	movlw	16
 28958  008ACE  6E25               	movwf	i2c_writeNBytes@len^0,c
 28959  008AD0  0E50               	movlw	80
 28960  008AD2  EC5A  F03F         	call	_i2c_writeNBytes
 28961  008AD6  0012               	return		;funcret
 28962  008AD8                     __end_of_SaveNVM_VarSystem:
 28963                           	callstack 0
 28964                           
 28965 ;; *************** function _i2c_writeNBytes *****************
 28966 ;; Defined at:
 28967 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 28968 ;; Parameters:    Size  Location     Type
 28969 ;;  address         1    wreg     unsigned char 
 28970 ;;  reg             2   33[COMRAM] unsigned short 
 28971 ;;  data            1   35[COMRAM] PTR void 
 28972 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 28973 ;;  len             2   36[COMRAM] unsigned int 
 28974 ;; Auto vars:     Size  Location     Type
 28975 ;;  address         1   56[COMRAM] unsigned char 
 28976 ;;  dat            17   39[COMRAM] unsigned char [17]
 28977 ;; Return value:  Size  Location     Type
 28978 ;;                  1    wreg      void 
 28979 ;; Registers used:
 28980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28981 ;; Tracked objects:
 28982 ;;		On entry : 3F/0
 28983 ;;		On exit  : 0/0
 28984 ;;		Unchanged: 0/0
 28985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28986 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28987 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28989 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28990 ;;Total ram usage:       24 bytes
 28991 ;; Hardware stack levels used: 1
 28992 ;; Hardware stack levels required when called: 12
 28993 ;; This function calls:
 28994 ;;		_I2C1_Close
 28995 ;;		_I2C1_MasterWrite
 28996 ;;		_I2C1_Open
 28997 ;;		_I2C1_SetAddressNackCallback
 28998 ;;		_I2C1_SetBuffer
 28999 ;;		_memcpy
 29000 ;; This function is called by:
 29001 ;;		_saveNewSerial
 29002 ;;		_RemoveSerial
 29003 ;;		_SaveNVM_VarSystem
 29004 ;; This function uses a non-reentrant model
 29005 ;;
 29006                           
 29007                           	psect	text128
 29008  007EB4                     __ptext128:
 29009                           	callstack 0
 29010  007EB4                     _i2c_writeNBytes:
 29011                           	callstack 14
 29012                           
 29013                           ;incstack = 0
 29014                           ;i2c_writeNBytes@address stored from wreg
 29015  007EB4  6E39               	movwf	i2c_writeNBytes@address^0,c
 29016                           
 29017                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 29018  007EB6  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 29019                           
 29020                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 29021  007EBA  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 29022  007EBC  6E10               	movwf	memcpy@d1^0,c
 29023  007EBE  6A11               	clrf	(memcpy@d1+1)^0,c
 29024  007EC0  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 29025  007EC4  6A13               	clrf	(memcpy@s1+1)^0,c
 29026  007EC6  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 29027  007ECA  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 29028  007ECE  EC52  F044         	call	_memcpy	;wreg free
 29029  007ED2                     l19429:
 29030  007ED2  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 29031  007ED4  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 29032  007ED6  EC2A  F03D         	call	_I2C1_Open
 29033  007EDA  0900               	iorlw	0
 29034  007EDC  B4D8               	btfsc	status,2,c
 29035  007EDE  D7F9               	goto	l19429
 29036                           
 29037                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 29038  007EE0  0E28               	movlw	low i2c_writeNBytes@dat
 29039  007EE2  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 29040  007EE4  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 29041  007EE6  0E01               	movlw	1
 29042  007EE8  2425               	addwf	i2c_writeNBytes@len^0,w,c
 29043  007EEA  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 29044  007EEC  0E00               	movlw	0
 29045  007EEE  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 29046  007EF0  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 29047  007EF2  EC4E  F048         	call	_I2C1_SetBuffer	;wreg free
 29048                           
 29049                           ; BSR set to: 2
 29050                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 29051  007EF6  0E00               	movlw	0
 29052  007EF8  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 29053  007EFA  0E00               	movlw	0
 29054  007EFC  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 29055  007EFE  0E00               	movlw	0
 29056  007F00  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 29057  007F02  0E00               	movlw	0
 29058  007F04  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 29059  007F06  EC7F  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 29060                           
 29061                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 29062  007F0A  EC4D  F049         	call	_I2C1_MasterWrite	;wreg free
 29063  007F0E                     l19437:
 29064  007F0E  ECC0  F047         	call	_I2C1_Close	;wreg free
 29065  007F12  06E8               	decf	wreg,f,c
 29066  007F14  B4D8               	btfsc	status,2,c
 29067  007F16  D7FB               	goto	l19437
 29068                           
 29069                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 29070  007F18  0ED0               	movlw	208
 29071  007F1A  6E27               	movwf	??_i2c_writeNBytes^0,c
 29072  007F1C  0ECA               	movlw	202
 29073  007F1E                     u28967:
 29074  007F1E  2EE8               	decfsz	wreg,f,c
 29075  007F20  D7FE               	bra	u28967
 29076  007F22  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 29077  007F24  D7FC               	bra	u28967
 29078  007F26  0012               	return		;funcret
 29079  007F28                     __end_of_i2c_writeNBytes:
 29080                           	callstack 0
 29081                           
 29082 ;; *************** function _memcpy *****************
 29083 ;; Defined at:
 29084 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 29085 ;; Parameters:    Size  Location     Type
 29086 ;;  d1              2   15[COMRAM] PTR void 
 29087 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29088 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29089 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 29090 ;;		 -> i2c_writeNBytes@dat(17), 
 29091 ;;  s1              2   17[COMRAM] PTR const void 
 29092 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29093 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29094 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 29095 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 29096 ;;  n               2   19[COMRAM] unsigned int 
 29097 ;; Auto vars:     Size  Location     Type
 29098 ;;  s               2   24[COMRAM] PTR const unsigned char 
 29099 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29100 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29101 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 29102 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 29103 ;;  d               2   22[COMRAM] PTR unsigned char 
 29104 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29105 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29106 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 29107 ;;		 -> i2c_writeNBytes@dat(17), 
 29108 ;;  tmp             1   21[COMRAM] unsigned char 
 29109 ;; Return value:  Size  Location     Type
 29110 ;;                  2   15[COMRAM] PTR void 
 29111 ;; Registers used:
 29112 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29113 ;; Tracked objects:
 29114 ;;		On entry : 0/0
 29115 ;;		On exit  : 0/0
 29116 ;;		Unchanged: 0/0
 29117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29118 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29119 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29121 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29122 ;;Total ram usage:       11 bytes
 29123 ;; Hardware stack levels used: 1
 29124 ;; Hardware stack levels required when called: 4
 29125 ;; This function calls:
 29126 ;;		Nothing
 29127 ;; This function is called by:
 29128 ;;		_i2c_writeNBytes
 29129 ;;		_getSerialCmd
 29130 ;;		_NormalKeyGen
 29131 ;;		_Decrypt
 29132 ;;		_keeloqDecryptPacket
 29133 ;;		_DecryptPacket_12BIT
 29134 ;; This function uses a non-reentrant model
 29135 ;;
 29136                           
 29137                           	psect	text129
 29138  0088A4                     __ptext129:
 29139                           	callstack 0
 29140  0088A4                     _memcpy:
 29141                           	callstack 21
 29142                           
 29143                           ;incstack = 0
 29144  0088A4  C012  F019         	movff	memcpy@s1,memcpy@s
 29145  0088A8  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 29146  0088AC  C010  F017         	movff	memcpy@d1,memcpy@d
 29147  0088B0  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 29148  0088B4  D010               	goto	l19369
 29149  0088B6                     l19361:
 29150  0088B6  C019  FFD9         	movff	memcpy@s,fsr2l
 29151  0088BA  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 29152  0088BE  50DF               	movf	indf2,w,c
 29153  0088C0  6E16               	movwf	memcpy@tmp^0,c
 29154  0088C2  4A19               	infsnz	memcpy@s^0,f,c
 29155  0088C4  2A1A               	incf	(memcpy@s+1)^0,f,c
 29156  0088C6  C017  FFD9         	movff	memcpy@d,fsr2l
 29157  0088CA  C018  FFDA         	movff	memcpy@d+1,fsr2h
 29158  0088CE  C016  FFDF         	movff	memcpy@tmp,indf2
 29159  0088D2  4A17               	infsnz	memcpy@d^0,f,c
 29160  0088D4  2A18               	incf	(memcpy@d+1)^0,f,c
 29161  0088D6                     l19369:
 29162  0088D6  0614               	decf	memcpy@n^0,f,c
 29163  0088D8  A0D8               	btfss	status,0,c
 29164  0088DA  0615               	decf	(memcpy@n+1)^0,f,c
 29165  0088DC  2814               	incf	memcpy@n^0,w,c
 29166  0088DE  E1EB               	bnz	l19361
 29167  0088E0  2815               	incf	(memcpy@n+1)^0,w,c
 29168  0088E2  B4D8               	btfsc	status,2,c
 29169  0088E4  0012               	return	
 29170  0088E6  D7E7               	goto	l19361
 29171  0088E8                     __end_of_memcpy:
 29172                           	callstack 0
 29173                           
 29174 ;; *************** function _I2C1_SetAddressNackCallback *****************
 29175 ;; Defined at:
 29176 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 29177 ;; Parameters:    Size  Location     Type
 29178 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 29179 ;;		 -> Absolute function(1), 
 29180 ;;  ptr             2   22[COMRAM] PTR void 
 29181 ;;		 -> NULL(0), 
 29182 ;; Auto vars:     Size  Location     Type
 29183 ;;		None
 29184 ;; Return value:  Size  Location     Type
 29185 ;;                  1    wreg      void 
 29186 ;; Registers used:
 29187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29188 ;; Tracked objects:
 29189 ;;		On entry : 3F/2
 29190 ;;		On exit  : 0/0
 29191 ;;		Unchanged: 0/0
 29192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29193 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29196 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29197 ;;Total ram usage:        4 bytes
 29198 ;; Hardware stack levels used: 1
 29199 ;; Hardware stack levels required when called: 5
 29200 ;; This function calls:
 29201 ;;		_I2C1_SetCallback
 29202 ;; This function is called by:
 29203 ;;		_i2c_writeNBytes
 29204 ;;		_i2c_readDataBlock
 29205 ;;		_I2C1_Read1ByteRegister
 29206 ;; This function uses a non-reentrant model
 29207 ;;
 29208                           
 29209                           	psect	text130
 29210  0090FE                     __ptext130:
 29211                           	callstack 0
 29212  0090FE                     _I2C1_SetAddressNackCallback:
 29213                           	callstack 20
 29214                           
 29215                           ; BSR set to: 2
 29216                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 29217                           
 29218                           ;incstack = 0
 29219  0090FE  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 29220  009102  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 29221  009106  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 29222  00910A  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 29223  00910E  0E02               	movlw	2
 29224  009110  EC3B  F040         	call	_I2C1_SetCallback
 29225  009114  0012               	return		;funcret
 29226  009116                     __end_of_I2C1_SetAddressNackCallback:
 29227                           	callstack 0
 29228                           
 29229 ;; *************** function _I2C1_Open *****************
 29230 ;; Defined at:
 29231 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 29232 ;; Parameters:    Size  Location     Type
 29233 ;;  address         1    wreg     unsigned char 
 29234 ;; Auto vars:     Size  Location     Type
 29235 ;;  address         1   15[COMRAM] unsigned char 
 29236 ;;  returnValue     1   16[COMRAM] enum E355
 29237 ;; Return value:  Size  Location     Type
 29238 ;;                  1    wreg      enum E355
 29239 ;; Registers used:
 29240 ;;		wreg, status,2, status,0, cstack
 29241 ;; Tracked objects:
 29242 ;;		On entry : 0/1
 29243 ;;		On exit  : 33/2
 29244 ;;		Unchanged: 0/0
 29245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29247 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29249 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29250 ;;Total ram usage:        2 bytes
 29251 ;; Hardware stack levels used: 1
 29252 ;; Hardware stack levels required when called: 5
 29253 ;; This function calls:
 29254 ;;		_I2C1_MasterClearIrq
 29255 ;;		_I2C1_MasterOpen
 29256 ;; This function is called by:
 29257 ;;		_i2c_writeNBytes
 29258 ;;		_i2c_readDataBlock
 29259 ;;		_I2C1_Read1ByteRegister
 29260 ;; This function uses a non-reentrant model
 29261 ;;
 29262                           
 29263                           	psect	text131
 29264  007A54                     __ptext131:
 29265                           	callstack 0
 29266  007A54                     _I2C1_Open:
 29267                           	callstack 20
 29268                           
 29269                           ;incstack = 0
 29270                           ;I2C1_Open@address stored from wreg
 29271  007A54  6E10               	movwf	I2C1_Open@address^0,c
 29272                           
 29273                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 29274  007A56  0E01               	movlw	1
 29275  007A58  6E11               	movwf	I2C1_Open@returnValue^0,c
 29276                           
 29277                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 29278  007A5A  0102               	movlb	2	; () banked
 29279  007A5C  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 29280  007A5E  D03A               	goto	l19335
 29281                           
 29282                           ; BSR set to: 2
 29283                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 29284  007A60  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 29285                           
 29286                           ; BSR set to: 2
 29287                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 29288  007A64  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 29289                           
 29290                           ; BSR set to: 2
 29291                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 29292  007A66  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 29293                           
 29294                           ; BSR set to: 2
 29295                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 29296  007A68  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 29297                           
 29298                           ; BSR set to: 2
 29299                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 29300  007A6A  0E0E               	movlw	14
 29301  007A6C  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29302                           
 29303                           ; BSR set to: 2
 29304                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 29305  007A6E  0E01               	movlw	1
 29306  007A70  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 29307  007A72  0EF4               	movlw	244
 29308  007A74  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 29309                           
 29310                           ; BSR set to: 2
 29311                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 29312  007A76  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 29313                           
 29314                           ; BSR set to: 2
 29315                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 29316  007A78  0E34               	movlw	low _I2C1_CallbackReturnStop
 29317  007A7A  6F3C               	movwf	_I2C1_Status& (0+255),b
 29318  007A7C  0E93               	movlw	high _I2C1_CallbackReturnStop
 29319  007A7E  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 29320                           
 29321                           ; BSR set to: 2
 29322                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 29323  007A80  0E00               	movlw	0
 29324  007A82  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 29325  007A84  0E00               	movlw	0
 29326  007A86  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 29327                           
 29328                           ; BSR set to: 2
 29329                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 29330  007A88  0E34               	movlw	low _I2C1_CallbackReturnStop
 29331  007A8A  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 29332  007A8C  0E93               	movlw	high _I2C1_CallbackReturnStop
 29333  007A8E  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 29334                           
 29335                           ; BSR set to: 2
 29336                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 29337  007A90  0E00               	movlw	0
 29338  007A92  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 29339  007A94  0E00               	movlw	0
 29340  007A96  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 29341                           
 29342                           ; BSR set to: 2
 29343                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 29344  007A98  0E34               	movlw	low _I2C1_CallbackReturnStop
 29345  007A9A  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 29346  007A9C  0E93               	movlw	high _I2C1_CallbackReturnStop
 29347  007A9E  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 29348                           
 29349                           ; BSR set to: 2
 29350                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 29351  007AA0  0E00               	movlw	0
 29352  007AA2  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 29353  007AA4  0E00               	movlw	0
 29354  007AA6  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 29355                           
 29356                           ; BSR set to: 2
 29357                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 29358  007AA8  0E34               	movlw	low _I2C1_CallbackReturnStop
 29359  007AAA  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 29360  007AAC  0E93               	movlw	high _I2C1_CallbackReturnStop
 29361  007AAE  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 29362                           
 29363                           ; BSR set to: 2
 29364                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 29365  007AB0  0E00               	movlw	0
 29366  007AB2  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 29367  007AB4  0E00               	movlw	0
 29368  007AB6  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 29369                           
 29370                           ; BSR set to: 2
 29371                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 29372  007AB8  0E30               	movlw	low _I2C1_CallbackReturnReset
 29373  007ABA  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 29374  007ABC  0E93               	movlw	high _I2C1_CallbackReturnReset
 29375  007ABE  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 29376                           
 29377                           ; BSR set to: 2
 29378                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 29379  007AC0  0E00               	movlw	0
 29380  007AC2  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 29381  007AC4  0E00               	movlw	0
 29382  007AC6  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 29383                           
 29384                           ; BSR set to: 2
 29385                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 29386  007AC8  EC84  F049         	call	_I2C1_MasterClearIrq	;wreg free
 29387                           
 29388                           ; BSR set to: 14
 29389                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 29390  007ACC  EC8B  F048         	call	_I2C1_MasterOpen	;wreg free
 29391                           
 29392                           ; BSR set to: 14
 29393                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 29394  007AD0  0E00               	movlw	0
 29395  007AD2  6E11               	movwf	I2C1_Open@returnValue^0,c
 29396  007AD4                     l19335:
 29397                           
 29398                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 29399  007AD4  5011               	movf	I2C1_Open@returnValue^0,w,c
 29400  007AD6  0012               	return		;funcret
 29401  007AD8                     __end_of_I2C1_Open:
 29402                           	callstack 0
 29403                           
 29404 ;; *************** function _I2C1_MasterOpen *****************
 29405 ;; Defined at:
 29406 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 29407 ;; Parameters:    Size  Location     Type
 29408 ;;		None
 29409 ;; Auto vars:     Size  Location     Type
 29410 ;;		None
 29411 ;; Return value:  Size  Location     Type
 29412 ;;                  1    wreg      _Bool 
 29413 ;; Registers used:
 29414 ;;		wreg, status,2
 29415 ;; Tracked objects:
 29416 ;;		On entry : 3F/E
 29417 ;;		On exit  : 3F/E
 29418 ;;		Unchanged: 3F/0
 29419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29424 ;;Total ram usage:        0 bytes
 29425 ;; Hardware stack levels used: 1
 29426 ;; Hardware stack levels required when called: 4
 29427 ;; This function calls:
 29428 ;;		Nothing
 29429 ;; This function is called by:
 29430 ;;		_I2C1_Open
 29431 ;; This function uses a non-reentrant model
 29432 ;;
 29433                           
 29434                           	psect	text132
 29435  009116                     __ptext132:
 29436                           	callstack 0
 29437  009116                     _I2C1_MasterOpen:
 29438                           	callstack 20
 29439                           
 29440                           ; BSR set to: 14
 29441                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 29442                           
 29443                           ;incstack = 0
 29444  009116  BA96               	btfsc	150,5,c	;volatile
 29445  009118  0012               	return	
 29446                           
 29447                           ; BSR set to: 14
 29448                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 29449  00911A  0E80               	movlw	128
 29450  00911C  6E95               	movwf	149,c	;volatile
 29451                           
 29452                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 29453  00911E  0E08               	movlw	8
 29454  009120  6E96               	movwf	150,c	;volatile
 29455                           
 29456                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 29457  009122  0E00               	movlw	0
 29458  009124  6E97               	movwf	151,c	;volatile
 29459                           
 29460                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 29461  009126  0E9F               	movlw	159
 29462  009128  6E93               	movwf	147,c	;volatile
 29463                           
 29464                           ; BSR set to: 14
 29465                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 29466  00912A  8A96               	bsf	150,5,c	;volatile
 29467                           
 29468                           ; BSR set to: 14
 29469  00912C  0012               	return		;funcret
 29470  00912E                     __end_of_I2C1_MasterOpen:
 29471                           	callstack 0
 29472                           
 29473 ;; *************** function _I2C1_MasterWrite *****************
 29474 ;; Defined at:
 29475 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 29476 ;; Parameters:    Size  Location     Type
 29477 ;;		None
 29478 ;; Auto vars:     Size  Location     Type
 29479 ;;		None
 29480 ;; Return value:  Size  Location     Type
 29481 ;;                  1    wreg      enum E355
 29482 ;; Registers used:
 29483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29484 ;; Tracked objects:
 29485 ;;		On entry : 0/2
 29486 ;;		On exit  : 3F/2
 29487 ;;		Unchanged: 0/0
 29488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29493 ;;Total ram usage:        0 bytes
 29494 ;; Hardware stack levels used: 1
 29495 ;; Hardware stack levels required when called: 11
 29496 ;; This function calls:
 29497 ;;		_I2C1_MasterOperation
 29498 ;; This function is called by:
 29499 ;;		_i2c_writeNBytes
 29500 ;;		_i2c_readDataBlock
 29501 ;;		_I2C1_Read1ByteRegister
 29502 ;; This function uses a non-reentrant model
 29503 ;;
 29504                           
 29505                           	psect	text133
 29506  00929A                     __ptext133:
 29507                           	callstack 0
 29508  00929A                     _I2C1_MasterWrite:
 29509                           	callstack 14
 29510                           
 29511                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 29512                           
 29513                           ; BSR set to: 14
 29514                           ;incstack = 0
 29515  00929A  0E00               	movlw	0
 29516  00929C  EC29  F046         	call	_I2C1_MasterOperation
 29517                           
 29518                           ; BSR set to: 2
 29519  0092A0  0012               	return		;funcret
 29520  0092A2                     __end_of_I2C1_MasterWrite:
 29521                           	callstack 0
 29522                           
 29523 ;; *************** function _I2C1_MasterOperation *****************
 29524 ;; Defined at:
 29525 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 29526 ;; Parameters:    Size  Location     Type
 29527 ;;  read            1    wreg     _Bool 
 29528 ;; Auto vars:     Size  Location     Type
 29529 ;;  read            1   31[COMRAM] _Bool 
 29530 ;;  returnValue     1   32[COMRAM] enum E355
 29531 ;; Return value:  Size  Location     Type
 29532 ;;                  1    wreg      enum E355
 29533 ;; Registers used:
 29534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29535 ;; Tracked objects:
 29536 ;;		On entry : 0/2
 29537 ;;		On exit  : 3F/2
 29538 ;;		Unchanged: 0/0
 29539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29544 ;;Total ram usage:        2 bytes
 29545 ;; Hardware stack levels used: 1
 29546 ;; Hardware stack levels required when called: 10
 29547 ;; This function calls:
 29548 ;;		_I2C1_MasterStart
 29549 ;;		_I2C1_Poller
 29550 ;; This function is called by:
 29551 ;;		_I2C1_MasterWrite
 29552 ;; This function uses a non-reentrant model
 29553 ;;
 29554                           
 29555                           	psect	text134
 29556  008C52                     __ptext134:
 29557                           	callstack 0
 29558  008C52                     _I2C1_MasterOperation:
 29559                           	callstack 14
 29560                           
 29561                           ; BSR set to: 2
 29562                           ;incstack = 0
 29563                           ;I2C1_MasterOperation@read stored from wreg
 29564  008C52  6E20               	movwf	I2C1_MasterOperation@read^0,c
 29565                           
 29566                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 29567  008C54  0E01               	movlw	1
 29568  008C56  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 29569                           
 29570                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 29571  008C58  0102               	movlb	2	; () banked
 29572  008C5A  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 29573  008C5C  D00E               	goto	l19287
 29574                           
 29575                           ; BSR set to: 2
 29576                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 29577  008C5E  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 29578                           
 29579                           ; BSR set to: 2
 29580                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 29581  008C60  0E00               	movlw	0
 29582  008C62  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 29583                           
 29584                           ; BSR set to: 2
 29585                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 29586  008C64  5020               	movf	I2C1_MasterOperation@read^0,w,c
 29587  008C66  B4D8               	btfsc	status,2,c
 29588  008C68  D002               	goto	l19281
 29589                           
 29590                           ; BSR set to: 2
 29591                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 29592  008C6A  0E01               	movlw	1
 29593  008C6C  D001               	goto	L111
 29594  008C6E                     l19281:
 29595                           
 29596                           ; BSR set to: 2
 29597                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 29598  008C6E  0E02               	movlw	2
 29599  008C70                     L111:
 29600  008C70  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29601                           
 29602                           ; BSR set to: 2
 29603                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 29604  008C72  ECA0  F049         	call	_I2C1_MasterStart	;wreg free
 29605                           
 29606                           ; BSR set to: 2
 29607                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 29608  008C76  ECE8  F048         	call	_I2C1_Poller	;wreg free
 29609  008C7A                     l19287:
 29610                           
 29611                           ; BSR set to: 2
 29612                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 29613  008C7A  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 29614                           
 29615                           ; BSR set to: 2
 29616  008C7C  0012               	return		;funcret
 29617  008C7E                     __end_of_I2C1_MasterOperation:
 29618                           	callstack 0
 29619                           
 29620 ;; *************** function _I2C1_Poller *****************
 29621 ;; Defined at:
 29622 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 29623 ;; Parameters:    Size  Location     Type
 29624 ;;		None
 29625 ;; Auto vars:     Size  Location     Type
 29626 ;;		None
 29627 ;; Return value:  Size  Location     Type
 29628 ;;                  1    wreg      void 
 29629 ;; Registers used:
 29630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29631 ;; Tracked objects:
 29632 ;;		On entry : 3F/2
 29633 ;;		On exit  : 3F/2
 29634 ;;		Unchanged: 0/0
 29635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29640 ;;Total ram usage:        0 bytes
 29641 ;; Hardware stack levels used: 1
 29642 ;; Hardware stack levels required when called: 9
 29643 ;; This function calls:
 29644 ;;		_I2C1_MasterFsm
 29645 ;;		_I2C1_MasterWaitForEvent
 29646 ;; This function is called by:
 29647 ;;		_I2C1_MasterOperation
 29648 ;; This function uses a non-reentrant model
 29649 ;;
 29650                           
 29651                           	psect	text135
 29652  0091D0                     __ptext135:
 29653                           	callstack 0
 29654  0091D0                     _I2C1_Poller:
 29655                           	callstack 14
 29656                           
 29657                           ; BSR set to: 2
 29658                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 29659                           
 29660                           ; BSR set to: 2
 29661                           ;incstack = 0
 29662  0091D0  D004               	goto	l19255
 29663  0091D2                     l19251:
 29664                           
 29665                           ; BSR set to: 2
 29666                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 29667  0091D2  EC51  F049         	call	_I2C1_MasterWaitForEvent	;wreg free
 29668                           
 29669                           ; BSR set to: 14
 29670                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 29671  0091D6  ECD3  F042         	call	_I2C1_MasterFsm	;wreg free
 29672  0091DA                     l19255:
 29673                           
 29674                           ; BSR set to: 2
 29675                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 29676  0091DA  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 29677  0091DC  0012               	return	
 29678  0091DE  D7F9               	goto	l19251
 29679  0091E0                     __end_of_I2C1_Poller:
 29680                           	callstack 0
 29681                           
 29682 ;; *************** function _I2C1_MasterWaitForEvent *****************
 29683 ;; Defined at:
 29684 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 29685 ;; Parameters:    Size  Location     Type
 29686 ;;		None
 29687 ;; Auto vars:     Size  Location     Type
 29688 ;;		None
 29689 ;; Return value:  Size  Location     Type
 29690 ;;                  1    wreg      void 
 29691 ;; Registers used:
 29692 ;;		None
 29693 ;; Tracked objects:
 29694 ;;		On entry : 3F/2
 29695 ;;		On exit  : 3F/E
 29696 ;;		Unchanged: 0/0
 29697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29702 ;;Total ram usage:        0 bytes
 29703 ;; Hardware stack levels used: 1
 29704 ;; Hardware stack levels required when called: 4
 29705 ;; This function calls:
 29706 ;;		Nothing
 29707 ;; This function is called by:
 29708 ;;		_I2C1_Poller
 29709 ;; This function uses a non-reentrant model
 29710 ;;
 29711                           
 29712                           	psect	text136
 29713  0092A2                     __ptext136:
 29714                           	callstack 0
 29715  0092A2                     _I2C1_MasterWaitForEvent:
 29716                           	callstack 18
 29717                           
 29718                           ; BSR set to: 2
 29719                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 29720                           
 29721                           ; BSR set to: 2
 29722                           ;incstack = 0
 29723                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 29724  0092A2  010E               	movlb	14	; () banked
 29725  0092A4  B1CD               	btfsc	205,0,b	;volatile
 29726  0092A6  0012               	return	
 29727  0092A8  D7FC               	goto	__ptext136
 29728  0092AA                     __end_of_I2C1_MasterWaitForEvent:
 29729                           	callstack 0
 29730                           
 29731 ;; *************** function _I2C1_MasterFsm *****************
 29732 ;; Defined at:
 29733 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 29734 ;; Parameters:    Size  Location     Type
 29735 ;;		None
 29736 ;; Auto vars:     Size  Location     Type
 29737 ;;		None
 29738 ;; Return value:  Size  Location     Type
 29739 ;;                  1    wreg      void 
 29740 ;; Registers used:
 29741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29742 ;; Tracked objects:
 29743 ;;		On entry : 3F/E
 29744 ;;		On exit  : 3F/2
 29745 ;;		Unchanged: 0/0
 29746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29749 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29750 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29751 ;;Total ram usage:        3 bytes
 29752 ;; Hardware stack levels used: 1
 29753 ;; Hardware stack levels required when called: 8
 29754 ;; This function calls:
 29755 ;;		_I2C1_DO_ADDRESS_NACK
 29756 ;;		_I2C1_DO_IDLE
 29757 ;;		_I2C1_DO_RCEN
 29758 ;;		_I2C1_DO_RESET
 29759 ;;		_I2C1_DO_RX
 29760 ;;		_I2C1_DO_RX_ACK
 29761 ;;		_I2C1_DO_RX_NACK_RESTART
 29762 ;;		_I2C1_DO_RX_NACK_STOP
 29763 ;;		_I2C1_DO_SEND_ADR_READ
 29764 ;;		_I2C1_DO_SEND_ADR_WRITE
 29765 ;;		_I2C1_DO_SEND_RESTART
 29766 ;;		_I2C1_DO_SEND_RESTART_READ
 29767 ;;		_I2C1_DO_SEND_RESTART_WRITE
 29768 ;;		_I2C1_DO_SEND_STOP
 29769 ;;		_I2C1_DO_TX
 29770 ;;		_I2C1_DO_TX_EMPTY
 29771 ;;		_I2C1_MasterClearIrq
 29772 ;;		_I2C1_MasterIsNack
 29773 ;; This function is called by:
 29774 ;;		_I2C1_Poller
 29775 ;; This function uses a non-reentrant model
 29776 ;;
 29777                           
 29778                           	psect	text137
 29779  0085A6                     __ptext137:
 29780                           	callstack 0
 29781  0085A6                     _I2C1_MasterFsm:
 29782                           	callstack 14
 29783                           
 29784                           ; BSR set to: 14
 29785                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 29786                           
 29787                           ; BSR set to: 14
 29788                           ;incstack = 0
 29789  0085A6  EC84  F049         	call	_I2C1_MasterClearIrq	;wreg free
 29790                           
 29791                           ; BSR set to: 14
 29792                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 29793  0085AA  0102               	movlb	2	; () banked
 29794  0085AC  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 29795  0085AE  D007               	goto	l19245
 29796                           
 29797                           ; BSR set to: 2
 29798  0085B0  EC05  F049         	call	_I2C1_MasterIsNack	;wreg free
 29799  0085B4  0900               	iorlw	0
 29800  0085B6  B4D8               	btfsc	status,2,c
 29801  0085B8  D002               	goto	l19245
 29802                           
 29803                           ; BSR set to: 2
 29804                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 29805  0085BA  0E0F               	movlw	15
 29806  0085BC  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29807  0085BE                     l19245:
 29808                           
 29809                           ; BSR set to: 2
 29810                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 29811  0085BE  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 29812  0085C0  0D02               	mullw	2
 29813  0085C2  50F3               	movf	243,w,c
 29814  0085C4  0F01               	addlw	low _i2c1_fsmStateTable
 29815  0085C6  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 29816  0085C8  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 29817  0085CC                     	if	1	;There is more than 1 active tblptr byte
 29818  0085CC  0E0F               	movlw	high __smallconst
 29819  0085CE  6EF7               	movwf	tblptrh,c
 29820  0085D0                     	endif
 29821  0085D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29822  0085D0  6AF8               	clrf	tblptru,c
 29823  0085D2                     	endif
 29824  0085D2                     	if	0	;tblptru may be non-zero
 29825  0085D2                     	endif
 29826  0085D2  0009               	tblrd		*+
 29827  0085D4  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 29828  0085D8  0009               	tblrd		*+
 29829  0085DA  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 29830  0085DE  D801               	call	u22048
 29831  0085E0  D009               	goto	u22049
 29832  0085E2                     u22048:
 29833  0085E2  0005               	push	
 29834  0085E4  6EFA               	movwf	pclath,c
 29835  0085E6  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 29836  0085E8  6EFD               	movwf	tosl,c
 29837  0085EA  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 29838  0085EC  6EFE               	movwf	tosh,c
 29839  0085EE  6AFF               	clrf	tosu,c
 29840  0085F0  50FA               	movf	pclath,w,c
 29841  0085F2  0012               	return		;indir
 29842  0085F4                     u22049:
 29843  0085F4  0102               	movlb	2	; () banked
 29844  0085F6  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29845                           
 29846                           ; BSR set to: 2
 29847  0085F8  0012               	return		;funcret
 29848  0085FA                     __end_of_I2C1_MasterFsm:
 29849                           	callstack 0
 29850                           
 29851 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 29852 ;; Defined at:
 29853 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 29854 ;; Parameters:    Size  Location     Type
 29855 ;;		None
 29856 ;; Auto vars:     Size  Location     Type
 29857 ;;		None
 29858 ;; Return value:  Size  Location     Type
 29859 ;;                  1    wreg      enum E10442
 29860 ;; Registers used:
 29861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 29862 ;; Tracked objects:
 29863 ;;		On entry : 3F/2
 29864 ;;		On exit  : 0/0
 29865 ;;		Unchanged: 0/0
 29866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29870 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29871 ;;Total ram usage:        2 bytes
 29872 ;; Hardware stack levels used: 1
 29873 ;; Hardware stack levels required when called: 7
 29874 ;; This function calls:
 29875 ;;		Absolute function
 29876 ;;		_I2C1_CallbackReturnReset
 29877 ;;		_I2C1_CallbackReturnStop
 29878 ;;		_I2C1_DO_SEND_RESTART
 29879 ;;		_I2C1_DO_SEND_STOP
 29880 ;;		_rd1RegCompleteHandler
 29881 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 29882 ;;		_rd2RegCompleteHandler
 29883 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 29884 ;;		_rdBlkRegCompleteHandler
 29885 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 29886 ;;		_wr1RegCompleteHandler
 29887 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 29888 ;;		_wr2RegCompleteHandler
 29889 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 29890 ;; This function is called by:
 29891 ;;		_I2C1_MasterFsm
 29892 ;; This function uses a non-reentrant model
 29893 ;;
 29894                           
 29895                           	psect	text138
 29896  00873A                     __ptext138:
 29897                           	callstack 0
 29898  00873A                     _I2C1_DO_ADDRESS_NACK:
 29899                           	callstack 14
 29900                           
 29901                           ; BSR set to: 2
 29902                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 29903                           
 29904                           ; BSR set to: 2
 29905                           ;incstack = 0
 29906  00873A  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 29907                           
 29908                           ; BSR set to: 2
 29909                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 29910  00873C  0E02               	movlw	2
 29911  00873E  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 29912                           
 29913                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 29914  008740  D006               	goto	l19229
 29915  008742                     l19219:
 29916                           
 29917                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 29918  008742  EC65  F049         	call	_I2C1_DO_SEND_RESTART	;wreg free
 29919  008746  0012               	return	
 29920  008748                     l19223:
 29921                           
 29922                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 29923  008748  EC61  F049         	call	_I2C1_DO_SEND_STOP	;wreg free
 29924  00874C  0012               	return	
 29925  00874E                     l19229:
 29926                           
 29927                           ; BSR set to: 2
 29928  00874E  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 29929  008752  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 29930  008756  D801               	call	u22008
 29931  008758  D009               	goto	u22009
 29932  00875A                     u22008:
 29933  00875A  0005               	push	
 29934  00875C  6EFA               	movwf	pclath,c
 29935  00875E  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 29936  008760  6EFD               	movwf	tosl,c
 29937  008762  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 29938  008764  6EFE               	movwf	tosh,c
 29939  008766  6AFF               	clrf	tosu,c
 29940  008768  50FA               	movf	pclath,w,c
 29941  00876A  0012               	return		;indir
 29942  00876C                     u22009:
 29943  00876C  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 29944  00876E  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 29945                           
 29946                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29947                           ; Switch size 1, requested type "simple"
 29948                           ; Number of cases is 1, Range of values is 0 to 0
 29949                           ; switch strategies available:
 29950                           ; Name         Instructions Cycles
 29951                           ; simple_byte            4     3 (average)
 29952                           ;	Chosen strategy is simple_byte
 29953  008770  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 29954  008772  0A00               	xorlw	0	; case 0
 29955  008774  A4D8               	btfss	status,2,c
 29956  008776  D7E8               	goto	l19223
 29957                           
 29958                           ; Switch size 1, requested type "simple"
 29959                           ; Number of cases is 2, Range of values is 2 to 3
 29960                           ; switch strategies available:
 29961                           ; Name         Instructions Cycles
 29962                           ; simple_byte            7     4 (average)
 29963                           ;	Chosen strategy is simple_byte
 29964  008778  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 29965  00877A  0A02               	xorlw	2	; case 2
 29966  00877C  B4D8               	btfsc	status,2,c
 29967  00877E  D7E1               	goto	l19219
 29968  008780  0A01               	xorlw	1	; case 3
 29969  008782  B4D8               	btfsc	status,2,c
 29970  008784  D7DE               	goto	l19219
 29971  008786  D7E0               	goto	l19223
 29972  008788                     __end_of_I2C1_DO_ADDRESS_NACK:
 29973                           	callstack 0
 29974                           
 29975 ;; *************** function _I2C1_DO_RESET *****************
 29976 ;; Defined at:
 29977 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 29978 ;; Parameters:    Size  Location     Type
 29979 ;;		None
 29980 ;; Auto vars:     Size  Location     Type
 29981 ;;		None
 29982 ;; Return value:  Size  Location     Type
 29983 ;;                  1    wreg      enum E10442
 29984 ;; Registers used:
 29985 ;;		wreg, status,2
 29986 ;; Tracked objects:
 29987 ;;		On entry : 3F/2
 29988 ;;		On exit  : 3F/2
 29989 ;;		Unchanged: 0/0
 29990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29995 ;;Total ram usage:        0 bytes
 29996 ;; Hardware stack levels used: 1
 29997 ;; Hardware stack levels required when called: 4
 29998 ;; This function calls:
 29999 ;;		Nothing
 30000 ;; This function is called by:
 30001 ;;		_I2C1_MasterFsm
 30002 ;; This function uses a non-reentrant model
 30003 ;;
 30004                           
 30005                           	psect	text139
 30006  00927C                     __ptext139:
 30007                           	callstack 0
 30008  00927C                     _I2C1_DO_RESET:
 30009                           	callstack 17
 30010                           
 30011                           ; BSR set to: 2
 30012                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 30013                           
 30014                           ;incstack = 0
 30015  00927C  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30016                           
 30017                           ; BSR set to: 2
 30018                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 30019  00927E  0E00               	movlw	0
 30020  009280  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30021                           
 30022                           ; BSR set to: 2
 30023                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 30024  009282  0E0E               	movlw	14
 30025                           
 30026                           ; BSR set to: 2
 30027  009284  0012               	return		;funcret
 30028  009286                     __end_of_I2C1_DO_RESET:
 30029                           	callstack 0
 30030                           
 30031 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 30032 ;; Defined at:
 30033 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 30034 ;; Parameters:    Size  Location     Type
 30035 ;;		None
 30036 ;; Auto vars:     Size  Location     Type
 30037 ;;		None
 30038 ;; Return value:  Size  Location     Type
 30039 ;;                  1    wreg      enum E10442
 30040 ;; Registers used:
 30041 ;;		wreg, cstack
 30042 ;; Tracked objects:
 30043 ;;		On entry : 0/2
 30044 ;;		On exit  : 0/0
 30045 ;;		Unchanged: 0/0
 30046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30051 ;;Total ram usage:        0 bytes
 30052 ;; Hardware stack levels used: 1
 30053 ;; Hardware stack levels required when called: 5
 30054 ;; This function calls:
 30055 ;;		_I2C1_MasterSendNack
 30056 ;; This function is called by:
 30057 ;;		_I2C1_DO_RX
 30058 ;;		_I2C1_MasterFsm
 30059 ;; This function uses a non-reentrant model
 30060 ;;
 30061                           
 30062                           	psect	text140
 30063  0092AA                     __ptext140:
 30064                           	callstack 0
 30065  0092AA                     _I2C1_DO_RX_NACK_RESTART:
 30066                           	callstack 16
 30067                           
 30068                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 30069                           
 30070                           ; BSR set to: 2
 30071                           ;incstack = 0
 30072  0092AA  EC81  F049         	call	_I2C1_MasterSendNack	;wreg free
 30073                           
 30074                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 30075  0092AE  0E09               	movlw	9
 30076  0092B0  0012               	return		;funcret
 30077  0092B2                     __end_of_I2C1_DO_RX_NACK_RESTART:
 30078                           	callstack 0
 30079                           
 30080 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 30081 ;; Defined at:
 30082 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 30083 ;; Parameters:    Size  Location     Type
 30084 ;;		None
 30085 ;; Auto vars:     Size  Location     Type
 30086 ;;		None
 30087 ;; Return value:  Size  Location     Type
 30088 ;;                  1    wreg      enum E10442
 30089 ;; Registers used:
 30090 ;;		wreg, cstack
 30091 ;; Tracked objects:
 30092 ;;		On entry : 0/2
 30093 ;;		On exit  : 0/0
 30094 ;;		Unchanged: 0/0
 30095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30100 ;;Total ram usage:        0 bytes
 30101 ;; Hardware stack levels used: 1
 30102 ;; Hardware stack levels required when called: 5
 30103 ;; This function calls:
 30104 ;;		_I2C1_MasterSendNack
 30105 ;; This function is called by:
 30106 ;;		_I2C1_DO_RX
 30107 ;;		_I2C1_MasterFsm
 30108 ;; This function uses a non-reentrant model
 30109 ;;
 30110                           
 30111                           	psect	text141
 30112  0092B2                     __ptext141:
 30113                           	callstack 0
 30114  0092B2                     _I2C1_DO_RX_NACK_STOP:
 30115                           	callstack 16
 30116                           
 30117                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 30118                           
 30119                           ;incstack = 0
 30120  0092B2  EC81  F049         	call	_I2C1_MasterSendNack	;wreg free
 30121                           
 30122                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 30123  0092B6  0E0A               	movlw	10
 30124  0092B8  0012               	return		;funcret
 30125  0092BA                     __end_of_I2C1_DO_RX_NACK_STOP:
 30126                           	callstack 0
 30127                           
 30128 ;; *************** function _I2C1_DO_RX_ACK *****************
 30129 ;; Defined at:
 30130 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 30131 ;; Parameters:    Size  Location     Type
 30132 ;;		None
 30133 ;; Auto vars:     Size  Location     Type
 30134 ;;		None
 30135 ;; Return value:  Size  Location     Type
 30136 ;;                  1    wreg      enum E10442
 30137 ;; Registers used:
 30138 ;;		wreg, cstack
 30139 ;; Tracked objects:
 30140 ;;		On entry : 3F/2
 30141 ;;		On exit  : 3F/2
 30142 ;;		Unchanged: 3F/0
 30143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30148 ;;Total ram usage:        0 bytes
 30149 ;; Hardware stack levels used: 1
 30150 ;; Hardware stack levels required when called: 5
 30151 ;; This function calls:
 30152 ;;		_I2C1_MasterSendAck
 30153 ;; This function is called by:
 30154 ;;		_I2C1_MasterFsm
 30155 ;; This function uses a non-reentrant model
 30156 ;;
 30157                           
 30158                           	psect	text142
 30159  0092BA                     __ptext142:
 30160                           	callstack 0
 30161  0092BA                     _I2C1_DO_RX_ACK:
 30162                           	callstack 16
 30163                           
 30164                           ; BSR set to: 2
 30165                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 30166                           
 30167                           ;incstack = 0
 30168  0092BA  EC7E  F049         	call	_I2C1_MasterSendAck	;wreg free
 30169                           
 30170                           ; BSR set to: 2
 30171                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 30172  0092BE  0E05               	movlw	5
 30173                           
 30174                           ; BSR set to: 2
 30175  0092C0  0012               	return		;funcret
 30176  0092C2                     __end_of_I2C1_DO_RX_ACK:
 30177                           	callstack 0
 30178                           
 30179 ;; *************** function _I2C1_DO_SEND_STOP *****************
 30180 ;; Defined at:
 30181 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 30182 ;; Parameters:    Size  Location     Type
 30183 ;;		None
 30184 ;; Auto vars:     Size  Location     Type
 30185 ;;		None
 30186 ;; Return value:  Size  Location     Type
 30187 ;;                  1    wreg      enum E10442
 30188 ;; Registers used:
 30189 ;;		wreg, cstack
 30190 ;; Tracked objects:
 30191 ;;		On entry : 0/2
 30192 ;;		On exit  : 0/0
 30193 ;;		Unchanged: 0/0
 30194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30199 ;;Total ram usage:        0 bytes
 30200 ;; Hardware stack levels used: 1
 30201 ;; Hardware stack levels required when called: 5
 30202 ;; This function calls:
 30203 ;;		_I2C1_MasterStop
 30204 ;; This function is called by:
 30205 ;;		_I2C1_DO_TX
 30206 ;;		_I2C1_DO_TX_EMPTY
 30207 ;;		_I2C1_DO_ADDRESS_NACK
 30208 ;;		_I2C1_MasterFsm
 30209 ;; This function uses a non-reentrant model
 30210 ;;
 30211                           
 30212                           	psect	text143
 30213  0092C2                     __ptext143:
 30214                           	callstack 0
 30215  0092C2                     _I2C1_DO_SEND_STOP:
 30216                           	callstack 15
 30217                           
 30218                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 30219                           
 30220                           ; BSR set to: 2
 30221                           ;incstack = 0
 30222  0092C2  EC9C  F049         	call	_I2C1_MasterStop	;wreg free
 30223                           
 30224                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 30225  0092C6  0E00               	movlw	0
 30226  0092C8  0012               	return		;funcret
 30227  0092CA                     __end_of_I2C1_DO_SEND_STOP:
 30228                           	callstack 0
 30229                           
 30230 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 30231 ;; Defined at:
 30232 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 30233 ;; Parameters:    Size  Location     Type
 30234 ;;		None
 30235 ;; Auto vars:     Size  Location     Type
 30236 ;;		None
 30237 ;; Return value:  Size  Location     Type
 30238 ;;                  1    wreg      enum E10442
 30239 ;; Registers used:
 30240 ;;		wreg, cstack
 30241 ;; Tracked objects:
 30242 ;;		On entry : 0/2
 30243 ;;		On exit  : 0/0
 30244 ;;		Unchanged: 0/0
 30245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30250 ;;Total ram usage:        0 bytes
 30251 ;; Hardware stack levels used: 1
 30252 ;; Hardware stack levels required when called: 5
 30253 ;; This function calls:
 30254 ;;		_I2C1_MasterEnableRestart
 30255 ;; This function is called by:
 30256 ;;		_I2C1_DO_TX_EMPTY
 30257 ;;		_I2C1_DO_ADDRESS_NACK
 30258 ;;		_I2C1_MasterFsm
 30259 ;; This function uses a non-reentrant model
 30260 ;;
 30261                           
 30262                           	psect	text144
 30263  0092CA                     __ptext144:
 30264                           	callstack 0
 30265  0092CA                     _I2C1_DO_SEND_RESTART:
 30266                           	callstack 15
 30267                           
 30268                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 30269                           
 30270                           ;incstack = 0
 30271  0092CA  EC9E  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30272                           
 30273                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 30274  0092CE  0E01               	movlw	1
 30275  0092D0  0012               	return		;funcret
 30276  0092D2                     __end_of_I2C1_DO_SEND_RESTART:
 30277                           	callstack 0
 30278                           
 30279 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 30280 ;; Defined at:
 30281 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 30282 ;; Parameters:    Size  Location     Type
 30283 ;;		None
 30284 ;; Auto vars:     Size  Location     Type
 30285 ;;		None
 30286 ;; Return value:  Size  Location     Type
 30287 ;;                  1    wreg      enum E10442
 30288 ;; Registers used:
 30289 ;;		wreg, cstack
 30290 ;; Tracked objects:
 30291 ;;		On entry : 0/2
 30292 ;;		On exit  : 0/0
 30293 ;;		Unchanged: 0/0
 30294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30299 ;;Total ram usage:        0 bytes
 30300 ;; Hardware stack levels used: 1
 30301 ;; Hardware stack levels required when called: 5
 30302 ;; This function calls:
 30303 ;;		_I2C1_MasterEnableRestart
 30304 ;; This function is called by:
 30305 ;;		_I2C1_DO_TX
 30306 ;;		_I2C1_MasterFsm
 30307 ;; This function uses a non-reentrant model
 30308 ;;
 30309                           
 30310                           	psect	text145
 30311  0092D2                     __ptext145:
 30312                           	callstack 0
 30313  0092D2                     _I2C1_DO_SEND_RESTART_WRITE:
 30314                           	callstack 15
 30315                           
 30316                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 30317                           
 30318                           ;incstack = 0
 30319  0092D2  EC9E  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30320                           
 30321                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 30322  0092D6  0E02               	movlw	2
 30323  0092D8  0012               	return		;funcret
 30324  0092DA                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 30325                           	callstack 0
 30326                           
 30327 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 30328 ;; Defined at:
 30329 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 30330 ;; Parameters:    Size  Location     Type
 30331 ;;		None
 30332 ;; Auto vars:     Size  Location     Type
 30333 ;;		None
 30334 ;; Return value:  Size  Location     Type
 30335 ;;                  1    wreg      enum E10442
 30336 ;; Registers used:
 30337 ;;		wreg, cstack
 30338 ;; Tracked objects:
 30339 ;;		On entry : 0/2
 30340 ;;		On exit  : 0/0
 30341 ;;		Unchanged: 0/0
 30342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30347 ;;Total ram usage:        0 bytes
 30348 ;; Hardware stack levels used: 1
 30349 ;; Hardware stack levels required when called: 5
 30350 ;; This function calls:
 30351 ;;		_I2C1_MasterEnableRestart
 30352 ;; This function is called by:
 30353 ;;		_I2C1_DO_TX
 30354 ;;		_I2C1_MasterFsm
 30355 ;; This function uses a non-reentrant model
 30356 ;;
 30357                           
 30358                           	psect	text146
 30359  0092DA                     __ptext146:
 30360                           	callstack 0
 30361  0092DA                     _I2C1_DO_SEND_RESTART_READ:
 30362                           	callstack 15
 30363                           
 30364                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 30365                           
 30366                           ;incstack = 0
 30367  0092DA  EC9E  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30368                           
 30369                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 30370  0092DE  0E01               	movlw	1
 30371  0092E0  0012               	return		;funcret
 30372  0092E2                     __end_of_I2C1_DO_SEND_RESTART_READ:
 30373                           	callstack 0
 30374                           
 30375 ;; *************** function _I2C1_DO_RCEN *****************
 30376 ;; Defined at:
 30377 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 30378 ;; Parameters:    Size  Location     Type
 30379 ;;		None
 30380 ;; Auto vars:     Size  Location     Type
 30381 ;;		None
 30382 ;; Return value:  Size  Location     Type
 30383 ;;                  1    wreg      enum E10442
 30384 ;; Registers used:
 30385 ;;		wreg, cstack
 30386 ;; Tracked objects:
 30387 ;;		On entry : 3F/2
 30388 ;;		On exit  : 3F/2
 30389 ;;		Unchanged: 0/0
 30390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30395 ;;Total ram usage:        0 bytes
 30396 ;; Hardware stack levels used: 1
 30397 ;; Hardware stack levels required when called: 5
 30398 ;; This function calls:
 30399 ;;		_I2C1_MasterStartRx
 30400 ;; This function is called by:
 30401 ;;		_I2C1_MasterFsm
 30402 ;; This function uses a non-reentrant model
 30403 ;;
 30404                           
 30405                           	psect	text147
 30406  009286                     __ptext147:
 30407                           	callstack 0
 30408  009286                     _I2C1_DO_RCEN:
 30409                           	callstack 16
 30410                           
 30411                           ; BSR set to: 2
 30412                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 30413                           
 30414                           ;incstack = 0
 30415  009286  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30416                           
 30417                           ; BSR set to: 2
 30418                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 30419  009288  EC96  F049         	call	_I2C1_MasterStartRx	;wreg free
 30420                           
 30421                           ; BSR set to: 2
 30422                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 30423  00928C  0E04               	movlw	4
 30424                           
 30425                           ; BSR set to: 2
 30426  00928E  0012               	return		;funcret
 30427  009290                     __end_of_I2C1_DO_RCEN:
 30428                           	callstack 0
 30429                           
 30430 ;; *************** function _I2C1_DO_RX *****************
 30431 ;; Defined at:
 30432 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 30433 ;; Parameters:    Size  Location     Type
 30434 ;;		None
 30435 ;; Auto vars:     Size  Location     Type
 30436 ;;		None
 30437 ;; Return value:  Size  Location     Type
 30438 ;;                  1    wreg      enum E10442
 30439 ;; Registers used:
 30440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30441 ;; Tracked objects:
 30442 ;;		On entry : 3F/2
 30443 ;;		On exit  : 0/0
 30444 ;;		Unchanged: 0/0
 30445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30450 ;;Total ram usage:        2 bytes
 30451 ;; Hardware stack levels used: 1
 30452 ;; Hardware stack levels required when called: 7
 30453 ;; This function calls:
 30454 ;;		Absolute function
 30455 ;;		_I2C1_CallbackReturnReset
 30456 ;;		_I2C1_CallbackReturnStop
 30457 ;;		_I2C1_DO_RX_NACK_RESTART
 30458 ;;		_I2C1_DO_RX_NACK_STOP
 30459 ;;		_I2C1_MasterGetRxData
 30460 ;;		_I2C1_MasterSendAck
 30461 ;;		_rd1RegCompleteHandler
 30462 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30463 ;;		_rd2RegCompleteHandler
 30464 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30465 ;;		_rdBlkRegCompleteHandler
 30466 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30467 ;;		_wr1RegCompleteHandler
 30468 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30469 ;;		_wr2RegCompleteHandler
 30470 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30471 ;; This function is called by:
 30472 ;;		_I2C1_MasterFsm
 30473 ;; This function uses a non-reentrant model
 30474 ;;
 30475                           
 30476                           	psect	text148
 30477  007CD4                     __ptext148:
 30478                           	callstack 0
 30479  007CD4                     _I2C1_DO_RX:
 30480                           	callstack 14
 30481                           
 30482                           ; BSR set to: 2
 30483                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 30484                           
 30485                           ; BSR set to: 2
 30486                           ;incstack = 0
 30487  007CD4  EC94  F049         	call	_I2C1_MasterGetRxData	;wreg free
 30488  007CD8  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 30489  007CDC  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 30490  007CE0  6EDF               	movwf	indf2,c
 30491                           
 30492                           ; BSR set to: 2
 30493  007CE2  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 30494  007CE4  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 30495                           
 30496                           ; BSR set to: 2
 30497                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 30498  007CE6  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 30499  007CE8  A0D8               	btfss	status,0,c
 30500  007CEA  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 30501  007CEC  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 30502  007CEE  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 30503  007CF0  B4D8               	btfsc	status,2,c
 30504  007CF2  D004               	goto	l690
 30505                           
 30506                           ; BSR set to: 2
 30507                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 30508  007CF4  EC7E  F049         	call	_I2C1_MasterSendAck	;wreg free
 30509                           
 30510                           ; BSR set to: 2
 30511                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 30512  007CF8  0E05               	movlw	5
 30513  007CFA  0012               	return	
 30514  007CFC                     l690:
 30515                           
 30516                           ; BSR set to: 2
 30517                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 30518  007CFC  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30519                           
 30520                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 30521  007CFE  D006               	goto	l19163
 30522  007D00                     l19153:
 30523                           
 30524                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 30525  007D00  EC55  F049         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 30526  007D04  0012               	return	
 30527  007D06                     l19157:
 30528                           
 30529                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 30530  007D06  EC59  F049         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 30531  007D0A  0012               	return	
 30532  007D0C                     l19163:
 30533                           
 30534                           ; BSR set to: 2
 30535  007D0C  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 30536  007D10  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 30537  007D14  D801               	call	u21988
 30538  007D16  D009               	goto	u21989
 30539  007D18                     u21988:
 30540  007D18  0005               	push	
 30541  007D1A  6EFA               	movwf	pclath,c
 30542  007D1C  513C               	movf	_I2C1_Status& (0+255),w,b
 30543  007D1E  6EFD               	movwf	tosl,c
 30544  007D20  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 30545  007D22  6EFE               	movwf	tosh,c
 30546  007D24  6AFF               	clrf	tosu,c
 30547  007D26  50FA               	movf	pclath,w,c
 30548  007D28  0012               	return		;indir
 30549  007D2A                     u21989:
 30550  007D2A  6E1B               	movwf	??_I2C1_DO_RX^0,c
 30551  007D2C  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 30552                           
 30553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30554                           ; Switch size 1, requested type "simple"
 30555                           ; Number of cases is 1, Range of values is 0 to 0
 30556                           ; switch strategies available:
 30557                           ; Name         Instructions Cycles
 30558                           ; simple_byte            4     3 (average)
 30559                           ;	Chosen strategy is simple_byte
 30560  007D2E  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 30561  007D30  0A00               	xorlw	0	; case 0
 30562  007D32  A4D8               	btfss	status,2,c
 30563  007D34  D7E8               	goto	l19157
 30564                           
 30565                           ; Switch size 1, requested type "simple"
 30566                           ; Number of cases is 4, Range of values is 1 to 4
 30567                           ; switch strategies available:
 30568                           ; Name         Instructions Cycles
 30569                           ; simple_byte           13     7 (average)
 30570                           ;	Chosen strategy is simple_byte
 30571  007D36  501B               	movf	??_I2C1_DO_RX^0,w,c
 30572  007D38  0A01               	xorlw	1	; case 1
 30573  007D3A  B4D8               	btfsc	status,2,c
 30574  007D3C  D7E4               	goto	l19157
 30575  007D3E  0A03               	xorlw	3	; case 2
 30576  007D40  B4D8               	btfsc	status,2,c
 30577  007D42  D7DE               	goto	l19153
 30578  007D44  0A01               	xorlw	1	; case 3
 30579  007D46  B4D8               	btfsc	status,2,c
 30580  007D48  D7DB               	goto	l19153
 30581  007D4A  0A07               	xorlw	7	; case 4
 30582  007D4C  D7DC               	goto	l19157
 30583  007D4E                     __end_of_I2C1_DO_RX:
 30584                           	callstack 0
 30585                           
 30586 ;; *************** function _I2C1_DO_TX *****************
 30587 ;; Defined at:
 30588 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 30589 ;; Parameters:    Size  Location     Type
 30590 ;;		None
 30591 ;; Auto vars:     Size  Location     Type
 30592 ;;		None
 30593 ;; Return value:  Size  Location     Type
 30594 ;;                  1    wreg      enum E10442
 30595 ;; Registers used:
 30596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30597 ;; Tracked objects:
 30598 ;;		On entry : 3F/2
 30599 ;;		On exit  : 0/0
 30600 ;;		Unchanged: 0/0
 30601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30606 ;;Total ram usage:        2 bytes
 30607 ;; Hardware stack levels used: 1
 30608 ;; Hardware stack levels required when called: 7
 30609 ;; This function calls:
 30610 ;;		Absolute function
 30611 ;;		_I2C1_CallbackReturnReset
 30612 ;;		_I2C1_CallbackReturnStop
 30613 ;;		_I2C1_DO_SEND_RESTART_READ
 30614 ;;		_I2C1_DO_SEND_RESTART_WRITE
 30615 ;;		_I2C1_DO_SEND_STOP
 30616 ;;		_I2C1_MasterIsNack
 30617 ;;		_I2C1_MasterSendTxData
 30618 ;;		_rd1RegCompleteHandler
 30619 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30620 ;;		_rd2RegCompleteHandler
 30621 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30622 ;;		_rdBlkRegCompleteHandler
 30623 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30624 ;;		_wr1RegCompleteHandler
 30625 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30626 ;;		_wr2RegCompleteHandler
 30627 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30628 ;; This function is called by:
 30629 ;;		_I2C1_MasterFsm
 30630 ;; This function uses a non-reentrant model
 30631 ;;
 30632                           
 30633                           	psect	text149
 30634  007834                     __ptext149:
 30635                           	callstack 0
 30636  007834                     _I2C1_DO_TX:
 30637                           	callstack 14
 30638                           
 30639                           ; BSR set to: 2
 30640                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 30641                           
 30642                           ;incstack = 0
 30643  007834  EC05  F049         	call	_I2C1_MasterIsNack	;wreg free
 30644  007838  0900               	iorlw	0
 30645  00783A  A4D8               	btfss	status,2,c
 30646  00783C  D00A               	goto	l19123
 30647  00783E  D02A               	goto	l674
 30648  007840                     l19109:
 30649                           
 30650                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 30651  007840  EC6D  F049         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 30652  007844  0012               	return	
 30653  007846                     l19113:
 30654                           
 30655                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 30656  007846  EC69  F049         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 30657  00784A  0012               	return	
 30658  00784C                     l19117:
 30659                           
 30660                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 30661  00784C  EC61  F049         	call	_I2C1_DO_SEND_STOP	;wreg free
 30662  007850  0012               	return	
 30663  007852                     l19123:
 30664                           
 30665                           ; BSR set to: 2
 30666  007852  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 30667  007856  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 30668  00785A  D801               	call	u21958
 30669  00785C  D009               	goto	u21959
 30670  00785E                     u21958:
 30671  00785E  0005               	push	
 30672  007860  6EFA               	movwf	pclath,c
 30673  007862  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 30674  007864  6EFD               	movwf	tosl,c
 30675  007866  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 30676  007868  6EFE               	movwf	tosh,c
 30677  00786A  6AFF               	clrf	tosu,c
 30678  00786C  50FA               	movf	pclath,w,c
 30679  00786E  0012               	return		;indir
 30680  007870                     u21959:
 30681  007870  6E1B               	movwf	??_I2C1_DO_TX^0,c
 30682  007872  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 30683                           
 30684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30685                           ; Switch size 1, requested type "simple"
 30686                           ; Number of cases is 1, Range of values is 0 to 0
 30687                           ; switch strategies available:
 30688                           ; Name         Instructions Cycles
 30689                           ; simple_byte            4     3 (average)
 30690                           ;	Chosen strategy is simple_byte
 30691  007874  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 30692  007876  0A00               	xorlw	0	; case 0
 30693  007878  A4D8               	btfss	status,2,c
 30694  00787A  D7E8               	goto	l19117
 30695                           
 30696                           ; Switch size 1, requested type "simple"
 30697                           ; Number of cases is 4, Range of values is 1 to 4
 30698                           ; switch strategies available:
 30699                           ; Name         Instructions Cycles
 30700                           ; simple_byte           13     7 (average)
 30701                           ;	Chosen strategy is simple_byte
 30702  00787C  501B               	movf	??_I2C1_DO_TX^0,w,c
 30703  00787E  0A01               	xorlw	1	; case 1
 30704  007880  B4D8               	btfsc	status,2,c
 30705  007882  D7E4               	goto	l19117
 30706  007884  0A03               	xorlw	3	; case 2
 30707  007886  B4D8               	btfsc	status,2,c
 30708  007888  D7DB               	goto	l19109
 30709  00788A  0A01               	xorlw	1	; case 3
 30710  00788C  B4D8               	btfsc	status,2,c
 30711  00788E  D7DB               	goto	l19113
 30712  007890  0A07               	xorlw	7	; case 4
 30713  007892  D7DC               	goto	l19117
 30714  007894                     l674:
 30715                           
 30716                           ; BSR set to: 2
 30717                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 30718  007894  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30719                           
 30720                           ; BSR set to: 2
 30721                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 30722  007896  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 30723  00789A  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 30724  00789E  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 30725  0078A0  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 30726  0078A2  50DF               	movf	indf2,w,c
 30727  0078A4  EC71  F049         	call	_I2C1_MasterSendTxData
 30728                           
 30729                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 30730  0078A8  0102               	movlb	2	; () banked
 30731  0078AA  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 30732  0078AC  A0D8               	btfss	status,0,c
 30733  0078AE  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 30734  0078B0  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 30735  0078B2  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 30736  0078B4  A4D8               	btfss	status,2,c
 30737  0078B6  D002               	goto	l19131
 30738                           
 30739                           ; BSR set to: 2
 30740  0078B8  0E06               	movlw	6
 30741  0078BA  0012               	return	
 30742  0078BC                     l19131:
 30743                           
 30744                           ; BSR set to: 2
 30745  0078BC  0E03               	movlw	3
 30746  0078BE  0012               	return		;funcret
 30747  0078C0                     __end_of_I2C1_DO_TX:
 30748                           	callstack 0
 30749                           
 30750 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 30751 ;; Defined at:
 30752 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 30753 ;; Parameters:    Size  Location     Type
 30754 ;;		None
 30755 ;; Auto vars:     Size  Location     Type
 30756 ;;		None
 30757 ;; Return value:  Size  Location     Type
 30758 ;;                  1    wreg      enum E10442
 30759 ;; Registers used:
 30760 ;;		wreg, status,2, status,0, cstack
 30761 ;; Tracked objects:
 30762 ;;		On entry : 3F/2
 30763 ;;		On exit  : 0/0
 30764 ;;		Unchanged: 0/0
 30765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30770 ;;Total ram usage:        0 bytes
 30771 ;; Hardware stack levels used: 1
 30772 ;; Hardware stack levels required when called: 5
 30773 ;; This function calls:
 30774 ;;		_I2C1_MasterSendTxData
 30775 ;; This function is called by:
 30776 ;;		_I2C1_MasterFsm
 30777 ;; This function uses a non-reentrant model
 30778 ;;
 30779                           
 30780                           	psect	text150
 30781  0091EE                     __ptext150:
 30782                           	callstack 0
 30783  0091EE                     _I2C1_DO_SEND_ADR_WRITE:
 30784                           	callstack 16
 30785                           
 30786                           ; BSR set to: 2
 30787                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 30788                           
 30789                           ;incstack = 0
 30790  0091EE  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 30791                           
 30792                           ; BSR set to: 2
 30793                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 30794  0091F0  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 30795  0091F2  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 30796  0091F4  EC71  F049         	call	_I2C1_MasterSendTxData
 30797                           
 30798                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 30799  0091F8  0E03               	movlw	3
 30800  0091FA  0012               	return		;funcret
 30801  0091FC                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 30802                           	callstack 0
 30803                           
 30804 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 30805 ;; Defined at:
 30806 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 30807 ;; Parameters:    Size  Location     Type
 30808 ;;		None
 30809 ;; Auto vars:     Size  Location     Type
 30810 ;;		None
 30811 ;; Return value:  Size  Location     Type
 30812 ;;                  1    wreg      enum E10442
 30813 ;; Registers used:
 30814 ;;		wreg, status,0, cstack
 30815 ;; Tracked objects:
 30816 ;;		On entry : 3F/2
 30817 ;;		On exit  : 0/0
 30818 ;;		Unchanged: 0/0
 30819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30824 ;;Total ram usage:        0 bytes
 30825 ;; Hardware stack levels used: 1
 30826 ;; Hardware stack levels required when called: 5
 30827 ;; This function calls:
 30828 ;;		_I2C1_MasterSendTxData
 30829 ;; This function is called by:
 30830 ;;		_I2C1_MasterFsm
 30831 ;; This function uses a non-reentrant model
 30832 ;;
 30833                           
 30834                           	psect	text151
 30835  0091FC                     __ptext151:
 30836                           	callstack 0
 30837  0091FC                     _I2C1_DO_SEND_ADR_READ:
 30838                           	callstack 16
 30839                           
 30840                           ; BSR set to: 2
 30841                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 30842                           
 30843                           ;incstack = 0
 30844  0091FC  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 30845                           
 30846                           ; BSR set to: 2
 30847                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 30848  0091FE  80D8               	bsf	status,0,c
 30849  009200  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 30850  009202  EC71  F049         	call	_I2C1_MasterSendTxData
 30851                           
 30852                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 30853  009206  0E05               	movlw	5
 30854  009208  0012               	return		;funcret
 30855  00920A                     __end_of_I2C1_DO_SEND_ADR_READ:
 30856                           	callstack 0
 30857                           
 30858 ;; *************** function _I2C1_DO_IDLE *****************
 30859 ;; Defined at:
 30860 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 30861 ;; Parameters:    Size  Location     Type
 30862 ;;		None
 30863 ;; Auto vars:     Size  Location     Type
 30864 ;;		None
 30865 ;; Return value:  Size  Location     Type
 30866 ;;                  1    wreg      enum E10442
 30867 ;; Registers used:
 30868 ;;		wreg, status,2
 30869 ;; Tracked objects:
 30870 ;;		On entry : 3F/2
 30871 ;;		On exit  : 3F/2
 30872 ;;		Unchanged: 0/0
 30873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30878 ;;Total ram usage:        0 bytes
 30879 ;; Hardware stack levels used: 1
 30880 ;; Hardware stack levels required when called: 4
 30881 ;; This function calls:
 30882 ;;		Nothing
 30883 ;; This function is called by:
 30884 ;;		_I2C1_MasterFsm
 30885 ;; This function uses a non-reentrant model
 30886 ;;
 30887                           
 30888                           	psect	text152
 30889  009290                     __ptext152:
 30890                           	callstack 0
 30891  009290                     _I2C1_DO_IDLE:
 30892                           	callstack 17
 30893                           
 30894                           ; BSR set to: 2
 30895                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 30896                           
 30897                           ;incstack = 0
 30898  009290  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30899                           
 30900                           ; BSR set to: 2
 30901                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 30902  009292  0E00               	movlw	0
 30903  009294  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30904                           
 30905                           ; BSR set to: 2
 30906                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 30907  009296  0E0E               	movlw	14
 30908                           
 30909                           ; BSR set to: 2
 30910  009298  0012               	return		;funcret
 30911  00929A                     __end_of_I2C1_DO_IDLE:
 30912                           	callstack 0
 30913                           
 30914 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 30915 ;; Defined at:
 30916 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 30917 ;; Parameters:    Size  Location     Type
 30918 ;;		None
 30919 ;; Auto vars:     Size  Location     Type
 30920 ;;		None
 30921 ;; Return value:  Size  Location     Type
 30922 ;;                  1    wreg      enum E10442
 30923 ;; Registers used:
 30924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30925 ;; Tracked objects:
 30926 ;;		On entry : 3F/2
 30927 ;;		On exit  : 0/0
 30928 ;;		Unchanged: 0/0
 30929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30932 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30934 ;;Total ram usage:        2 bytes
 30935 ;; Hardware stack levels used: 1
 30936 ;; Hardware stack levels required when called: 7
 30937 ;; This function calls:
 30938 ;;		Absolute function
 30939 ;;		_I2C1_CallbackReturnReset
 30940 ;;		_I2C1_CallbackReturnStop
 30941 ;;		_I2C1_DO_SEND_RESTART
 30942 ;;		_I2C1_DO_SEND_STOP
 30943 ;;		_I2C1_MasterSetIrq
 30944 ;;		_rd1RegCompleteHandler
 30945 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30946 ;;		_rd2RegCompleteHandler
 30947 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30948 ;;		_rdBlkRegCompleteHandler
 30949 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30950 ;;		_wr1RegCompleteHandler
 30951 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30952 ;;		_wr2RegCompleteHandler
 30953 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30954 ;; This function is called by:
 30955 ;;		_I2C1_MasterFsm
 30956 ;; This function uses a non-reentrant model
 30957 ;;
 30958                           
 30959                           	psect	text153
 30960  008280                     __ptext153:
 30961                           	callstack 0
 30962  008280                     _I2C1_DO_TX_EMPTY:
 30963                           	callstack 14
 30964                           
 30965                           ; BSR set to: 2
 30966                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 30967                           
 30968                           ; BSR set to: 2
 30969                           ;incstack = 0
 30970  008280  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30971                           
 30972                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 30973  008282  D00A               	goto	l19195
 30974  008284                     l19179:
 30975                           
 30976                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 30977  008284  EC65  F049         	call	_I2C1_DO_SEND_RESTART	;wreg free
 30978  008288  0012               	return	
 30979  00828A                     l19183:
 30980                           
 30981                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 30982  00828A  EC7B  F049         	call	_I2C1_MasterSetIrq	;wreg free
 30983                           
 30984                           ; BSR set to: 14
 30985                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 30986  00828E  0E03               	movlw	3
 30987  008290  0012               	return	
 30988  008292                     l19189:
 30989                           
 30990                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 30991  008292  EC61  F049         	call	_I2C1_DO_SEND_STOP	;wreg free
 30992  008296  0012               	return	
 30993  008298                     l19195:
 30994                           
 30995                           ; BSR set to: 2
 30996  008298  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 30997  00829C  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 30998  0082A0  D801               	call	u21998
 30999  0082A2  D009               	goto	u21999
 31000  0082A4                     u21998:
 31001  0082A4  0005               	push	
 31002  0082A6  6EFA               	movwf	pclath,c
 31003  0082A8  513C               	movf	_I2C1_Status& (0+255),w,b
 31004  0082AA  6EFD               	movwf	tosl,c
 31005  0082AC  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 31006  0082AE  6EFE               	movwf	tosh,c
 31007  0082B0  6AFF               	clrf	tosu,c
 31008  0082B2  50FA               	movf	pclath,w,c
 31009  0082B4  0012               	return		;indir
 31010  0082B6                     u21999:
 31011  0082B6  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 31012  0082B8  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 31013                           
 31014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31015                           ; Switch size 1, requested type "simple"
 31016                           ; Number of cases is 1, Range of values is 0 to 0
 31017                           ; switch strategies available:
 31018                           ; Name         Instructions Cycles
 31019                           ; simple_byte            4     3 (average)
 31020                           ;	Chosen strategy is simple_byte
 31021  0082BA  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 31022  0082BC  0A00               	xorlw	0	; case 0
 31023  0082BE  A4D8               	btfss	status,2,c
 31024  0082C0  D7E8               	goto	l19189
 31025                           
 31026                           ; Switch size 1, requested type "simple"
 31027                           ; Number of cases is 4, Range of values is 1 to 4
 31028                           ; switch strategies available:
 31029                           ; Name         Instructions Cycles
 31030                           ; simple_byte           13     7 (average)
 31031                           ;	Chosen strategy is simple_byte
 31032  0082C2  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 31033  0082C4  0A01               	xorlw	1	; case 1
 31034  0082C6  B4D8               	btfsc	status,2,c
 31035  0082C8  D7E4               	goto	l19189
 31036  0082CA  0A03               	xorlw	3	; case 2
 31037  0082CC  B4D8               	btfsc	status,2,c
 31038  0082CE  D7DA               	goto	l19179
 31039  0082D0  0A01               	xorlw	1	; case 3
 31040  0082D2  B4D8               	btfsc	status,2,c
 31041  0082D4  D7D7               	goto	l19179
 31042  0082D6  0A07               	xorlw	7	; case 4
 31043  0082D8  B4D8               	btfsc	status,2,c
 31044  0082DA  D7D7               	goto	l19183
 31045  0082DC  D7DA               	goto	l19189
 31046  0082DE                     __end_of_I2C1_DO_TX_EMPTY:
 31047                           	callstack 0
 31048                           
 31049 ;; *************** function _I2C1_MasterSetIrq *****************
 31050 ;; Defined at:
 31051 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 31052 ;; Parameters:    Size  Location     Type
 31053 ;;		None
 31054 ;; Auto vars:     Size  Location     Type
 31055 ;;		None
 31056 ;; Return value:  Size  Location     Type
 31057 ;;                  1    wreg      void 
 31058 ;; Registers used:
 31059 ;;		None
 31060 ;; Tracked objects:
 31061 ;;		On entry : 0/2
 31062 ;;		On exit  : 3F/E
 31063 ;;		Unchanged: 0/0
 31064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31069 ;;Total ram usage:        0 bytes
 31070 ;; Hardware stack levels used: 1
 31071 ;; Hardware stack levels required when called: 4
 31072 ;; This function calls:
 31073 ;;		Nothing
 31074 ;; This function is called by:
 31075 ;;		_I2C1_DO_TX_EMPTY
 31076 ;; This function uses a non-reentrant model
 31077 ;;
 31078                           
 31079                           	psect	text154
 31080  0092F6                     __ptext154:
 31081                           	callstack 0
 31082  0092F6                     _I2C1_MasterSetIrq:
 31083                           	callstack 16
 31084                           
 31085                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 31086                           
 31087                           ;incstack = 0
 31088  0092F6  010E               	movlb	14	; () banked
 31089  0092F8  81CD               	bsf	205,0,b	;volatile
 31090                           
 31091                           ; BSR set to: 14
 31092  0092FA  0012               	return		;funcret
 31093  0092FC                     __end_of_I2C1_MasterSetIrq:
 31094                           	callstack 0
 31095                           
 31096 ;; *************** function _I2C1_MasterIsNack *****************
 31097 ;; Defined at:
 31098 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 31099 ;; Parameters:    Size  Location     Type
 31100 ;;		None
 31101 ;; Auto vars:     Size  Location     Type
 31102 ;;		None
 31103 ;; Return value:  Size  Location     Type
 31104 ;;                  1    wreg      _Bool 
 31105 ;; Registers used:
 31106 ;;		wreg
 31107 ;; Tracked objects:
 31108 ;;		On entry : 3F/2
 31109 ;;		On exit  : 3F/2
 31110 ;;		Unchanged: 3F/0
 31111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31116 ;;Total ram usage:        0 bytes
 31117 ;; Hardware stack levels used: 1
 31118 ;; Hardware stack levels required when called: 4
 31119 ;; This function calls:
 31120 ;;		Nothing
 31121 ;; This function is called by:
 31122 ;;		_I2C1_MasterFsm
 31123 ;;		_I2C1_DO_TX
 31124 ;; This function uses a non-reentrant model
 31125 ;;
 31126                           
 31127                           	psect	text155
 31128  00920A                     __ptext155:
 31129                           	callstack 0
 31130  00920A                     _I2C1_MasterIsNack:
 31131                           	callstack 17
 31132                           
 31133                           ; BSR set to: 2
 31134                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 31135                           
 31136                           ; BSR set to: 14
 31137                           ;incstack = 0
 31138  00920A  AC97               	btfss	151,6,c	;volatile
 31139  00920C  D002               	goto	u21930
 31140  00920E  0E01               	movlw	1
 31141  009210  0012               	return	
 31142  009212                     u21930:
 31143  009212  0E00               	movlw	0
 31144                           
 31145                           ; BSR set to: 2
 31146  009214  0012               	return		;funcret
 31147  009216                     __end_of_I2C1_MasterIsNack:
 31148                           	callstack 0
 31149                           
 31150 ;; *************** function _I2C1_MasterSendTxData *****************
 31151 ;; Defined at:
 31152 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 31153 ;; Parameters:    Size  Location     Type
 31154 ;;  data            1    wreg     unsigned char 
 31155 ;; Auto vars:     Size  Location     Type
 31156 ;;  data            1   15[COMRAM] unsigned char 
 31157 ;; Return value:  Size  Location     Type
 31158 ;;                  1    wreg      void 
 31159 ;; Registers used:
 31160 ;;		wreg
 31161 ;; Tracked objects:
 31162 ;;		On entry : 3F/2
 31163 ;;		On exit  : 0/0
 31164 ;;		Unchanged: 0/0
 31165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31170 ;;Total ram usage:        1 bytes
 31171 ;; Hardware stack levels used: 1
 31172 ;; Hardware stack levels required when called: 4
 31173 ;; This function calls:
 31174 ;;		Nothing
 31175 ;; This function is called by:
 31176 ;;		_I2C1_DO_SEND_ADR_READ
 31177 ;;		_I2C1_DO_SEND_ADR_WRITE
 31178 ;;		_I2C1_DO_TX
 31179 ;; This function uses a non-reentrant model
 31180 ;;
 31181                           
 31182                           	psect	text156
 31183  0092E2                     __ptext156:
 31184                           	callstack 0
 31185  0092E2                     _I2C1_MasterSendTxData:
 31186                           	callstack 16
 31187                           
 31188                           ; BSR set to: 2
 31189                           ;incstack = 0
 31190                           ;I2C1_MasterSendTxData@data stored from wreg
 31191  0092E2  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 31192                           
 31193                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 31194  0092E4  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 31195  0092E8  0012               	return		;funcret
 31196  0092EA                     __end_of_I2C1_MasterSendTxData:
 31197                           	callstack 0
 31198                           
 31199 ;; *************** function _I2C1_MasterSendAck *****************
 31200 ;; Defined at:
 31201 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 31202 ;; Parameters:    Size  Location     Type
 31203 ;;		None
 31204 ;; Auto vars:     Size  Location     Type
 31205 ;;		None
 31206 ;; Return value:  Size  Location     Type
 31207 ;;                  1    wreg      void 
 31208 ;; Registers used:
 31209 ;;		None
 31210 ;; Tracked objects:
 31211 ;;		On entry : 3F/2
 31212 ;;		On exit  : 3F/2
 31213 ;;		Unchanged: 3F/0
 31214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31219 ;;Total ram usage:        0 bytes
 31220 ;; Hardware stack levels used: 1
 31221 ;; Hardware stack levels required when called: 4
 31222 ;; This function calls:
 31223 ;;		Nothing
 31224 ;; This function is called by:
 31225 ;;		_I2C1_DO_RX
 31226 ;;		_I2C1_DO_RX_ACK
 31227 ;; This function uses a non-reentrant model
 31228 ;;
 31229                           
 31230                           	psect	text157
 31231  0092FC                     __ptext157:
 31232                           	callstack 0
 31233  0092FC                     _I2C1_MasterSendAck:
 31234                           	callstack 16
 31235                           
 31236                           ; BSR set to: 2
 31237                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 31238                           
 31239                           ;incstack = 0
 31240  0092FC  9A97               	bcf	151,5,c	;volatile
 31241                           
 31242                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 31243  0092FE  8897               	bsf	151,4,c	;volatile
 31244                           
 31245                           ; BSR set to: 2
 31246  009300  0012               	return		;funcret
 31247  009302                     __end_of_I2C1_MasterSendAck:
 31248                           	callstack 0
 31249                           
 31250 ;; *************** function _I2C1_MasterGetRxData *****************
 31251 ;; Defined at:
 31252 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 31253 ;; Parameters:    Size  Location     Type
 31254 ;;		None
 31255 ;; Auto vars:     Size  Location     Type
 31256 ;;		None
 31257 ;; Return value:  Size  Location     Type
 31258 ;;                  1    wreg      unsigned char 
 31259 ;; Registers used:
 31260 ;;		wreg, status,2
 31261 ;; Tracked objects:
 31262 ;;		On entry : 3F/2
 31263 ;;		On exit  : 3F/2
 31264 ;;		Unchanged: 3F/0
 31265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31270 ;;Total ram usage:        0 bytes
 31271 ;; Hardware stack levels used: 1
 31272 ;; Hardware stack levels required when called: 4
 31273 ;; This function calls:
 31274 ;;		Nothing
 31275 ;; This function is called by:
 31276 ;;		_I2C1_DO_RX
 31277 ;; This function uses a non-reentrant model
 31278 ;;
 31279                           
 31280                           	psect	text158
 31281  009328                     __ptext158:
 31282                           	callstack 0
 31283  009328                     _I2C1_MasterGetRxData:
 31284                           	callstack 16
 31285                           
 31286                           ; BSR set to: 2
 31287                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 31288                           
 31289                           ; BSR set to: 2
 31290                           ;incstack = 0
 31291  009328  5092               	movf	146,w,c	;volatile
 31292                           
 31293                           ; BSR set to: 2
 31294  00932A  0012               	return		;funcret
 31295  00932C                     __end_of_I2C1_MasterGetRxData:
 31296                           	callstack 0
 31297                           
 31298 ;; *************** function _I2C1_MasterSendNack *****************
 31299 ;; Defined at:
 31300 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 31301 ;; Parameters:    Size  Location     Type
 31302 ;;		None
 31303 ;; Auto vars:     Size  Location     Type
 31304 ;;		None
 31305 ;; Return value:  Size  Location     Type
 31306 ;;                  1    wreg      void 
 31307 ;; Registers used:
 31308 ;;		None
 31309 ;; Tracked objects:
 31310 ;;		On entry : 0/2
 31311 ;;		On exit  : 0/0
 31312 ;;		Unchanged: 0/0
 31313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31318 ;;Total ram usage:        0 bytes
 31319 ;; Hardware stack levels used: 1
 31320 ;; Hardware stack levels required when called: 4
 31321 ;; This function calls:
 31322 ;;		Nothing
 31323 ;; This function is called by:
 31324 ;;		_I2C1_DO_RX_NACK_STOP
 31325 ;;		_I2C1_DO_RX_NACK_RESTART
 31326 ;; This function uses a non-reentrant model
 31327 ;;
 31328                           
 31329                           	psect	text159
 31330  009302                     __ptext159:
 31331                           	callstack 0
 31332  009302                     _I2C1_MasterSendNack:
 31333                           	callstack 16
 31334                           
 31335                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 31336                           
 31337                           ; BSR set to: 2
 31338                           ;incstack = 0
 31339  009302  8A97               	bsf	151,5,c	;volatile
 31340                           
 31341                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 31342  009304  8897               	bsf	151,4,c	;volatile
 31343  009306  0012               	return		;funcret
 31344  009308                     __end_of_I2C1_MasterSendNack:
 31345                           	callstack 0
 31346                           
 31347 ;; *************** function _I2C1_MasterStartRx *****************
 31348 ;; Defined at:
 31349 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 31350 ;; Parameters:    Size  Location     Type
 31351 ;;		None
 31352 ;; Auto vars:     Size  Location     Type
 31353 ;;		None
 31354 ;; Return value:  Size  Location     Type
 31355 ;;                  1    wreg      void 
 31356 ;; Registers used:
 31357 ;;		None
 31358 ;; Tracked objects:
 31359 ;;		On entry : 3F/2
 31360 ;;		On exit  : 3F/2
 31361 ;;		Unchanged: 3F/0
 31362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31367 ;;Total ram usage:        0 bytes
 31368 ;; Hardware stack levels used: 1
 31369 ;; Hardware stack levels required when called: 4
 31370 ;; This function calls:
 31371 ;;		Nothing
 31372 ;; This function is called by:
 31373 ;;		_I2C1_DO_RCEN
 31374 ;; This function uses a non-reentrant model
 31375 ;;
 31376                           
 31377                           	psect	text160
 31378  00932C                     __ptext160:
 31379                           	callstack 0
 31380  00932C                     _I2C1_MasterStartRx:
 31381                           	callstack 16
 31382                           
 31383                           ; BSR set to: 2
 31384                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 31385                           
 31386                           ;incstack = 0
 31387  00932C  8697               	bsf	151,3,c	;volatile
 31388                           
 31389                           ; BSR set to: 2
 31390  00932E  0012               	return		;funcret
 31391  009330                     __end_of_I2C1_MasterStartRx:
 31392                           	callstack 0
 31393                           
 31394 ;; *************** function _I2C1_CallbackReturnReset *****************
 31395 ;; Defined at:
 31396 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 31397 ;; Parameters:    Size  Location     Type
 31398 ;;  funPtr          2   24[COMRAM] PTR void 
 31399 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31400 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31401 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31402 ;; Auto vars:     Size  Location     Type
 31403 ;;		None
 31404 ;; Return value:  Size  Location     Type
 31405 ;;                  1    wreg      enum E360
 31406 ;; Registers used:
 31407 ;;		wreg
 31408 ;; Tracked objects:
 31409 ;;		On entry : 3F/2
 31410 ;;		On exit  : 3F/2
 31411 ;;		Unchanged: 3F/0
 31412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31417 ;;Total ram usage:        2 bytes
 31418 ;; Hardware stack levels used: 1
 31419 ;; Hardware stack levels required when called: 4
 31420 ;; This function calls:
 31421 ;;		Nothing
 31422 ;; This function is called by:
 31423 ;;		_I2C1_Open
 31424 ;;		_I2C1_DO_TX
 31425 ;;		_I2C1_DO_RX
 31426 ;;		_I2C1_DO_TX_EMPTY
 31427 ;;		_I2C1_DO_ADDRESS_NACK
 31428 ;; This function uses a non-reentrant model
 31429 ;;
 31430                           
 31431                           	psect	text161
 31432  009330                     __ptext161:
 31433                           	callstack 0
 31434  009330                     _I2C1_CallbackReturnReset:
 31435                           	callstack 16
 31436                           
 31437                           ; BSR set to: 2
 31438                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 31439                           
 31440                           ; BSR set to: 2
 31441                           ;incstack = 0
 31442  009330  0E05               	movlw	5
 31443                           
 31444                           ; BSR set to: 2
 31445  009332  0012               	return		;funcret
 31446  009334                     __end_of_I2C1_CallbackReturnReset:
 31447                           	callstack 0
 31448                           
 31449 ;; *************** function _I2C1_CallbackReturnStop *****************
 31450 ;; Defined at:
 31451 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 31452 ;; Parameters:    Size  Location     Type
 31453 ;;  funPtr          2   24[COMRAM] PTR void 
 31454 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31455 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31456 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31457 ;; Auto vars:     Size  Location     Type
 31458 ;;		None
 31459 ;; Return value:  Size  Location     Type
 31460 ;;                  1    wreg      enum E360
 31461 ;; Registers used:
 31462 ;;		wreg
 31463 ;; Tracked objects:
 31464 ;;		On entry : 3F/2
 31465 ;;		On exit  : 3F/2
 31466 ;;		Unchanged: 3F/0
 31467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31472 ;;Total ram usage:        2 bytes
 31473 ;; Hardware stack levels used: 1
 31474 ;; Hardware stack levels required when called: 4
 31475 ;; This function calls:
 31476 ;;		Nothing
 31477 ;; This function is called by:
 31478 ;;		_I2C1_Open
 31479 ;;		_I2C1_SetCallback
 31480 ;;		_I2C1_DO_TX
 31481 ;;		_I2C1_DO_RX
 31482 ;;		_I2C1_DO_TX_EMPTY
 31483 ;;		_I2C1_DO_ADDRESS_NACK
 31484 ;; This function uses a non-reentrant model
 31485 ;;
 31486                           
 31487                           	psect	text162
 31488  009334                     __ptext162:
 31489                           	callstack 0
 31490  009334                     _I2C1_CallbackReturnStop:
 31491                           	callstack 16
 31492                           
 31493                           ; BSR set to: 2
 31494                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 31495                           
 31496                           ; BSR set to: 2
 31497                           ;incstack = 0
 31498  009334  0E01               	movlw	1
 31499                           
 31500                           ; BSR set to: 2
 31501  009336  0012               	return		;funcret
 31502  009338                     __end_of_I2C1_CallbackReturnStop:
 31503                           	callstack 0
 31504                           
 31505 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 31506 ;; Defined at:
 31507 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31508 ;; Parameters:    Size  Location     Type
 31509 ;;  ptr             2   24[COMRAM] PTR void 
 31510 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31511 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31512 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31513 ;; Auto vars:     Size  Location     Type
 31514 ;;		None
 31515 ;; Return value:  Size  Location     Type
 31516 ;;                  1    wreg      enum E527
 31517 ;; Registers used:
 31518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31519 ;; Tracked objects:
 31520 ;;		On entry : 3F/2
 31521 ;;		On exit  : 0/0
 31522 ;;		Unchanged: 0/0
 31523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31528 ;;Total ram usage:        2 bytes
 31529 ;; Hardware stack levels used: 1
 31530 ;; Hardware stack levels required when called: 6
 31531 ;; This function calls:
 31532 ;;		_I2C1_SetBuffer
 31533 ;;		_I2C1_SetDataCompleteCallback
 31534 ;; This function is called by:
 31535 ;;		_I2C1_DO_TX
 31536 ;;		_I2C1_DO_RX
 31537 ;;		_I2C1_DO_TX_EMPTY
 31538 ;;		_I2C1_DO_ADDRESS_NACK
 31539 ;; This function uses a non-reentrant model
 31540 ;;
 31541                           
 31542                           	psect	text163
 31543  00896A                     __ptext163:
 31544                           	callstack 0
 31545  00896A                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 31546                           	callstack 14
 31547                           
 31548                           ; BSR set to: 2
 31549                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 31550                           
 31551                           ; BSR set to: 2
 31552                           ;incstack = 0
 31553  00896A  EE20 F002          	lfsr	2,2
 31554  00896E  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 31555  008970  26D9               	addwf	fsr2l,f,c
 31556  008972  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 31557  008974  22DA               	addwfc	fsr2h,f,c
 31558  008976  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 31559  00897A  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 31560  00897E  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 31561  008982  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 31562  008986  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 31563  00898A  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 31564  00898E  EC4E  F048         	call	_I2C1_SetBuffer	;wreg free
 31565                           
 31566                           ; BSR set to: 2
 31567                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31568  008992  0E00               	movlw	0
 31569  008994  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31570  008996  0E00               	movlw	0
 31571  008998  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31572  00899A  0E00               	movlw	0
 31573  00899C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31574  00899E  0E00               	movlw	0
 31575  0089A0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31576  0089A2  EC97  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31577                           
 31578                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 31579  0089A6  0E02               	movlw	2
 31580  0089A8  0012               	return		;funcret
 31581  0089AA                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 31582                           	callstack 0
 31583                           
 31584 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 31585 ;; Defined at:
 31586 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31587 ;; Parameters:    Size  Location     Type
 31588 ;;  ptr             2   24[COMRAM] PTR void 
 31589 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31590 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31591 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31592 ;; Auto vars:     Size  Location     Type
 31593 ;;		None
 31594 ;; Return value:  Size  Location     Type
 31595 ;;                  1    wreg      enum E527
 31596 ;; Registers used:
 31597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31598 ;; Tracked objects:
 31599 ;;		On entry : 3F/2
 31600 ;;		On exit  : 0/0
 31601 ;;		Unchanged: 0/0
 31602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31606 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31607 ;;Total ram usage:        2 bytes
 31608 ;; Hardware stack levels used: 1
 31609 ;; Hardware stack levels required when called: 6
 31610 ;; This function calls:
 31611 ;;		_I2C1_SetBuffer
 31612 ;;		_I2C1_SetDataCompleteCallback
 31613 ;; This function is called by:
 31614 ;;		_I2C1_DO_TX
 31615 ;;		_I2C1_DO_RX
 31616 ;;		_I2C1_DO_TX_EMPTY
 31617 ;;		_I2C1_DO_ADDRESS_NACK
 31618 ;; This function uses a non-reentrant model
 31619 ;;
 31620                           
 31621                           	psect	text164
 31622  008C7E                     __ptext164:
 31623                           	callstack 0
 31624  008C7E                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 31625                           	callstack 14
 31626                           
 31627                           ; BSR set to: 2
 31628                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 31629                           
 31630                           ;incstack = 0
 31631  008C7E  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 31632  008C82  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 31633  008C86  0E00               	movlw	0
 31634  008C88  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31635  008C8A  0E01               	movlw	1
 31636  008C8C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31637  008C8E  EC4E  F048         	call	_I2C1_SetBuffer	;wreg free
 31638                           
 31639                           ; BSR set to: 2
 31640                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31641  008C92  0E00               	movlw	0
 31642  008C94  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31643  008C96  0E00               	movlw	0
 31644  008C98  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31645  008C9A  0E00               	movlw	0
 31646  008C9C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31647  008C9E  0E00               	movlw	0
 31648  008CA0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31649  008CA2  EC97  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31650                           
 31651                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 31652  008CA6  0E04               	movlw	4
 31653  008CA8  0012               	return		;funcret
 31654  008CAA                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 31655                           	callstack 0
 31656                           
 31657 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 31658 ;; Defined at:
 31659 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31660 ;; Parameters:    Size  Location     Type
 31661 ;;  ptr             2   24[COMRAM] PTR void 
 31662 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31663 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31664 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31665 ;; Auto vars:     Size  Location     Type
 31666 ;;		None
 31667 ;; Return value:  Size  Location     Type
 31668 ;;                  1    wreg      enum E527
 31669 ;; Registers used:
 31670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31671 ;; Tracked objects:
 31672 ;;		On entry : 3F/2
 31673 ;;		On exit  : 0/0
 31674 ;;		Unchanged: 0/0
 31675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31680 ;;Total ram usage:        2 bytes
 31681 ;; Hardware stack levels used: 1
 31682 ;; Hardware stack levels required when called: 6
 31683 ;; This function calls:
 31684 ;;		_I2C1_SetBuffer
 31685 ;;		_I2C1_SetDataCompleteCallback
 31686 ;; This function is called by:
 31687 ;;		_I2C1_DO_TX
 31688 ;;		_I2C1_DO_RX
 31689 ;;		_I2C1_DO_TX_EMPTY
 31690 ;;		_I2C1_DO_ADDRESS_NACK
 31691 ;; This function uses a non-reentrant model
 31692 ;;
 31693                           
 31694                           	psect	text165
 31695  008CAA                     __ptext165:
 31696                           	callstack 0
 31697  008CAA                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 31698                           	callstack 14
 31699                           
 31700                           ; BSR set to: 2
 31701                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 31702                           
 31703                           ;incstack = 0
 31704  008CAA  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 31705  008CAE  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 31706  008CB2  0E00               	movlw	0
 31707  008CB4  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31708  008CB6  0E02               	movlw	2
 31709  008CB8  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31710  008CBA  EC4E  F048         	call	_I2C1_SetBuffer	;wreg free
 31711                           
 31712                           ; BSR set to: 2
 31713                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31714  008CBE  0E00               	movlw	0
 31715  008CC0  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31716  008CC2  0E00               	movlw	0
 31717  008CC4  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31718  008CC6  0E00               	movlw	0
 31719  008CC8  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31720  008CCA  0E00               	movlw	0
 31721  008CCC  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31722  008CCE  EC97  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31723                           
 31724                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 31725  008CD2  0E02               	movlw	2
 31726  008CD4  0012               	return		;funcret
 31727  008CD6                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 31728                           	callstack 0
 31729                           
 31730 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 31731 ;; Defined at:
 31732 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31733 ;; Parameters:    Size  Location     Type
 31734 ;;  ptr             2   24[COMRAM] PTR void 
 31735 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31736 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31737 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31738 ;; Auto vars:     Size  Location     Type
 31739 ;;		None
 31740 ;; Return value:  Size  Location     Type
 31741 ;;                  1    wreg      enum E527
 31742 ;; Registers used:
 31743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31744 ;; Tracked objects:
 31745 ;;		On entry : 3F/2
 31746 ;;		On exit  : 0/0
 31747 ;;		Unchanged: 0/0
 31748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31753 ;;Total ram usage:        2 bytes
 31754 ;; Hardware stack levels used: 1
 31755 ;; Hardware stack levels required when called: 6
 31756 ;; This function calls:
 31757 ;;		_I2C1_SetBuffer
 31758 ;;		_I2C1_SetDataCompleteCallback
 31759 ;; This function is called by:
 31760 ;;		_I2C1_Read1ByteRegister
 31761 ;;		_I2C1_DO_TX
 31762 ;;		_I2C1_DO_RX
 31763 ;;		_I2C1_DO_TX_EMPTY
 31764 ;;		_I2C1_DO_ADDRESS_NACK
 31765 ;; This function uses a non-reentrant model
 31766 ;;
 31767                           
 31768                           	psect	text166
 31769  008CD6                     __ptext166:
 31770                           	callstack 0
 31771  008CD6                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 31772                           	callstack 14
 31773                           
 31774                           ; BSR set to: 2
 31775                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 31776                           
 31777                           ;incstack = 0
 31778  008CD6  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 31779  008CDA  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 31780  008CDE  0E00               	movlw	0
 31781  008CE0  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31782  008CE2  0E01               	movlw	1
 31783  008CE4  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31784  008CE6  EC4E  F048         	call	_I2C1_SetBuffer	;wreg free
 31785                           
 31786                           ; BSR set to: 2
 31787                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31788  008CEA  0E00               	movlw	0
 31789  008CEC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31790  008CEE  0E00               	movlw	0
 31791  008CF0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31792  008CF2  0E00               	movlw	0
 31793  008CF4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31794  008CF6  0E00               	movlw	0
 31795  008CF8  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31796  008CFA  EC97  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31797                           
 31798                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 31799  008CFE  0E02               	movlw	2
 31800  008D00  0012               	return		;funcret
 31801  008D02                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 31802                           	callstack 0
 31803                           
 31804 ;; *************** function _rdBlkRegCompleteHandler *****************
 31805 ;; Defined at:
 31806 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31807 ;; Parameters:    Size  Location     Type
 31808 ;;  p               2   24[COMRAM] PTR void 
 31809 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31810 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31811 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31812 ;; Auto vars:     Size  Location     Type
 31813 ;;		None
 31814 ;; Return value:  Size  Location     Type
 31815 ;;                  1    wreg      enum E360
 31816 ;; Registers used:
 31817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31818 ;; Tracked objects:
 31819 ;;		On entry : 3F/2
 31820 ;;		On exit  : 0/0
 31821 ;;		Unchanged: 0/0
 31822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31826 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31827 ;;Total ram usage:        2 bytes
 31828 ;; Hardware stack levels used: 1
 31829 ;; Hardware stack levels required when called: 6
 31830 ;; This function calls:
 31831 ;;		_I2C1_SetBuffer
 31832 ;;		_I2C1_SetDataCompleteCallback
 31833 ;; This function is called by:
 31834 ;;		_i2c_readDataBlock
 31835 ;;		_I2C1_DO_TX
 31836 ;;		_I2C1_DO_RX
 31837 ;;		_I2C1_DO_TX_EMPTY
 31838 ;;		_I2C1_DO_ADDRESS_NACK
 31839 ;; This function uses a non-reentrant model
 31840 ;;
 31841                           
 31842                           	psect	text167
 31843  0089AA                     __ptext167:
 31844                           	callstack 0
 31845  0089AA                     _rdBlkRegCompleteHandler:
 31846                           	callstack 14
 31847                           
 31848                           ; BSR set to: 2
 31849                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 31850                           
 31851                           ;incstack = 0
 31852  0089AA  EE20 F002          	lfsr	2,2
 31853  0089AE  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 31854  0089B0  26D9               	addwf	fsr2l,f,c
 31855  0089B2  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 31856  0089B4  22DA               	addwfc	fsr2h,f,c
 31857  0089B6  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 31858  0089BA  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 31859  0089BE  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 31860  0089C2  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 31861  0089C6  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 31862  0089CA  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 31863  0089CE  EC4E  F048         	call	_I2C1_SetBuffer	;wreg free
 31864                           
 31865                           ; BSR set to: 2
 31866                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 31867  0089D2  0E00               	movlw	0
 31868  0089D4  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31869  0089D6  0E00               	movlw	0
 31870  0089D8  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31871  0089DA  0E00               	movlw	0
 31872  0089DC  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31873  0089DE  0E00               	movlw	0
 31874  0089E0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31875  0089E2  EC97  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31876                           
 31877                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 31878  0089E6  0E02               	movlw	2
 31879  0089E8  0012               	return		;funcret
 31880  0089EA                     __end_of_rdBlkRegCompleteHandler:
 31881                           	callstack 0
 31882                           
 31883 ;; *************** function _wr2RegCompleteHandler *****************
 31884 ;; Defined at:
 31885 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31886 ;; Parameters:    Size  Location     Type
 31887 ;;  p               2   24[COMRAM] PTR void 
 31888 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31889 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31890 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31891 ;; Auto vars:     Size  Location     Type
 31892 ;;		None
 31893 ;; Return value:  Size  Location     Type
 31894 ;;                  1    wreg      enum E360
 31895 ;; Registers used:
 31896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31897 ;; Tracked objects:
 31898 ;;		On entry : 3F/2
 31899 ;;		On exit  : 0/0
 31900 ;;		Unchanged: 0/0
 31901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31906 ;;Total ram usage:        2 bytes
 31907 ;; Hardware stack levels used: 1
 31908 ;; Hardware stack levels required when called: 6
 31909 ;; This function calls:
 31910 ;;		_I2C1_SetBuffer
 31911 ;;		_I2C1_SetDataCompleteCallback
 31912 ;; This function is called by:
 31913 ;;		_I2C1_DO_TX
 31914 ;;		_I2C1_DO_RX
 31915 ;;		_I2C1_DO_TX_EMPTY
 31916 ;;		_I2C1_DO_ADDRESS_NACK
 31917 ;; This function uses a non-reentrant model
 31918 ;;
 31919                           
 31920                           	psect	text168
 31921  008D02                     __ptext168:
 31922                           	callstack 0
 31923  008D02                     _wr2RegCompleteHandler:
 31924                           	callstack 14
 31925                           
 31926                           ; BSR set to: 2
 31927                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 31928                           
 31929                           ;incstack = 0
 31930  008D02  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31931  008D06  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31932  008D0A  0E00               	movlw	0
 31933  008D0C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31934  008D0E  0E02               	movlw	2
 31935  008D10  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31936  008D12  EC4E  F048         	call	_I2C1_SetBuffer	;wreg free
 31937                           
 31938                           ; BSR set to: 2
 31939                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 31940  008D16  0E00               	movlw	0
 31941  008D18  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31942  008D1A  0E00               	movlw	0
 31943  008D1C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31944  008D1E  0E00               	movlw	0
 31945  008D20  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31946  008D22  0E00               	movlw	0
 31947  008D24  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31948  008D26  EC97  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31949                           
 31950                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 31951  008D2A  0E04               	movlw	4
 31952  008D2C  0012               	return		;funcret
 31953  008D2E                     __end_of_wr2RegCompleteHandler:
 31954                           	callstack 0
 31955                           
 31956 ;; *************** function _rd2RegCompleteHandler *****************
 31957 ;; Defined at:
 31958 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31959 ;; Parameters:    Size  Location     Type
 31960 ;;  p               2   24[COMRAM] PTR void 
 31961 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31962 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31963 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31964 ;; Auto vars:     Size  Location     Type
 31965 ;;		None
 31966 ;; Return value:  Size  Location     Type
 31967 ;;                  1    wreg      enum E360
 31968 ;; Registers used:
 31969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31970 ;; Tracked objects:
 31971 ;;		On entry : 3F/2
 31972 ;;		On exit  : 0/0
 31973 ;;		Unchanged: 0/0
 31974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31979 ;;Total ram usage:        2 bytes
 31980 ;; Hardware stack levels used: 1
 31981 ;; Hardware stack levels required when called: 6
 31982 ;; This function calls:
 31983 ;;		_I2C1_SetBuffer
 31984 ;;		_I2C1_SetDataCompleteCallback
 31985 ;; This function is called by:
 31986 ;;		_I2C1_DO_TX
 31987 ;;		_I2C1_DO_RX
 31988 ;;		_I2C1_DO_TX_EMPTY
 31989 ;;		_I2C1_DO_ADDRESS_NACK
 31990 ;; This function uses a non-reentrant model
 31991 ;;
 31992                           
 31993                           	psect	text169
 31994  008D2E                     __ptext169:
 31995                           	callstack 0
 31996  008D2E                     _rd2RegCompleteHandler:
 31997                           	callstack 14
 31998                           
 31999                           ; BSR set to: 2
 32000                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 32001                           
 32002                           ;incstack = 0
 32003  008D2E  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32004  008D32  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32005  008D36  0E00               	movlw	0
 32006  008D38  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32007  008D3A  0E02               	movlw	2
 32008  008D3C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32009  008D3E  EC4E  F048         	call	_I2C1_SetBuffer	;wreg free
 32010                           
 32011                           ; BSR set to: 2
 32012                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32013  008D42  0E00               	movlw	0
 32014  008D44  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32015  008D46  0E00               	movlw	0
 32016  008D48  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32017  008D4A  0E00               	movlw	0
 32018  008D4C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32019  008D4E  0E00               	movlw	0
 32020  008D50  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32021  008D52  EC97  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32022                           
 32023                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 32024  008D56  0E02               	movlw	2
 32025  008D58  0012               	return		;funcret
 32026  008D5A                     __end_of_rd2RegCompleteHandler:
 32027                           	callstack 0
 32028                           
 32029 ;; *************** function _rd1RegCompleteHandler *****************
 32030 ;; Defined at:
 32031 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32032 ;; Parameters:    Size  Location     Type
 32033 ;;  p               2   24[COMRAM] PTR void 
 32034 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32035 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32036 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32037 ;; Auto vars:     Size  Location     Type
 32038 ;;		None
 32039 ;; Return value:  Size  Location     Type
 32040 ;;                  1    wreg      enum E360
 32041 ;; Registers used:
 32042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32043 ;; Tracked objects:
 32044 ;;		On entry : 3F/2
 32045 ;;		On exit  : 0/0
 32046 ;;		Unchanged: 0/0
 32047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32048 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32051 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32052 ;;Total ram usage:        2 bytes
 32053 ;; Hardware stack levels used: 1
 32054 ;; Hardware stack levels required when called: 6
 32055 ;; This function calls:
 32056 ;;		_I2C1_SetBuffer
 32057 ;;		_I2C1_SetDataCompleteCallback
 32058 ;; This function is called by:
 32059 ;;		_I2C1_DO_TX
 32060 ;;		_I2C1_DO_RX
 32061 ;;		_I2C1_DO_TX_EMPTY
 32062 ;;		_I2C1_DO_ADDRESS_NACK
 32063 ;; This function uses a non-reentrant model
 32064 ;;
 32065                           
 32066                           	psect	text170
 32067  008D5A                     __ptext170:
 32068                           	callstack 0
 32069  008D5A                     _rd1RegCompleteHandler:
 32070                           	callstack 14
 32071                           
 32072                           ; BSR set to: 2
 32073                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 32074                           
 32075                           ;incstack = 0
 32076  008D5A  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32077  008D5E  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32078  008D62  0E00               	movlw	0
 32079  008D64  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32080  008D66  0E01               	movlw	1
 32081  008D68  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32082  008D6A  EC4E  F048         	call	_I2C1_SetBuffer	;wreg free
 32083                           
 32084                           ; BSR set to: 2
 32085                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32086  008D6E  0E00               	movlw	0
 32087  008D70  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32088  008D72  0E00               	movlw	0
 32089  008D74  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32090  008D76  0E00               	movlw	0
 32091  008D78  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32092  008D7A  0E00               	movlw	0
 32093  008D7C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32094  008D7E  EC97  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32095                           
 32096                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 32097  008D82  0E02               	movlw	2
 32098  008D84  0012               	return		;funcret
 32099  008D86                     __end_of_rd1RegCompleteHandler:
 32100                           	callstack 0
 32101                           
 32102 ;; *************** function _wr1RegCompleteHandler *****************
 32103 ;; Defined at:
 32104 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32105 ;; Parameters:    Size  Location     Type
 32106 ;;  p               2   24[COMRAM] PTR void 
 32107 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32108 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32109 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32110 ;; Auto vars:     Size  Location     Type
 32111 ;;		None
 32112 ;; Return value:  Size  Location     Type
 32113 ;;                  1    wreg      enum E360
 32114 ;; Registers used:
 32115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32116 ;; Tracked objects:
 32117 ;;		On entry : 3F/2
 32118 ;;		On exit  : 0/0
 32119 ;;		Unchanged: 0/0
 32120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32125 ;;Total ram usage:        2 bytes
 32126 ;; Hardware stack levels used: 1
 32127 ;; Hardware stack levels required when called: 6
 32128 ;; This function calls:
 32129 ;;		_I2C1_SetBuffer
 32130 ;;		_I2C1_SetDataCompleteCallback
 32131 ;; This function is called by:
 32132 ;;		_I2C1_DO_TX
 32133 ;;		_I2C1_DO_RX
 32134 ;;		_I2C1_DO_TX_EMPTY
 32135 ;;		_I2C1_DO_ADDRESS_NACK
 32136 ;; This function uses a non-reentrant model
 32137 ;;
 32138                           
 32139                           	psect	text171
 32140  008D86                     __ptext171:
 32141                           	callstack 0
 32142  008D86                     _wr1RegCompleteHandler:
 32143                           	callstack 14
 32144                           
 32145                           ; BSR set to: 2
 32146                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 32147                           
 32148                           ;incstack = 0
 32149  008D86  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32150  008D8A  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32151  008D8E  0E00               	movlw	0
 32152  008D90  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32153  008D92  0E01               	movlw	1
 32154  008D94  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32155  008D96  EC4E  F048         	call	_I2C1_SetBuffer	;wreg free
 32156                           
 32157                           ; BSR set to: 2
 32158                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32159  008D9A  0E00               	movlw	0
 32160  008D9C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32161  008D9E  0E00               	movlw	0
 32162  008DA0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32163  008DA2  0E00               	movlw	0
 32164  008DA4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32165  008DA6  0E00               	movlw	0
 32166  008DA8  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32167  008DAA  EC97  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32168                           
 32169                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 32170  008DAE  0E04               	movlw	4
 32171  008DB0  0012               	return		;funcret
 32172  008DB2                     __end_of_wr1RegCompleteHandler:
 32173                           	callstack 0
 32174                           
 32175 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 32176 ;; Defined at:
 32177 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32178 ;; Parameters:    Size  Location     Type
 32179 ;;  ptr             2   24[COMRAM] PTR void 
 32180 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32181 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32182 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32183 ;; Auto vars:     Size  Location     Type
 32184 ;;		None
 32185 ;; Return value:  Size  Location     Type
 32186 ;;                  1    wreg      enum E527
 32187 ;; Registers used:
 32188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32189 ;; Tracked objects:
 32190 ;;		On entry : 3F/2
 32191 ;;		On exit  : 0/0
 32192 ;;		Unchanged: 0/0
 32193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32198 ;;Total ram usage:        2 bytes
 32199 ;; Hardware stack levels used: 1
 32200 ;; Hardware stack levels required when called: 6
 32201 ;; This function calls:
 32202 ;;		_I2C1_SetBuffer
 32203 ;;		_I2C1_SetDataCompleteCallback
 32204 ;; This function is called by:
 32205 ;;		_I2C1_DO_TX
 32206 ;;		_I2C1_DO_RX
 32207 ;;		_I2C1_DO_TX_EMPTY
 32208 ;;		_I2C1_DO_ADDRESS_NACK
 32209 ;; This function uses a non-reentrant model
 32210 ;;
 32211                           
 32212                           	psect	text172
 32213  008DB2                     __ptext172:
 32214                           	callstack 0
 32215  008DB2                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 32216                           	callstack 14
 32217                           
 32218                           ; BSR set to: 2
 32219                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 32220                           
 32221                           ;incstack = 0
 32222  008DB2  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 32223  008DB6  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 32224  008DBA  0E00               	movlw	0
 32225  008DBC  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32226  008DBE  0E02               	movlw	2
 32227  008DC0  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32228  008DC2  EC4E  F048         	call	_I2C1_SetBuffer	;wreg free
 32229                           
 32230                           ; BSR set to: 2
 32231                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32232  008DC6  0E00               	movlw	0
 32233  008DC8  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32234  008DCA  0E00               	movlw	0
 32235  008DCC  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32236  008DCE  0E00               	movlw	0
 32237  008DD0  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32238  008DD2  0E00               	movlw	0
 32239  008DD4  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32240  008DD6  EC97  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32241                           
 32242                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 32243  008DDA  0E04               	movlw	4
 32244  008DDC  0012               	return		;funcret
 32245  008DDE                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 32246                           	callstack 0
 32247                           
 32248 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 32249 ;; Defined at:
 32250 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 32251 ;; Parameters:    Size  Location     Type
 32252 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 32253 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32254 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32255 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32256 ;;  ptr             2   22[COMRAM] PTR void 
 32257 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32258 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32259 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32260 ;; Auto vars:     Size  Location     Type
 32261 ;;		None
 32262 ;; Return value:  Size  Location     Type
 32263 ;;                  1    wreg      void 
 32264 ;; Registers used:
 32265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32266 ;; Tracked objects:
 32267 ;;		On entry : 33/2
 32268 ;;		On exit  : 0/0
 32269 ;;		Unchanged: 0/0
 32270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32274 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32275 ;;Total ram usage:        4 bytes
 32276 ;; Hardware stack levels used: 1
 32277 ;; Hardware stack levels required when called: 5
 32278 ;; This function calls:
 32279 ;;		_I2C1_SetCallback
 32280 ;; This function is called by:
 32281 ;;		_wr1RegCompleteHandler
 32282 ;;		_rd1RegCompleteHandler
 32283 ;;		_rd2RegCompleteHandler
 32284 ;;		_wr2RegCompleteHandler
 32285 ;;		_rdBlkRegCompleteHandler
 32286 ;;		_i2c_readDataBlock
 32287 ;;		_I2C1_Read1ByteRegister
 32288 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32289 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32290 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32291 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32292 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32293 ;; This function uses a non-reentrant model
 32294 ;;
 32295                           
 32296                           	psect	text173
 32297  00912E                     __ptext173:
 32298                           	callstack 0
 32299  00912E                     _I2C1_SetDataCompleteCallback:
 32300                           	callstack 20
 32301                           
 32302                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 32303                           
 32304                           ;incstack = 0
 32305  00912E  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 32306  009132  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 32307  009136  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 32308  00913A  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 32309  00913E  0E00               	movlw	0
 32310  009140  EC3B  F040         	call	_I2C1_SetCallback
 32311  009144  0012               	return		;funcret
 32312  009146                     __end_of_I2C1_SetDataCompleteCallback:
 32313                           	callstack 0
 32314                           
 32315 ;; *************** function _I2C1_SetCallback *****************
 32316 ;; Defined at:
 32317 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 32318 ;; Parameters:    Size  Location     Type
 32319 ;;  idx             1    wreg     enum E10460
 32320 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 32321 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32322 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32323 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32324 ;;  ptr             2   17[COMRAM] PTR void 
 32325 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32326 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32327 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32328 ;; Auto vars:     Size  Location     Type
 32329 ;;  idx             1   19[COMRAM] enum E10460
 32330 ;; Return value:  Size  Location     Type
 32331 ;;                  1    wreg      void 
 32332 ;; Registers used:
 32333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32334 ;; Tracked objects:
 32335 ;;		On entry : 33/2
 32336 ;;		On exit  : 0/0
 32337 ;;		Unchanged: 0/0
 32338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32339 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32340 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32342 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32343 ;;Total ram usage:        5 bytes
 32344 ;; Hardware stack levels used: 1
 32345 ;; Hardware stack levels required when called: 4
 32346 ;; This function calls:
 32347 ;;		Nothing
 32348 ;; This function is called by:
 32349 ;;		_I2C1_SetDataCompleteCallback
 32350 ;;		_I2C1_SetAddressNackCallback
 32351 ;; This function uses a non-reentrant model
 32352 ;;
 32353                           
 32354                           	psect	text174
 32355  008076                     __ptext174:
 32356                           	callstack 0
 32357  008076                     _I2C1_SetCallback:
 32358                           	callstack 20
 32359                           
 32360                           ;incstack = 0
 32361                           ;I2C1_SetCallback@idx stored from wreg
 32362  008076  6E14               	movwf	I2C1_SetCallback@idx^0,c
 32363                           
 32364                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 32365  008078  5010               	movf	I2C1_SetCallback@cb^0,w,c
 32366  00807A  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 32367  00807C  B4D8               	btfsc	status,2,c
 32368  00807E  D019               	goto	l18921
 32369                           
 32370                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 32371  008080  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32372  008082  0D02               	mullw	2
 32373  008084  0E3C               	movlw	low _I2C1_Status
 32374  008086  24F3               	addwf	243,w,c
 32375  008088  6ED9               	movwf	fsr2l,c
 32376  00808A  0E02               	movlw	high _I2C1_Status
 32377  00808C  20F4               	addwfc	prodh,w,c
 32378  00808E  6EDA               	movwf	fsr2h,c
 32379  008090  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 32380  008094  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 32381                           
 32382                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 32383  008098  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32384  00809A  0D02               	mullw	2
 32385  00809C  0E48               	movlw	low (_I2C1_Status+12)
 32386  00809E  24F3               	addwf	243,w,c
 32387  0080A0  6ED9               	movwf	fsr2l,c
 32388  0080A2  0E02               	movlw	high (_I2C1_Status+12)
 32389  0080A4  20F4               	addwfc	prodh,w,c
 32390  0080A6  6EDA               	movwf	fsr2h,c
 32391  0080A8  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 32392  0080AC  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 32393                           
 32394                           ;mcc_generated_files/i2c1_master.c: 304:     }
 32395  0080B0  0012               	return	
 32396  0080B2                     l18921:
 32397                           
 32398                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 32399  0080B2  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32400  0080B4  0D02               	mullw	2
 32401  0080B6  0E3C               	movlw	low _I2C1_Status
 32402  0080B8  24F3               	addwf	243,w,c
 32403  0080BA  6ED9               	movwf	fsr2l,c
 32404  0080BC  0E02               	movlw	high _I2C1_Status
 32405  0080BE  20F4               	addwfc	prodh,w,c
 32406  0080C0  6EDA               	movwf	fsr2h,c
 32407  0080C2  0E34               	movlw	low _I2C1_CallbackReturnStop
 32408  0080C4  6EDE               	movwf	postinc2,c
 32409  0080C6  0E93               	movlw	high _I2C1_CallbackReturnStop
 32410  0080C8  6EDD               	movwf	postdec2,c
 32411                           
 32412                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 32413  0080CA  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32414  0080CC  0D02               	mullw	2
 32415  0080CE  0E48               	movlw	low (_I2C1_Status+12)
 32416  0080D0  24F3               	addwf	243,w,c
 32417  0080D2  6ED9               	movwf	fsr2l,c
 32418  0080D4  0E02               	movlw	high (_I2C1_Status+12)
 32419  0080D6  20F4               	addwfc	prodh,w,c
 32420  0080D8  6EDA               	movwf	fsr2h,c
 32421  0080DA  0E00               	movlw	0
 32422  0080DC  6EDE               	movwf	postinc2,c
 32423  0080DE  0E00               	movlw	0
 32424  0080E0  6EDD               	movwf	postdec2,c
 32425  0080E2  0012               	return		;funcret
 32426  0080E4                     __end_of_I2C1_SetCallback:
 32427                           	callstack 0
 32428                           
 32429 ;; *************** function _I2C1_SetBuffer *****************
 32430 ;; Defined at:
 32431 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 32432 ;; Parameters:    Size  Location     Type
 32433 ;;  buffer          2   15[COMRAM] PTR void 
 32434 ;;		 -> cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), I2C1_ReadDataBlock@reg(1), 
 32435 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegi
      +ster@data(2), 
 32436 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 32437 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(2), i2c_readDataBloc
      +k@d(4), 
 32438 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 32439 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(17), i2c_write1ByteRegister@reg(1
      +), 
 32440 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 32441 ;;  bufferSize      2   17[COMRAM] unsigned int 
 32442 ;; Auto vars:     Size  Location     Type
 32443 ;;		None
 32444 ;; Return value:  Size  Location     Type
 32445 ;;                  1    wreg      void 
 32446 ;; Registers used:
 32447 ;;		wreg, status,2, status,0
 32448 ;; Tracked objects:
 32449 ;;		On entry : 0/2
 32450 ;;		On exit  : 3F/2
 32451 ;;		Unchanged: 0/0
 32452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32453 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32456 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32457 ;;Total ram usage:        4 bytes
 32458 ;; Hardware stack levels used: 1
 32459 ;; Hardware stack levels required when called: 4
 32460 ;; This function calls:
 32461 ;;		Nothing
 32462 ;; This function is called by:
 32463 ;;		_wr1RegCompleteHandler
 32464 ;;		_i2c_writeNBytes
 32465 ;;		_rd1RegCompleteHandler
 32466 ;;		_rd2RegCompleteHandler
 32467 ;;		_wr2RegCompleteHandler
 32468 ;;		_rdBlkRegCompleteHandler
 32469 ;;		_i2c_readDataBlock
 32470 ;;		_I2C1_Read1ByteRegister
 32471 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32472 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32473 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32474 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32475 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32476 ;; This function uses a non-reentrant model
 32477 ;;
 32478                           
 32479                           	psect	text175
 32480  00909C                     __ptext175:
 32481                           	callstack 0
 32482  00909C                     _I2C1_SetBuffer:
 32483                           	callstack 21
 32484                           
 32485                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 32486                           
 32487                           ;incstack = 0
 32488  00909C  0102               	movlb	2	; () banked
 32489  00909E  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 32490  0090A0  0012               	return	
 32491                           
 32492                           ; BSR set to: 2
 32493                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 32494  0090A2  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 32495  0090A6  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 32496                           
 32497                           ; BSR set to: 2
 32498                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 32499  0090AA  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 32500  0090AE  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 32501                           
 32502                           ; BSR set to: 2
 32503                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 32504  0090B2  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 32505                           
 32506                           ; BSR set to: 2
 32507  0090B4  0012               	return		;funcret
 32508  0090B6                     __end_of_I2C1_SetBuffer:
 32509                           	callstack 0
 32510                           
 32511 ;; *************** function _I2C1_MasterStop *****************
 32512 ;; Defined at:
 32513 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 32514 ;; Parameters:    Size  Location     Type
 32515 ;;		None
 32516 ;; Auto vars:     Size  Location     Type
 32517 ;;		None
 32518 ;; Return value:  Size  Location     Type
 32519 ;;                  1    wreg      void 
 32520 ;; Registers used:
 32521 ;;		None
 32522 ;; Tracked objects:
 32523 ;;		On entry : 0/2
 32524 ;;		On exit  : 0/0
 32525 ;;		Unchanged: 0/0
 32526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32531 ;;Total ram usage:        0 bytes
 32532 ;; Hardware stack levels used: 1
 32533 ;; Hardware stack levels required when called: 4
 32534 ;; This function calls:
 32535 ;;		Nothing
 32536 ;; This function is called by:
 32537 ;;		_I2C1_DO_SEND_STOP
 32538 ;; This function uses a non-reentrant model
 32539 ;;
 32540                           
 32541                           	psect	text176
 32542  009338                     __ptext176:
 32543                           	callstack 0
 32544  009338                     _I2C1_MasterStop:
 32545                           	callstack 15
 32546                           
 32547                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 32548                           
 32549                           ; BSR set to: 2
 32550                           ;incstack = 0
 32551  009338  8497               	bsf	151,2,c	;volatile
 32552  00933A  0012               	return		;funcret
 32553  00933C                     __end_of_I2C1_MasterStop:
 32554                           	callstack 0
 32555                           
 32556 ;; *************** function _I2C1_MasterEnableRestart *****************
 32557 ;; Defined at:
 32558 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 32559 ;; Parameters:    Size  Location     Type
 32560 ;;		None
 32561 ;; Auto vars:     Size  Location     Type
 32562 ;;		None
 32563 ;; Return value:  Size  Location     Type
 32564 ;;                  1    wreg      void 
 32565 ;; Registers used:
 32566 ;;		None
 32567 ;; Tracked objects:
 32568 ;;		On entry : 0/2
 32569 ;;		On exit  : 0/0
 32570 ;;		Unchanged: 0/0
 32571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32576 ;;Total ram usage:        0 bytes
 32577 ;; Hardware stack levels used: 1
 32578 ;; Hardware stack levels required when called: 4
 32579 ;; This function calls:
 32580 ;;		Nothing
 32581 ;; This function is called by:
 32582 ;;		_I2C1_DO_SEND_RESTART_READ
 32583 ;;		_I2C1_DO_SEND_RESTART_WRITE
 32584 ;;		_I2C1_DO_SEND_RESTART
 32585 ;; This function uses a non-reentrant model
 32586 ;;
 32587                           
 32588                           	psect	text177
 32589  00933C                     __ptext177:
 32590                           	callstack 0
 32591  00933C                     _I2C1_MasterEnableRestart:
 32592                           	callstack 15
 32593                           
 32594                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 32595                           
 32596                           ;incstack = 0
 32597  00933C  8297               	bsf	151,1,c	;volatile
 32598  00933E  0012               	return		;funcret
 32599  009340                     __end_of_I2C1_MasterEnableRestart:
 32600                           	callstack 0
 32601                           
 32602 ;; *************** function _I2C1_MasterStart *****************
 32603 ;; Defined at:
 32604 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 32605 ;; Parameters:    Size  Location     Type
 32606 ;;		None
 32607 ;; Auto vars:     Size  Location     Type
 32608 ;;		None
 32609 ;; Return value:  Size  Location     Type
 32610 ;;                  1    wreg      void 
 32611 ;; Registers used:
 32612 ;;		None
 32613 ;; Tracked objects:
 32614 ;;		On entry : 3F/2
 32615 ;;		On exit  : 3F/2
 32616 ;;		Unchanged: 3F/0
 32617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32622 ;;Total ram usage:        0 bytes
 32623 ;; Hardware stack levels used: 1
 32624 ;; Hardware stack levels required when called: 4
 32625 ;; This function calls:
 32626 ;;		Nothing
 32627 ;; This function is called by:
 32628 ;;		_I2C1_MasterOperation
 32629 ;; This function uses a non-reentrant model
 32630 ;;
 32631                           
 32632                           	psect	text178
 32633  009340                     __ptext178:
 32634                           	callstack 0
 32635  009340                     _I2C1_MasterStart:
 32636                           	callstack 19
 32637                           
 32638                           ; BSR set to: 2
 32639                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 32640                           
 32641                           ;incstack = 0
 32642  009340  8097               	bsf	151,0,c	;volatile
 32643                           
 32644                           ; BSR set to: 2
 32645  009342  0012               	return		;funcret
 32646  009344                     __end_of_I2C1_MasterStart:
 32647                           	callstack 0
 32648                           
 32649 ;; *************** function _I2C1_Close *****************
 32650 ;; Defined at:
 32651 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 32652 ;; Parameters:    Size  Location     Type
 32653 ;;		None
 32654 ;; Auto vars:     Size  Location     Type
 32655 ;;  returnValue     1   15[COMRAM] enum E355
 32656 ;; Return value:  Size  Location     Type
 32657 ;;                  1    wreg      enum E355
 32658 ;; Registers used:
 32659 ;;		wreg, status,2, cstack
 32660 ;; Tracked objects:
 32661 ;;		On entry : 0/2
 32662 ;;		On exit  : 33/2
 32663 ;;		Unchanged: 0/0
 32664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32668 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32669 ;;Total ram usage:        1 bytes
 32670 ;; Hardware stack levels used: 1
 32671 ;; Hardware stack levels required when called: 5
 32672 ;; This function calls:
 32673 ;;		_I2C1_MasterClearIrq
 32674 ;;		_I2C1_MasterClose
 32675 ;;		_I2C1_MasterDisableIrq
 32676 ;; This function is called by:
 32677 ;;		_i2c_writeNBytes
 32678 ;;		_i2c_readDataBlock
 32679 ;;		_I2C1_Read1ByteRegister
 32680 ;; This function uses a non-reentrant model
 32681 ;;
 32682                           
 32683                           	psect	text179
 32684  008F80                     __ptext179:
 32685                           	callstack 0
 32686  008F80                     _I2C1_Close:
 32687                           	callstack 20
 32688                           
 32689                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 32690                           
 32691                           ; BSR set to: 2
 32692                           ;incstack = 0
 32693  008F80  0E01               	movlw	1
 32694  008F82  6E10               	movwf	I2C1_Close@returnValue^0,c
 32695                           
 32696                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 32697  008F84  0102               	movlb	2	; () banked
 32698  008F86  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 32699  008F88  D00A               	goto	l19355
 32700                           
 32701                           ; BSR set to: 2
 32702                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 32703  008F8A  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 32704                           
 32705                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 32706  008F8C  6958               	setf	(_I2C1_Status+28)& (0+255),b
 32707                           
 32708                           ; BSR set to: 2
 32709                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 32710  008F8E  EC84  F049         	call	_I2C1_MasterClearIrq	;wreg free
 32711                           
 32712                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 32713  008F92  ECA2  F049         	call	_I2C1_MasterDisableIrq	;wreg free
 32714                           
 32715                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 32716  008F96  ECA4  F049         	call	_I2C1_MasterClose	;wreg free
 32717                           
 32718                           ; BSR set to: 14
 32719                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 32720  008F9A  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 32721  008F9E                     l19355:
 32722                           
 32723                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 32724  008F9E  5010               	movf	I2C1_Close@returnValue^0,w,c
 32725  008FA0  0012               	return		;funcret
 32726  008FA2                     __end_of_I2C1_Close:
 32727                           	callstack 0
 32728                           
 32729 ;; *************** function _I2C1_MasterDisableIrq *****************
 32730 ;; Defined at:
 32731 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 32732 ;; Parameters:    Size  Location     Type
 32733 ;;		None
 32734 ;; Auto vars:     Size  Location     Type
 32735 ;;		None
 32736 ;; Return value:  Size  Location     Type
 32737 ;;                  1    wreg      void 
 32738 ;; Registers used:
 32739 ;;		None
 32740 ;; Tracked objects:
 32741 ;;		On entry : 3F/E
 32742 ;;		On exit  : 3F/E
 32743 ;;		Unchanged: 0/0
 32744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32749 ;;Total ram usage:        0 bytes
 32750 ;; Hardware stack levels used: 1
 32751 ;; Hardware stack levels required when called: 4
 32752 ;; This function calls:
 32753 ;;		Nothing
 32754 ;; This function is called by:
 32755 ;;		_I2C1_Close
 32756 ;; This function uses a non-reentrant model
 32757 ;;
 32758                           
 32759                           	psect	text180
 32760  009344                     __ptext180:
 32761                           	callstack 0
 32762  009344                     _I2C1_MasterDisableIrq:
 32763                           	callstack 20
 32764                           
 32765                           ; BSR set to: 14
 32766                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 32767                           
 32768                           ;incstack = 0
 32769  009344  91C5               	bcf	197,0,b	;volatile
 32770                           
 32771                           ; BSR set to: 14
 32772  009346  0012               	return		;funcret
 32773  009348                     __end_of_I2C1_MasterDisableIrq:
 32774                           	callstack 0
 32775                           
 32776 ;; *************** function _I2C1_MasterClose *****************
 32777 ;; Defined at:
 32778 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 32779 ;; Parameters:    Size  Location     Type
 32780 ;;		None
 32781 ;; Auto vars:     Size  Location     Type
 32782 ;;		None
 32783 ;; Return value:  Size  Location     Type
 32784 ;;                  1    wreg      void 
 32785 ;; Registers used:
 32786 ;;		None
 32787 ;; Tracked objects:
 32788 ;;		On entry : 3F/E
 32789 ;;		On exit  : 3F/E
 32790 ;;		Unchanged: 3F/0
 32791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32796 ;;Total ram usage:        0 bytes
 32797 ;; Hardware stack levels used: 1
 32798 ;; Hardware stack levels required when called: 4
 32799 ;; This function calls:
 32800 ;;		Nothing
 32801 ;; This function is called by:
 32802 ;;		_I2C1_Close
 32803 ;; This function uses a non-reentrant model
 32804 ;;
 32805                           
 32806                           	psect	text181
 32807  009348                     __ptext181:
 32808                           	callstack 0
 32809  009348                     _I2C1_MasterClose:
 32810                           	callstack 20
 32811                           
 32812                           ; BSR set to: 14
 32813                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 32814                           
 32815                           ; BSR set to: 14
 32816                           ;incstack = 0
 32817  009348  9A96               	bcf	150,5,c	;volatile
 32818                           
 32819                           ; BSR set to: 14
 32820  00934A  0012               	return		;funcret
 32821  00934C                     __end_of_I2C1_MasterClose:
 32822                           	callstack 0
 32823                           
 32824 ;; *************** function _I2C1_MasterClearIrq *****************
 32825 ;; Defined at:
 32826 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 32827 ;; Parameters:    Size  Location     Type
 32828 ;;		None
 32829 ;; Auto vars:     Size  Location     Type
 32830 ;;		None
 32831 ;; Return value:  Size  Location     Type
 32832 ;;                  1    wreg      void 
 32833 ;; Registers used:
 32834 ;;		None
 32835 ;; Tracked objects:
 32836 ;;		On entry : 33/2
 32837 ;;		On exit  : 3F/E
 32838 ;;		Unchanged: 0/0
 32839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32844 ;;Total ram usage:        0 bytes
 32845 ;; Hardware stack levels used: 1
 32846 ;; Hardware stack levels required when called: 4
 32847 ;; This function calls:
 32848 ;;		Nothing
 32849 ;; This function is called by:
 32850 ;;		_I2C1_Open
 32851 ;;		_I2C1_Close
 32852 ;;		_I2C1_MasterFsm
 32853 ;; This function uses a non-reentrant model
 32854 ;;
 32855                           
 32856                           	psect	text182
 32857  009308                     __ptext182:
 32858                           	callstack 0
 32859  009308                     _I2C1_MasterClearIrq:
 32860                           	callstack 20
 32861                           
 32862                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 32863                           
 32864                           ; BSR set to: 14
 32865                           ;incstack = 0
 32866  009308  010E               	movlb	14	; () banked
 32867  00930A  91CD               	bcf	205,0,b	;volatile
 32868                           
 32869                           ; BSR set to: 14
 32870  00930C  0012               	return		;funcret
 32871  00930E                     __end_of_I2C1_MasterClearIrq:
 32872                           	callstack 0
 32873                           
 32874 ;; *************** function _INTERRUPT_InterruptManager *****************
 32875 ;; Defined at:
 32876 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 32877 ;; Parameters:    Size  Location     Type
 32878 ;;		None
 32879 ;; Auto vars:     Size  Location     Type
 32880 ;;		None
 32881 ;; Return value:  Size  Location     Type
 32882 ;;                  1    wreg      void 
 32883 ;; Registers used:
 32884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32885 ;; Tracked objects:
 32886 ;;		On entry : 0/0
 32887 ;;		On exit  : 0/0
 32888 ;;		Unchanged: 0/0
 32889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32892 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32893 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32894 ;;Total ram usage:        6 bytes
 32895 ;; Hardware stack levels used: 1
 32896 ;; Hardware stack levels required when called: 3
 32897 ;; This function calls:
 32898 ;;		Absolute function
 32899 ;;		_EUSART1_Receive_ISR
 32900 ;;		_EUSART1_Transmit_ISR
 32901 ;;		_TMR0_ISR
 32902 ;;		_TMR1_ISR
 32903 ;;		_TMR2_ISR
 32904 ;; This function is called by:
 32905 ;;		Interrupt level 2
 32906 ;; This function uses a non-reentrant model
 32907 ;;
 32908                           
 32909                           	psect	intcode
 32910  000008                     __pintcode:
 32911                           	callstack 0
 32912  000008                     _INTERRUPT_InterruptManager:
 32913                           	callstack 14
 32914                           
 32915                           ; BSR set to: 14
 32916                           ;incstack = 0
 32917  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 32918  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 32919  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 32920  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 32921  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 32922  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 32923  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 32924                           
 32925                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 32926  000022  010E               	movlb	14	; () banked
 32927  000024  BBC2               	btfsc	194,5,b	;volatile
 32928                           
 32929                           ; BSR set to: 14
 32930  000026  ABCA               	btfss	202,5,b	;volatile
 32931  000028  D003               	goto	i2l867
 32932                           
 32933                           ; BSR set to: 14
 32934                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 32935  00002A  EC66  F047         	call	_TMR0_ISR	;wreg free
 32936                           
 32937                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 32938  00002E  D028               	goto	i2l873
 32939  000030                     i2l867:
 32940                           
 32941                           ; BSR set to: 14
 32942  000030  ACF2               	btfss	242,6,c	;volatile
 32943  000032  D026               	goto	i2l873
 32944                           
 32945                           ; BSR set to: 14
 32946                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 32947  000034  B9C5               	btfsc	197,4,b	;volatile
 32948                           
 32949                           ; BSR set to: 14
 32950  000036  A9CD               	btfss	205,4,b	;volatile
 32951  000038  D009               	goto	i2l870
 32952                           
 32953                           ; BSR set to: 14
 32954                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 32955  00003A  D801               	call	i2u2176_48
 32956  00003C  D021               	goto	i2l873
 32957  00003E                     i2u2176_48:
 32958  00003E  0005               	push	
 32959  000040  6EFA               	movwf	pclath,c
 32960  000042  0102               	movlb	2	; () banked
 32961  000044  51ED               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 32962  000046  6EFD               	movwf	tosl,c
 32963  000048  51EE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 32964  00004A  D00B               	goto	L112
 32965  00004C                     i2l870:
 32966                           
 32967                           ; BSR set to: 14
 32968  00004C  BBC5               	btfsc	197,5,b	;volatile
 32969                           
 32970                           ; BSR set to: 14
 32971  00004E  ABCD               	btfss	205,5,b	;volatile
 32972  000050  D00C               	goto	i2l872
 32973                           
 32974                           ; BSR set to: 14
 32975                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 32976  000052  D801               	call	i2u2179_48
 32977  000054  D015               	goto	i2l873
 32978  000056                     i2u2179_48:
 32979  000056  0005               	push	
 32980  000058  6EFA               	movwf	pclath,c
 32981  00005A  0102               	movlb	2	; () banked
 32982  00005C  51EB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 32983  00005E  6EFD               	movwf	tosl,c
 32984  000060  51EC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 32985  000062                     L112:
 32986  000062  6EFE               	movwf	tosh,c
 32987  000064  6AFF               	clrf	tosu,c
 32988  000066  50FA               	movf	pclath,w,c
 32989  000068  0012               	return		;indir
 32990  00006A                     i2l872:
 32991                           
 32992                           ; BSR set to: 14
 32993  00006A  B1C6               	btfsc	198,0,b	;volatile
 32994                           
 32995                           ; BSR set to: 14
 32996  00006C  A1CE               	btfss	206,0,b	;volatile
 32997  00006E  D003               	goto	i2l874
 32998                           
 32999                           ; BSR set to: 14
 33000                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 33001  000070  ECF5  F044         	call	_TMR1_ISR	;wreg free
 33002                           
 33003                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 33004  000074  D005               	goto	i2l873
 33005  000076                     i2l874:
 33006                           
 33007                           ; BSR set to: 14
 33008  000076  B3C6               	btfsc	198,1,b	;volatile
 33009                           
 33010                           ; BSR set to: 14
 33011  000078  A3CE               	btfss	206,1,b	;volatile
 33012  00007A  D002               	goto	i2l873
 33013                           
 33014                           ; BSR set to: 14
 33015                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 33016  00007C  EC9E  F030         	call	_TMR2_ISR	;wreg free
 33017  000080                     i2l873:
 33018                           
 33019                           ; BSR set to: 14
 33020  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 33021  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 33022  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 33023  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 33024  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 33025  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 33026  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33027  00009A  0011               	retfie		f
 33028  00009C                     __end_of_INTERRUPT_InterruptManager:
 33029                           	callstack 0
 33030                           
 33031 ;; *************** function _TMR2_ISR *****************
 33032 ;; Defined at:
 33033 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 33034 ;; Parameters:    Size  Location     Type
 33035 ;;		None
 33036 ;; Auto vars:     Size  Location     Type
 33037 ;;		None
 33038 ;; Return value:  Size  Location     Type
 33039 ;;                  1    wreg      void 
 33040 ;; Registers used:
 33041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 33042 ;; Tracked objects:
 33043 ;;		On entry : 3F/E
 33044 ;;		On exit  : 0/0
 33045 ;;		Unchanged: 0/0
 33046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33051 ;;Total ram usage:        0 bytes
 33052 ;; Hardware stack levels used: 1
 33053 ;; Hardware stack levels required when called: 2
 33054 ;; This function calls:
 33055 ;;		Absolute function
 33056 ;;		_ReadADC
 33057 ;;		_TMR2_DefaultInterruptHandler
 33058 ;;		_controlTimeslots
 33059 ;;		_refreshSegment
 33060 ;; This function is called by:
 33061 ;;		_INTERRUPT_InterruptManager
 33062 ;; This function uses a non-reentrant model
 33063 ;;
 33064                           
 33065                           	psect	text184
 33066  00613C                     __ptext184:
 33067                           	callstack 0
 33068  00613C                     _TMR2_ISR:
 33069                           	callstack 14
 33070                           
 33071                           ; BSR set to: 14
 33072                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 33073                           
 33074                           ;incstack = 0
 33075  00613C  93CE               	bcf	206,1,b	;volatile
 33076                           
 33077                           ; BSR set to: 14
 33078                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 33079  00613E  ECA8  F042         	call	_ReadADC	;wreg free
 33080                           
 33081                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 33082  006142  ECA5  F03C         	call	_refreshSegment	;wreg free
 33083                           
 33084                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 33085  006146  0101               	movlb	1	; () banked
 33086  006148  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 33087  00614A  A4D8               	btfss	status,2,c
 33088                           
 33089                           ; BSR set to: 1
 33090                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 33091  00614C  079D               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 33092                           
 33093                           ; BSR set to: 1
 33094                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 33095  00614E  519B               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 33096  006150  B4D8               	btfsc	status,2,c
 33097  006152  D002               	goto	i2l16295
 33098                           
 33099                           ; BSR set to: 1
 33100                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 33101  006154  079B               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 33102                           
 33103                           ;mcc_generated_files/tmr2.c: 201:                 }
 33104  006156  D089               	goto	i2l16367
 33105  006158                     i2l16295:
 33106                           
 33107                           ; BSR set to: 1
 33108                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 33109  006158  0E32               	movlw	50
 33110  00615A  6F9B               	movwf	(_ts_system+1)& (0+255),b	;volatile
 33111                           
 33112                           ; BSR set to: 1
 33113                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 33114  00615C  EC1B  F02C         	call	_controlTimeslots	;wreg free
 33115                           
 33116                           ; BSR set to: 1
 33117                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 33118  006160  0100               	movlb	0	; () banked
 33119  006162  5192               	movf	_Counterchoose& (0+255),w,b
 33120  006164  A4D8               	btfss	status,2,c
 33121  006166  D002               	goto	i2l16303
 33122                           
 33123                           ; BSR set to: 0
 33124                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 33125  006168  0E01               	movlw	1
 33126  00616A  D001               	goto	L113
 33127  00616C                     i2l16303:
 33128                           
 33129                           ; BSR set to: 0
 33130                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 33131  00616C  0E00               	movlw	0
 33132  00616E                     L113:
 33133  00616E  6F92               	movwf	_Counterchoose& (0+255),b
 33134                           
 33135                           ; BSR set to: 0
 33136                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 33137                           
 33138                           ;mcc_generated_files/tmr2.c: 217:                                }
 33139  006170  0101               	movlb	1	; () banked
 33140  006172  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 33141  006174  A4D8               	btfss	status,2,c
 33142  006176  D034               	goto	i2l16329
 33143                           
 33144                           ; BSR set to: 1
 33145                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 33146  006178  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 33147  00617A  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 33148  00617C  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 33149  00617E  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 33150  006180  B4D8               	btfsc	status,2,c
 33151  006182  D008               	goto	i2l1266
 33152                           
 33153                           ; BSR set to: 1
 33154  006184  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 33155  006186  B4D8               	btfsc	status,2,c
 33156  006188  D005               	goto	i2l1266
 33157                           
 33158                           ; BSR set to: 1
 33159                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 33160  00618A  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 33161  00618C  0E00               	movlw	0
 33162  00618E  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 33163  006190  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 33164  006192  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 33165  006194                     i2l1266:
 33166                           
 33167                           ; BSR set to: 1
 33168                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 33169  006194  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33170  006196  A4D8               	btfss	status,2,c
 33171  006198  D00E               	goto	i2l16319
 33172                           
 33173                           ; BSR set to: 1
 33174                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 33175  00619A  057B               	decf	_powerControl_st& (0+255),w,b
 33176  00619C  A4D8               	btfss	status,2,c
 33177  00619E  D004               	goto	i2u1847_40
 33178                           
 33179                           ; BSR set to: 1
 33180                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 33181  0061A0  0100               	movlb	0	; () banked
 33182  0061A2  0592               	decf	_Counterchoose& (0+255),w,b
 33183  0061A4  A4D8               	btfss	status,2,c
 33184  0061A6  D061               	goto	i2l16367
 33185  0061A8                     i2u1847_40:
 33186                           
 33187                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 33188  0061A8  0E01               	movlw	1
 33189  0061AA  0101               	movlb	1	; () banked
 33190  0061AC  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33191  0061AE  0E00               	movlw	0
 33192  0061B0  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33193  0061B2  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33194  0061B4  D013               	goto	L114
 33195  0061B6                     i2l16319:
 33196                           
 33197                           ; BSR set to: 1
 33198  0061B6  0E02               	movlw	2
 33199  0061B8  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33200  0061BA  A4D8               	btfss	status,2,c
 33201  0061BC  D056               	goto	i2l16367
 33202                           
 33203                           ; BSR set to: 1
 33204                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 33205  0061BE  057B               	decf	_powerControl_st& (0+255),w,b
 33206  0061C0  A4D8               	btfss	status,2,c
 33207  0061C2  D004               	goto	i2u1850_40
 33208                           
 33209                           ; BSR set to: 1
 33210                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 33211  0061C4  0100               	movlb	0	; () banked
 33212  0061C6  0592               	decf	_Counterchoose& (0+255),w,b
 33213  0061C8  A4D8               	btfss	status,2,c
 33214  0061CA  D04F               	goto	i2l16367
 33215  0061CC                     i2u1850_40:
 33216                           
 33217                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 33218  0061CC  0EFF               	movlw	255
 33219  0061CE  0101               	movlb	1	; () banked
 33220  0061D0  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33221  0061D2  0EFF               	movlw	255
 33222  0061D4  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33223  0061D6  0EFF               	movlw	255
 33224  0061D8  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33225  0061DA  0EFF               	movlw	255
 33226  0061DC                     L114:
 33227  0061DC  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 33228                           
 33229                           ;mcc_generated_files/tmr2.c: 263:                            }
 33230  0061DE  D045               	goto	i2l16367
 33231  0061E0                     i2l16329:
 33232                           
 33233                           ; BSR set to: 1
 33234                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 33235  0061E0  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 33236  0061E2  A4D8               	btfss	status,2,c
 33237  0061E4  D01C               	goto	i2l1277
 33238                           
 33239                           ; BSR set to: 1
 33240                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 33241  0061E6  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33242  0061E8  A4D8               	btfss	status,2,c
 33243  0061EA  D00B               	goto	i2l16339
 33244                           
 33245                           ; BSR set to: 1
 33246                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33247  0061EC  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33248  0061EE  B4D8               	btfsc	status,2,c
 33249  0061F0  D016               	goto	i2l1277
 33250                           
 33251                           ; BSR set to: 1
 33252                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 33253  0061F2  0E01               	movlw	1
 33254  0061F4  0100               	movlb	0	; () banked
 33255  0061F6  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33256  0061F8  0E00               	movlw	0
 33257  0061FA  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33258  0061FC  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33259  0061FE  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 33260  006200  D00E               	goto	i2l1277
 33261  006202                     i2l16339:
 33262                           
 33263                           ; BSR set to: 1
 33264  006202  0E02               	movlw	2
 33265  006204  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33266  006206  A4D8               	btfss	status,2,c
 33267  006208  D00A               	goto	i2l1277
 33268                           
 33269                           ; BSR set to: 1
 33270                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33271  00620A  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33272  00620C  B4D8               	btfsc	status,2,c
 33273  00620E  D007               	goto	i2l1277
 33274                           
 33275                           ; BSR set to: 1
 33276                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 33277  006210  0E01               	movlw	1
 33278  006212  0100               	movlb	0	; () banked
 33279  006214  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 33280  006216  0E00               	movlw	0
 33281  006218  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 33282  00621A  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 33283  00621C  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 33284  00621E                     i2l1277:
 33285                           
 33286                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 33287  00621E  0101               	movlb	1	; () banked
 33288  006220  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33289  006222  A4D8               	btfss	status,2,c
 33290  006224  D022               	goto	i2l16367
 33291                           
 33292                           ; BSR set to: 1
 33293  006226  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 33294  006228  A4D8               	btfss	status,2,c
 33295  00622A  D01F               	goto	i2l16367
 33296                           
 33297                           ; BSR set to: 1
 33298                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 33299  00622C  519A               	movf	_ts_system& (0+255),w,b	;volatile
 33300  00622E  B4D8               	btfsc	status,2,c
 33301  006230  D002               	goto	i2l16353
 33302                           
 33303                           ; BSR set to: 1
 33304                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 33305  006232  079A               	decf	_ts_system& (0+255),f,b	;volatile
 33306                           
 33307                           ;mcc_generated_files/tmr2.c: 311:                                            }
 33308  006234  D01A               	goto	i2l16367
 33309  006236                     i2l16353:
 33310                           
 33311                           ; BSR set to: 1
 33312                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 33313  006236  0E0A               	movlw	10
 33314  006238  6F9A               	movwf	_ts_system& (0+255),b	;volatile
 33315                           
 33316                           ; BSR set to: 1
 33317                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 33318  00623A  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33319  00623C  A4D8               	btfss	status,2,c
 33320  00623E  D009               	goto	i2l16361
 33321                           
 33322                           ; BSR set to: 1
 33323                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 33324  006240  0100               	movlb	0	; () banked
 33325  006242  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 33326                           
 33327                           ; BSR set to: 0
 33328                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 33329  006244  0E01               	movlw	1
 33330  006246  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33331  006248  0E00               	movlw	0
 33332  00624A  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33333  00624C  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33334  00624E  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 33335                           
 33336                           ;mcc_generated_files/tmr2.c: 322:                                                }
 33337  006250  D00C               	goto	i2l16367
 33338  006252                     i2l16361:
 33339                           
 33340                           ; BSR set to: 1
 33341  006252  0E02               	movlw	2
 33342  006254  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33343  006256  A4D8               	btfss	status,2,c
 33344  006258  D008               	goto	i2l16367
 33345                           
 33346                           ; BSR set to: 1
 33347                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 33348  00625A  0100               	movlb	0	; () banked
 33349  00625C  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 33350                           
 33351                           ; BSR set to: 0
 33352                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 33353  00625E  0E01               	movlw	1
 33354  006260  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 33355  006262  0E00               	movlw	0
 33356  006264  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 33357  006266  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 33358  006268  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 33359  00626A                     i2l16367:
 33360                           
 33361                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 33362  00626A  0102               	movlb	2	; () banked
 33363  00626C  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33364  00626E  11DE               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33365  006270  B4D8               	btfsc	status,2,c
 33366  006272  0012               	return	
 33367                           
 33368                           ; BSR set to: 2
 33369                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 33370  006274  D801               	call	i2u1862_48
 33371  006276  0012               	return	
 33372  006278                     i2u1862_48:
 33373  006278  0005               	push	
 33374  00627A  6EFA               	movwf	pclath,c
 33375  00627C  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33376  00627E  6EFD               	movwf	tosl,c
 33377  006280  51DE               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33378  006282  6EFE               	movwf	tosh,c
 33379  006284  6AFF               	clrf	tosu,c
 33380  006286  50FA               	movf	pclath,w,c
 33381  006288  0012               	return		;indir
 33382  00628A                     __end_of_TMR2_ISR:
 33383                           	callstack 0
 33384                           
 33385 ;; *************** function _refreshSegment *****************
 33386 ;; Defined at:
 33387 ;;		line 50 in file "outputs_MC50.c"
 33388 ;; Parameters:    Size  Location     Type
 33389 ;;		None
 33390 ;; Auto vars:     Size  Location     Type
 33391 ;;		None
 33392 ;; Return value:  Size  Location     Type
 33393 ;;                  1    wreg      void 
 33394 ;; Registers used:
 33395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33396 ;; Tracked objects:
 33397 ;;		On entry : 31/E
 33398 ;;		On exit  : 3E/0
 33399 ;;		Unchanged: 0/0
 33400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33405 ;;Total ram usage:        0 bytes
 33406 ;; Hardware stack levels used: 1
 33407 ;; Hardware stack levels required when called: 1
 33408 ;; This function calls:
 33409 ;;		_Segments_Set
 33410 ;; This function is called by:
 33411 ;;		_TMR2_ISR
 33412 ;; This function uses a non-reentrant model
 33413 ;;
 33414                           
 33415                           	psect	text185
 33416  00794A                     __ptext185:
 33417                           	callstack 0
 33418  00794A                     _refreshSegment:
 33419                           	callstack 14
 33420                           
 33421                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 33422                           
 33423                           ;incstack = 0
 33424  00794A  0100               	movlb	0	; () banked
 33425  00794C  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 33426  00794E  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 33427  007950  B4D8               	btfsc	status,2,c
 33428  007952  D003               	goto	i2u1464_40
 33429                           
 33430                           ; BSR set to: 0
 33431  007954  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 33432  007956  A4D8               	btfss	status,2,c
 33433  007958  D01F               	goto	i2l2128
 33434  00795A                     i2u1464_40:
 33435                           
 33436                           ; BSR set to: 0
 33437                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 33438  00795A  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 33439  00795C  A4D8               	btfss	status,2,c
 33440  00795E  D00D               	goto	i2l2123
 33441                           
 33442                           ; BSR set to: 0
 33443                           
 33444                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 33445  007960  9085               	bcf	133,0,c	;volatile
 33446                           
 33447                           ; BSR set to: 0
 33448                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 33449  007962  0ED2               	movlw	low _DispTable
 33450  007964  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 33451  007966  6ED9               	movwf	fsr2l,c
 33452  007968  6ADA               	clrf	fsr2h,c
 33453  00796A  0E03               	movlw	high _DispTable
 33454  00796C  22DA               	addwfc	fsr2h,f,c
 33455  00796E  50DF               	movf	indf2,w,c
 33456  007970  EC0B  F049         	call	_Segments_Set
 33457  007974  8285               	bsf	133,1,c	;volatile
 33458                           
 33459                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 33460  007976  0E00               	movlw	0
 33461  007978  D00C               	goto	L115
 33462  00797A                     i2l2123:
 33463                           
 33464                           ; BSR set to: 0
 33465  00797A  9285               	bcf	133,1,c	;volatile
 33466                           
 33467                           ; BSR set to: 0
 33468                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 33469  00797C  0ED2               	movlw	low _DispTable
 33470  00797E  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 33471  007980  6ED9               	movwf	fsr2l,c
 33472  007982  6ADA               	clrf	fsr2h,c
 33473  007984  0E03               	movlw	high _DispTable
 33474  007986  22DA               	addwfc	fsr2h,f,c
 33475  007988  50DF               	movf	indf2,w,c
 33476  00798A  EC0B  F049         	call	_Segments_Set
 33477  00798E  8085               	bsf	133,0,c	;volatile
 33478                           
 33479                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 33480  007990  0E01               	movlw	1
 33481  007992                     L115:
 33482  007992  0100               	movlb	0	; () banked
 33483  007994  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 33484  007996  D002               	goto	i2l14383
 33485  007998                     i2l2128:
 33486                           
 33487                           ; BSR set to: 0
 33488  007998  9085               	bcf	133,0,c	;volatile
 33489                           
 33490                           ; BSR set to: 0
 33491                           
 33492                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 33493  00799A  9285               	bcf	133,1,c	;volatile
 33494  00799C                     i2l14383:
 33495                           
 33496                           ; BSR set to: 0
 33497                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 33498  00799C  0101               	movlb	1	; () banked
 33499  00799E  BFA5               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 33500  0079A0  D005               	goto	i2u1466_40
 33501  0079A2  51A5               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 33502  0079A4  E114               	bnz	i2l2135
 33503  0079A6  05A4               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 33504  0079A8  B0D8               	btfsc	status,0,c
 33505  0079AA  0012               	return	
 33506  0079AC                     i2u1466_40:
 33507                           
 33508                           ; BSR set to: 1
 33509  0079AC  0100               	movlb	0	; () banked
 33510  0079AE  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 33511  0079B0  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 33512  0079B2  B4D8               	btfsc	status,2,c
 33513  0079B4  0012               	return	
 33514                           
 33515                           ; BSR set to: 0
 33516                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 33517  0079B6  C075  F1A4         	movff	_dispStruct+3,_ts_system+10	;volatile
 33518  0079BA  C076  F1A5         	movff	_dispStruct+4,_ts_system+11	;volatile
 33519                           
 33520                           ; BSR set to: 0
 33521                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 33522  0079BE  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 33523  0079C0  A4D8               	btfss	status,2,c
 33524  0079C2  D003               	goto	i2l14393
 33525                           
 33526                           ; BSR set to: 0
 33527                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 33528  0079C4  0E00               	movlw	0
 33529  0079C6  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 33530                           
 33531                           ;outputs_MC50.c: 85:         }
 33532  0079C8  0012               	return	
 33533  0079CA                     i2l14393:
 33534                           
 33535                           ; BSR set to: 0
 33536                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 33537  0079CA  0E01               	movlw	1
 33538  0079CC  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 33539  0079CE                     i2l2135:
 33540  0079CE  0012               	return		;funcret
 33541  0079D0                     __end_of_refreshSegment:
 33542                           	callstack 0
 33543                           
 33544 ;; *************** function _Segments_Set *****************
 33545 ;; Defined at:
 33546 ;;		line 93 in file "outputs_MC50.c"
 33547 ;; Parameters:    Size  Location     Type
 33548 ;;  value           1    wreg     unsigned char 
 33549 ;; Auto vars:     Size  Location     Type
 33550 ;;  value           1    0[COMRAM] unsigned char 
 33551 ;; Return value:  Size  Location     Type
 33552 ;;                  1    wreg      void 
 33553 ;; Registers used:
 33554 ;;		wreg, status,2, status,0
 33555 ;; Tracked objects:
 33556 ;;		On entry : 3F/0
 33557 ;;		On exit  : 0/0
 33558 ;;		Unchanged: 0/0
 33559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33561 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33563 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33564 ;;Total ram usage:        1 bytes
 33565 ;; Hardware stack levels used: 1
 33566 ;; This function calls:
 33567 ;;		Nothing
 33568 ;; This function is called by:
 33569 ;;		_refreshSegment
 33570 ;; This function uses a non-reentrant model
 33571 ;;
 33572                           
 33573                           	psect	text186
 33574  009216                     __ptext186:
 33575                           	callstack 0
 33576  009216                     _Segments_Set:
 33577                           	callstack 14
 33578                           
 33579                           ;incstack = 0
 33580                           ;Segments_Set@value stored from wreg
 33581  009216  6E01               	movwf	Segments_Set@value^0,c
 33582                           
 33583                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 33584  009218  0E80               	movlw	128
 33585  00921A  1686               	andwf	134,f,c	;volatile
 33586                           
 33587                           ;outputs_MC50.c: 96:    LATD |= value;
 33588  00921C  5001               	movf	Segments_Set@value^0,w,c	;volatile
 33589  00921E  1286               	iorwf	134,f,c	;volatile
 33590  009220  0012               	return		;funcret
 33591  009222                     __end_of_Segments_Set:
 33592                           	callstack 0
 33593                           
 33594 ;; *************** function _controlTimeslots *****************
 33595 ;; Defined at:
 33596 ;;		line 190 in file "main_MC50.c"
 33597 ;; Parameters:    Size  Location     Type
 33598 ;;		None
 33599 ;; Auto vars:     Size  Location     Type
 33600 ;;		None
 33601 ;; Return value:  Size  Location     Type
 33602 ;;                  1    wreg      void 
 33603 ;; Registers used:
 33604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33605 ;; Tracked objects:
 33606 ;;		On entry : 3F/1
 33607 ;;		On exit  : 3F/1
 33608 ;;		Unchanged: 0/0
 33609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33614 ;;Total ram usage:        0 bytes
 33615 ;; Hardware stack levels used: 1
 33616 ;; Hardware stack levels required when called: 1
 33617 ;; This function calls:
 33618 ;;		_decrementTimeslot
 33619 ;; This function is called by:
 33620 ;;		_TMR2_ISR
 33621 ;; This function uses a non-reentrant model
 33622 ;;
 33623                           
 33624                           	psect	text187
 33625  005836                     __ptext187:
 33626                           	callstack 0
 33627  005836                     _controlTimeslots:
 33628                           	callstack 14
 33629                           
 33630                           ; BSR set to: 1
 33631                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 33632                           
 33633                           ;incstack = 0
 33634  005836  0EA2               	movlw	low (_ts_system+8)
 33635  005838  6E01               	movwf	decrementTimeslot@ts^0,c
 33636  00583A  0E01               	movlw	high (_ts_system+8)
 33637  00583C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33638  00583E  EC04  F047         	call	_decrementTimeslot	;wreg free
 33639                           
 33640                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 33641  005842  0EE0               	movlw	low (_ts_system+70)
 33642  005844  6E01               	movwf	decrementTimeslot@ts^0,c
 33643  005846  0E01               	movlw	high (_ts_system+70)
 33644  005848  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33645  00584A  EC04  F047         	call	_decrementTimeslot	;wreg free
 33646                           
 33647                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 33648  00584E  0EA4               	movlw	low (_ts_system+10)
 33649  005850  6E01               	movwf	decrementTimeslot@ts^0,c
 33650  005852  0E01               	movlw	high (_ts_system+10)
 33651  005854  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33652  005856  EC04  F047         	call	_decrementTimeslot	;wreg free
 33653                           
 33654                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 33655  00585A  0EA6               	movlw	low (_ts_system+12)
 33656  00585C  6E01               	movwf	decrementTimeslot@ts^0,c
 33657  00585E  0E01               	movlw	high (_ts_system+12)
 33658  005860  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33659  005862  EC04  F047         	call	_decrementTimeslot	;wreg free
 33660                           
 33661                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 33662  005866  0EA8               	movlw	low (_ts_system+14)
 33663  005868  6E01               	movwf	decrementTimeslot@ts^0,c
 33664  00586A  0E01               	movlw	high (_ts_system+14)
 33665  00586C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33666  00586E  EC04  F047         	call	_decrementTimeslot	;wreg free
 33667                           
 33668                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 33669  005872  0EAA               	movlw	low (_ts_system+16)
 33670  005874  6E01               	movwf	decrementTimeslot@ts^0,c
 33671  005876  0E01               	movlw	high (_ts_system+16)
 33672  005878  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33673  00587A  EC04  F047         	call	_decrementTimeslot	;wreg free
 33674                           
 33675                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 33676  00587E  0EAC               	movlw	low (_ts_system+18)
 33677  005880  6E01               	movwf	decrementTimeslot@ts^0,c
 33678  005882  0E01               	movlw	high (_ts_system+18)
 33679  005884  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33680  005886  EC04  F047         	call	_decrementTimeslot	;wreg free
 33681                           
 33682                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 33683  00588A  0EAE               	movlw	low (_ts_system+20)
 33684  00588C  6E01               	movwf	decrementTimeslot@ts^0,c
 33685  00588E  0E01               	movlw	high (_ts_system+20)
 33686  005890  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33687  005892  EC04  F047         	call	_decrementTimeslot	;wreg free
 33688                           
 33689                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 33690  005896  0EB0               	movlw	low (_ts_system+22)
 33691  005898  6E01               	movwf	decrementTimeslot@ts^0,c
 33692  00589A  0E01               	movlw	high (_ts_system+22)
 33693  00589C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33694  00589E  EC04  F047         	call	_decrementTimeslot	;wreg free
 33695                           
 33696                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 33697  0058A2  0EB4               	movlw	low (_ts_system+26)
 33698  0058A4  6E01               	movwf	decrementTimeslot@ts^0,c
 33699  0058A6  0E01               	movlw	high (_ts_system+26)
 33700  0058A8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33701  0058AA  EC04  F047         	call	_decrementTimeslot	;wreg free
 33702                           
 33703                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 33704  0058AE  0EB6               	movlw	low (_ts_system+28)
 33705  0058B0  6E01               	movwf	decrementTimeslot@ts^0,c
 33706  0058B2  0E01               	movlw	high (_ts_system+28)
 33707  0058B4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33708  0058B6  EC04  F047         	call	_decrementTimeslot	;wreg free
 33709                           
 33710                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 33711  0058BA  0EB8               	movlw	low (_ts_system+30)
 33712  0058BC  6E01               	movwf	decrementTimeslot@ts^0,c
 33713  0058BE  0E01               	movlw	high (_ts_system+30)
 33714  0058C0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33715  0058C2  EC04  F047         	call	_decrementTimeslot	;wreg free
 33716                           
 33717                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 33718  0058C6  0EBE               	movlw	low (_ts_system+36)
 33719  0058C8  6E01               	movwf	decrementTimeslot@ts^0,c
 33720  0058CA  0E01               	movlw	high (_ts_system+36)
 33721  0058CC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33722  0058CE  EC04  F047         	call	_decrementTimeslot	;wreg free
 33723                           
 33724                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 33725  0058D2  0EC0               	movlw	low (_ts_system+38)
 33726  0058D4  6E01               	movwf	decrementTimeslot@ts^0,c
 33727  0058D6  0E01               	movlw	high (_ts_system+38)
 33728  0058D8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33729  0058DA  EC04  F047         	call	_decrementTimeslot	;wreg free
 33730                           
 33731                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 33732  0058DE  0EC2               	movlw	low (_ts_system+40)
 33733  0058E0  6E01               	movwf	decrementTimeslot@ts^0,c
 33734  0058E2  0E01               	movlw	high (_ts_system+40)
 33735  0058E4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33736  0058E6  EC04  F047         	call	_decrementTimeslot	;wreg free
 33737                           
 33738                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 33739  0058EA  0EC4               	movlw	low (_ts_system+42)
 33740  0058EC  6E01               	movwf	decrementTimeslot@ts^0,c
 33741  0058EE  0E01               	movlw	high (_ts_system+42)
 33742  0058F0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33743  0058F2  EC04  F047         	call	_decrementTimeslot	;wreg free
 33744                           
 33745                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 33746  0058F6  0EC6               	movlw	low (_ts_system+44)
 33747  0058F8  6E01               	movwf	decrementTimeslot@ts^0,c
 33748  0058FA  0E01               	movlw	high (_ts_system+44)
 33749  0058FC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33750  0058FE  EC04  F047         	call	_decrementTimeslot	;wreg free
 33751                           
 33752                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 33753  005902  0EC8               	movlw	low (_ts_system+46)
 33754  005904  6E01               	movwf	decrementTimeslot@ts^0,c
 33755  005906  0E01               	movlw	high (_ts_system+46)
 33756  005908  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33757  00590A  EC04  F047         	call	_decrementTimeslot	;wreg free
 33758                           
 33759                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 33760  00590E  0ECA               	movlw	low (_ts_system+48)
 33761  005910  6E01               	movwf	decrementTimeslot@ts^0,c
 33762  005912  0E01               	movlw	high (_ts_system+48)
 33763  005914  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33764  005916  EC04  F047         	call	_decrementTimeslot	;wreg free
 33765                           
 33766                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 33767  00591A  0EDC               	movlw	low (_ts_system+66)
 33768  00591C  6E01               	movwf	decrementTimeslot@ts^0,c
 33769  00591E  0E01               	movlw	high (_ts_system+66)
 33770  005920  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33771  005922  EC04  F047         	call	_decrementTimeslot	;wreg free
 33772                           
 33773                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 33774  005926  0EDE               	movlw	low (_ts_system+68)
 33775  005928  6E01               	movwf	decrementTimeslot@ts^0,c
 33776  00592A  0E01               	movlw	high (_ts_system+68)
 33777  00592C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33778  00592E  EC04  F047         	call	_decrementTimeslot	;wreg free
 33779                           
 33780                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 33781  005932  0100               	movlb	0	; () banked
 33782  005934  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 33783  005936  B4D8               	btfsc	status,2,c
 33784  005938  D008               	goto	i2u1470_40
 33785                           
 33786                           ; BSR set to: 0
 33787  00593A  0101               	movlb	1	; () banked
 33788  00593C  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 33789  00593E  D005               	goto	i2u1470_40
 33790  005940  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 33791  005942  E109               	bnz	i2l2019
 33792  005944  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 33793  005946  B0D8               	btfsc	status,0,c
 33794  005948  D006               	goto	i2l2019
 33795  00594A                     i2u1470_40:
 33796                           
 33797                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 33798  00594A  0ECC               	movlw	low (_ts_system+50)
 33799  00594C  6E01               	movwf	decrementTimeslot@ts^0,c
 33800  00594E  0E01               	movlw	high (_ts_system+50)
 33801  005950  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33802  005952  EC04  F047         	call	_decrementTimeslot	;wreg free
 33803  005956                     i2l2019:
 33804                           
 33805                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 33806  005956  0ECE               	movlw	low (_ts_system+52)
 33807  005958  6E01               	movwf	decrementTimeslot@ts^0,c
 33808  00595A  0E01               	movlw	high (_ts_system+52)
 33809  00595C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33810  00595E  EC04  F047         	call	_decrementTimeslot	;wreg free
 33811                           
 33812                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 33813  005962  0ED0               	movlw	low (_ts_system+54)
 33814  005964  6E01               	movwf	decrementTimeslot@ts^0,c
 33815  005966  0E01               	movlw	high (_ts_system+54)
 33816  005968  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33817  00596A  EC04  F047         	call	_decrementTimeslot	;wreg free
 33818                           
 33819                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 33820  00596E  0ED2               	movlw	low (_ts_system+56)
 33821  005970  6E01               	movwf	decrementTimeslot@ts^0,c
 33822  005972  0E01               	movlw	high (_ts_system+56)
 33823  005974  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33824  005976  EC04  F047         	call	_decrementTimeslot	;wreg free
 33825                           
 33826                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 33827  00597A  0ED4               	movlw	low (_ts_system+58)
 33828  00597C  6E01               	movwf	decrementTimeslot@ts^0,c
 33829  00597E  0E01               	movlw	high (_ts_system+58)
 33830  005980  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33831  005982  EC04  F047         	call	_decrementTimeslot	;wreg free
 33832                           
 33833                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 33834  005986  0ED6               	movlw	low (_ts_system+60)
 33835  005988  6E01               	movwf	decrementTimeslot@ts^0,c
 33836  00598A  0E01               	movlw	high (_ts_system+60)
 33837  00598C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33838  00598E  EC04  F047         	call	_decrementTimeslot	;wreg free
 33839                           
 33840                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 33841  005992  0ED8               	movlw	low (_ts_system+62)
 33842  005994  6E01               	movwf	decrementTimeslot@ts^0,c
 33843  005996  0E01               	movlw	high (_ts_system+62)
 33844  005998  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33845  00599A  EC04  F047         	call	_decrementTimeslot	;wreg free
 33846                           
 33847                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 33848  00599E  0EDA               	movlw	low (_ts_system+64)
 33849  0059A0  6E01               	movwf	decrementTimeslot@ts^0,c
 33850  0059A2  0E01               	movlw	high (_ts_system+64)
 33851  0059A4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33852  0059A6  EC04  F047         	call	_decrementTimeslot	;wreg free
 33853                           
 33854                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 33855  0059AA  0101               	movlb	1	; () banked
 33856  0059AC  BFBD               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 33857  0059AE  0012               	return	
 33858  0059B0  51BD               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 33859  0059B2  11BC               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 33860  0059B4  11BB               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 33861  0059B6  E103               	bnz	i2u1471_40
 33862  0059B8  05BA               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 33863  0059BA  A0D8               	btfss	status,0,c
 33864  0059BC  0012               	return	
 33865  0059BE                     i2u1471_40:
 33866                           
 33867                           ; BSR set to: 1
 33868                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 33869  0059BE  0EFF               	movlw	255
 33870  0059C0  27BA               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 33871  0059C2  0EFF               	movlw	255
 33872  0059C4  23BB               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 33873  0059C6  0EFF               	movlw	255
 33874  0059C8  23BC               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 33875  0059CA  0EFF               	movlw	255
 33876  0059CC  23BD               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 33877                           
 33878                           ; BSR set to: 1
 33879  0059CE  0012               	return		;funcret
 33880  0059D0                     __end_of_controlTimeslots:
 33881                           	callstack 0
 33882                           
 33883 ;; *************** function _decrementTimeslot *****************
 33884 ;; Defined at:
 33885 ;;		line 246 in file "main_MC50.c"
 33886 ;; Parameters:    Size  Location     Type
 33887 ;;  ts              2    0[COMRAM] PTR int 
 33888 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 33889 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 33890 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 33891 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 33892 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 33893 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 33894 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 33895 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 33896 ;; Auto vars:     Size  Location     Type
 33897 ;;		None
 33898 ;; Return value:  Size  Location     Type
 33899 ;;                  1    wreg      void 
 33900 ;; Registers used:
 33901 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33902 ;; Tracked objects:
 33903 ;;		On entry : 0/1
 33904 ;;		On exit  : 0/0
 33905 ;;		Unchanged: 0/0
 33906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33909 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33910 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33911 ;;Total ram usage:        4 bytes
 33912 ;; Hardware stack levels used: 1
 33913 ;; This function calls:
 33914 ;;		Nothing
 33915 ;; This function is called by:
 33916 ;;		_controlTimeslots
 33917 ;; This function uses a non-reentrant model
 33918 ;;
 33919                           
 33920                           	psect	text188
 33921  008E08                     __ptext188:
 33922                           	callstack 0
 33923  008E08                     _decrementTimeslot:
 33924                           	callstack 14
 33925                           
 33926                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 33927                           
 33928                           ; BSR set to: 1
 33929                           ;incstack = 0
 33930  008E08  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 33931  008E0C  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 33932  008E10  0E01               	movlw	1
 33933  008E12  BEDB               	btfsc	plusw2,7,c
 33934  008E14  0012               	return	
 33935  008E16  0E01               	movlw	1
 33936  008E18  50DB               	movf	plusw2,w,c
 33937  008E1A  E103               	bnz	i2u1307_40
 33938  008E1C  04DE               	decf	postinc2,w,c
 33939  008E1E  A0D8               	btfss	status,0,c
 33940  008E20  0012               	return	
 33941  008E22                     i2u1307_40:
 33942                           
 33943                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 33944  008E22  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 33945  008E26  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 33946  008E2A  06DE               	decf	postinc2,f,c
 33947  008E2C  0E00               	movlw	0
 33948  008E2E  5ADD               	subwfb	postdec2,f,c
 33949  008E30  0012               	return		;funcret
 33950  008E32                     __end_of_decrementTimeslot:
 33951                           	callstack 0
 33952                           
 33953 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 33954 ;; Defined at:
 33955 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 33956 ;; Parameters:    Size  Location     Type
 33957 ;;		None
 33958 ;; Auto vars:     Size  Location     Type
 33959 ;;		None
 33960 ;; Return value:  Size  Location     Type
 33961 ;;                  1    wreg      void 
 33962 ;; Registers used:
 33963 ;;		None
 33964 ;; Tracked objects:
 33965 ;;		On entry : 3F/2
 33966 ;;		On exit  : 3F/2
 33967 ;;		Unchanged: 3F/0
 33968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33973 ;;Total ram usage:        0 bytes
 33974 ;; Hardware stack levels used: 1
 33975 ;; This function calls:
 33976 ;;		Nothing
 33977 ;; This function is called by:
 33978 ;;		_TMR2_Initialize
 33979 ;;		_TMR2_ISR
 33980 ;; This function uses a non-reentrant model
 33981 ;;
 33982                           
 33983                           	psect	text189
 33984  009350                     __ptext189:
 33985                           	callstack 0
 33986  009350                     _TMR2_DefaultInterruptHandler:
 33987                           	callstack 15
 33988                           
 33989                           ; BSR set to: 2
 33990                           
 33991                           ;incstack = 0
 33992  009350  0012               	return		;funcret
 33993  009352                     __end_of_TMR2_DefaultInterruptHandler:
 33994                           	callstack 0
 33995                           
 33996 ;; *************** function _ReadADC *****************
 33997 ;; Defined at:
 33998 ;;		line 38 in file "controlCurrent_MC50.c"
 33999 ;; Parameters:    Size  Location     Type
 34000 ;;		None
 34001 ;; Auto vars:     Size  Location     Type
 34002 ;;		None
 34003 ;; Return value:  Size  Location     Type
 34004 ;;                  1    wreg      void 
 34005 ;; Registers used:
 34006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34007 ;; Tracked objects:
 34008 ;;		On entry : 3F/E
 34009 ;;		On exit  : 31/0
 34010 ;;		Unchanged: 0/0
 34011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34014 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34015 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34016 ;;Total ram usage:        3 bytes
 34017 ;; Hardware stack levels used: 1
 34018 ;; Hardware stack levels required when called: 1
 34019 ;; This function calls:
 34020 ;;		_ADCC_GetSingleConversion
 34021 ;; This function is called by:
 34022 ;;		_TMR2_ISR
 34023 ;; This function uses a non-reentrant model
 34024 ;;
 34025                           
 34026                           	psect	text190
 34027  008550                     __ptext190:
 34028                           	callstack 0
 34029  008550                     _ReadADC:
 34030                           	callstack 14
 34031                           
 34032                           ; BSR set to: 14
 34033                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 34034                           
 34035                           ; BSR set to: 2
 34036                           ;incstack = 0
 34037  008550  B060               	btfsc	96,0,c	;volatile
 34038  008552  0012               	return	
 34039                           
 34040                           ; BSR set to: 14
 34041                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 34042  008554  0E1D               	movlw	29
 34043  008556  0100               	movlb	0	; () banked
 34044  008558  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 34045  00855A  D002               	goto	i2l14359
 34046                           
 34047                           ; BSR set to: 0
 34048                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 34049  00855C  0E00               	movlw	0
 34050  00855E  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 34051  008560                     i2l14359:
 34052                           
 34053                           ; BSR set to: 0
 34054                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 34055  008560  5063               	movf	99,w,c	;volatile
 34056  008562  CF64 F002          	movff	3940,??_ReadADC	;volatile
 34057  008566  6A03               	clrf	(??_ReadADC+1)^0,c
 34058  008568  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 34059  00856C  6A02               	clrf	??_ReadADC^0,c
 34060  00856E  2602               	addwf	??_ReadADC^0,f,c
 34061  008570  0E00               	movlw	0
 34062  008572  2203               	addwfc	(??_ReadADC+1)^0,f,c
 34063  008574  0E06               	movlw	6
 34064  008576  6E04               	movwf	(??_ReadADC+2)^0,c
 34065  008578                     i2u1462_45:
 34066  008578  90D8               	bcf	status,0,c
 34067  00857A  3203               	rrcf	(??_ReadADC+1)^0,f,c
 34068  00857C  3202               	rrcf	??_ReadADC^0,f,c
 34069  00857E  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 34070  008580  D7FB               	goto	i2u1462_45
 34071  008582  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 34072  008584  0D02               	mullw	2
 34073  008586  0E00               	movlw	low _ADC_array
 34074  008588  24F3               	addwf	243,w,c
 34075  00858A  6ED9               	movwf	fsr2l,c
 34076  00858C  0E02               	movlw	high _ADC_array
 34077  00858E  20F4               	addwfc	prodh,w,c
 34078  008590  6EDA               	movwf	fsr2h,c
 34079  008592  C002  FFDE         	movff	??_ReadADC,postinc2
 34080  008596  C003  FFDD         	movff	??_ReadADC+1,postdec2
 34081                           
 34082                           ; BSR set to: 0
 34083                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 34084  00859A  0E00               	movlw	0
 34085  00859C  ECAE  F048         	call	_ADCC_GetSingleConversion
 34086                           
 34087                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 34088  0085A0  0100               	movlb	0	; () banked
 34089  0085A2  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 34090  0085A4  0012               	return		;funcret
 34091  0085A6                     __end_of_ReadADC:
 34092                           	callstack 0
 34093                           
 34094 ;; *************** function _ADCC_GetSingleConversion *****************
 34095 ;; Defined at:
 34096 ;;		line 131 in file "mcc_generated_files/adcc.c"
 34097 ;; Parameters:    Size  Location     Type
 34098 ;;  channel         1    wreg     enum E10053
 34099 ;; Auto vars:     Size  Location     Type
 34100 ;;  channel         1    0[COMRAM] enum E10053
 34101 ;; Return value:  Size  Location     Type
 34102 ;;                  2  433[None  ] int 
 34103 ;; Registers used:
 34104 ;;		wreg, status,2, cstack
 34105 ;; Tracked objects:
 34106 ;;		On entry : 3F/0
 34107 ;;		On exit  : 0/0
 34108 ;;		Unchanged: 0/0
 34109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34114 ;;Total ram usage:        1 bytes
 34115 ;; Hardware stack levels used: 1
 34116 ;; This function calls:
 34117 ;;		Nothing
 34118 ;; This function is called by:
 34119 ;;		_ReadADC
 34120 ;; This function uses a non-reentrant model
 34121 ;;
 34122                           
 34123                           	psect	text191
 34124  00915C                     __ptext191:
 34125                           	callstack 0
 34126  00915C                     _ADCC_GetSingleConversion:
 34127                           	callstack 14
 34128                           
 34129                           ;incstack = 0
 34130                           ;ADCC_GetSingleConversion@channel stored from wreg
 34131  00915C  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 34132                           
 34133                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 34134  00915E  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 34135                           
 34136                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 34137  009162  8E60               	bsf	96,7,c	;volatile
 34138                           
 34139                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 34140  009164  0E1A               	movlw	26
 34141  009166                     i2u2897_47:
 34142  009166  2EE8               	decfsz	wreg,f,c
 34143  009168  D7FE               	bra	i2u2897_47
 34144  00916A  D000               	nop2	
 34145                           
 34146                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 34147  00916C  9C60               	bcf	96,6,c	;volatile
 34148                           
 34149                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 34150  00916E  8060               	bsf	96,0,c	;volatile
 34151  009170  0012               	return		;funcret
 34152  009172                     __end_of_ADCC_GetSingleConversion:
 34153                           	callstack 0
 34154                           
 34155 ;; *************** function _TMR1_ISR *****************
 34156 ;; Defined at:
 34157 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 34158 ;; Parameters:    Size  Location     Type
 34159 ;;		None
 34160 ;; Auto vars:     Size  Location     Type
 34161 ;;		None
 34162 ;; Return value:  Size  Location     Type
 34163 ;;                  1    wreg      void 
 34164 ;; Registers used:
 34165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34166 ;; Tracked objects:
 34167 ;;		On entry : 3F/E
 34168 ;;		On exit  : 0/0
 34169 ;;		Unchanged: 0/0
 34170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34175 ;;Total ram usage:        0 bytes
 34176 ;; Hardware stack levels used: 1
 34177 ;; Hardware stack levels required when called: 2
 34178 ;; This function calls:
 34179 ;;		Absolute function
 34180 ;;		_TMR1_DefaultInterruptHandler
 34181 ;;		_TMR1_WriteTimer
 34182 ;;		_controlMotorForce
 34183 ;; This function is called by:
 34184 ;;		_INTERRUPT_InterruptManager
 34185 ;; This function uses a non-reentrant model
 34186 ;;
 34187                           
 34188                           	psect	text192
 34189  0089EA                     __ptext192:
 34190                           	callstack 0
 34191  0089EA                     _TMR1_ISR:
 34192                           	callstack 14
 34193                           
 34194                           ; BSR set to: 14
 34195                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 34196                           
 34197                           ;incstack = 0
 34198  0089EA  91CE               	bcf	206,0,b	;volatile
 34199                           
 34200                           ; BSR set to: 14
 34201                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 34202  0089EC  ECCC  F024         	call	_controlMotorForce	;wreg free
 34203                           
 34204                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 34205  0089F0  0101               	movlb	1	; () banked
 34206  0089F2  519F               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 34207  0089F4  A4D8               	btfss	status,2,c
 34208                           
 34209                           ; BSR set to: 1
 34210                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 34211  0089F6  079F               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 34212                           
 34213                           ; BSR set to: 1
 34214                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 34215  0089F8  519C               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 34216  0089FA  A4D8               	btfss	status,2,c
 34217                           
 34218                           ; BSR set to: 1
 34219                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 34220  0089FC  079C               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 34221                           
 34222                           ; BSR set to: 1
 34223                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 34224  0089FE  C2E1  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 34225  008A02  C2E2  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 34226  008A06  EC0C  F048         	call	_TMR1_WriteTimer	;wreg free
 34227                           
 34228                           ; BSR set to: 1
 34229                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 34230  008A0A  0102               	movlb	2	; () banked
 34231  008A0C  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34232  008A0E  11E0               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34233  008A10  B4D8               	btfsc	status,2,c
 34234  008A12  0012               	return	
 34235                           
 34236                           ; BSR set to: 2
 34237                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 34238  008A14  D801               	call	i2u1838_48
 34239  008A16  0012               	return	
 34240  008A18                     i2u1838_48:
 34241  008A18  0005               	push	
 34242  008A1A  6EFA               	movwf	pclath,c
 34243  008A1C  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34244  008A1E  6EFD               	movwf	tosl,c
 34245  008A20  51E0               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34246  008A22  6EFE               	movwf	tosh,c
 34247  008A24  6AFF               	clrf	tosu,c
 34248  008A26  50FA               	movf	pclath,w,c
 34249  008A28  0012               	return		;indir
 34250  008A2A                     __end_of_TMR1_ISR:
 34251                           	callstack 0
 34252                           
 34253 ;; *************** function _controlMotorForce *****************
 34254 ;; Defined at:
 34255 ;;		line 213 in file "outputs_MC50.c"
 34256 ;; Parameters:    Size  Location     Type
 34257 ;;		None
 34258 ;; Auto vars:     Size  Location     Type
 34259 ;;		None
 34260 ;; Return value:  Size  Location     Type
 34261 ;;                  1    wreg      void 
 34262 ;; Registers used:
 34263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34264 ;; Tracked objects:
 34265 ;;		On entry : 3F/E
 34266 ;;		On exit  : 3E/0
 34267 ;;		Unchanged: 0/0
 34268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34271 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34272 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34273 ;;Total ram usage:        5 bytes
 34274 ;; Hardware stack levels used: 1
 34275 ;; Hardware stack levels required when called: 1
 34276 ;; This function calls:
 34277 ;;		i2_GetMotorPower
 34278 ;;		i2_VerifyElectricalBrake
 34279 ;; This function is called by:
 34280 ;;		_TMR1_ISR
 34281 ;; This function uses a non-reentrant model
 34282 ;;
 34283                           
 34284                           	psect	text193
 34285  004998                     __ptext193:
 34286                           	callstack 0
 34287  004998                     _controlMotorForce:
 34288                           	callstack 14
 34289                           
 34290                           ; BSR set to: 14
 34291                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 34292                           
 34293                           ;incstack = 0
 34294  004998  EC51  F038         	call	i2_GetMotorPower	;wreg free
 34295  00499C  6F8F               	movwf	_difTime& (0+255),b
 34296                           
 34297                           ; BSR set to: 1
 34298                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 34299  00499E  057B               	decf	_powerControl_st& (0+255),w,b
 34300  0049A0  A4D8               	btfss	status,2,c
 34301  0049A2  D00F               	goto	i2l2186
 34302                           
 34303                           ; BSR set to: 1
 34304                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 34305  0049A4  BFC7               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 34306  0049A6  D008               	goto	i2l14247
 34307  0049A8  51C7               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 34308  0049AA  E103               	bnz	i2u1422_40
 34309  0049AC  05C6               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 34310  0049AE  A0D8               	btfss	status,0,c
 34311  0049B0  D003               	goto	i2l14247
 34312  0049B2                     i2u1422_40:
 34313                           
 34314                           ; BSR set to: 1
 34315                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 34316  0049B2  0E00               	movlw	0
 34317  0049B4  6F90               	movwf	_StateTRIAC& (0+255),b
 34318                           
 34319                           ;outputs_MC50.c: 223:         }
 34320  0049B6  D005               	goto	i2l2186
 34321  0049B8                     i2l14247:
 34322                           
 34323                           ; BSR set to: 1
 34324  0049B8  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 34325  0049BA  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 34326  0049BC  A0D8               	btfss	status,0,c
 34327                           
 34328                           ; BSR set to: 1
 34329                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 34330  0049BE  C17E  F18F         	movff	_powerControl_st+3,_difTime
 34331  0049C2                     i2l2186:
 34332                           
 34333                           ; BSR set to: 1
 34334                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 34335  0049C2  A68D               	btfss	141,3,c	;volatile
 34336  0049C4  D071               	goto	i2l2190
 34337                           
 34338                           ; BSR set to: 1
 34339  0049C6  5192               	movf	_zeroCrossing& (0+255),w,b
 34340  0049C8  A4D8               	btfss	status,2,c
 34341  0049CA  D06E               	goto	i2l2190
 34342                           
 34343                           ; BSR set to: 1
 34344                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 34345  0049CC  5191               	movf	_waitZeroPeak& (0+255),w,b
 34346  0049CE  A4D8               	btfss	status,2,c
 34347  0049D0  D016               	goto	i2l14263
 34348                           
 34349                           ; BSR set to: 1
 34350                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 34351  0049D2  0EEF               	movlw	low _zeroCrossingWaitTime
 34352  0049D4  0100               	movlb	0	; () banked
 34353  0049D6  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34354  0049D8  6ED9               	movwf	fsr2l,c
 34355  0049DA  6ADA               	clrf	fsr2h,c
 34356  0049DC  0E02               	movlw	high _zeroCrossingWaitTime
 34357  0049DE  22DA               	addwfc	fsr2h,f,c
 34358  0049E0  0101               	movlb	1	; () banked
 34359  0049E2  90D8               	bcf	status,0,c
 34360  0049E4  3193               	rrcf	_zeroCrossingLength& (0+255),w,b
 34361  0049E6  6EDF               	movwf	indf2,c
 34362                           
 34363                           ; BSR set to: 1
 34364                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 34365  0049E8  0100               	movlb	0	; () banked
 34366  0049EA  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34367  0049EC  A4D8               	btfss	status,2,c
 34368  0049EE  D002               	goto	i2l14261
 34369                           
 34370                           ; BSR set to: 0
 34371                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 34372  0049F0  0E01               	movlw	1
 34373  0049F2  D001               	goto	L116
 34374  0049F4                     i2l14261:
 34375                           
 34376                           ; BSR set to: 0
 34377                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 34378  0049F4  0E00               	movlw	0
 34379  0049F6                     L116:
 34380  0049F6  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 34381                           
 34382                           ; BSR set to: 0
 34383                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 34384                           
 34385                           ;outputs_MC50.c: 268:             }
 34386  0049F8  0E00               	movlw	0
 34387  0049FA  0101               	movlb	1	; () banked
 34388  0049FC  6F93               	movwf	_zeroCrossingLength& (0+255),b
 34389  0049FE                     i2l14263:
 34390                           
 34391                           ; BSR set to: 1
 34392                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 34393  0049FE  0E50               	movlw	80
 34394  004A00  658F               	cpfsgt	_difTime& (0+255),b
 34395  004A02  D007               	goto	i2u1429_40
 34396                           
 34397                           ; BSR set to: 1
 34398  004A04  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34399  004A06  D008               	goto	i2l14269
 34400  004A08  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34401  004A0A  E103               	bnz	i2u1429_40
 34402  004A0C  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34403  004A0E  A0D8               	btfss	status,0,c
 34404  004A10  D003               	goto	i2l14269
 34405  004A12                     i2u1429_40:
 34406                           
 34407                           ; BSR set to: 1
 34408                           
 34409                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 34410  004A12  9E86               	bcf	134,7,c	;volatile
 34411                           
 34412                           ; BSR set to: 1
 34413                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 34414  004A14  0E00               	movlw	0
 34415  004A16  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34416  004A18                     i2l14269:
 34417                           
 34418                           ; BSR set to: 1
 34419                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 34420  004A18  2B91               	incf	_waitZeroPeak& (0+255),f,b
 34421                           
 34422                           ; BSR set to: 1
 34423                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 34424  004A1A  0EEF               	movlw	low _zeroCrossingWaitTime
 34425  004A1C  0100               	movlb	0	; () banked
 34426  004A1E  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34427  004A20  6ED9               	movwf	fsr2l,c
 34428  004A22  6ADA               	clrf	fsr2h,c
 34429  004A24  0E02               	movlw	high _zeroCrossingWaitTime
 34430  004A26  22DA               	addwfc	fsr2h,f,c
 34431  004A28  0101               	movlb	1	; () banked
 34432  004A2A  5191               	movf	_waitZeroPeak& (0+255),w,b
 34433  004A2C  5CDE               	subwf	postinc2,w,c
 34434  004A2E  B0D8               	btfsc	status,0,c
 34435  004A30  D044               	goto	i2l14299
 34436                           
 34437                           ; BSR set to: 1
 34438                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 34439  004A32  0E59               	movlw	89
 34440  004A34  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 34441  004A36  D005               	goto	i2l14279
 34442                           
 34443                           ; BSR set to: 1
 34444  004A38  0E6A               	movlw	106
 34445  004A3A  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 34446  004A3C  D002               	goto	i2l14279
 34447                           
 34448                           ; BSR set to: 1
 34449                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 34450  004A3E  0E01               	movlw	1
 34451  004A40  D001               	goto	L117
 34452  004A42                     i2l14279:
 34453                           
 34454                           ; BSR set to: 1
 34455                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 34456  004A42  0E00               	movlw	0
 34457  004A44                     L117:
 34458  004A44  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 34459                           
 34460                           ; BSR set to: 1
 34461                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 34462                           
 34463                           ;outputs_MC50.c: 292:             }
 34464  004A46  0E50               	movlw	80
 34465  004A48  6F9F               	movwf	(_ts_system+5)& (0+255),b	;volatile
 34466                           
 34467                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 34468  004A4A  0E00               	movlw	0
 34469  004A4C  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 34470                           
 34471                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 34472  004A4E  0E01               	movlw	1
 34473  004A50  6F90               	movwf	_StateTRIAC& (0+255),b
 34474                           
 34475                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 34476  004A52  0E01               	movlw	1
 34477  004A54  6F92               	movwf	_zeroCrossing& (0+255),b
 34478                           
 34479                           ; BSR set to: 1
 34480                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 34481  004A56  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 34482                           
 34483                           ; BSR set to: 1
 34484                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 34485  004A58  0100               	movlb	0	; () banked
 34486  004A5A  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34487  004A5C  A4D8               	btfss	status,2,c
 34488  004A5E  D00E               	goto	i2l14291
 34489                           
 34490                           ; BSR set to: 0
 34491  004A60  0101               	movlb	1	; () banked
 34492  004A62  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34493  004A64  D00B               	goto	i2l14291
 34494  004A66  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34495  004A68  E103               	bnz	i2u1434_40
 34496  004A6A  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34497  004A6C  A0D8               	btfss	status,0,c
 34498  004A6E  D006               	goto	i2l14291
 34499  004A70                     i2u1434_40:
 34500                           
 34501                           ; BSR set to: 1
 34502                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 34503  004A70  0E01               	movlw	1
 34504  004A72  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 34505  004A74  D022               	goto	i2l14299
 34506  004A76                     i2u1435_40:
 34507                           
 34508                           ; BSR set to: 1
 34509                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 34510  004A76  0E00               	movlw	0
 34511  004A78  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 34512  004A7A  D01F               	goto	i2l14299
 34513  004A7C                     i2l14291:
 34514                           
 34515                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 34516  004A7C  0101               	movlb	1	; () banked
 34517  004A7E  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 34518  004A80  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 34519  004A84  6A06               	clrf	(??_controlMotorForce+1)^0,c
 34520  004A86  2605               	addwf	??_controlMotorForce^0,f,c
 34521  004A88  0E00               	movlw	0
 34522  004A8A  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 34523  004A8C  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 34524  004A8E  6E07               	movwf	(??_controlMotorForce+2)^0,c
 34525  004A90  6A08               	clrf	(??_controlMotorForce+3)^0,c
 34526  004A92  5005               	movf	??_controlMotorForce^0,w,c
 34527  004A94  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 34528  004A96  5008               	movf	(??_controlMotorForce+3)^0,w,c
 34529  004A98  0A80               	xorlw	128
 34530  004A9A  6E09               	movwf	(??_controlMotorForce+4)^0,c
 34531  004A9C  5006               	movf	(??_controlMotorForce+1)^0,w,c
 34532  004A9E  0A80               	xorlw	128
 34533  004AA0  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 34534  004AA2  B0D8               	btfsc	status,0,c
 34535  004AA4  D7E8               	goto	i2u1435_40
 34536  004AA6  D009               	goto	i2l14299
 34537  004AA8                     i2l2190:
 34538                           
 34539                           ; BSR set to: 1
 34540  004AA8  B68D               	btfsc	141,3,c	;volatile
 34541  004AAA  D007               	goto	i2l14299
 34542                           
 34543                           ; BSR set to: 1
 34544  004AAC  5192               	movf	_zeroCrossing& (0+255),w,b
 34545  004AAE  B4D8               	btfsc	status,2,c
 34546  004AB0  D004               	goto	i2l14299
 34547                           
 34548                           ; BSR set to: 1
 34549                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 34550  004AB2  0E00               	movlw	0
 34551  004AB4  6F92               	movwf	_zeroCrossing& (0+255),b
 34552                           
 34553                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 34554  004AB6  0E00               	movlw	0
 34555  004AB8  6F91               	movwf	_waitZeroPeak& (0+255),b
 34556  004ABA                     i2l14299:
 34557                           
 34558                           ; BSR set to: 1
 34559                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 34560  004ABA  B68D               	btfsc	141,3,c	;volatile
 34561                           
 34562                           ; BSR set to: 1
 34563                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 34564  004ABC  2B93               	incf	_zeroCrossingLength& (0+255),f,b
 34565                           
 34566                           ; BSR set to: 1
 34567                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 34568                           
 34569                           ;outputs_MC50.c: 340:     }
 34570  004ABE  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 34571                           
 34572                           ; BSR set to: 1
 34573                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 34574  004AC0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 34575  004AC2  ECE3  F03E         	call	i2_VerifyElectricalBrake
 34576  004AC6  0100               	movlb	0	; () banked
 34577  004AC8  6F83               	movwf	_stateMotor& (0+255),b
 34578                           
 34579                           ; BSR set to: 0
 34580                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 34581  004ACA  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34582  004ACC  A4D8               	btfss	status,2,c
 34583  004ACE  D02E               	goto	i2l14323
 34584                           
 34585                           ; BSR set to: 0
 34586  004AD0  0101               	movlb	1	; () banked
 34587  004AD2  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34588  004AD4  D02B               	goto	i2l14323
 34589  004AD6  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34590  004AD8  E103               	bnz	i2u1441_40
 34591  004ADA  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34592  004ADC  A0D8               	btfss	status,0,c
 34593  004ADE  D026               	goto	i2l14323
 34594  004AE0                     i2u1441_40:
 34595                           
 34596                           ; BSR set to: 1
 34597  004AE0  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 34598  004AE2  D005               	goto	i2u1442_40
 34599  004AE4  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 34600  004AE6  E122               	bnz	i2l14323
 34601  004AE8  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 34602  004AEA  B0D8               	btfsc	status,0,c
 34603  004AEC  D01F               	goto	i2l14323
 34604  004AEE                     i2u1442_40:
 34605                           
 34606                           ; BSR set to: 1
 34607                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 34608  004AEE  0100               	movlb	0	; () banked
 34609  004AF0  5183               	movf	_stateMotor& (0+255),w,b
 34610  004AF2  B4D8               	btfsc	status,2,c
 34611  004AF4  D03A               	goto	i2l14335
 34612                           
 34613                           ; BSR set to: 0
 34614  004AF6  0101               	movlb	1	; () banked
 34615  004AF8  0590               	decf	_StateTRIAC& (0+255),w,b
 34616  004AFA  A4D8               	btfss	status,2,c
 34617  004AFC  D036               	goto	i2l14335
 34618                           
 34619                           ; BSR set to: 1
 34620  004AFE  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34621  004B00  D005               	goto	i2u1445_40
 34622  004B02  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34623  004B04  E132               	bnz	i2l14335
 34624  004B06  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34625  004B08  B0D8               	btfsc	status,0,c
 34626  004B0A  D02F               	goto	i2l14335
 34627  004B0C                     i2u1445_40:
 34628                           
 34629                           ; BSR set to: 1
 34630  004B0C  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 34631  004B0E  A4D8               	btfss	status,2,c
 34632  004B10  D02C               	goto	i2l14335
 34633                           
 34634                           ; BSR set to: 1
 34635  004B12  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34636  004B14  D006               	goto	i2u1447_40
 34637  004B16  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34638  004B18  E128               	bnz	i2l14335
 34639  004B1A  0E0C               	movlw	12
 34640  004B1C  5DC2               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 34641  004B1E  B0D8               	btfsc	status,0,c
 34642  004B20  D024               	goto	i2l14335
 34643  004B22                     i2u1447_40:
 34644                           
 34645                           ; BSR set to: 1
 34646                           
 34647                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 34648  004B22  8E86               	bsf	134,7,c	;volatile
 34649                           
 34650                           ; BSR set to: 1
 34651                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 34652  004B24  0EEC               	movlw	236
 34653  004B26  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 34654  004B28  0E78               	movlw	120
 34655  004B2A  D01A               	goto	L118
 34656  004B2C                     i2l14323:
 34657                           
 34658                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 34659  004B2C  0100               	movlb	0	; () banked
 34660  004B2E  5183               	movf	_stateMotor& (0+255),w,b
 34661  004B30  B4D8               	btfsc	status,2,c
 34662  004B32  D01B               	goto	i2l14335
 34663                           
 34664                           ; BSR set to: 0
 34665  004B34  0101               	movlb	1	; () banked
 34666  004B36  518F               	movf	_difTime& (0+255),w,b
 34667  004B38  5D9F               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 34668  004B3A  B0D8               	btfsc	status,0,c
 34669  004B3C  D016               	goto	i2l14335
 34670                           
 34671                           ; BSR set to: 1
 34672  004B3E  0590               	decf	_StateTRIAC& (0+255),w,b
 34673  004B40  A4D8               	btfss	status,2,c
 34674  004B42  D013               	goto	i2l14335
 34675                           
 34676                           ; BSR set to: 1
 34677  004B44  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34678  004B46  D005               	goto	i2u1451_40
 34679  004B48  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34680  004B4A  E10F               	bnz	i2l14335
 34681  004B4C  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34682  004B4E  B0D8               	btfsc	status,0,c
 34683  004B50  D00C               	goto	i2l14335
 34684  004B52                     i2u1451_40:
 34685                           
 34686                           ; BSR set to: 1
 34687  004B52  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 34688  004B54  A4D8               	btfss	status,2,c
 34689  004B56  D009               	goto	i2l14335
 34690                           
 34691                           ; BSR set to: 1
 34692                           
 34693                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 34694  004B58  8E86               	bsf	134,7,c	;volatile
 34695                           
 34696                           ; BSR set to: 1
 34697                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 34698  004B5A  0EFF               	movlw	255
 34699  004B5C  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 34700  004B5E  0E38               	movlw	56
 34701  004B60                     L118:
 34702  004B60  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 34703                           
 34704                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 34705  004B62  0E01               	movlw	1
 34706  004B64  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34707                           
 34708                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 34709  004B66  0E00               	movlw	0
 34710  004B68  6F90               	movwf	_StateTRIAC& (0+255),b
 34711  004B6A                     i2l14335:
 34712                           
 34713                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 34714  004B6A  0E15               	movlw	21
 34715  004B6C  0101               	movlb	1	; () banked
 34716  004B6E  619F               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 34717  004B70  D002               	goto	i2u1454_40
 34718                           
 34719                           ; BSR set to: 1
 34720  004B72  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34721  004B74  D004               	goto	i2u1455_40
 34722  004B76                     i2u1454_40:
 34723                           
 34724                           ; BSR set to: 1
 34725  004B76  0100               	movlb	0	; () banked
 34726  004B78  5183               	movf	_stateMotor& (0+255),w,b
 34727  004B7A  A4D8               	btfss	status,2,c
 34728  004B7C  D004               	goto	i2l2217
 34729  004B7E                     i2u1455_40:
 34730                           
 34731                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 34732  004B7E  9E86               	bcf	134,7,c	;volatile
 34733                           
 34734                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 34735  004B80  0E00               	movlw	0
 34736  004B82  0101               	movlb	1	; () banked
 34737  004B84  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34738  004B86                     i2l2217:
 34739                           
 34740                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 34741  004B86  0100               	movlb	0	; () banked
 34742  004B88  5183               	movf	_stateMotor& (0+255),w,b
 34743  004B8A  B4D8               	btfsc	status,2,c
 34744  004B8C  D00C               	goto	i2l14347
 34745                           
 34746                           ; BSR set to: 0
 34747  004B8E  0101               	movlb	1	; () banked
 34748  004B90  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34749  004B92  D009               	goto	i2l14347
 34750  004B94  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34751  004B96  E103               	bnz	i2u1457_40
 34752  004B98  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34753  004B9A  A0D8               	btfss	status,0,c
 34754  004B9C  D004               	goto	i2l14347
 34755  004B9E                     i2u1457_40:
 34756                           
 34757                           ; BSR set to: 1
 34758                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 34759  004B9E  07A0               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 34760  004BA0  A0D8               	btfss	status,0,c
 34761  004BA2  07A1               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 34762                           
 34763                           ;outputs_MC50.c: 399:     }
 34764  004BA4  0012               	return	
 34765  004BA6                     i2l14347:
 34766  004BA6  0100               	movlb	0	; () banked
 34767  004BA8  5183               	movf	_stateMotor& (0+255),w,b
 34768  004BAA  A4D8               	btfss	status,2,c
 34769  004BAC  0012               	return	
 34770                           
 34771                           ; BSR set to: 0
 34772  004BAE  0101               	movlb	1	; () banked
 34773  004BB0  AFA1               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 34774  004BB2  0012               	return	
 34775                           
 34776                           ; BSR set to: 1
 34777                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 34778  004BB4  4BA0               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 34779  004BB6  2BA1               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 34780  004BB8  0012               	return		;funcret
 34781  004BBA                     __end_of_controlMotorForce:
 34782                           	callstack 0
 34783                           
 34784 ;; *************** function i2_VerifyElectricalBrake *****************
 34785 ;; Defined at:
 34786 ;;		line 658 in file "outputs_MC50.c"
 34787 ;; Parameters:    Size  Location     Type
 34788 ;;  actualState     1    wreg     enum E10381
 34789 ;; Auto vars:     Size  Location     Type
 34790 ;;  actualState     1    1[COMRAM] enum E10381
 34791 ;;  tempState       1    0[COMRAM] enum E10381
 34792 ;; Return value:  Size  Location     Type
 34793 ;;                  1    wreg      enum E10381
 34794 ;; Registers used:
 34795 ;;		wreg, status,2, status,0
 34796 ;; Tracked objects:
 34797 ;;		On entry : 3F/1
 34798 ;;		On exit  : 3E/0
 34799 ;;		Unchanged: 0/0
 34800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34805 ;;Total ram usage:        2 bytes
 34806 ;; Hardware stack levels used: 1
 34807 ;; This function calls:
 34808 ;;		Nothing
 34809 ;; This function is called by:
 34810 ;;		_controlMotorForce
 34811 ;; This function uses a non-reentrant model
 34812 ;;
 34813                           
 34814                           	psect	text194
 34815  007DC6                     __ptext194:
 34816                           	callstack 0
 34817  007DC6                     i2_VerifyElectricalBrake:
 34818                           	callstack 14
 34819                           
 34820                           ;incstack = 0
 34821                           ;i2VerifyElectricalBrake@actualState stored from wreg
 34822  007DC6  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 34823                           
 34824                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 34825  007DC8  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 34826                           
 34827                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 34828  007DCC  0100               	movlb	0	; () banked
 34829  007DCE  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34830  007DD0  A4D8               	btfss	status,2,c
 34831  007DD2  D02E               	goto	i2l2318
 34832                           
 34833                           ; BSR set to: 0
 34834  007DD4  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 34835  007DD6  A4D8               	btfss	status,2,c
 34836  007DD8  D02B               	goto	i2l2318
 34837                           
 34838                           ; BSR set to: 0
 34839  007DDA  0101               	movlb	1	; () banked
 34840  007DDC  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 34841  007DDE  D005               	goto	i2u1388_40
 34842  007DE0  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 34843  007DE2  E126               	bnz	i2l2318
 34844  007DE4  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 34845  007DE6  B0D8               	btfsc	status,0,c
 34846  007DE8  D023               	goto	i2l2318
 34847  007DEA                     i2u1388_40:
 34848                           
 34849                           ; BSR set to: 1
 34850                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 34851  007DEA  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 34852  007DEC  0100               	movlb	0	; () banked
 34853  007DEE  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 34854  007DF0  B4D8               	btfsc	status,2,c
 34855  007DF2  D00B               	goto	i2l13965
 34856                           
 34857                           ; BSR set to: 0
 34858  007DF4  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 34859  007DF6  A4D8               	btfss	status,2,c
 34860  007DF8  D008               	goto	i2l13965
 34861                           
 34862                           ; BSR set to: 0
 34863                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 34864  007DFA  0E01               	movlw	1
 34865  007DFC  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 34866                           
 34867                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 34868  007DFE  0E00               	movlw	0
 34869  007E00  0101               	movlb	1	; () banked
 34870  007E02  6FC3               	movwf	(_ts_system+41)& (0+255),b	;volatile
 34871  007E04  0E16               	movlw	22
 34872  007E06  6FC2               	movwf	(_ts_system+40)& (0+255),b	;volatile
 34873                           
 34874                           ;outputs_MC50.c: 670:         }
 34875  007E08  D018               	goto	i2l2323
 34876  007E0A                     i2l13965:
 34877                           
 34878                           ; BSR set to: 0
 34879  007E0A  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 34880  007E0C  A4D8               	btfss	status,2,c
 34881  007E0E  D00B               	goto	i2l13971
 34882                           
 34883                           ; BSR set to: 0
 34884  007E10  0101               	movlb	1	; () banked
 34885  007E12  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34886  007E14  D008               	goto	i2l13971
 34887  007E16  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34888  007E18  E103               	bnz	i2u1392_40
 34889  007E1A  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34890  007E1C  A0D8               	btfss	status,0,c
 34891  007E1E  D003               	goto	i2l13971
 34892  007E20                     i2u1392_40:
 34893                           
 34894                           ; BSR set to: 1
 34895                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 34896  007E20  0E01               	movlw	1
 34897  007E22  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 34898                           
 34899                           ;outputs_MC50.c: 686:         }
 34900  007E24  D00A               	goto	i2l2323
 34901  007E26                     i2l13971:
 34902                           
 34903                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 34904  007E26  0E00               	movlw	0
 34905  007E28  0100               	movlb	0	; () banked
 34906  007E2A  6F78               	movwf	_brakeElectric_st& (0+255),b
 34907                           
 34908                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 34909  007E2C  0E00               	movlw	0
 34910  007E2E  D004               	goto	L119
 34911  007E30                     i2l2318:
 34912                           
 34913                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 34914  007E30  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 34915                           
 34916                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 34917  007E34  0E00               	movlw	0
 34918  007E36  0100               	movlb	0	; () banked
 34919  007E38                     L119:
 34920  007E38  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 34921  007E3A                     i2l2323:
 34922                           
 34923                           ;outputs_MC50.c: 700:     return tempState;
 34924  007E3A  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 34925  007E3C  0012               	return		;funcret
 34926  007E3E                     __end_ofi2_VerifyElectricalBrake:
 34927                           	callstack 0
 34928                           
 34929 ;; *************** function i2_GetMotorPower *****************
 34930 ;; Defined at:
 34931 ;;		line 405 in file "outputs_MC50.c"
 34932 ;; Parameters:    Size  Location     Type
 34933 ;;		None
 34934 ;; Auto vars:     Size  Location     Type
 34935 ;;  defineatraso    1    3[COMRAM] unsigned char 
 34936 ;; Return value:  Size  Location     Type
 34937 ;;                  1    wreg      unsigned char 
 34938 ;; Registers used:
 34939 ;;		wreg, status,2, status,0, prodl, prodh
 34940 ;; Tracked objects:
 34941 ;;		On entry : 3F/E
 34942 ;;		On exit  : 3F/1
 34943 ;;		Unchanged: 0/0
 34944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34947 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34948 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34949 ;;Total ram usage:        4 bytes
 34950 ;; Hardware stack levels used: 1
 34951 ;; This function calls:
 34952 ;;		Nothing
 34953 ;; This function is called by:
 34954 ;;		_controlMotorForce
 34955 ;; This function uses a non-reentrant model
 34956 ;;
 34957                           
 34958                           	psect	text195
 34959  0070A2                     __ptext195:
 34960                           	callstack 0
 34961  0070A2                     i2_GetMotorPower:
 34962                           	callstack 14
 34963                           
 34964                           ; BSR set to: 14
 34965                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 34966                           
 34967                           ;incstack = 0
 34968  0070A2  0101               	movlb	1	; () banked
 34969  0070A4  057B               	decf	_powerControl_st& (0+255),w,b
 34970  0070A6  A4D8               	btfss	status,2,c
 34971  0070A8  D006               	goto	i2l13915
 34972                           
 34973                           ; BSR set to: 1
 34974                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 34975  0070AA  0100               	movlb	0	; () banked
 34976  0070AC  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 34977  0070AE  0D06               	mullw	6
 34978  0070B0  CFF3 F18E          	movff	prodl,_temppower
 34979                           
 34980                           ;outputs_MC50.c: 416:     }
 34981  0070B4  D043               	goto	i2l2235
 34982  0070B6                     i2l13915:
 34983                           
 34984                           ; BSR set to: 1
 34985                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 34986  0070B6  0100               	movlb	0	; () banked
 34987  0070B8  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 34988  0070BA  0D06               	mullw	6
 34989  0070BC  CFF3 F082          	movff	prodl,_fullmotorPower
 34990                           
 34991                           ; BSR set to: 0
 34992                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 34993  0070C0  0101               	movlb	1	; () banked
 34994  0070C2  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 34995  0070C4  D01C               	goto	i2l13925
 34996  0070C6  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34997  0070C8  E103               	bnz	i2u1378_40
 34998  0070CA  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 34999  0070CC  A0D8               	btfss	status,0,c
 35000  0070CE  D017               	goto	i2l13925
 35001  0070D0                     i2u1378_40:
 35002                           
 35003                           ; BSR set to: 1
 35004                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 35005  0070D0  0100               	movlb	0	; () banked
 35006  0070D2  5182               	movf	_fullmotorPower& (0+255),w,b
 35007  0070D4  6E01               	movwf	??i2_GetMotorPower^0,c
 35008  0070D6  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 35009  0070D8  0101               	movlb	1	; () banked
 35010  0070DA  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 35011  0070DC  5C01               	subwf	??i2_GetMotorPower^0,w,c
 35012  0070DE  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 35013  0070E0  0A80               	xorlw	128
 35014  0070E2  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 35015  0070E4  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35016  0070E6  0A80               	xorlw	128
 35017  0070E8  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 35018  0070EA  B0D8               	btfsc	status,0,c
 35019  0070EC  D002               	goto	i2l13923
 35020                           
 35021                           ; BSR set to: 1
 35022                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 35023  0070EE  0E01               	movlw	1
 35024  0070F0  D004               	goto	L121
 35025  0070F2                     i2l13923:
 35026                           
 35027                           ; BSR set to: 1
 35028                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 35029  0070F2  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 35030  0070F4  0100               	movlb	0	; () banked
 35031  0070F6  5D82               	subwf	_fullmotorPower& (0+255),w,b
 35032  0070F8  D017               	goto	L122
 35033  0070FA                     L121:
 35034  0070FA  6F8E               	movwf	_temppower& (0+255),b
 35035  0070FC  D01F               	goto	i2l2235
 35036  0070FE                     i2l13925:
 35037                           
 35038                           ; BSR set to: 1
 35039  0070FE  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 35040  007100  D005               	goto	i2u1380_40
 35041  007102  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35042  007104  E113               	bnz	i2l13935
 35043  007106  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 35044  007108  B0D8               	btfsc	status,0,c
 35045  00710A  D010               	goto	i2l13935
 35046  00710C                     i2u1380_40:
 35047                           
 35048                           ; BSR set to: 1
 35049  00710C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 35050  00710E  D005               	goto	i2u1381_40
 35051  007110  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 35052  007112  E10C               	bnz	i2l13935
 35053  007114  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 35054  007116  B0D8               	btfsc	status,0,c
 35055  007118  D009               	goto	i2l13935
 35056  00711A                     i2u1381_40:
 35057                           
 35058                           ; BSR set to: 1
 35059                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 35060  00711A  C082  F18E         	movff	_fullmotorPower,_temppower
 35061                           
 35062                           ; BSR set to: 1
 35063                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 35064  00711E  0E08               	movlw	8
 35065  007120  0100               	movlb	0	; () banked
 35066  007122  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 35067  007124  D00B               	goto	i2l2235
 35068                           
 35069                           ; BSR set to: 0
 35070                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 35071  007126  0E3A               	movlw	58
 35072  007128                     L122:
 35073  007128  0101               	movlb	1	; () banked
 35074  00712A  D7E7               	goto	L121
 35075  00712C                     i2l13935:
 35076                           
 35077                           ; BSR set to: 1
 35078  00712C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 35079  00712E  D006               	goto	i2l2235
 35080  007130  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 35081  007132  E102               	bnz	i2u1383_40
 35082  007134  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 35083  007136  B0D8               	btfsc	status,0,c
 35084  007138                     i2u1383_40:
 35085                           
 35086                           ; BSR set to: 1
 35087                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 35088  007138  C110  F18E         	movff	_var_sys+16,_temppower	;volatile
 35089  00713C                     i2l2235:
 35090                           
 35091                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 35092  00713C  0101               	movlb	1	; () banked
 35093  00713E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 35094  007140  D00E               	goto	i2l13945
 35095  007142  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 35096  007144  E103               	bnz	i2u1384_40
 35097  007146  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 35098  007148  A0D8               	btfss	status,0,c
 35099  00714A  D009               	goto	i2l13945
 35100  00714C                     i2u1384_40:
 35101                           
 35102                           ; BSR set to: 1
 35103  00714C  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 35104  00714E  D005               	goto	i2u1385_40
 35105  007150  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35106  007152  E105               	bnz	i2l13945
 35107  007154  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 35108  007156  B0D8               	btfsc	status,0,c
 35109  007158  D002               	goto	i2l13945
 35110  00715A                     i2u1385_40:
 35111                           
 35112                           ; BSR set to: 1
 35113                           ;outputs_MC50.c: 452:     defineatraso = 5;
 35114  00715A  0E05               	movlw	5
 35115  00715C  D001               	goto	L120
 35116  00715E                     i2l13945:
 35117                           
 35118                           ; BSR set to: 1
 35119                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 35120  00715E  0E17               	movlw	23
 35121  007160                     L120:
 35122  007160  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 35123                           
 35124                           ; BSR set to: 1
 35125                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 35126  007162  518E               	movf	_temppower& (0+255),w,b
 35127  007164  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 35128                           
 35129                           ; BSR set to: 1
 35130  007166  0012               	return		;funcret
 35131  007168                     __end_ofi2_GetMotorPower:
 35132                           	callstack 0
 35133                           
 35134 ;; *************** function _TMR1_WriteTimer *****************
 35135 ;; Defined at:
 35136 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 35137 ;; Parameters:    Size  Location     Type
 35138 ;;  timerVal        2    0[COMRAM] unsigned short 
 35139 ;; Auto vars:     Size  Location     Type
 35140 ;;		None
 35141 ;; Return value:  Size  Location     Type
 35142 ;;                  1    wreg      void 
 35143 ;; Registers used:
 35144 ;;		None
 35145 ;; Tracked objects:
 35146 ;;		On entry : 3F/1
 35147 ;;		On exit  : 3F/1
 35148 ;;		Unchanged: 3F/0
 35149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35153 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35154 ;;Total ram usage:        2 bytes
 35155 ;; Hardware stack levels used: 1
 35156 ;; This function calls:
 35157 ;;		Nothing
 35158 ;; This function is called by:
 35159 ;;		_TMR1_ISR
 35160 ;; This function uses a non-reentrant model
 35161 ;;
 35162                           
 35163                           	psect	text196
 35164  009018                     __ptext196:
 35165                           	callstack 0
 35166  009018                     _TMR1_WriteTimer:
 35167                           	callstack 15
 35168                           
 35169                           ; BSR set to: 1
 35170                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 35171                           
 35172                           ; BSR set to: 1
 35173                           ;incstack = 0
 35174  009018  A4CF               	btfss	207,2,c	;volatile
 35175  00901A  D007               	goto	i2l1147
 35176                           
 35177                           ; BSR set to: 1
 35178                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 35179  00901C  90CF               	bcf	207,0,c	;volatile
 35180                           
 35181                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 35182  00901E  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35183                           
 35184                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 35185  009022  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35186                           
 35187                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 35188  009026  80CF               	bsf	207,0,c	;volatile
 35189                           
 35190                           ;mcc_generated_files/tmr1.c: 142:     }
 35191  009028  0012               	return	
 35192  00902A                     i2l1147:
 35193                           
 35194                           ; BSR set to: 1
 35195                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 35196  00902A  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35197                           
 35198                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 35199  00902E  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35200                           
 35201                           ; BSR set to: 1
 35202  009032  0012               	return		;funcret
 35203  009034                     __end_of_TMR1_WriteTimer:
 35204                           	callstack 0
 35205                           
 35206 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 35207 ;; Defined at:
 35208 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 35209 ;; Parameters:    Size  Location     Type
 35210 ;;		None
 35211 ;; Auto vars:     Size  Location     Type
 35212 ;;		None
 35213 ;; Return value:  Size  Location     Type
 35214 ;;                  1    wreg      void 
 35215 ;; Registers used:
 35216 ;;		None
 35217 ;; Tracked objects:
 35218 ;;		On entry : 3F/2
 35219 ;;		On exit  : 3F/2
 35220 ;;		Unchanged: 3F/0
 35221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35226 ;;Total ram usage:        0 bytes
 35227 ;; Hardware stack levels used: 1
 35228 ;; This function calls:
 35229 ;;		Nothing
 35230 ;; This function is called by:
 35231 ;;		_TMR1_Initialize
 35232 ;;		_TMR1_ISR
 35233 ;; This function uses a non-reentrant model
 35234 ;;
 35235                           
 35236                           	psect	text197
 35237  009352                     __ptext197:
 35238                           	callstack 0
 35239  009352                     _TMR1_DefaultInterruptHandler:
 35240                           	callstack 15
 35241                           
 35242                           ; BSR set to: 2
 35243                           
 35244                           ; BSR set to: 1
 35245                           ;incstack = 0
 35246  009352  0012               	return		;funcret
 35247  009354                     __end_of_TMR1_DefaultInterruptHandler:
 35248                           	callstack 0
 35249                           
 35250 ;; *************** function _TMR0_ISR *****************
 35251 ;; Defined at:
 35252 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 35253 ;; Parameters:    Size  Location     Type
 35254 ;;		None
 35255 ;; Auto vars:     Size  Location     Type
 35256 ;;		None
 35257 ;; Return value:  Size  Location     Type
 35258 ;;                  1    wreg      void 
 35259 ;; Registers used:
 35260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 35261 ;; Tracked objects:
 35262 ;;		On entry : 3F/E
 35263 ;;		On exit  : 0/0
 35264 ;;		Unchanged: 0/0
 35265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35270 ;;Total ram usage:        0 bytes
 35271 ;; Hardware stack levels used: 1
 35272 ;; Hardware stack levels required when called: 1
 35273 ;; This function calls:
 35274 ;;		Absolute function
 35275 ;;		_TMR0_DefaultInterruptHandler
 35276 ;;		_rxi
 35277 ;; This function is called by:
 35278 ;;		_INTERRUPT_InterruptManager
 35279 ;; This function uses a non-reentrant model
 35280 ;;
 35281                           
 35282                           	psect	text198
 35283  008ECC                     __ptext198:
 35284                           	callstack 0
 35285  008ECC                     _TMR0_ISR:
 35286                           	callstack 15
 35287                           
 35288                           ; BSR set to: 14
 35289                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 35290                           
 35291                           ; BSR set to: 2
 35292                           ;incstack = 0
 35293  008ECC  9BCA               	bcf	202,5,b	;volatile
 35294                           
 35295                           ; BSR set to: 14
 35296                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 35297  008ECE  EC42  F021         	call	_rxi	;wreg free
 35298                           
 35299                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 35300  008ED2  0102               	movlb	2	; () banked
 35301  008ED4  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 35302  008ED6  11E4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 35303  008ED8  B4D8               	btfsc	status,2,c
 35304  008EDA  0012               	return	
 35305                           
 35306                           ; BSR set to: 2
 35307                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 35308  008EDC  D801               	call	i2u1834_48
 35309  008EDE  0012               	return	
 35310  008EE0                     i2u1834_48:
 35311  008EE0  0005               	push	
 35312  008EE2  6EFA               	movwf	pclath,c
 35313  008EE4  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 35314  008EE6  6EFD               	movwf	tosl,c
 35315  008EE8  51E4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 35316  008EEA  6EFE               	movwf	tosh,c
 35317  008EEC  6AFF               	clrf	tosu,c
 35318  008EEE  50FA               	movf	pclath,w,c
 35319  008EF0  0012               	return		;indir
 35320  008EF2                     __end_of_TMR0_ISR:
 35321                           	callstack 0
 35322                           
 35323 ;; *************** function _rxi *****************
 35324 ;; Defined at:
 35325 ;;		line 41 in file "inputs_MC50.c"
 35326 ;; Parameters:    Size  Location     Type
 35327 ;;		None
 35328 ;; Auto vars:     Size  Location     Type
 35329 ;;		None
 35330 ;; Return value:  Size  Location     Type
 35331 ;;                  1    wreg      void 
 35332 ;; Registers used:
 35333 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35334 ;; Tracked objects:
 35335 ;;		On entry : 3F/E
 35336 ;;		On exit  : 3C/0
 35337 ;;		Unchanged: 0/0
 35338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35341 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35342 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35343 ;;Total ram usage:        2 bytes
 35344 ;; Hardware stack levels used: 1
 35345 ;; This function calls:
 35346 ;;		Nothing
 35347 ;; This function is called by:
 35348 ;;		_TMR0_ISR
 35349 ;; This function uses a non-reentrant model
 35350 ;;
 35351                           
 35352                           	psect	text199
 35353  004284                     __ptext199:
 35354                           	callstack 0
 35355  004284                     _rxi:
 35356                           	callstack 15
 35357                           
 35358                           ; BSR set to: 14
 35359                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 35360                           
 35361                           ;incstack = 0
 35362  004284  0E00               	movlw	0
 35363  004286  B68E               	btfsc	142,3,c	;volatile
 35364  004288  0E01               	movlw	1
 35365  00428A  0100               	movlb	0	; () banked
 35366  00428C  6F89               	movwf	_RFBit& (0+255),b	;volatile
 35367                           
 35368                           ; BSR set to: 0
 35369                           ;inputs_MC50.c: 47:     if (RFFull)
 35370  00428E  518B               	movf	_RFFull& (0+255),w,b	;volatile
 35371  004290  A4D8               	btfss	status,2,c
 35372  004292  0012               	return	
 35373  004294  D116               	goto	i2l14229
 35374  004296                     i2l14119:
 35375                           
 35376                           ; BSR set to: 1
 35377                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 35378  004296  0100               	movlb	0	; () banked
 35379  004298  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35380  00429A  A4D8               	btfss	status,2,c
 35381  00429C  D004               	goto	i2l14123
 35382                           
 35383                           ; BSR set to: 0
 35384                           ;inputs_MC50.c: 56:                 RFstate = 3;
 35385  00429E  0E03               	movlw	3
 35386  0042A0  0101               	movlb	1	; () banked
 35387  0042A2  6F98               	movwf	_RFstate& (0+255),b
 35388                           
 35389                           ;inputs_MC50.c: 57:             } else {
 35390  0042A4  0012               	return	
 35391  0042A6                     i2l14123:
 35392                           
 35393                           ; BSR set to: 0
 35394                           ;inputs_MC50.c: 58:                 RFcount--;
 35395  0042A6  077E               	decf	_RFcount& (0+255),f,b
 35396  0042A8  A0D8               	btfss	status,0,c
 35397  0042AA  077F               	decf	(_RFcount+1)& (0+255),f,b
 35398                           
 35399                           ; BSR set to: 0
 35400                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 35401  0042AC  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 35402  0042AE  0012               	return	
 35403  0042B0  0EF6               	movlw	246
 35404  0042B2  5D7E               	subwf	_RFcount& (0+255),w,b
 35405  0042B4  0EFF               	movlw	255
 35406  0042B6  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 35407  0042B8  B0D8               	btfsc	status,0,c
 35408  0042BA  0012               	return	
 35409  0042BC                     i2u1399_40:
 35410  0042BC                     i2l14127:
 35411                           
 35412                           ; BSR set to: 0
 35413                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 35414  0042BC  0E00               	movlw	0
 35415  0042BE  0101               	movlb	1	; () banked
 35416  0042C0  6F98               	movwf	_RFstate& (0+255),b
 35417  0042C2  0012               	return	
 35418  0042C4                     i2l14129:
 35419                           
 35420                           ; BSR set to: 1
 35421                           ;inputs_MC50.c: 67:             if (RFBit) {
 35422  0042C4  0100               	movlb	0	; () banked
 35423  0042C6  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35424  0042C8  B4D8               	btfsc	status,2,c
 35425  0042CA  D02C               	goto	i2l14149
 35426                           
 35427                           ; BSR set to: 0
 35428                           ;inputs_MC50.c: 71:                 RFstate = 2;
 35429  0042CC  0E02               	movlw	2
 35430  0042CE  0101               	movlb	1	; () banked
 35431  0042D0  6F98               	movwf	_RFstate& (0+255),b
 35432                           
 35433                           ; BSR set to: 1
 35434                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 35435  0042D2  0EC8               	movlw	low _BufferRF
 35436  0042D4  0100               	movlb	0	; () banked
 35437  0042D6  258D               	addwf	_Bptr& (0+255),w,b
 35438  0042D8  6ED9               	movwf	fsr2l,c
 35439  0042DA  6ADA               	clrf	fsr2h,c
 35440  0042DC  0E02               	movlw	high _BufferRF
 35441  0042DE  22DA               	addwfc	fsr2h,f,c
 35442  0042E0  90D8               	bcf	status,0,c
 35443  0042E2  32DF               	rrcf	indf2,f,c
 35444                           
 35445                           ; BSR set to: 0
 35446                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 35447  0042E4  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35448  0042E6  D008               	goto	i2l14139
 35449                           
 35450                           ; BSR set to: 0
 35451                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 35452  0042E8  0EC8               	movlw	low _BufferRF
 35453  0042EA  258D               	addwf	_Bptr& (0+255),w,b
 35454  0042EC  6ED9               	movwf	fsr2l,c
 35455  0042EE  6ADA               	clrf	fsr2h,c
 35456  0042F0  0E02               	movlw	high _BufferRF
 35457  0042F2  22DA               	addwfc	fsr2h,f,c
 35458  0042F4  0E80               	movlw	128
 35459  0042F6  26DF               	addwf	indf2,f,c
 35460  0042F8                     i2l14139:
 35461                           
 35462                           ; BSR set to: 0
 35463                           ;inputs_MC50.c: 81:                 RFcount = 0;
 35464  0042F8  0E00               	movlw	0
 35465  0042FA  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35466  0042FC  0E00               	movlw	0
 35467  0042FE  6F7E               	movwf	_RFcount& (0+255),b
 35468                           
 35469                           ; BSR set to: 0
 35470                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 35471  004300  2B8C               	incf	_BitCount& (0+255),f,b
 35472  004302  C08C  F001         	movff	_BitCount,??_rxi
 35473  004306  0E07               	movlw	7
 35474  004308  1601               	andwf	??_rxi^0,f,c
 35475  00430A  B4D8               	btfsc	status,2,c
 35476                           
 35477                           ; BSR set to: 0
 35478                           ;inputs_MC50.c: 84:                     Bptr++;
 35479  00430C  2B8D               	incf	_Bptr& (0+255),f,b
 35480                           
 35481                           ; BSR set to: 0
 35482                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 35483  00430E  0E41               	movlw	65
 35484  004310  198C               	xorwf	_BitCount& (0+255),w,b
 35485  004312  A4D8               	btfss	status,2,c
 35486  004314  0012               	return	
 35487                           
 35488                           ; BSR set to: 0
 35489                           ;inputs_MC50.c: 86:                     RFstate = 0;
 35490  004316  0E00               	movlw	0
 35491  004318  0101               	movlb	1	; () banked
 35492  00431A  6F98               	movwf	_RFstate& (0+255),b
 35493                           
 35494                           ;inputs_MC50.c: 87:                     RFFull = 1;
 35495  00431C  0E01               	movlw	1
 35496  00431E  0100               	movlb	0	; () banked
 35497  004320  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 35498  004322  0012               	return	
 35499  004324                     i2l14149:
 35500                           
 35501                           ; BSR set to: 0
 35502                           ;inputs_MC50.c: 92:                 RFcount++;
 35503  004324  4B7E               	infsnz	_RFcount& (0+255),f,b
 35504  004326  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35505                           
 35506                           ; BSR set to: 0
 35507                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 35508  004328  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35509  00432A  0012               	return	
 35510  00432C  517F               	movf	(_RFcount+1)& (0+255),w,b
 35511  00432E  E104               	bnz	i2u1404_40
 35512  004330  0E0A               	movlw	10
 35513  004332  5D7E               	subwf	_RFcount& (0+255),w,b
 35514  004334  A0D8               	btfss	status,0,c
 35515  004336  0012               	return	
 35516  004338                     i2u1404_40:
 35517                           
 35518                           ; BSR set to: 0
 35519                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 35520  004338  0E01               	movlw	1
 35521  00433A  0101               	movlb	1	; () banked
 35522  00433C  6F98               	movwf	_RFstate& (0+255),b
 35523                           
 35524                           ;inputs_MC50.c: 97:                     Bptr = 0;
 35525  00433E  0E00               	movlw	0
 35526  004340  0100               	movlb	0	; () banked
 35527  004342  6F8D               	movwf	_Bptr& (0+255),b
 35528                           
 35529                           ;inputs_MC50.c: 98:                     BitCount = 0;
 35530  004344  0E00               	movlw	0
 35531  004346  6F8C               	movwf	_BitCount& (0+255),b
 35532  004348  0012               	return	
 35533  00434A                     i2l14155:
 35534                           
 35535                           ; BSR set to: 1
 35536                           ;inputs_MC50.c: 103:             if (RFBit) {
 35537  00434A  0100               	movlb	0	; () banked
 35538  00434C  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35539  00434E  B4D8               	btfsc	status,2,c
 35540  004350  D030               	goto	i2l14171
 35541                           
 35542                           ; BSR set to: 0
 35543                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 35544  004352  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35545  004354  D00E               	goto	i2u1407_40
 35546  004356  517F               	movf	(_RFcount+1)& (0+255),w,b
 35547  004358  E104               	bnz	i2u1406_40
 35548  00435A  0E14               	movlw	20
 35549  00435C  5D7E               	subwf	_RFcount& (0+255),w,b
 35550  00435E  A0D8               	btfss	status,0,c
 35551  004360  D008               	goto	i2u1407_40
 35552  004362                     i2u1406_40:
 35553                           
 35554                           ; BSR set to: 0
 35555  004362  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35556  004364  D01E               	goto	i2l14169
 35557  004366  517F               	movf	(_RFcount+1)& (0+255),w,b
 35558  004368  E104               	bnz	i2u1407_40
 35559  00436A  0E2D               	movlw	45
 35560  00436C  5D7E               	subwf	_RFcount& (0+255),w,b
 35561  00436E  A0D8               	btfss	status,0,c
 35562  004370  D018               	goto	i2l14169
 35563  004372                     i2u1407_40:
 35564                           
 35565                           ; BSR set to: 0
 35566                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 35567  004372  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35568  004374  D7A3               	goto	i2u1399_40
 35569  004376  517F               	movf	(_RFcount+1)& (0+255),w,b
 35570  004378  E104               	bnz	i2u1408_40
 35571  00437A  0E50               	movlw	80
 35572  00437C  5D7E               	subwf	_RFcount& (0+255),w,b
 35573  00437E  A0D8               	btfss	status,0,c
 35574  004380  D79D               	goto	i2u1399_40
 35575  004382                     i2u1408_40:
 35576                           
 35577                           ; BSR set to: 0
 35578  004382  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35579  004384  D006               	goto	i2l14167
 35580  004386  517F               	movf	(_RFcount+1)& (0+255),w,b
 35581  004388  E199               	bnz	i2l14127
 35582  00438A  0E64               	movlw	100
 35583  00438C  5D7E               	subwf	_RFcount& (0+255),w,b
 35584  00438E  B0D8               	btfsc	status,0,c
 35585  004390  D795               	goto	i2u1399_40
 35586  004392                     i2l14167:
 35587                           
 35588                           ; BSR set to: 0
 35589                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 35590  004392  0EFF               	movlw	255
 35591  004394  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35592  004396  0EF6               	movlw	246
 35593  004398  6F7E               	movwf	_RFcount& (0+255),b
 35594                           
 35595                           ;inputs_MC50.c: 114:                         RFstate = 4;
 35596  00439A  0E04               	movlw	4
 35597  00439C  0101               	movlb	1	; () banked
 35598  00439E  6F98               	movwf	_RFstate& (0+255),b
 35599  0043A0  0012               	return	
 35600  0043A2                     i2l14169:
 35601                           
 35602                           ; BSR set to: 0
 35603                           ;inputs_MC50.c: 118:                     RFcount = 0;
 35604  0043A2  0E00               	movlw	0
 35605  0043A4  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35606  0043A6  0E00               	movlw	0
 35607  0043A8  6F7E               	movwf	_RFcount& (0+255),b
 35608                           
 35609                           ;inputs_MC50.c: 119:                     RFstate = 2;
 35610  0043AA  0E02               	movlw	2
 35611  0043AC  0101               	movlb	1	; () banked
 35612  0043AE  6F98               	movwf	_RFstate& (0+255),b
 35613  0043B0  0012               	return	
 35614  0043B2                     i2l14171:
 35615                           
 35616                           ; BSR set to: 0
 35617                           ;inputs_MC50.c: 122:                 RFcount++;
 35618  0043B2  4B7E               	infsnz	_RFcount& (0+255),f,b
 35619  0043B4  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35620  0043B6  0012               	return	
 35621  0043B8                     i2l14173:
 35622                           
 35623                           ; BSR set to: 1
 35624                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 35625  0043B8  0100               	movlb	0	; () banked
 35626  0043BA  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35627  0043BC  A4D8               	btfss	status,2,c
 35628  0043BE  D056               	goto	i2l14209
 35629                           
 35630                           ; BSR set to: 0
 35631                           ;inputs_MC50.c: 130:                 RFstate = 5;
 35632  0043C0  0E05               	movlw	5
 35633  0043C2  0101               	movlb	1	; () banked
 35634  0043C4  6F98               	movwf	_RFstate& (0+255),b
 35635                           
 35636                           ; BSR set to: 1
 35637                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 35638  0043C6  0EC8               	movlw	low _BufferRF
 35639  0043C8  0100               	movlb	0	; () banked
 35640  0043CA  258D               	addwf	_Bptr& (0+255),w,b
 35641  0043CC  6ED9               	movwf	fsr2l,c
 35642  0043CE  6ADA               	clrf	fsr2h,c
 35643  0043D0  0E02               	movlw	high _BufferRF
 35644  0043D2  22DA               	addwfc	fsr2h,f,c
 35645  0043D4  90D8               	bcf	status,0,c
 35646  0043D6  32DF               	rrcf	indf2,f,c
 35647                           
 35648                           ; BSR set to: 0
 35649                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 35650  0043D8  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35651  0043DA  D008               	goto	i2l14183
 35652                           
 35653                           ; BSR set to: 0
 35654                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 35655  0043DC  0EC8               	movlw	low _BufferRF
 35656  0043DE  258D               	addwf	_Bptr& (0+255),w,b
 35657  0043E0  6ED9               	movwf	fsr2l,c
 35658  0043E2  6ADA               	clrf	fsr2h,c
 35659  0043E4  0E02               	movlw	high _BufferRF
 35660  0043E6  22DA               	addwfc	fsr2h,f,c
 35661  0043E8  0E80               	movlw	128
 35662  0043EA  26DF               	addwf	indf2,f,c
 35663  0043EC                     i2l14183:
 35664                           
 35665                           ; BSR set to: 0
 35666                           ;inputs_MC50.c: 136:                 RFcount = 0;
 35667  0043EC  0E00               	movlw	0
 35668  0043EE  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35669  0043F0  0E00               	movlw	0
 35670  0043F2  6F7E               	movwf	_RFcount& (0+255),b
 35671                           
 35672                           ; BSR set to: 0
 35673                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 35674  0043F4  2B8C               	incf	_BitCount& (0+255),f,b
 35675  0043F6  C08C  F001         	movff	_BitCount,??_rxi
 35676  0043FA  0E07               	movlw	7
 35677  0043FC  1601               	andwf	??_rxi^0,f,c
 35678  0043FE  A4D8               	btfss	status,2,c
 35679  004400  D009               	goto	i2l14191
 35680                           
 35681                           ; BSR set to: 0
 35682                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 35683  004402  2B8D               	incf	_Bptr& (0+255),f,b
 35684                           
 35685                           ; BSR set to: 0
 35686                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 35687  004404  0EC8               	movlw	low _BufferRF
 35688  004406  258D               	addwf	_Bptr& (0+255),w,b
 35689  004408  6ED9               	movwf	fsr2l,c
 35690  00440A  6ADA               	clrf	fsr2h,c
 35691  00440C  0E02               	movlw	high _BufferRF
 35692  00440E  22DA               	addwfc	fsr2h,f,c
 35693  004410  0E00               	movlw	0
 35694  004412  6EDF               	movwf	indf2,c
 35695  004414                     i2l14191:
 35696                           
 35697                           ; BSR set to: 0
 35698                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 35699  004414  0E0D               	movlw	13
 35700  004416  198C               	xorwf	_BitCount& (0+255),w,b
 35701  004418  A4D8               	btfss	status,2,c
 35702  00441A  0012               	return	
 35703                           
 35704                           ; BSR set to: 0
 35705                           ;inputs_MC50.c: 144:                     RFstate = 0;
 35706  00441C  0E00               	movlw	0
 35707  00441E  0101               	movlb	1	; () banked
 35708  004420  6F98               	movwf	_RFstate& (0+255),b
 35709                           
 35710                           ; BSR set to: 1
 35711                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 35712  004422  0100               	movlb	0	; () banked
 35713  004424  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 35714  004426  A4D8               	btfss	status,2,c
 35715  004428  D01A               	goto	i2l14203
 35716                           
 35717                           ; BSR set to: 0
 35718                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 35719  00442A  0102               	movlb	2	; () banked
 35720  00442C  51C8               	movf	_BufferRF& (0+255),w,b
 35721  00442E  0101               	movlb	1	; () banked
 35722  004430  1987               	xorwf	_BufferRF_12BIT& (0+255),w,b
 35723  004432  A4D8               	btfss	status,2,c
 35724  004434  D00F               	goto	i2l1615
 35725                           
 35726                           ; BSR set to: 1
 35727  004436  0102               	movlb	2	; () banked
 35728  004438  51C9               	movf	(_BufferRF+1)& (0+255),w,b
 35729  00443A  0101               	movlb	1	; () banked
 35730  00443C  1988               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 35731  00443E  A4D8               	btfss	status,2,c
 35732  004440  D009               	goto	i2l1615
 35733                           
 35734                           ; BSR set to: 1
 35735                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 35736  004442  0E01               	movlw	1
 35737  004444  0100               	movlb	0	; () banked
 35738  004446  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 35739                           
 35740                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 35741  004448  0E00               	movlw	0
 35742  00444A  0102               	movlb	2	; () banked
 35743  00444C  6FCA               	movwf	(_BufferRF+2)& (0+255),b
 35744                           
 35745                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 35746  00444E  0E00               	movlw	0
 35747  004450  6FCB               	movwf	(_BufferRF+3)& (0+255),b
 35748                           
 35749                           ;inputs_MC50.c: 152:                         }
 35750  004452  0012               	return	
 35751  004454                     i2l1615:
 35752                           
 35753                           ; BSR set to: 1
 35754                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 35755  004454  C2C8  F187         	movff	_BufferRF,_BufferRF_12BIT
 35756                           
 35757                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 35758  004458  C2C9  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 35759  00445C  0012               	return	
 35760  00445E                     i2l14203:
 35761                           
 35762                           ; BSR set to: 0
 35763                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 35764  00445E  0E01               	movlw	1
 35765  004460  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 35766                           
 35767                           ; BSR set to: 0
 35768                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 35769  004462  C2C8  F187         	movff	_BufferRF,_BufferRF_12BIT
 35770                           
 35771                           ; BSR set to: 0
 35772                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 35773  004466  C2C9  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 35774  00446A  0012               	return	
 35775  00446C                     i2l14209:
 35776                           
 35777                           ; BSR set to: 0
 35778                           ;inputs_MC50.c: 168:                 RFcount++;
 35779  00446C  4B7E               	infsnz	_RFcount& (0+255),f,b
 35780  00446E  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35781                           
 35782                           ; BSR set to: 0
 35783                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 35784  004470  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35785  004472  0012               	return	
 35786  004474  517F               	movf	(_RFcount+1)& (0+255),w,b
 35787  004476  E104               	bnz	i2u1417_40
 35788  004478  0E0A               	movlw	10
 35789  00447A  5D7E               	subwf	_RFcount& (0+255),w,b
 35790  00447C  A0D8               	btfss	status,0,c
 35791  00447E  0012               	return	
 35792  004480                     i2u1417_40:
 35793  004480  D71D               	goto	i2u1399_40
 35794  004482                     i2l14215:
 35795                           
 35796                           ; BSR set to: 1
 35797                           ;inputs_MC50.c: 177:             if (RFBit) {
 35798  004482  0100               	movlb	0	; () banked
 35799  004484  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35800  004486  B4D8               	btfsc	status,2,c
 35801  004488  D004               	goto	i2l14219
 35802                           
 35803                           ; BSR set to: 0
 35804                           ;inputs_MC50.c: 181:                 RFstate = 4;
 35805  00448A  0E04               	movlw	4
 35806  00448C  0101               	movlb	1	; () banked
 35807  00448E  6F98               	movwf	_RFstate& (0+255),b
 35808                           
 35809                           ;inputs_MC50.c: 183:             } else {
 35810  004490  0012               	return	
 35811  004492                     i2l14219:
 35812                           
 35813                           ; BSR set to: 0
 35814                           ;inputs_MC50.c: 184:                 RFcount--;
 35815  004492  077E               	decf	_RFcount& (0+255),f,b
 35816  004494  A0D8               	btfss	status,0,c
 35817  004496  077F               	decf	(_RFcount+1)& (0+255),f,b
 35818                           
 35819                           ; BSR set to: 0
 35820                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 35821  004498  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 35822  00449A  0012               	return	
 35823  00449C  0EF6               	movlw	246
 35824  00449E  5D7E               	subwf	_RFcount& (0+255),w,b
 35825  0044A0  0EFF               	movlw	255
 35826  0044A2  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 35827  0044A4  B0D8               	btfsc	status,0,c
 35828  0044A6  0012               	return	
 35829  0044A8  D747               	goto	i2u1404_40
 35830  0044AA                     i2l14225:
 35831                           
 35832                           ; BSR set to: 1
 35833                           ;inputs_MC50.c: 197:             RFstate = 1;
 35834  0044AA  0E01               	movlw	1
 35835  0044AC  6F98               	movwf	_RFstate& (0+255),b
 35836                           
 35837                           ;inputs_MC50.c: 198:             RFcount = 0;
 35838  0044AE  0E00               	movlw	0
 35839  0044B0  0100               	movlb	0	; () banked
 35840  0044B2  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35841  0044B4  0E00               	movlw	0
 35842  0044B6  6F7E               	movwf	_RFcount& (0+255),b
 35843                           
 35844                           ;inputs_MC50.c: 199:             Bptr = 0;
 35845  0044B8  0E00               	movlw	0
 35846  0044BA  6F8D               	movwf	_Bptr& (0+255),b
 35847                           
 35848                           ;inputs_MC50.c: 200:             BitCount = 0;
 35849  0044BC  0E00               	movlw	0
 35850  0044BE  6F8C               	movwf	_BitCount& (0+255),b
 35851                           
 35852                           ;inputs_MC50.c: 201:             break;
 35853  0044C0  0012               	return	
 35854  0044C2                     i2l14229:
 35855                           
 35856                           ; BSR set to: 0
 35857  0044C2  0101               	movlb	1	; () banked
 35858  0044C4  5198               	movf	_RFstate& (0+255),w,b
 35859  0044C6  6E01               	movwf	??_rxi^0,c
 35860  0044C8  6A02               	clrf	(??_rxi+1)^0,c
 35861                           
 35862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35863                           ; Switch size 1, requested type "simple"
 35864                           ; Number of cases is 1, Range of values is 0 to 0
 35865                           ; switch strategies available:
 35866                           ; Name         Instructions Cycles
 35867                           ; simple_byte            4     3 (average)
 35868                           ;	Chosen strategy is simple_byte
 35869  0044CA  5002               	movf	(??_rxi+1)^0,w,c
 35870  0044CC  0A00               	xorlw	0	; case 0
 35871  0044CE  A4D8               	btfss	status,2,c
 35872  0044D0  D7EC               	goto	i2l14225
 35873                           
 35874                           ; BSR set to: 1
 35875                           ; Switch size 1, requested type "simple"
 35876                           ; Number of cases is 6, Range of values is 0 to 5
 35877                           ; switch strategies available:
 35878                           ; Name         Instructions Cycles
 35879                           ; simple_byte           19    10 (average)
 35880                           ;	Chosen strategy is simple_byte
 35881  0044D2  5001               	movf	??_rxi^0,w,c
 35882  0044D4  0A00               	xorlw	0	; case 0
 35883  0044D6  B4D8               	btfsc	status,2,c
 35884  0044D8  D7E8               	goto	i2l14225
 35885  0044DA  0A01               	xorlw	1	; case 1
 35886  0044DC  B4D8               	btfsc	status,2,c
 35887  0044DE  D735               	goto	i2l14155
 35888  0044E0  0A03               	xorlw	3	; case 2
 35889  0044E2  B4D8               	btfsc	status,2,c
 35890  0044E4  D6D8               	goto	i2l14119
 35891  0044E6  0A01               	xorlw	1	; case 3
 35892  0044E8  B4D8               	btfsc	status,2,c
 35893  0044EA  D6EC               	goto	i2l14129
 35894  0044EC  0A07               	xorlw	7	; case 4
 35895  0044EE  B4D8               	btfsc	status,2,c
 35896  0044F0  D763               	goto	i2l14173
 35897  0044F2  0A01               	xorlw	1	; case 5
 35898  0044F4  B4D8               	btfsc	status,2,c
 35899  0044F6  D7C5               	goto	i2l14215
 35900  0044F8  D7D8               	goto	i2l14225
 35901  0044FA                     __end_of_rxi:
 35902                           	callstack 0
 35903                           
 35904 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 35905 ;; Defined at:
 35906 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 35907 ;; Parameters:    Size  Location     Type
 35908 ;;		None
 35909 ;; Auto vars:     Size  Location     Type
 35910 ;;		None
 35911 ;; Return value:  Size  Location     Type
 35912 ;;                  1    wreg      void 
 35913 ;; Registers used:
 35914 ;;		None
 35915 ;; Tracked objects:
 35916 ;;		On entry : 3F/2
 35917 ;;		On exit  : 3F/2
 35918 ;;		Unchanged: 3F/0
 35919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35924 ;;Total ram usage:        0 bytes
 35925 ;; Hardware stack levels used: 1
 35926 ;; This function calls:
 35927 ;;		Nothing
 35928 ;; This function is called by:
 35929 ;;		_TMR0_Initialize
 35930 ;;		_TMR0_ISR
 35931 ;; This function uses a non-reentrant model
 35932 ;;
 35933                           
 35934                           	psect	text200
 35935  009354                     __ptext200:
 35936                           	callstack 0
 35937  009354                     _TMR0_DefaultInterruptHandler:
 35938                           	callstack 15
 35939                           
 35940                           ; BSR set to: 2
 35941                           
 35942                           ;incstack = 0
 35943  009354  0012               	return		;funcret
 35944  009356                     __end_of_TMR0_DefaultInterruptHandler:
 35945                           	callstack 0
 35946                           
 35947 ;; *************** function _EUSART1_Transmit_ISR *****************
 35948 ;; Defined at:
 35949 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 35950 ;; Parameters:    Size  Location     Type
 35951 ;;		None
 35952 ;; Auto vars:     Size  Location     Type
 35953 ;;		None
 35954 ;; Return value:  Size  Location     Type
 35955 ;;                  1    wreg      void 
 35956 ;; Registers used:
 35957 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35958 ;; Tracked objects:
 35959 ;;		On entry : 3F/2
 35960 ;;		On exit  : 30/0
 35961 ;;		Unchanged: 0/0
 35962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35967 ;;Total ram usage:        0 bytes
 35968 ;; Hardware stack levels used: 1
 35969 ;; This function calls:
 35970 ;;		Nothing
 35971 ;; This function is called by:
 35972 ;;		_EUSART1_Initialize
 35973 ;;		_INTERRUPT_InterruptManager
 35974 ;; This function uses a non-reentrant model
 35975 ;;
 35976                           
 35977                           	psect	text201
 35978  008B3E                     __ptext201:
 35979                           	callstack 0
 35980  008B3E                     _EUSART1_Transmit_ISR:
 35981                           	callstack 16
 35982                           
 35983                           ; BSR set to: 2
 35984                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 35985                           
 35986                           ; BSR set to: 2
 35987                           ;incstack = 0
 35988  008B3E  0E08               	movlw	8
 35989  008B40  0101               	movlb	1	; () banked
 35990  008B42  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 35991  008B44  D012               	goto	i2l106
 35992                           
 35993                           ; BSR set to: 1
 35994                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 35995  008B46  0E84               	movlw	low _eusart1TxBuffer
 35996  008B48  0100               	movlb	0	; () banked
 35997  008B4A  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 35998  008B4C  6ED9               	movwf	fsr2l,c
 35999  008B4E  6ADA               	clrf	fsr2h,c
 36000  008B50  0E02               	movlw	high _eusart1TxBuffer
 36001  008B52  22DA               	addwfc	fsr2h,f,c
 36002  008B54  50DF               	movf	indf2,w,c
 36003  008B56  6E9A               	movwf	154,c	;volatile
 36004                           
 36005                           ; BSR set to: 0
 36006  008B58  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 36007                           
 36008                           ; BSR set to: 0
 36009                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 36010  008B5A  0E07               	movlw	7
 36011  008B5C  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 36012  008B5E  D002               	goto	i2l16233
 36013                           
 36014                           ; BSR set to: 0
 36015                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 36016  008B60  0E00               	movlw	0
 36017  008B62  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 36018  008B64                     i2l16233:
 36019                           
 36020                           ; BSR set to: 0
 36021                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 36022  008B64  0101               	movlb	1	; () banked
 36023  008B66  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 36024                           
 36025                           ;mcc_generated_files/eusart1.c: 209:     }
 36026  008B68  0012               	return	
 36027  008B6A                     i2l106:
 36028                           
 36029                           ; BSR set to: 1
 36030                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 36031  008B6A  010E               	movlb	14	; () banked
 36032  008B6C  99C5               	bcf	197,4,b	;volatile
 36033  008B6E  0012               	return		;funcret
 36034  008B70                     __end_of_EUSART1_Transmit_ISR:
 36035                           	callstack 0
 36036                           
 36037 ;; *************** function _EUSART1_Receive_ISR *****************
 36038 ;; Defined at:
 36039 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 36040 ;; Parameters:    Size  Location     Type
 36041 ;;		None
 36042 ;; Auto vars:     Size  Location     Type
 36043 ;;		None
 36044 ;; Return value:  Size  Location     Type
 36045 ;;                  1    wreg      void 
 36046 ;; Registers used:
 36047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 36048 ;; Tracked objects:
 36049 ;;		On entry : 3F/2
 36050 ;;		On exit  : 0/0
 36051 ;;		Unchanged: 0/0
 36052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36057 ;;Total ram usage:        0 bytes
 36058 ;; Hardware stack levels used: 1
 36059 ;; Hardware stack levels required when called: 2
 36060 ;; This function calls:
 36061 ;;		Absolute function
 36062 ;;		_EUSART1_DefaultErrorHandler
 36063 ;;		_EUSART1_DefaultFramingErrorHandler
 36064 ;;		_EUSART1_DefaultOverrunErrorHandler
 36065 ;;		_EUSART1_RxDataHandler
 36066 ;; This function is called by:
 36067 ;;		_EUSART1_Initialize
 36068 ;;		_INTERRUPT_InterruptManager
 36069 ;; This function uses a non-reentrant model
 36070 ;;
 36071                           
 36072                           	psect	text202
 36073  0074C8                     __ptext202:
 36074                           	callstack 0
 36075  0074C8                     _EUSART1_Receive_ISR:
 36076                           	callstack 14
 36077                           
 36078                           ; BSR set to: 2
 36079                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 36080                           
 36081                           ;incstack = 0
 36082  0074C8  0E74               	movlw	low _eusart1RxStatusBuffer
 36083  0074CA  0100               	movlb	0	; () banked
 36084  0074CC  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36085  0074CE  6ED9               	movwf	fsr2l,c
 36086  0074D0  6ADA               	clrf	fsr2h,c
 36087  0074D2  0E02               	movlw	high _eusart1RxStatusBuffer
 36088  0074D4  22DA               	addwfc	fsr2h,f,c
 36089  0074D6  0E00               	movlw	0
 36090  0074D8  6EDF               	movwf	indf2,c
 36091                           
 36092                           ; BSR set to: 0
 36093                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 36094  0074DA  A49D               	btfss	157,2,c	;volatile
 36095  0074DC  D013               	goto	i2u1828_49
 36096                           
 36097                           ; BSR set to: 0
 36098                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 36099  0074DE  0E74               	movlw	low _eusart1RxStatusBuffer
 36100  0074E0  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36101  0074E2  6ED9               	movwf	fsr2l,c
 36102  0074E4  6ADA               	clrf	fsr2h,c
 36103  0074E6  0E02               	movlw	high _eusart1RxStatusBuffer
 36104  0074E8  22DA               	addwfc	fsr2h,f,c
 36105  0074EA  0102               	movlb	2	; () banked
 36106  0074EC  82DF               	bsf	indf2,1,c
 36107                           
 36108                           ; BSR set to: 2
 36109                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 36110  0074EE  D801               	call	i2u1828_48
 36111  0074F0  D009               	goto	i2u1828_49
 36112  0074F2                     i2u1828_48:
 36113  0074F2  0005               	push	
 36114  0074F4  6EFA               	movwf	pclath,c
 36115  0074F6  51E9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 36116  0074F8  6EFD               	movwf	tosl,c
 36117  0074FA  51EA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 36118  0074FC  6EFE               	movwf	tosh,c
 36119  0074FE  6AFF               	clrf	tosu,c
 36120  007500  50FA               	movf	pclath,w,c
 36121  007502  0012               	return		;indir
 36122  007504                     i2u1828_49:
 36123                           
 36124                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 36125  007504  A29D               	btfss	157,1,c	;volatile
 36126  007506  D014               	goto	i2u1830_49
 36127                           
 36128                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 36129  007508  0E74               	movlw	low _eusart1RxStatusBuffer
 36130  00750A  0100               	movlb	0	; () banked
 36131  00750C  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36132  00750E  6ED9               	movwf	fsr2l,c
 36133  007510  6ADA               	clrf	fsr2h,c
 36134  007512  0E02               	movlw	high _eusart1RxStatusBuffer
 36135  007514  22DA               	addwfc	fsr2h,f,c
 36136  007516  0102               	movlb	2	; () banked
 36137  007518  84DF               	bsf	indf2,2,c
 36138                           
 36139                           ; BSR set to: 2
 36140                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 36141  00751A  D801               	call	i2u1830_48
 36142  00751C  D009               	goto	i2u1830_49
 36143  00751E                     i2u1830_48:
 36144  00751E  0005               	push	
 36145  007520  6EFA               	movwf	pclath,c
 36146  007522  51E7               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 36147  007524  6EFD               	movwf	tosl,c
 36148  007526  51E8               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 36149  007528  6EFE               	movwf	tosh,c
 36150  00752A  6AFF               	clrf	tosu,c
 36151  00752C  50FA               	movf	pclath,w,c
 36152  00752E  0012               	return		;indir
 36153  007530                     i2u1830_49:
 36154                           
 36155                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 36156  007530  0E74               	movlw	low _eusart1RxStatusBuffer
 36157  007532  0100               	movlb	0	; () banked
 36158  007534  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36159  007536  6ED9               	movwf	fsr2l,c
 36160  007538  6ADA               	clrf	fsr2h,c
 36161  00753A  0E02               	movlw	high _eusart1RxStatusBuffer
 36162  00753C  22DA               	addwfc	fsr2h,f,c
 36163  00753E  50DF               	movf	indf2,w,c
 36164  007540  B4D8               	btfsc	status,2,c
 36165  007542  D00C               	goto	i2l16253
 36166                           
 36167                           ; BSR set to: 0
 36168                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 36169  007544  D801               	call	i2u1832_48
 36170  007546  0012               	return	
 36171  007548                     i2u1832_48:
 36172  007548  0005               	push	
 36173  00754A  6EFA               	movwf	pclath,c
 36174  00754C  0102               	movlb	2	; () banked
 36175  00754E  51E5               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 36176  007550  6EFD               	movwf	tosl,c
 36177  007552  51E6               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 36178  007554  6EFE               	movwf	tosh,c
 36179  007556  6AFF               	clrf	tosu,c
 36180  007558  50FA               	movf	pclath,w,c
 36181  00755A  0012               	return		;indir
 36182  00755C                     i2l16253:
 36183                           
 36184                           ; BSR set to: 0
 36185                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 36186  00755C  ECD1  F047         	call	_EUSART1_RxDataHandler	;wreg free
 36187  007560  0012               	return		;funcret
 36188  007562                     __end_of_EUSART1_Receive_ISR:
 36189                           	callstack 0
 36190                           
 36191 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 36192 ;; Defined at:
 36193 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 36194 ;; Parameters:    Size  Location     Type
 36195 ;;		None
 36196 ;; Auto vars:     Size  Location     Type
 36197 ;;		None
 36198 ;; Return value:  Size  Location     Type
 36199 ;;                  1    wreg      void 
 36200 ;; Registers used:
 36201 ;;		None
 36202 ;; Tracked objects:
 36203 ;;		On entry : 3F/2
 36204 ;;		On exit  : 3F/2
 36205 ;;		Unchanged: 3F/0
 36206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36211 ;;Total ram usage:        0 bytes
 36212 ;; Hardware stack levels used: 1
 36213 ;; This function calls:
 36214 ;;		Nothing
 36215 ;; This function is called by:
 36216 ;;		_EUSART1_Initialize
 36217 ;;		_EUSART1_Receive_ISR
 36218 ;; This function uses a non-reentrant model
 36219 ;;
 36220                           
 36221                           	psect	text203
 36222  00930E                     __ptext203:
 36223                           	callstack 0
 36224  00930E                     _EUSART1_DefaultOverrunErrorHandler:
 36225                           	callstack 15
 36226                           
 36227                           ; BSR set to: 2
 36228                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 36229                           
 36230                           ;incstack = 0
 36231  00930E  989D               	bcf	157,4,c	;volatile
 36232                           
 36233                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 36234  009310  889D               	bsf	157,4,c	;volatile
 36235                           
 36236                           ; BSR set to: 2
 36237  009312  0012               	return		;funcret
 36238  009314                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 36239                           	callstack 0
 36240                           
 36241 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 36242 ;; Defined at:
 36243 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 36244 ;; Parameters:    Size  Location     Type
 36245 ;;		None
 36246 ;; Auto vars:     Size  Location     Type
 36247 ;;		None
 36248 ;; Return value:  Size  Location     Type
 36249 ;;                  1    wreg      void 
 36250 ;; Registers used:
 36251 ;;		None
 36252 ;; Tracked objects:
 36253 ;;		On entry : 3F/2
 36254 ;;		On exit  : 3F/2
 36255 ;;		Unchanged: 3F/0
 36256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36261 ;;Total ram usage:        0 bytes
 36262 ;; Hardware stack levels used: 1
 36263 ;; This function calls:
 36264 ;;		Nothing
 36265 ;; This function is called by:
 36266 ;;		_EUSART1_Initialize
 36267 ;;		_EUSART1_Receive_ISR
 36268 ;; This function uses a non-reentrant model
 36269 ;;
 36270                           
 36271                           	psect	text204
 36272  009356                     __ptext204:
 36273                           	callstack 0
 36274  009356                     _EUSART1_DefaultFramingErrorHandler:
 36275                           	callstack 15
 36276                           
 36277                           ; BSR set to: 2
 36278                           
 36279                           ; BSR set to: 2
 36280                           ;incstack = 0
 36281  009356  0012               	return		;funcret
 36282  009358                     __end_of_EUSART1_DefaultFramingErrorHandler:
 36283                           	callstack 0
 36284                           
 36285 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 36286 ;; Defined at:
 36287 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 36288 ;; Parameters:    Size  Location     Type
 36289 ;;		None
 36290 ;; Auto vars:     Size  Location     Type
 36291 ;;		None
 36292 ;; Return value:  Size  Location     Type
 36293 ;;                  1    wreg      void 
 36294 ;; Registers used:
 36295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36296 ;; Tracked objects:
 36297 ;;		On entry : 3F/2
 36298 ;;		On exit  : 3F/0
 36299 ;;		Unchanged: 0/0
 36300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36305 ;;Total ram usage:        0 bytes
 36306 ;; Hardware stack levels used: 1
 36307 ;; Hardware stack levels required when called: 1
 36308 ;; This function calls:
 36309 ;;		_EUSART1_RxDataHandler
 36310 ;; This function is called by:
 36311 ;;		_EUSART1_Initialize
 36312 ;;		_EUSART1_Receive_ISR
 36313 ;; This function uses a non-reentrant model
 36314 ;;
 36315                           
 36316                           	psect	text205
 36317  009314                     __ptext205:
 36318                           	callstack 0
 36319  009314                     _EUSART1_DefaultErrorHandler:
 36320                           	callstack 14
 36321                           
 36322                           ; BSR set to: 2
 36323                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 36324                           
 36325                           ; BSR set to: 2
 36326                           ;incstack = 0
 36327  009314  ECD1  F047         	call	_EUSART1_RxDataHandler	;wreg free
 36328                           
 36329                           ; BSR set to: 0
 36330  009318  0012               	return		;funcret
 36331  00931A                     __end_of_EUSART1_DefaultErrorHandler:
 36332                           	callstack 0
 36333                           
 36334 ;; *************** function _EUSART1_RxDataHandler *****************
 36335 ;; Defined at:
 36336 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 36337 ;; Parameters:    Size  Location     Type
 36338 ;;		None
 36339 ;; Auto vars:     Size  Location     Type
 36340 ;;		None
 36341 ;; Return value:  Size  Location     Type
 36342 ;;                  1    wreg      void 
 36343 ;; Registers used:
 36344 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36345 ;; Tracked objects:
 36346 ;;		On entry : 3D/0
 36347 ;;		On exit  : 3F/0
 36348 ;;		Unchanged: 0/0
 36349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36354 ;;Total ram usage:        0 bytes
 36355 ;; Hardware stack levels used: 1
 36356 ;; This function calls:
 36357 ;;		Nothing
 36358 ;; This function is called by:
 36359 ;;		_EUSART1_Receive_ISR
 36360 ;;		_EUSART1_DefaultErrorHandler
 36361 ;; This function uses a non-reentrant model
 36362 ;;
 36363                           
 36364                           	psect	text206
 36365  008FA2                     __ptext206:
 36366                           	callstack 0
 36367  008FA2                     _EUSART1_RxDataHandler:
 36368                           	callstack 15
 36369                           
 36370                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 36371                           
 36372                           ; BSR set to: 0
 36373                           ;incstack = 0
 36374  008FA2  0E7C               	movlw	low _eusart1RxBuffer
 36375  008FA4  0100               	movlb	0	; () banked
 36376  008FA6  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36377  008FA8  6ED9               	movwf	fsr2l,c
 36378  008FAA  6ADA               	clrf	fsr2h,c
 36379  008FAC  0E02               	movlw	high _eusart1RxBuffer
 36380  008FAE  22DA               	addwfc	fsr2h,f,c
 36381  008FB0  CF99 FFDF          	movff	3993,indf2	;volatile
 36382                           
 36383                           ; BSR set to: 0
 36384  008FB4  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 36385                           
 36386                           ; BSR set to: 0
 36387                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 36388  008FB6  0E07               	movlw	7
 36389  008FB8  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 36390  008FBA  D002               	goto	i2l12567
 36391                           
 36392                           ; BSR set to: 0
 36393                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 36394  008FBC  0E00               	movlw	0
 36395  008FBE  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 36396  008FC0                     i2l12567:
 36397                           
 36398                           ; BSR set to: 0
 36399                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 36400  008FC0  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 36401                           
 36402                           ; BSR set to: 0
 36403  008FC2  0012               	return		;funcret
 36404  008FC4                     __end_of_EUSART1_RxDataHandler:
 36405                           	callstack 0
 36406                           
 36407                           	psect	text207
 36408  000000                     __ptext207:
 36409                           	callstack 0
 36410                           
 36411                           	psect	rparam
 36412  0000                     
 36413                           	psect	temp
 36414  000050                     btemp:
 36415                           	callstack 0
 36416  000050                     	ds	1
 36417  0000                     int$flags	set	btemp
 36418  0000                     wtemp8	set	btemp+1
 36419  0000                     ttemp5	set	btemp+1
 36420  0000                     ttemp6	set	btemp+4
 36421  0000                     ttemp7	set	btemp+8
 36422                           
 36423                           	psect	idloc
 36424                           
 36425                           ;Config register IDLOC0 @ 0x200000
 36426                           ;	unspecified, using default values
 36427  200000                     	org	2097152
 36428  200000  0FFF               	dw	4095
 36429                           
 36430                           ;Config register IDLOC1 @ 0x200002
 36431                           ;	unspecified, using default values
 36432  200002                     	org	2097154
 36433  200002  0FFF               	dw	4095
 36434                           
 36435                           ;Config register IDLOC2 @ 0x200004
 36436                           ;	unspecified, using default values
 36437  200004                     	org	2097156
 36438  200004  0FFF               	dw	4095
 36439                           
 36440                           ;Config register IDLOC3 @ 0x200006
 36441                           ;	unspecified, using default values
 36442  200006                     	org	2097158
 36443  200006  0FFF               	dw	4095
 36444                           
 36445                           ;Config register IDLOC4 @ 0x200008
 36446                           ;	unspecified, using default values
 36447  200008                     	org	2097160
 36448  200008  0FFF               	dw	4095
 36449                           
 36450                           ;Config register IDLOC5 @ 0x20000A
 36451                           ;	unspecified, using default values
 36452  20000A                     	org	2097162
 36453  20000A  0FFF               	dw	4095
 36454                           
 36455                           ;Config register IDLOC6 @ 0x20000C
 36456                           ;	unspecified, using default values
 36457  20000C                     	org	2097164
 36458  20000C  0FFF               	dw	4095
 36459                           
 36460                           ;Config register IDLOC7 @ 0x20000E
 36461                           ;	unspecified, using default values
 36462  20000E                     	org	2097166
 36463  20000E  0FFF               	dw	4095
 36464                           
 36465                           	psect	config
 36466                           
 36467                           ;Config register CONFIG1L @ 0x300000
 36468                           ;	External Oscillator mode Selection bits
 36469                           ;	FEXTOSC = OFF, Oscillator not enabled
 36470                           ;	Power-up default value for COSC bits
 36471                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 36472  300000                     	org	3145728
 36473  300000  8C                 	db	140
 36474                           
 36475                           ;Config register CONFIG1H @ 0x300001
 36476                           ;	Clock Out Enable bit
 36477                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 36478                           ;	Clock Switch Enable bit
 36479                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 36480                           ;	Fail-Safe Clock Monitor Enable bit
 36481                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 36482  300001                     	org	3145729
 36483  300001  FF                 	db	255
 36484                           
 36485                           ;Config register CONFIG2L @ 0x300002
 36486                           ;	Master Clear Enable bit
 36487                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 36488                           ;	Power-up Timer Enable bit
 36489                           ;	PWRTE = ON, Power up timer enabled
 36490                           ;	Low-power BOR enable bit
 36491                           ;	LPBOREN = OFF, ULPBOR disabled
 36492                           ;	Brown-out Reset Enable bits
 36493                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 36494  300002                     	org	3145730
 36495  300002  FD                 	db	253
 36496                           
 36497                           ;Config register CONFIG2H @ 0x300003
 36498                           ;	Brown Out Reset Voltage selection bits
 36499                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 36500                           ;	ZCD Disable bit
 36501                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 36502                           ;	PPSLOCK bit One-Way Set Enable bit
 36503                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 36504                           ;	Stack Full/Underflow Reset Enable bit
 36505                           ;	STVREN = ON, Stack full/underflow will cause Reset
 36506                           ;	Debugger Enable bit
 36507                           ;	DEBUG = OFF, Background debugger disabled
 36508                           ;	Extended Instruction Set Enable bit
 36509                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 36510  300003                     	org	3145731
 36511  300003  FF                 	db	255
 36512                           
 36513                           ;Config register CONFIG3L @ 0x300004
 36514                           ;	WDT Period Select bits
 36515                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 36516                           ;	WDT operating mode
 36517                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 36518  300004                     	org	3145732
 36519  300004  BF                 	db	191
 36520                           
 36521                           ;Config register CONFIG3H @ 0x300005
 36522                           ;	WDT Window Select bits
 36523                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 36524                           ;	WDT input clock selector
 36525                           ;	WDTCCS = SC, Software Control
 36526  300005                     	org	3145733
 36527  300005  FF                 	db	255
 36528                           
 36529                           ;Config register CONFIG4L @ 0x300006
 36530                           ;	Write Protection Block 0
 36531                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 36532                           ;	Write Protection Block 1
 36533                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 36534                           ;	Write Protection Block 2
 36535                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 36536                           ;	Write Protection Block 3
 36537                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 36538  300006                     	org	3145734
 36539  300006  FF                 	db	255
 36540                           
 36541                           ;Config register CONFIG4H @ 0x300007
 36542                           ;	Configuration Register Write Protection bit
 36543                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 36544                           ;	Boot Block Write Protection bit
 36545                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 36546                           ;	Data EEPROM Write Protection bit
 36547                           ;	WRTD = OFF, Data EEPROM not write-protected
 36548                           ;	Scanner Enable bit
 36549                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 36550                           ;	Low Voltage Programming Enable bit
 36551                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 36552  300007                     	org	3145735
 36553  300007  DF                 	db	223
 36554                           
 36555                           ;Config register CONFIG5L @ 0x300008
 36556                           ;	UserNVM Program Memory Code Protection bit
 36557                           ;	CP = ON, UserNVM code protection enabled
 36558                           ;	DataNVM Memory Code Protection bit
 36559                           ;	CPD = ON, DataNVM code protection enabled
 36560  300008                     	org	3145736
 36561  300008  FC                 	db	252
 36562                           
 36563                           ;Config register CONFIG5H @ 0x300009
 36564                           ;	unspecified, using default values
 36565  300009                     	org	3145737
 36566  300009  FF                 	db	255
 36567                           
 36568                           ;Config register CONFIG6L @ 0x30000A
 36569                           ;	Table Read Protection Block 0
 36570                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 36571                           ;	Table Read Protection Block 1
 36572                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 36573                           ;	Table Read Protection Block 2
 36574                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 36575                           ;	Table Read Protection Block 3
 36576                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 36577  30000A                     	org	3145738
 36578  30000A  FF                 	db	255
 36579                           
 36580                           ;Config register CONFIG6H @ 0x30000B
 36581                           ;	Boot Block Table Read Protection bit
 36582                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 36583  30000B                     	org	3145739
 36584  30000B  FF                 	db	255
 36585                           tosu	equ	0xFFF
 36586                           tosh	equ	0xFFE
 36587                           tosl	equ	0xFFD
 36588                           stkptr	equ	0xFFC
 36589                           pclatu	equ	0xFFB
 36590                           pclath	equ	0xFFA
 36591                           pcl	equ	0xFF9
 36592                           tblptru	equ	0xFF8
 36593                           tblptrh	equ	0xFF7
 36594                           tblptrl	equ	0xFF6
 36595                           tablat	equ	0xFF5
 36596                           prodh	equ	0xFF4
 36597                           prodl	equ	0xFF3
 36598                           indf0	equ	0xFEF
 36599                           postinc0	equ	0xFEE
 36600                           postdec0	equ	0xFED
 36601                           preinc0	equ	0xFEC
 36602                           plusw0	equ	0xFEB
 36603                           fsr0h	equ	0xFEA
 36604                           fsr0l	equ	0xFE9
 36605                           wreg	equ	0xFE8
 36606                           indf1	equ	0xFE7
 36607                           postinc1	equ	0xFE6
 36608                           postdec1	equ	0xFE5
 36609                           preinc1	equ	0xFE4
 36610                           plusw1	equ	0xFE3
 36611                           fsr1h	equ	0xFE2
 36612                           fsr1l	equ	0xFE1
 36613                           bsr	equ	0xFE0
 36614                           indf2	equ	0xFDF
 36615                           postinc2	equ	0xFDE
 36616                           postdec2	equ	0xFDD
 36617                           preinc2	equ	0xFDC
 36618                           plusw2	equ	0xFDB
 36619                           fsr2h	equ	0xFDA
 36620                           fsr2l	equ	0xFD9
 36621                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         821
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     32     154
    BANK1           256      0     255
    BANK2           256      0     241
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8235$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8241$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8247$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8253$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8252	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8247	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8246	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8241	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8240	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8235	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8234	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    read_eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6612$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.positionRemotesWalk(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), 
		 -> var_sys_NVM.motorSensitivity(BANK0[1]), var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4643$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_eusartparser
    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _saveNewSerial->_i2c_writeNBytes
    _getSerialCmd->_memcpy
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_sm_execute_main
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_SaveNVM_VarSystem
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 7105180
                                             25 BANK0      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3265240
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3239816
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       6     5      1  716791
                                             57 COMRAM     1     0      1
                                              4 BANK0      5     5      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7093
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1773799
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349450
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  348241
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349363
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   20456
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1223
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1364
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2020
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      22
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     283
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  740427
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  384102
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3536
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3145
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  356325
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  349416
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1741500
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  347773
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        10     9      1  359872
                                             57 COMRAM     1     0      1
                                              4 BANK0      2     2      0
                  _SaveNVM_VarSystem
                  _read_eusartparser
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1343
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (2) _read_eusartparser                                    3     2      1    5454
                                             23 COMRAM     3     2      1
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    3244
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      25
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     500
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     500
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     223
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     112
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1620
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1022
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     598
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    4118
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     576
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     317
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     161
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0     893
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    2612
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2519
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _SaveNVM_VarSystem
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
         _i2c_readDataBlock
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
           _i2c_writeNBytes
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
           _i2c_readDataBlock
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
           _i2c_writeNBytes
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F1       9       94.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      9A       5       96.2%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3D0      60        0.0%
DATA                 0      0     3D0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jul 18 11:36:03 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 9236  
                                _eusart1TxBufferRemaining 01FE  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 7DC6  
                                           _LoadManufCode 8F3C  
                                        ?_SetSegmentValue 001C  
                                                     l100 8940  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 7894  
                                                     l690 7CFC  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02E1  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 4284  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 8C26  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 92B2  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 8AA0  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 003A  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2034 8210  
                                                    l1405 5FE4  
                                       readRFButtons@key1 0088  
                                                    l2039 821C  
                                                    l1512 54A0  
                                                    l2410 3A12  
                                                    l2306 4DD6  
                                                    l2235 7076  
                                                    l2323 7DC2  
                                                    l1372 883E  
                                                    l1436 551C  
                                                    l3060 26D2  
                                                    l1357 6B54  
                                                    l1366 6CD6  
                                                    l2502 771A  
                                                    l2318 7DB8  
                                                    l1383 5720  
                                                    l2511 8A3E  
                                                    l1519 54EC  
                                                    l3048 2546  
                                                    l2249 683E  
                                                    l2514 8A64  
                                                    l1490 5382  
                                                    l2371 48C4  
                                                    l1731 69B4  
                                                    l3083 2718  
                                                    l1388 57A8  
                                                    l2348 48B8  
                                                    l1740 6A20  
                                                    l1732 69BC  
                                                    l1652 5ADE  
                                                    l3228 1066  
                                                    l4141 8642  
                                                    l2365 48B0  
                                                    l1741 6A28  
                                                    l1486 844A  
                                                    l2438 3B84  
                                                    l1734 69D8  
                                                    l1726 697A  
                                                    l1662 5B26  
                                                    l2375 4988  
                                                    l1743 6A52  
                                                    l1735 69E0  
                                                    l1727 6982  
                                                    l2472 3C9A  
                                                    l2392 4980  
                                                    l3600 2F10  
                                                    l3601 2F16  
                                                    l1737 69FC  
                                                    l1649 5A68  
                                                    l3433 23C8  
                                                    l3353 1FA0  
                                                    l3097 27F2  
                                                    l3610 2F3E  
                                                    l1738 6A04  
                                                    l2722 4E02  
                                                    l3611 2F44  
                                                    l3603 2F1C  
                                                    l3507 8338  
                                                    l3604 2F22  
                                                    l2580 8006  
                                                    l2724 4E38  
                                                    l3613 2F4A  
                                                    l2805 4282  
                                                    l2725 4EF8  
                                                    l2398 4994  
                                                    l3614 2F50  
                                                    l3606 2F2C  
                                                    l1854 6F50  
                                                    l2718 474C  
                                                    l3615 2F56  
                                                    l3375 209A  
                                                    l3367 2060  
                                                    l3624 31AC  
                                                    l3616 2F5C  
                                                    l3608 2F32  
                                                    l1864 6F84  
                                                    l1856 6F60  
                                                    l2648 384C  
                                                    l3625 31B6  
                                                    l3609 2F38  
                                                    l3385 21DE  
                                                    l3386 21FE  
                                                    l3619 3026  
                                                    l2907 19FC  
                                                    l3483 72D0  
                                                    l3590 2ED4  
                                                    l3592 2EDA  
                                                    l2768 409E  
                                                    l3489 8B9E  
                                                    l3594 2EE4  
                                                    l3595 2EEE  
                                                    l3587 2EC0  
                                                    l3596 2EF8  
                                                    l3597 2EFE  
                                                    l3589 2ECA  
                                                    l3677 7B48  
                                                    l3598 2F04  
                                                    l3599 2F0A  
                                                    ?_rxi 0001  
                                                    _DKEY 02D1  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 00F1  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 91EE  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 892A  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 59D0  
                                                    _main 5CF0  
                                           ?_EUSART1_Read 0001  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                         __end_of_Decrypt 6FDC  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 70A2  
                                         __end_of_ReadADC 85A6  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 5360  
                                 __end_of_TMR0_Initialize 8F80  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 915C  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l20003 5214  
                                                   l20101 535C  
                                                   l12041 8964  
                                                   l12025 892C  
                                                   l20041 5270  
                                                   l20009 5238  
                                                   l20035 5268  
                                                   l20019 523C  
                                                   l20123 7460  
                                                   l20117 745C  
                                                   l20205 741E  
                                                   l12301 6C1E  
                                                   l21013 347E  
                                                   l12039 8960  
                                                   l20215 8B3A  
                                                   l20063 52AA  
                                                   l20241 792C  
                                                   l20233 7910  
                                                   l20057 52A2  
                                                   l20153 74C4  
                                                   l20137 748E  
                                                   l20321 4C96  
                                                   l22001 1B74  
                                                   l12305 6C2A  
                                                   l21025 34DE  
                                                   l21017 34B8  
                                                   l21211 5476  
                                                   l21203 545A  
                                                   l20403 4DC2  
                                                   l20331 4CB4  
                                                   l21107 7290  
                                                   l21027 34F2  
                                                   l21117 839C  
                                                   l20229 790C  
                                                   l20261 8AF0  
                                                   l14013 880A  
                                                   l20077 52D0  
                                                   l20093 5320  
                                                   l12261 6B82  
                                                   l12309 6C34  
                                                   l21127 83E4  
                                                   l21231 54C2  
                                                   l21215 5484  
                                                   l21207 5468  
                                                   l21151 53A4  
                                                   l21303 5172  
                                                   l20415 7FCA  
                                                   l20175 73BA  
                                                   l20503 654A  
                                                   l22023 1BE4  
                                                   l12271 6BAE  
                                                   l12255 6B68  
                                                   l12503 7A4A  
                                                   l20089 531C  
                                                   l20169 73B6  
                                                   l20345 4CE2  
                                                   l12281 6BD0  
                                                   l21057 3586  
                                                   l21235 54D0  
                                                   l21227 54B4  
                                                   l21219 5492  
                                                   l21171 53EA  
                                                   l21163 53CE  
                                                   l21155 53B2  
                                                   l21147 5396  
                                                   l21139 5374  
                                                   l20291 4BF0  
                                                   l22123 1DEC  
                                                   l22115 1D9E  
                                                   l22107 1D80  
                                                   l22035 1C3A  
                                                   l12275 6BBA  
                                                   l12267 6B9C  
                                                   l20611 20A2  
                                                   l20269 8B08  
                                                   l20453 806C  
                                                   l20189 73E8  
                                                   l20509 658E  
                                                   l20365 4D44  
                                                   l20373 4D62  
                                                   l20285 4BDE  
                                                   l21413 4578  
                                                   l12293 6C04  
                                                   l21085 3628  
                                                   l20541 1FBA  
                                                   l22301 11AA  
                                                   l22221 0F66  
                                                   l22213 0F24  
                                                   l23021 27AE  
                                                   l12607 8E3E  
                                                   l21239 54DE  
                                                   l21191 5430  
                                                   l21183 5414  
                                                   l21175 53F8  
                                                   l21167 53DC  
                                                   l21159 53C0  
                                                   l21271 50FC  
                                                   l21255 506E  
                                                   l20447 8058  
                                                   l21503 46B8  
                                                   l20527 823C  
                                                   l22055 1C8A  
                                                   l12287 6BEA  
                                                   l12279 6BC6  
                                                   l12471 79E4  
                                                   l12543 8E00  
                                                   l12535 8DE8  
                                                   l21079 3612  
                                                   l20703 22A0  
                                                   l20551 1FD6  
                                                   l20543 1FC2  
                                                   l22303 11AC  
                                                   l23111 2902  
                                                   l23007 278A  
                                                   l12625 6D0A  
                                                   l20449 8064  
                                                   l21601 4E90  
                                                   l20393 4D98  
                                                   l20297 4C0A  
                                                   l21521 46EE  
                                                   l21433 45E8  
                                                   l20529 826E  
                                                   l23201 37AA  
                                                   l12297 6C12  
                                                   l20721 22DC  
                                                   l20705 22A4  
                                                   l20641 216A  
                                                   l20625 20FA  
                                                   l20553 1FDE  
                                                   l20537 1FAA  
                                                   l22321 1226  
                                                   l22305 11D6  
                                                   l22241 0FE4  
                                                   l22233 0FCC  
                                                   l22225 0F88  
                                                   l22217 0F44  
                                                   l23041 27E2  
                                                   l23033 27C4  
                                                   l12619 6C72  
                                                   l21195 543E  
                                                   l21187 5422  
                                                   l21179 5406  
                                                   l21259 5078  
                                                   l21363 7352  
                                                   l21347 730A  
                                                   l21611 4EAE  
                                                   l20395 4D9E  
                                                   l20387 4D74  
                                                   l22147 1E76  
                                                   l22067 1CE0  
                                                   l12483 7A0A  
                                                   l20723 22F8  
                                                   l20715 22D0  
                                                   l20619 20B2  
                                                   l20555 1FE6  
                                                   l20539 1FB2  
                                                   l22411 1422  
                                                   l22307 11DC  
                                                   l23131 2962  
                                                   l14501 57DA  
                                                   l16101 2AF6  
                                                   l21269 50EC  
                                                   l21277 5100  
                                                   l21349 7320  
                                                   l21621 4ECC  
                                                   l21613 4EB6  
                                                   l21605 4E9A  
                                                   l20485 6E8A  
                                                   l21517 46E4  
                                                   l21453 4640  
                                                   l22181 1EF0  
                                                   l22149 1E80  
                                                   l22093 1D50  
                                                   l23213 37EC  
                                                   l12485 7A12  
                                                   l12477 79F4  
                                                   l20805 23E2  
                                                   l20741 2326  
                                                   l20733 2304  
                                                   l20717 22D4  
                                                   l20709 22AC  
                                                   l20629 210C  
                                                   l20573 2006  
                                                   l20565 1FFA  
                                                   l20557 1FEE  
                                                   l22317 11FA  
                                                   l22229 0FAA  
                                                   l23109 28EE  
                                                   l23133 296E  
                                                   l14431 6AD6  
                                                   l12591 77B4  
                                                   l21199 544C  
                                                   l21287 5146  
                                                   l20495 64FE  
                                                   l21631 4EDE  
                                                   l20479 6E50  
                                                   l21527 4700  
                                                   l21519 46E8  
                                                   l21447 4628  
                                                   l23231 38A4  
                                                   l12495 7A32  
                                                   l20815 2404  
                                                   l20743 232A  
                                                   l20727 22FC  
                                                   l20591 207E  
                                                   l20639 211C  
                                                   l20583 2012  
                                                   l22511 1666  
                                                   l22407 1412  
                                                   l22343 12D8  
                                                   l22271 1068  
                                                   l23127 294E  
                                                   l23063 282A  
                                                   l14433 6ADE  
                                                   l14417 6A82  
                                                   l16121 2B46  
                                                   l16113 2B26  
                                                   l16105 2B06  
                                                   l16201 315E  
                                                   l21369 735C  
                                                   l21801 41D4  
                                                   l21721 408C  
                                                   l20489 6EC4  
                                                   l21481 4698  
                                                   l21465 4664  
                                                   l22169 1ED8  
                                                   l23217 380E  
                                                   l23161 36DA  
                                                   l23153 36AA  
                                                   l20809 23F4  
                                                   l20817 2420  
                                                   l20761 2366  
                                                   l20745 232E  
                                                   l20729 2300  
                                                   l20681 2242  
                                                   l20649 21A4  
                                                   l22505 164E  
                                                   l22441 14D0  
                                                   l22433 147C  
                                                   l22425 145E  
                                                   l22409 1416  
                                                   l22361 1328  
                                                   l22265 1044  
                                                   l22257 101E  
                                                   l22249 0FFC  
                                                   l22273 10AC  
                                                   l23137 297A  
                                                   l12595 77F6  
                                                   l17011 3AAC  
                                                   l21707 401E  
                                                   l21539 472A  
                                                   l21483 469E  
                                                   l22187 1F06  
                                                   l23227 384E  
                                                   l12499 7A3C  
                                                   l20755 235C  
                                                   l20739 2322  
                                                   l20683 2246  
                                                   l20587 206E  
                                                   l20827 2448  
                                                   l22523 1694  
                                                   l22435 147E  
                                                   l22339 12B6  
                                                   l22275 10C2  
                                                   l23083 2880  
                                                   l23067 283A  
                                                   l23331 5D36  
                                                   l14437 6AEA  
                                                   l16133 2B76  
                                                   l16125 2B56  
                                                   l16117 2B36  
                                                   l16109 2B16  
                                                   l16061 2A2C  
                                                   l16053 29FE  
                                                   l16045 29AA  
                                                   l16213 31C0  
                                                   l21821 41FA  
                                                   l21805 41DC  
                                                   l21741 4104  
                                                   l21709 4034  
                                                   l21645 4F12  
                                                   l21637 4EF4  
                                                   l21397 4534  
                                                   l22197 1F54  
                                                   l21901 195E  
                                                   l23253 390E  
                                                   l23173 3714  
                                                   l23165 36F2  
                                                   l23229 388E  
                                                   l23157 36B8  
                                                   l20781 2398  
                                                   l20749 2332  
                                                   l20693 2284  
                                                   l20589 2076  
                                                   l20829 249A  
                                                   l22541 16D6  
                                                   l22533 16BC  
                                                   l22461 1562  
                                                   l22445 14F2  
                                                   l22285 112A  
                                                   l23077 285C  
                                                   l23341 5D4C  
                                                   l17023 3AF8  
                                                   l17007 3A98  
                                                   l16143 2BF2  
                                                   l16047 29C6  
                                                   l21823 4200  
                                                   l21807 41E4  
                                                   l21655 4F38  
                                                   l21591 4E6C  
                                                   l21559 4DF2  
                                                   l21399 454A  
                                                   l20775 238E  
                                                   l20695 228E  
                                                   l20687 224E  
                                                   l20679 2218  
                                                   l20599 208A  
                                                   l22551 1710  
                                                   l22519 1688  
                                                   l22295 1190  
                                                   l14473 56B4  
                                                   l14449 6B10  
                                                   l14465 8832  
                                                   l22641 5F68  
                                                   l22609 5EBE  
                                                   l17113 3CB6  
                                                   l17041 3B50  
                                                   l17017 3AD4  
                                                   l17025 3B06  
                                                   l16153 2C6E  
                                                   l16137 2B94  
                                                   l16129 2B66  
                                                   l16081 2A98  
                                                   l16073 2A78  
                                                   l16065 2A4A  
                                                   l16057 2A0E  
                                                   l16049 29E0  
                                                   l22801 603E  
                                                   l21841 4238  
                                                   l21833 421E  
                                                   l21761 4150  
                                                   l21681 4F96  
                                                   l21921 19B2  
                                                   l21913 199A  
                                                   l21905 1978  
                                                   l23273 396E  
                                                   l23185 374C  
                                                   l20769 2370  
                                                   l20689 226A  
                                                   l22561 17DE  
                                                   l22481 15D0  
                                                   l22465 1584  
                                                   l22393 13CC  
                                                   l22369 1344  
                                                   l22377 1360  
                                                   l23361 5DFE  
                                                   l14483 56EA  
                                                   l13907 8638  
                                                   l22627 5F30  
                                                   l22643 5F7E  
                                                   l17115 3CC4  
                                                   l17019 3AE2  
                                                   l16163 2CE0  
                                                   l16147 2C10  
                                                   l22803 6050  
                                                   l21819 41F6  
                                                   l21667 4F66  
                                                   l23283 398A  
                                                   l23275 3974  
                                                   l20795 23BA  
                                                   l20699 2298  
                                                   l22539 16CE  
                                                   l23371 5E1C  
                                                   l23355 5DDA  
                                                   l14493 578E  
                                                   l14477 56CA  
                                                   l22629 5F34  
                                                   l17125 3CF4  
                                                   l17109 3C9E  
                                                   l17045 3B66  
                                                   l17053 3B90  
                                                   l14725 7DAE  
                                                   l16173 2D52  
                                                   l16093 2AC8  
                                                   l16085 2AA8  
                                                   l16077 2A88  
                                                   l16069 2A68  
                                                   l16181 2DB0  
                                                   l22805 606A  
                                                   l22717 59F4  
                                                   l21773 4174  
                                                   l21685 4FA2  
                                                   l21941 1A3E  
                                                   l23277 3978  
                                                   l23293 399E  
                                                   l23189 376E  
                                                   l20973 3346  
                                                   l20789 239C  
                                                   l22565 17EE  
                                                   l22493 160A  
                                                   l14735 8A40  
                                                   l14751 76B2  
                                                   l17119 3CDA  
                                                   l17071 3BDC  
                                                   l17039 3B40  
                                                   l14719 7D92  
                                                   l16167 2CF4  
                                                   l16159 2CCC  
                                                   l16191 2F66  
                                                   l22823 610A  
                                                   l22751 5AC2  
                                                   l21783 4196  
                                                   l21791 41B0  
                                                   l21943 1A54  
                                                   l23287 3990  
                                                   l23279 3984  
                                                   l20991 33C4  
                                                   l20983 3368  
                                                   l22567 17F4  
                                                   l22911 261A  
                                                   l22903 25FC  
                                                   l14497 57B8  
                                                   l14753 76BA  
                                                   l17081 3C16  
                                                   l16097 2AD8  
                                                   l16089 2AB8  
                                                   l16193 2FD8  
                                                   l22817 60C6  
                                                   l22809 6084  
                                                   l16521 90FA  
                                                   l22753 5AC8  
                                                   l16601 810C  
                                                   l21857 426A  
                                                   l21961 1AD0  
                                                   l21929 19DA  
                                                   l21881 18F0  
                                                   l21873 18BE  
                                                   l21865 188E  
                                                   l13873 7AFA  
                                                   l13857 8B98  
                                                   l20993 33FC  
                                                   l20985 336A  
                                                   l22569 17FA  
                                                   l22585 1840  
                                                   l22921 262A  
                                                   l22833 24A2  
                                                   l14747 76A2  
                                                   l17075 3BF4  
                                                   l16195 302C  
                                                   l22747 5A9C  
                                                   l22739 5A6E  
                                                   l22771 5B4A  
                                                   l21779 418E  
                                                   l21939 19FE  
                                                   l13875 7B06  
                                                   l20995 3402  
                                                   l22851 252E  
                                                   l22843 24EC  
                                                   l14749 76AA  
                                                   l14757 76C2  
                                                   l17093 3C48  
                                                   l17077 3C02  
                                                   l16197 309E  
                                                   l21789 41AA  
                                                   l21893 1938  
                                                   l21885 1914  
                                                   l13885 7B3A  
                                                   l22933 265C  
                                                   l22861 258A  
                                                   l13895 8610  
                                                   l16703 663C  
                                                   l14759 76EA  
                                                   l17087 3C26  
                                                   l16199 30EC  
                                                   l22791 6018  
                                                   l22783 5FE8  
                                                   l22775 5B56  
                                                   l21967 1AF0  
                                                   l21959 1AB2  
                                                   l22951 26A8  
                                                   l22927 2642  
                                                   l22847 250C  
                                                   l22839 24CA  
                                                   l19113 7846  
                                                   l13897 8618  
                                                   l14769 7716  
                                                   l17097 3C5C  
                                                   l22689 6460  
                                                   l16641 699E  
                                                   l22769 5B42  
                                                   l16617 8140  
                                                   l16609 812A  
                                                   l22961 26E2  
                                                   l22937 266E  
                                                   l22881 25D8  
                                                   l22873 25BC  
                                                   l22857 2548  
                                                   l19131 78BC  
                                                   l19123 7852  
                                                   l22787 5FF8  
                                                   l16643 69A8  
                                                   l16627 6964  
                                                   l16619 8144  
                                                   l21995 1B5C  
                                                   l22971 2708  
                                                   l22891 25E6  
                                                   l22867 259C  
                                                   l22859 2574  
                                                   l19117 784C  
                                                   l19109 7840  
                                                   l16733 66AA  
                                                   l16717 6670  
                                                   l22797 602E  
                                                   l16629 696E  
                                                   l22957 26C8  
                                                   l19223 8748  
                                                   l16743 66D6  
                                                   l21999 1B6A  
                                                   l22959 26D4  
                                                   l19153 7D00  
                                                   l22993 2752  
                                                   l19163 7D0C  
                                                   l19219 8742  
                                                   l19251 91D2  
                                                   l16915 47F4  
                                                   l19157 7D06  
                                                   l19229 874E  
                                                   l19245 85BE  
                                                   l19405 7098  
                                                   l16757 670A  
                                                   l16941 48A4  
                                                   l16861 81EA  
                                                   l19421 851E  
                                                   l19183 828A  
                                                   l19255 91DA  
                                                   l19335 7AD4  
                                                   l16943 48B2  
                                                   l19503 6F7C  
                                                   l16599 8108  
                                                   l22999 2770  
                                                   l19281 8C6E  
                                                   l19361 88B6  
                                                   l16945 48C8  
                                                   l16865 81FE  
                                                   l16857 81D8  
                                                   l16689 6A4C  
                                                   l16777 866E  
                                                   l19417 850A  
                                                   l19355 8F9E  
                                                   l19179 8284  
                                                   l19195 8298  
                                                   l16971 4982  
                                                   l16939 48A0  
                                                   l16883 4776  
                                                   l19443 7E50  
                                                   l19611 568C  
                                                   l19603 5628  
                                                   l19531 6DBC  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l19189 8292  
                                                   l19437 7F0E  
                                                   l19429 7ED2  
                                                   l19453 7E9A  
                                                   l19613 5690  
                                                   l19287 8C7A  
                                                   l19383 702C  
                                                   l19375 6FF0  
                                                   l16983 3A14  
                                                   l16967 4970  
                                                   l19527 6D90  
                                                   l19631 7BA8  
                                                   l19623 7F64  
                                                   l18921 80B2  
                                                   l19369 88D6  
                                                   l19385 7038  
                                                   l16977 39F4  
                                                   l16969 4974  
                                                   l16897 47A2  
                                                   l16889 4786  
                                                   l19721 6298  
                                                   l19481 6F4C  
                                                   l19473 6F32  
                                                   l19561 837E  
                                                   l19641 7678  
                                                   l19395 7066  
                                                   l16995 3A5E  
                                                   l16899 47A8  
                                                   l19491 6F5C  
                                                   l19539 6E00  
                                                   l19741 6380  
                                                   l19591 55D2  
                                                   l19583 556E  
                                                   l19575 5524  
                                                   l19727 62EA  
                                                   l19495 6F68  
                                                   l19567 888E  
                                                   l19639 7646  
                                                   l19671 8732  
                                                   l19903 3FCC  
                                                   l19577 552A  
                                                   l19593 55D6  
                                                   l19649 7688  
                                                   l19673 8736  
                                                   l19841 3D2C  
                                                   l19747 6396  
                                                   l19915 8A78  
                                                   l19931 8A9C  
                                                   l19771 6748  
                                                   l19843 3D32  
                                                   l19941 5BE0  
                                                   l19597 55E4  
                                                   l19669 8718  
                                                   l19861 3D84  
                                                   l19837 3D22  
                                                   l19927 8A94  
                                                   l19919 8A7E  
                                                   l19871 3DFE  
                                                   l19855 3D74  
                                                   l19945 5C1C  
                                                   l19785 67DA  
                                                   l19881 3EA4  
                                                   l19873 3E22  
                                                   l19849 3D42  
                                                   l19963 5CE2  
                                                   l19779 6786  
                                                   l19883 3EC0  
                                                   l19875 3E3E  
                                                   l19867 3DB6  
                                                   l19949 5C54  
                                                   l19885 3ED8  
                                                   l19877 3E5A  
                                                   l19869 3DE2  
                                                   l19893 3F1E  
                                                   l19887 3EF2  
                                                   l19879 3E88  
                                                   l19895 3F82  
                                                   l19985 51D6  
                                                   l19889 3F0C  
                                                   l19979 51D2  
                                                   l19899 3F90  
                                                   l19997 5210  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 7AD8  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 7F98  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 7A54  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 8AA0  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 8E08  
                                            _zeroCrossing 0192  
                                         __end_of___lldiv 7B5A  
                                                   u20000 4822  
                                                   u20020 482C  
                                                   _T1CLK 000FD2  
                                                   u20200 4928  
                                                   u20120 48E4  
                                                   u20040 4836  
                                                   u12120 7A16  
                                                   u20140 48F0  
                                                   u20060 4858  
                                         ___awdiv@divisor 0016  
                                                   u20160 48FA  
                                                   _T1CON 000FCF  
                                                   u20340 3AA8  
                                                   u20180 4904  
                                                   u20430 3B30  
                                                   u20270 3A26  
                                                   u22008 875A  
                                                   u22200 7094  
                                                   u20520 3BBE  
                                                   u20360 3AC4  
                                                   u20280 3A34  
                                                   _T2CON 000FBD  
                                                   u22009 876C  
                                                   u22130 700A  
                                                   u20290 3A44  
                                                   u23010 520C  
                                                   u20620 3C58  
                                                   u22150 7046  
                                                   u20710 3CE8  
                                                   u22048 85E2  
                                                   u22160 7054  
                                                   u22049 85F4  
                                                   u20570 3C12  
                                                   u20490 3BA6  
                                                   u24010 3382  
                                                   u22180 7072  
                                                   u20660 3C84  
                                                   u22420 8324  
                                                   u22405 6E0C  
                                                   u22190 7086  
                                                   u20670 3C8C  
                                                   u15310 7D72  
                                                   u25000 464E  
                                                   u13720 7B0A  
                                                   u22450 8376  
                                                   u15420 76FA  
                                                   u23340 793C  
                                                   u23420 4BFC  
                                                   u24220 35FA  
                                                   u24060 343C  
                                                   _T2HLT 000FBE  
                                                   u13750 861C  
                                                   u15350 7DA8  
                                                   u25030 4672  
                                                   u24150 351E  
                                                   u23600 4D16  
                                                   u13680 8B80  
                                                   u22385 6D9C  
                                                   u21930 9212  
                                                   u14810 56AA  
                                                   u14730 6A76  
                                                   u15370 8A3A  
                                                   u22730 67E8  
                                                   u23530 4CC4  
                                                   u23450 4C40  
                                                   u23531 4CC2  
                                                   u14820 56C2  
                                                   u15380 8A50  
                                                   u22660 6378  
                                                   u24180 3558  
                                                   u25310 4E66  
                                                   u22670 6744  
                                                   u23470 4C50  
                                                   u25070 46CC  
                                                   u23375 8492  
                                                   u24360 538E  
                                                   u23480 4C60  
                                                   u25160 4742  
                                                   u18201 2D44  
                                                   u18121 29D2  
                                                   u14850 5706  
                                                   u23730 7FB8  
                                                   u22770 8794  
                                                   u23490 4C68  
                                                   u26210 1B0C  
                                                   u24290 722E  
                                                   u27010 1336  
                                                   u18211 2D74  
                                                   u18131 2BB6  
                                                   u14860 5718  
                                                   u19100 8122  
                                                   u25500 4F46  
                                                   u23580 4CFE  
                                                   u26300 1BAA  
                                                   u26220 1B14  
                                                   u27020 133C  
                                                   u18221 2DA2  
                                                   u18141 2BE4  
                                                   u26301 1BA8  
                                                   u21958 785E  
                                                   u18230 91CC  
                                                   u23750 7FDA  
                                                   u25350 4E8A  
                                                   u23670 4D84  
                                                   u23590 4D0E  
                                                   u26230 1B2E  
                                                   u27110 1430  
                                                   u27030 1352  
                                                   u21959 7870  
                                                   u18151 2C32  
                                                   u26231 1B2C  
                                                   u27031 1350  
                                                   u22880 8A82  
                                                   u25600 4FC0  
                                                   u26320 1C02  
                                                   u27200 1536  
                                                   u27120 1436  
                                                   u18161 2C60  
                                                   u25601 4FBE  
                                                   u26321 1C00  
                                                   u24570 54AC  
                                                   u23770 8032  
                                                   u23690 4DAC  
                                                   u26330 1C10  
                                                   u26170 1A8E  
                                                   u18171 2C90  
                                                   u21988 7D18  
                                                   u22980 51AE  
                                                   u25700 412C  
                                                   u25540 4F76  
                                                   u25380 4EAA  
                                                   u26260 1B64  
                                                   u23940 23EE  
                                                   u27300 165E  
                                                   u21989 7D2A  
                                                   u18181 2CBE  
                                                   u27205 1532  
                                                   u21998 82A4  
                                                   u19310 6624  
                                                   u26510 1D6E  
                                                   u26350 1C4A  
                                                   u23950 32F0  
                                                   u27230 15E0  
                                                   u21999 82B6  
                                                   u18191 2D16  
                                                   u19400 6664  
                                                   u24680 5110  
                                                   u26600 1E0C  
                                                   u26440 1D04  
                                                   u26360 1C64  
                                                   u26280 1B88  
                                                   u23960 32F6  
                                                   u27240 15E6  
                                                   u27160 14A4  
                                                   u28120 267E  
                                                   u26361 1C62  
                                                   u19330 6630  
                                                   u25730 415E  
                                                   u25650 4052  
                                                   u24930 459E  
                                                   u26530 1D9C  
                                                   u26450 1D0A  
                                                   u26290 1B90  
                                                   u27250 161A  
                                         __end_of___lwdiv 864C  
                                                   u27251 1618  
                                                   u27155 148E  
                                                   u26540 1DB8  
                                                   u26460 1D2E  
                                                   u26380 1CA8  
                                                   u28140 26B6  
                                                   u26541 1DB6  
                                                   u26461 1D2C  
                                                   u26381 1CA6  
                                                   u27165 14A0  
                                                   u27510 5FA0  
                                                   u27430 5EFA  
                                                   u19510 66CC  
                                                   u24790 732E  
                                                   u25830 420E  
                                                   u25750 416A  
                                                   u24950 4600  
                                                   u26550 1DC6  
                                                   u26390 1CB6  
                                                   u27270 1630  
                                                   u28230 2730  
                                                   u27520 5FAE  
                                                   u19600 671A  
                                                   u25760 4182  
                                                   u25680 4118  
                                                   u24880 4560  
                                                   u26640 1EEA  
                                                   u27360 16E6  
                                                   u27280 1644  
                                                   u27361 16E4  
                                                   u27450 5F12  
                                                   u19610 6722  
                                                   u24970 4614  
                                                   u26490 1D62  
                                                   u28410 2848  
                                                   u28250 2740  
                                                   u18635 8FF8  
                                                   u27195 1520  
                                                   u27540 5FC8  
                                                   u19620 672A  
                                                   u19540 66E4  
                                                   u19380 6658  
                                                   u18636 8FFA  
                                                   u27700 5A9C  
                                                   u25860 422E  
                                                   u28180 2702  
                                                   u27285 1640  
                                                   u19470 669C  
                                                   u19630 8656  
                                                   u25790 41C8  
                                                   u26670 1F04  
                                                   u26590 1E06  
                                                   u25950 18B2  
                                                   u26830 105A  
                                                   u27480 5F4C  
                                                   u27720 5AC2  
                                                   u26680 1F20  
                                                   u28600 2932  
                                                   u28360 2802  
                                                   u19641 8664  
                                                   u26681 1F1E  
                                                   u28361 2800  
                                                   u27730 5AD6  
                                                   u26690 1F2E  
                                                   u28530 28CC  
                                                   u27580 8402  
                                                   u19740 81C6  
                                                   u25980 18E4  
                                                   u28700 3740  
                                                   _T2TMR 000FBB  
                                                   u27590 8434  
                                                   u19910 47D0  
                                                   u27910 24BE  
                                                   u19920 47DE  
                                                   u28720 3762  
                                                   u27841 600A  
                                                   u19930 47EE  
                                                   u27690 5A8E  
                                                   u28650 36CE  
                                                   u26970 128A  
                                                   u28570 291A  
                                                   u28490 28AE  
                                                   _T2RST 000FC0  
                                                   u19931 47EC  
                                                   u27780 5B26  
                                                   u26980 12E6  
                                                   u27940 2522  
                                                   u26965 1274  
                                                   u19950 4802  
                                                   u28830 38C0  
                                                   u28670 3708  
                                                   u26990 12EC  
                                                   u27871 605C  
                                                   u26975 1286  
                                                   u28911 5DEE  
                                                   u27881 60BA  
                                                   i2l106 8B6A  
                                                   u27891 60FC  
                                                   u19980 4816  
                                                   u28870 38FE  
                                                   u28957 7EAA  
                                                   u28967 7F1E  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 8E5A  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 8AD8  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 833A  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 8B3E  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 8EF2  
                                        __end_of_TMR1_ISR 8A2A  
                                        __end_of_TMR2_ISR 628A  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 018C  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 8A2A  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 0196  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 892A  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 6D4C  
                                         __end_of_sm_init 84FA  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 29A8  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 9358  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 9356  
                                         _TMR1_WriteTimer 9018  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 6842  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 7168  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 7C58  
                                            __end_of_main 5E72  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 77A8  
                                          _refreshCurrent 881A  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 8C52  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 794A  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 922C  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 569C  
                              _validateRemoteSerialNumber 5500  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 7D4E  
                                      __end_of_I2C1_DO_TX 78C0  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 873A  
                  __end_of_SetSegmentValueIntermitentMain 919A  
                          _SetSegmentValueIntermitentMain 9186  
                                      __end_of_I2C1_Close 8FA2  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 59D0  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 70A2  
                                                  i2l1147 902A  
                                                  i2l2019 5956  
                                                  i2l2123 797A  
                                                  i2l2135 79CE  
                                                  i2l2128 7998  
                                                  i2l2217 4B86  
                                                  i2l1266 6194  
                                                  i2l2235 713C  
                                                  i2l2323 7E3A  
                                                  i2l1277 621E  
                                                  i2l2318 7E30  
                                                  i2l2190 4AA8  
                                                  i2l1615 4454  
                                                  i2l2186 49C2  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 7E3E  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 6B56  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 768C  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 8B0C  
                                 __end_ofi2_GetMotorPower 7168  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                    __end_of_sm_execute_menuConfiguration 1886  
                            _sm_execute_menuConfiguration 0F22  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 78C0  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 8280  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 8E08  
                    __end_of_TMR1_DefaultInterruptHandler 9354  
                            _TMR1_DefaultInterruptHandler 9352  
                                  __end_of_refreshCurrent 8860  
                                           ?_read_package 0011  
                                                  ___lmul 84FA  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 8EA6  
                                  __end_of_refreshSegment 79D0  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 3D02  
                             __end_of_keeloqDecryptPacket 5198  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 88A4  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 71DE  
                                                  clear_1 71EA  
                                                  clear_2 71F6  
                                                  clear_3 7202  
                                                  clear_4 720E  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 1F94  
                              _sm_execute_ControlLearning 1886  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 869C  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 91FC  
                                          _PMD_Initialize 8FFC  
                                              _StateTRIAC 0190  
                                           ?_eusartparser 003A  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 83F2  
                                    __end_of_ControlMotor 4998  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 4284  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 90CE  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 9034  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 92AA  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 904E  
                                        ?_TMR1_Initialize 0001  
                                       _SYSTEM_Initialize 8BA0  
                              __end_of_actionZone_Opening 474E  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 7214  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E0  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 1F94  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 8E32  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 8FC4  
                                 _rdBlkRegCompleteHandler 89AA  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 90FE  
                                            __pidataBANK0 934C  
                                            __pidataBANK1 931A  
                                            __pidataBANK2 934E  
                                            __pidataBANK3 8EF2  
                                     ??_SYSTEM_Initialize 0014  
                        __end_of_I2C1_MasterEnableRestart 9340  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 9018  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 881A  
                                          ??_eusartparser 00DC  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 6732  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 904E  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 7562  
                                   __end_of_I2C1_DO_RESET 9286  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 90E6  
                             VerifyFollowMe@securityClose 0010  
                               __end_of_SYSTEM_Initialize 8BCE  
                                     __end_of_ShowVersion 821E  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 24A0  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 92AA  
                       _EUSART1_TxDefaultInterruptHandler 02ED  
                                            _GetOpenOrder 5198  
                                    __end_of_InitSoftStop 87D2  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 8D5A  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 6C52  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 8D2E  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 833A  
                                   _rd1RegCompleteHandler 8D5A  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 92C2  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 8D86  
                         __end_of_EUSART1_SetErrorHandler 927C  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 924A  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 628A  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 86EC  
                                         _I2C1_MasterOpen 9116  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 9338  
                                         _I2C1_Initialize 919A  
                                     __end_of_I2C1_Poller 91E0  
                                __end_of_setFlashLigth_ON 8A66  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 8FE0  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 5CF0  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BD  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 0189  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 9272  
                          _EUSART1_SetFramingErrorHandler 9268  
                                    _refreshADCZeroOffset 6A58  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 7D4E  
                                                 i2l14203 445E  
                                                 i2l14123 42A6  
                                                 i2l14215 4482  
                                                 i2l14127 42BC  
                                                 i2l14119 4296  
                                                 i2l14225 44AA  
                                                 i2l14209 446C  
                                                 i2l14129 42C4  
                                                 i2l14219 4492  
                                                 i2l14171 43B2  
                                                 i2l14155 434A  
                                                 i2l14139 42F8  
                                                 i2l14323 4B2C  
                                                 i2l14173 43B8  
                                                 i2l14149 4324  
                                                 i2l14229 44C2  
                                                 i2l14261 49F4  
                                                 i2l12567 8FC0  
                                                 i2l14191 4414  
                                                 i2l14183 43EC  
                                                 i2l14167 4392  
                                                 i2l14335 4B6A  
                                                 i2l14263 49FE  
                                                 i2l14247 49B8  
                                                 i2l14169 43A2  
                                                 i2l14347 4BA6  
                                                 i2l14291 4A7C  
                                                 i2l14269 4A18  
                                                 i2l14279 4A42  
                                                 i2l14359 8560  
                                                 i2l14383 799C  
                                                 i2l16303 616C  
                                                 i2l16233 8B64  
                                                 i2l14393 79CA  
                                                 i2l13923 70F2  
                                                 i2l13915 70B6  
                                                 i2l14299 4ABA  
                                                 i2l16253 755C  
                                                 i2l13925 70FE  
                                                 i2l13935 712C  
                                                 i2l16319 61B6  
                                                 i2l13945 715E  
                                                 i2l16361 6252  
                                                 i2l16353 6236  
                                                 i2l16329 61E0  
                                                 i2l13971 7E26  
                                                 i2l16339 6202  
                                                 i2l13965 7E0A  
                                                 i2l16367 626A  
                                                 i2l16295 6158  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 920A  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 7A54  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 91E0  
                                              _auxCounter 00F8  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 92F6  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 81B8  
                                            _classic_data 0292  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 6F10  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 0198  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 8D02  
          _rd1RegCompleteHandler@i2c1_master_example$F500 8CD6  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 8CD6  
          _rd2RegCompleteHandler@i2c1_master_example$F511 8CAA  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 8DDE  
          _wr2RegCompleteHandler@i2c1_master_example$F523 8DB2  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 8CAA  
                               __end_of_I2C1_DO_SEND_STOP 92CA  
          _wr1RegCompleteHandler@i2c1_master_example$F517 8C7E  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 89AA  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 896A  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 8550  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 8BFA  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 32D4  
                              __end_of_clearLearningValue 7CD4  
                                                 _NextHop 028E  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 32D4  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 9222  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 86EC  
                                                 ___awdiv 79D0  
                                                 ___lbdiv 8A66  
                                                 ___lbmod 8DDE  
                                                 ___lldiv 7AD8  
                                              _readInputs 6950  
                                         _controlVelocity 4BBA  
                                                 ___lwdiv 85FA  
                                           _OpenFullOrder 8E80  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 660E  
                           _setPositionInvertionInClosing 64E6  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 91C0  
                                          getHopCode@data 0016  
                                                 _difTime 018F  
                                                 __pcinit 7168  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 92F0  
                                                 __ptext0 5CF0  
                                                 __ptext1 24A0  
                                                 __ptext2 0F22  
                                                 __ptext3 1F94  
                                                 __ptext4 3D02  
                                                 __ptext5 9034  
                                                 __ptext6 32D4  
                                                 __ptext7 7F28  
                                                 __ptext8 92EA  
                                                 __ptext9 86EC  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A2  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 933C  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 9216  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 6F10  
                           _setPositionInvertionInOpening 6E34  
                                                 _lastKey 0194  
                                              _readbutton 80E4  
                                   _OSCILLATOR_Initialize 9146  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 81B8  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 9068  
                               __end_of_I2C1_MasterSetIrq 92FC  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 82DE  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 771C  
                                      _EUSART1_Initialize 7BDA  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 6C52  
                                                 _sm_init 84A4  
                                          _BufferRF_12BIT 0187  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 869C  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                           _OpenWalkOrder 8008  
                                    _zeroCrossingWaitTime 02EF  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 92E2  
                                    end_of_initialization 7214  
                              __end_of_I2C1_MasterSendAck 9302  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 9308  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 9330  
                             _EUSART1_OverrunErrorHandler 02E7  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 7EB4  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 91EE  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 821E  
                            __end_of_sm_get_current_state 91C0  
                                               i2u1307_40 8E22  
                                               i2u1404_40 4338  
                                               i2u1406_40 4362  
                                               i2u1422_40 49B2  
                                               i2u1407_40 4372  
                                               i2u1408_40 4382  
                                               i2u1417_40 4480  
                                               i2u1441_40 4AE0  
                                               i2u1442_40 4AEE  
                                               i2u1434_40 4A70  
                                               i2u1451_40 4B52  
                                               i2u1435_40 4A76  
                                               i2u1380_40 710C  
                                               i2u1381_40 711A  
                                               i2u1445_40 4B0C  
                                               i2u1429_40 4A12  
                                               i2u1454_40 4B76  
                                               i2u1470_40 594A  
                                               i2u1462_45 8578  
                                               i2u1383_40 7138  
                                               i2u1455_40 4B7E  
                                               i2u1447_40 4B22  
                                               i2u1471_40 59BE  
                            __end_of_I2C1_DO_SEND_RESTART 92D2  
                                               i2u1384_40 714C  
                                               i2u1392_40 7E20  
                                               i2u1464_40 795A  
                                               i2u1385_40 715A  
                                               i2u1457_40 4B9E  
                                               i2u2176_48 003E  
                                               i2u1378_40 70D0  
                                               i2u1466_40 79AC  
                                    __end_of_eusartparser 613C  
                                               i2u1388_40 7DEA  
                                               i2u2179_48 0056  
                                         _WWDT_TimerClear 8FE0  
                                 __end_of_I2C1_MasterOpen 912E  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1830_48 751E  
                                               i2u1399_40 42BC  
                                               i2u1830_49 7530  
                                               i2u1832_48 7548  
                                   __end_of_ControlLights 3D02  
                                               i2u1850_40 61CC  
                                               i2u1834_48 8EE0  
                                               i2u1828_48 74F2  
                                               i2u1828_49 7504  
                                 __end_of_I2C1_MasterStop 933C  
                                               i2u1838_48 8A18  
                                               i2u1862_48 6278  
                                               i2u1847_40 61A8  
                                 __end_of_I2C1_Initialize 91AE  
                                         ___lldiv@divisor 0014  
                                   __end_of_ControlInputs 6732  
                   __end_of_EUSART1_SetRxInterruptHandler 925E  
                           _EUSART1_SetRxInterruptHandler 9254  
                                             _I2C1_Poller 91D0  
                                               i2u2897_47 9166  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 9320  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 9348  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 474E  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 9302  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 9116  
                             _I2C1_SetAddressNackCallback 90FE  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 6D4C  
                                              _sm_restart 8860  
                        __end_of_ADCC_GetSingleConversion 9172  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D9  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 92DA  
                              _I2C1_DO_SEND_RESTART_WRITE 92D2  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 9240  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 89EA  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 6B56  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 9222  
                                     _ControlCounterMoves 83F2  
                            _controlLearning_stateMachine 02B2  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 8E32  
                                 __end_of_WWDT_Initialize 922C  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 87D2  
                                      ?_saveEnergyADCHist 0010  
                       __end_of_GetSecurityStateInClosing 7422  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 8B3E  
                                       _controlLearnDigit 8B70  
                                 __end_of_controlVelocity 4DD8  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01F8  
                                      _actionZone_Closing 3FF8  
                                    __end_of_RemoveSerial 7BDA  
                                          __end_of_HopCHK 794A  
                                      __end_of_CloseOrder 8E80  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 9034  
                               _ControlDecelarationFactor 90B6  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 0290  
                       __end_of_GetSecurityStateInOpening 74C8  
                                       setRGB_ON@RGBLigth 0015  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 9328  
                                      _actionZone_Opening 44FA  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 9352  
                            _TMR2_DefaultInterruptHandler 9350  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 8550  
                                   __end_of_LoadManufCode 8F5E  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 8ECC  
                                          _I2C1_DO_RX_ACK 92BA  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 8150  
                                            _InitSoftStop 8788  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 7DC6  
                                          __end_of_memcpy 88E8  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 8008  
                            __end_of_getCurrentComparator 5836  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 6950  
                                           _saveNewSerial 7F28  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 9338  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 92EA  
                                       _read_eusartparser 29A8  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 7168  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 44FA  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 7F28  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 8E5A  
                                 __end_of_WWDT_TimerClear 8FFC  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 896A  
                                 __end_of_WWDT_SoftEnable 9324  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 8B0C  
                                               _ReqResync 90CE  
                               __end_of_controlLearnDigit 8BA0  
                                     ??_read_eusartparser 0019  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 3694  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 721E  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 92C2  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0193  
                                          _VerifyFollowMe 8F18  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 8FA2  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00F8  
                                             __pdataBANK1 01F9  
                                             __pdataBANK2 02EF  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                       _controlMotorForce 4998  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 2EB0  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 915C  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 8396  
                                               _StopOrder 8FC4  
                                    _sm_get_current_state 91AE  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 92CA  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02EB  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 5B66  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 929A  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 9290  
                                           _GetMotorPower 6FDC  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 72D2  
                           I2C1_SetAddressNackCallback@cb 0015  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E3  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FE  
                                               __pnvBANK2 02DD  
                                   _rd2RegCompleteHandler 8D2E  
                                        _InitWalkAutoTime 9172  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 9082  
                             __end_of_SetSegmentValueMain 9068  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 7562  
                                  __end_of_VerifyFollowMe 8F3C  
                                   _wr2RegCompleteHandler 8D02  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 864C  
                                          _I2C1_MasterFsm 85A6  
                              __end_of_checkNVM_VarSystem 5500  
                        __end_of_TMR1_SetInterruptHandler 9240  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 919A  
                                               __ptext101 7BDA  
                                                ?___lbdiv 0010  
                                               __ptext110 7D4E  
                                               __ptext102 924A  
                                               __ptext111 39DE  
                                               __ptext103 9254  
                                               __ptext200 9354  
                                               __ptext120 8E32  
                                               __ptext112 768C  
                                               __ptext104 925E  
                                               __ptext201 8B3E  
                                               __ptext121 6A58  
                                               __ptext113 91E0  
                                               __ptext105 9268  
                                               __ptext202 74C8  
                                               __ptext130 90FE  
                                               __ptext122 85FA  
                                               __ptext114 8A2A  
                                               __ptext106 9272  
                                               __ptext203 930E  
                                               __ptext131 7A54  
                                               __ptext123 569C  
                                               __ptext115 660E  
                                               __ptext107 869C  
                                               __ptext204 9356  
                                               __ptext140 92AA  
                                               __ptext132 9116  
                                               __ptext124 8EA6  
                                               __ptext116 5E72  
                                               __ptext108 91C0  
                                               __ptext205 9314  
                                               __ptext141 92B2  
                                               __ptext133 929A  
                                               __ptext125 6FDC  
                                               __ptext117 881A  
                                               __ptext109 474E  
                                               __ptext206 8FA2  
                                               __ptext150 91EE  
                                               __ptext142 92BA  
                                               __ptext134 8C52  
                                               __ptext126 83F2  
                                               __ptext118 6C52  
                                               __ptext207 0000  
                                               __ptext151 91FC  
                                               __ptext143 92C2  
                                               __ptext135 91D0  
                                               __ptext127 8AA0  
                                               __ptext119 77A8  
                                               __ptext160 932C  
                                               __ptext152 9290  
                                               __ptext144 92CA  
                                               __ptext136 92A2  
                                               __ptext128 7EB4  
                                               __ptext161 9330  
                                               __ptext153 8280  
                                               __ptext145 92D2  
                                               __ptext137 85A6  
                                               __ptext129 88A4  
                                               __ptext170 8D5A  
                                               __ptext162 9334  
                                               __ptext154 92F6  
                                               __ptext146 92DA  
                                               __ptext138 873A  
                                               __ptext171 8D86  
                                               __ptext163 896A  
                                               __ptext155 920A  
                                               __ptext147 9286  
                                               __ptext139 927C  
                                               __ptext180 9344  
                                               __ptext172 8DB2  
                                               __ptext164 8C7E  
                                               __ptext156 92E2  
                                               __ptext148 7CD4  
                                               __ptext181 9348  
                                               __ptext173 912E  
                                               __ptext165 8CAA  
                                               __ptext157 92FC  
                                               __ptext149 7834  
                                               __ptext190 8550  
                                               __ptext182 9308  
                                               __ptext174 8076  
                                               __ptext166 8CD6  
                                               __ptext158 9328  
                                               __ptext191 915C  
                                               __ptext175 909C  
                                               __ptext167 89AA  
                                               __ptext159 9302  
                                               __ptext192 89EA  
                                               __ptext184 613C  
                                               __ptext176 9338  
                                               __ptext168 8D02  
                                               __ptext193 4998  
                                               __ptext185 794A  
                                               __ptext177 933C  
                                               __ptext169 8D2E  
                                               __ptext194 7DC6  
                                               __ptext186 9216  
                                               __ptext178 9340  
                                               __ptext195 70A2  
                                               __ptext187 5836  
                                               __ptext179 8F80  
                                               __ptext196 9018  
                                               __ptext188 8E08  
                                               __ptext197 9352  
                                               __ptext189 9350  
                                               __ptext198 8ECC  
                                               __ptext199 4284  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 4BBA  
                                                ?___lwdiv 0010  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                 _I2C1_MasterWaitForEvent 92A2  
                                        _I2C1_MasterClose 9348  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 909C  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 9340  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 929A  
                                      _clearLearningValue 7C58  
                                      _write_eusartparser 2EB0  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 0195  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 9314  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 930E  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 7E3E  
                                            _eusartparser 5FE6  
                                    _EUSART1_ErrorHandler 02E5  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 9272  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 9334  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0014  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 5B66  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 768C  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 9324  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 8076  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 7CD4  
                                              _I2C1_DO_TX 7834  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 569C  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FD  
                                     _DecryptPacket_12BIT 771C  
                                              _I2C1_Close 8F80  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 85FA  
                            __end_of_I2C1_MasterGetRxData 932C  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 9216  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0185  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 92FC  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 7834  
                               _I2C1_DO_SEND_RESTART_READ 92DA  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 3FF8  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 8ECC  
                                                _TMR1_ISR 89EA  
                                                _TMR2_ISR 613C  
                                           _getKeyPressed 90E6  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 90B6  
                                               _temppower 018E  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 9146  
                            _I2C1_SetDataCompleteCallback 912E  
                                      _I2C1_MasterStartRx 932C  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 92F0  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 7EB4  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 8AD8  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019A  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 8788  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 72D2  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 9082  
                                            _RemoveSerial 7B5A  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 91FC  
                                       _actionZone_Opened 4DD8  
                                           _I2C1_DO_RESET 927C  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C8  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 717C  
                                               copy_data1 71B4  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 018D  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 63B8  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 7F98  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 8C7E  
                                            _NormalKeyGen 6842  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 9254  
                           _EUSART1_SetTxInterruptHandler 924A  
                                           _sm_send_event 82DE  
                                     _keeloqDecryptPacket 4FC6  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01ED  
                                   _I2C1_MasterDisableIrq 9344  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 3694  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 5836  
                                _TMR1_SetInterruptHandler 9236  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 737C  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 737C  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DF  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 931A  
                             _EUSART1_DefaultErrorHandler 9314  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 91D0  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 4FC6  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 7422  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0016  
                                                __ptext10 75FA  
                                                __ptext11 7B5A  
                                                __ptext20 3694  
                                                __ptext12 721E  
                                                __ptext21 1886  
                                                __ptext13 8DDE  
                                                __ptext30 6732  
                                                __ptext22 8150  
                                                __ptext14 79D0  
                                                __ptext31 8788  
                                                __ptext23 84A4  
                                                __ptext15 904E  
                                                __ptext40 8FC4  
                                                __ptext32 90B6  
                                                __ptext24 8860  
                                                __ptext16 92F0  
                                                __ptext41 737C  
                                                __ptext33 4DD8  
                                                __ptext25 7C58  
                                                __ptext17 8B70  
                                                __ptext50 9172  
                                                __ptext42 72D2  
                                                __ptext34 8F18  
                                                __ptext26 821E  
                                                __ptext18 6B56  
                                                __ptext51 7422  
                                                __ptext43 7F98  
                                                __ptext35 8E5A  
                                                __ptext27 44FA  
                                                __ptext19 7AD8  
                                                __ptext60 4FC6  
                                                __ptext52 8BCE  
                                                __ptext44 8E80  
                                                __ptext36 3FF8  
                                                __ptext28 6E34  
                                                __ptext61 8AD8  
                                                __ptext53 5198  
                                                __ptext45 9068  
                                                __ptext37 64E6  
                                                __ptext29 4BBA  
                                                __ptext70 771C  
                                                __ptext62 844C  
                                                __ptext54 8A66  
                                                __ptext46 8008  
                                                __ptext38 6D4C  
                                                __ptext71 5500  
                                                __ptext63 6842  
                                                __ptext55 9186  
                                                __ptext47 82DE  
                                                __ptext39 84FA  
                                                __ptext80 2EB0  
                                                __ptext72 6950  
                                                __ptext64 8F3C  
                                                __ptext56 80E4  
                                                __ptext48 91AE  
                                                __ptext81 29A8  
                                                __ptext73 63B8  
                                                __ptext65 6F10  
                                                __ptext57 864C  
                                                __ptext49 833A  
                                                __ptext90 8C26  
                                                __ptext82 8BFA  
                                                __ptext74 7E3E  
                                                __ptext66 78C0  
                                                __ptext58 87D2  
                                                __ptext91 922C  
                                                __ptext83 892A  
                                                __ptext75 5360  
                                                __ptext67 628A  
                                                __ptext59 59D0  
                                                __ptext92 88E8  
                                                __ptext84 8FE0  
                                                __ptext76 5B66  
                                                __ptext68 90CE  
                                                __ptext93 9236  
                                                __ptext85 9320  
                                                __ptext77 8396  
                                                __ptext69 8B0C  
                                                __ptext94 8F5E  
                                                __ptext86 81B8  
                                                __ptext78 90E6  
                                                __ptext95 9240  
                                                __ptext87 9082  
                                                __ptext79 5FE6  
                                                __ptext96 8FFC  
                                                __ptext88 8BA0  
                                                __ptext97 7562  
                                                __ptext89 9222  
                                                __ptext98 9146  
                                                __ptext99 9324  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E2  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
                ?_rd2RegCompleteHandler@pic18f46k40$F7710 0019  
               ??_rd2RegCompleteHandler@pic18f46k40$F7712 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7704 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7706 001B  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7722 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7724 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7716 0019  
               ??_wr2RegCompleteHandler@pic18f46k40$F7718 001B  
                                                _learn_st 0060  
                ?_wr1RegCompleteHandler@pic18f46k40$F7696 0019  
               ??_wr1RegCompleteHandler@pic18f46k40$F7698 001B  
                                      __end_of_readInputs 6A58  
                                _I2C1_CallbackReturnReset 9330  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 9356  
                            _TMR0_DefaultInterruptHandler 9354  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 930E  
                            __end_of_I2C1_DO_RX_NACK_STOP 92BA  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 5E72  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 8150  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 92F6  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 8BFA  
                              _SetSegmentValueIntermitent 8BCE  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 92B2  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 63B8  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 909C  
                           __end_of_I2C1_DO_SEND_ADR_READ 920A  
                             _EUSART1_FramingErrorHandler 02E9  
                                            _I2C1_DO_IDLE 9290  
                                     _EUSART1_Receive_ISR 74C8  
                                            _I2C1_DO_RCEN 9286  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 92EA  
                             __end_of_I2C1_MasterSendNack 9308  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 6E34  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0191  
                                __end_of_InitWalkAutoTime 9186  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 018B  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 9328  
                                   _I2C1_MasterSendTxData 92E2  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 39DE  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 844C  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 934C  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 8396  
                                 readRFButtons@typeRemote 0197  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 88A4  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 5FE6  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 9344  
                                __end_of_I2C1_MasterWrite 92A2  
                                   __end_of_write_package 8C26  
                                             _tempCounter 01F9  
                  __end_of_EUSART1_SetOverrunErrorHandler 9268  
                          _EUSART1_SetOverrunErrorHandler 925E  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 9334  
                            __end_of_EUSART1_Transmit_ISR 8B70  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 39DE  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 660E  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 873A  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 64E6  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 84A4  
                           _keeloq_classic_decrypt_packet 844C  
                                   __end_of_OpenFullOrder 8EA6  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 0199  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 75FA  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 80E4  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 8C52  
                                         _TMR0_Initialize 8F5E  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 5360  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 8076  
                                            _sumEnergyADC 77A8  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 75FA  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 8D86  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 8280  
                                        sm_init@hist_mode 0016  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 8DB2  
                                   _TMR2_InterruptHandler 02DD  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 88E8  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 24A0  
