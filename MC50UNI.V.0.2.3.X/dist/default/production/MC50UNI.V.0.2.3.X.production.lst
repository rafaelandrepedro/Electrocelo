

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jul 15 17:37:46 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1,inline
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,inline
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1,inline
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,inline
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,inline
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1,inline
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1,inline
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1,inline
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   234                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   235                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   236                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   237  0000                     
   238                           ; Version 2.36
   239                           ; Generated 28/01/2022 GMT
   240                           ; 
   241                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   242                           ; All rights reserved.
   243                           ; 
   244                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   245                           ; 
   246                           ; Redistribution and use in source and binary forms, with or without modification, are
   247                           ; permitted provided that the following conditions are met:
   248                           ; 
   249                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   250                           ;        conditions and the following disclaimer.
   251                           ; 
   252                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   253                           ;        of conditions and the following disclaimer in the documentation and/or other
   254                           ;        materials provided with the distribution. Publication is not required when
   255                           ;        this file is used in an embedded application.
   256                           ; 
   257                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   258                           ;        software without specific prior written permission.
   259                           ; 
   260                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   261                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   262                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   263                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   264                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   265                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   266                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   267                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   268                           ; 
   269                           ; 
   270                           ; Code-generator required, PIC18F46K40 Definitions
   271                           ; 
   272                           ; SFR Addresses
   273  0000                     
   274                           	psect	idataBANK0
   275  009214                     __pidataBANK0:
   276                           	callstack 0
   277                           
   278                           ;initializer for _auxCounter
   279  009214  03E8               	dw	1000
   280                           
   281                           	psect	idataBANK1
   282  0091E4                     __pidataBANK1:
   283                           	callstack 0
   284                           
   285                           ;initializer for _tempCounter
   286  0091E4  3DDD               	dw	15837
   287  0091E6  000F               	dw	15
   288                           
   289                           	psect	idataBANK2
   290  009216                     __pidataBANK2:
   291                           	callstack 0
   292                           
   293                           ;initializer for _zeroCrossingWaitTime
   294  009216  19                 	db	25
   295  009217  19                 	db	25
   296                           
   297                           	psect	idataBANK3
   298  008DBE                     __pidataBANK3:
   299                           	callstack 0
   300                           
   301                           ;initializer for _DispTable
   302  008DBE  6F                 	db	111
   303  008DBF  21                 	db	33
   304  008DC0  76                 	db	118
   305  008DC1  73                 	db	115
   306  008DC2  39                 	db	57
   307  008DC3  5B                 	db	91
   308  008DC4  5F                 	db	95
   309  008DC5  61                 	db	97
   310  008DC6  7F                 	db	127
   311  008DC7  7B                 	db	123
   312  008DC8  7D                 	db	125
   313  008DC9  7F                 	db	127
   314  008DCA  4E                 	db	78
   315  008DCB  37                 	db	55
   316  008DCC  5E                 	db	94
   317  008DCD  5C                 	db	92
   318  008DCE  7C                 	db	124
   319  008DCF  3D                 	db	61
   320  008DD0  0E                 	db	14
   321  008DD1  2F                 	db	47
   322  008DD2  14                 	db	20
   323  008DD3  1E                 	db	30
   324  008DD4  07                 	db	7
   325  008DD5  45                 	db	69
   326  008DD6  10                 	db	16
   327  008DD7  0C                 	db	12
   328  008DD8  40                 	db	64
   329  008DD9  20                 	db	32
   330  008DDA  01                 	db	1
   331  008DDB  02                 	db	2
   332  008DDC  04                 	db	4
   333  008DDD  08                 	db	8
   334  008DDE  00                 	db	0
   335  008DDF  3B                 	db	59
   336  008DE0  1F                 	db	31
   337  008DE1  16                 	db	22
   338  008DE2  17                 	db	23
   339                           
   340                           	psect	smallconst
   341  000F00                     __psmallconst:
   342                           	callstack 0
   343  000F00  00                 	db	0
   344  000F01                     _i2c1_fsmStateTable:
   345                           	callstack 0
   346  000F01  5A                 	db	low _I2C1_DO_IDLE
   347  000F02  91                 	db	high _I2C1_DO_IDLE
   348  000F03  C6                 	db	low _I2C1_DO_SEND_ADR_READ
   349  000F04  90                 	db	high _I2C1_DO_SEND_ADR_READ
   350  000F05  B8                 	db	low _I2C1_DO_SEND_ADR_WRITE
   351  000F06  90                 	db	high _I2C1_DO_SEND_ADR_WRITE
   352  000F07  04                 	db	low _I2C1_DO_TX
   353  000F08  77                 	db	high _I2C1_DO_TX
   354  000F09  A2                 	db	low _I2C1_DO_RX
   355  000F0A  7B                 	db	high _I2C1_DO_RX
   356  000F0B  50                 	db	low _I2C1_DO_RCEN
   357  000F0C  91                 	db	high _I2C1_DO_RCEN
   358  000F0D  4E                 	db	low _I2C1_DO_TX_EMPTY
   359  000F0E  81                 	db	high _I2C1_DO_TX_EMPTY
   360  000F0F  A4                 	db	low _I2C1_DO_SEND_RESTART_READ
   361  000F10  91                 	db	high _I2C1_DO_SEND_RESTART_READ
   362  000F11  9C                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   363  000F12  91                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   364  000F13  94                 	db	low _I2C1_DO_SEND_RESTART
   365  000F14  91                 	db	high _I2C1_DO_SEND_RESTART
   366  000F15  8C                 	db	low _I2C1_DO_SEND_STOP
   367  000F16  91                 	db	high _I2C1_DO_SEND_STOP
   368  000F17  84                 	db	low _I2C1_DO_RX_ACK
   369  000F18  91                 	db	high _I2C1_DO_RX_ACK
   370  000F19  7C                 	db	low _I2C1_DO_RX_NACK_STOP
   371  000F1A  91                 	db	high _I2C1_DO_RX_NACK_STOP
   372  000F1B  74                 	db	low _I2C1_DO_RX_NACK_RESTART
   373  000F1C  91                 	db	high _I2C1_DO_RX_NACK_RESTART
   374  000F1D  46                 	db	low _I2C1_DO_RESET
   375  000F1E  91                 	db	high _I2C1_DO_RESET
   376  000F1F  BA                 	db	low _I2C1_DO_ADDRESS_NACK
   377  000F20  85                 	db	high _I2C1_DO_ADDRESS_NACK
   378  000F21                     __end_of_i2c1_fsmStateTable:
   379                           	callstack 0
   380  0000                     _T2CON	set	4029
   381  0000                     _T1CON	set	4047
   382  0000                     _T1CLK	set	4050
   383  0000                     _T1GATE	set	4049
   384  0000                     _T0CON0	set	4053
   385  0000                     _INLVLD	set	3874
   386  0000                     _SLRCOND	set	3875
   387  0000                     _ODCOND	set	3876
   388  0000                     _WPUD	set	3877
   389  0000                     _TRISD	set	3979
   390  0000                     _TRISC	set	3978
   391  0000                     _TRISB	set	3977
   392  0000                     _TRISA	set	3976
   393  0000                     _TRISE	set	3980
   394  0000                     _LATC	set	3973
   395  0000                     _LATB	set	3972
   396  0000                     _OSCTUNE	set	3805
   397  0000                     _OSCFRQ	set	3806
   398  0000                     _ADERRL	set	3950
   399  0000                     _ADERRH	set	3951
   400  0000                     _ADPREVL	set	3937
   401  0000                     _ADPREVH	set	3938
   402  0000                     _ADFLTRL	set	3954
   403  0000                     _ADFLTRH	set	3955
   404  0000                     _ADACCL	set	3952
   405  0000                     _ADACCH	set	3953
   406  0000                     _ADCNT	set	3943
   407  0000                     _ADRESL	set	3939
   408  0000                     _ADRESH	set	3940
   409  0000                     _ADACQ	set	3932
   410  0000                     _ADCON0	set	3936
   411  0000                     _ADCLK	set	3927
   412  0000                     _ADSTAT	set	3941
   413  0000                     _ADCON3	set	3931
   414  0000                     _ADCON2	set	3930
   415  0000                     _ADPRE	set	3934
   416  0000                     _ADSTPTH	set	3945
   417  0000                     _ADUTHH	set	3949
   418  0000                     _ADUTHL	set	3948
   419  0000                     _ADLTHH	set	3947
   420  0000                     _SP1BRGH	set	3996
   421  0000                     _TX1STA	set	3998
   422  000F21  00                 	db	0	; dummy byte at the end
   423  0000                     
   424                           	psect	nvBANK1
   425  0001FE                     __pnvBANK1:
   426                           	callstack 0
   427  0001FE                     _eusart1TxBufferRemaining:
   428                           	callstack 0
   429  0001FE                     	ds	1
   430                           
   431                           	psect	nvBANK2
   432  0002DB                     __pnvBANK2:
   433                           	callstack 0
   434  0002DB                     _TMR2_InterruptHandler:
   435                           	callstack 0
   436  0002DB                     	ds	2
   437  0002DD                     _TMR1_InterruptHandler:
   438                           	callstack 0
   439  0002DD                     	ds	2
   440  0002DF                     _timer1ReloadVal:
   441                           	callstack 0
   442  0002DF                     	ds	2
   443  0002E1                     _TMR0_InterruptHandler:
   444                           	callstack 0
   445  0002E1                     	ds	2
   446  0002E3                     _EUSART1_ErrorHandler:
   447                           	callstack 0
   448  0002E3                     	ds	2
   449  0002E5                     _EUSART1_OverrunErrorHandler:
   450                           	callstack 0
   451  0002E5                     	ds	2
   452  0002E7                     _EUSART1_FramingErrorHandler:
   453                           	callstack 0
   454  0002E7                     	ds	2
   455  0002E9                     _EUSART1_RxDefaultInterruptHandler:
   456                           	callstack 0
   457  0002E9                     	ds	2
   458  0002EB                     _EUSART1_TxDefaultInterruptHandler:
   459                           	callstack 0
   460  0002EB                     	ds	2
   461  0000                     _WDTCON0bits	set	3794
   462  0000                     _TMR0IE	set	30229
   463  0000                     _TMR0IF	set	30293
   464  0000                     _LATEbits	set	3975
   465  0000                     _LATDbits	set	3974
   466  0000                     _LATAbits	set	3971
   467  0000                     _LATCbits	set	3973
   468  0000                     _PORTB	set	3982
   469  0000                     _T1CONbits	set	4047
   470  0000                     _SSP1CON2bits	set	3991
   471  0000                     _SSP1CON1bits	set	3990
   472  0000                     _ADCON0bits	set	3936
   473  0000                     _RC1STAbits	set	3997
   474  0000                     _GIE	set	32663
   475  0000                     _RX1PPS	set	3765
   476  0000                     _SSP1CLKPPS	set	3767
   477  0000                     _PIE0bits	set	3778
   478  0000                     _PIE3bits	set	3781
   479  0000                     _PIE4bits	set	3782
   480  0000                     _PIR0bits	set	3786
   481  0000                     _PIR3bits	set	3789
   482  0000                     _ADACT	set	3926
   483  0000                     _ADREF	set	3928
   484  0000                     _ADCON1	set	3929
   485  0000                     _ADCAP	set	3933
   486  0000                     _ADPCH	set	3935
   487  0000                     _ADRPT	set	3942
   488  0000                     _ADSTPTL	set	3944
   489  0000                     _ADLTHL	set	3946
   490  0000                     _RC1REG	set	3993
   491  0000                     _TX1REG	set	3994
   492  0000                     _SP1BRGL	set	3995
   493  0000                     _RC1STA	set	3997
   494  0000                     _BAUD1CON	set	3999
   495  0000                     _T2TMR	set	4027
   496  0000                     _T2PR	set	4028
   497  0000                     _T2HLT	set	4030
   498  0000                     _T2CLKCON	set	4031
   499  0000                     _TMR1L	set	4045
   500  0000                     _TMR1H	set	4046
   501  0000                     _T1GCON	set	4048
   502  0000                     _TMR0L	set	4051
   503  0000                     _TMR0H	set	4052
   504  0000                     _T0CON1	set	4054
   505  0000                     _PCON0bits	set	4055
   506  0000                     _INTCONbits	set	4082
   507  0000                     _LATA	set	3971
   508  0000                     _LATD	set	3974
   509  0000                     _LATE	set	3975
   510  0000                     _SSP1BUF	set	3986
   511  0000                     _SSP1ADD	set	3987
   512  0000                     _SSP1STAT	set	3989
   513  0000                     _SSP1CON2	set	3991
   514  0000                     _SSP1CON1	set	3990
   515  0000                     _WDTCON0	set	3794
   516  0000                     _OSCCON1	set	3800
   517  0000                     _PIR4bits	set	3790
   518  0000                     _OSCCON3	set	3802
   519  0000                     _OSCEN	set	3804
   520  0000                     _PMD0	set	3809
   521  0000                     _RC3PPS	set	3834
   522  0000                     _INLVLA	set	3853
   523  0000                     _SLRCONA	set	3854
   524  0000                     _ODCONA	set	3855
   525  0000                     _WPUA	set	3856
   526  0000                     _ANSELA	set	3857
   527  0000                     _ANSELB	set	3865
   528  0000                     _ANSELC	set	3873
   529  0000                     _ANSELD	set	3878
   530  0000                     _PMD5	set	3814
   531  0000                     _PMD4	set	3813
   532  0000                     _PMD3	set	3812
   533  0000                     _PMD2	set	3811
   534  0000                     _PMD1	set	3810
   535  0000                     _WDTCON1	set	3795
   536  0000                     _PORTEbits	set	3985
   537  0000                     _PORTBbits	set	3982
   538  0000                     _PORTAbits	set	3981
   539  0000                     _INLVLE	set	3882
   540  0000                     _SLRCONE	set	3883
   541  0000                     _ODCONE	set	3884
   542  0000                     _WPUE	set	3885
   543  0000                     _ANSELE	set	3886
   544  0000                     _INLVLC	set	3869
   545  0000                     _SLRCONC	set	3870
   546  0000                     _ODCONC	set	3871
   547  0000                     _WPUC	set	3872
   548  0000                     _INLVLB	set	3861
   549  0000                     _SLRCONB	set	3862
   550  0000                     _ODCONB	set	3863
   551  0000                     _WPUB	set	3864
   552  0000                     _IOCBN3	set	30875
   553  0000                     _IOCBP3	set	30883
   554  0000                     _SSP1DATPPS	set	3768
   555  0000                     _RC7PPS	set	3838
   556  0000                     _RC4PPS	set	3835
   557  0000                     _T2RST	set	4032
   558                           
   559                           ; #config settings
   560                           
   561                           	psect	cinit
   562  00704E                     __pcinit:
   563                           	callstack 0
   564  00704E                     start_initialization:
   565                           	callstack 0
   566  00704E                     __initialization:
   567                           	callstack 0
   568                           
   569                           ; Initialize objects allocated to BANK3 (37 bytes)
   570                           ; load TBLPTR registers with __pidataBANK3
   571  00704E  0EBE               	movlw	low __pidataBANK3
   572  007050  6EF6               	movwf	tblptrl,c
   573  007052  0E8D               	movlw	high __pidataBANK3
   574  007054  6EF7               	movwf	tblptrh,c
   575  007056  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   576  007058  6EF8               	movwf	tblptru,c
   577  00705A  EE03  F0D2         	lfsr	0,__pdataBANK3
   578  00705E  EE10 F025          	lfsr	1,37
   579  007062                     copy_data0:
   580  007062  0009               	tblrd		*+
   581  007064  CFF5 FFEE          	movff	tablat,postinc0
   582  007068  50E5               	movf	postdec1,w,c
   583  00706A  50E1               	movf	fsr1l,w,c
   584  00706C  E1FA               	bnz	copy_data0
   585                           
   586                           ; Initialize objects allocated to BANK2 (2 bytes)
   587                           ; load TBLPTR registers with __pidataBANK2
   588  00706E  0E16               	movlw	low __pidataBANK2
   589  007070  6EF6               	movwf	tblptrl,c
   590  007072  0E92               	movlw	high __pidataBANK2
   591  007074  6EF7               	movwf	tblptrh,c
   592  007076  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   593  007078  6EF8               	movwf	tblptru,c
   594  00707A  0009               	tblrd		*+	;fetch initializer
   595  00707C  CFF5 F2ED          	movff	tablat,__pdataBANK2
   596  007080  0009               	tblrd		*+	;fetch initializer
   597  007082  CFF5 F2EE          	movff	tablat,__pdataBANK2+1
   598                           
   599                           ; Initialize objects allocated to BANK1 (4 bytes)
   600                           ; load TBLPTR registers with __pidataBANK1
   601  007086  0EE4               	movlw	low __pidataBANK1
   602  007088  6EF6               	movwf	tblptrl,c
   603  00708A  0E91               	movlw	high __pidataBANK1
   604  00708C  6EF7               	movwf	tblptrh,c
   605  00708E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   606  007090  6EF8               	movwf	tblptru,c
   607  007092  EE01  F0FA         	lfsr	0,__pdataBANK1
   608  007096  EE10 F004          	lfsr	1,4
   609  00709A                     copy_data1:
   610  00709A  0009               	tblrd		*+
   611  00709C  CFF5 FFEE          	movff	tablat,postinc0
   612  0070A0  50E5               	movf	postdec1,w,c
   613  0070A2  50E1               	movf	fsr1l,w,c
   614  0070A4  E1FA               	bnz	copy_data1
   615                           
   616                           ; Initialize objects allocated to BANK0 (2 bytes)
   617                           ; load TBLPTR registers with __pidataBANK0
   618  0070A6  0E14               	movlw	low __pidataBANK0
   619  0070A8  6EF6               	movwf	tblptrl,c
   620  0070AA  0E92               	movlw	high __pidataBANK0
   621  0070AC  6EF7               	movwf	tblptrh,c
   622  0070AE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   623  0070B0  6EF8               	movwf	tblptru,c
   624  0070B2  0009               	tblrd		*+	;fetch initializer
   625  0070B4  CFF5 F0F8          	movff	tablat,__pdataBANK0
   626  0070B8  0009               	tblrd		*+	;fetch initializer
   627  0070BA  CFF5 F0F9          	movff	tablat,__pdataBANK0+1
   628                           
   629                           ; Clear objects allocated to BANK3 (210 bytes)
   630  0070BE  EE03  F000         	lfsr	0,__pbssBANK3
   631  0070C2  0ED2               	movlw	210
   632  0070C4                     clear_0:
   633  0070C4  6AEE               	clrf	postinc0,c
   634  0070C6  06E8               	decf	wreg,f,c
   635  0070C8  E1FD               	bnz	clear_0
   636                           
   637                           ; Clear objects allocated to BANK2 (219 bytes)
   638  0070CA  EE02  F000         	lfsr	0,__pbssBANK2
   639  0070CE  0EDB               	movlw	219
   640  0070D0                     clear_1:
   641  0070D0  6AEE               	clrf	postinc0,c
   642  0070D2  06E8               	decf	wreg,f,c
   643  0070D4  E1FD               	bnz	clear_1
   644                           
   645                           ; Clear objects allocated to BANK1 (250 bytes)
   646  0070D6  EE01  F000         	lfsr	0,__pbssBANK1
   647  0070DA  0EFA               	movlw	250
   648  0070DC                     clear_2:
   649  0070DC  6AEE               	clrf	postinc0,c
   650  0070DE  06E8               	decf	wreg,f,c
   651  0070E0  E1FD               	bnz	clear_2
   652                           
   653                           ; Clear objects allocated to BANK0 (120 bytes)
   654  0070E2  EE00  F060         	lfsr	0,__pbssBANK0
   655  0070E6  0E78               	movlw	120
   656  0070E8                     clear_3:
   657  0070E8  6AEE               	clrf	postinc0,c
   658  0070EA  06E8               	decf	wreg,f,c
   659  0070EC  E1FD               	bnz	clear_3
   660                           
   661                           ; Clear objects allocated to COMRAM (21 bytes)
   662  0070EE  EE00  F03B         	lfsr	0,__pbssCOMRAM
   663  0070F2  0E15               	movlw	21
   664  0070F4                     clear_4:
   665  0070F4  6AEE               	clrf	postinc0,c
   666  0070F6  06E8               	decf	wreg,f,c
   667  0070F8  E1FD               	bnz	clear_4
   668  0070FA                     end_of_initialization:
   669                           	callstack 0
   670  0070FA                     __end_of__initialization:
   671                           	callstack 0
   672  0070FA  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   673  0070FC  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   674  0070FE  0100               	movlb	0
   675  007100  EF31  F02E         	goto	_main	;jump to C main() function
   676                           
   677                           	psect	bssCOMRAM
   678  00003B                     __pbssCOMRAM:
   679                           	callstack 0
   680  00003B                     _rfCMD:
   681                           	callstack 0
   682  00003B                     	ds	11
   683  000046                     _edit_Param:
   684                           	callstack 0
   685  000046                     	ds	6
   686  00004C                     _button_struct:
   687                           	callstack 0
   688  00004C                     	ds	4
   689                           
   690                           	psect	bssBANK0
   691  000060                     __pbssBANK0:
   692                           	callstack 0
   693  000060                     _learn_st:
   694                           	callstack 0
   695  000060                     	ds	18
   696  000072                     _dispStruct:
   697                           	callstack 0
   698  000072                     	ds	6
   699  000078                     _brakeElectric_st:
   700                           	callstack 0
   701  000078                     	ds	2
   702  00007A                     _pointSync:
   703                           	callstack 0
   704  00007A                     	ds	2
   705  00007C                     _Hop:
   706                           	callstack 0
   707  00007C                     	ds	2
   708  00007E                     _RFcount:
   709                           	callstack 0
   710  00007E                     	ds	2
   711  000080                     _temp:
   712                           	callstack 0
   713  000080                     	ds	1
   714  000081                     _control_limit_switch:
   715                           	callstack 0
   716  000081                     	ds	1
   717  000082                     _fullmotorPower:
   718                           	callstack 0
   719  000082                     	ds	1
   720  000083                     _stateMotor:
   721                           	callstack 0
   722  000083                     	ds	1
   723  000084                     _zeroCrossingWaitTimeIdx:
   724                           	callstack 0
   725  000084                     	ds	1
   726  000085                     _programmer_enable:
   727                           	callstack 0
   728  000085                     	ds	1
   729  000086                     readbutton@key1:
   730                           	callstack 0
   731  000086                     	ds	1
   732  000087                     readRFButtons@keyType:
   733                           	callstack 0
   734  000087                     	ds	1
   735  000088                     readRFButtons@key1:
   736                           	callstack 0
   737  000088                     	ds	1
   738  000089                     _RFBit:
   739                           	callstack 0
   740  000089                     	ds	1
   741  00008A                     _RFFull_12BIT:
   742                           	callstack 0
   743  00008A                     	ds	1
   744  00008B                     _RFFull:
   745                           	callstack 0
   746  00008B                     	ds	1
   747  00008C                     _BitCount:
   748                           	callstack 0
   749  00008C                     	ds	1
   750  00008D                     _Bptr:
   751                           	callstack 0
   752  00008D                     	ds	1
   753  00008E                     _numberOfErrorCurrent:
   754                           	callstack 0
   755  00008E                     	ds	1
   756  00008F                     _idxAdcZeroAquisition:
   757                           	callstack 0
   758  00008F                     	ds	1
   759  000090                     _idxSaveEnergyADCHist:
   760                           	callstack 0
   761  000090                     	ds	1
   762  000091                     _idxAdcAquisition:
   763                           	callstack 0
   764  000091                     	ds	1
   765  000092                     _Counterchoose:
   766                           	callstack 0
   767  000092                     	ds	1
   768  000093                     _eusart1RxCount:
   769                           	callstack 0
   770  000093                     	ds	1
   771  000094                     _eusart1RxTail:
   772                           	callstack 0
   773  000094                     	ds	1
   774  000095                     _eusart1RxHead:
   775                           	callstack 0
   776  000095                     	ds	1
   777  000096                     _eusart1TxTail:
   778                           	callstack 0
   779  000096                     	ds	1
   780  000097                     _eusart1TxHead:
   781                           	callstack 0
   782  000097                     	ds	1
   783  000098                     _var_sys_NVM:
   784                           	callstack 0
   785  000098                     	ds	64
   786                           
   787                           	psect	dataBANK0
   788  0000F8                     __pdataBANK0:
   789                           	callstack 0
   790  0000F8                     _auxCounter:
   791                           	callstack 0
   792  0000F8                     	ds	2
   793                           
   794                           	psect	bssBANK1
   795  000100                     __pbssBANK1:
   796                           	callstack 0
   797  000100                     _var_sys:
   798                           	callstack 0
   799  000100                     	ds	81
   800  000151                     _menu_st:
   801                           	callstack 0
   802  000151                     	ds	25
   803  00016A                     _security:
   804                           	callstack 0
   805  00016A                     	ds	11
   806  000175                     _fimdecurso:
   807                           	callstack 0
   808  000175                     	ds	6
   809  00017B                     _powerControl_st:
   810                           	callstack 0
   811  00017B                     	ds	6
   812  000181                     readRFButtons@serial:
   813                           	callstack 0
   814  000181                     	ds	4
   815  000185                     _NextHop:
   816                           	callstack 0
   817  000185                     	ds	2
   818  000187                     readRFButtons@rollingCode:
   819                           	callstack 0
   820  000187                     	ds	2
   821  000189                     _BufferRF_12BIT:
   822                           	callstack 0
   823  000189                     	ds	2
   824  00018B                     _erroranterior:
   825                           	callstack 0
   826  00018B                     	ds	2
   827  00018D                     _aux_in_auto_close:
   828                           	callstack 0
   829  00018D                     	ds	1
   830  00018E                     _aux_i:
   831                           	callstack 0
   832  00018E                     	ds	1
   833  00018F                     _Abertura_pedonal:
   834                           	callstack 0
   835  00018F                     	ds	1
   836  000190                     _temppower:
   837                           	callstack 0
   838  000190                     	ds	1
   839  000191                     _difTime:
   840                           	callstack 0
   841  000191                     	ds	1
   842  000192                     _StateTRIAC:
   843                           	callstack 0
   844  000192                     	ds	1
   845  000193                     _waitZeroPeak:
   846                           	callstack 0
   847  000193                     	ds	1
   848  000194                     _zeroCrossing:
   849                           	callstack 0
   850  000194                     	ds	1
   851  000195                     _zeroCrossingLength:
   852                           	callstack 0
   853  000195                     	ds	1
   854  000196                     _lastKey:
   855                           	callstack 0
   856  000196                     	ds	1
   857  000197                     _F2Chance:
   858                           	callstack 0
   859  000197                     	ds	1
   860  000198                     readbutton@key2:
   861                           	callstack 0
   862  000198                     	ds	1
   863  000199                     readRFButtons@typeRemote:
   864                           	callstack 0
   865  000199                     	ds	1
   866  00019A                     _RFstate:
   867                           	callstack 0
   868  00019A                     	ds	1
   869  00019B                     _eusart1RxLastError:
   870                           	callstack 0
   871  00019B                     	ds	1
   872  00019C                     _ts_system:
   873                           	callstack 0
   874  00019C                     	ds	72
   875  0001E4                     _controlGate_stateMachine:
   876                           	callstack 0
   877  0001E4                     	ds	11
   878  0001EF                     _main_stateMachine:
   879                           	callstack 0
   880  0001EF                     	ds	11
   881                           
   882                           	psect	dataBANK1
   883  0001FA                     __pdataBANK1:
   884                           	callstack 0
   885  0001FA                     _tempCounter:
   886                           	callstack 0
   887  0001FA                     	ds	4
   888                           
   889                           	psect	bssBANK2
   890  000200                     __pbssBANK2:
   891                           	callstack 0
   892  000200                     _ADC_array:
   893                           	callstack 0
   894  000200                     	ds	60
   895  00023C                     _I2C1_Status:
   896                           	callstack 0
   897  00023C                     	ds	36
   898  000260                     _SumEnergyADCHist_array:
   899                           	callstack 0
   900  000260                     	ds	20
   901  000274                     _eusart1RxStatusBuffer:
   902                           	callstack 0
   903  000274                     	ds	8
   904  00027C                     _eusart1RxBuffer:
   905                           	callstack 0
   906  00027C                     	ds	8
   907  000284                     _eusart1TxBuffer:
   908                           	callstack 0
   909  000284                     	ds	8
   910  00028C                     _EHop:
   911                           	callstack 0
   912  00028C                     	ds	2
   913  00028E                     _timer0ReloadVal16bit:
   914                           	callstack 0
   915  00028E                     	ds	2
   916  000290                     _classic_data:
   917                           	callstack 0
   918  000290                     	ds	16
   919  0002A0                     _memoryTEMP:
   920                           	callstack 0
   921  0002A0                     	ds	16
   922  0002B0                     _controlLearning_stateMachine:
   923                           	callstack 0
   924  0002B0                     	ds	11
   925  0002BB                     _menuConfiguration_stateMachine:
   926                           	callstack 0
   927  0002BB                     	ds	11
   928  0002C6                     _BufferRF:
   929                           	callstack 0
   930  0002C6                     	ds	9
   931  0002CF                     _DKEY:
   932                           	callstack 0
   933  0002CF                     	ds	8
   934  0002D7                     NormalKeyGen@SEED:
   935                           	callstack 0
   936  0002D7                     	ds	4
   937                           
   938                           	psect	dataBANK2
   939  0002ED                     __pdataBANK2:
   940                           	callstack 0
   941  0002ED                     _zeroCrossingWaitTime:
   942                           	callstack 0
   943  0002ED                     	ds	2
   944                           
   945                           	psect	bssBANK3
   946  000300                     __pbssBANK3:
   947                           	callstack 0
   948  000300                     _listSyncValues:
   949                           	callstack 0
   950  000300                     	ds	150
   951  000396                     _ADC_zero_array:
   952                           	callstack 0
   953  000396                     	ds	60
   954                           
   955                           	psect	dataBANK3
   956  0003D2                     __pdataBANK3:
   957                           	callstack 0
   958  0003D2                     _DispTable:
   959                           	callstack 0
   960  0003D2                     	ds	37
   961                           
   962                           	psect	cstackBANK0
   963  0000D8                     __pcstackBANK0:
   964                           	callstack 0
   965  0000D8                     ??_keeloq_classic_decrypt_packet:
   966  0000D8                     ??_setPositionInvertionInClosing:
   967  0000D8                     ??_validateRemoteSerialNumber:
   968  0000D8                     ??_RemoveSerial:
   969  0000D8                     SaveNVM_VarSystem@page:
   970                           	callstack 0
   971  0000D8                     getStateOpenPosition@state:
   972                           	callstack 0
   973  0000D8                     saveNewSerial@tempSerial:
   974                           	callstack 0
   975                           
   976                           ; 4 bytes @ 0x0
   977  0000D8                     	ds	1
   978  0000D9                     getStateOpenPosition@stateMotor:
   979                           	callstack 0
   980  0000D9                     SaveNVM_VarSystem@tempAdd:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x1
   984  0000D9                     	ds	1
   985  0000DA                     ??_controlVelocity:
   986  0000DA                     RemoveSerial@cmdType:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x2
   990  0000DA                     	ds	1
   991  0000DB                     SaveNVM_VarSystem@point:
   992                           	callstack 0
   993  0000DB                     RemoveSerial@tempSerial:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0x3
   997  0000DB                     	ds	1
   998  0000DC                     ??_eusartparser:
   999  0000DC                     ??_setValueToEdit:
  1000  0000DC                     saveNewSerial@position:
  1001                           	callstack 0
  1002  0000DC                     sm_execute_ControlLearning@psm:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x4
  1006  0000DC                     	ds	1
  1007  0000DD                     ??_saveNewSerial:
  1008                           
  1009                           ; 1 bytes @ 0x5
  1010  0000DD                     	ds	1
  1011  0000DE                     ??_sm_execute_ControlLearning:
  1012  0000DE                     setValueToEdit@menuType:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x6
  1016  0000DE                     	ds	1
  1017  0000DF                     setValueToEdit@haveValueToEdit:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x7
  1021  0000DF                     	ds	1
  1022  0000E0                     ??_controlSelectRemote:
  1023  0000E0                     keeloqDecryptPacket@data:
  1024                           	callstack 0
  1025  0000E0                     DecryptPacket_12BIT@data:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x8
  1029  0000E0                     	ds	1
  1030  0000E1                     controlSelectRemote@validSerial:
  1031                           	callstack 0
  1032                           
  1033                           ; 1 bytes @ 0x9
  1034  0000E1                     	ds	1
  1035  0000E2                     controlSelectRemote@pos:
  1036                           	callstack 0
  1037  0000E2                     keeloqDecryptPacket@classic_data:
  1038                           	callstack 0
  1039  0000E2                     DecryptPacket_12BIT@classic_data:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0xA
  1043  0000E2                     	ds	1
  1044  0000E3                     controlSelectRemote@typeRemote:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0xB
  1048  0000E3                     	ds	1
  1049  0000E4                     ??_keeloqDecryptPacket:
  1050  0000E4                     DecryptPacket_12BIT@commandType:
  1051                           	callstack 0
  1052  0000E4                     actionZone_Opening@securityClosing:
  1053                           	callstack 0
  1054  0000E4                     controlSelectRemote@tempSerial:
  1055                           	callstack 0
  1056                           
  1057                           ; 4 bytes @ 0xC
  1058  0000E4                     	ds	1
  1059  0000E5                     actionZone_Opening@securityOpening:
  1060                           	callstack 0
  1061                           
  1062                           ; 1 bytes @ 0xD
  1063  0000E5                     	ds	1
  1064  0000E6                     actionZone_Opening@typeOpenOrder:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0xE
  1068  0000E6                     	ds	1
  1069  0000E7                     sm_execute_ControlGate@psm:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0xF
  1073  0000E7                     	ds	1
  1074  0000E8                     keeloqDecryptPacket@hop_error:
  1075                           	callstack 0
  1076  0000E8                     controlSelectRemote@temp:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x10
  1080  0000E8                     	ds	1
  1081  0000E9                     ??_sm_execute_ControlGate:
  1082  0000E9                     keeloqDecryptPacket@commandType:
  1083                           	callstack 0
  1084  0000E9                     sm_execute_menuConfiguration@psm:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x11
  1088  0000E9                     	ds	2
  1089  0000EB                     ??_sm_execute_menuConfiguration:
  1090  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1091                           	callstack 0
  1092                           
  1093                           ; 1 bytes @ 0x13
  1094  0000EB                     	ds	2
  1095  0000ED                     sm_execute_main@psm:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x15
  1099  0000ED                     	ds	2
  1100  0000EF                     ??_sm_execute_main:
  1101                           
  1102                           ; 1 bytes @ 0x17
  1103  0000EF                     	ds	2
  1104  0000F1                     main@package:
  1105                           	callstack 0
  1106                           
  1107                           ; 7 bytes @ 0x19
  1108  0000F1                     	ds	7
  1109                           
  1110                           	psect	cstackCOMRAM
  1111  000001                     __pcstackCOMRAM:
  1112                           	callstack 0
  1113  000001                     ??_rxi:
  1114  000001                     ??i2_GetMotorPower:
  1115  000001                     ADCC_GetSingleConversion@channel:
  1116                           	callstack 0
  1117  000001                     Segments_Set@value:
  1118                           	callstack 0
  1119  000001                     i2VerifyElectricalBrake@tempState:
  1120                           	callstack 0
  1121  000001                     TMR1_WriteTimer@timerVal:
  1122                           	callstack 0
  1123  000001                     decrementTimeslot@ts:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x0
  1127  000001                     	ds	1
  1128  000002                     ??_ReadADC:
  1129  000002                     i2VerifyElectricalBrake@actualState:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x1
  1133  000002                     	ds	1
  1134  000003                     
  1135                           ; 1 bytes @ 0x2
  1136  000003                     	ds	1
  1137  000004                     i2GetMotorPower@defineatraso:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x3
  1141  000004                     	ds	1
  1142  000005                     ??_controlMotorForce:
  1143  000005                     
  1144                           ; 1 bytes @ 0x4
  1145  000005                     	ds	5
  1146  00000A                     ??_INTERRUPT_InterruptManager:
  1147                           
  1148                           ; 1 bytes @ 0x9
  1149  00000A                     	ds	6
  1150  000010                     ??_GetMotorPower:
  1151  000010                     ??_SetSegmentValueLearn:
  1152  000010                     ?_sumEnergyADC:
  1153                           	callstack 0
  1154  000010                     ?_sm_get_current_state:
  1155                           	callstack 0
  1156  000010                     ?___wmul:
  1157                           	callstack 0
  1158  000010                     ?___lwdiv:
  1159                           	callstack 0
  1160  000010                     ?_calculateMean:
  1161                           	callstack 0
  1162  000010                     ?_sumHIST:
  1163                           	callstack 0
  1164  000010                     ?___lldiv:
  1165                           	callstack 0
  1166  000010                     EUSART1_Read@readValue:
  1167                           	callstack 0
  1168  000010                     EUSART1_Write@txData:
  1169                           	callstack 0
  1170  000010                     I2C1_Open@address:
  1171                           	callstack 0
  1172  000010                     I2C1_Close@returnValue:
  1173                           	callstack 0
  1174  000010                     I2C1_MasterSendTxData@data:
  1175                           	callstack 0
  1176  000010                     WWDT_TimerClear@state:
  1177                           	callstack 0
  1178  000010                     getKeyPressed@temp:
  1179                           	callstack 0
  1180  000010                     RGB_Set@value:
  1181                           	callstack 0
  1182  000010                     SetSegmentValueIntermitent@d2:
  1183                           	callstack 0
  1184  000010                     VerifyElectricalBrake@tempState:
  1185                           	callstack 0
  1186  000010                     VerifyFollowMe@securityClose:
  1187                           	callstack 0
  1188  000010                     ___lbdiv@divisor:
  1189                           	callstack 0
  1190  000010                     ___lbmod@divisor:
  1191                           	callstack 0
  1192  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1193                           	callstack 0
  1194  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1195                           	callstack 0
  1196  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1197                           	callstack 0
  1198  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1199                           	callstack 0
  1200  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1201                           	callstack 0
  1202  000010                     I2C1_SetBuffer@buffer:
  1203                           	callstack 0
  1204  000010                     I2C1_SetCallback@cb:
  1205                           	callstack 0
  1206  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1207                           	callstack 0
  1208  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1209                           	callstack 0
  1210  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1211                           	callstack 0
  1212  000010                     saveEnergyADCHist@valueToSave:
  1213                           	callstack 0
  1214  000010                     DecCHK@data:
  1215                           	callstack 0
  1216  000010                     ReqResync@CurrentHop:
  1217                           	callstack 0
  1218  000010                     verifyProgramingMode@classic_data:
  1219                           	callstack 0
  1220  000010                     setFlashLigth_ON@Freq:
  1221                           	callstack 0
  1222  000010                     sm_restart@psm:
  1223                           	callstack 0
  1224  000010                     sm_get_current_state@psm:
  1225                           	callstack 0
  1226  000010                     ___wmul@multiplier:
  1227                           	callstack 0
  1228  000010                     ___lwdiv@dividend:
  1229                           	callstack 0
  1230  000010                     memcpy@d1:
  1231                           	callstack 0
  1232  000010                     calculateMean@meanValue:
  1233                           	callstack 0
  1234  000010                     ___lldiv@dividend:
  1235                           	callstack 0
  1236  000010                     write_eusartparser@package:
  1237                           	callstack 0
  1238                           
  1239                           ; 7 bytes @ 0xF
  1240  000010                     	ds	1
  1241  000011                     ?_read_package:
  1242                           	callstack 0
  1243  000011                     I2C1_Open@returnValue:
  1244                           	callstack 0
  1245  000011                     VerifyElectricalBrake@actualState:
  1246                           	callstack 0
  1247  000011                     ___lbdiv@dividend:
  1248                           	callstack 0
  1249  000011                     ___lbmod@dividend:
  1250                           	callstack 0
  1251  000011                     SetSegmentValueIntermitent@time:
  1252                           	callstack 0
  1253  000011                     setRGB_ON@Freq:
  1254                           	callstack 0
  1255  000011                     write_package@package:
  1256                           	callstack 0
  1257                           
  1258                           ; 7 bytes @ 0x10
  1259  000011                     	ds	1
  1260  000012                     ??_TMR1_Initialize:
  1261  000012                     ??_ControlMotor:
  1262  000012                     ??_sumEnergyADC:
  1263  000012                     ??_DecCHK:
  1264  000012                     SetSegmentValueLearn@direction:
  1265                           	callstack 0
  1266  000012                     ___lbdiv@counter:
  1267                           	callstack 0
  1268  000012                     ___lbmod@counter:
  1269                           	callstack 0
  1270  000012                     I2C1_SetBuffer@bufferSize:
  1271                           	callstack 0
  1272  000012                     I2C1_SetCallback@ptr:
  1273                           	callstack 0
  1274  000012                     sm_init@psm:
  1275                           	callstack 0
  1276  000012                     sm_send_event@psm:
  1277                           	callstack 0
  1278  000012                     ___wmul@multiplicand:
  1279                           	callstack 0
  1280  000012                     ___lwdiv@divisor:
  1281                           	callstack 0
  1282  000012                     memcpy@s1:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x11
  1286  000012                     	ds	1
  1287  000013                     ??_setRGB_ON:
  1288  000013                     SetSegmentValueIntermitent@d1:
  1289                           	callstack 0
  1290  000013                     GetMotorPower@defineatraso:
  1291                           	callstack 0
  1292  000013                     ___lbdiv@quotient:
  1293                           	callstack 0
  1294  000013                     ___lbmod@rem:
  1295                           	callstack 0
  1296                           
  1297                           ; 1 bytes @ 0x12
  1298  000013                     	ds	1
  1299  000014                     ??_InitSoftStop:
  1300  000014                     ??_InitSoftStart:
  1301  000014                     ??_sumHIST:
  1302  000014                     ?___awdiv:
  1303                           	callstack 0
  1304  000014                     I2C1_SetCallback@idx:
  1305                           	callstack 0
  1306  000014                     sumEnergyADC@sumE:
  1307                           	callstack 0
  1308  000014                     sm_init@initial_state:
  1309                           	callstack 0
  1310  000014                     sm_send_event@event:
  1311                           	callstack 0
  1312  000014                     ___wmul@product:
  1313                           	callstack 0
  1314  000014                     ___awdiv@dividend:
  1315                           	callstack 0
  1316  000014                     ___lwdiv@quotient:
  1317                           	callstack 0
  1318  000014                     memcpy@n:
  1319                           	callstack 0
  1320  000014                     calculateMean@newValue:
  1321                           	callstack 0
  1322  000014                     ___lldiv@divisor:
  1323                           	callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x13
  1326  000014                     	ds	1
  1327  000015                     setRGB_ON@RGBLigth:
  1328                           	callstack 0
  1329  000015                     I2C1_SetDataCompleteCallback@cb:
  1330                           	callstack 0
  1331  000015                     I2C1_SetAddressNackCallback@cb:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x14
  1335  000015                     	ds	1
  1336  000016                     ?_getHopCode:
  1337                           	callstack 0
  1338  000016                     ?_getCurrentComparator:
  1339                           	callstack 0
  1340  000016                     sm_init@hist_mode:
  1341                           	callstack 0
  1342  000016                     ___lwdiv@counter:
  1343                           	callstack 0
  1344  000016                     memcpy@tmp:
  1345                           	callstack 0
  1346  000016                     sumEnergyADC@auxValue:
  1347                           	callstack 0
  1348  000016                     getHopCode@data:
  1349                           	callstack 0
  1350  000016                     ___awdiv@divisor:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x15
  1354  000016                     	ds	1
  1355  000017                     ??_write_eusartparser:
  1356  000017                     refreshADCZeroOffset@i:
  1357                           	callstack 0
  1358  000017                     I2C1_SetDataCompleteCallback@ptr:
  1359                           	callstack 0
  1360  000017                     I2C1_SetAddressNackCallback@ptr:
  1361                           	callstack 0
  1362  000017                     memcpy@d:
  1363                           	callstack 0
  1364                           
  1365                           ; 2 bytes @ 0x16
  1366  000017                     	ds	1
  1367  000018                     ??_getHopCode:
  1368  000018                     ??_calculateMean:
  1369  000018                     ??_OpenWalkOrder:
  1370  000018                     sumEnergyADC@i:
  1371                           	callstack 0
  1372  000018                     ControlMotor@stateMotor:
  1373                           	callstack 0
  1374  000018                     read_eusartparser@package:
  1375                           	callstack 0
  1376  000018                     ___awdiv@counter:
  1377                           	callstack 0
  1378  000018                     refreshADCZeroOffset@media:
  1379                           	callstack 0
  1380  000018                     sumHIST@max:
  1381                           	callstack 0
  1382  000018                     ___lldiv@quotient:
  1383                           	callstack 0
  1384  000018                     read_package@package:
  1385                           	callstack 0
  1386                           
  1387                           ; 7 bytes @ 0x17
  1388  000018                     	ds	1
  1389  000019                     ??_read_eusartparser:
  1390  000019                     ___awdiv@sign:
  1391                           	callstack 0
  1392  000019                     wr1RegCompleteHandler@p:
  1393                           	callstack 0
  1394  000019                     rd1RegCompleteHandler@p:
  1395                           	callstack 0
  1396  000019                     rd2RegCompleteHandler@p:
  1397                           	callstack 0
  1398  000019                     wr2RegCompleteHandler@p:
  1399                           	callstack 0
  1400  000019                     rdBlkRegCompleteHandler@p:
  1401                           	callstack 0
  1402  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1403                           	callstack 0
  1404  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1405                           	callstack 0
  1406  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1407                           	callstack 0
  1408  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1409                           	callstack 0
  1410  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1411                           	callstack 0
  1412  000019                     I2C1_CallbackReturnReset@funPtr:
  1413                           	callstack 0
  1414  000019                     memcpy@s:
  1415                           	callstack 0
  1416                           
  1417                           ; 2 bytes @ 0x18
  1418  000019                     	ds	1
  1419  00001A                     ??_getCurrentComparator:
  1420  00001A                     sumHIST@min:
  1421                           	callstack 0
  1422  00001A                     OpenWalkOrder@diffTime:
  1423                           	callstack 0
  1424  00001A                     ___awdiv@quotient:
  1425                           	callstack 0
  1426                           
  1427                           ; 2 bytes @ 0x19
  1428  00001A                     	ds	1
  1429  00001B                     ??_I2C1_DO_TX:
  1430  00001B                     ??_I2C1_DO_RX:
  1431  00001B                     ??_I2C1_DO_TX_EMPTY:
  1432  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1433  00001B                     getSerialCmd@serial:
  1434                           	callstack 0
  1435  00001B                     Decrypt@packet:
  1436                           	callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x1A
  1439  00001B                     	ds	1
  1440  00001C                     getSerialCmd@temp:
  1441                           	callstack 0
  1442  00001C                     SetSegmentValueMain@d2:
  1443                           	callstack 0
  1444  00001C                     SetSegmentValue@d2:
  1445                           	callstack 0
  1446  00001C                     SetSegmentValueIntermitentMain@d2:
  1447                           	callstack 0
  1448  00001C                     ___lldiv@counter:
  1449                           	callstack 0
  1450  00001C                     sumHIST@sumH:
  1451                           	callstack 0
  1452                           
  1453                           ; 4 bytes @ 0x1B
  1454  00001C                     	ds	1
  1455  00001D                     ??_I2C1_MasterFsm:
  1456  00001D                     ?___lmul:
  1457                           	callstack 0
  1458  00001D                     Decrypt@key:
  1459                           	callstack 0
  1460  00001D                     SetSegmentValueMain@d1:
  1461                           	callstack 0
  1462  00001D                     SetSegmentValue@d1:
  1463                           	callstack 0
  1464  00001D                     SetSegmentValueIntermitentMain@time:
  1465                           	callstack 0
  1466  00001D                     ___lmul@multiplier:
  1467                           	callstack 0
  1468                           
  1469                           ; 4 bytes @ 0x1C
  1470  00001D                     	ds	1
  1471  00001E                     Decrypt@i:
  1472                           	callstack 0
  1473                           
  1474                           ; 1 bytes @ 0x1D
  1475  00001E                     	ds	1
  1476  00001F                     Decrypt@j:
  1477                           	callstack 0
  1478  00001F                     SetSegmentValueIntermitentMain@d1:
  1479                           	callstack 0
  1480  00001F                     write_eusartparser@debug:
  1481                           	callstack 0
  1482                           
  1483                           ; 2 bytes @ 0x1E
  1484  00001F                     	ds	1
  1485  000020                     ??_load_New_Menu:
  1486  000020                     I2C1_MasterOperation@read:
  1487                           	callstack 0
  1488  000020                     sumHIST@i:
  1489                           	callstack 0
  1490  000020                     Decrypt@p:
  1491                           	callstack 0
  1492  000020                     actionZone_Closed@securityOpening:
  1493                           	callstack 0
  1494  000020                     actionZone_Opened@securityClosing:
  1495                           	callstack 0
  1496  000020                     getCurrentComparator@tempOffset:
  1497                           	callstack 0
  1498  000020                     getHopCode@tempHop:
  1499                           	callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x1F
  1502  000020                     	ds	1
  1503  000021                     I2C1_MasterOperation@returnValue:
  1504                           	callstack 0
  1505  000021                     Decrypt@aux:
  1506                           	callstack 0
  1507  000021                     actionZone_Closed@typeOpenOrder:
  1508                           	callstack 0
  1509  000021                     actionZone_Opened@typeOpenOrder:
  1510                           	callstack 0
  1511  000021                     write_eusartparser@debug2:
  1512                           	callstack 0
  1513  000021                     ___lmul@multiplicand:
  1514                           	callstack 0
  1515                           
  1516                           ; 4 bytes @ 0x20
  1517  000021                     	ds	1
  1518  000022                     I2C1_Read1ByteRegister@reg:
  1519                           	callstack 0
  1520  000022                     getCurrentComparator@x:
  1521                           	callstack 0
  1522  000022                     getHopCode@tempPos:
  1523                           	callstack 0
  1524  000022                     load_New_Menu@Menu:
  1525                           	callstack 0
  1526  000022                     i2c_writeNBytes@reg:
  1527                           	callstack 0
  1528  000022                     i2c_readDataBlock@reg:
  1529                           	callstack 0
  1530  000022                     Decrypt@Buffer:
  1531                           	callstack 0
  1532                           
  1533                           ; 4 bytes @ 0x21
  1534  000022                     	ds	1
  1535  000023                     ??_ControlCurrent:
  1536  000023                     I2C1_Read1ByteRegister@address:
  1537                           	callstack 0
  1538  000023                     getHopCode@i:
  1539                           	callstack 0
  1540  000023                     load_New_Menu@i:
  1541                           	callstack 0
  1542                           
  1543                           ; 1 bytes @ 0x22
  1544  000023                     	ds	1
  1545  000024                     i2c_writeNBytes@data:
  1546                           	callstack 0
  1547  000024                     I2C1_Read1ByteRegister@returnValue:
  1548                           	callstack 0
  1549  000024                     i2c_readDataBlock@data:
  1550                           	callstack 0
  1551  000024                     HopCHK@data:
  1552                           	callstack 0
  1553                           
  1554                           ; 2 bytes @ 0x23
  1555  000024                     	ds	1
  1556  000025                     i2c_writeNBytes@len:
  1557                           	callstack 0
  1558  000025                     ___lmul@product:
  1559                           	callstack 0
  1560                           
  1561                           ; 4 bytes @ 0x24
  1562  000025                     	ds	1
  1563  000026                     i2c_readDataBlock@len:
  1564                           	callstack 0
  1565  000026                     NormalKeyGen@serial:
  1566                           	callstack 0
  1567  000026                     HopCHK@hopDiff:
  1568                           	callstack 0
  1569                           
  1570                           ; 2 bytes @ 0x25
  1571  000026                     	ds	1
  1572  000027                     ??_i2c_writeNBytes:
  1573                           
  1574                           ; 1 bytes @ 0x26
  1575  000027                     	ds	1
  1576  000028                     ??_i2c_readDataBlock:
  1577  000028                     NormalKeyGen@HOPtemp:
  1578                           	callstack 0
  1579  000028                     i2c_writeNBytes@dat:
  1580                           	callstack 0
  1581                           
  1582                           ; 17 bytes @ 0x27
  1583  000028                     	ds	1
  1584  000029                     ?_getTimeDecelaration:
  1585                           	callstack 0
  1586  000029                     i2c_readDataBlock@address:
  1587                           	callstack 0
  1588                           
  1589                           ; 1 bytes @ 0x28
  1590  000029                     	ds	1
  1591  00002A                     i2c_readDataBlock@d:
  1592                           	callstack 0
  1593                           
  1594                           ; 4 bytes @ 0x29
  1595  00002A                     	ds	2
  1596  00002C                     NormalKeyGen@SKEYtemp:
  1597                           	callstack 0
  1598                           
  1599                           ; 4 bytes @ 0x2B
  1600  00002C                     	ds	1
  1601  00002D                     ??_getTimeDecelaration:
  1602                           
  1603                           ; 1 bytes @ 0x2C
  1604  00002D                     	ds	1
  1605  00002E                     cmdMemoryIsEmpty@position:
  1606                           	callstack 0
  1607  00002E                     validateRemoteSerialNumber@serial:
  1608                           	callstack 0
  1609                           
  1610                           ; 4 bytes @ 0x2D
  1611  00002E                     	ds	1
  1612  00002F                     ??_cmdMemoryIsEmpty:
  1613                           
  1614                           ; 1 bytes @ 0x2E
  1615  00002F                     	ds	1
  1616  000030                     NormalKeyGen@Buffer:
  1617                           	callstack 0
  1618                           
  1619                           ; 8 bytes @ 0x2F
  1620  000030                     	ds	1
  1621  000031                     cmdMemoryIsEmpty@cmdType:
  1622                           	callstack 0
  1623  000031                     getTimeDecelaration@state:
  1624                           	callstack 0
  1625                           
  1626                           ; 1 bytes @ 0x30
  1627  000031                     	ds	1
  1628  000032                     ??_setPositionInvertionInOpening:
  1629  000032                     ??_getStateOpenPosition:
  1630  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1631                           	callstack 0
  1632  000032                     actionZone_Closing@securityClosing:
  1633                           	callstack 0
  1634  000032                     cmdMemoryIsEmpty@tempSerial:
  1635                           	callstack 0
  1636                           
  1637                           ; 4 bytes @ 0x31
  1638  000032                     	ds	1
  1639  000033                     actionZone_Closing@typeOpenOrder:
  1640                           	callstack 0
  1641  000033                     validateRemoteSerialNumber@position:
  1642                           	callstack 0
  1643                           
  1644                           ; 2 bytes @ 0x32
  1645  000033                     	ds	2
  1646  000035                     validateRemoteSerialNumber@mask:
  1647                           	callstack 0
  1648                           
  1649                           ; 4 bytes @ 0x34
  1650  000035                     	ds	3
  1651  000038                     keeloq_classic_decrypt_packet@data:
  1652                           	callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x37
  1655  000038                     	ds	1
  1656  000039                     i2c_writeNBytes@address:
  1657                           	callstack 0
  1658  000039                     validateRemoteSerialNumber@j:
  1659                           	callstack 0
  1660                           
  1661                           ; 1 bytes @ 0x38
  1662  000039                     	ds	1
  1663  00003A                     validateRemoteSerialNumber@i:
  1664                           	callstack 0
  1665  00003A                     saveNewSerial@cmdType:
  1666                           	callstack 0
  1667  00003A                     RemoveSerial@position:
  1668                           	callstack 0
  1669  00003A                     ResetDefaultMemory@type:
  1670                           	callstack 0
  1671  00003A                     checkNVM_VarSystem@saveParam:
  1672                           	callstack 0
  1673  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1674                           	callstack 0
  1675  00003A                     setValueToEdit@ParameterSelected:
  1676                           	callstack 0
  1677  00003A                     eusartparser@package:
  1678                           	callstack 0
  1679                           
  1680                           ; 1 bytes @ 0x39
  1681  00003A                     	ds	1
  1682  00003B                     
  1683                           ; 1 bytes @ 0x3A
  1684 ;;
  1685 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1686 ;;
  1687 ;; *************** function _main *****************
  1688 ;; Defined at:
  1689 ;;		line 63 in file "main_MC50.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  package         7   25[BANK0 ] struct package_t
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 3F/1
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1704 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1706 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1707 ;;Total ram usage:        7 bytes
  1708 ;; Hardware stack levels required when called: 17
  1709 ;; This function calls:
  1710 ;;		_ControlCounterMoves
  1711 ;;		_ControlCurrent
  1712 ;;		_ControlInputs
  1713 ;;		_ControlLights
  1714 ;;		_ControlMotor
  1715 ;;		_EUSART1_is_rx_ready
  1716 ;;		_InitReceiver
  1717 ;;		_SYSTEM_Initialize
  1718 ;;		_SetSegmentValue
  1719 ;;		_ShowVersion
  1720 ;;		_WWDT_SoftEnable
  1721 ;;		_WWDT_TimerClear
  1722 ;;		_controlVelocity
  1723 ;;		_eusartparser
  1724 ;;		_getKeyPressed
  1725 ;;		_loadNVM_VarSystem
  1726 ;;		_readInputs
  1727 ;;		_readRFButtons
  1728 ;;		_read_package
  1729 ;;		_readbutton
  1730 ;;		_sm_execute_ControlGate
  1731 ;;		_sm_execute_main
  1732 ;;		_sm_init
  1733 ;; This function is called by:
  1734 ;;		Startup code after reset
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text0
  1739  005C62                     __ptext0:
  1740                           	callstack 0
  1741  005C62                     _main:
  1742                           	callstack 14
  1743                           
  1744                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1745                           
  1746                           ;incstack = 0
  1747  005C62  0E18               	movlw	24
  1748  005C64  0100               	movlb	0	; () banked
  1749  005C66  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1750                           
  1751                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1752  005C68  0E18               	movlw	24
  1753  005C6A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1754                           
  1755                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1756  005C6C  0E00               	movlw	0
  1757  005C6E  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1758  005C70  0E00               	movlw	0
  1759  005C72  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1760                           
  1761                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1762  005C74  0E01               	movlw	1
  1763  005C76  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1767  005C78  EC36  F045         	call	_SYSTEM_Initialize	;wreg free
  1768                           
  1769                           ; BSR set to: 14
  1770                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1771  005C7C  ECF4  F048         	call	_WWDT_SoftEnable	;wreg free
  1772                           
  1773                           ; BSR set to: 14
  1774                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1775  005C80  8EF2               	bsf	242,7,c	;volatile
  1776                           
  1777                           ; BSR set to: 14
  1778                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1779  005C82  8CF2               	bsf	242,6,c	;volatile
  1780                           
  1781                           ; BSR set to: 14
  1782                           ;main_MC50.c: 86:     IOCBP3=1;
  1783  005C84  010F               	movlb	15	; () banked
  1784  005C86  8714               	bsf	20,3,b	;volatile
  1785                           
  1786                           ; BSR set to: 15
  1787                           ;main_MC50.c: 87:     IOCBN3=1;
  1788  005C88  8713               	bsf	19,3,b	;volatile
  1789                           
  1790                           ; BSR set to: 15
  1791                           ;main_MC50.c: 94:     InitReceiver();
  1792  005C8A  EC80  F047         	call	_InitReceiver	;wreg free
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1796  005C8E  ECEA  F030         	call	_loadNVM_VarSystem	;wreg free
  1797                           
  1798                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1799  005C92  EC56  F047         	call	_WWDT_TimerClear	;wreg free
  1800                           
  1801                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1802  005C96  0E18               	movlw	24
  1803  005C98  6E1C               	movwf	SetSegmentValue@d2^0,c
  1804  005C9A  0E18               	movlw	24
  1805  005C9C  ECA7  F047         	call	_SetSegmentValue
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1809  005CA0  0E02               	movlw	2
  1810  005CA2  0101               	movlb	1	; () banked
  1811  005CA4  6F9E               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1812                           
  1813                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1814  005CA6  D00B               	goto	l23231
  1815  005CA8                     l23221:
  1816                           
  1817                           ; BSR set to: 1
  1818                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1819  005CA8  519F               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1820  005CAA  A4D8               	btfss	status,2,c
  1821  005CAC  D008               	goto	l23231
  1822                           
  1823                           ; BSR set to: 1
  1824                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1825  005CAE  EC56  F047         	call	_WWDT_TimerClear	;wreg free
  1826                           
  1827                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1828  005CB2  0E32               	movlw	50
  1829  005CB4  0101               	movlb	1	; () banked
  1830  005CB6  6F9F               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1831                           
  1832                           ; BSR set to: 1
  1833                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1834  005CB8  079E               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1835                           
  1836                           ; BSR set to: 1
  1837                           ;main_MC50.c: 109:             readInputs();
  1838  005CBA  ECB6  F033         	call	_readInputs	;wreg free
  1839  005CBE                     l23231:
  1840                           
  1841                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1842  005CBE  0101               	movlb	1	; () banked
  1843  005CC0  519E               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1844  005CC2  A4D8               	btfss	status,2,c
  1845  005CC4  D7F1               	goto	l23221
  1846                           
  1847                           ; BSR set to: 1
  1848                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1849  005CC6  0EBB               	movlw	low _menuConfiguration_stateMachine
  1850  005CC8  6E12               	movwf	sm_init@psm^0,c
  1851  005CCA  0E02               	movlw	high _menuConfiguration_stateMachine
  1852  005CCC  6E13               	movwf	(sm_init@psm+1)^0,c
  1853  005CCE  0E00               	movlw	0
  1854  005CD0  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1855  005CD2  0E00               	movlw	0
  1856  005CD4  6E14               	movwf	sm_init@initial_state^0,c
  1857  005CD6  0E00               	movlw	0
  1858  005CD8  6E16               	movwf	sm_init@hist_mode^0,c
  1859  005CDA  ECB9  F041         	call	_sm_init	;wreg free
  1860                           
  1861                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1862  005CDE  0EEF               	movlw	low _main_stateMachine
  1863  005CE0  6E12               	movwf	sm_init@psm^0,c
  1864  005CE2  0E01               	movlw	high _main_stateMachine
  1865  005CE4  6E13               	movwf	(sm_init@psm+1)^0,c
  1866  005CE6  0E00               	movlw	0
  1867  005CE8  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1868  005CEA  0E00               	movlw	0
  1869  005CEC  6E14               	movwf	sm_init@initial_state^0,c
  1870  005CEE  0E00               	movlw	0
  1871  005CF0  6E16               	movwf	sm_init@hist_mode^0,c
  1872  005CF2  ECB9  F041         	call	_sm_init	;wreg free
  1873                           
  1874                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1875  005CF6  0EE4               	movlw	low _controlGate_stateMachine
  1876  005CF8  6E12               	movwf	sm_init@psm^0,c
  1877  005CFA  0E01               	movlw	high _controlGate_stateMachine
  1878  005CFC  6E13               	movwf	(sm_init@psm+1)^0,c
  1879  005CFE  0E00               	movlw	0
  1880  005D00  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1881  005D02  0E00               	movlw	0
  1882  005D04  6E14               	movwf	sm_init@initial_state^0,c
  1883  005D06  0E00               	movlw	0
  1884  005D08  6E16               	movwf	sm_init@hist_mode^0,c
  1885  005D0A  ECB9  F041         	call	_sm_init	;wreg free
  1886                           
  1887                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  1888  005D0E  0EB0               	movlw	low _controlLearning_stateMachine
  1889  005D10  6E12               	movwf	sm_init@psm^0,c
  1890  005D12  0E02               	movlw	high _controlLearning_stateMachine
  1891  005D14  6E13               	movwf	(sm_init@psm+1)^0,c
  1892  005D16  0E00               	movlw	0
  1893  005D18  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1894  005D1A  0E00               	movlw	0
  1895  005D1C  6E14               	movwf	sm_init@initial_state^0,c
  1896  005D1E  0E00               	movlw	0
  1897  005D20  6E16               	movwf	sm_init@hist_mode^0,c
  1898  005D22  ECB9  F041         	call	_sm_init	;wreg free
  1899                           
  1900                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  1901  005D26  0E00               	movlw	0
  1902  005D28  0101               	movlb	1	; () banked
  1903  005D2A  6FA5               	movwf	(_ts_system+9)& (0+255),b	;volatile
  1904  005D2C  0E14               	movlw	20
  1905  005D2E  6FA4               	movwf	(_ts_system+8)& (0+255),b	;volatile
  1906                           
  1907                           ; BSR set to: 1
  1908                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  1909  005D30  0E01               	movlw	1
  1910  005D32  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  1911  005D34  0EFE               	movlw	254
  1912  005D36  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  1913                           
  1914                           ; BSR set to: 1
  1915                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  1916  005D38  0E00               	movlw	0
  1917  005D3A  6FDB               	movwf	(_ts_system+63)& (0+255),b	;volatile
  1918  005D3C  0E64               	movlw	100
  1919  005D3E  6FDA               	movwf	(_ts_system+62)& (0+255),b	;volatile
  1920                           
  1921                           ; BSR set to: 1
  1922                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  1923  005D40  0E00               	movlw	0
  1924  005D42  6FDD               	movwf	(_ts_system+65)& (0+255),b	;volatile
  1925  005D44  0E00               	movlw	0
  1926  005D46  6FDC               	movwf	(_ts_system+64)& (0+255),b	;volatile
  1927                           
  1928                           ; BSR set to: 1
  1929                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  1930  005D48  0E00               	movlw	0
  1931  005D4A  6F00               	movwf	_var_sys& (0+255),b	;volatile
  1932  005D4C                     l23245:
  1933                           
  1934                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  1935  005D4C  EC45  F048         	call	_EUSART1_is_rx_ready	;wreg free
  1936  005D50  0900               	iorlw	0
  1937  005D52  B4D8               	btfsc	status,2,c
  1938  005D54  D00D               	goto	l23251
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;main_MC50.c: 142:             package=read_package();
  1942  005D56  EC8D  F042         	call	_read_package	;wreg free
  1943  005D5A  EE20  F0F1         	lfsr	2,main@package
  1944  005D5E  0E06               	movlw	6
  1945  005D60                     u28701:
  1946  005D60  CFEB FFDB          	movff	plusw0,plusw2
  1947  005D64  06E8               	decf	wreg,f,c
  1948  005D66  E2FC               	bc	u28701
  1949                           
  1950                           ; BSR set to: 14
  1951                           ;main_MC50.c: 143:             eusartparser(&package);
  1952  005D68  0EF1               	movlw	low main@package
  1953  005D6A  6E3A               	movwf	eusartparser@package^0,c
  1954  005D6C  ECFC  F036         	call	_eusartparser	;wreg free
  1955  005D70                     l23251:
  1956                           
  1957                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  1958  005D70  0101               	movlb	1	; () banked
  1959  005D72  519F               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1960  005D74  A4D8               	btfss	status,2,c
  1961  005D76  D7EA               	goto	l23245
  1962                           
  1963                           ; BSR set to: 1
  1964                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  1965  005D78  0E32               	movlw	50
  1966  005D7A  6F9F               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1967                           
  1968                           ; BSR set to: 1
  1969                           ;main_MC50.c: 150:             WWDT_TimerClear();
  1970  005D7C  EC56  F047         	call	_WWDT_TimerClear	;wreg free
  1971                           
  1972                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  1973  005D80  0E04               	movlw	4
  1974  005D82  0101               	movlb	1	; () banked
  1975  005D84  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  1976  005D86  D003               	goto	l23261
  1977                           
  1978                           ; BSR set to: 1
  1979                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  1980  005D88  EC43  F040         	call	_ShowVersion	;wreg free
  1981                           
  1982                           ;main_MC50.c: 156:             }
  1983  005D8C  D7DF               	goto	l23245
  1984  005D8E                     l23261:
  1985                           
  1986                           ; BSR set to: 1
  1987                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  1988  005D8E  ECD9  F03F         	call	_readbutton	;wreg free
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;main_MC50.c: 162:                 readRFButtons();
  1992  005D92  ECA1  F02C         	call	_readRFButtons	;wreg free
  1993                           
  1994                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  1995  005D96  ECCD  F047         	call	_getKeyPressed	;wreg free
  1996  005D9A  0101               	movlb	1	; () banked
  1997  005D9C  6F96               	movwf	_lastKey& (0+255),b
  1998                           
  1999                           ; BSR set to: 1
  2000                           ;main_MC50.c: 165:                 readInputs();
  2001  005D9E  ECB6  F033         	call	_readInputs	;wreg free
  2002                           
  2003                           ;main_MC50.c: 166:                 ControlInputs();
  2004  005DA2  EC15  F032         	call	_ControlInputs	;wreg free
  2005                           
  2006                           ;main_MC50.c: 167:                 ControlCurrent();
  2007  005DA6  ECF2  F02E         	call	_ControlCurrent	;wreg free
  2008                           
  2009                           ;main_MC50.c: 168:                 controlVelocity();
  2010  005DAA  EC96  F025         	call	_controlVelocity	;wreg free
  2011                           
  2012                           ;main_MC50.c: 169:                 ControlMotor();
  2013  005DAE  EC60  F023         	call	_ControlMotor	;wreg free
  2014                           
  2015                           ;main_MC50.c: 170:                 ControlLights();
  2016  005DB2  ECA8  F01C         	call	_ControlLights	;wreg free
  2017                           
  2018                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2019  005DB6  EC60  F041         	call	_ControlCounterMoves	;wreg free
  2020                           
  2021                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2022  005DBA  0EEF               	movlw	low _main_stateMachine
  2023  005DBC  0100               	movlb	0	; () banked
  2024  005DBE  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2025  005DC0  0E01               	movlw	high _main_stateMachine
  2026  005DC2  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2027  005DC4  ECC2  F00F         	call	_sm_execute_main	;wreg free
  2028                           
  2029                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2030  005DC8  0EE4               	movlw	low _controlGate_stateMachine
  2031  005DCA  0100               	movlb	0	; () banked
  2032  005DCC  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2033  005DCE  0E01               	movlw	high _controlGate_stateMachine
  2034  005DD0  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2035  005DD2  EC03  F01B         	call	_sm_execute_ControlGate	;wreg free
  2036                           
  2037                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2038  005DD6  0101               	movlb	1	; () banked
  2039  005DD8  2996               	incf	_lastKey& (0+255),w,b
  2040  005DDA  B4D8               	btfsc	status,2,c
  2041  005DDC  D7B7               	goto	l23245
  2042                           
  2043                           ; BSR set to: 1
  2044                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2045  005DDE  EC80  F047         	call	_InitReceiver	;wreg free
  2046                           
  2047                           ; BSR set to: 1
  2048                           
  2049                           ;main_MC50.c: 185:         }
  2050  005DE2  D7B4               	goto	l23245
  2051  005DE4                     __end_of_main:
  2052                           	callstack 0
  2053                           
  2054 ;; *************** function _sm_execute_main *****************
  2055 ;; Defined at:
  2056 ;;		line 26 in file "sm_Main_MC50.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  psm             2   21[BANK0 ] PTR struct .
  2059 ;;		 -> main_stateMachine(11), 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 3F/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2071 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2073 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2074 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2075 ;;Total ram usage:        4 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; Hardware stack levels required when called: 16
  2078 ;; This function calls:
  2079 ;;		_SetSegmentValueIntermitentMain
  2080 ;;		_SetSegmentValueMain
  2081 ;;		_load_New_Menu
  2082 ;;		_sm_execute_menuConfiguration
  2083 ;;		_sm_send_event
  2084 ;; This function is called by:
  2085 ;;		_main
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text1
  2090  001F84                     __ptext1:
  2091                           	callstack 0
  2092  001F84                     _sm_execute_main:
  2093                           	callstack 14
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2097                           
  2098                           ; BSR set to: 1
  2099                           ;incstack = 0
  2100  001F84  D053               	goto	l22747
  2101  001F86                     l22723:
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2105  001F86  5185               	movf	_programmer_enable& (0+255),w,b
  2106  001F88  A4D8               	btfss	status,2,c
  2107  001F8A  D066               	goto	l22749
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2111  001F8C  EE20 F004          	lfsr	2,4
  2112  001F90  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2113  001F92  26D9               	addwf	fsr2l,f,c
  2114  001F94  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2115  001F96  22DA               	addwfc	fsr2h,f,c
  2116  001F98  0E06               	movlw	6
  2117  001F9A  18DE               	xorwf	postinc2,w,c
  2118  001F9C  10DE               	iorwf	postinc2,w,c
  2119  001F9E  A4D8               	btfss	status,2,c
  2120  001FA0  D006               	goto	l22729
  2121  001FA2                     u27700:
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2125  001FA2  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2126  001FA6  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2127  001FAA  0E01               	movlw	1
  2128  001FAC  D01D               	goto	L2
  2129  001FAE                     l22729:
  2130                           
  2131                           ; BSR set to: 0
  2132  001FAE  EE20 F004          	lfsr	2,4
  2133  001FB2  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2134  001FB4  26D9               	addwf	fsr2l,f,c
  2135  001FB6  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2136  001FB8  22DA               	addwfc	fsr2h,f,c
  2137  001FBA  0E11               	movlw	17
  2138  001FBC  18DE               	xorwf	postinc2,w,c
  2139  001FBE  10DE               	iorwf	postinc2,w,c
  2140  001FC0  A4D8               	btfss	status,2,c
  2141  001FC2  D04A               	goto	l22749
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2145  001FC4  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2146  001FC8  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2147  001FCC  0E02               	movlw	2
  2148  001FCE  D00C               	goto	L2
  2149  001FD0                     l22733:
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2153  001FD0  EE20 F004          	lfsr	2,4
  2154  001FD4  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2155  001FD6  26D9               	addwf	fsr2l,f,c
  2156  001FD8  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2157  001FDA  22DA               	addwfc	fsr2h,f,c
  2158  001FDC  0E07               	movlw	7
  2159  001FDE  18DE               	xorwf	postinc2,w,c
  2160  001FE0  10DE               	iorwf	postinc2,w,c
  2161  001FE2  A4D8               	btfss	status,2,c
  2162  001FE4  D039               	goto	l22749
  2163  001FE6  D00F               	goto	u27730
  2164  001FE8                     L2:
  2165  001FE8  6EDE               	movwf	postinc2,c
  2166  001FEA  0E00               	movlw	0
  2167  001FEC  6EDD               	movwf	postdec2,c
  2168  001FEE  D034               	goto	l22749
  2169  001FF0                     l22737:
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2173  001FF0  EE20 F004          	lfsr	2,4
  2174  001FF4  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2175  001FF6  26D9               	addwf	fsr2l,f,c
  2176  001FF8  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2177  001FFA  22DA               	addwfc	fsr2h,f,c
  2178  001FFC  0E07               	movlw	7
  2179  001FFE  18DE               	xorwf	postinc2,w,c
  2180  002000  10DE               	iorwf	postinc2,w,c
  2181  002002  A4D8               	btfss	status,2,c
  2182  002004  D006               	goto	l22741
  2183  002006                     u27730:
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2187  002006  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2188  00200A  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2189  00200E  0E00               	movlw	0
  2190  002010  D7EB               	goto	L2
  2191  002012                     l22741:
  2192                           
  2193                           ; BSR set to: 0
  2194  002012  EE20 F004          	lfsr	2,4
  2195  002016  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2196  002018  26D9               	addwf	fsr2l,f,c
  2197  00201A  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2198  00201C  22DA               	addwfc	fsr2h,f,c
  2199  00201E  0E06               	movlw	6
  2200  002020  18DE               	xorwf	postinc2,w,c
  2201  002022  10DE               	iorwf	postinc2,w,c
  2202  002024  A4D8               	btfss	status,2,c
  2203  002026  D018               	goto	l22749
  2204  002028  D7BC               	goto	u27700
  2205  00202A                     l3048:
  2206                           
  2207                           ; BSR set to: 0
  2208  00202A  D7FF               	goto	l3048
  2209  00202C                     l22747:
  2210                           
  2211                           ; BSR set to: 0
  2212  00202C  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2213  002030  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2214  002034  50DF               	movf	indf2,w,c
  2215  002036  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2216  002038  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2217                           
  2218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2219                           ; Switch size 1, requested type "simple"
  2220                           ; Number of cases is 1, Range of values is 0 to 0
  2221                           ; switch strategies available:
  2222                           ; Name         Instructions Cycles
  2223                           ; simple_byte            4     3 (average)
  2224                           ;	Chosen strategy is simple_byte
  2225  00203A  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2226  00203C  0A00               	xorlw	0	; case 0
  2227  00203E  A4D8               	btfss	status,2,c
  2228  002040  D7F4               	goto	l3048
  2229                           
  2230                           ; BSR set to: 0
  2231                           ; Switch size 1, requested type "simple"
  2232                           ; Number of cases is 3, Range of values is 0 to 2
  2233                           ; switch strategies available:
  2234                           ; Name         Instructions Cycles
  2235                           ; simple_byte           10     6 (average)
  2236                           ;	Chosen strategy is simple_byte
  2237  002042  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2238  002044  0A00               	xorlw	0	; case 0
  2239  002046  B4D8               	btfsc	status,2,c
  2240  002048  D79E               	goto	l22723
  2241  00204A  0A01               	xorlw	1	; case 1
  2242  00204C  B4D8               	btfsc	status,2,c
  2243  00204E  D7C0               	goto	l22733
  2244  002050  0A03               	xorlw	3	; case 2
  2245  002052  B4D8               	btfsc	status,2,c
  2246  002054  D7CD               	goto	l22737
  2247  002056  D7E9               	goto	l3048
  2248  002058                     l22749:
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2252  002058  0EEF               	movlw	low _main_stateMachine
  2253  00205A  6E12               	movwf	sm_send_event@psm^0,c
  2254  00205C  0E01               	movlw	high _main_stateMachine
  2255  00205E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2256  002060  0E00               	movlw	0
  2257  002062  6E15               	movwf	(sm_send_event@event+1)^0,c
  2258  002064  0E00               	movlw	0
  2259  002066  6E14               	movwf	sm_send_event@event^0,c
  2260  002068  ECD6  F040         	call	_sm_send_event	;wreg free
  2261                           
  2262                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2263  00206C  D1F8               	goto	l23027
  2264  00206E                     l22751:
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0 && button_struct.timer>((1000/50)*5))
  2268  00206E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2269  002070  A4D8               	btfss	status,2,c
  2270  002072  D016               	goto	l22763
  2271                           
  2272                           ; BSR set to: 0
  2273  002074  0E64               	movlw	100
  2274  002076  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2275  002078  D013               	goto	l22763
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2279  00207A  0E01               	movlw	1
  2280  00207C  EC3A  F01E         	call	_load_New_Menu
  2281  002080                     l22757:
  2282                           
  2283                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2284  002080  0EEF               	movlw	low _main_stateMachine
  2285  002082  6E12               	movwf	sm_send_event@psm^0,c
  2286  002084  0E01               	movlw	high _main_stateMachine
  2287  002086  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2288  002088  0E00               	movlw	0
  2289  00208A  6E15               	movwf	(sm_send_event@event+1)^0,c
  2290  00208C  0E06               	movlw	6
  2291  00208E  6E14               	movwf	sm_send_event@event^0,c
  2292  002090  ECD6  F040         	call	_sm_send_event	;wreg free
  2293                           
  2294                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2295  002094  0E01               	movlw	1
  2296  002096  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2297                           
  2298                           ;sm_Main_MC50.c: 91:                 temp=0;
  2299  002098  0E00               	movlw	0
  2300  00209A  0100               	movlb	0	; () banked
  2301  00209C  6F80               	movwf	_temp& (0+255),b
  2302                           
  2303                           ;sm_Main_MC50.c: 92:             }
  2304  00209E  0012               	return	
  2305  0020A0                     l22763:
  2306                           
  2307                           ; BSR set to: 0
  2308  0020A0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2309  0020A2  A4D8               	btfss	status,2,c
  2310  0020A4  D00B               	goto	l22771
  2311                           
  2312                           ; BSR set to: 0
  2313  0020A6  0E14               	movlw	20
  2314  0020A8  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2315  0020AA  D008               	goto	l22771
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2319  0020AC  0E00               	movlw	0
  2320  0020AE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2321  0020B0  0E10               	movlw	16
  2322  0020B2  EC8D  F047         	call	_SetSegmentValueMain
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;sm_Main_MC50.c: 98:                 temp=1;
  2326  0020B6  0E01               	movlw	1
  2327  0020B8  6F80               	movwf	_temp& (0+255),b
  2328                           
  2329                           ;sm_Main_MC50.c: 99:             }
  2330  0020BA  0012               	return	
  2331  0020BC                     l22771:
  2332                           
  2333                           ; BSR set to: 0
  2334  0020BC  0580               	decf	_temp& (0+255),w,b
  2335  0020BE  A4D8               	btfss	status,2,c
  2336  0020C0  D004               	goto	l22781
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2340  0020C2  0E00               	movlw	0
  2341  0020C4  EC3A  F01E         	call	_load_New_Menu
  2342  0020C8  D7DB               	goto	l22757
  2343  0020CA                     l22781:
  2344                           
  2345                           ; BSR set to: 0
  2346  0020CA  0E27               	movlw	39
  2347  0020CC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2348  0020CE  A4D8               	btfss	status,2,c
  2349  0020D0  D007               	goto	l22793
  2350                           
  2351                           ; BSR set to: 0
  2352  0020D2  0E78               	movlw	120
  2353  0020D4  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2354  0020D6  D004               	goto	l22793
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2358  0020D8  0E0D               	movlw	13
  2359  0020DA  EC3A  F01E         	call	_load_New_Menu
  2360  0020DE  D7D0               	goto	l22757
  2361  0020E0                     l22793:
  2362                           
  2363                           ; BSR set to: 0
  2364  0020E0  0E27               	movlw	39
  2365  0020E2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2366  0020E4  A4D8               	btfss	status,2,c
  2367  0020E6  D00B               	goto	l22801
  2368                           
  2369                           ; BSR set to: 0
  2370  0020E8  0E14               	movlw	20
  2371  0020EA  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2372  0020EC  D008               	goto	l22801
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2376  0020EE  0E13               	movlw	19
  2377  0020F0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2378  0020F2  0E05               	movlw	5
  2379  0020F4  EC8D  F047         	call	_SetSegmentValueMain
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;sm_Main_MC50.c: 119:                 temp=2;
  2383  0020F8  0E02               	movlw	2
  2384  0020FA  6F80               	movwf	_temp& (0+255),b
  2385                           
  2386                           ;sm_Main_MC50.c: 120:             }
  2387  0020FC  0012               	return	
  2388  0020FE                     l22801:
  2389                           
  2390                           ; BSR set to: 0
  2391  0020FE  0E02               	movlw	2
  2392  002100  1980               	xorwf	_temp& (0+255),w,b
  2393  002102  A4D8               	btfss	status,2,c
  2394  002104  D004               	goto	l22811
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2398  002106  0E0C               	movlw	12
  2399  002108  EC3A  F01E         	call	_load_New_Menu
  2400  00210C  D7B9               	goto	l22757
  2401  00210E                     l22811:
  2402                           
  2403                           ; BSR set to: 0
  2404  00210E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2405  002110  A4D8               	btfss	status,2,c
  2406  002112  D009               	goto	l22817
  2407                           
  2408                           ; BSR set to: 0
  2409  002114  0101               	movlb	1	; () banked
  2410  002116  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2411  002118  A4D8               	btfss	status,2,c
  2412  00211A  D005               	goto	l22817
  2413                           
  2414                           ; BSR set to: 1
  2415                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2416  00211C  0E01               	movlw	1
  2417  00211E  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2418                           
  2419                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2420  002120  0E03               	movlw	3
  2421  002122  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2422                           
  2423                           ;sm_Main_MC50.c: 132:             }
  2424  002124  0012               	return	
  2425  002126                     l22817:
  2426  002126  0E17               	movlw	23
  2427  002128  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2428  00212A  A4D8               	btfss	status,2,c
  2429  00212C  D009               	goto	l22823
  2430  00212E  0101               	movlb	1	; () banked
  2431  002130  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2432  002132  A4D8               	btfss	status,2,c
  2433  002134  D005               	goto	l22823
  2434                           
  2435                           ; BSR set to: 1
  2436                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2437  002136  0E01               	movlw	1
  2438  002138  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2439                           
  2440                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2441  00213A  0E01               	movlw	1
  2442  00213C  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2443                           
  2444                           ;sm_Main_MC50.c: 137:             }
  2445  00213E  0012               	return	
  2446  002140                     l22823:
  2447  002140  0101               	movlb	1	; () banked
  2448  002142  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2449  002144  A4D8               	btfss	status,2,c
  2450  002146  D005               	goto	l22827
  2451                           
  2452                           ; BSR set to: 1
  2453                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2454  002148  0E00               	movlw	0
  2455  00214A  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2456                           
  2457                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2458  00214C  0E00               	movlw	0
  2459  00214E  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2460                           
  2461                           ;sm_Main_MC50.c: 142:             }
  2462  002150  0012               	return	
  2463  002152                     l22827:
  2464                           
  2465                           ; BSR set to: 1
  2466  002152  0E06               	movlw	6
  2467  002154  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2468  002156  B4D8               	btfsc	status,2,c
  2469  002158  D004               	goto	u27910
  2470                           
  2471                           ; BSR set to: 1
  2472  00215A  0E05               	movlw	5
  2473  00215C  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2474  00215E  A4D8               	btfss	status,2,c
  2475  002160  D015               	goto	l22841
  2476  002162                     u27910:
  2477                           
  2478                           ; BSR set to: 1
  2479  002162  0E63               	movlw	99
  2480  002164  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2481  002166  D012               	goto	l22841
  2482                           
  2483                           ; BSR set to: 1
  2484                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2485  002168  0E0C               	movlw	12
  2486  00216A  EC3A  F01E         	call	_load_New_Menu
  2487                           
  2488                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2489  00216E  0EEF               	movlw	low _main_stateMachine
  2490  002170  6E12               	movwf	sm_send_event@psm^0,c
  2491  002172  0E01               	movlw	high _main_stateMachine
  2492  002174  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2493  002176  0E00               	movlw	0
  2494  002178  6E15               	movwf	(sm_send_event@event+1)^0,c
  2495  00217A  0E06               	movlw	6
  2496  00217C  6E14               	movwf	sm_send_event@event^0,c
  2497  00217E  ECD6  F040         	call	_sm_send_event	;wreg free
  2498                           
  2499                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2500  002182  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2501                           
  2502                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2503  002186  0E01               	movlw	1
  2504  002188  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2505                           
  2506                           ;sm_Main_MC50.c: 149:             }
  2507  00218A  0012               	return	
  2508  00218C                     l22841:
  2509                           
  2510                           ; BSR set to: 1
  2511  00218C  BFA9               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2512  00218E  D005               	goto	u27930
  2513  002190  51A9               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2514  002192  E111               	bnz	l3060
  2515  002194  05A8               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2516  002196  B0D8               	btfsc	status,0,c
  2517  002198  0012               	return	
  2518  00219A                     u27930:
  2519                           
  2520                           ; BSR set to: 1
  2521                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2522  00219A  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2523  00219C  A4D8               	btfss	status,2,c
  2524  00219E  D006               	goto	l22847
  2525                           
  2526                           ; BSR set to: 1
  2527                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2528  0021A0  0E0C               	movlw	12
  2529  0021A2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2530  0021A4  0E0F               	movlw	15
  2531  0021A6  EC8D  F047         	call	_SetSegmentValueMain
  2532                           
  2533                           ;sm_Main_MC50.c: 157:                     }
  2534  0021AA  0012               	return	
  2535  0021AC                     l22847:
  2536                           
  2537                           ; BSR set to: 1
  2538                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2539  0021AC  0E18               	movlw	24
  2540  0021AE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2541  0021B0  0E18               	movlw	24
  2542  0021B2  EC8D  F047         	call	_SetSegmentValueMain
  2543  0021B6                     l3060:
  2544                           
  2545                           ; BSR set to: 1
  2546  0021B6  0012               	return	
  2547  0021B8                     l22849:
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2551  0021B8  0EBB               	movlw	low _menuConfiguration_stateMachine
  2552  0021BA  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2553  0021BC  0E02               	movlw	high _menuConfiguration_stateMachine
  2554  0021BE  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2555  0021C0  EC91  F007         	call	_sm_execute_menuConfiguration	;wreg free
  2556                           
  2557                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2558  0021C4  0012               	return	
  2559  0021C6                     l22851:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2563  0021C6  0E00               	movlw	0
  2564  0021C8  0101               	movlb	1	; () banked
  2565  0021CA  6F8D               	movwf	_aux_in_auto_close& (0+255),b
  2566                           
  2567                           ; BSR set to: 1
  2568                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2569  0021CC  0E04               	movlw	4
  2570  0021CE  19E4               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2571  0021D0  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2572  0021D2  A4D8               	btfss	status,2,c
  2573  0021D4  D013               	goto	l3083
  2574                           
  2575                           ; BSR set to: 1
  2576                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2577  0021D6  0100               	movlb	0	; () banked
  2578  0021D8  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2579  0021DA  A4D8               	btfss	status,2,c
  2580  0021DC  D007               	goto	l22861
  2581                           
  2582                           ; BSR set to: 0
  2583  0021DE  0101               	movlb	1	; () banked
  2584  0021E0  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2585  0021E2  A4D8               	btfss	status,2,c
  2586  0021E4  D003               	goto	l22861
  2587  0021E6                     u27970:
  2588                           
  2589                           ; BSR set to: 1
  2590                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2591  0021E6  0E01               	movlw	1
  2592  0021E8  6F8D               	movwf	_aux_in_auto_close& (0+255),b
  2593                           
  2594                           ;sm_Main_MC50.c: 182:                 }
  2595  0021EA  D008               	goto	l3083
  2596  0021EC                     l22861:
  2597  0021EC  0100               	movlb	0	; () banked
  2598  0021EE  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2599  0021F0  B4D8               	btfsc	status,2,c
  2600  0021F2  D004               	goto	l3083
  2601                           
  2602                           ; BSR set to: 0
  2603  0021F4  0101               	movlb	1	; () banked
  2604  0021F6  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2605  0021F8  A4D8               	btfss	status,2,c
  2606  0021FA  D7F5               	goto	u27970
  2607  0021FC                     l3083:
  2608                           
  2609                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2610  0021FC  0101               	movlb	1	; () banked
  2611  0021FE  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2612  002200  A4D8               	btfss	status,2,c
  2613  002202  D069               	goto	l3097
  2614                           
  2615                           ; BSR set to: 1
  2616  002204  0E04               	movlw	4
  2617  002206  19E4               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2618  002208  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2619  00220A  A4D8               	btfss	status,2,c
  2620  00220C  D003               	goto	u28020
  2621                           
  2622                           ; BSR set to: 1
  2623  00220E  518D               	movf	_aux_in_auto_close& (0+255),w,b
  2624  002210  B4D8               	btfsc	status,2,c
  2625  002212  D008               	goto	u28040
  2626  002214                     u28020:
  2627                           
  2628                           ; BSR set to: 1
  2629  002214  05E4               	decf	_controlGate_stateMachine& (0+255),w,b
  2630  002216  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2631  002218  B4D8               	btfsc	status,2,c
  2632  00221A  D004               	goto	u28040
  2633                           
  2634                           ; BSR set to: 1
  2635  00221C  51E4               	movf	_controlGate_stateMachine& (0+255),w,b
  2636  00221E  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2637  002220  A4D8               	btfss	status,2,c
  2638  002222  D059               	goto	l3097
  2639  002224                     u28040:
  2640                           
  2641                           ; BSR set to: 1
  2642                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0 && button_struct.timer>((1000/50)*5))
  2643  002224  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2644  002226  A4D8               	btfss	status,2,c
  2645  002228  D015               	goto	l22889
  2646                           
  2647                           ; BSR set to: 1
  2648  00222A  0E64               	movlw	100
  2649  00222C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2650  00222E  D012               	goto	l22889
  2651                           
  2652                           ; BSR set to: 1
  2653                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2654  002230  0E01               	movlw	1
  2655  002232  EC3A  F01E         	call	_load_New_Menu
  2656  002236                     l22883:
  2657                           
  2658                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2659  002236  0EEF               	movlw	low _main_stateMachine
  2660  002238  6E12               	movwf	sm_send_event@psm^0,c
  2661  00223A  0E01               	movlw	high _main_stateMachine
  2662  00223C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2663  00223E  0E00               	movlw	0
  2664  002240  6E15               	movwf	(sm_send_event@event+1)^0,c
  2665  002242  0E06               	movlw	6
  2666  002244  6E14               	movwf	sm_send_event@event^0,c
  2667  002246  ECD6  F040         	call	_sm_send_event	;wreg free
  2668                           
  2669                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2670  00224A  0E01               	movlw	1
  2671  00224C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2672                           
  2673                           ;sm_Main_MC50.c: 200:                     temp=0;
  2674  00224E  0E00               	movlw	0
  2675  002250  0100               	movlb	0	; () banked
  2676  002252  D037               	goto	L4
  2677  002254                     l22889:
  2678                           
  2679                           ; BSR set to: 1
  2680  002254  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2681  002256  A4D8               	btfss	status,2,c
  2682  002258  D00A               	goto	l22897
  2683                           
  2684                           ; BSR set to: 1
  2685  00225A  0E14               	movlw	20
  2686  00225C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2687  00225E  D007               	goto	l22897
  2688                           
  2689                           ; BSR set to: 1
  2690                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2691  002260  0E00               	movlw	0
  2692  002262  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2693  002264  0E10               	movlw	16
  2694  002266  EC8D  F047         	call	_SetSegmentValueMain
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;sm_Main_MC50.c: 206:                     temp=1;
  2698  00226A  0E01               	movlw	1
  2699  00226C  D02A               	goto	L4
  2700  00226E                     l22897:
  2701                           
  2702                           ; BSR set to: 1
  2703  00226E  0100               	movlb	0	; () banked
  2704  002270  0580               	decf	_temp& (0+255),w,b
  2705  002272  A4D8               	btfss	status,2,c
  2706  002274  D00E               	goto	l22911
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2710  002276  0E00               	movlw	0
  2711  002278  EC3A  F01E         	call	_load_New_Menu
  2712                           
  2713                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2714  00227C  0E01               	movlw	1
  2715  00227E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2716                           
  2717                           ;sm_Main_MC50.c: 213:                     temp=0;
  2718  002280  0E00               	movlw	0
  2719  002282  0100               	movlb	0	; () banked
  2720  002284  6F80               	movwf	_temp& (0+255),b
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2724  002286  0E00               	movlw	0
  2725  002288  0101               	movlb	1	; () banked
  2726  00228A  6FF0               	movwf	(_main_stateMachine+1)& (0+255),b
  2727  00228C  0E01               	movlw	1
  2728  00228E  6FEF               	movwf	_main_stateMachine& (0+255),b
  2729  002290  0012               	return	
  2730  002292                     l22911:
  2731                           
  2732                           ; BSR set to: 0
  2733  002292  0E27               	movlw	39
  2734  002294  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2735  002296  A4D8               	btfss	status,2,c
  2736  002298  D007               	goto	l22923
  2737                           
  2738                           ; BSR set to: 0
  2739  00229A  0E78               	movlw	120
  2740  00229C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2741  00229E  D004               	goto	l22923
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2745  0022A0  0E0D               	movlw	13
  2746  0022A2  EC3A  F01E         	call	_load_New_Menu
  2747  0022A6  D7C7               	goto	l22883
  2748  0022A8                     l22923:
  2749                           
  2750                           ; BSR set to: 0
  2751  0022A8  0E27               	movlw	39
  2752  0022AA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2753  0022AC  A4D8               	btfss	status,2,c
  2754  0022AE  D00B               	goto	l22931
  2755                           
  2756                           ; BSR set to: 0
  2757  0022B0  0E14               	movlw	20
  2758  0022B2  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2759  0022B4  D008               	goto	l22931
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2763  0022B6  0E13               	movlw	19
  2764  0022B8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2765  0022BA  0E05               	movlw	5
  2766  0022BC  EC8D  F047         	call	_SetSegmentValueMain
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;sm_Main_MC50.c: 229:                 temp=2;
  2770  0022C0  0E02               	movlw	2
  2771  0022C2                     L4:
  2772  0022C2  6F80               	movwf	_temp& (0+255),b
  2773                           
  2774                           ;sm_Main_MC50.c: 230:             }
  2775  0022C4  D008               	goto	l3097
  2776  0022C6                     l22931:
  2777                           
  2778                           ; BSR set to: 0
  2779  0022C6  0E02               	movlw	2
  2780  0022C8  1980               	xorwf	_temp& (0+255),w,b
  2781  0022CA  A4D8               	btfss	status,2,c
  2782  0022CC  D004               	goto	l3097
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2786  0022CE  0E0C               	movlw	12
  2787  0022D0  EC3A  F01E         	call	_load_New_Menu
  2788  0022D4  D6D5               	goto	l22757
  2789  0022D6                     l3097:
  2790                           
  2791                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0 && button_struct.current!=0x27) )
  2792                           
  2793                           ; BSR set to: 0
  2794  0022D6  0101               	movlb	1	; () banked
  2795  0022D8  BFA9               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2796  0022DA  D005               	goto	u28150
  2797  0022DC  51A9               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2798  0022DE  E102               	bnz	u28151
  2799  0022E0  05A8               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2800  0022E2  B0D8               	btfsc	status,0,c
  2801  0022E4                     u28151:
  2802  0022E4  0012               	return	
  2803  0022E6                     u28150:
  2804                           
  2805                           ; BSR set to: 1
  2806  0022E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2807  0022E8  B4D8               	btfsc	status,2,c
  2808  0022EA  0012               	return	
  2809                           
  2810                           ; BSR set to: 1
  2811  0022EC  0E27               	movlw	39
  2812  0022EE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2813  0022F0  B4D8               	btfsc	status,2,c
  2814  0022F2  0012               	return	
  2815                           
  2816                           ; BSR set to: 1
  2817                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2818  0022F4  0E03               	movlw	3
  2819  0022F6  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2820  0022F8  A4D8               	btfss	status,2,c
  2821  0022FA  D011               	goto	l22957
  2822                           
  2823                           ; BSR set to: 1
  2824                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2825  0022FC  0E12               	movlw	18
  2826  0022FE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2827  002300  0E00               	movlw	0
  2828  002302  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2829  002304  0E0A               	movlw	10
  2830  002306  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2831  002308  0E0C               	movlw	12
  2832  00230A  EC28  F048         	call	_SetSegmentValueIntermitentMain
  2833  00230E                     l22953:
  2834                           
  2835                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2836  00230E  0E00               	movlw	0
  2837  002310  0101               	movlb	1	; () banked
  2838  002312  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2839  002314  0E04               	movlw	4
  2840  002316  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2841                           
  2842                           ; BSR set to: 1
  2843                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2844  002318  0E00               	movlw	0
  2845  00231A  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2846                           
  2847                           ;sm_Main_MC50.c: 252:                 }
  2848  00231C  0012               	return	
  2849  00231E                     l22957:
  2850                           
  2851                           ; BSR set to: 1
  2852  00231E  0E02               	movlw	2
  2853  002320  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2854  002322  B4D8               	btfsc	status,2,c
  2855  002324  D003               	goto	u28200
  2856                           
  2857                           ; BSR set to: 1
  2858  002326  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2859  002328  A4D8               	btfss	status,2,c
  2860  00232A  D00A               	goto	l22967
  2861  00232C                     u28200:
  2862                           
  2863                           ; BSR set to: 1
  2864                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2865  00232C  0E10               	movlw	16
  2866  00232E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2867  002330  0E00               	movlw	0
  2868  002332  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2869  002334  0E0A               	movlw	10
  2870  002336  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2871  002338  0E00               	movlw	0
  2872  00233A  EC28  F048         	call	_SetSegmentValueIntermitentMain
  2873  00233E  D7E7               	goto	l22953
  2874  002340                     l22967:
  2875                           
  2876                           ; BSR set to: 1
  2877  002340  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2878  002342  A4D8               	btfss	status,2,c
  2879  002344  D00F               	goto	l22973
  2880                           
  2881                           ; BSR set to: 1
  2882  002346  05E4               	decf	_controlGate_stateMachine& (0+255),w,b
  2883  002348  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2884  00234A  A4D8               	btfss	status,2,c
  2885  00234C  D00B               	goto	l22973
  2886                           
  2887                           ; BSR set to: 1
  2888                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  2889  00234E  0EEF               	movlw	low _main_stateMachine
  2890  002350  6E12               	movwf	sm_send_event@psm^0,c
  2891  002352  0E01               	movlw	high _main_stateMachine
  2892  002354  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2893  002356  0E00               	movlw	0
  2894  002358  6E15               	movwf	(sm_send_event@event+1)^0,c
  2895  00235A  0E07               	movlw	7
  2896  00235C  6E14               	movwf	sm_send_event@event^0,c
  2897  00235E  ECD6  F040         	call	_sm_send_event	;wreg free
  2898                           
  2899                           ;sm_Main_MC50.c: 264:                 }
  2900  002362  0012               	return	
  2901  002364                     l22973:
  2902                           
  2903                           ; BSR set to: 1
  2904  002364  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2905  002366  A4D8               	btfss	status,2,c
  2906  002368  D074               	goto	l23023
  2907                           
  2908                           ; BSR set to: 1
  2909  00236A  0E04               	movlw	4
  2910  00236C  19E4               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2911  00236E  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2912  002370  A4D8               	btfss	status,2,c
  2913  002372  D06F               	goto	l23023
  2914                           
  2915                           ; BSR set to: 1
  2916                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  2917  002374  0100               	movlb	0	; () banked
  2918  002376  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2919  002378  B4D8               	btfsc	status,2,c
  2920  00237A  D00B               	goto	u28280
  2921                           
  2922                           ; BSR set to: 0
  2923  00237C  0101               	movlb	1	; () banked
  2924  00237E  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2925  002380  B4D8               	btfsc	status,2,c
  2926  002382  D007               	goto	u28280
  2927                           
  2928                           ; BSR set to: 1
  2929  002384  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  2930  002386  B4D8               	btfsc	status,2,c
  2931  002388  D013               	goto	u28320
  2932                           
  2933                           ; BSR set to: 1
  2934  00238A  0E03               	movlw	3
  2935  00238C  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2936  00238E  B4D8               	btfsc	status,2,c
  2937  002390  D00F               	goto	u28320
  2938  002392                     u28280:
  2939  002392  0100               	movlb	0	; () banked
  2940  002394  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2941  002396  A4D8               	btfss	status,2,c
  2942  002398  D026               	goto	l23001
  2943                           
  2944                           ; BSR set to: 0
  2945  00239A  0101               	movlb	1	; () banked
  2946  00239C  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2947  00239E  A4D8               	btfss	status,2,c
  2948  0023A0  D022               	goto	l23001
  2949                           
  2950                           ; BSR set to: 1
  2951  0023A2  0E02               	movlw	2
  2952  0023A4  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2953  0023A6  B4D8               	btfsc	status,2,c
  2954  0023A8  D01E               	goto	l23001
  2955                           
  2956                           ; BSR set to: 1
  2957  0023AA  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2958  0023AC  B4D8               	btfsc	status,2,c
  2959  0023AE  D01B               	goto	l23001
  2960  0023B0                     u28320:
  2961                           
  2962                           ; BSR set to: 1
  2963                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  2964  0023B0  0E00               	movlw	0
  2965  0023B2  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2966  0023B4  0E0A               	movlw	10
  2967  0023B6  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2968                           
  2969                           ; BSR set to: 1
  2970                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  2971  0023B8  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  2972  0023BA  A4D8               	btfss	status,2,c
  2973  0023BC  D00A               	goto	l22999
  2974                           
  2975                           ; BSR set to: 1
  2976                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  2977  0023BE  0E10               	movlw	16
  2978  0023C0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2979  0023C2  0E00               	movlw	0
  2980  0023C4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2981  0023C6  0E0A               	movlw	10
  2982  0023C8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2983  0023CA  0E0A               	movlw	10
  2984  0023CC  EC28  F048         	call	_SetSegmentValueIntermitentMain
  2985                           
  2986                           ;sm_Main_MC50.c: 282:                         }
  2987  0023D0  0012               	return	
  2988  0023D2                     l22999:
  2989                           
  2990                           ; BSR set to: 1
  2991                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  2992  0023D2  0E0F               	movlw	15
  2993  0023D4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2994  0023D6  0E00               	movlw	0
  2995  0023D8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2996  0023DA  0E0A               	movlw	10
  2997  0023DC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2998  0023DE  0E0A               	movlw	10
  2999  0023E0  EC28  F048         	call	_SetSegmentValueIntermitentMain
  3000  0023E4  0012               	return	
  3001  0023E6                     l23001:
  3002  0023E6  0100               	movlb	0	; () banked
  3003  0023E8  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3004  0023EA  B4D8               	btfsc	status,2,c
  3005  0023EC  D008               	goto	u28360
  3006                           
  3007                           ; BSR set to: 0
  3008  0023EE  0101               	movlb	1	; () banked
  3009  0023F0  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3010  0023F2  B4D8               	btfsc	status,2,c
  3011  0023F4  D004               	goto	u28360
  3012                           
  3013                           ; BSR set to: 1
  3014  0023F6  0E02               	movlw	2
  3015  0023F8  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3016  0023FA  B4D8               	btfsc	status,2,c
  3017  0023FC  D00C               	goto	u28390
  3018  0023FE                     u28360:
  3019  0023FE  0100               	movlb	0	; () banked
  3020  002400  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3021  002402  A4D8               	btfss	status,2,c
  3022  002404  D016               	goto	l23017
  3023                           
  3024                           ; BSR set to: 0
  3025  002406  0101               	movlb	1	; () banked
  3026  002408  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3027  00240A  A4D8               	btfss	status,2,c
  3028  00240C  D012               	goto	l23017
  3029                           
  3030                           ; BSR set to: 1
  3031  00240E  0E02               	movlw	2
  3032  002410  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3033  002412  A4D8               	btfss	status,2,c
  3034  002414  D00E               	goto	l23017
  3035  002416                     u28390:
  3036                           
  3037                           ; BSR set to: 1
  3038                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3039  002416  0E00               	movlw	0
  3040  002418  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3041  00241A  0E0A               	movlw	10
  3042  00241C  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3043                           
  3044                           ; BSR set to: 1
  3045                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3046  00241E  0E10               	movlw	16
  3047  002420  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3048  002422  0E00               	movlw	0
  3049  002424  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3050  002426  0E0A               	movlw	10
  3051  002428  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3052  00242A  0E0A               	movlw	10
  3053  00242C  EC28  F048         	call	_SetSegmentValueIntermitentMain
  3054                           
  3055                           ;sm_Main_MC50.c: 298:                     }
  3056  002430  0012               	return	
  3057  002432                     l23017:
  3058  002432  0101               	movlb	1	; () banked
  3059  002434  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3060  002436  A4D8               	btfss	status,2,c
  3061  002438  D006               	goto	l23021
  3062                           
  3063                           ; BSR set to: 1
  3064                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3065  00243A  0E00               	movlw	0
  3066  00243C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3067  00243E  0E0F               	movlw	15
  3068  002440  EC8D  F047         	call	_SetSegmentValueMain
  3069                           
  3070                           ;sm_Main_MC50.c: 304:                     }
  3071  002444  0012               	return	
  3072  002446                     l23021:
  3073                           
  3074                           ; BSR set to: 1
  3075                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3076  002446  0E18               	movlw	24
  3077  002448  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3078  00244A  0E18               	movlw	24
  3079  00244C  EC8D  F047         	call	_SetSegmentValueMain
  3080  002450  0012               	return	
  3081  002452                     l23023:
  3082                           
  3083                           ; BSR set to: 1
  3084                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3085  002452  0E18               	movlw	24
  3086  002454  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3087  002456  0E18               	movlw	24
  3088  002458  EC8D  F047         	call	_SetSegmentValueMain
  3089  00245C  0012               	return	
  3090  00245E                     l23027:
  3091  00245E  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3092  002462  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3093  002466  50DF               	movf	indf2,w,c
  3094  002468  0100               	movlb	0	; () banked
  3095  00246A  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3096  00246C  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3097                           
  3098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3099                           ; Switch size 1, requested type "simple"
  3100                           ; Number of cases is 1, Range of values is 0 to 0
  3101                           ; switch strategies available:
  3102                           ; Name         Instructions Cycles
  3103                           ; simple_byte            4     3 (average)
  3104                           ;	Chosen strategy is simple_byte
  3105  00246E  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3106  002470  0A00               	xorlw	0	; case 0
  3107  002472  A4D8               	btfss	status,2,c
  3108  002474  0012               	return	
  3109                           
  3110                           ; BSR set to: 0
  3111                           ; Switch size 1, requested type "simple"
  3112                           ; Number of cases is 3, Range of values is 0 to 2
  3113                           ; switch strategies available:
  3114                           ; Name         Instructions Cycles
  3115                           ; simple_byte           10     6 (average)
  3116                           ;	Chosen strategy is simple_byte
  3117  002476  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3118  002478  0A00               	xorlw	0	; case 0
  3119  00247A  B4D8               	btfsc	status,2,c
  3120  00247C  D5F8               	goto	l22751
  3121  00247E  0A01               	xorlw	1	; case 1
  3122  002480  B4D8               	btfsc	status,2,c
  3123  002482  D69A               	goto	l22849
  3124  002484  0A03               	xorlw	3	; case 2
  3125  002486  A4D8               	btfss	status,2,c
  3126  002488  0012               	return	
  3127  00248A  D69D               	goto	l22851
  3128  00248C                     __end_of_sm_execute_main:
  3129                           	callstack 0
  3130                           
  3131 ;; *************** function _sm_execute_menuConfiguration *****************
  3132 ;; Defined at:
  3133 ;;		line 31 in file "sm_MenuConfiguration_MC50.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  psm             2   17[BANK0 ] PTR struct .
  3136 ;;		 -> menuConfiguration_stateMachine(11), 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 3F/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3148 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3150 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3151 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3152 ;;Total ram usage:        4 bytes
  3153 ;; Hardware stack levels used: 1
  3154 ;; Hardware stack levels required when called: 15
  3155 ;; This function calls:
  3156 ;;		_ClearFlag_rfCMD
  3157 ;;		_ResetDefaultMemory
  3158 ;;		_SaveNVM_VarSystem
  3159 ;;		_SetSegmentValueIntermitentMain
  3160 ;;		_SetSegmentValueMain
  3161 ;;		___lbdiv
  3162 ;;		___lldiv
  3163 ;;		___lmul
  3164 ;;		___lwdiv
  3165 ;;		_controlLearnDigit
  3166 ;;		_controlSaveRemote
  3167 ;;		_controlSelectRemote
  3168 ;;		_load_New_Menu
  3169 ;;		_setValueToEdit
  3170 ;;		_sm_send_event
  3171 ;; This function is called by:
  3172 ;;		_sm_execute_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text2
  3177  000F22                     __ptext2:
  3178                           	callstack 0
  3179  000F22                     _sm_execute_menuConfiguration:
  3180                           	callstack 14
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;sm_MenuConfiguration_MC50.c: 34:     switch((sm_state_Menu_t) psm->current_state)
  3184                           
  3185                           ;incstack = 0
  3186  000F22  D0A2               	goto	l22179
  3187  000F24                     l22121:
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;sm_MenuConfiguration_MC50.c: 37:         {;sm_MenuConfiguration_MC50.c: 38:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3191  000F24  EE20 F004          	lfsr	2,4
  3192  000F28  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3193  000F2A  26D9               	addwf	fsr2l,f,c
  3194  000F2C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3195  000F2E  22DA               	addwfc	fsr2h,f,c
  3196  000F30  04DE               	decf	postinc2,w,c
  3197  000F32  10DE               	iorwf	postinc2,w,c
  3198  000F34  A4D8               	btfss	status,2,c
  3199  000F36  D006               	goto	l22125
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;sm_MenuConfiguration_MC50.c: 39:             {;sm_MenuConfiguration_MC50.c: 40:        
      +                                   psm->current_state = st_EditParameter;
  3203  000F38  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3204  000F3C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3205  000F40  0E01               	movlw	1
  3206  000F42  D04C               	goto	L9
  3207  000F44                     l22125:
  3208                           
  3209                           ; BSR set to: 0
  3210  000F44  EE20 F004          	lfsr	2,4
  3211  000F48  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3212  000F4A  26D9               	addwf	fsr2l,f,c
  3213  000F4C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3214  000F4E  22DA               	addwfc	fsr2h,f,c
  3215  000F50  0E05               	movlw	5
  3216  000F52  18DE               	xorwf	postinc2,w,c
  3217  000F54  10DE               	iorwf	postinc2,w,c
  3218  000F56  A4D8               	btfss	status,2,c
  3219  000F58  D006               	goto	l22129
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;sm_MenuConfiguration_MC50.c: 43:             {;sm_MenuConfiguration_MC50.c: 44:        
      +                                   psm->current_state = st_Counter;
  3223  000F5A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3224  000F5E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3225  000F62  0E03               	movlw	3
  3226  000F64  D03B               	goto	L9
  3227  000F66                     l22129:
  3228                           
  3229                           ; BSR set to: 0
  3230  000F66  EE20 F004          	lfsr	2,4
  3231  000F6A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3232  000F6C  26D9               	addwf	fsr2l,f,c
  3233  000F6E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3234  000F70  22DA               	addwfc	fsr2h,f,c
  3235  000F72  0E08               	movlw	8
  3236  000F74  18DE               	xorwf	postinc2,w,c
  3237  000F76  10DE               	iorwf	postinc2,w,c
  3238  000F78  A4D8               	btfss	status,2,c
  3239  000F7A  D006               	goto	l22133
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;sm_MenuConfiguration_MC50.c: 47:             {;sm_MenuConfiguration_MC50.c: 48:        
      +                                   psm->current_state = st_SelectRemote;
  3243  000F7C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3244  000F80  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3245  000F84  0E04               	movlw	4
  3246  000F86  D02A               	goto	L9
  3247  000F88                     l22133:
  3248                           
  3249                           ; BSR set to: 0
  3250  000F88  EE20 F004          	lfsr	2,4
  3251  000F8C  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3252  000F8E  26D9               	addwf	fsr2l,f,c
  3253  000F90  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3254  000F92  22DA               	addwfc	fsr2h,f,c
  3255  000F94  0E14               	movlw	20
  3256  000F96  18DE               	xorwf	postinc2,w,c
  3257  000F98  10DE               	iorwf	postinc2,w,c
  3258  000F9A  A4D8               	btfss	status,2,c
  3259  000F9C  D087               	goto	l22181
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;sm_MenuConfiguration_MC50.c: 51:             {;sm_MenuConfiguration_MC50.c: 53:        
      +                                   psm->current_state = st_LearningMode;
  3263  000F9E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3264  000FA2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3265  000FA6  0E06               	movlw	6
  3266  000FA8  D019               	goto	L9
  3267  000FAA                     l22137:
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;sm_MenuConfiguration_MC50.c: 63:         {;sm_MenuConfiguration_MC50.c: 64:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3271  000FAA  EE20 F004          	lfsr	2,4
  3272  000FAE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3273  000FB0  26D9               	addwf	fsr2l,f,c
  3274  000FB2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3275  000FB4  22DA               	addwfc	fsr2h,f,c
  3276  000FB6  0E02               	movlw	2
  3277  000FB8  18DE               	xorwf	postinc2,w,c
  3278  000FBA  10DE               	iorwf	postinc2,w,c
  3279  000FBC  A4D8               	btfss	status,2,c
  3280  000FBE  D006               	goto	l22141
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;sm_MenuConfiguration_MC50.c: 65:             {;sm_MenuConfiguration_MC50.c: 66:        
      +                                   psm->current_state = st_SaveParameter;
  3284  000FC0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3285  000FC4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3286  000FC8  0E02               	movlw	2
  3287  000FCA  D008               	goto	L9
  3288  000FCC                     l22141:
  3289                           
  3290                           ; BSR set to: 0
  3291  000FCC  EE20 F004          	lfsr	2,4
  3292  000FD0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3293  000FD2  26D9               	addwf	fsr2l,f,c
  3294  000FD4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3295  000FD6  22DA               	addwfc	fsr2h,f,c
  3296  000FD8  0E03               	movlw	3
  3297  000FDA  D03B               	goto	L123
  3298  000FDC                     L9:
  3299  000FDC  6EDE               	movwf	postinc2,c
  3300  000FDE  0E00               	movlw	0
  3301  000FE0  6EDD               	movwf	postdec2,c
  3302  000FE2  D064               	goto	l22181
  3303  000FE4                     l22149:
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;sm_MenuConfiguration_MC50.c: 83:         {;sm_MenuConfiguration_MC50.c: 84:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3307  000FE4  EE20 F004          	lfsr	2,4
  3308  000FE8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3309  000FEA  26D9               	addwf	fsr2l,f,c
  3310  000FEC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3311  000FEE  22DA               	addwfc	fsr2h,f,c
  3312  000FF0  0E04               	movlw	4
  3313  000FF2  18DE               	xorwf	postinc2,w,c
  3314  000FF4  10DE               	iorwf	postinc2,w,c
  3315  000FF6  A4D8               	btfss	status,2,c
  3316  000FF8  D7E9               	goto	l22141
  3317  000FFA  D02F               	goto	u26650
  3318  000FFC                     l22157:
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;sm_MenuConfiguration_MC50.c: 95:         {;sm_MenuConfiguration_MC50.c: 96:            
      +                           if(psm->last_event==ev_addRemotes)
  3322  000FFC  EE20 F004          	lfsr	2,4
  3323  001000  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3324  001002  26D9               	addwf	fsr2l,f,c
  3325  001004  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3326  001006  22DA               	addwfc	fsr2h,f,c
  3327  001008  0E08               	movlw	8
  3328  00100A  18DE               	xorwf	postinc2,w,c
  3329  00100C  10DE               	iorwf	postinc2,w,c
  3330  00100E  A4D8               	btfss	status,2,c
  3331  001010  D7DD               	goto	l22141
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;sm_MenuConfiguration_MC50.c: 97:             {;sm_MenuConfiguration_MC50.c: 98:        
      +                                   psm->current_state = st_SaveRemotes;
  3335  001012  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3336  001016  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3337  00101A  0E05               	movlw	5
  3338  00101C  D7DF               	goto	L9
  3339  00101E                     l22165:
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;sm_MenuConfiguration_MC50.c: 107:         {;sm_MenuConfiguration_MC50.c: 108:          
      +                             if(psm->last_event==ev_NextRemote)
  3343  00101E  EE20 F004          	lfsr	2,4
  3344  001022  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3345  001024  26D9               	addwf	fsr2l,f,c
  3346  001026  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3347  001028  22DA               	addwfc	fsr2h,f,c
  3348  00102A  0E09               	movlw	9
  3349  00102C  18DE               	xorwf	postinc2,w,c
  3350  00102E  10DE               	iorwf	postinc2,w,c
  3351  001030  A4D8               	btfss	status,2,c
  3352  001032  D008               	goto	l22173
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;sm_MenuConfiguration_MC50.c: 109:             {;sm_MenuConfiguration_MC50.c: 110:      
      +                                     psm->current_state = st_SelectRemote;
  3356  001034  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3357  001038  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3358  00103C  0E04               	movlw	4
  3359  00103E  6EDE               	movwf	postinc2,c
  3360  001040  0E00               	movlw	0
  3361  001042  6EDD               	movwf	postdec2,c
  3362  001044                     l22173:
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;sm_MenuConfiguration_MC50.c: 119:         {;sm_MenuConfiguration_MC50.c: 120:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3366  001044  EE20 F004          	lfsr	2,4
  3367  001048  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3368  00104A  26D9               	addwf	fsr2l,f,c
  3369  00104C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3370  00104E  22DA               	addwfc	fsr2h,f,c
  3371  001050  0E04               	movlw	4
  3372  001052                     L123:
  3373  001052  18DE               	xorwf	postinc2,w,c
  3374  001054  10DE               	iorwf	postinc2,w,c
  3375  001056  A4D8               	btfss	status,2,c
  3376  001058  D029               	goto	l22181
  3377  00105A                     u26650:
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;sm_MenuConfiguration_MC50.c: 121:             {;sm_MenuConfiguration_MC50.c: 122:      
      +                                     psm->current_state = st_MainMenu;
  3381  00105A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3382  00105E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3383  001062  0E00               	movlw	0
  3384  001064  D7BB               	goto	L9
  3385  001066                     l3226:
  3386                           
  3387                           ; BSR set to: 0
  3388  001066  D7FF               	goto	l3226
  3389  001068                     l22179:
  3390                           
  3391                           ; BSR set to: 0
  3392  001068  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3393  00106C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3394  001070  50DF               	movf	indf2,w,c
  3395  001072  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3396  001074  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3397                           
  3398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3399                           ; Switch size 1, requested type "simple"
  3400                           ; Number of cases is 1, Range of values is 0 to 0
  3401                           ; switch strategies available:
  3402                           ; Name         Instructions Cycles
  3403                           ; simple_byte            4     3 (average)
  3404                           ;	Chosen strategy is simple_byte
  3405  001076  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3406  001078  0A00               	xorlw	0	; case 0
  3407  00107A  A4D8               	btfss	status,2,c
  3408  00107C  D7F4               	goto	l3226
  3409                           
  3410                           ; BSR set to: 0
  3411                           ; Switch size 1, requested type "simple"
  3412                           ; Number of cases is 7, Range of values is 0 to 6
  3413                           ; switch strategies available:
  3414                           ; Name         Instructions Cycles
  3415                           ; simple_byte           22    12 (average)
  3416                           ;	Chosen strategy is simple_byte
  3417  00107E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3418  001080  0A00               	xorlw	0	; case 0
  3419  001082  B4D8               	btfsc	status,2,c
  3420  001084  D74F               	goto	l22121
  3421  001086  0A01               	xorlw	1	; case 1
  3422  001088  B4D8               	btfsc	status,2,c
  3423  00108A  D78F               	goto	l22137
  3424  00108C  0A03               	xorlw	3	; case 2
  3425  00108E  B4D8               	btfsc	status,2,c
  3426  001090  D7D9               	goto	l22173
  3427  001092  0A01               	xorlw	1	; case 3
  3428  001094  B4D8               	btfsc	status,2,c
  3429  001096  D7A6               	goto	l22149
  3430  001098  0A07               	xorlw	7	; case 4
  3431  00109A  B4D8               	btfsc	status,2,c
  3432  00109C  D7AF               	goto	l22157
  3433  00109E  0A01               	xorlw	1	; case 5
  3434  0010A0  B4D8               	btfsc	status,2,c
  3435  0010A2  D7BD               	goto	l22165
  3436  0010A4  0A03               	xorlw	3	; case 6
  3437  0010A6  B4D8               	btfsc	status,2,c
  3438  0010A8  D7CD               	goto	l22173
  3439  0010AA  D7DD               	goto	l3226
  3440  0010AC                     l22181:
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;sm_MenuConfiguration_MC50.c: 135:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3444  0010AC  0EBB               	movlw	low _menuConfiguration_stateMachine
  3445  0010AE  6E12               	movwf	sm_send_event@psm^0,c
  3446  0010B0  0E02               	movlw	high _menuConfiguration_stateMachine
  3447  0010B2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3448  0010B4  0E00               	movlw	0
  3449  0010B6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3450  0010B8  0E00               	movlw	0
  3451  0010BA  6E14               	movwf	sm_send_event@event^0,c
  3452  0010BC  ECD6  F040         	call	_sm_send_event	;wreg free
  3453                           
  3454                           ;sm_MenuConfiguration_MC50.c: 140:     switch((sm_state_Menu_t) psm->current_state)
  3455  0010C0  D3B7               	goto	l22489
  3456  0010C2                     l22183:
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;sm_MenuConfiguration_MC50.c: 143:         {;sm_MenuConfiguration_MC50.c: 144:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3460  0010C2  0E06               	movlw	6
  3461  0010C4  0101               	movlb	1	; () banked
  3462  0010C6  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3463  0010C8  A4D8               	btfss	status,2,c
  3464  0010CA  D02F               	goto	l22193
  3465                           
  3466                           ; BSR set to: 1
  3467                           ;sm_MenuConfiguration_MC50.c: 145:             {;sm_MenuConfiguration_MC50.c: 146:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3468  0010CC  0E00               	movlw	0
  3469  0010CE  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3470  0010D0  0EC8               	movlw	200
  3471  0010D2  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3472                           
  3473                           ;sm_MenuConfiguration_MC50.c: 147:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3474  0010D4  0E01               	movlw	1
  3475  0010D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3476                           
  3477                           ;sm_MenuConfiguration_MC50.c: 148:                 menu_st.parameterSelected=0;
  3478  0010D8  0E00               	movlw	0
  3479  0010DA  6F68               	movwf	(_menu_st+23)& (0+255),b
  3480                           
  3481                           ; BSR set to: 1
  3482                           ;sm_MenuConfiguration_MC50.c: 149:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3483  0010DC  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3484  0010E0  5166               	movf	(_menu_st+21)& (0+255),w,b
  3485  0010E2  ECCA  F014         	call	_setValueToEdit
  3486  0010E6  0900               	iorlw	0
  3487  0010E8  B4D8               	btfsc	status,2,c
  3488  0010EA  0012               	return	
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;sm_MenuConfiguration_MC50.c: 151:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3492  0010EC  0EBB               	movlw	low _menuConfiguration_stateMachine
  3493  0010EE  6E12               	movwf	sm_send_event@psm^0,c
  3494  0010F0  0E02               	movlw	high _menuConfiguration_stateMachine
  3495  0010F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3496  0010F4  0E00               	movlw	0
  3497  0010F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3498  0010F8  0E08               	movlw	8
  3499  0010FA  6E14               	movwf	sm_send_event@event^0,c
  3500  0010FC  ECD6  F040         	call	_sm_send_event	;wreg free
  3501                           
  3502                           ;sm_MenuConfiguration_MC50.c: 152:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3503  001100  0E0A               	movlw	10
  3504  001102  6E10               	movwf	___lbdiv@divisor^0,c
  3505  001104  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3506  001106  EC99  F044         	call	___lbdiv
  3507  00110A  0DF6               	mullw	246
  3508  00110C  50F3               	movf	243,w,c
  3509  00110E  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3510  001110  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3511  001112  0E00               	movlw	0
  3512  001114  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3513  001116  0E14               	movlw	20
  3514  001118  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3515  00111A  0E0A               	movlw	10
  3516  00111C  6E10               	movwf	___lbdiv@divisor^0,c
  3517  00111E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3518  001120  EC99  F044         	call	___lbdiv
  3519  001124  EC28  F048         	call	_SetSegmentValueIntermitentMain
  3520  001128  0012               	return	
  3521  00112A                     l22193:
  3522                           
  3523                           ; BSR set to: 1
  3524  00112A  0E05               	movlw	5
  3525  00112C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3526  00112E  A4D8               	btfss	status,2,c
  3527  001130  D02F               	goto	l22203
  3528                           
  3529                           ; BSR set to: 1
  3530                           ;sm_MenuConfiguration_MC50.c: 156:             {;sm_MenuConfiguration_MC50.c: 157:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3531  001132  0E00               	movlw	0
  3532  001134  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3533  001136  0EC8               	movlw	200
  3534  001138  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3535                           
  3536                           ;sm_MenuConfiguration_MC50.c: 158:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3537  00113A  0E01               	movlw	1
  3538  00113C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3539                           
  3540                           ;sm_MenuConfiguration_MC50.c: 159:                 menu_st.parameterSelected=1;
  3541  00113E  0E01               	movlw	1
  3542  001140  6F68               	movwf	(_menu_st+23)& (0+255),b
  3543                           
  3544                           ; BSR set to: 1
  3545                           ;sm_MenuConfiguration_MC50.c: 160:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3546  001142  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3547  001146  5166               	movf	(_menu_st+21)& (0+255),w,b
  3548  001148  ECCA  F014         	call	_setValueToEdit
  3549  00114C  0900               	iorlw	0
  3550  00114E  B4D8               	btfsc	status,2,c
  3551  001150  0012               	return	
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;sm_MenuConfiguration_MC50.c: 162:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3555  001152  0EBB               	movlw	low _menuConfiguration_stateMachine
  3556  001154  6E12               	movwf	sm_send_event@psm^0,c
  3557  001156  0E02               	movlw	high _menuConfiguration_stateMachine
  3558  001158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3559  00115A  0E00               	movlw	0
  3560  00115C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3561  00115E  0E08               	movlw	8
  3562  001160  6E14               	movwf	sm_send_event@event^0,c
  3563  001162  ECD6  F040         	call	_sm_send_event	;wreg free
  3564                           
  3565                           ;sm_MenuConfiguration_MC50.c: 163:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3566  001166  0E0A               	movlw	10
  3567  001168  6E10               	movwf	___lbdiv@divisor^0,c
  3568  00116A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3569  00116C  EC99  F044         	call	___lbdiv
  3570  001170  0DF6               	mullw	246
  3571  001172  50F3               	movf	243,w,c
  3572  001174  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3573  001176  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3574  001178  0E00               	movlw	0
  3575  00117A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3576  00117C  0E14               	movlw	20
  3577  00117E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3578  001180  0E0A               	movlw	10
  3579  001182  6E10               	movwf	___lbdiv@divisor^0,c
  3580  001184  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3581  001186  EC99  F044         	call	___lbdiv
  3582  00118A  EC28  F048         	call	_SetSegmentValueIntermitentMain
  3583                           
  3584                           ; BSR set to: 1
  3585                           ;sm_MenuConfiguration_MC50.c: 165:             }
  3586                           
  3587                           ;sm_MenuConfiguration_MC50.c: 164:                 }
  3588  00118E  0012               	return	
  3589  001190                     l22203:
  3590                           
  3591                           ; BSR set to: 1
  3592  001190  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3593  001192  A4D8               	btfss	status,2,c
  3594  001194  D023               	goto	l22215
  3595                           
  3596                           ; BSR set to: 1
  3597                           ;sm_MenuConfiguration_MC50.c: 167:             {;sm_MenuConfiguration_MC50.c: 168:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3598  001196  0E00               	movlw	0
  3599  001198  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3600  00119A  0E64               	movlw	100
  3601  00119C  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3602                           
  3603                           ;sm_MenuConfiguration_MC50.c: 169:                 if(menu_st.parameterSelected==0)
  3604  00119E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3605  0011A0  A4D8               	btfss	status,2,c
  3606  0011A2  D003               	goto	l22209
  3607                           
  3608                           ; BSR set to: 1
  3609                           ;sm_MenuConfiguration_MC50.c: 170:                 {;sm_MenuConfiguration_MC50.c: 171:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3610  0011A4  0567               	decf	(_menu_st+22)& (0+255),w,b
  3611  0011A6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3612                           
  3613                           ;sm_MenuConfiguration_MC50.c: 172:                 }
  3614  0011A8  D001               	goto	l22211
  3615  0011AA                     l22209:
  3616                           
  3617                           ; BSR set to: 1
  3618                           ;sm_MenuConfiguration_MC50.c: 174:                 {;sm_MenuConfiguration_MC50.c: 175:  
      +                                             menu_st.parameterSelected--;
  3619  0011AA  0768               	decf	(_menu_st+23)& (0+255),f,b
  3620  0011AC                     l22211:
  3621                           
  3622                           ; BSR set to: 1
  3623                           ;sm_MenuConfiguration_MC50.c: 177:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3624  0011AC  5168               	movf	(_menu_st+23)& (0+255),w,b
  3625  0011AE  0D02               	mullw	2
  3626  0011B0  0E52               	movlw	low (_menu_st+1)
  3627  0011B2  24F3               	addwf	243,w,c
  3628  0011B4  6ED9               	movwf	fsr2l,c
  3629  0011B6  0E01               	movlw	high (_menu_st+1)
  3630  0011B8  20F4               	addwfc	prodh,w,c
  3631  0011BA  6EDA               	movwf	fsr2h,c
  3632  0011BC  50DF               	movf	indf2,w,c
  3633  0011BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3634  0011C0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3635  0011C2  0D02               	mullw	2
  3636  0011C4  0E51               	movlw	low _menu_st
  3637  0011C6  24F3               	addwf	243,w,c
  3638  0011C8  6ED9               	movwf	fsr2l,c
  3639  0011CA  0E01               	movlw	high _menu_st
  3640  0011CC  20F4               	addwfc	prodh,w,c
  3641  0011CE  6EDA               	movwf	fsr2h,c
  3642  0011D0  50DF               	movf	indf2,w,c
  3643  0011D2  EC8D  F047         	call	_SetSegmentValueMain
  3644  0011D6                     l22213:
  3645                           
  3646                           ;sm_MenuConfiguration_MC50.c: 178:                 button_struct.processed=1;
  3647  0011D6  0E01               	movlw	1
  3648  0011D8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3649                           
  3650                           ;sm_MenuConfiguration_MC50.c: 179:             }
  3651  0011DA  0012               	return	
  3652  0011DC                     l22215:
  3653                           
  3654                           ; BSR set to: 1
  3655  0011DC  0E17               	movlw	23
  3656  0011DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3657  0011E0  A4D8               	btfss	status,2,c
  3658  0011E2  D021               	goto	l22229
  3659                           
  3660                           ; BSR set to: 1
  3661                           ;sm_MenuConfiguration_MC50.c: 181:             {;sm_MenuConfiguration_MC50.c: 182:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3662  0011E4  0E00               	movlw	0
  3663  0011E6  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3664  0011E8  0E64               	movlw	100
  3665  0011EA  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3666                           
  3667                           ; BSR set to: 1
  3668                           ;sm_MenuConfiguration_MC50.c: 183:                 menu_st.parameterSelected++;
  3669  0011EC  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3670                           
  3671                           ; BSR set to: 1
  3672                           ;sm_MenuConfiguration_MC50.c: 184:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3673  0011EE  5167               	movf	(_menu_st+22)& (0+255),w,b
  3674  0011F0  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3675  0011F2  A0D8               	btfss	status,0,c
  3676  0011F4  D002               	goto	l22225
  3677                           
  3678                           ; BSR set to: 1
  3679                           ;sm_MenuConfiguration_MC50.c: 185:                 {;sm_MenuConfiguration_MC50.c: 186:  
      +                                             menu_st.parameterSelected=0;
  3680  0011F6  0E00               	movlw	0
  3681  0011F8  6F68               	movwf	(_menu_st+23)& (0+255),b
  3682  0011FA                     l22225:
  3683                           
  3684                           ; BSR set to: 1
  3685                           ;sm_MenuConfiguration_MC50.c: 188:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3686  0011FA  5168               	movf	(_menu_st+23)& (0+255),w,b
  3687  0011FC  0D02               	mullw	2
  3688  0011FE  0E52               	movlw	low (_menu_st+1)
  3689  001200  24F3               	addwf	243,w,c
  3690  001202  6ED9               	movwf	fsr2l,c
  3691  001204  0E01               	movlw	high (_menu_st+1)
  3692  001206  20F4               	addwfc	prodh,w,c
  3693  001208  6EDA               	movwf	fsr2h,c
  3694  00120A  50DF               	movf	indf2,w,c
  3695  00120C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3696  00120E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3697  001210  0D02               	mullw	2
  3698  001212  0E51               	movlw	low _menu_st
  3699  001214  24F3               	addwf	243,w,c
  3700  001216  6ED9               	movwf	fsr2l,c
  3701  001218  0E01               	movlw	high _menu_st
  3702  00121A  20F4               	addwfc	prodh,w,c
  3703  00121C  6EDA               	movwf	fsr2h,c
  3704  00121E  50DF               	movf	indf2,w,c
  3705  001220  EC8D  F047         	call	_SetSegmentValueMain
  3706  001224  D7D8               	goto	l22213
  3707  001226                     l22229:
  3708                           
  3709                           ; BSR set to: 1
  3710  001226  0E0C               	movlw	12
  3711  001228  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3712  00122A  D09A               	goto	l22285
  3713                           
  3714                           ; BSR set to: 1
  3715                           ;sm_MenuConfiguration_MC50.c: 192:             {;sm_MenuConfiguration_MC50.c: 193:      
      +                                     if (button_struct.current==0 && button_struct.timer>(( 500/50)) )
  3716  00122C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3717  00122E  A4D8               	btfss	status,2,c
  3718  001230  D053               	goto	l22251
  3719                           
  3720                           ; BSR set to: 1
  3721  001232  0E0A               	movlw	10
  3722  001234  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3723  001236  D050               	goto	l22251
  3724                           
  3725                           ; BSR set to: 1
  3726                           ;sm_MenuConfiguration_MC50.c: 194:                 {;sm_MenuConfiguration_MC50.c: 195:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3727  001238  0E00               	movlw	0
  3728  00123A  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3729  00123C  0E64               	movlw	100
  3730  00123E  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3731                           
  3732                           ; BSR set to: 1
  3733                           ;sm_MenuConfiguration_MC50.c: 197:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3734  001240  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3735  001244  5166               	movf	(_menu_st+21)& (0+255),w,b
  3736  001246  ECCA  F014         	call	_setValueToEdit
  3737  00124A  0900               	iorlw	0
  3738  00124C  B4D8               	btfsc	status,2,c
  3739  00124E  D7C3               	goto	l22213
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;sm_MenuConfiguration_MC50.c: 198:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          0:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3743  001250  0EBB               	movlw	low _menuConfiguration_stateMachine
  3744  001252  6E12               	movwf	sm_send_event@psm^0,c
  3745  001254  0E02               	movlw	high _menuConfiguration_stateMachine
  3746  001256  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3747  001258  0E00               	movlw	0
  3748  00125A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3749  00125C  0E01               	movlw	1
  3750  00125E  6E14               	movwf	sm_send_event@event^0,c
  3751  001260  ECD6  F040         	call	_sm_send_event	;wreg free
  3752                           
  3753                           ;sm_MenuConfiguration_MC50.c: 201:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3754  001264  0E98               	movlw	_var_sys_NVM& (0+255)
  3755  001266  0F1C               	addlw	28
  3756  001268  0100               	movlb	0	; () banked
  3757  00126A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3758  00126C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3759  00126E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3760  001270  E101               	bnz	u26785
  3761  001272  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3762  001274                     u26785:
  3763  001274  B4D8               	btfsc	status,2,c
  3764  001276  D009               	goto	u26790
  3765                           
  3766                           ; BSR set to: 0
  3767  001278  0E98               	movlw	_var_sys_NVM& (0+255)
  3768  00127A  0F1B               	addlw	27
  3769  00127C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3770  00127E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3771  001280  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3772  001282  E101               	bnz	u26795
  3773  001284  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3774  001286                     u26795:
  3775  001286  A4D8               	btfss	status,2,c
  3776  001288  D016               	goto	l22247
  3777  00128A                     u26790:
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;sm_MenuConfiguration_MC50.c: 202:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3781  00128A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3782  00128C  0D02               	mullw	2
  3783  00128E  0E52               	movlw	low (_menu_st+1)
  3784  001290  24F3               	addwf	243,w,c
  3785  001292  6ED9               	movwf	fsr2l,c
  3786  001294  0E01               	movlw	high (_menu_st+1)
  3787  001296  20F4               	addwfc	prodh,w,c
  3788  001298  6EDA               	movwf	fsr2h,c
  3789  00129A  50DF               	movf	indf2,w,c
  3790  00129C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3791  00129E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3792  0012A0  0D02               	mullw	2
  3793  0012A2  0E51               	movlw	low _menu_st
  3794  0012A4  24F3               	addwf	243,w,c
  3795  0012A6  6ED9               	movwf	fsr2l,c
  3796  0012A8  0E01               	movlw	high _menu_st
  3797  0012AA  20F4               	addwfc	prodh,w,c
  3798  0012AC  6EDA               	movwf	fsr2h,c
  3799  0012AE  50DF               	movf	indf2,w,c
  3800  0012B0  EC8D  F047         	call	_SetSegmentValueMain
  3801                           
  3802                           ;sm_MenuConfiguration_MC50.c: 204:                          }
  3803  0012B4  D790               	goto	l22213
  3804  0012B6                     l22247:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;sm_MenuConfiguration_MC50.c: 206:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3808  0012B6  0E0A               	movlw	10
  3809  0012B8  6E10               	movwf	___lbdiv@divisor^0,c
  3810  0012BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3811  0012BC  EC99  F044         	call	___lbdiv
  3812  0012C0  0DF6               	mullw	246
  3813  0012C2  50F3               	movf	243,w,c
  3814  0012C4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3815  0012C6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3816  0012C8  0E0A               	movlw	10
  3817  0012CA  6E10               	movwf	___lbdiv@divisor^0,c
  3818  0012CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3819  0012CE  EC99  F044         	call	___lbdiv
  3820  0012D2  EC8D  F047         	call	_SetSegmentValueMain
  3821  0012D6  D77F               	goto	l22213
  3822  0012D8                     l22251:
  3823                           
  3824                           ; BSR set to: 1
  3825  0012D8  BFAB               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3826  0012DA  D008               	goto	u26810
  3827  0012DC  51AB               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3828  0012DE  E103               	bnz	u26800
  3829  0012E0  05AA               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3830  0012E2  A0D8               	btfss	status,0,c
  3831  0012E4  D003               	goto	u26810
  3832  0012E6                     u26800:
  3833                           
  3834                           ; BSR set to: 1
  3835  0012E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3836  0012E8  A4D8               	btfss	status,2,c
  3837  0012EA  D01E               	goto	l22269
  3838  0012EC                     u26810:
  3839                           
  3840                           ; BSR set to: 1
  3841  0012EC  0E02               	movlw	2
  3842  0012EE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3843  0012F0  D01B               	goto	l22269
  3844                           
  3845                           ; BSR set to: 1
  3846                           ;sm_MenuConfiguration_MC50.c: 214:                 {;sm_MenuConfiguration_MC50.c: 215:  
      +                                             ts_system.timeoutMenu=0;
  3847  0012F2  0E00               	movlw	0
  3848  0012F4  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3849  0012F6  0E00               	movlw	0
  3850  0012F8  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3851                           
  3852                           ; BSR set to: 1
  3853                           ;sm_MenuConfiguration_MC50.c: 216:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3854  0012FA  0EEF               	movlw	low _main_stateMachine
  3855  0012FC  6E12               	movwf	sm_send_event@psm^0,c
  3856  0012FE  0E01               	movlw	high _main_stateMachine
  3857  001300  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3858  001302  0E00               	movlw	0
  3859  001304  6E15               	movwf	(sm_send_event@event+1)^0,c
  3860  001306  0E07               	movlw	7
  3861  001308  6E14               	movwf	sm_send_event@event^0,c
  3862  00130A  ECD6  F040         	call	_sm_send_event	;wreg free
  3863                           
  3864                           ;sm_MenuConfiguration_MC50.c: 217:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3865  00130E  0E18               	movlw	24
  3866  001310  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3867  001312  0E18               	movlw	24
  3868  001314  EC8D  F047         	call	_SetSegmentValueMain
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;sm_MenuConfiguration_MC50.c: 218:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3872  001318  0E00               	movlw	0
  3873  00131A  0101               	movlb	1	; () banked
  3874  00131C  6F69               	movwf	(_menu_st+24)& (0+255),b
  3875                           
  3876                           ; BSR set to: 1
  3877                           ;sm_MenuConfiguration_MC50.c: 219:                     button_struct.processed=1;
  3878  00131E  0E01               	movlw	1
  3879  001320  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3880                           
  3881                           ; BSR set to: 1
  3882                           ;sm_MenuConfiguration_MC50.c: 220:                     ClearFlag_rfCMD();
  3883  001322  ECDD  F048         	call	_ClearFlag_rfCMD	;wreg free
  3884                           
  3885                           ;sm_MenuConfiguration_MC50.c: 222:                 }
  3886  001326  0012               	return	
  3887  001328                     l22269:
  3888                           
  3889                           ; BSR set to: 1
  3890  001328  BFAB               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3891  00132A  D008               	goto	u26840
  3892  00132C  51AB               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3893  00132E  E103               	bnz	u26830
  3894  001330  05AA               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3895  001332  A0D8               	btfss	status,0,c
  3896  001334  D003               	goto	u26840
  3897  001336                     u26830:
  3898                           
  3899                           ; BSR set to: 1
  3900  001336  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3901  001338  A4D8               	btfss	status,2,c
  3902  00133A  D004               	goto	l22277
  3903  00133C                     u26840:
  3904                           
  3905                           ; BSR set to: 1
  3906                           ;sm_MenuConfiguration_MC50.c: 224:                 {;sm_MenuConfiguration_MC50.c: 226:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3907  00133C  5165               	movf	(_menu_st+20)& (0+255),w,b
  3908  00133E  EC3A  F01E         	call	_load_New_Menu
  3909  001342  D749               	goto	l22213
  3910  001344                     l22277:
  3911                           
  3912                           ; BSR set to: 1
  3913  001344  BFAB               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3914  001346  D005               	goto	u26850
  3915  001348  51AB               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3916  00134A  E102               	bnz	u26851
  3917  00134C  05AA               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3918  00134E  B0D8               	btfsc	status,0,c
  3919  001350                     u26851:
  3920  001350  0012               	return	
  3921  001352                     u26850:
  3922                           
  3923                           ; BSR set to: 1
  3924  001352  0E01               	movlw	1
  3925  001354  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  3926  001356  0012               	return	
  3927                           
  3928                           ; BSR set to: 1
  3929                           ;sm_MenuConfiguration_MC50.c: 230:                 {;sm_MenuConfiguration_MC50.c: 232:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3930  001358  5165               	movf	(_menu_st+20)& (0+255),w,b
  3931  00135A  EC3A  F01E         	call	_load_New_Menu
  3932  00135E  D73B               	goto	l22213
  3933  001360                     l22285:
  3934                           
  3935                           ; BSR set to: 1
  3936  001360  0E27               	movlw	39
  3937  001362  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3938  001364  A4D8               	btfss	status,2,c
  3939  001366  D032               	goto	l22301
  3940                           
  3941                           ; BSR set to: 1
  3942  001368  0E0A               	movlw	10
  3943  00136A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3944  00136C  D02F               	goto	l22301
  3945                           
  3946                           ; BSR set to: 1
  3947  00136E  0E0D               	movlw	13
  3948  001370  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  3949  001372  B4D8               	btfsc	status,2,c
  3950  001374  D02B               	goto	l22301
  3951                           
  3952                           ; BSR set to: 1
  3953                           ;sm_MenuConfiguration_MC50.c: 237:             {;sm_MenuConfiguration_MC50.c: 238:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  3954  001376  0E00               	movlw	0
  3955  001378  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3956  00137A  0E64               	movlw	100
  3957  00137C  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3958                           
  3959                           ; BSR set to: 1
  3960                           ;sm_MenuConfiguration_MC50.c: 239:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3961  00137E  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3962  001382  5166               	movf	(_menu_st+21)& (0+255),w,b
  3963  001384  ECCA  F014         	call	_setValueToEdit
  3964  001388  0900               	iorlw	0
  3965  00138A  B4D8               	btfsc	status,2,c
  3966  00138C  D724               	goto	l22213
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;sm_MenuConfiguration_MC50.c: 241:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          2:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  3970  00138E  0EBB               	movlw	low _menuConfiguration_stateMachine
  3971  001390  6E12               	movwf	sm_send_event@psm^0,c
  3972  001392  0E02               	movlw	high _menuConfiguration_stateMachine
  3973  001394  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3974  001396  0E00               	movlw	0
  3975  001398  6E15               	movwf	(sm_send_event@event+1)^0,c
  3976  00139A  0E08               	movlw	8
  3977  00139C  6E14               	movwf	sm_send_event@event^0,c
  3978  00139E  ECD6  F040         	call	_sm_send_event	;wreg free
  3979                           
  3980                           ;sm_MenuConfiguration_MC50.c: 243:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  3981  0013A2  0E0A               	movlw	10
  3982  0013A4  6E10               	movwf	___lbdiv@divisor^0,c
  3983  0013A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3984  0013A8  EC99  F044         	call	___lbdiv
  3985  0013AC  0DF6               	mullw	246
  3986  0013AE  50F3               	movf	243,w,c
  3987  0013B0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3988  0013B2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3989  0013B4  0E00               	movlw	0
  3990  0013B6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3991  0013B8  0E14               	movlw	20
  3992  0013BA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3993  0013BC  0E0A               	movlw	10
  3994  0013BE  6E10               	movwf	___lbdiv@divisor^0,c
  3995  0013C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3996  0013C2  EC99  F044         	call	___lbdiv
  3997  0013C6  EC28  F048         	call	_SetSegmentValueIntermitentMain
  3998  0013CA  D705               	goto	l22213
  3999  0013CC                     l22301:
  4000                           
  4001                           ; BSR set to: 1
  4002  0013CC  0E0D               	movlw	13
  4003  0013CE  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4004  0013D0  A4D8               	btfss	status,2,c
  4005  0013D2  D027               	goto	l22319
  4006                           
  4007                           ; BSR set to: 1
  4008  0013D4  51A8               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4009  0013D6  11A9               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4010  0013D8  A4D8               	btfss	status,2,c
  4011  0013DA  D023               	goto	l22319
  4012                           
  4013                           ; BSR set to: 1
  4014                           ;sm_MenuConfiguration_MC50.c: 248:             {;sm_MenuConfiguration_MC50.c: 249:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4015  0013DC  0E00               	movlw	0
  4016  0013DE  0100               	movlb	0	; () banked
  4017  0013E0  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4018                           
  4019                           ;sm_MenuConfiguration_MC50.c: 250:                 var_sys_NVM.positionRemotesWalk=0;
  4020  0013E2  0E00               	movlw	0
  4021  0013E4  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4022                           
  4023                           ;sm_MenuConfiguration_MC50.c: 251:                 var_sys_NVM.OnlyRollingCode=NO;
  4024  0013E6  0E00               	movlw	0
  4025  0013E8  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;sm_MenuConfiguration_MC50.c: 252:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4029  0013EA  0E02               	movlw	2
  4030  0013EC  ECB6  F044         	call	_SaveNVM_VarSystem
  4031                           
  4032                           ;sm_MenuConfiguration_MC50.c: 253:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4033  0013F0  0EEF               	movlw	low _main_stateMachine
  4034  0013F2  6E12               	movwf	sm_send_event@psm^0,c
  4035  0013F4  0E01               	movlw	high _main_stateMachine
  4036  0013F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4037  0013F8  0E00               	movlw	0
  4038  0013FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4039  0013FC  0E07               	movlw	7
  4040  0013FE  6E14               	movwf	sm_send_event@event^0,c
  4041  001400  ECD6  F040         	call	_sm_send_event	;wreg free
  4042                           
  4043                           ;sm_MenuConfiguration_MC50.c: 254:                 SetSegmentValueMain(dMinus,dMinus);
  4044  001404  0E18               	movlw	24
  4045  001406  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4046  001408  0E18               	movlw	24
  4047  00140A  EC8D  F047         	call	_SetSegmentValueMain
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;sm_MenuConfiguration_MC50.c: 255:                 button_struct.processed=1;
  4051  00140E  0E01               	movlw	1
  4052  001410  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4053  001412                     l22315:
  4054                           
  4055                           ;sm_MenuConfiguration_MC50.c: 256:                 ClearFlag_rfCMD();
  4056  001412  ECDD  F048         	call	_ClearFlag_rfCMD	;wreg free
  4057  001416                     l22317:
  4058                           
  4059                           ;sm_MenuConfiguration_MC50.c: 257:                  ts_system.timeoutMenu=0;
  4060  001416  0E00               	movlw	0
  4061  001418  0101               	movlb	1	; () banked
  4062  00141A  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4063  00141C  0E00               	movlw	0
  4064  00141E  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4065                           
  4066                           ;sm_MenuConfiguration_MC50.c: 258:             }
  4067  001420  0012               	return	
  4068  001422                     l22319:
  4069                           
  4070                           ; BSR set to: 1
  4071  001422  BFAB               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4072  001424  D008               	goto	u26940
  4073  001426  51AB               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4074  001428  E103               	bnz	u26930
  4075  00142A  05AA               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4076  00142C  A0D8               	btfss	status,0,c
  4077  00142E  D003               	goto	u26940
  4078  001430                     u26930:
  4079                           
  4080                           ; BSR set to: 1
  4081  001430  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4082  001432  A4D8               	btfss	status,2,c
  4083  001434  0012               	return	
  4084  001436                     u26940:
  4085                           
  4086                           ; BSR set to: 1
  4087                           ;sm_MenuConfiguration_MC50.c: 260:             {;sm_MenuConfiguration_MC50.c: 261:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4088  001436  0EEF               	movlw	low _main_stateMachine
  4089  001438  6E12               	movwf	sm_send_event@psm^0,c
  4090  00143A  0E01               	movlw	high _main_stateMachine
  4091  00143C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4092  00143E  0E00               	movlw	0
  4093  001440  6E15               	movwf	(sm_send_event@event+1)^0,c
  4094  001442  0E07               	movlw	7
  4095  001444  6E14               	movwf	sm_send_event@event^0,c
  4096  001446  ECD6  F040         	call	_sm_send_event	;wreg free
  4097                           
  4098                           ;sm_MenuConfiguration_MC50.c: 262:                  SetSegmentValueMain(dMinus,dMinus);
  4099  00144A  0E18               	movlw	24
  4100  00144C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4101  00144E  0E18               	movlw	24
  4102  001450  EC8D  F047         	call	_SetSegmentValueMain
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;sm_MenuConfiguration_MC50.c: 263:                  ClearFlag_rfCMD();
  4106  001454  ECDD  F048         	call	_ClearFlag_rfCMD	;wreg free
  4107                           
  4108                           ;sm_MenuConfiguration_MC50.c: 264:                  button_struct.processed=1;
  4109  001458  0E01               	movlw	1
  4110  00145A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4111  00145C  D7DC               	goto	l22317
  4112  00145E                     l22333:
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;sm_MenuConfiguration_MC50.c: 270:         {;sm_MenuConfiguration_MC50.c: 271:          
      +                             if (button_struct.current==0x00)
  4116  00145E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4117  001460  A4D8               	btfss	status,2,c
  4118  001462  D047               	goto	l22353
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;sm_MenuConfiguration_MC50.c: 272:             {;sm_MenuConfiguration_MC50.c: 273:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4122  001464  0E00               	movlw	0
  4123  001466  0101               	movlb	1	; () banked
  4124  001468  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4125  00146A  0E64               	movlw	100
  4126  00146C  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4127                           
  4128                           ; BSR set to: 1
  4129                           ;sm_MenuConfiguration_MC50.c: 274:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4130  00146E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4131  001470  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4132  001472  A0D8               	btfss	status,0,c
  4133  001474  D003               	goto	l22341
  4134                           
  4135                           ; BSR set to: 1
  4136                           ;sm_MenuConfiguration_MC50.c: 275:                 {;sm_MenuConfiguration_MC50.c: 276:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4137  001476  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4138                           
  4139                           ;sm_MenuConfiguration_MC50.c: 277:                 }
  4140  00147A  D001               	goto	l22343
  4141  00147C                     l22341:
  4142                           
  4143                           ; BSR set to: 1
  4144                           ;sm_MenuConfiguration_MC50.c: 279:                 {;sm_MenuConfiguration_MC50.c: 280:  
      +                                             edit_Param.tempValue--;
  4145  00147C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4146  00147E                     l22343:
  4147                           
  4148                           ; BSR set to: 1
  4149                           ;sm_MenuConfiguration_MC50.c: 282:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4150  00147E  0E98               	movlw	_var_sys_NVM& (0+255)
  4151  001480  0F1C               	addlw	28
  4152  001482  0100               	movlb	0	; () banked
  4153  001484  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4154  001486  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4155  001488  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4156  00148A  E101               	bnz	u26975
  4157  00148C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4158  00148E                     u26975:
  4159  00148E  B4D8               	btfsc	status,2,c
  4160  001490  D009               	goto	u26980
  4161                           
  4162                           ; BSR set to: 0
  4163  001492  0E98               	movlw	_var_sys_NVM& (0+255)
  4164  001494  0F1B               	addlw	27
  4165  001496  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4166  001498  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4167  00149A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4168  00149C  E101               	bnz	u26985
  4169  00149E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4170  0014A0                     u26985:
  4171  0014A0  A4D8               	btfss	status,2,c
  4172  0014A2  D016               	goto	l22349
  4173  0014A4                     u26980:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;sm_MenuConfiguration_MC50.c: 283:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4177  0014A4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4178  0014A6  0D02               	mullw	2
  4179  0014A8  0E52               	movlw	low (_menu_st+1)
  4180  0014AA  24F3               	addwf	243,w,c
  4181  0014AC  6ED9               	movwf	fsr2l,c
  4182  0014AE  0E01               	movlw	high (_menu_st+1)
  4183  0014B0  20F4               	addwfc	prodh,w,c
  4184  0014B2  6EDA               	movwf	fsr2h,c
  4185  0014B4  50DF               	movf	indf2,w,c
  4186  0014B6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4187  0014B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4188  0014BA  0D02               	mullw	2
  4189  0014BC  0E51               	movlw	low _menu_st
  4190  0014BE  24F3               	addwf	243,w,c
  4191  0014C0  6ED9               	movwf	fsr2l,c
  4192  0014C2  0E01               	movlw	high _menu_st
  4193  0014C4  20F4               	addwfc	prodh,w,c
  4194  0014C6  6EDA               	movwf	fsr2h,c
  4195  0014C8  50DF               	movf	indf2,w,c
  4196  0014CA  EC8D  F047         	call	_SetSegmentValueMain
  4197                           
  4198                           ;sm_MenuConfiguration_MC50.c: 284:                 }
  4199  0014CE  D683               	goto	l22213
  4200  0014D0                     l22349:
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;sm_MenuConfiguration_MC50.c: 287:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4204  0014D0  0E0A               	movlw	10
  4205  0014D2  6E10               	movwf	___lbdiv@divisor^0,c
  4206  0014D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4207  0014D6  EC99  F044         	call	___lbdiv
  4208  0014DA  0DF6               	mullw	246
  4209  0014DC  50F3               	movf	243,w,c
  4210  0014DE  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4211  0014E0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4212  0014E2  0E0A               	movlw	10
  4213  0014E4  6E10               	movwf	___lbdiv@divisor^0,c
  4214  0014E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4215  0014E8  EC99  F044         	call	___lbdiv
  4216  0014EC  EC8D  F047         	call	_SetSegmentValueMain
  4217  0014F0  D672               	goto	l22213
  4218  0014F2                     l22353:
  4219                           
  4220                           ; BSR set to: 0
  4221  0014F2  0E17               	movlw	23
  4222  0014F4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4223  0014F6  A4D8               	btfss	status,2,c
  4224  0014F8  D045               	goto	l22373
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;sm_MenuConfiguration_MC50.c: 292:             {;sm_MenuConfiguration_MC50.c: 293:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4228  0014FA  0E00               	movlw	0
  4229  0014FC  0101               	movlb	1	; () banked
  4230  0014FE  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4231  001500  0E64               	movlw	100
  4232  001502  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4233                           
  4234                           ; BSR set to: 1
  4235                           ;sm_MenuConfiguration_MC50.c: 294:                 edit_Param.tempValue++;
  4236  001504  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4237                           
  4238                           ; BSR set to: 1
  4239                           ;sm_MenuConfiguration_MC50.c: 295:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4240  001506  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4241  001508  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4242  00150A  A0D8               	btfss	status,0,c
  4243                           
  4244                           ; BSR set to: 1
  4245                           ;sm_MenuConfiguration_MC50.c: 296:                 {;sm_MenuConfiguration_MC50.c: 297:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4246  00150C  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4247                           
  4248                           ; BSR set to: 1
  4249                           ;sm_MenuConfiguration_MC50.c: 299:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4250  001510  0E98               	movlw	_var_sys_NVM& (0+255)
  4251  001512  0F1C               	addlw	28
  4252  001514  0100               	movlb	0	; () banked
  4253  001516  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4254  001518  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4255  00151A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4256  00151C  E101               	bnz	u27015
  4257  00151E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4258  001520                     u27015:
  4259  001520  B4D8               	btfsc	status,2,c
  4260  001522  D009               	goto	u27020
  4261                           
  4262                           ; BSR set to: 0
  4263  001524  0E98               	movlw	_var_sys_NVM& (0+255)
  4264  001526  0F1B               	addlw	27
  4265  001528  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4266  00152A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4267  00152C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4268  00152E  E101               	bnz	u27025
  4269  001530  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4270  001532                     u27025:
  4271  001532  A4D8               	btfss	status,2,c
  4272  001534  D016               	goto	l22369
  4273  001536                     u27020:
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;sm_MenuConfiguration_MC50.c: 300:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4277  001536  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4278  001538  0D02               	mullw	2
  4279  00153A  0E52               	movlw	low (_menu_st+1)
  4280  00153C  24F3               	addwf	243,w,c
  4281  00153E  6ED9               	movwf	fsr2l,c
  4282  001540  0E01               	movlw	high (_menu_st+1)
  4283  001542  20F4               	addwfc	prodh,w,c
  4284  001544  6EDA               	movwf	fsr2h,c
  4285  001546  50DF               	movf	indf2,w,c
  4286  001548  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4287  00154A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4288  00154C  0D02               	mullw	2
  4289  00154E  0E51               	movlw	low _menu_st
  4290  001550  24F3               	addwf	243,w,c
  4291  001552  6ED9               	movwf	fsr2l,c
  4292  001554  0E01               	movlw	high _menu_st
  4293  001556  20F4               	addwfc	prodh,w,c
  4294  001558  6EDA               	movwf	fsr2h,c
  4295  00155A  50DF               	movf	indf2,w,c
  4296  00155C  EC8D  F047         	call	_SetSegmentValueMain
  4297                           
  4298                           ;sm_MenuConfiguration_MC50.c: 301:                 }
  4299  001560  D63A               	goto	l22213
  4300  001562                     l22369:
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;sm_MenuConfiguration_MC50.c: 304:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4304  001562  0E0A               	movlw	10
  4305  001564  6E10               	movwf	___lbdiv@divisor^0,c
  4306  001566  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4307  001568  EC99  F044         	call	___lbdiv
  4308  00156C  0DF6               	mullw	246
  4309  00156E  50F3               	movf	243,w,c
  4310  001570  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4311  001572  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4312  001574  0E0A               	movlw	10
  4313  001576  6E10               	movwf	___lbdiv@divisor^0,c
  4314  001578  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4315  00157A  EC99  F044         	call	___lbdiv
  4316  00157E  EC8D  F047         	call	_SetSegmentValueMain
  4317  001582  D629               	goto	l22213
  4318  001584                     l22373:
  4319                           
  4320                           ; BSR set to: 0
  4321  001584  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4322  001586  A4D8               	btfss	status,2,c
  4323  001588  D023               	goto	l22389
  4324                           
  4325                           ; BSR set to: 0
  4326  00158A  0E09               	movlw	9
  4327  00158C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4328  00158E  D020               	goto	l22389
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;sm_MenuConfiguration_MC50.c: 310:             {;sm_MenuConfiguration_MC50.c: 311:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4332  001590  0E00               	movlw	0
  4333  001592  0101               	movlb	1	; () banked
  4334  001594  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4335  001596  0E64               	movlw	100
  4336  001598  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4337                           
  4338                           ; BSR set to: 1
  4339                           ;sm_MenuConfiguration_MC50.c: 313:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4340  00159A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4341  00159E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4342  0015A2  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4343                           
  4344                           ; BSR set to: 1
  4345                           ;sm_MenuConfiguration_MC50.c: 314:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4346  0015A6  0EBB               	movlw	low _menuConfiguration_stateMachine
  4347  0015A8  6E12               	movwf	sm_send_event@psm^0,c
  4348  0015AA  0E02               	movlw	high _menuConfiguration_stateMachine
  4349  0015AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4350  0015AE  0E00               	movlw	0
  4351  0015B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  4352  0015B2  0E02               	movlw	2
  4353  0015B4  6E14               	movwf	sm_send_event@event^0,c
  4354  0015B6  ECD6  F040         	call	_sm_send_event	;wreg free
  4355                           
  4356                           ;sm_MenuConfiguration_MC50.c: 315:                 SetSegmentValueMain(dBar,d1);
  4357  0015BA  0E01               	movlw	1
  4358  0015BC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4359  0015BE  0E19               	movlw	25
  4360  0015C0  EC8D  F047         	call	_SetSegmentValueMain
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;sm_MenuConfiguration_MC50.c: 316:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4364  0015C4  0E00               	movlw	0
  4365  0015C6  0101               	movlb	1	; () banked
  4366  0015C8  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4367  0015CA  0E28               	movlw	40
  4368  0015CC  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4369  0015CE  D603               	goto	l22213
  4370  0015D0                     l22389:
  4371                           
  4372                           ; BSR set to: 0
  4373  0015D0  0101               	movlb	1	; () banked
  4374  0015D2  BFAB               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4375  0015D4  D008               	goto	u27060
  4376  0015D6  51AB               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4377  0015D8  E103               	bnz	u27050
  4378  0015DA  05AA               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4379  0015DC  A0D8               	btfss	status,0,c
  4380  0015DE  D003               	goto	u27060
  4381  0015E0                     u27050:
  4382                           
  4383                           ; BSR set to: 1
  4384  0015E0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4385  0015E2  A4D8               	btfss	status,2,c
  4386  0015E4  0012               	return	
  4387  0015E6                     u27060:
  4388                           
  4389                           ; BSR set to: 1
  4390                           ;sm_MenuConfiguration_MC50.c: 321:             {;sm_MenuConfiguration_MC50.c: 322:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4391  0015E6  0E00               	movlw	0
  4392  0015E8  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4393  0015EA  0E64               	movlw	100
  4394  0015EC  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4395                           
  4396                           ; BSR set to: 1
  4397                           ;sm_MenuConfiguration_MC50.c: 323:                 load_New_Menu(menu_st.actualMenu);
  4398  0015EE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4399  0015F0  EC3A  F01E         	call	_load_New_Menu
  4400                           
  4401                           ;sm_MenuConfiguration_MC50.c: 324:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4402  0015F4  0EBB               	movlw	low _menuConfiguration_stateMachine
  4403  0015F6  6E12               	movwf	sm_send_event@psm^0,c
  4404  0015F8  0E02               	movlw	high _menuConfiguration_stateMachine
  4405  0015FA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4406  0015FC  0E00               	movlw	0
  4407  0015FE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4408  001600  0E03               	movlw	3
  4409  001602  6E14               	movwf	sm_send_event@event^0,c
  4410  001604  ECD6  F040         	call	_sm_send_event	;wreg free
  4411  001608  D5E6               	goto	l22213
  4412  00160A                     l22401:
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;sm_MenuConfiguration_MC50.c: 331:         {;sm_MenuConfiguration_MC50.c: 336:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4416  00160A  0101               	movlb	1	; () banked
  4417  00160C  BFA9               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4418  00160E  D005               	goto	u27070
  4419  001610  51A9               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4420  001612  E102               	bnz	u27071
  4421  001614  05A8               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4422  001616  B0D8               	btfsc	status,0,c
  4423  001618                     u27071:
  4424  001618  0012               	return	
  4425  00161A                     u27070:
  4426                           
  4427                           ; BSR set to: 1
  4428                           ;sm_MenuConfiguration_MC50.c: 337:             {;sm_MenuConfiguration_MC50.c: 338:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4429  00161A  0E00               	movlw	0
  4430  00161C  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4431  00161E  0E64               	movlw	100
  4432  001620  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4433                           
  4434                           ; BSR set to: 1
  4435                           ;sm_MenuConfiguration_MC50.c: 340:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4436  001622  0566               	decf	(_menu_st+21)& (0+255),w,b
  4437  001624  A4D8               	btfss	status,2,c
  4438  001626  D004               	goto	u27090
  4439                           
  4440                           ; BSR set to: 1
  4441  001628  0E08               	movlw	8
  4442  00162A  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4443  00162C  B4D8               	btfsc	status,2,c
  4444  00162E  D00A               	goto	u27100
  4445  001630                     u27090:
  4446                           
  4447                           ; BSR set to: 1
  4448  001630  0E98               	movlw	_var_sys_NVM& (0+255)
  4449  001632  0F1C               	addlw	28
  4450  001634  0100               	movlb	0	; () banked
  4451  001636  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4452  001638  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4453  00163A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4454  00163C  E101               	bnz	u27105
  4455  00163E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4456  001640                     u27105:
  4457  001640  A4D8               	btfss	status,2,c
  4458  001642  D005               	goto	l22413
  4459  001644                     u27100:
  4460                           
  4461                           ;sm_MenuConfiguration_MC50.c: 341:                 {;sm_MenuConfiguration_MC50.c: 344:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4462  001644  0100               	movlb	0	; () banked
  4463  001646  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4464  001648  EC6C  F02D         	call	_ResetDefaultMemory
  4465                           
  4466                           ;sm_MenuConfiguration_MC50.c: 346:                 }
  4467  00164C  D023               	goto	l22431
  4468  00164E                     l22413:
  4469                           
  4470                           ; BSR set to: 0
  4471  00164E  0101               	movlb	1	; () banked
  4472  001650  0566               	decf	(_menu_st+21)& (0+255),w,b
  4473  001652  B4D8               	btfsc	status,2,c
  4474  001654  D004               	goto	u27120
  4475                           
  4476                           ; BSR set to: 1
  4477  001656  0E0A               	movlw	10
  4478  001658  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4479  00165A  A4D8               	btfss	status,2,c
  4480  00165C  D004               	goto	l22419
  4481  00165E                     u27120:
  4482                           
  4483                           ; BSR set to: 1
  4484                           ;sm_MenuConfiguration_MC50.c: 348:                 {;sm_MenuConfiguration_MC50.c: 349:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4485  00165E  0E01               	movlw	1
  4486  001660  ECB6  F044         	call	_SaveNVM_VarSystem
  4487                           
  4488                           ;sm_MenuConfiguration_MC50.c: 350:                 }
  4489  001664  D017               	goto	l22431
  4490  001666                     l22419:
  4491                           
  4492                           ; BSR set to: 1
  4493                           ;sm_MenuConfiguration_MC50.c: 352:                 {;sm_MenuConfiguration_MC50.c: 353:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4494  001666  0568               	decf	(_menu_st+23)& (0+255),w,b
  4495  001668  A4D8               	btfss	status,2,c
  4496  00166A  D00E               	goto	l22427
  4497                           
  4498                           ; BSR set to: 1
  4499  00166C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4500  001670  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4501  001674  50DF               	movf	indf2,w,c
  4502  001676  B4D8               	btfsc	status,2,c
  4503  001678  D007               	goto	l22427
  4504                           
  4505                           ; BSR set to: 1
  4506  00167A  0E06               	movlw	6
  4507  00167C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4508  00167E  A4D8               	btfss	status,2,c
  4509  001680  D003               	goto	l22427
  4510                           
  4511                           ; BSR set to: 1
  4512                           ;sm_MenuConfiguration_MC50.c: 354:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          5:                       var_sys_NVM.motorPower = 9;
  4513  001682  0E09               	movlw	9
  4514  001684  0100               	movlb	0	; () banked
  4515  001686  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4516  001688                     l22427:
  4517                           
  4518                           ;sm_MenuConfiguration_MC50.c: 358:                       SaveNVM_VarSystem(pageMemoryE);
  4519  001688  0E01               	movlw	1
  4520  00168A  ECB6  F044         	call	_SaveNVM_VarSystem
  4521                           
  4522                           ;sm_MenuConfiguration_MC50.c: 359:                       SaveNVM_VarSystem(pageMemoryP);
  4523  00168E  0E00               	movlw	0
  4524  001690  ECB6  F044         	call	_SaveNVM_VarSystem
  4525  001694                     l22431:
  4526                           
  4527                           ;sm_MenuConfiguration_MC50.c: 363:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4528  001694  0EBB               	movlw	low _menuConfiguration_stateMachine
  4529  001696  6E12               	movwf	sm_send_event@psm^0,c
  4530  001698  0E02               	movlw	high _menuConfiguration_stateMachine
  4531  00169A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4532  00169C  0E00               	movlw	0
  4533  00169E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4534  0016A0  0E04               	movlw	4
  4535  0016A2  6E14               	movwf	sm_send_event@event^0,c
  4536  0016A4  ECD6  F040         	call	_sm_send_event	;wreg free
  4537                           
  4538                           ;sm_MenuConfiguration_MC50.c: 366:                 menu_st.parameterSelected++;
  4539  0016A8  0101               	movlb	1	; () banked
  4540  0016AA  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4541                           
  4542                           ; BSR set to: 1
  4543                           ;sm_MenuConfiguration_MC50.c: 367:                 if(menu_st.actualMenu<=E_Menu)
  4544  0016AC  0E02               	movlw	2
  4545  0016AE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4546  0016B0  D005               	goto	l22441
  4547                           
  4548                           ; BSR set to: 1
  4549                           ;sm_MenuConfiguration_MC50.c: 368:                 {;sm_MenuConfiguration_MC50.c: 369:  
      +                                             menu_st.lastMainParameterSelected++;
  4550  0016B2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4551                           
  4552                           ; BSR set to: 1
  4553                           ;sm_MenuConfiguration_MC50.c: 370:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4554  0016B4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4555  0016B6  EC3A  F01E         	call	_load_New_Menu
  4556                           
  4557                           ;sm_MenuConfiguration_MC50.c: 371:                 }
  4558  0016BA  0012               	return	
  4559  0016BC                     l22441:
  4560                           
  4561                           ; BSR set to: 1
  4562  0016BC  5167               	movf	(_menu_st+22)& (0+255),w,b
  4563  0016BE  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4564  0016C0  A0D8               	btfss	status,0,c
  4565  0016C2  D005               	goto	l22447
  4566                           
  4567                           ; BSR set to: 1
  4568                           ;sm_MenuConfiguration_MC50.c: 373:                 {;sm_MenuConfiguration_MC50.c: 374:  
      +                                             menu_st.lastMainParameterSelected++;
  4569  0016C4  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4570                           
  4571                           ; BSR set to: 1
  4572                           ;sm_MenuConfiguration_MC50.c: 375:                     load_New_Menu(menu_st.lastMenu);
  4573  0016C6  5165               	movf	(_menu_st+20)& (0+255),w,b
  4574  0016C8  EC3A  F01E         	call	_load_New_Menu
  4575                           
  4576                           ;sm_MenuConfiguration_MC50.c: 376:                 }
  4577  0016CC  0012               	return	
  4578  0016CE                     l22447:
  4579                           
  4580                           ; BSR set to: 1
  4581                           ;sm_MenuConfiguration_MC50.c: 378:                 {;sm_MenuConfiguration_MC50.c: 379:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4582  0016CE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4583  0016D0  EC3A  F01E         	call	_load_New_Menu
  4584  0016D4  0012               	return	
  4585  0016D6                     l22449:
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;sm_MenuConfiguration_MC50.c: 385:         {;sm_MenuConfiguration_MC50.c: 386:          
      +                             if(ts_system.timeoutMenu<=0)
  4589  0016D6  0101               	movlb	1	; () banked
  4590  0016D8  BFAB               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4591  0016DA  D005               	goto	u27180
  4592  0016DC  51AB               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4593  0016DE  E102               	bnz	u27181
  4594  0016E0  05AA               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4595  0016E2  B0D8               	btfsc	status,0,c
  4596  0016E4                     u27181:
  4597  0016E4  0012               	return	
  4598  0016E6                     u27180:
  4599                           
  4600                           ; BSR set to: 1
  4601                           ;sm_MenuConfiguration_MC50.c: 387:             {;sm_MenuConfiguration_MC50.c: 389:      
      +                                     if(auxCounter<=0){
  4602  0016E6  0100               	movlb	0	; () banked
  4603  0016E8  51F8               	movf	_auxCounter& (0+255),w,b
  4604  0016EA  11F9               	iorwf	(_auxCounter+1)& (0+255),w,b
  4605  0016EC  A4D8               	btfss	status,2,c
  4606  0016EE  D010               	goto	l22459
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;sm_MenuConfiguration_MC50.c: 390:                     menu_st.lastMainParameterSelected
      +                          ++;
  4610  0016F0  0101               	movlb	1	; () banked
  4611  0016F2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4612                           
  4613                           ; BSR set to: 1
  4614                           ;sm_MenuConfiguration_MC50.c: 391:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4615  0016F4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4616  0016F6  EC3A  F01E         	call	_load_New_Menu
  4617                           
  4618                           ;sm_MenuConfiguration_MC50.c: 392:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4619  0016FA  0EBB               	movlw	low _menuConfiguration_stateMachine
  4620  0016FC  6E12               	movwf	sm_send_event@psm^0,c
  4621  0016FE  0E02               	movlw	high _menuConfiguration_stateMachine
  4622  001700  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4623  001702  0E00               	movlw	0
  4624  001704  6E15               	movwf	(sm_send_event@event+1)^0,c
  4625  001706  0E04               	movlw	4
  4626  001708  6E14               	movwf	sm_send_event@event^0,c
  4627  00170A  ECD6  F040         	call	_sm_send_event	;wreg free
  4628                           
  4629                           ;sm_MenuConfiguration_MC50.c: 393:                 }
  4630  00170E  0012               	return	
  4631  001710                     l22459:
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;sm_MenuConfiguration_MC50.c: 395:                 {;sm_MenuConfiguration_MC50.c: 396:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4635  001710  0E00               	movlw	0
  4636  001712  0101               	movlb	1	; () banked
  4637  001714  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4638  001716  0E3C               	movlw	60
  4639  001718  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4640                           
  4641                           ; BSR set to: 1
  4642                           ;sm_MenuConfiguration_MC50.c: 397:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4643  00171A  C1FA  F010         	movff	_tempCounter,___lldiv@dividend
  4644  00171E  C1FB  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4645  001722  C1FC  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4646  001726  C1FD  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4647  00172A  C0F8  F014         	movff	_auxCounter,___lldiv@divisor
  4648  00172E  C0F9  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4649  001732  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4650  001734  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4651  001736  ECD3  F03C         	call	___lldiv	;wreg free
  4652  00173A  5010               	movf	?___lldiv^0,w,c
  4653  00173C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4654                           
  4655                           ;sm_MenuConfiguration_MC50.c: 398:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4656  00173E  C0F8  F014         	movff	_auxCounter,___lldiv@divisor
  4657  001742  C0F9  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4658  001746  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4659  001748  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4660  00174A  C1FA  F010         	movff	_tempCounter,___lldiv@dividend
  4661  00174E  C1FB  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4662  001752  C1FC  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4663  001756  C1FD  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4664  00175A  ECD3  F03C         	call	___lldiv	;wreg free
  4665  00175E  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4666  001762  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4667  001766  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4668  00176A  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4669  00176E  C0F8  F021         	movff	_auxCounter,___lmul@multiplicand
  4670  001772  C0F9  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4671  001776  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4672  001778  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4673  00177A  ECE4  F041         	call	___lmul	;wreg free
  4674  00177E  501D               	movf	?___lmul^0,w,c
  4675  001780  0101               	movlb	1	; () banked
  4676  001782  5DFA               	subwf	_tempCounter& (0+255),w,b
  4677  001784  6FFA               	movwf	_tempCounter& (0+255),b
  4678  001786  501E               	movf	(?___lmul+1)^0,w,c
  4679  001788  59FB               	subwfb	(_tempCounter+1)& (0+255),w,b
  4680  00178A  6FFB               	movwf	(_tempCounter+1)& (0+255),b
  4681  00178C  501F               	movf	(?___lmul+2)^0,w,c
  4682  00178E  59FC               	subwfb	(_tempCounter+2)& (0+255),w,b
  4683  001790  6FFC               	movwf	(_tempCounter+2)& (0+255),b
  4684  001792  5020               	movf	(?___lmul+3)^0,w,c
  4685  001794  59FD               	subwfb	(_tempCounter+3)& (0+255),w,b
  4686  001796  6FFD               	movwf	(_tempCounter+3)& (0+255),b
  4687                           
  4688                           ; BSR set to: 1
  4689                           ;sm_MenuConfiguration_MC50.c: 399:                     auxCounter=auxCounter/100;
  4690  001798  C0F8  F010         	movff	_auxCounter,___lwdiv@dividend
  4691  00179C  C0F9  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4692  0017A0  0E00               	movlw	0
  4693  0017A2  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4694  0017A4  0E64               	movlw	100
  4695  0017A6  6E12               	movwf	___lwdiv@divisor^0,c
  4696  0017A8  EC64  F042         	call	___lwdiv	;wreg free
  4697  0017AC  C010  F0F8         	movff	?___lwdiv,_auxCounter
  4698  0017B0  C011  F0F9         	movff	?___lwdiv+1,_auxCounter+1
  4699                           
  4700                           ;sm_MenuConfiguration_MC50.c: 400:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4701  0017B4  0E0A               	movlw	10
  4702  0017B6  6E10               	movwf	___lbdiv@divisor^0,c
  4703  0017B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4704  0017BA  EC99  F044         	call	___lbdiv
  4705  0017BE  0DF6               	mullw	246
  4706  0017C0  50F3               	movf	243,w,c
  4707  0017C2  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4708  0017C4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4709  0017C6  0E00               	movlw	0
  4710  0017C8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4711  0017CA  0E0A               	movlw	10
  4712  0017CC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4713  0017CE  0E0A               	movlw	10
  4714  0017D0  6E10               	movwf	___lbdiv@divisor^0,c
  4715  0017D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4716  0017D4  EC99  F044         	call	___lbdiv
  4717  0017D8  EC28  F048         	call	_SetSegmentValueIntermitentMain
  4718  0017DC  0012               	return	
  4719  0017DE                     l22469:
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;sm_MenuConfiguration_MC50.c: 406:         {;sm_MenuConfiguration_MC50.c: 407:          
      +                             controlSelectRemote();
  4723  0017DE  EC44  F019         	call	_controlSelectRemote	;wreg free
  4724                           
  4725                           ;sm_MenuConfiguration_MC50.c: 408:         };sm_MenuConfiguration_MC50.c: 409:         b
      +                          reak;
  4726  0017E2  0012               	return	
  4727  0017E4                     l22471:
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;sm_MenuConfiguration_MC50.c: 411:         {;sm_MenuConfiguration_MC50.c: 412:          
      +                             controlSaveRemote();
  4731  0017E4  EC7D  F039         	call	_controlSaveRemote	;wreg free
  4732                           
  4733                           ;sm_MenuConfiguration_MC50.c: 413:         };sm_MenuConfiguration_MC50.c: 414:         b
      +                          reak;
  4734  0017E8  0012               	return	
  4735  0017EA                     l22473:
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;sm_MenuConfiguration_MC50.c: 416:         {;sm_MenuConfiguration_MC50.c: 417:          
      +                             controlLearnDigit();
  4739  0017EA  EC1E  F045         	call	_controlLearnDigit	;wreg free
  4740                           
  4741                           ;sm_MenuConfiguration_MC50.c: 418:             if(var_sys.LearningIsEnabled==NO)
  4742  0017EE  0101               	movlb	1	; () banked
  4743  0017F0  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4744  0017F2  A4D8               	btfss	status,2,c
  4745  0017F4  0012               	return	
  4746                           
  4747                           ; BSR set to: 1
  4748                           ;sm_MenuConfiguration_MC50.c: 419:             {;sm_MenuConfiguration_MC50.c: 420:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4749  0017F6  0EEF               	movlw	low _main_stateMachine
  4750  0017F8  6E12               	movwf	sm_send_event@psm^0,c
  4751  0017FA  0E01               	movlw	high _main_stateMachine
  4752  0017FC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4753  0017FE  0E00               	movlw	0
  4754  001800  6E15               	movwf	(sm_send_event@event+1)^0,c
  4755  001802  0E07               	movlw	7
  4756  001804  6E14               	movwf	sm_send_event@event^0,c
  4757  001806  ECD6  F040         	call	_sm_send_event	;wreg free
  4758                           
  4759                           ;sm_MenuConfiguration_MC50.c: 421:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4760  00180A  0EBB               	movlw	low _menuConfiguration_stateMachine
  4761  00180C  6E12               	movwf	sm_send_event@psm^0,c
  4762  00180E  0E02               	movlw	high _menuConfiguration_stateMachine
  4763  001810  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4764  001812  0E00               	movlw	0
  4765  001814  6E15               	movwf	(sm_send_event@event+1)^0,c
  4766  001816  0E04               	movlw	4
  4767  001818  6E14               	movwf	sm_send_event@event^0,c
  4768  00181A  ECD6  F040         	call	_sm_send_event	;wreg free
  4769                           
  4770                           ;sm_MenuConfiguration_MC50.c: 422:                 SetSegmentValueMain(dMinus,dMinus);
  4771  00181E  0E18               	movlw	24
  4772  001820  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4773  001822  0E18               	movlw	24
  4774  001824  EC8D  F047         	call	_SetSegmentValueMain
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;sm_MenuConfiguration_MC50.c: 423:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4778  001828  0E02               	movlw	2
  4779  00182A  ECB6  F044         	call	_SaveNVM_VarSystem
  4780  00182E  D5F1               	goto	l22315
  4781  001830                     l22489:
  4782  001830  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4783  001834  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4784  001838  50DF               	movf	indf2,w,c
  4785  00183A  0100               	movlb	0	; () banked
  4786  00183C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4787  00183E  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4788                           
  4789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4790                           ; Switch size 1, requested type "simple"
  4791                           ; Number of cases is 1, Range of values is 0 to 0
  4792                           ; switch strategies available:
  4793                           ; Name         Instructions Cycles
  4794                           ; simple_byte            4     3 (average)
  4795                           ;	Chosen strategy is simple_byte
  4796  001840  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4797  001842  0A00               	xorlw	0	; case 0
  4798  001844  A4D8               	btfss	status,2,c
  4799  001846  0012               	return	
  4800                           
  4801                           ; BSR set to: 0
  4802                           ; Switch size 1, requested type "simple"
  4803                           ; Number of cases is 7, Range of values is 0 to 6
  4804                           ; switch strategies available:
  4805                           ; Name         Instructions Cycles
  4806                           ; simple_byte           22    12 (average)
  4807                           ;	Chosen strategy is simple_byte
  4808  001848  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4809  00184A  0A00               	xorlw	0	; case 0
  4810  00184C  B4D8               	btfsc	status,2,c
  4811  00184E  D439               	goto	l22183
  4812  001850  0A01               	xorlw	1	; case 1
  4813  001852  B4D8               	btfsc	status,2,c
  4814  001854  D604               	goto	l22333
  4815  001856  0A03               	xorlw	3	; case 2
  4816  001858  B4D8               	btfsc	status,2,c
  4817  00185A  D6D7               	goto	l22401
  4818  00185C  0A01               	xorlw	1	; case 3
  4819  00185E  B4D8               	btfsc	status,2,c
  4820  001860  D73A               	goto	l22449
  4821  001862  0A07               	xorlw	7	; case 4
  4822  001864  B4D8               	btfsc	status,2,c
  4823  001866  D7BB               	goto	l22469
  4824  001868  0A01               	xorlw	1	; case 5
  4825  00186A  B4D8               	btfsc	status,2,c
  4826  00186C  D7BB               	goto	l22471
  4827  00186E  0A03               	xorlw	3	; case 6
  4828  001870  A4D8               	btfss	status,2,c
  4829  001872  0012               	return	
  4830  001874  D7BA               	goto	l22473
  4831  001876                     __end_of_sm_execute_menuConfiguration:
  4832                           	callstack 0
  4833                           
  4834 ;; *************** function _setValueToEdit *****************
  4835 ;; Defined at:
  4836 ;;		line 647 in file "sm_MenuConfiguration_MC50.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  menuType        1    wreg     enum E10813
  4839 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;  menuType        1    6[BANK0 ] enum E10813
  4842 ;;  haveValueToE    1    7[BANK0 ] unsigned char 
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      unsigned char 
  4845 ;; Registers used:
  4846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 3F/1
  4849 ;;		On exit  : 3F/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4852 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4853 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4854 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4855 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4856 ;;Total ram usage:        5 bytes
  4857 ;; Hardware stack levels used: 1
  4858 ;; Hardware stack levels required when called: 14
  4859 ;; This function calls:
  4860 ;;		_InitReceiver
  4861 ;;		_SaveNVM_VarSystem
  4862 ;;		_load_New_Menu
  4863 ;;		_sm_send_event
  4864 ;; This function is called by:
  4865 ;;		_sm_execute_menuConfiguration
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text3
  4870  002994                     __ptext3:
  4871                           	callstack 0
  4872  002994                     _setValueToEdit:
  4873                           	callstack 14
  4874                           
  4875                           ;incstack = 0
  4876                           ;setValueToEdit@menuType stored from wreg
  4877  002994  0100               	movlb	0	; () banked
  4878  002996  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  4879                           
  4880                           ;sm_MenuConfiguration_MC50.c: 648:     char haveValueToEdit=0;
  4881  002998  0E00               	movlw	0
  4882  00299A  0100               	movlb	0	; () banked
  4883  00299C  6FDF               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4884                           
  4885                           ;sm_MenuConfiguration_MC50.c: 651:     switch (menuType)
  4886  00299E  D236               	goto	l20741
  4887  0029A0                     l3350:
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;sm_MenuConfiguration_MC50.c: 654:         {;sm_MenuConfiguration_MC50.c: 655:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  4891  0029A0  C168  F169         	movff	_menu_st+23,_menu_st+24
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;sm_MenuConfiguration_MC50.c: 656:             edit_Param.Min=0;
  4895  0029A4  0E00               	movlw	0
  4896  0029A6  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  4897                           
  4898                           ;sm_MenuConfiguration_MC50.c: 657:             switch (ParameterSelected)
  4899  0029A8  D034               	goto	l20507
  4900  0029AA                     l20461:
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;sm_MenuConfiguration_MC50.c: 660:                 {;sm_MenuConfiguration_MC50.c: 661:  
      +                                             load_New_Menu(P0_SMenu);
  4904  0029AA  0E04               	movlw	4
  4905  0029AC  EC3A  F01E         	call	_load_New_Menu
  4906                           
  4907                           ;sm_MenuConfiguration_MC50.c: 663:                 };sm_MenuConfiguration_MC50.c: 664:  
      +                                         break;
  4908  0029B0  D256               	goto	l20743
  4909  0029B2                     l20463:
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;sm_MenuConfiguration_MC50.c: 666:                 {;sm_MenuConfiguration_MC50.c: 667:  
      +                                             load_New_Menu(P1_SMenu);
  4913  0029B2  0E05               	movlw	5
  4914  0029B4  EC3A  F01E         	call	_load_New_Menu
  4915                           
  4916                           ;sm_MenuConfiguration_MC50.c: 668:                 };sm_MenuConfiguration_MC50.c: 669:  
      +                                         break;
  4917  0029B8  D252               	goto	l20743
  4918  0029BA                     l20465:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;sm_MenuConfiguration_MC50.c: 671:                 {;sm_MenuConfiguration_MC50.c: 672:  
      +                                             load_New_Menu(P2_SMenu);
  4922  0029BA  0E06               	movlw	6
  4923  0029BC  EC3A  F01E         	call	_load_New_Menu
  4924                           
  4925                           ;sm_MenuConfiguration_MC50.c: 673:                 };sm_MenuConfiguration_MC50.c: 674:  
      +                                         break;
  4926  0029C0  D24E               	goto	l20743
  4927  0029C2                     l20467:
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;sm_MenuConfiguration_MC50.c: 676:                 {;sm_MenuConfiguration_MC50.c: 677:  
      +                                             edit_Param.Max=99;
  4931  0029C2  0E63               	movlw	99
  4932  0029C4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;sm_MenuConfiguration_MC50.c: 679:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  4936  0029C6  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  4940  0029CA  0E9C               	movlw	low (_var_sys_NVM+4)
  4941  0029CC                     L13:
  4942  0029CC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  4943  0029CE  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;sm_MenuConfiguration_MC50.c: 681:                     haveValueToEdit=1;
  4947  0029D0  0E01               	movlw	1
  4948  0029D2  6FDF               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4949                           
  4950                           ;sm_MenuConfiguration_MC50.c: 682:                 };sm_MenuConfiguration_MC50.c: 683:  
      +                                         break;
  4951  0029D4  D244               	goto	l20743
  4952  0029D6                     l20475:
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;sm_MenuConfiguration_MC50.c: 685:                 {;sm_MenuConfiguration_MC50.c: 686:  
      +                                             load_New_Menu(P4_SMenu);
  4956  0029D6  0E07               	movlw	7
  4957  0029D8  EC3A  F01E         	call	_load_New_Menu
  4958                           
  4959                           ;sm_MenuConfiguration_MC50.c: 687:                 };sm_MenuConfiguration_MC50.c: 688:  
      +                                         break;
  4960  0029DC  D240               	goto	l20743
  4961  0029DE                     l20477:
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;sm_MenuConfiguration_MC50.c: 690:                 {;sm_MenuConfiguration_MC50.c: 691:  
      +                                             load_New_Menu(P5_SMenu);
  4965  0029DE  0E08               	movlw	8
  4966  0029E0  EC3A  F01E         	call	_load_New_Menu
  4967                           
  4968                           ;sm_MenuConfiguration_MC50.c: 692:                 };sm_MenuConfiguration_MC50.c: 693:  
      +                                         break;
  4969  0029E4  D23C               	goto	l20743
  4970  0029E6                     l20479:
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;sm_MenuConfiguration_MC50.c: 695:                 {;sm_MenuConfiguration_MC50.c: 696:  
      +                                             load_New_Menu(P6_SMenu);
  4974  0029E6  0E09               	movlw	9
  4975  0029E8  EC3A  F01E         	call	_load_New_Menu
  4976                           
  4977                           ;sm_MenuConfiguration_MC50.c: 697:                 };sm_MenuConfiguration_MC50.c: 698:  
      +                                         break;
  4978  0029EC  D238               	goto	l20743
  4979  0029EE                     l20481:
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;sm_MenuConfiguration_MC50.c: 700:                 {;sm_MenuConfiguration_MC50.c: 701:  
      +                                             edit_Param.Max=2;
  4983  0029EE  0E02               	movlw	2
  4984  0029F0  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;sm_MenuConfiguration_MC50.c: 703:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  4988  0029F2  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  4992  0029F6  0EA4               	movlw	low (_var_sys_NVM+12)
  4993  0029F8  D7E9               	goto	L13
  4994  0029FA                     l20489:
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;sm_MenuConfiguration_MC50.c: 709:                 {;sm_MenuConfiguration_MC50.c: 710:  
      +                                             edit_Param.Max=3;
  4998  0029FA  0E03               	movlw	3
  4999  0029FC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;sm_MenuConfiguration_MC50.c: 712:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5003  0029FE  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5007  002A02  0EA5               	movlw	low (_var_sys_NVM+13)
  5008  002A04  D7E3               	goto	L13
  5009  002A06                     l20497:
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;sm_MenuConfiguration_MC50.c: 718:                 {;sm_MenuConfiguration_MC50.c: 719:  
      +                                             edit_Param.Max=1;
  5013  002A06  0E01               	movlw	1
  5014  002A08  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;sm_MenuConfiguration_MC50.c: 721:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5018  002A0A  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5022  002A0E  0EA6               	movlw	low (_var_sys_NVM+14)
  5023  002A10  D7DD               	goto	L13
  5024  002A12                     l20507:
  5025                           
  5026                           ; BSR set to: 0
  5027  002A12  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5028  002A14  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5029  002A16  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5030                           
  5031                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5032                           ; Switch size 1, requested type "simple"
  5033                           ; Number of cases is 1, Range of values is 0 to 0
  5034                           ; switch strategies available:
  5035                           ; Name         Instructions Cycles
  5036                           ; simple_byte            4     3 (average)
  5037                           ;	Chosen strategy is simple_byte
  5038  002A18  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5039  002A1A  0A00               	xorlw	0	; case 0
  5040  002A1C  A4D8               	btfss	status,2,c
  5041  002A1E  D21F               	goto	l20743
  5042                           
  5043                           ; BSR set to: 0
  5044                           ; Switch size 1, requested type "simple"
  5045                           ; Number of cases is 10, Range of values is 0 to 9
  5046                           ; switch strategies available:
  5047                           ; Name         Instructions Cycles
  5048                           ; simple_byte           31    16 (average)
  5049                           ;	Chosen strategy is simple_byte
  5050  002A20  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5051  002A22  0A00               	xorlw	0	; case 0
  5052  002A24  B4D8               	btfsc	status,2,c
  5053  002A26  D7C1               	goto	l20461
  5054  002A28  0A01               	xorlw	1	; case 1
  5055  002A2A  B4D8               	btfsc	status,2,c
  5056  002A2C  D7C2               	goto	l20463
  5057  002A2E  0A03               	xorlw	3	; case 2
  5058  002A30  B4D8               	btfsc	status,2,c
  5059  002A32  D7C3               	goto	l20465
  5060  002A34  0A01               	xorlw	1	; case 3
  5061  002A36  B4D8               	btfsc	status,2,c
  5062  002A38  D7C4               	goto	l20467
  5063  002A3A  0A07               	xorlw	7	; case 4
  5064  002A3C  B4D8               	btfsc	status,2,c
  5065  002A3E  D7CB               	goto	l20475
  5066  002A40  0A01               	xorlw	1	; case 5
  5067  002A42  B4D8               	btfsc	status,2,c
  5068  002A44  D7CC               	goto	l20477
  5069  002A46  0A03               	xorlw	3	; case 6
  5070  002A48  B4D8               	btfsc	status,2,c
  5071  002A4A  D7CD               	goto	l20479
  5072  002A4C  0A01               	xorlw	1	; case 7
  5073  002A4E  B4D8               	btfsc	status,2,c
  5074  002A50  D7CE               	goto	l20481
  5075  002A52  0A0F               	xorlw	15	; case 8
  5076  002A54  B4D8               	btfsc	status,2,c
  5077  002A56  D7D1               	goto	l20489
  5078  002A58  0A01               	xorlw	1	; case 9
  5079  002A5A  B4D8               	btfsc	status,2,c
  5080  002A5C  D7D4               	goto	l20497
  5081  002A5E  D1FF               	goto	l20743
  5082  002A60                     l3364:
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;sm_MenuConfiguration_MC50.c: 732:         {;sm_MenuConfiguration_MC50.c: 733:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5086  002A60  C168  F169         	movff	_menu_st+23,_menu_st+24
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;sm_MenuConfiguration_MC50.c: 734:             edit_Param.Max=1;
  5090  002A64  0E01               	movlw	1
  5091  002A66  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5092                           
  5093                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Min=0;
  5094  002A68  0E00               	movlw	0
  5095  002A6A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5096                           
  5097                           ;sm_MenuConfiguration_MC50.c: 736:             switch (ParameterSelected)
  5098  002A6C  D057               	goto	l20563
  5099  002A6E                     l20511:
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;sm_MenuConfiguration_MC50.c: 739:                 {;sm_MenuConfiguration_MC50.c: 740:  
      +                                             load_New_Menu(E0_SMenu);
  5103  002A6E  0E0A               	movlw	10
  5104  002A70  EC3A  F01E         	call	_load_New_Menu
  5105                           
  5106                           ;sm_MenuConfiguration_MC50.c: 741:                 };sm_MenuConfiguration_MC50.c: 742:  
      +                                         break;
  5107  002A74  D1F4               	goto	l20743
  5108  002A76                     l20513:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;sm_MenuConfiguration_MC50.c: 744:                 {;sm_MenuConfiguration_MC50.c: 747:  
      +                                             load_New_Menu(E1_SMenu);
  5112  002A76  0E0B               	movlw	11
  5113  002A78  EC3A  F01E         	call	_load_New_Menu
  5114                           
  5115                           ;sm_MenuConfiguration_MC50.c: 749:                 };sm_MenuConfiguration_MC50.c: 750:  
      +                                         break;
  5116  002A7C  D1F0               	goto	l20743
  5117  002A7E                     l20515:
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;sm_MenuConfiguration_MC50.c: 752:                 {;sm_MenuConfiguration_MC50.c: 753:  
      +                                             edit_Param.Max=99;
  5121  002A7E  0E63               	movlw	99
  5122  002A80  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;sm_MenuConfiguration_MC50.c: 755:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5126  002A82  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5130  002A86  0EAC               	movlw	low (_var_sys_NVM+20)
  5131  002A88  D7A1               	goto	L13
  5132  002A8A                     l20523:
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;sm_MenuConfiguration_MC50.c: 761:                 {;sm_MenuConfiguration_MC50.c: 762:  
      +                                            edit_Param.Max=9;
  5136  002A8A  0E09               	movlw	9
  5137  002A8C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5138                           
  5139                           ;sm_MenuConfiguration_MC50.c: 763:                    edit_Param.Min=1;
  5140  002A8E  0E01               	movlw	1
  5141  002A90  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5145  002A92  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5149  002A96  0EAD               	movlw	low (_var_sys_NVM+21)
  5150  002A98  D799               	goto	L13
  5151  002A9A                     l3372:
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;sm_MenuConfiguration_MC50.c: 777:                 {;sm_MenuConfiguration_MC50.c: 778:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5155  002A9A  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;sm_MenuConfiguration_MC50.c: 779:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5159  002A9E  0EAF               	movlw	low (_var_sys_NVM+23)
  5160  002AA0  D795               	goto	L13
  5161  002AA2                     l20535:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;sm_MenuConfiguration_MC50.c: 784:                 {;sm_MenuConfiguration_MC50.c: 785:  
      +                                             edit_Param.Max=9;
  5165  002AA2  0E09               	movlw	9
  5166  002AA4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5167                           
  5168                           ;sm_MenuConfiguration_MC50.c: 786:                     edit_Param.Min=1;
  5169  002AA6  0E01               	movlw	1
  5170  002AA8  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5174  002AAA  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5178  002AAE  0EB0               	movlw	low (_var_sys_NVM+24)
  5179  002AB0  D78D               	goto	L13
  5180  002AB2                     l20543:
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;sm_MenuConfiguration_MC50.c: 793:                 {;sm_MenuConfiguration_MC50.c: 794:  
      +                                             edit_Param.tempValue=0;
  5184  002AB2  0E00               	movlw	0
  5185  002AB4  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5186                           
  5187                           ;sm_MenuConfiguration_MC50.c: 795:                     ts_system.timeoutMenu=0;
  5188  002AB6  0E00               	movlw	0
  5189  002AB8  0101               	movlb	1	; () banked
  5190  002ABA  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5191  002ABC  0E00               	movlw	0
  5192  002ABE  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5193                           
  5194                           ;sm_MenuConfiguration_MC50.c: 797:                     auxCounter=10000;
  5195  002AC0  0E27               	movlw	39
  5196  002AC2  0100               	movlb	0	; () banked
  5197  002AC4  6FF9               	movwf	(_auxCounter+1)& (0+255),b
  5198  002AC6  0E10               	movlw	16
  5199  002AC8  6FF8               	movwf	_auxCounter& (0+255),b
  5200                           
  5201                           ;sm_MenuConfiguration_MC50.c: 798:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5202  002ACA  0E00               	movlw	0
  5203  002ACC  0101               	movlb	1	; () banked
  5204  002ACE  6FC3               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5205  002AD0  0E00               	movlw	0
  5206  002AD2  6FC2               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5207                           
  5208                           ; BSR set to: 1
  5209                           ;sm_MenuConfiguration_MC50.c: 799:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5210  002AD4  C13C  F1FA         	movff	_var_sys+60,_tempCounter	;volatile
  5211  002AD8  C13D  F1FB         	movff	_var_sys+61,_tempCounter+1	;volatile
  5212  002ADC  C13E  F1FC         	movff	_var_sys+62,_tempCounter+2	;volatile
  5213  002AE0  C13F  F1FD         	movff	_var_sys+63,_tempCounter+3	;volatile
  5214                           
  5215                           ; BSR set to: 1
  5216                           ;sm_MenuConfiguration_MC50.c: 800:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5217  002AE4  0EBB               	movlw	low _menuConfiguration_stateMachine
  5218  002AE6  6E12               	movwf	sm_send_event@psm^0,c
  5219  002AE8  0E02               	movlw	high _menuConfiguration_stateMachine
  5220  002AEA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5221  002AEC  0E00               	movlw	0
  5222  002AEE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5223  002AF0  0E05               	movlw	5
  5224  002AF2  6E14               	movwf	sm_send_event@event^0,c
  5225  002AF4  ECD6  F040         	call	_sm_send_event	;wreg free
  5226                           
  5227                           ;sm_MenuConfiguration_MC50.c: 801:                 };sm_MenuConfiguration_MC50.c: 802:  
      +                                         break;
  5228  002AF8  D1B2               	goto	l20743
  5229  002AFA                     l20549:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;sm_MenuConfiguration_MC50.c: 804:                 {;sm_MenuConfiguration_MC50.c: 805:  
      +                                             edit_Param.tempValue=0;
  5233  002AFA  0E00               	movlw	0
  5234  002AFC  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5235                           
  5236                           ;sm_MenuConfiguration_MC50.c: 806:                     haveValueToEdit=1;
  5237  002AFE  0E01               	movlw	1
  5238  002B00  6FDF               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;sm_MenuConfiguration_MC50.c: 807:                     edit_Param.Value = 0;
  5242  002B02  0E00               	movlw	0
  5243  002B04  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5244  002B06  0E00               	movlw	0
  5245  002B08  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5246                           
  5247                           ;sm_MenuConfiguration_MC50.c: 808:                 };sm_MenuConfiguration_MC50.c: 809:  
      +                                         break;
  5248  002B0A  D1A9               	goto	l20743
  5249  002B0C                     l20553:
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;sm_MenuConfiguration_MC50.c: 811:                 {;sm_MenuConfiguration_MC50.c: 812:  
      +                                             edit_Param.Max=3;
  5253  002B0C  0E03               	movlw	3
  5254  002B0E  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5255                           
  5256                           ;sm_MenuConfiguration_MC50.c: 813:                     edit_Param.Min=0;
  5257  002B10  0E00               	movlw	0
  5258  002B12  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5262  002B14  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5266  002B18  0EB1               	movlw	low (_var_sys_NVM+25)
  5267  002B1A  D758               	goto	L13
  5268  002B1C                     l20563:
  5269                           
  5270                           ; BSR set to: 0
  5271  002B1C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5272  002B1E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5273  002B20  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5274                           
  5275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5276                           ; Switch size 1, requested type "simple"
  5277                           ; Number of cases is 1, Range of values is 0 to 0
  5278                           ; switch strategies available:
  5279                           ; Name         Instructions Cycles
  5280                           ; simple_byte            4     3 (average)
  5281                           ;	Chosen strategy is simple_byte
  5282  002B22  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5283  002B24  0A00               	xorlw	0	; case 0
  5284  002B26  A4D8               	btfss	status,2,c
  5285  002B28  D19A               	goto	l20743
  5286                           
  5287                           ; BSR set to: 0
  5288                           ; Switch size 1, requested type "simple"
  5289                           ; Number of cases is 10, Range of values is 0 to 9
  5290                           ; switch strategies available:
  5291                           ; Name         Instructions Cycles
  5292                           ; simple_byte           31    16 (average)
  5293                           ;	Chosen strategy is simple_byte
  5294  002B2A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5295  002B2C  0A00               	xorlw	0	; case 0
  5296  002B2E  B4D8               	btfsc	status,2,c
  5297  002B30  D79E               	goto	l20511
  5298  002B32  0A01               	xorlw	1	; case 1
  5299  002B34  B4D8               	btfsc	status,2,c
  5300  002B36  D79F               	goto	l20513
  5301  002B38  0A03               	xorlw	3	; case 2
  5302  002B3A  B4D8               	btfsc	status,2,c
  5303  002B3C  D7A0               	goto	l20515
  5304  002B3E  0A01               	xorlw	1	; case 3
  5305  002B40  B4D8               	btfsc	status,2,c
  5306  002B42  D7A3               	goto	l20523
  5307  002B44  0A07               	xorlw	7	; case 4
  5308  002B46  B4D8               	btfsc	status,2,c
  5309  002B48  D18A               	goto	l20743
  5310  002B4A  0A01               	xorlw	1	; case 5
  5311  002B4C  B4D8               	btfsc	status,2,c
  5312  002B4E  D7A5               	goto	l3372
  5313  002B50  0A03               	xorlw	3	; case 6
  5314  002B52  B4D8               	btfsc	status,2,c
  5315  002B54  D7A6               	goto	l20535
  5316  002B56  0A01               	xorlw	1	; case 7
  5317  002B58  B4D8               	btfsc	status,2,c
  5318  002B5A  D7AB               	goto	l20543
  5319  002B5C  0A0F               	xorlw	15	; case 8
  5320  002B5E  B4D8               	btfsc	status,2,c
  5321  002B60  D7CC               	goto	l20549
  5322  002B62  0A01               	xorlw	1	; case 9
  5323  002B64  B4D8               	btfsc	status,2,c
  5324  002B66  D7D2               	goto	l20553
  5325  002B68  D17A               	goto	l20743
  5326  002B6A                     l20565:
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;sm_MenuConfiguration_MC50.c: 828:                 {;sm_MenuConfiguration_MC50.c: 829:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5330  002B6A  0EBB               	movlw	low _menuConfiguration_stateMachine
  5331  002B6C  6E12               	movwf	sm_send_event@psm^0,c
  5332  002B6E  0E02               	movlw	high _menuConfiguration_stateMachine
  5333  002B70  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5334  002B72  0E00               	movlw	0
  5335  002B74  6E15               	movwf	(sm_send_event@event+1)^0,c
  5336  002B76  0E14               	movlw	20
  5337  002B78  6E14               	movwf	sm_send_event@event^0,c
  5338  002B7A  ECD6  F040         	call	_sm_send_event	;wreg free
  5339                           
  5340                           ;sm_MenuConfiguration_MC50.c: 830:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5341  002B7E  0EE4               	movlw	low _controlGate_stateMachine
  5342  002B80  6E12               	movwf	sm_send_event@psm^0,c
  5343  002B82  0E01               	movlw	high _controlGate_stateMachine
  5344  002B84  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5345  002B86  0E00               	movlw	0
  5346  002B88  6E15               	movwf	(sm_send_event@event+1)^0,c
  5347  002B8A  0E14               	movlw	20
  5348  002B8C  6E14               	movwf	sm_send_event@event^0,c
  5349  002B8E  ECD6  F040         	call	_sm_send_event	;wreg free
  5350                           
  5351                           ;sm_MenuConfiguration_MC50.c: 831:                  var_sys.LearningIsEnabled=YES;
  5352  002B92  0E01               	movlw	1
  5353  002B94  0101               	movlb	1	; () banked
  5354  002B96  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5355                           
  5356                           ; BSR set to: 1
  5357                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5358  002B98  0E00               	movlw	0
  5359  002B9A  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5360                           
  5361                           ; BSR set to: 1
  5362                           ;sm_MenuConfiguration_MC50.c: 833:                  SaveNVM_VarSystem(pageMemoryE);
  5363  002B9C  0E01               	movlw	1
  5364  002B9E  ECB6  F044         	call	_SaveNVM_VarSystem
  5365                           
  5366                           ;sm_MenuConfiguration_MC50.c: 836:                 };sm_MenuConfiguration_MC50.c: 837:  
      +                                         break;
  5367  002BA2  D15D               	goto	l20743
  5368  002BA4                     l20573:
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;sm_MenuConfiguration_MC50.c: 839:                 {;sm_MenuConfiguration_MC50.c: 840:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5372  002BA4  0EBB               	movlw	low _menuConfiguration_stateMachine
  5373  002BA6  6E12               	movwf	sm_send_event@psm^0,c
  5374  002BA8  0E02               	movlw	high _menuConfiguration_stateMachine
  5375  002BAA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5376  002BAC  0E00               	movlw	0
  5377  002BAE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5378  002BB0  0E14               	movlw	20
  5379  002BB2  6E14               	movwf	sm_send_event@event^0,c
  5380  002BB4  ECD6  F040         	call	_sm_send_event	;wreg free
  5381                           
  5382                           ;sm_MenuConfiguration_MC50.c: 841:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5383  002BB8  0EE4               	movlw	low _controlGate_stateMachine
  5384  002BBA  6E12               	movwf	sm_send_event@psm^0,c
  5385  002BBC  0E01               	movlw	high _controlGate_stateMachine
  5386  002BBE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5387  002BC0  0E00               	movlw	0
  5388  002BC2  6E15               	movwf	(sm_send_event@event+1)^0,c
  5389  002BC4  0E14               	movlw	20
  5390  002BC6  6E14               	movwf	sm_send_event@event^0,c
  5391  002BC8  ECD6  F040         	call	_sm_send_event	;wreg free
  5392                           
  5393                           ;sm_MenuConfiguration_MC50.c: 842:                  var_sys.LearningIsEnabled=YES;
  5394  002BCC  0E01               	movlw	1
  5395  002BCE  0101               	movlb	1	; () banked
  5396  002BD0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5397                           
  5398                           ; BSR set to: 1
  5399                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.programinAutomatic = Manual;
  5400  002BD2  0E01               	movlw	1
  5401  002BD4  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5402                           
  5403                           ; BSR set to: 1
  5404                           ;sm_MenuConfiguration_MC50.c: 844:                  SaveNVM_VarSystem(pageMemoryE);
  5405  002BD6  0E01               	movlw	1
  5406  002BD8  ECB6  F044         	call	_SaveNVM_VarSystem
  5407                           
  5408                           ;sm_MenuConfiguration_MC50.c: 847:                 };sm_MenuConfiguration_MC50.c: 848:  
      +                                         break;
  5409  002BDC  D140               	goto	l20743
  5410  002BDE                     l3382:
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;sm_MenuConfiguration_MC50.c: 850:                 {;sm_MenuConfiguration_MC50.c: 851:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5414  002BDE  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;sm_MenuConfiguration_MC50.c: 852:                  load_New_Menu(TypeMotor_Menu);
  5418  002BE2  0E03               	movlw	3
  5419  002BE4  EC3A  F01E         	call	_load_New_Menu
  5420                           
  5421                           ;sm_MenuConfiguration_MC50.c: 853:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5422  002BE8  0EB4               	movlw	low (_var_sys_NVM+28)
  5423  002BEA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5424  002BEC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5425                           
  5426                           ;sm_MenuConfiguration_MC50.c: 854:                  haveValueToEdit=1;
  5427  002BEE  0E01               	movlw	1
  5428  002BF0  0100               	movlb	0	; () banked
  5429  002BF2  6FDF               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;sm_MenuConfiguration_MC50.c: 855:                  edit_Param.Max=2;
  5433  002BF4  0E02               	movlw	2
  5434  002BF6  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Min=0;
  5438  002BF8  0E00               	movlw	0
  5439  002BFA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5440                           
  5441                           ;sm_MenuConfiguration_MC50.c: 858:                 };sm_MenuConfiguration_MC50.c: 859:  
      +                                         break;
  5442  002BFC  D130               	goto	l20743
  5443  002BFE                     l3383:
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;sm_MenuConfiguration_MC50.c: 861:                 {;sm_MenuConfiguration_MC50.c: 862:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5447  002BFE  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;sm_MenuConfiguration_MC50.c: 863:                  load_New_Menu(Direction_Menu);
  5451  002C02  0E02               	movlw	2
  5452  002C04  EC3A  F01E         	call	_load_New_Menu
  5453                           
  5454                           ;sm_MenuConfiguration_MC50.c: 864:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5455  002C08  0EB3               	movlw	low (_var_sys_NVM+27)
  5456  002C0A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5457  002C0C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5458                           
  5459                           ;sm_MenuConfiguration_MC50.c: 865:                  haveValueToEdit=1;
  5460  002C0E  0E01               	movlw	1
  5461  002C10  0100               	movlb	0	; () banked
  5462  002C12  6FDF               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;sm_MenuConfiguration_MC50.c: 866:                  edit_Param.Max=1;
  5466  002C14  0E01               	movlw	1
  5467  002C16  D7EF               	goto	L14
  5468  002C18                     l20603:
  5469                           
  5470                           ; BSR set to: 0
  5471  002C18  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5472  002C1A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5473  002C1C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5474                           
  5475                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5476                           ; Switch size 1, requested type "simple"
  5477                           ; Number of cases is 1, Range of values is 0 to 0
  5478                           ; switch strategies available:
  5479                           ; Name         Instructions Cycles
  5480                           ; simple_byte            4     3 (average)
  5481                           ;	Chosen strategy is simple_byte
  5482  002C1E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5483  002C20  0A00               	xorlw	0	; case 0
  5484  002C22  A4D8               	btfss	status,2,c
  5485  002C24  D11C               	goto	l20743
  5486                           
  5487                           ; BSR set to: 0
  5488                           ; Switch size 1, requested type "simple"
  5489                           ; Number of cases is 4, Range of values is 0 to 3
  5490                           ; switch strategies available:
  5491                           ; Name         Instructions Cycles
  5492                           ; simple_byte           13     7 (average)
  5493                           ;	Chosen strategy is simple_byte
  5494  002C26  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5495  002C28  0A00               	xorlw	0	; case 0
  5496  002C2A  B4D8               	btfsc	status,2,c
  5497  002C2C  D79E               	goto	l20565
  5498  002C2E  0A01               	xorlw	1	; case 1
  5499  002C30  B4D8               	btfsc	status,2,c
  5500  002C32  D7B8               	goto	l20573
  5501  002C34  0A03               	xorlw	3	; case 2
  5502  002C36  B4D8               	btfsc	status,2,c
  5503  002C38  D7D2               	goto	l3382
  5504  002C3A  0A01               	xorlw	1	; case 3
  5505  002C3C  B4D8               	btfsc	status,2,c
  5506  002C3E  D7DF               	goto	l3383
  5507  002C40  D10E               	goto	l20743
  5508  002C42                     l20605:
  5509                           
  5510                           ; BSR set to: 0
  5511                           ;sm_MenuConfiguration_MC50.c: 882:                 {;sm_MenuConfiguration_MC50.c: 883:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5512  002C42  0E98               	movlw	low _var_sys_NVM
  5513  002C44  D001               	goto	L15
  5514  002C46                     l20607:
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;sm_MenuConfiguration_MC50.c: 887:                 {;sm_MenuConfiguration_MC50.c: 888:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5518  002C46  0E99               	movlw	low (_var_sys_NVM+1)
  5519  002C48                     L15:
  5520  002C48  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5521  002C4A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5522                           
  5523                           ;sm_MenuConfiguration_MC50.c: 889:                 };sm_MenuConfiguration_MC50.c: 890:  
      +                                         break;
  5524  002C4C  D00E               	goto	l20613
  5525  002C4E                     l20611:
  5526                           
  5527                           ; BSR set to: 0
  5528  002C4E  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5529  002C50  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5530  002C52  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5531                           
  5532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5533                           ; Switch size 1, requested type "simple"
  5534                           ; Number of cases is 1, Range of values is 0 to 0
  5535                           ; switch strategies available:
  5536                           ; Name         Instructions Cycles
  5537                           ; simple_byte            4     3 (average)
  5538                           ;	Chosen strategy is simple_byte
  5539  002C54  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5540  002C56  0A00               	xorlw	0	; case 0
  5541  002C58  A4D8               	btfss	status,2,c
  5542  002C5A  D007               	goto	l20613
  5543                           
  5544                           ; BSR set to: 0
  5545                           ; Switch size 1, requested type "simple"
  5546                           ; Number of cases is 2, Range of values is 0 to 1
  5547                           ; switch strategies available:
  5548                           ; Name         Instructions Cycles
  5549                           ; simple_byte            7     4 (average)
  5550                           ;	Chosen strategy is simple_byte
  5551  002C5C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5552  002C5E  0A00               	xorlw	0	; case 0
  5553  002C60  B4D8               	btfsc	status,2,c
  5554  002C62  D7EF               	goto	l20605
  5555  002C64  0A01               	xorlw	1	; case 1
  5556  002C66  B4D8               	btfsc	status,2,c
  5557  002C68  D7EE               	goto	l20607
  5558  002C6A                     l20613:
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;sm_MenuConfiguration_MC50.c: 894:                 edit_Param.Max=45;
  5562  002C6A  0E2D               	movlw	45
  5563  002C6C                     L29:
  5564  002C6C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5565                           
  5566                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Min=0;
  5567  002C6E  0E00               	movlw	0
  5568  002C70  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5569  002C72                     L19:
  5570                           
  5571                           ;sm_MenuConfiguration_MC50.c: 898:             haveValueToEdit=1;
  5572  002C72  0E01               	movlw	1
  5573  002C74  6FDF               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;sm_MenuConfiguration_MC50.c: 899:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5577  002C76  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5578  002C7A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5579  002C7E  50DF               	movf	indf2,w,c
  5580  002C80  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5581                           
  5582                           ;sm_MenuConfiguration_MC50.c: 900:         };sm_MenuConfiguration_MC50.c: 901:         b
      +                          reak;
  5583  002C82  D0ED               	goto	l20743
  5584  002C84                     l20617:
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;sm_MenuConfiguration_MC50.c: 903:         {;sm_MenuConfiguration_MC50.c: 904:          
      +                             edit_Param.Max=9;
  5588  002C84  0E09               	movlw	9
  5589  002C86  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5590                           
  5591                           ;sm_MenuConfiguration_MC50.c: 905:             edit_Param.Min=0;
  5592  002C88  0E00               	movlw	0
  5593  002C8A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5594                           
  5595                           ;sm_MenuConfiguration_MC50.c: 906:             switch (ParameterSelected)
  5596  002C8C  D00F               	goto	l20633
  5597  002C8E                     l20619:
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;sm_MenuConfiguration_MC50.c: 909:                 {;sm_MenuConfiguration_MC50.c: 910:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5601  002C8E  0E02               	movlw	2
  5602  002C90  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5603  002C92  D002               	goto	l20623
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;sm_MenuConfiguration_MC50.c: 911:                       {;sm_MenuConfiguration_MC50.c: 
      +                          912:                         edit_Param.Min=0;
  5607  002C94  0E00               	movlw	0
  5608  002C96  D001               	goto	L16
  5609  002C98                     l20623:
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;sm_MenuConfiguration_MC50.c: 915:                       {;sm_MenuConfiguration_MC50.c: 
      +                          916:                         edit_Param.Min=9;
  5613  002C98  0E09               	movlw	9
  5614  002C9A                     L16:
  5615  002C9A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;sm_MenuConfiguration_MC50.c: 918:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5619  002C9C  0E9A               	movlw	low (_var_sys_NVM+2)
  5620  002C9E  D003               	goto	L18
  5621  002CA0                     l20627:
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;sm_MenuConfiguration_MC50.c: 922:                 {;sm_MenuConfiguration_MC50.c: 923:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5625  002CA0  0E9B               	movlw	low (_var_sys_NVM+3)
  5626  002CA2  D001               	goto	L18
  5627  002CA4                     l20629:
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;sm_MenuConfiguration_MC50.c: 927:                 {;sm_MenuConfiguration_MC50.c: 928:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5631  002CA4  0EA7               	movlw	low (_var_sys_NVM+15)
  5632  002CA6                     L18:
  5633  002CA6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5634  002CA8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5635                           
  5636                           ;sm_MenuConfiguration_MC50.c: 929:                 };sm_MenuConfiguration_MC50.c: 930:  
      +                                         break;
  5637  002CAA  D7E3               	goto	L19
  5638  002CAC                     l20633:
  5639                           
  5640                           ; BSR set to: 0
  5641  002CAC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5642  002CAE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5643  002CB0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5644                           
  5645                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5646                           ; Switch size 1, requested type "simple"
  5647                           ; Number of cases is 1, Range of values is 0 to 0
  5648                           ; switch strategies available:
  5649                           ; Name         Instructions Cycles
  5650                           ; simple_byte            4     3 (average)
  5651                           ;	Chosen strategy is simple_byte
  5652  002CB2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5653  002CB4  0A00               	xorlw	0	; case 0
  5654  002CB6  A4D8               	btfss	status,2,c
  5655  002CB8  D7DC               	goto	L19
  5656                           
  5657                           ; BSR set to: 0
  5658                           ; Switch size 1, requested type "simple"
  5659                           ; Number of cases is 3, Range of values is 0 to 2
  5660                           ; switch strategies available:
  5661                           ; Name         Instructions Cycles
  5662                           ; simple_byte           10     6 (average)
  5663                           ;	Chosen strategy is simple_byte
  5664  002CBA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5665  002CBC  0A00               	xorlw	0	; case 0
  5666  002CBE  B4D8               	btfsc	status,2,c
  5667  002CC0  D7E6               	goto	l20619
  5668  002CC2  0A01               	xorlw	1	; case 1
  5669  002CC4  B4D8               	btfsc	status,2,c
  5670  002CC6  D7EC               	goto	l20627
  5671  002CC8  0A03               	xorlw	3	; case 2
  5672  002CCA  B4D8               	btfsc	status,2,c
  5673  002CCC  D7EB               	goto	l20629
  5674  002CCE  D7D1               	goto	L19
  5675  002CD0                     l20639:
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;sm_MenuConfiguration_MC50.c: 941:                 {;sm_MenuConfiguration_MC50.c: 942:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5679  002CD0  0E9D               	movlw	low (_var_sys_NVM+5)
  5680  002CD2  D001               	goto	L20
  5681  002CD4                     l20641:
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;sm_MenuConfiguration_MC50.c: 946:                 {;sm_MenuConfiguration_MC50.c: 947:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5685  002CD4  0E9E               	movlw	low (_var_sys_NVM+6)
  5686  002CD6                     L20:
  5687  002CD6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5688  002CD8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5689                           
  5690                           ;sm_MenuConfiguration_MC50.c: 948:                 };sm_MenuConfiguration_MC50.c: 949:  
      +                                         break;
  5691  002CDA  D00E               	goto	l20647
  5692  002CDC                     l20645:
  5693                           
  5694                           ; BSR set to: 0
  5695  002CDC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5696  002CDE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5697  002CE0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5698                           
  5699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5700                           ; Switch size 1, requested type "simple"
  5701                           ; Number of cases is 1, Range of values is 0 to 0
  5702                           ; switch strategies available:
  5703                           ; Name         Instructions Cycles
  5704                           ; simple_byte            4     3 (average)
  5705                           ;	Chosen strategy is simple_byte
  5706  002CE2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5707  002CE4  0A00               	xorlw	0	; case 0
  5708  002CE6  A4D8               	btfss	status,2,c
  5709  002CE8  D007               	goto	l20647
  5710                           
  5711                           ; BSR set to: 0
  5712                           ; Switch size 1, requested type "simple"
  5713                           ; Number of cases is 2, Range of values is 0 to 1
  5714                           ; switch strategies available:
  5715                           ; Name         Instructions Cycles
  5716                           ; simple_byte            7     4 (average)
  5717                           ;	Chosen strategy is simple_byte
  5718  002CEA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5719  002CEC  0A00               	xorlw	0	; case 0
  5720  002CEE  B4D8               	btfsc	status,2,c
  5721  002CF0  D7EF               	goto	l20639
  5722  002CF2  0A01               	xorlw	1	; case 1
  5723  002CF4  B4D8               	btfsc	status,2,c
  5724  002CF6  D7EE               	goto	l20641
  5725  002CF8                     l20647:
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;sm_MenuConfiguration_MC50.c: 951:             edit_Param.Max=99;
  5729  002CF8  0E63               	movlw	99
  5730  002CFA  D7B8               	goto	L29
  5731  002CFC                     l20651:
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;sm_MenuConfiguration_MC50.c: 962:                 {;sm_MenuConfiguration_MC50.c: 963:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5735  002CFC  0E9F               	movlw	low (_var_sys_NVM+7)
  5736  002CFE  D034               	goto	L125
  5737  002D00                     l20653:
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;sm_MenuConfiguration_MC50.c: 967:                 {;sm_MenuConfiguration_MC50.c: 968:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5741  002D00  0EA0               	movlw	low (_var_sys_NVM+8)
  5742  002D02  D032               	goto	L125
  5743  002D04                     l20657:
  5744                           
  5745                           ; BSR set to: 0
  5746  002D04  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5747  002D06  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5748  002D08  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5749                           
  5750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5751                           ; Switch size 1, requested type "simple"
  5752                           ; Number of cases is 1, Range of values is 0 to 0
  5753                           ; switch strategies available:
  5754                           ; Name         Instructions Cycles
  5755                           ; simple_byte            4     3 (average)
  5756                           ;	Chosen strategy is simple_byte
  5757  002D0A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5758  002D0C  0A00               	xorlw	0	; case 0
  5759  002D0E  A4D8               	btfss	status,2,c
  5760  002D10  D02D               	goto	L124
  5761                           
  5762                           ; BSR set to: 0
  5763                           ; Switch size 1, requested type "simple"
  5764                           ; Number of cases is 2, Range of values is 0 to 1
  5765                           ; switch strategies available:
  5766                           ; Name         Instructions Cycles
  5767                           ; simple_byte            7     4 (average)
  5768                           ;	Chosen strategy is simple_byte
  5769  002D12  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5770  002D14  0A00               	xorlw	0	; case 0
  5771  002D16  B4D8               	btfsc	status,2,c
  5772  002D18  D7F1               	goto	l20651
  5773  002D1A  0A01               	xorlw	1	; case 1
  5774  002D1C  B4D8               	btfsc	status,2,c
  5775  002D1E  D7F0               	goto	l20653
  5776  002D20  D025               	goto	L124
  5777  002D22                     l20663:
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;sm_MenuConfiguration_MC50.c: 983:                 {;sm_MenuConfiguration_MC50.c: 984:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5781  002D22  0EA1               	movlw	low (_var_sys_NVM+9)
  5782  002D24  D021               	goto	L125
  5783  002D26                     l20665:
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;sm_MenuConfiguration_MC50.c: 988:                 {;sm_MenuConfiguration_MC50.c: 989:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5787  002D26  0EA2               	movlw	low (_var_sys_NVM+10)
  5788  002D28  D01F               	goto	L125
  5789  002D2A                     l20667:
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;sm_MenuConfiguration_MC50.c: 993:                 {;sm_MenuConfiguration_MC50.c: 994:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5793  002D2A  0EA3               	movlw	low (_var_sys_NVM+11)
  5794  002D2C  D01D               	goto	L125
  5795  002D2E                     l20669:
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;sm_MenuConfiguration_MC50.c: 998:                 {;sm_MenuConfiguration_MC50.c: 999:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5799  002D2E  0EAE               	movlw	low (_var_sys_NVM+22)
  5800  002D30  D01B               	goto	L125
  5801  002D32                     l20673:
  5802                           
  5803                           ; BSR set to: 0
  5804  002D32  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5805  002D34  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5806  002D36  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5807                           
  5808                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5809                           ; Switch size 1, requested type "simple"
  5810                           ; Number of cases is 1, Range of values is 0 to 0
  5811                           ; switch strategies available:
  5812                           ; Name         Instructions Cycles
  5813                           ; simple_byte            4     3 (average)
  5814                           ;	Chosen strategy is simple_byte
  5815  002D38  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5816  002D3A  0A00               	xorlw	0	; case 0
  5817  002D3C  A4D8               	btfss	status,2,c
  5818  002D3E  D016               	goto	L124
  5819                           
  5820                           ; BSR set to: 0
  5821                           ; Switch size 1, requested type "simple"
  5822                           ; Number of cases is 4, Range of values is 0 to 3
  5823                           ; switch strategies available:
  5824                           ; Name         Instructions Cycles
  5825                           ; simple_byte           13     7 (average)
  5826                           ;	Chosen strategy is simple_byte
  5827  002D40  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5828  002D42  0A00               	xorlw	0	; case 0
  5829  002D44  B4D8               	btfsc	status,2,c
  5830  002D46  D7ED               	goto	l20663
  5831  002D48  0A01               	xorlw	1	; case 1
  5832  002D4A  B4D8               	btfsc	status,2,c
  5833  002D4C  D7EC               	goto	l20665
  5834  002D4E  0A03               	xorlw	3	; case 2
  5835  002D50  B4D8               	btfsc	status,2,c
  5836  002D52  D7EB               	goto	l20667
  5837  002D54  0A01               	xorlw	1	; case 3
  5838  002D56  B4D8               	btfsc	status,2,c
  5839  002D58  D7EA               	goto	l20669
  5840  002D5A  D008               	goto	L124
  5841  002D5C                     l20679:
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;sm_MenuConfiguration_MC50.c: 1017:                 {;sm_MenuConfiguration_MC50.c: 1018:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5845  002D5C  0EA8               	movlw	low (_var_sys_NVM+16)
  5846  002D5E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5847  002D60  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;sm_MenuConfiguration_MC50.c: 1019:                       edit_Param.Max=2;
  5851  002D62  0E02               	movlw	2
  5852  002D64  D783               	goto	L29
  5853  002D66                     l20685:
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;sm_MenuConfiguration_MC50.c: 1024:                 {;sm_MenuConfiguration_MC50.c: 1025:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  5857  002D66  0EA9               	movlw	low (_var_sys_NVM+17)
  5858  002D68                     L125:
  5859  002D68  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5860  002D6A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5861  002D6C                     L124:
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;sm_MenuConfiguration_MC50.c: 1026:                     edit_Param.Max=1;
  5865  002D6C  0E01               	movlw	1
  5866  002D6E  D77E               	goto	L29
  5867  002D70                     l20693:
  5868                           
  5869                           ; BSR set to: 0
  5870  002D70  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5871  002D72  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5872  002D74  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5873                           
  5874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5875                           ; Switch size 1, requested type "simple"
  5876                           ; Number of cases is 1, Range of values is 0 to 0
  5877                           ; switch strategies available:
  5878                           ; Name         Instructions Cycles
  5879                           ; simple_byte            4     3 (average)
  5880                           ;	Chosen strategy is simple_byte
  5881  002D76  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5882  002D78  0A00               	xorlw	0	; case 0
  5883  002D7A  A4D8               	btfss	status,2,c
  5884  002D7C  D77A               	goto	L19
  5885                           
  5886                           ; BSR set to: 0
  5887                           ; Switch size 1, requested type "simple"
  5888                           ; Number of cases is 2, Range of values is 0 to 1
  5889                           ; switch strategies available:
  5890                           ; Name         Instructions Cycles
  5891                           ; simple_byte            7     4 (average)
  5892                           ;	Chosen strategy is simple_byte
  5893  002D7E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5894  002D80  0A00               	xorlw	0	; case 0
  5895  002D82  B4D8               	btfsc	status,2,c
  5896  002D84  D7EB               	goto	l20679
  5897  002D86  0A01               	xorlw	1	; case 1
  5898  002D88  B4D8               	btfsc	status,2,c
  5899  002D8A  D7ED               	goto	l20685
  5900  002D8C  D772               	goto	L19
  5901  002D8E                     l20699:
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;sm_MenuConfiguration_MC50.c: 1041:                 {;sm_MenuConfiguration_MC50.c: 1042:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  5905  002D8E  0EAA               	movlw	low (_var_sys_NVM+18)
  5906  002D90  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5907  002D92  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;sm_MenuConfiguration_MC50.c: 1043:                      edit_Param.Max=9;
  5911  002D94  0E09               	movlw	9
  5912  002D96  D76A               	goto	L29
  5913  002D98                     l20705:
  5914                           
  5915                           ; BSR set to: 0
  5916                           ;sm_MenuConfiguration_MC50.c: 1048:                 {;sm_MenuConfiguration_MC50.c: 1049:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  5917  002D98  0EAB               	movlw	low (_var_sys_NVM+19)
  5918  002D9A  D7FA               	goto	L27
  5919  002D9C                     l20713:
  5920                           
  5921                           ; BSR set to: 0
  5922  002D9C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5923  002D9E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5924  002DA0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5925                           
  5926                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5927                           ; Switch size 1, requested type "simple"
  5928                           ; Number of cases is 1, Range of values is 0 to 0
  5929                           ; switch strategies available:
  5930                           ; Name         Instructions Cycles
  5931                           ; simple_byte            4     3 (average)
  5932                           ;	Chosen strategy is simple_byte
  5933  002DA2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5934  002DA4  0A00               	xorlw	0	; case 0
  5935  002DA6  A4D8               	btfss	status,2,c
  5936  002DA8  D764               	goto	L19
  5937                           
  5938                           ; BSR set to: 0
  5939                           ; Switch size 1, requested type "simple"
  5940                           ; Number of cases is 2, Range of values is 0 to 1
  5941                           ; switch strategies available:
  5942                           ; Name         Instructions Cycles
  5943                           ; simple_byte            7     4 (average)
  5944                           ;	Chosen strategy is simple_byte
  5945  002DAA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5946  002DAC  0A00               	xorlw	0	; case 0
  5947  002DAE  B4D8               	btfsc	status,2,c
  5948  002DB0  D7EE               	goto	l20699
  5949  002DB2  0A01               	xorlw	1	; case 1
  5950  002DB4  B4D8               	btfsc	status,2,c
  5951  002DB6  D7F0               	goto	l20705
  5952  002DB8  D75C               	goto	L19
  5953  002DBA                     l20719:
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;sm_MenuConfiguration_MC50.c: 1066:                 {;sm_MenuConfiguration_MC50.c: 1067:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.positionRemotesFull;
  5957  002DBA  0EB8               	movlw	low (_var_sys_NVM+32)
  5958  002DBC  D001               	goto	L28
  5959  002DBE                     l20721:
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;sm_MenuConfiguration_MC50.c: 1071:                 {;sm_MenuConfiguration_MC50.c: 1072:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.positionRemotesWalk;
  5963  002DBE  0EB9               	movlw	low (_var_sys_NVM+33)
  5964  002DC0                     L28:
  5965  002DC0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5966  002DC2  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5967                           
  5968                           ;sm_MenuConfiguration_MC50.c: 1073:                 };sm_MenuConfiguration_MC50.c: 1074:
      +                                           break;
  5969  002DC4  D00E               	goto	l20727
  5970  002DC6                     l20725:
  5971                           
  5972                           ; BSR set to: 0
  5973  002DC6  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5974  002DC8  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5975  002DCA  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5976                           
  5977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5978                           ; Switch size 1, requested type "simple"
  5979                           ; Number of cases is 1, Range of values is 0 to 0
  5980                           ; switch strategies available:
  5981                           ; Name         Instructions Cycles
  5982                           ; simple_byte            4     3 (average)
  5983                           ;	Chosen strategy is simple_byte
  5984  002DCC  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5985  002DCE  0A00               	xorlw	0	; case 0
  5986  002DD0  A4D8               	btfss	status,2,c
  5987  002DD2  D007               	goto	l20727
  5988                           
  5989                           ; BSR set to: 0
  5990                           ; Switch size 1, requested type "simple"
  5991                           ; Number of cases is 2, Range of values is 0 to 1
  5992                           ; switch strategies available:
  5993                           ; Name         Instructions Cycles
  5994                           ; simple_byte            7     4 (average)
  5995                           ;	Chosen strategy is simple_byte
  5996  002DD4  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5997  002DD6  0A00               	xorlw	0	; case 0
  5998  002DD8  B4D8               	btfsc	status,2,c
  5999  002DDA  D7EF               	goto	l20719
  6000  002DDC  0A01               	xorlw	1	; case 1
  6001  002DDE  B4D8               	btfsc	status,2,c
  6002  002DE0  D7EE               	goto	l20721
  6003  002DE2                     l20727:
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;sm_MenuConfiguration_MC50.c: 1076:             edit_Param.Max=edit_Param.Value[0];
  6007  002DE2  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6008  002DE6  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6009  002DEA  50DF               	movf	indf2,w,c
  6010  002DEC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;sm_MenuConfiguration_MC50.c: 1077:             edit_Param.position=0;
  6014  002DEE  0E00               	movlw	0
  6015  002DF0  6E46               	movwf	_edit_Param^0,c	;volatile
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;sm_MenuConfiguration_MC50.c: 1078:             edit_Param.Min=0;
  6019  002DF2  0E00               	movlw	0
  6020  002DF4  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;sm_MenuConfiguration_MC50.c: 1079:             haveValueToEdit=1;
  6024  002DF6  0E01               	movlw	1
  6025  002DF8  6FDF               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;sm_MenuConfiguration_MC50.c: 1080:             edit_Param.tempValue= edit_Param.Value[0
      +                          ];
  6029  002DFA  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6030  002DFE  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6031  002E02  50DF               	movf	indf2,w,c
  6032  002E04  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;sm_MenuConfiguration_MC50.c: 1081:             InitReceiver();
  6036  002E06  EC80  F047         	call	_InitReceiver	;wreg free
  6037                           
  6038                           ;sm_MenuConfiguration_MC50.c: 1082:         };sm_MenuConfiguration_MC50.c: 1083:        
      +                           break;
  6039  002E0A  D029               	goto	l20743
  6040  002E0C                     l20741:
  6041                           
  6042                           ; BSR set to: 0
  6043  002E0C  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6044  002E0E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6045  002E10  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6046                           
  6047                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6048                           ; Switch size 1, requested type "simple"
  6049                           ; Number of cases is 1, Range of values is 0 to 0
  6050                           ; switch strategies available:
  6051                           ; Name         Instructions Cycles
  6052                           ; simple_byte            4     3 (average)
  6053                           ;	Chosen strategy is simple_byte
  6054  002E12  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6055  002E14  0A00               	xorlw	0	; case 0
  6056  002E16  A4D8               	btfss	status,2,c
  6057  002E18  D022               	goto	l20743
  6058                           
  6059                           ; BSR set to: 0
  6060                           ; Switch size 1, requested type "simple"
  6061                           ; Number of cases is 11, Range of values is 0 to 12
  6062                           ; switch strategies available:
  6063                           ; Name         Instructions Cycles
  6064                           ; simple_byte           34    18 (average)
  6065                           ;	Chosen strategy is simple_byte
  6066  002E1A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6067  002E1C  0A00               	xorlw	0	; case 0
  6068  002E1E  B4D8               	btfsc	status,2,c
  6069  002E20  D5BF               	goto	l3350
  6070  002E22  0A01               	xorlw	1	; case 1
  6071  002E24  B4D8               	btfsc	status,2,c
  6072  002E26  D61C               	goto	l3364
  6073  002E28  0A05               	xorlw	5	; case 4
  6074  002E2A  B4D8               	btfsc	status,2,c
  6075  002E2C  D6F5               	goto	l20603
  6076  002E2E  0A01               	xorlw	1	; case 5
  6077  002E30  B4D8               	btfsc	status,2,c
  6078  002E32  D70D               	goto	l20611
  6079  002E34  0A03               	xorlw	3	; case 6
  6080  002E36  B4D8               	btfsc	status,2,c
  6081  002E38  D725               	goto	l20617
  6082  002E3A  0A01               	xorlw	1	; case 7
  6083  002E3C  B4D8               	btfsc	status,2,c
  6084  002E3E  D74E               	goto	l20645
  6085  002E40  0A0F               	xorlw	15	; case 8
  6086  002E42  B4D8               	btfsc	status,2,c
  6087  002E44  D75F               	goto	l20657
  6088  002E46  0A01               	xorlw	1	; case 9
  6089  002E48  B4D8               	btfsc	status,2,c
  6090  002E4A  D773               	goto	l20673
  6091  002E4C  0A03               	xorlw	3	; case 10
  6092  002E4E  B4D8               	btfsc	status,2,c
  6093  002E50  D78F               	goto	l20693
  6094  002E52  0A01               	xorlw	1	; case 11
  6095  002E54  B4D8               	btfsc	status,2,c
  6096  002E56  D7A2               	goto	l20713
  6097  002E58  0A07               	xorlw	7	; case 12
  6098  002E5A  B4D8               	btfsc	status,2,c
  6099  002E5C  D7B4               	goto	l20725
  6100  002E5E                     l20743:
  6101                           
  6102                           ;sm_MenuConfiguration_MC50.c: 1086:     return haveValueToEdit;
  6103  002E5E  0100               	movlb	0	; () banked
  6104  002E60  51DF               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6105                           
  6106                           ; BSR set to: 0
  6107  002E62  0012               	return		;funcret
  6108  002E64                     __end_of_setValueToEdit:
  6109                           	callstack 0
  6110                           
  6111 ;; *************** function _load_New_Menu *****************
  6112 ;; Defined at:
  6113 ;;		line 433 in file "sm_MenuConfiguration_MC50.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  Menu            1    wreg     enum E10813
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;  Menu            1   33[COMRAM] enum E10813
  6118 ;;  i               1   34[COMRAM] unsigned char 
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      void 
  6121 ;; Registers used:
  6122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6129 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6130 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6131 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6132 ;;Total ram usage:        4 bytes
  6133 ;; Hardware stack levels used: 1
  6134 ;; Hardware stack levels required when called: 5
  6135 ;; This function calls:
  6136 ;;		_SetSegmentValueIntermitentMain
  6137 ;;		_SetSegmentValueMain
  6138 ;; This function is called by:
  6139 ;;		_sm_execute_main
  6140 ;;		_sm_execute_menuConfiguration
  6141 ;;		_setValueToEdit
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           	psect	text4
  6146  003C74                     __ptext4:
  6147                           	callstack 0
  6148  003C74                     _load_New_Menu:
  6149                           	callstack 22
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;incstack = 0
  6153                           ;load_New_Menu@Menu stored from wreg
  6154  003C74  6E22               	movwf	load_New_Menu@Menu^0,c
  6155                           
  6156                           ;sm_MenuConfiguration_MC50.c: 434:     ts_system.timeoutMenu=((1000/50)*5) ;
  6157  003C76  0E00               	movlw	0
  6158  003C78  0101               	movlb	1	; () banked
  6159  003C7A  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6160  003C7C  0E64               	movlw	100
  6161  003C7E  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6162                           
  6163                           ; BSR set to: 1
  6164                           ;sm_MenuConfiguration_MC50.c: 438:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6165  003C80  5022               	movf	load_New_Menu@Menu^0,w,c
  6166  003C82  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6167  003C84  B4D8               	btfsc	status,2,c
  6168  003C86  D006               	goto	l19761
  6169                           
  6170                           ; BSR set to: 1
  6171  003C88  0E01               	movlw	1
  6172  003C8A  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6173  003C8C  D003               	goto	l19761
  6174                           
  6175                           ; BSR set to: 1
  6176                           ;sm_MenuConfiguration_MC50.c: 439:     {;sm_MenuConfiguration_MC50.c: 440:         menu_
      +                          st.parameterSelected=0;
  6177  003C8E  0E00               	movlw	0
  6178  003C90  6F68               	movwf	(_menu_st+23)& (0+255),b
  6179                           
  6180                           ;sm_MenuConfiguration_MC50.c: 441:     }
  6181  003C92  D005               	goto	l19765
  6182  003C94                     l19761:
  6183                           
  6184                           ; BSR set to: 1
  6185  003C94  0E02               	movlw	2
  6186  003C96  6022               	cpfslt	load_New_Menu@Menu^0,c
  6187  003C98  D002               	goto	l19765
  6188                           
  6189                           ; BSR set to: 1
  6190                           ;sm_MenuConfiguration_MC50.c: 443:     {;sm_MenuConfiguration_MC50.c: 444:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6191  003C9A  C169  F168         	movff	_menu_st+24,_menu_st+23
  6192  003C9E                     l19765:
  6193                           
  6194                           ; BSR set to: 1
  6195                           ;sm_MenuConfiguration_MC50.c: 448:     menu_st.lastMenu=((void*)0);
  6196  003C9E  0E00               	movlw	0
  6197  003CA0  6F65               	movwf	(_menu_st+20)& (0+255),b
  6198                           
  6199                           ;sm_MenuConfiguration_MC50.c: 449:     switch (Menu)
  6200  003CA2  D0F6               	goto	l19817
  6201  003CA4                     l19767:
  6202                           
  6203                           ; BSR set to: 1
  6204                           ;sm_MenuConfiguration_MC50.c: 452:         {;sm_MenuConfiguration_MC50.c: 454:          
      +                             menu_st.actualMenu=P_Menu;
  6205  003CA4  0E00               	movlw	0
  6206  003CA6  6F66               	movwf	(_menu_st+21)& (0+255),b
  6207                           
  6208                           ;sm_MenuConfiguration_MC50.c: 455:             menu_st.menuSize=10;
  6209  003CA8  0E0A               	movlw	10
  6210  003CAA  6F67               	movwf	(_menu_st+22)& (0+255),b
  6211                           
  6212                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.lastMainParameterSelected=0;
  6213  003CAC  0E00               	movlw	0
  6214  003CAE  6F69               	movwf	(_menu_st+24)& (0+255),b
  6215                           
  6216                           ;sm_MenuConfiguration_MC50.c: 457:             for (i=0;i<(10);i++)
  6217  003CB0  0E00               	movlw	0
  6218  003CB2  6E23               	movwf	load_New_Menu@i^0,c
  6219  003CB4                     l19773:
  6220                           
  6221                           ;sm_MenuConfiguration_MC50.c: 458:             {;sm_MenuConfiguration_MC50.c: 459:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6222  003CB4  5023               	movf	load_New_Menu@i^0,w,c
  6223  003CB6  0D02               	mullw	2
  6224  003CB8  0E51               	movlw	low _menu_st
  6225  003CBA  24F3               	addwf	243,w,c
  6226  003CBC  6ED9               	movwf	fsr2l,c
  6227  003CBE  0E01               	movlw	high _menu_st
  6228  003CC0  20F4               	addwfc	prodh,w,c
  6229  003CC2  6EDA               	movwf	fsr2h,c
  6230  003CC4  0E10               	movlw	16
  6231  003CC6  6EDF               	movwf	indf2,c
  6232                           
  6233                           ;sm_MenuConfiguration_MC50.c: 460:                menu_st.menuList[i].value_display2=i;
  6234  003CC8  5023               	movf	load_New_Menu@i^0,w,c
  6235  003CCA  0D02               	mullw	2
  6236  003CCC  0E52               	movlw	low (_menu_st+1)
  6237  003CCE  24F3               	addwf	243,w,c
  6238  003CD0  6ED9               	movwf	fsr2l,c
  6239  003CD2  0E01               	movlw	high (_menu_st+1)
  6240  003CD4  20F4               	addwfc	prodh,w,c
  6241  003CD6  6EDA               	movwf	fsr2h,c
  6242  003CD8  C023  FFDF         	movff	load_New_Menu@i,indf2
  6243                           
  6244                           ;sm_MenuConfiguration_MC50.c: 461:             }
  6245  003CDC  2A23               	incf	load_New_Menu@i^0,f,c
  6246  003CDE  0E09               	movlw	9
  6247  003CE0  6423               	cpfsgt	load_New_Menu@i^0,c
  6248  003CE2  D7E8               	goto	l19773
  6249  003CE4  D107               	goto	l19819
  6250  003CE6                     l19779:
  6251                           
  6252                           ; BSR set to: 1
  6253                           ;sm_MenuConfiguration_MC50.c: 465:         {;sm_MenuConfiguration_MC50.c: 467:          
      +                             menu_st.actualMenu=E_Menu;
  6254  003CE6  0E01               	movlw	1
  6255  003CE8  6F66               	movwf	(_menu_st+21)& (0+255),b
  6256                           
  6257                           ;sm_MenuConfiguration_MC50.c: 468:             menu_st.menuSize=10;
  6258  003CEA  0E0A               	movlw	10
  6259  003CEC  6F67               	movwf	(_menu_st+22)& (0+255),b
  6260                           
  6261                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.lastMainParameterSelected=0;
  6262  003CEE  0E00               	movlw	0
  6263  003CF0  6F69               	movwf	(_menu_st+24)& (0+255),b
  6264                           
  6265                           ;sm_MenuConfiguration_MC50.c: 470:             for (i=0;i<(10);i++)
  6266  003CF2  0E00               	movlw	0
  6267  003CF4  6E23               	movwf	load_New_Menu@i^0,c
  6268  003CF6                     l19785:
  6269                           
  6270                           ;sm_MenuConfiguration_MC50.c: 471:             {;sm_MenuConfiguration_MC50.c: 472:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6271  003CF6  5023               	movf	load_New_Menu@i^0,w,c
  6272  003CF8  0D02               	mullw	2
  6273  003CFA  0E51               	movlw	low _menu_st
  6274  003CFC  24F3               	addwf	243,w,c
  6275  003CFE  6ED9               	movwf	fsr2l,c
  6276  003D00  0E01               	movlw	high _menu_st
  6277  003D02  20F4               	addwfc	prodh,w,c
  6278  003D04  6EDA               	movwf	fsr2h,c
  6279  003D06  0E0E               	movlw	14
  6280  003D08  6EDF               	movwf	indf2,c
  6281                           
  6282                           ;sm_MenuConfiguration_MC50.c: 473:                menu_st.menuList[i].value_display2=i;
  6283  003D0A  5023               	movf	load_New_Menu@i^0,w,c
  6284  003D0C  0D02               	mullw	2
  6285  003D0E  0E52               	movlw	low (_menu_st+1)
  6286  003D10  24F3               	addwf	243,w,c
  6287  003D12  6ED9               	movwf	fsr2l,c
  6288  003D14  0E01               	movlw	high (_menu_st+1)
  6289  003D16  20F4               	addwfc	prodh,w,c
  6290  003D18  6EDA               	movwf	fsr2h,c
  6291  003D1A  C023  FFDF         	movff	load_New_Menu@i,indf2
  6292                           
  6293                           ;sm_MenuConfiguration_MC50.c: 474:             }
  6294  003D1E  2A23               	incf	load_New_Menu@i^0,f,c
  6295  003D20  0E09               	movlw	9
  6296  003D22  6423               	cpfsgt	load_New_Menu@i^0,c
  6297  003D24  D7E8               	goto	l19785
  6298  003D26  D0E6               	goto	l19819
  6299  003D28                     l19791:
  6300                           
  6301                           ; BSR set to: 1
  6302                           ;sm_MenuConfiguration_MC50.c: 478:         {;sm_MenuConfiguration_MC50.c: 479:          
      +                             menu_st.lastMenu=P_Menu;
  6303  003D28  0E00               	movlw	0
  6304  003D2A  6F65               	movwf	(_menu_st+20)& (0+255),b
  6305                           
  6306                           ;sm_MenuConfiguration_MC50.c: 480:             menu_st.actualMenu=P0_SMenu;
  6307  003D2C  0E04               	movlw	4
  6308  003D2E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6309                           
  6310                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.menuSize=4;
  6311  003D30  0E04               	movlw	4
  6312  003D32  6F67               	movwf	(_menu_st+22)& (0+255),b
  6313                           
  6314                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuList[0].value_display1=dA;
  6315  003D34  0E0A               	movlw	10
  6316  003D36  6F51               	movwf	_menu_st& (0+255),b
  6317                           
  6318                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display2=dU;
  6319  003D38  0E13               	movlw	19
  6320  003D3A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6321                           
  6322                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[1].value_display1=dM;
  6323  003D3C  0E17               	movlw	23
  6324  003D3E  6F53               	movwf	(_menu_st+2)& (0+255),b
  6325                           
  6326                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display2=dA;
  6327  003D40  0E0A               	movlw	10
  6328  003D42  6F54               	movwf	(_menu_st+3)& (0+255),b
  6329                           
  6330                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[2].value_display1=d5;
  6331  003D44  0E05               	movlw	5
  6332  003D46  6F55               	movwf	(_menu_st+4)& (0+255),b
  6333                           
  6334                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display2=dy;
  6335  003D48  0E21               	movlw	33
  6336  003D4A  6F56               	movwf	(_menu_st+5)& (0+255),b
  6337                           
  6338                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[3].value_display1=dd;
  6339  003D4C  0E0D               	movlw	13
  6340  003D4E  6F57               	movwf	(_menu_st+6)& (0+255),b
  6341                           
  6342                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display2=d1;
  6343  003D50  0E01               	movlw	1
  6344  003D52  D051               	goto	L31
  6345  003D54                     l19793:
  6346                           
  6347                           ; BSR set to: 1
  6348                           ;sm_MenuConfiguration_MC50.c: 493:         {;sm_MenuConfiguration_MC50.c: 494:          
      +                             menu_st.lastMenu=P_Menu;
  6349  003D54  0E00               	movlw	0
  6350  003D56  6F65               	movwf	(_menu_st+20)& (0+255),b
  6351                           
  6352                           ;sm_MenuConfiguration_MC50.c: 495:             menu_st.actualMenu=P1_SMenu;
  6353  003D58  0E05               	movlw	5
  6354  003D5A  6F66               	movwf	(_menu_st+21)& (0+255),b
  6355                           
  6356                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.menuSize=2;
  6357  003D5C  0E02               	movlw	2
  6358  003D5E  6F67               	movwf	(_menu_st+22)& (0+255),b
  6359                           
  6360                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuList[0].value_display1=dd;
  6361  003D60  0E0D               	movlw	13
  6362  003D62  6F51               	movwf	_menu_st& (0+255),b
  6363                           
  6364                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display2=dA;
  6365  003D64  0E0A               	movlw	10
  6366  003D66  6F52               	movwf	(_menu_st+1)& (0+255),b
  6367                           
  6368                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[1].value_display1=dd;
  6369  003D68  0E0D               	movlw	13
  6370  003D6A  6F53               	movwf	(_menu_st+2)& (0+255),b
  6371                           
  6372                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display2=dF;
  6373  003D6C  0E0F               	movlw	15
  6374  003D6E  D08E               	goto	L38
  6375  003D70                     l19795:
  6376                           
  6377                           ; BSR set to: 1
  6378                           ;sm_MenuConfiguration_MC50.c: 507:         {;sm_MenuConfiguration_MC50.c: 508:          
      +                             menu_st.lastMenu=P_Menu;
  6379  003D70  0E00               	movlw	0
  6380  003D72  6F65               	movwf	(_menu_st+20)& (0+255),b
  6381                           
  6382                           ;sm_MenuConfiguration_MC50.c: 509:             menu_st.actualMenu=P2_SMenu;
  6383  003D74  0E06               	movlw	6
  6384  003D76  6F66               	movwf	(_menu_st+21)& (0+255),b
  6385                           
  6386                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.menuSize=3;
  6387  003D78  0E03               	movlw	3
  6388  003D7A  6F67               	movwf	(_menu_st+22)& (0+255),b
  6389                           
  6390                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuList[0].value_display1=dF;
  6391  003D7C  0E0F               	movlw	15
  6392  003D7E  6F51               	movwf	_menu_st& (0+255),b
  6393                           
  6394                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display2=d0;
  6395  003D80  0E00               	movlw	0
  6396  003D82  6F52               	movwf	(_menu_st+1)& (0+255),b
  6397                           
  6398                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[1].value_display1=dF;
  6399  003D84  0E0F               	movlw	15
  6400  003D86  6F53               	movwf	(_menu_st+2)& (0+255),b
  6401                           
  6402                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display2=d5;
  6403  003D88  0E05               	movlw	5
  6404  003D8A  6F54               	movwf	(_menu_st+3)& (0+255),b
  6405                           
  6406                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[2].value_display1=dF;
  6407  003D8C  0E0F               	movlw	15
  6408  003D8E  6F55               	movwf	(_menu_st+4)& (0+255),b
  6409                           
  6410                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display2=dd;
  6411  003D90  0E0D               	movlw	13
  6412  003D92  D073               	goto	L33
  6413  003D94                     l19797:
  6414                           
  6415                           ; BSR set to: 1
  6416                           ;sm_MenuConfiguration_MC50.c: 520:         {;sm_MenuConfiguration_MC50.c: 521:          
      +                             menu_st.lastMenu=P_Menu;
  6417  003D94  0E00               	movlw	0
  6418  003D96  6F65               	movwf	(_menu_st+20)& (0+255),b
  6419                           
  6420                           ;sm_MenuConfiguration_MC50.c: 522:             menu_st.actualMenu=P4_SMenu;
  6421  003D98  0E07               	movlw	7
  6422  003D9A  6F66               	movwf	(_menu_st+21)& (0+255),b
  6423                           
  6424                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.menuSize=2;
  6425  003D9C  0E02               	movlw	2
  6426  003D9E  6F67               	movwf	(_menu_st+22)& (0+255),b
  6427                           
  6428                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuList[0].value_display1=dA;
  6429  003DA0  0E0A               	movlw	10
  6430  003DA2  6F51               	movwf	_menu_st& (0+255),b
  6431                           
  6432                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display2=dF;
  6433  003DA4  0E0F               	movlw	15
  6434  003DA6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6435                           
  6436                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[1].value_display1=dA;
  6437  003DA8  0E0A               	movlw	10
  6438  003DAA  6F53               	movwf	(_menu_st+2)& (0+255),b
  6439                           
  6440                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display2=dP;
  6441  003DAC  0E10               	movlw	16
  6442  003DAE  D06E               	goto	L38
  6443  003DB0                     l19799:
  6444                           
  6445                           ; BSR set to: 1
  6446                           ;sm_MenuConfiguration_MC50.c: 531:         {;sm_MenuConfiguration_MC50.c: 532:          
      +                             menu_st.lastMenu=P_Menu;
  6447  003DB0  0E00               	movlw	0
  6448  003DB2  6F65               	movwf	(_menu_st+20)& (0+255),b
  6449                           
  6450                           ;sm_MenuConfiguration_MC50.c: 533:             menu_st.actualMenu=P5_SMenu;
  6451  003DB4  0E08               	movlw	8
  6452  003DB6  6F66               	movwf	(_menu_st+21)& (0+255),b
  6453                           
  6454                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.menuSize=2;
  6455  003DB8  0E02               	movlw	2
  6456  003DBA  6F67               	movwf	(_menu_st+22)& (0+255),b
  6457                           
  6458                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuList[0].value_display1=dL;
  6459  003DBC  0E12               	movlw	18
  6460  003DBE  6F51               	movwf	_menu_st& (0+255),b
  6461                           
  6462                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display2=dE;
  6463  003DC0  0E0E               	movlw	14
  6464  003DC2  6F52               	movwf	(_menu_st+1)& (0+255),b
  6465                           
  6466                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[1].value_display1=dH;
  6467  003DC4  0E11               	movlw	17
  6468  003DC6  6F53               	movwf	(_menu_st+2)& (0+255),b
  6469                           
  6470                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display2=dC;
  6471  003DC8  0E0C               	movlw	12
  6472  003DCA  D060               	goto	L38
  6473  003DCC                     l19801:
  6474                           
  6475                           ; BSR set to: 1
  6476                           ;sm_MenuConfiguration_MC50.c: 542:         {;sm_MenuConfiguration_MC50.c: 543:          
      +                             menu_st.lastMenu=P_Menu;
  6477  003DCC  0E00               	movlw	0
  6478  003DCE  6F65               	movwf	(_menu_st+20)& (0+255),b
  6479                           
  6480                           ;sm_MenuConfiguration_MC50.c: 544:             menu_st.actualMenu=P6_SMenu;
  6481  003DD0  0E09               	movlw	9
  6482  003DD2  6F66               	movwf	(_menu_st+21)& (0+255),b
  6483                           
  6484                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.menuSize=4;
  6485  003DD4  0E04               	movlw	4
  6486  003DD6  6F67               	movwf	(_menu_st+22)& (0+255),b
  6487                           
  6488                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuList[0].value_display1=dL;
  6489  003DD8  0E12               	movlw	18
  6490  003DDA  6F51               	movwf	_menu_st& (0+255),b
  6491                           
  6492                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display2=dA;
  6493  003DDC  0E0A               	movlw	10
  6494  003DDE  6F52               	movwf	(_menu_st+1)& (0+255),b
  6495                           
  6496                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[1].value_display1=dH;
  6497  003DE0  0E11               	movlw	17
  6498  003DE2  6F53               	movwf	(_menu_st+2)& (0+255),b
  6499                           
  6500                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display2=dA;
  6501  003DE4  0E0A               	movlw	10
  6502  003DE6  6F54               	movwf	(_menu_st+3)& (0+255),b
  6503                           
  6504                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[2].value_display1=dH;
  6505  003DE8  0E11               	movlw	17
  6506  003DEA  6F55               	movwf	(_menu_st+4)& (0+255),b
  6507                           
  6508                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display2=dL;
  6509  003DEC  0E12               	movlw	18
  6510  003DEE  6F56               	movwf	(_menu_st+5)& (0+255),b
  6511                           
  6512                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[3].value_display1=d5;
  6513  003DF0  0E05               	movlw	5
  6514  003DF2  6F57               	movwf	(_menu_st+6)& (0+255),b
  6515                           
  6516                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display2=dt;
  6517  003DF4  0E15               	movlw	21
  6518  003DF6                     L31:
  6519  003DF6  6F58               	movwf	(_menu_st+7)& (0+255),b
  6520                           
  6521                           ;sm_MenuConfiguration_MC50.c: 555:         };sm_MenuConfiguration_MC50.c: 556:         b
      +                          reak;
  6522  003DF8  D07D               	goto	l19819
  6523  003DFA                     l19803:
  6524                           
  6525                           ; BSR set to: 1
  6526                           ;sm_MenuConfiguration_MC50.c: 558:         {;sm_MenuConfiguration_MC50.c: 559:          
      +                             menu_st.lastMenu=E_Menu;
  6527  003DFA  0E01               	movlw	1
  6528  003DFC  6F65               	movwf	(_menu_st+20)& (0+255),b
  6529                           
  6530                           ;sm_MenuConfiguration_MC50.c: 560:             menu_st.actualMenu=E0_SMenu;
  6531  003DFE  0E0A               	movlw	10
  6532  003E00  6F66               	movwf	(_menu_st+21)& (0+255),b
  6533                           
  6534                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.menuSize=2;
  6535  003E02  0E02               	movlw	2
  6536  003E04  6F67               	movwf	(_menu_st+22)& (0+255),b
  6537                           
  6538                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuList[0].value_display1=dH;
  6539  003E06  0E11               	movlw	17
  6540  003E08  6F51               	movwf	_menu_st& (0+255),b
  6541                           
  6542                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display2=dP;
  6543  003E0A  0E10               	movlw	16
  6544  003E0C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6545                           
  6546                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[1].value_display1=dP;
  6547  003E0E  0E10               	movlw	16
  6548  003E10  6F53               	movwf	(_menu_st+2)& (0+255),b
  6549                           
  6550                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display2=dL;
  6551  003E12  0E12               	movlw	18
  6552  003E14  D03B               	goto	L38
  6553  003E16                     l19805:
  6554                           
  6555                           ; BSR set to: 1
  6556                           ;sm_MenuConfiguration_MC50.c: 569:         {;sm_MenuConfiguration_MC50.c: 570:          
      +                             menu_st.lastMenu=E_Menu;
  6557  003E16  0E01               	movlw	1
  6558  003E18  6F65               	movwf	(_menu_st+20)& (0+255),b
  6559                           
  6560                           ;sm_MenuConfiguration_MC50.c: 571:             menu_st.actualMenu=E1_SMenu;
  6561  003E1A  0E0B               	movlw	11
  6562  003E1C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6563                           
  6564                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.menuSize=2;
  6565  003E1E  0E02               	movlw	2
  6566  003E20  6F67               	movwf	(_menu_st+22)& (0+255),b
  6567                           
  6568                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuList[0].value_display1=dr;
  6569  003E22  0E14               	movlw	20
  6570  003E24  6F51               	movwf	_menu_st& (0+255),b
  6571                           
  6572                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display2=dq;
  6573  003E26  0E24               	movlw	36
  6574  003E28  6F52               	movwf	(_menu_st+1)& (0+255),b
  6575                           
  6576                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[1].value_display1=dr;
  6577  003E2A  0E14               	movlw	20
  6578  003E2C  6F53               	movwf	(_menu_st+2)& (0+255),b
  6579                           
  6580                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display2=dc;
  6581  003E2E  0E23               	movlw	35
  6582  003E30  D02D               	goto	L38
  6583  003E32                     l19807:
  6584                           
  6585                           ; BSR set to: 1
  6586                           ;sm_MenuConfiguration_MC50.c: 580:         {;sm_MenuConfiguration_MC50.c: 582:          
      +                             menu_st.actualMenu=S_Menu;
  6587  003E32  0E0C               	movlw	12
  6588  003E34  6F66               	movwf	(_menu_st+21)& (0+255),b
  6589                           
  6590                           ;sm_MenuConfiguration_MC50.c: 583:             menu_st.parameterSelected=0;
  6591  003E36  0E00               	movlw	0
  6592  003E38  6F68               	movwf	(_menu_st+23)& (0+255),b
  6593                           
  6594                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.menuSize=2;
  6595  003E3A  0E02               	movlw	2
  6596  003E3C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6597                           
  6598                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuList[0].value_display1=d5;
  6599  003E3E  0E05               	movlw	5
  6600  003E40  6F51               	movwf	_menu_st& (0+255),b
  6601                           
  6602                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display2=dU;
  6603  003E42  0E13               	movlw	19
  6604  003E44  6F52               	movwf	(_menu_st+1)& (0+255),b
  6605                           
  6606                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[1].value_display1=d5;
  6607  003E46  0E05               	movlw	5
  6608  003E48  D7B0               	goto	L39
  6609  003E4A                     l19809:
  6610                           
  6611                           ; BSR set to: 1
  6612                           ;sm_MenuConfiguration_MC50.c: 592:         {;sm_MenuConfiguration_MC50.c: 594:          
      +                             menu_st.actualMenu=Del_Menu;
  6613  003E4A  0E0D               	movlw	13
  6614  003E4C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6615                           
  6616                           ;sm_MenuConfiguration_MC50.c: 595:             menu_st.menuSize=1;
  6617  003E4E  0E01               	movlw	1
  6618  003E50  6F67               	movwf	(_menu_st+22)& (0+255),b
  6619                           
  6620                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuList[0].value_display1=dd;
  6621  003E52  0E0D               	movlw	13
  6622  003E54  6F51               	movwf	_menu_st& (0+255),b
  6623                           
  6624                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display2=dL;
  6625  003E56  0E12               	movlw	18
  6626  003E58  6F52               	movwf	(_menu_st+1)& (0+255),b
  6627                           
  6628                           ;sm_MenuConfiguration_MC50.c: 598:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6629  003E5A  0E00               	movlw	0
  6630  003E5C  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6631  003E5E  0E3C               	movlw	60
  6632  003E60  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6633                           
  6634                           ;sm_MenuConfiguration_MC50.c: 599:         };sm_MenuConfiguration_MC50.c: 600:         b
      +                          reak;
  6635  003E62  D048               	goto	l19819
  6636  003E64                     l19811:
  6637                           
  6638                           ; BSR set to: 1
  6639                           ;sm_MenuConfiguration_MC50.c: 603:         {;sm_MenuConfiguration_MC50.c: 607:          
      +                             menu_st.menuList[0].value_display1=d5;
  6640  003E64  0E05               	movlw	5
  6641  003E66  6F51               	movwf	_menu_st& (0+255),b
  6642                           
  6643                           ;sm_MenuConfiguration_MC50.c: 608:             menu_st.menuList[0].value_display2=dC;
  6644  003E68  0E0C               	movlw	12
  6645  003E6A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6646                           
  6647                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[1].value_display1=d5;
  6648  003E6C  0E05               	movlw	5
  6649  003E6E  6F53               	movwf	(_menu_st+2)& (0+255),b
  6650                           
  6651                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display2=dE;
  6652  003E70  0E0E               	movlw	14
  6653  003E72  6F54               	movwf	(_menu_st+3)& (0+255),b
  6654                           
  6655                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[2].value_display1=db;
  6656  003E74  0E22               	movlw	34
  6657  003E76  6F55               	movwf	(_menu_st+4)& (0+255),b
  6658                           
  6659                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display2=dr;
  6660  003E78  0E14               	movlw	20
  6661  003E7A                     L33:
  6662  003E7A  6F56               	movwf	(_menu_st+5)& (0+255),b
  6663                           
  6664                           ;sm_MenuConfiguration_MC50.c: 613:         };sm_MenuConfiguration_MC50.c: 614:         b
      +                          reak;
  6665  003E7C  D03B               	goto	l19819
  6666  003E7E                     l19813:
  6667                           
  6668                           ; BSR set to: 1
  6669                           ;sm_MenuConfiguration_MC50.c: 616:         {;sm_MenuConfiguration_MC50.c: 620:          
      +                             menu_st.menuList[0].value_display1=dL;
  6670  003E7E  0E12               	movlw	18
  6671  003E80  6F51               	movwf	_menu_st& (0+255),b
  6672                           
  6673                           ;sm_MenuConfiguration_MC50.c: 621:             menu_st.menuList[0].value_display2=dE;
  6674  003E82  0E0E               	movlw	14
  6675  003E84  6F52               	movwf	(_menu_st+1)& (0+255),b
  6676                           
  6677                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[1].value_display1=dr;
  6678  003E86  0E14               	movlw	20
  6679  003E88  6F53               	movwf	(_menu_st+2)& (0+255),b
  6680                           
  6681                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display2=dt;
  6682  003E8A  0E15               	movlw	21
  6683  003E8C                     L38:
  6684  003E8C  6F54               	movwf	(_menu_st+3)& (0+255),b
  6685                           
  6686                           ;sm_MenuConfiguration_MC50.c: 625:         };sm_MenuConfiguration_MC50.c: 626:         b
      +                          reak;
  6687  003E8E  D032               	goto	l19819
  6688  003E90                     l19817:
  6689                           
  6690                           ; BSR set to: 1
  6691  003E90  5022               	movf	load_New_Menu@Menu^0,w,c
  6692  003E92  6E20               	movwf	??_load_New_Menu^0,c
  6693  003E94  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6694                           
  6695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6696                           ; Switch size 1, requested type "simple"
  6697                           ; Number of cases is 1, Range of values is 0 to 0
  6698                           ; switch strategies available:
  6699                           ; Name         Instructions Cycles
  6700                           ; simple_byte            4     3 (average)
  6701                           ;	Chosen strategy is simple_byte
  6702  003E96  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6703  003E98  0A00               	xorlw	0	; case 0
  6704  003E9A  A4D8               	btfss	status,2,c
  6705  003E9C  D02B               	goto	l19819
  6706                           
  6707                           ; BSR set to: 1
  6708                           ; Switch size 1, requested type "simple"
  6709                           ; Number of cases is 14, Range of values is 0 to 13
  6710                           ; switch strategies available:
  6711                           ; Name         Instructions Cycles
  6712                           ; simple_byte           43    22 (average)
  6713                           ;	Chosen strategy is simple_byte
  6714  003E9E  5020               	movf	??_load_New_Menu^0,w,c
  6715  003EA0  0A00               	xorlw	0	; case 0
  6716  003EA2  B4D8               	btfsc	status,2,c
  6717  003EA4  D6FF               	goto	l19767
  6718  003EA6  0A01               	xorlw	1	; case 1
  6719  003EA8  B4D8               	btfsc	status,2,c
  6720  003EAA  D71D               	goto	l19779
  6721  003EAC  0A03               	xorlw	3	; case 2
  6722  003EAE  B4D8               	btfsc	status,2,c
  6723  003EB0  D7E6               	goto	l19813
  6724  003EB2  0A01               	xorlw	1	; case 3
  6725  003EB4  B4D8               	btfsc	status,2,c
  6726  003EB6  D7D6               	goto	l19811
  6727  003EB8  0A07               	xorlw	7	; case 4
  6728  003EBA  B4D8               	btfsc	status,2,c
  6729  003EBC  D735               	goto	l19791
  6730  003EBE  0A01               	xorlw	1	; case 5
  6731  003EC0  B4D8               	btfsc	status,2,c
  6732  003EC2  D748               	goto	l19793
  6733  003EC4  0A03               	xorlw	3	; case 6
  6734  003EC6  B4D8               	btfsc	status,2,c
  6735  003EC8  D753               	goto	l19795
  6736  003ECA  0A01               	xorlw	1	; case 7
  6737  003ECC  B4D8               	btfsc	status,2,c
  6738  003ECE  D762               	goto	l19797
  6739  003ED0  0A0F               	xorlw	15	; case 8
  6740  003ED2  B4D8               	btfsc	status,2,c
  6741  003ED4  D76D               	goto	l19799
  6742  003ED6  0A01               	xorlw	1	; case 9
  6743  003ED8  B4D8               	btfsc	status,2,c
  6744  003EDA  D778               	goto	l19801
  6745  003EDC  0A03               	xorlw	3	; case 10
  6746  003EDE  B4D8               	btfsc	status,2,c
  6747  003EE0  D78C               	goto	l19803
  6748  003EE2  0A01               	xorlw	1	; case 11
  6749  003EE4  B4D8               	btfsc	status,2,c
  6750  003EE6  D797               	goto	l19805
  6751  003EE8  0A07               	xorlw	7	; case 12
  6752  003EEA  B4D8               	btfsc	status,2,c
  6753  003EEC  D7A2               	goto	l19807
  6754  003EEE  0A01               	xorlw	1	; case 13
  6755  003EF0  B4D8               	btfsc	status,2,c
  6756  003EF2  D7AB               	goto	l19809
  6757  003EF4                     l19819:
  6758                           
  6759                           ;sm_MenuConfiguration_MC50.c: 631:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6760  003EF4  0101               	movlb	1	; () banked
  6761  003EF6  5167               	movf	(_menu_st+22)& (0+255),w,b
  6762  003EF8  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6763  003EFA  A0D8               	btfss	status,0,c
  6764  003EFC  D002               	goto	l19823
  6765                           
  6766                           ; BSR set to: 1
  6767                           ;sm_MenuConfiguration_MC50.c: 632:     {;sm_MenuConfiguration_MC50.c: 633:         menu_
      +                          st.parameterSelected=0;
  6768  003EFE  0E00               	movlw	0
  6769  003F00  6F68               	movwf	(_menu_st+23)& (0+255),b
  6770  003F02                     l19823:
  6771                           
  6772                           ; BSR set to: 1
  6773                           ;sm_MenuConfiguration_MC50.c: 636:     if(Menu==Del_Menu)
  6774  003F02  0E0D               	movlw	13
  6775  003F04  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6776  003F06  A4D8               	btfss	status,2,c
  6777  003F08  D01A               	goto	l19827
  6778                           
  6779                           ; BSR set to: 1
  6780                           ;sm_MenuConfiguration_MC50.c: 637:     {;sm_MenuConfiguration_MC50.c: 638:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6781  003F0A  5168               	movf	(_menu_st+23)& (0+255),w,b
  6782  003F0C  0D02               	mullw	2
  6783  003F0E  0E52               	movlw	low (_menu_st+1)
  6784  003F10  24F3               	addwf	243,w,c
  6785  003F12  6ED9               	movwf	fsr2l,c
  6786  003F14  0E01               	movlw	high (_menu_st+1)
  6787  003F16  20F4               	addwfc	prodh,w,c
  6788  003F18  6EDA               	movwf	fsr2h,c
  6789  003F1A  50DF               	movf	indf2,w,c
  6790  003F1C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  6791  003F1E  0E00               	movlw	0
  6792  003F20  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  6793  003F22  0E0A               	movlw	10
  6794  003F24  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  6795  003F26  5168               	movf	(_menu_st+23)& (0+255),w,b
  6796  003F28  0D02               	mullw	2
  6797  003F2A  0E51               	movlw	low _menu_st
  6798  003F2C  24F3               	addwf	243,w,c
  6799  003F2E  6ED9               	movwf	fsr2l,c
  6800  003F30  0E01               	movlw	high _menu_st
  6801  003F32  20F4               	addwfc	prodh,w,c
  6802  003F34  6EDA               	movwf	fsr2h,c
  6803  003F36  50DF               	movf	indf2,w,c
  6804  003F38  EC28  F048         	call	_SetSegmentValueIntermitentMain
  6805                           
  6806                           ;sm_MenuConfiguration_MC50.c: 639:     }
  6807  003F3C  0012               	return	
  6808  003F3E                     l19827:
  6809                           
  6810                           ; BSR set to: 1
  6811                           ;sm_MenuConfiguration_MC50.c: 641:     {;sm_MenuConfiguration_MC50.c: 642:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  6812  003F3E  5168               	movf	(_menu_st+23)& (0+255),w,b
  6813  003F40  0D02               	mullw	2
  6814  003F42  0E52               	movlw	low (_menu_st+1)
  6815  003F44  24F3               	addwf	243,w,c
  6816  003F46  6ED9               	movwf	fsr2l,c
  6817  003F48  0E01               	movlw	high (_menu_st+1)
  6818  003F4A  20F4               	addwfc	prodh,w,c
  6819  003F4C  6EDA               	movwf	fsr2h,c
  6820  003F4E  50DF               	movf	indf2,w,c
  6821  003F50  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  6822  003F52  5168               	movf	(_menu_st+23)& (0+255),w,b
  6823  003F54  0D02               	mullw	2
  6824  003F56  0E51               	movlw	low _menu_st
  6825  003F58  24F3               	addwf	243,w,c
  6826  003F5A  6ED9               	movwf	fsr2l,c
  6827  003F5C  0E01               	movlw	high _menu_st
  6828  003F5E  20F4               	addwfc	prodh,w,c
  6829  003F60  6EDA               	movwf	fsr2h,c
  6830  003F62  50DF               	movf	indf2,w,c
  6831  003F64  EC8D  F047         	call	_SetSegmentValueMain
  6832  003F68  0012               	return		;funcret
  6833  003F6A                     __end_of_load_New_Menu:
  6834                           	callstack 0
  6835                           
  6836 ;; *************** function _InitReceiver *****************
  6837 ;; Defined at:
  6838 ;;		line 207 in file "inputs_MC50.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;		None
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;		None
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  1    wreg      void 
  6845 ;; Registers used:
  6846 ;;		wreg, status,2
  6847 ;; Tracked objects:
  6848 ;;		On entry : 30/F
  6849 ;;		On exit  : 3F/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6856 ;;Total ram usage:        0 bytes
  6857 ;; Hardware stack levels used: 1
  6858 ;; Hardware stack levels required when called: 4
  6859 ;; This function calls:
  6860 ;;		Nothing
  6861 ;; This function is called by:
  6862 ;;		_main
  6863 ;;		_setValueToEdit
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           	psect	text5
  6868  008F00                     __ptext5:
  6869                           	callstack 0
  6870  008F00                     _InitReceiver:
  6871                           	callstack 23
  6872                           
  6873                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  6874                           
  6875                           ;incstack = 0
  6876  008F00  010E               	movlb	14	; () banked
  6877  008F02  9BCA               	bcf	202,5,b	;volatile
  6878                           
  6879                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  6880  008F04  8BC2               	bsf	194,5,b	;volatile
  6881                           
  6882                           ;inputs_MC50.c: 210:     GIE = 1;
  6883  008F06  8EF2               	bsf	4082,7,c	;volatile
  6884                           
  6885                           ; BSR set to: 14
  6886                           ;inputs_MC50.c: 211:     RFstate = 0;
  6887  008F08  0E00               	movlw	0
  6888  008F0A  0101               	movlb	1	; () banked
  6889  008F0C  6F9A               	movwf	_RFstate& (0+255),b
  6890                           
  6891                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  6892  008F0E  0E00               	movlw	0
  6893  008F10  0100               	movlb	0	; () banked
  6894  008F12  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  6895                           
  6896                           ;inputs_MC50.c: 213:     RFFull = 0;
  6897  008F14  0E00               	movlw	0
  6898  008F16  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  6899                           
  6900                           ; BSR set to: 0
  6901  008F18  0012               	return		;funcret
  6902  008F1A                     __end_of_InitReceiver:
  6903                           	callstack 0
  6904                           
  6905 ;; *************** function _controlSelectRemote *****************
  6906 ;; Defined at:
  6907 ;;		line 1089 in file "sm_MenuConfiguration_MC50.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;		None
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;  typeRemote      1   11[BANK0 ] enum E10392
  6912 ;;  pos             1   10[BANK0 ] unsigned char 
  6913 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  6914 ;;  temp            1   16[BANK0 ] unsigned char 
  6915 ;;  validSerial     1    9[BANK0 ] unsigned char 
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  1    wreg      void 
  6918 ;; Registers used:
  6919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6920 ;; Tracked objects:
  6921 ;;		On entry : 3F/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6926 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6927 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6928 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6929 ;;Total ram usage:        9 bytes
  6930 ;; Hardware stack levels used: 1
  6931 ;; Hardware stack levels required when called: 14
  6932 ;; This function calls:
  6933 ;;		_ClearFlag_rfCMD
  6934 ;;		_RemoveSerial
  6935 ;;		_SaveNVM_VarSystem
  6936 ;;		_SetSegmentValue
  6937 ;;		_SetSegmentValueIntermitentMain
  6938 ;;		_SetSegmentValueMain
  6939 ;;		___awdiv
  6940 ;;		___lbdiv
  6941 ;;		___lbmod
  6942 ;;		_cmdMemoryIsEmpty
  6943 ;;		_getSerialCmd
  6944 ;;		_getTypeRemote
  6945 ;;		_saveNewSerial
  6946 ;;		_sm_send_event
  6947 ;;		_validateRemoteSerialNumber
  6948 ;; This function is called by:
  6949 ;;		_sm_execute_menuConfiguration
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text6
  6954  003288                     __ptext6:
  6955                           	callstack 0
  6956  003288                     _controlSelectRemote:
  6957                           	callstack 14
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;sm_MenuConfiguration_MC50.c: 1090:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1091:     char temp=getSerialCmd(&tempSerial);
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;incstack = 0
  6964  003288  0EE4               	movlw	low controlSelectRemote@tempSerial
  6965  00328A  6E1B               	movwf	getSerialCmd@serial^0,c
  6966  00328C  EC04  F043         	call	_getSerialCmd	;wreg free
  6967  003290  0100               	movlb	0	; () banked
  6968  003292  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;sm_MenuConfiguration_MC50.c: 1092:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          093:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  6972  003294  0101               	movlb	1	; () banked
  6973  003296  BFAB               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  6974  003298  D008               	goto	u23800
  6975  00329A  51AB               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  6976  00329C  E103               	bnz	u23790
  6977  00329E  05AA               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  6978  0032A0  A0D8               	btfss	status,0,c
  6979  0032A2  D003               	goto	u23800
  6980  0032A4                     u23790:
  6981                           
  6982                           ; BSR set to: 1
  6983  0032A4  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  6984  0032A6  A4D8               	btfss	status,2,c
  6985  0032A8  D028               	goto	l20887
  6986  0032AA                     u23800:
  6987                           
  6988                           ; BSR set to: 1
  6989                           ;sm_MenuConfiguration_MC50.c: 1094:     {;sm_MenuConfiguration_MC50.c: 1095:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  6990  0032AA  0EEF               	movlw	low _main_stateMachine
  6991  0032AC  6E12               	movwf	sm_send_event@psm^0,c
  6992  0032AE  0E01               	movlw	high _main_stateMachine
  6993  0032B0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  6994  0032B2  0E00               	movlw	0
  6995  0032B4  6E15               	movwf	(sm_send_event@event+1)^0,c
  6996  0032B6  0E07               	movlw	7
  6997  0032B8  6E14               	movwf	sm_send_event@event^0,c
  6998  0032BA  ECD6  F040         	call	_sm_send_event	;wreg free
  6999                           
  7000                           ;sm_MenuConfiguration_MC50.c: 1096:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7001  0032BE  0EBB               	movlw	low _menuConfiguration_stateMachine
  7002  0032C0  6E12               	movwf	sm_send_event@psm^0,c
  7003  0032C2  0E02               	movlw	high _menuConfiguration_stateMachine
  7004  0032C4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7005  0032C6  0E00               	movlw	0
  7006  0032C8  6E15               	movwf	(sm_send_event@event+1)^0,c
  7007  0032CA  0E03               	movlw	3
  7008  0032CC  6E14               	movwf	sm_send_event@event^0,c
  7009  0032CE  ECD6  F040         	call	_sm_send_event	;wreg free
  7010                           
  7011                           ;sm_MenuConfiguration_MC50.c: 1097:         var_sys.DistanceProgrammingActive=NO;
  7012  0032D2  0E00               	movlw	0
  7013  0032D4  0101               	movlb	1	; () banked
  7014  0032D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7015                           
  7016                           ; BSR set to: 1
  7017                           ;sm_MenuConfiguration_MC50.c: 1098:         var_sys.ProgrammingDistanceIs=NoCMD;
  7018  0032D8  0E00               	movlw	0
  7019  0032DA  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7020                           
  7021                           ; BSR set to: 1
  7022                           ;sm_MenuConfiguration_MC50.c: 1099:         SetSegmentValueMain(dMinus,dMinus);
  7023  0032DC  0E18               	movlw	24
  7024  0032DE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7025  0032E0  0E18               	movlw	24
  7026  0032E2  EC8D  F047         	call	_SetSegmentValueMain
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;sm_MenuConfiguration_MC50.c: 1100:         ClearFlag_rfCMD();
  7030  0032E6  ECDD  F048         	call	_ClearFlag_rfCMD	;wreg free
  7031                           
  7032                           ;sm_MenuConfiguration_MC50.c: 1101:         button_struct.processed=1;
  7033  0032EA  0E01               	movlw	1
  7034  0032EC  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7035                           
  7036                           ;sm_MenuConfiguration_MC50.c: 1102:         ts_system.timeoutMenu = 0;
  7037  0032EE  0E00               	movlw	0
  7038  0032F0  0101               	movlb	1	; () banked
  7039  0032F2  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7040  0032F4  0E00               	movlw	0
  7041  0032F6  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7042                           
  7043                           ;sm_MenuConfiguration_MC50.c: 1104:     }
  7044  0032F8  0012               	return	
  7045  0032FA                     l20887:
  7046                           
  7047                           ; BSR set to: 1
  7048  0032FA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7049  0032FC  A4D8               	btfss	status,2,c
  7050  0032FE  D05B               	goto	l20909
  7051                           
  7052                           ; BSR set to: 1
  7053  003300  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7054  003302  B4D8               	btfsc	status,2,c
  7055  003304  D058               	goto	l20909
  7056                           
  7057                           ; BSR set to: 1
  7058                           ;sm_MenuConfiguration_MC50.c: 1106:     {;sm_MenuConfiguration_MC50.c: 1107:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7059  003306  0E00               	movlw	0
  7060  003308  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7061  00330A  0E64               	movlw	100
  7062  00330C  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7063                           
  7064                           ; BSR set to: 1
  7065                           ;sm_MenuConfiguration_MC50.c: 1108:         if(edit_Param.tempValue<=edit_Param.Min)
  7066  00330E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7067  003310  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7068  003312  A0D8               	btfss	status,0,c
  7069  003314  D003               	goto	l20897
  7070                           
  7071                           ; BSR set to: 1
  7072                           ;sm_MenuConfiguration_MC50.c: 1109:         {;sm_MenuConfiguration_MC50.c: 1110:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7073  003316  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7074                           
  7075                           ;sm_MenuConfiguration_MC50.c: 1111:         }
  7076  00331A  D001               	goto	l20899
  7077  00331C                     l20897:
  7078                           
  7079                           ; BSR set to: 1
  7080                           ;sm_MenuConfiguration_MC50.c: 1113:         {;sm_MenuConfiguration_MC50.c: 1114:        
      +                               edit_Param.tempValue--;
  7081  00331C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7082  00331E                     l20899:
  7083                           
  7084                           ; BSR set to: 1
  7085                           ;sm_MenuConfiguration_MC50.c: 1116:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7086  00331E  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7087  003322  5168               	movf	(_menu_st+23)& (0+255),w,b
  7088  003324  EC65  F03A         	call	_cmdMemoryIsEmpty
  7089  003328  06E8               	decf	wreg,f,c
  7090  00332A  B4D8               	btfsc	status,2,c
  7091  00332C  D004               	goto	u23850
  7092  00332E  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7093  003330  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7094  003332  A4D8               	btfss	status,2,c
  7095  003334  D021               	goto	l20905
  7096  003336                     u23850:
  7097                           
  7098                           ;sm_MenuConfiguration_MC50.c: 1117:         {;sm_MenuConfiguration_MC50.c: 1118:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7099  003336  0E0A               	movlw	10
  7100  003338  6E10               	movwf	___lbmod@divisor^0,c
  7101  00333A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7102  00333C  EC55  F046         	call	___lbmod
  7103  003340  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7104  003342  0E00               	movlw	0
  7105  003344  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7106  003346  0E14               	movlw	20
  7107  003348  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7108  00334A  0E0A               	movlw	10
  7109  00334C  6E10               	movwf	___lbmod@divisor^0,c
  7110  00334E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7111  003350  EC55  F046         	call	___lbmod
  7112  003354  0100               	movlb	0	; () banked
  7113  003356  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7114  003358  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7115  00335A  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7116  00335C  6E14               	movwf	___awdiv@dividend^0,c
  7117  00335E  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7118  003360  A0D8               	btfss	status,0,c
  7119  003362  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7120  003364  0E00               	movlw	0
  7121  003366  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7122  003368  0E0A               	movlw	10
  7123  00336A  6E16               	movwf	___awdiv@divisor^0,c
  7124  00336C  EC4F  F03C         	call	___awdiv	;wreg free
  7125  003370  5014               	movf	?___awdiv^0,w,c
  7126  003372  EC28  F048         	call	_SetSegmentValueIntermitentMain
  7127                           
  7128                           ;sm_MenuConfiguration_MC50.c: 1119:         }
  7129  003376  D01C               	goto	l20907
  7130  003378                     l20905:
  7131                           
  7132                           ;sm_MenuConfiguration_MC50.c: 1121:         {;sm_MenuConfiguration_MC50.c: 1122:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7133  003378  0E0A               	movlw	10
  7134  00337A  6E10               	movwf	___lbmod@divisor^0,c
  7135  00337C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7136  00337E  EC55  F046         	call	___lbmod
  7137  003382  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7138  003384  0E0A               	movlw	10
  7139  003386  6E10               	movwf	___lbmod@divisor^0,c
  7140  003388  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7141  00338A  EC55  F046         	call	___lbmod
  7142  00338E  0100               	movlb	0	; () banked
  7143  003390  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7144  003392  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7145  003394  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7146  003396  6E14               	movwf	___awdiv@dividend^0,c
  7147  003398  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7148  00339A  A0D8               	btfss	status,0,c
  7149  00339C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7150  00339E  0E00               	movlw	0
  7151  0033A0  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7152  0033A2  0E0A               	movlw	10
  7153  0033A4  6E16               	movwf	___awdiv@divisor^0,c
  7154  0033A6  EC4F  F03C         	call	___awdiv	;wreg free
  7155  0033AA  5014               	movf	?___awdiv^0,w,c
  7156  0033AC  EC8D  F047         	call	_SetSegmentValueMain
  7157  0033B0                     l20907:
  7158                           
  7159                           ;sm_MenuConfiguration_MC50.c: 1124:         button_struct.processed=1;
  7160  0033B0  0E01               	movlw	1
  7161  0033B2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7162                           
  7163                           ;sm_MenuConfiguration_MC50.c: 1125:     }
  7164  0033B4  0012               	return	
  7165  0033B6                     l20909:
  7166                           
  7167                           ; BSR set to: 1
  7168  0033B6  0E17               	movlw	23
  7169  0033B8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7170  0033BA  A4D8               	btfss	status,2,c
  7171  0033BC  D057               	goto	l20931
  7172                           
  7173                           ; BSR set to: 1
  7174  0033BE  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7175  0033C0  B4D8               	btfsc	status,2,c
  7176  0033C2  D054               	goto	l20931
  7177                           
  7178                           ; BSR set to: 1
  7179                           ;sm_MenuConfiguration_MC50.c: 1127:     {;sm_MenuConfiguration_MC50.c: 1128:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7180  0033C4  0E00               	movlw	0
  7181  0033C6  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7182  0033C8  0E64               	movlw	100
  7183  0033CA  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7184                           
  7185                           ; BSR set to: 1
  7186                           ;sm_MenuConfiguration_MC50.c: 1129:         edit_Param.tempValue++;
  7187  0033CC  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7188                           
  7189                           ; BSR set to: 1
  7190                           ;sm_MenuConfiguration_MC50.c: 1130:         if(edit_Param.tempValue>edit_Param.Max)
  7191  0033CE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7192  0033D0  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7193  0033D2  A0D8               	btfss	status,0,c
  7194                           
  7195                           ; BSR set to: 1
  7196                           ;sm_MenuConfiguration_MC50.c: 1131:         {;sm_MenuConfiguration_MC50.c: 1132:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7197  0033D4  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7198                           
  7199                           ; BSR set to: 1
  7200                           ;sm_MenuConfiguration_MC50.c: 1134:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7201  0033D8  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7202  0033DC  5168               	movf	(_menu_st+23)& (0+255),w,b
  7203  0033DE  EC65  F03A         	call	_cmdMemoryIsEmpty
  7204  0033E2  06E8               	decf	wreg,f,c
  7205  0033E4  B4D8               	btfsc	status,2,c
  7206  0033E6  D004               	goto	u23900
  7207  0033E8  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7208  0033EA  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7209  0033EC  A4D8               	btfss	status,2,c
  7210  0033EE  D021               	goto	l20927
  7211  0033F0                     u23900:
  7212                           
  7213                           ;sm_MenuConfiguration_MC50.c: 1135:         {;sm_MenuConfiguration_MC50.c: 1136:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7214  0033F0  0E0A               	movlw	10
  7215  0033F2  6E10               	movwf	___lbmod@divisor^0,c
  7216  0033F4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7217  0033F6  EC55  F046         	call	___lbmod
  7218  0033FA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7219  0033FC  0E00               	movlw	0
  7220  0033FE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7221  003400  0E14               	movlw	20
  7222  003402  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7223  003404  0E0A               	movlw	10
  7224  003406  6E10               	movwf	___lbmod@divisor^0,c
  7225  003408  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7226  00340A  EC55  F046         	call	___lbmod
  7227  00340E  0100               	movlb	0	; () banked
  7228  003410  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7229  003412  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7230  003414  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7231  003416  6E14               	movwf	___awdiv@dividend^0,c
  7232  003418  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7233  00341A  A0D8               	btfss	status,0,c
  7234  00341C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7235  00341E  0E00               	movlw	0
  7236  003420  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7237  003422  0E0A               	movlw	10
  7238  003424  6E16               	movwf	___awdiv@divisor^0,c
  7239  003426  EC4F  F03C         	call	___awdiv	;wreg free
  7240  00342A  5014               	movf	?___awdiv^0,w,c
  7241  00342C  EC28  F048         	call	_SetSegmentValueIntermitentMain
  7242                           
  7243                           ;sm_MenuConfiguration_MC50.c: 1137:         }
  7244  003430  D7BF               	goto	l20907
  7245  003432                     l20927:
  7246                           
  7247                           ;sm_MenuConfiguration_MC50.c: 1139:         {;sm_MenuConfiguration_MC50.c: 1140:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7248  003432  0E0A               	movlw	10
  7249  003434  6E10               	movwf	___lbmod@divisor^0,c
  7250  003436  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7251  003438  EC55  F046         	call	___lbmod
  7252  00343C  6E1C               	movwf	SetSegmentValue@d2^0,c
  7253  00343E  0E0A               	movlw	10
  7254  003440  6E10               	movwf	___lbmod@divisor^0,c
  7255  003442  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7256  003444  EC55  F046         	call	___lbmod
  7257  003448  0100               	movlb	0	; () banked
  7258  00344A  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7259  00344C  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7260  00344E  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7261  003450  6E14               	movwf	___awdiv@dividend^0,c
  7262  003452  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7263  003454  A0D8               	btfss	status,0,c
  7264  003456  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7265  003458  0E00               	movlw	0
  7266  00345A  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7267  00345C  0E0A               	movlw	10
  7268  00345E  6E16               	movwf	___awdiv@divisor^0,c
  7269  003460  EC4F  F03C         	call	___awdiv	;wreg free
  7270  003464  5014               	movf	?___awdiv^0,w,c
  7271  003466  ECA7  F047         	call	_SetSegmentValue
  7272  00346A  D7A2               	goto	l20907
  7273  00346C                     l20931:
  7274                           
  7275                           ; BSR set to: 1
  7276  00346C  0E63               	movlw	99
  7277  00346E  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7278  003470  D01A               	goto	l20941
  7279                           
  7280                           ; BSR set to: 1
  7281  003472  0E63               	movlw	99
  7282  003474  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7283  003476  D017               	goto	l20941
  7284                           
  7285                           ; BSR set to: 1
  7286                           ;sm_MenuConfiguration_MC50.c: 1145:     {;sm_MenuConfiguration_MC50.c: 1146:         if(
      +                          menu_st.parameterSelected==0)
  7287  003478  5168               	movf	(_menu_st+23)& (0+255),w,b
  7288  00347A  A4D8               	btfss	status,2,c
  7289  00347C  D00A               	goto	l20939
  7290                           
  7291                           ; BSR set to: 1
  7292                           ;sm_MenuConfiguration_MC50.c: 1147:         {;sm_MenuConfiguration_MC50.c: 1148:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7293  00347E  0E13               	movlw	19
  7294  003480  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7295  003482  0E00               	movlw	0
  7296  003484  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7297  003486  0E0A               	movlw	10
  7298  003488  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7299  00348A  0E12               	movlw	18
  7300  00348C  EC28  F048         	call	_SetSegmentValueIntermitentMain
  7301                           
  7302                           ;sm_MenuConfiguration_MC50.c: 1149:         }
  7303  003490  0012               	return	
  7304  003492                     l20939:
  7305                           
  7306                           ; BSR set to: 1
  7307                           ;sm_MenuConfiguration_MC50.c: 1151:         {;sm_MenuConfiguration_MC50.c: 1152:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7308  003492  0E10               	movlw	16
  7309  003494  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7310  003496  0E00               	movlw	0
  7311  003498  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7312  00349A  0E0A               	movlw	10
  7313  00349C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7314  00349E  0E12               	movlw	18
  7315  0034A0  EC28  F048         	call	_SetSegmentValueIntermitentMain
  7316  0034A4  0012               	return	
  7317  0034A6                     l20941:
  7318                           
  7319                           ; BSR set to: 1
  7320  0034A6  0100               	movlb	0	; () banked
  7321  0034A8  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7322  0034AA  B4D8               	btfsc	status,2,c
  7323  0034AC  D082               	goto	l20993
  7324                           
  7325                           ; BSR set to: 0
  7326  0034AE  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7327  0034B0  B4D8               	btfsc	status,2,c
  7328  0034B2  D00F               	goto	u23990
  7329                           
  7330                           ; BSR set to: 0
  7331  0034B4  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7332  0034B6  B4D8               	btfsc	status,2,c
  7333  0034B8  D00C               	goto	u23990
  7334                           
  7335                           ; BSR set to: 0
  7336  0034BA  0E02               	movlw	2
  7337  0034BC  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7338  0034BE  B4D8               	btfsc	status,2,c
  7339  0034C0  D008               	goto	u23990
  7340                           
  7341                           ; BSR set to: 0
  7342  0034C2  0E04               	movlw	4
  7343  0034C4  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7344  0034C6  B4D8               	btfsc	status,2,c
  7345  0034C8  D004               	goto	u23990
  7346                           
  7347                           ; BSR set to: 0
  7348  0034CA  0E08               	movlw	8
  7349  0034CC  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7350  0034CE  A4D8               	btfss	status,2,c
  7351  0034D0  D070               	goto	l20993
  7352  0034D2                     u23990:
  7353                           
  7354                           ; BSR set to: 0
  7355                           ;sm_MenuConfiguration_MC50.c: 1156:     {;sm_MenuConfiguration_MC50.c: 1157:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1158:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7356  0034D2  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7357  0034D6  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7358  0034DA  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7359  0034DE  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7360  0034E2  0E00               	movlw	0
  7361  0034E4  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7362  0034E6  0EE2               	movlw	low controlSelectRemote@pos
  7363  0034E8  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7364  0034EA  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7365  0034EC  EC39  F02A         	call	_validateRemoteSerialNumber	;wreg free
  7366  0034F0  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;sm_MenuConfiguration_MC50.c: 1160:         TypeRemote_st typeRemote = getTypeRemote();
  7370  0034F2  ECDA  F048         	call	_getTypeRemote	;wreg free
  7371  0034F6  0100               	movlb	0	; () banked
  7372  0034F8  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7373                           
  7374                           ; BSR set to: 0
  7375                           ;sm_MenuConfiguration_MC50.c: 1161:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7376  0034FA  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7377  0034FC  A4D8               	btfss	status,2,c
  7378  0034FE  0012               	return	
  7379                           
  7380                           ; BSR set to: 0
  7381  003500  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7382  003502  B4D8               	btfsc	status,2,c
  7383  003504  D003               	goto	u24020
  7384                           
  7385                           ; BSR set to: 0
  7386  003506  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7387  003508  A4D8               	btfss	status,2,c
  7388  00350A  0012               	return	
  7389  00350C                     u24020:
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;sm_MenuConfiguration_MC50.c: 1162:         {;sm_MenuConfiguration_MC50.c: 1163:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7393  00350C  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7394  003510  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7395  003514  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7396  003518  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7397  00351C  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7398  003520  0101               	movlb	1	; () banked
  7399  003522  5168               	movf	(_menu_st+23)& (0+255),w,b
  7400  003524  ECFB  F03E         	call	_saveNewSerial
  7401                           
  7402                           ;sm_MenuConfiguration_MC50.c: 1164:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7403  003528  0EBB               	movlw	low _menuConfiguration_stateMachine
  7404  00352A  6E12               	movwf	sm_send_event@psm^0,c
  7405  00352C  0E02               	movlw	high _menuConfiguration_stateMachine
  7406  00352E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7407  003530  0E00               	movlw	0
  7408  003532  6E15               	movwf	(sm_send_event@event+1)^0,c
  7409  003534  0E08               	movlw	8
  7410  003536  6E14               	movwf	sm_send_event@event^0,c
  7411  003538  ECD6  F040         	call	_sm_send_event	;wreg free
  7412                           
  7413                           ;sm_MenuConfiguration_MC50.c: 1165:             var_sys.DistanceProgrammingActive=NO;
  7414  00353C  0E00               	movlw	0
  7415  00353E  0101               	movlb	1	; () banked
  7416  003540  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7417                           
  7418                           ; BSR set to: 1
  7419                           ;sm_MenuConfiguration_MC50.c: 1166:             var_sys.ProgrammingDistanceIs=NoCMD;
  7420  003542  0E00               	movlw	0
  7421  003544  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7422                           
  7423                           ; BSR set to: 1
  7424                           ;sm_MenuConfiguration_MC50.c: 1167:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7425  003546  0E00               	movlw	0
  7426  003548  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7427  00354A  0E28               	movlw	40
  7428  00354C  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7429                           
  7430                           ; BSR set to: 1
  7431                           ;sm_MenuConfiguration_MC50.c: 1168:             SetSegmentValueIntermitentMain(edit_Para
      +                          m.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 200/50));
  7432  00354E  0E0A               	movlw	10
  7433  003550  6E10               	movwf	___lbdiv@divisor^0,c
  7434  003552  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7435  003554  EC99  F044         	call	___lbdiv
  7436  003558  0DF6               	mullw	246
  7437  00355A  50F3               	movf	243,w,c
  7438  00355C  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  7439  00355E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7440  003560  0E00               	movlw	0
  7441  003562  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7442  003564  0E04               	movlw	4
  7443  003566  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7444  003568  0E0A               	movlw	10
  7445  00356A  6E10               	movwf	___lbdiv@divisor^0,c
  7446  00356C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7447  00356E  EC99  F044         	call	___lbdiv
  7448  003572  EC28  F048         	call	_SetSegmentValueIntermitentMain
  7449                           
  7450                           ;sm_MenuConfiguration_MC50.c: 1169:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7451  003576  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7452  003578  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7453  00357A  B4D8               	btfsc	status,2,c
  7454  00357C  D003               	goto	u24040
  7455  00357E  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7456  003580  A4D8               	btfss	status,2,c
  7457  003582  0012               	return	
  7458  003584                     u24040:
  7459                           
  7460                           ;sm_MenuConfiguration_MC50.c: 1170:             {;sm_MenuConfiguration_MC50.c: 1174:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesFull==0
      +                           && typeRemote==Keeloq_RollingCode)
  7461  003584  0100               	movlb	0	; () banked
  7462  003586  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7463  003588  A4D8               	btfss	status,2,c
  7464  00358A  D008               	goto	l20987
  7465                           
  7466                           ; BSR set to: 0
  7467  00358C  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7468  00358E  A4D8               	btfss	status,2,c
  7469  003590  D005               	goto	l20987
  7470                           
  7471                           ; BSR set to: 0
  7472  003592  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7473  003594  A4D8               	btfss	status,2,c
  7474  003596  D002               	goto	l20987
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;sm_MenuConfiguration_MC50.c: 1175:                 {;sm_MenuConfiguration_MC50.c: 1177:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7478  003598  0E01               	movlw	1
  7479  00359A  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7480  00359C                     l20987:
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;sm_MenuConfiguration_MC50.c: 1181:                 edit_Param.tempValue++;
  7484  00359C  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;sm_MenuConfiguration_MC50.c: 1182:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7488  00359E  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7489  0035A2  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7490  0035A6  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;sm_MenuConfiguration_MC50.c: 1183:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7494  0035AA  0E02               	movlw	2
  7495  0035AC  ECB6  F044         	call	_SaveNVM_VarSystem
  7496  0035B0  0012               	return	
  7497  0035B2                     l20993:
  7498                           
  7499                           ; BSR set to: 0
  7500  0035B2  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7501  0035B4  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7502  0035B6  B4D8               	btfsc	status,2,c
  7503  0035B8  0012               	return	
  7504                           
  7505                           ; BSR set to: 0
  7506  0035BA  0E27               	movlw	39
  7507  0035BC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7508  0035BE  A4D8               	btfss	status,2,c
  7509  0035C0  0012               	return	
  7510                           
  7511                           ; BSR set to: 0
  7512  0035C2  0E27               	movlw	39
  7513  0035C4  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7514  0035C6  0012               	return	
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;sm_MenuConfiguration_MC50.c: 1190:     {;sm_MenuConfiguration_MC50.c: 1191:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7518  0035C8  0E00               	movlw	0
  7519  0035CA  0101               	movlb	1	; () banked
  7520  0035CC  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7521  0035CE  0E64               	movlw	100
  7522  0035D0  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7523                           
  7524                           ; BSR set to: 1
  7525                           ;sm_MenuConfiguration_MC50.c: 1192:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7526  0035D2  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7527  0035D6  5168               	movf	(_menu_st+23)& (0+255),w,b
  7528  0035D8  EC14  F03D         	call	_RemoveSerial
  7529                           
  7530                           ;sm_MenuConfiguration_MC50.c: 1193:         SetSegmentValueIntermitentMain(edit_Param.te
      +                          mpValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  7531  0035DC  0E0A               	movlw	10
  7532  0035DE  6E10               	movwf	___lbdiv@divisor^0,c
  7533  0035E0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7534  0035E2  EC99  F044         	call	___lbdiv
  7535  0035E6  0DF6               	mullw	246
  7536  0035E8  50F3               	movf	243,w,c
  7537  0035EA  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  7538  0035EC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7539  0035EE  0E00               	movlw	0
  7540  0035F0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7541  0035F2  0E14               	movlw	20
  7542  0035F4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7543  0035F6  0E0A               	movlw	10
  7544  0035F8  6E10               	movwf	___lbdiv@divisor^0,c
  7545  0035FA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7546  0035FC  EC99  F044         	call	___lbdiv
  7547  003600  EC28  F048         	call	_SetSegmentValueIntermitentMain
  7548  003604  0012               	return	
  7549  003606                     __end_of_controlSelectRemote:
  7550                           	callstack 0
  7551                           
  7552 ;; *************** function _saveNewSerial *****************
  7553 ;; Defined at:
  7554 ;;		line 81 in file "controlMemory_MC50.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  cmdType         1    wreg     unsigned char 
  7557 ;;  tempSerial      4    0[BANK0 ] unsigned long 
  7558 ;;  position        1    4[BANK0 ] unsigned char 
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;  cmdType         1   57[COMRAM] unsigned char 
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  1    wreg      void 
  7563 ;; Registers used:
  7564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7565 ;; Tracked objects:
  7566 ;;		On entry : 3F/1
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7570 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7572 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7573 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7574 ;;Total ram usage:        8 bytes
  7575 ;; Hardware stack levels used: 1
  7576 ;; Hardware stack levels required when called: 13
  7577 ;; This function calls:
  7578 ;;		_i2c_writeNBytes
  7579 ;; This function is called by:
  7580 ;;		_controlSelectRemote
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           	psect	text7
  7585  007DF6                     __ptext7:
  7586                           	callstack 0
  7587  007DF6                     _saveNewSerial:
  7588                           	callstack 14
  7589                           
  7590                           ;incstack = 0
  7591                           ;saveNewSerial@cmdType stored from wreg
  7592  007DF6  6E3A               	movwf	saveNewSerial@cmdType^0,c
  7593                           
  7594                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
  7595  007DF8  503A               	movf	saveNewSerial@cmdType^0,w,c
  7596  007DFA  A4D8               	btfss	status,2,c
  7597  007DFC  D01A               	goto	l19547
  7598                           
  7599                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
  7600  007DFE  0100               	movlb	0	; () banked
  7601  007E00  51DC               	movf	saveNewSerial@position& (0+255),w,b
  7602  007E02  6FDD               	movwf	??_saveNewSerial& (0+255),b
  7603  007E04  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
  7604  007E06  90D8               	bcf	status,0,c
  7605  007E08  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7606  007E0A  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7607  007E0C  90D8               	bcf	status,0,c
  7608  007E0E  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7609  007E10  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7610  007E12  0E00               	movlw	0
  7611  007E14  25DD               	addwf	??_saveNewSerial& (0+255),w,b
  7612  007E16  6E22               	movwf	i2c_writeNBytes@reg^0,c
  7613  007E18  0E02               	movlw	2
  7614  007E1A  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
  7615  007E1C  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  7616  007E1E  0ED8               	movlw	low saveNewSerial@tempSerial
  7617  007E20  6E24               	movwf	i2c_writeNBytes@data^0,c
  7618  007E22  0E00               	movlw	0
  7619  007E24  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  7620  007E26  0E04               	movlw	4
  7621  007E28  6E25               	movwf	i2c_writeNBytes@len^0,c
  7622  007E2A  0E50               	movlw	80
  7623  007E2C  ECC1  F03E         	call	_i2c_writeNBytes
  7624                           
  7625                           ;controlMemory_MC50.c: 87:     }
  7626  007E30  0012               	return	
  7627  007E32                     l19547:
  7628                           
  7629                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
  7630  007E32  0100               	movlb	0	; () banked
  7631  007E34  51DC               	movf	saveNewSerial@position& (0+255),w,b
  7632  007E36  6FDD               	movwf	??_saveNewSerial& (0+255),b
  7633  007E38  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
  7634  007E3A  90D8               	bcf	status,0,c
  7635  007E3C  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7636  007E3E  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7637  007E40  90D8               	bcf	status,0,c
  7638  007E42  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7639  007E44  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7640  007E46  0E00               	movlw	0
  7641  007E48  25DD               	addwf	??_saveNewSerial& (0+255),w,b
  7642  007E4A  6E22               	movwf	i2c_writeNBytes@reg^0,c
  7643  007E4C  0E05               	movlw	5
  7644  007E4E  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
  7645  007E50  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  7646  007E52  0ED8               	movlw	low saveNewSerial@tempSerial
  7647  007E54  6E24               	movwf	i2c_writeNBytes@data^0,c
  7648  007E56  0E00               	movlw	0
  7649  007E58  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  7650  007E5A  0E04               	movlw	4
  7651  007E5C  6E25               	movwf	i2c_writeNBytes@len^0,c
  7652  007E5E  0E50               	movlw	80
  7653  007E60  ECC1  F03E         	call	_i2c_writeNBytes
  7654  007E64  0012               	return		;funcret
  7655  007E66                     __end_of_saveNewSerial:
  7656                           	callstack 0
  7657                           
  7658 ;; *************** function _getTypeRemote *****************
  7659 ;; Defined at:
  7660 ;;		line 459 in file "inputs_MC50.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;		None
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;		None
  7665 ;; Return value:  Size  Location     Type
  7666 ;;                  1    wreg      enum E10559
  7667 ;; Registers used:
  7668 ;;		wreg, status,2
  7669 ;; Tracked objects:
  7670 ;;		On entry : 3F/0
  7671 ;;		On exit  : 3F/2
  7672 ;;		Unchanged: 0/0
  7673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7678 ;;Total ram usage:        0 bytes
  7679 ;; Hardware stack levels used: 1
  7680 ;; Hardware stack levels required when called: 4
  7681 ;; This function calls:
  7682 ;;		Nothing
  7683 ;; This function is called by:
  7684 ;;		_controlSelectRemote
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text8
  7689  0091B4                     __ptext8:
  7690                           	callstack 0
  7691  0091B4                     _getTypeRemote:
  7692                           	callstack 23
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;inputs_MC50.c: 460:     return classic_data.type;
  7696                           
  7697                           ;incstack = 0
  7698  0091B4  0102               	movlb	2	; () banked
  7699  0091B6  519E               	movf	(_classic_data+14)& (0+255),w,b
  7700                           
  7701                           ; BSR set to: 2
  7702  0091B8  0012               	return		;funcret
  7703  0091BA                     __end_of_getTypeRemote:
  7704                           	callstack 0
  7705                           
  7706 ;; *************** function _getSerialCmd *****************
  7707 ;; Defined at:
  7708 ;;		line 442 in file "inputs_MC50.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7711 ;;		 -> controlSelectRemote@tempSerial(4), 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  temp            1   27[COMRAM] char 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      char 
  7716 ;; Registers used:
  7717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 3F/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7723 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7727 ;;Total ram usage:        2 bytes
  7728 ;; Hardware stack levels used: 1
  7729 ;; Hardware stack levels required when called: 5
  7730 ;; This function calls:
  7731 ;;		_memcpy
  7732 ;; This function is called by:
  7733 ;;		_controlSelectRemote
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text9
  7738  008608                     __ptext9:
  7739                           	callstack 0
  7740  008608                     _getSerialCmd:
  7741                           	callstack 22
  7742                           
  7743                           ; BSR set to: 0
  7744                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7745                           
  7746                           ; BSR set to: 2
  7747                           ;incstack = 0
  7748  008608  681C               	setf	getSerialCmd@temp^0,c
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;inputs_MC50.c: 444:     if(RFFull)
  7752  00860A  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7753  00860C  B4D8               	btfsc	status,2,c
  7754  00860E  D020               	goto	l19597
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7758  008610  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7759  008612  B4D8               	btfsc	status,2,c
  7760  008614  D00E               	goto	l19593
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7764  008616  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7765  00861A  6A11               	clrf	(memcpy@d1+1)^0,c
  7766  00861C  0E94               	movlw	low (_classic_data+4)
  7767  00861E  6E12               	movwf	memcpy@s1^0,c
  7768  008620  0E02               	movlw	high (_classic_data+4)
  7769  008622  6E13               	movwf	(memcpy@s1+1)^0,c
  7770  008624  0E00               	movlw	0
  7771  008626  6E15               	movwf	(memcpy@n+1)^0,c
  7772  008628  0E04               	movlw	4
  7773  00862A  6E14               	movwf	memcpy@n^0,c
  7774  00862C  ECB8  F043         	call	_memcpy	;wreg free
  7775                           
  7776                           ;inputs_MC50.c: 449:         }
  7777  008630  D00D               	goto	l19595
  7778  008632                     l19593:
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7782  008632  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7783  008636  6A11               	clrf	(memcpy@d1+1)^0,c
  7784  008638  0ECA               	movlw	low (_BufferRF+4)
  7785  00863A  6E12               	movwf	memcpy@s1^0,c
  7786  00863C  0E02               	movlw	high (_BufferRF+4)
  7787  00863E  6E13               	movwf	(memcpy@s1+1)^0,c
  7788  008640  0E00               	movlw	0
  7789  008642  6E15               	movwf	(memcpy@n+1)^0,c
  7790  008644  0E04               	movlw	4
  7791  008646  6E14               	movwf	memcpy@n^0,c
  7792  008648  ECB8  F043         	call	_memcpy	;wreg free
  7793  00864C                     l19595:
  7794                           
  7795                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7796  00864C  C29C  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7797  008650                     l19597:
  7798                           
  7799                           ;inputs_MC50.c: 456:     return temp;
  7800  008650  501C               	movf	getSerialCmd@temp^0,w,c
  7801  008652  0012               	return		;funcret
  7802  008654                     __end_of_getSerialCmd:
  7803                           	callstack 0
  7804                           
  7805 ;; *************** function _cmdMemoryIsEmpty *****************
  7806 ;; Defined at:
  7807 ;;		line 110 in file "controlMemory_MC50.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  cmdType         1    wreg     unsigned char 
  7810 ;;  position        1   45[COMRAM] unsigned char 
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  cmdType         1   48[COMRAM] unsigned char 
  7813 ;;  tempSerial      4   49[COMRAM] unsigned long 
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  1    wreg      unsigned char 
  7816 ;; Registers used:
  7817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7818 ;; Tracked objects:
  7819 ;;		On entry : 3F/1
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7823 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7824 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7825 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7826 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7827 ;;Total ram usage:        8 bytes
  7828 ;; Hardware stack levels used: 1
  7829 ;; Hardware stack levels required when called: 13
  7830 ;; This function calls:
  7831 ;;		_i2c_readDataBlock
  7832 ;; This function is called by:
  7833 ;;		_controlSelectRemote
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           	psect	text10
  7838  0074CA                     __ptext10:
  7839                           	callstack 0
  7840  0074CA                     _cmdMemoryIsEmpty:
  7841                           	callstack 14
  7842                           
  7843                           ;incstack = 0
  7844                           ;cmdMemoryIsEmpty@cmdType stored from wreg
  7845  0074CA  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
  7846                           
  7847                           ;controlMemory_MC50.c: 110: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 111: {;controlMemory_MC50.c: 112:     unsigned long tempSerial=0;
  7848  0074CC  0E00               	movlw	0
  7849  0074CE  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
  7850  0074D0  0E00               	movlw	0
  7851  0074D2  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
  7852  0074D4  0E00               	movlw	0
  7853  0074D6  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
  7854  0074D8  0E00               	movlw	0
  7855  0074DA  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
  7856                           
  7857                           ;controlMemory_MC50.c: 115:      if(cmdType==0)
  7858  0074DC  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
  7859  0074DE  A4D8               	btfss	status,2,c
  7860  0074E0  D01A               	goto	l19563
  7861                           
  7862                           ;controlMemory_MC50.c: 116:     {;controlMemory_MC50.c: 117:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
  7863  0074E2  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
  7864  0074E4  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
  7865  0074E6  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
  7866  0074E8  90D8               	bcf	status,0,c
  7867  0074EA  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7868  0074EC  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7869  0074EE  90D8               	bcf	status,0,c
  7870  0074F0  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7871  0074F2  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7872  0074F4  0E00               	movlw	0
  7873  0074F6  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
  7874  0074F8  6E22               	movwf	i2c_readDataBlock@reg^0,c
  7875  0074FA  0E02               	movlw	2
  7876  0074FC  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
  7877  0074FE  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
  7878  007500  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
  7879  007502  6E24               	movwf	i2c_readDataBlock@data^0,c
  7880  007504  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
  7881  007506  0E00               	movlw	0
  7882  007508  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
  7883  00750A  0E04               	movlw	4
  7884  00750C  6E26               	movwf	i2c_readDataBlock@len^0,c
  7885  00750E  0E50               	movlw	80
  7886  007510  EC86  F03E         	call	_i2c_readDataBlock
  7887                           
  7888                           ;controlMemory_MC50.c: 118:     }
  7889  007514  D019               	goto	l19565
  7890  007516                     l19563:
  7891                           
  7892                           ;controlMemory_MC50.c: 120:     {;controlMemory_MC50.c: 121:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
  7893  007516  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
  7894  007518  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
  7895  00751A  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
  7896  00751C  90D8               	bcf	status,0,c
  7897  00751E  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7898  007520  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7899  007522  90D8               	bcf	status,0,c
  7900  007524  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7901  007526  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7902  007528  0E00               	movlw	0
  7903  00752A  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
  7904  00752C  6E22               	movwf	i2c_readDataBlock@reg^0,c
  7905  00752E  0E05               	movlw	5
  7906  007530  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
  7907  007532  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
  7908  007534  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
  7909  007536  6E24               	movwf	i2c_readDataBlock@data^0,c
  7910  007538  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
  7911  00753A  0E00               	movlw	0
  7912  00753C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
  7913  00753E  0E04               	movlw	4
  7914  007540  6E26               	movwf	i2c_readDataBlock@len^0,c
  7915  007542  0E50               	movlw	80
  7916  007544  EC86  F03E         	call	_i2c_readDataBlock
  7917  007548                     l19565:
  7918                           
  7919                           ;controlMemory_MC50.c: 124:      if( tempSerial==0)
  7920  007548  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
  7921  00754A  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
  7922  00754C  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
  7923  00754E  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
  7924  007550  A4D8               	btfss	status,2,c
  7925  007552  D002               	goto	l19573
  7926                           
  7927                           ;controlMemory_MC50.c: 125:      {;controlMemory_MC50.c: 126:          return 1;
  7928  007554  0E01               	movlw	1
  7929  007556  0012               	return	
  7930  007558                     l19573:
  7931                           
  7932                           ;controlMemory_MC50.c: 129:      {;controlMemory_MC50.c: 130:          return 0;
  7933  007558  0E00               	movlw	0
  7934  00755A  0012               	return		;funcret
  7935  00755C                     __end_of_cmdMemoryIsEmpty:
  7936                           	callstack 0
  7937                           
  7938 ;; *************** function ___lbmod *****************
  7939 ;; Defined at:
  7940 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;  dividend        1    wreg     unsigned char 
  7943 ;;  divisor         1   15[COMRAM] unsigned char 
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;  dividend        1   16[COMRAM] unsigned char 
  7946 ;;  rem             1   18[COMRAM] unsigned char 
  7947 ;;  counter         1   17[COMRAM] unsigned char 
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  1    wreg      unsigned char 
  7950 ;; Registers used:
  7951 ;;		wreg, status,2, status,0
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/1
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7957 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7958 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7960 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7961 ;;Total ram usage:        4 bytes
  7962 ;; Hardware stack levels used: 1
  7963 ;; Hardware stack levels required when called: 4
  7964 ;; This function calls:
  7965 ;;		Nothing
  7966 ;; This function is called by:
  7967 ;;		_controlSelectRemote
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           	psect	text11
  7972  008CAA                     __ptext11:
  7973                           	callstack 0
  7974  008CAA                     ___lbmod:
  7975                           	callstack 23
  7976                           
  7977                           ;incstack = 0
  7978                           ;___lbmod@dividend stored from wreg
  7979  008CAA  6E11               	movwf	___lbmod@dividend^0,c
  7980  008CAC  0E08               	movlw	8
  7981  008CAE  6E12               	movwf	___lbmod@counter^0,c
  7982  008CB0  0E00               	movlw	0
  7983  008CB2  6E13               	movwf	___lbmod@rem^0,c
  7984  008CB4                     l12491:
  7985  008CB4  90D8               	bcf	status,0,c
  7986  008CB6  3411               	rlcf	___lbmod@dividend^0,w,c
  7987  008CB8  3413               	rlcf	___lbmod@rem^0,w,c
  7988  008CBA  6E13               	movwf	___lbmod@rem^0,c
  7989  008CBC  90D8               	bcf	status,0,c
  7990  008CBE  3611               	rlcf	___lbmod@dividend^0,f,c
  7991  008CC0  5010               	movf	___lbmod@divisor^0,w,c
  7992  008CC2  5C13               	subwf	___lbmod@rem^0,w,c
  7993  008CC4  A0D8               	btfss	status,0,c
  7994  008CC6  D002               	goto	l12499
  7995  008CC8  5010               	movf	___lbmod@divisor^0,w,c
  7996  008CCA  5E13               	subwf	___lbmod@rem^0,f,c
  7997  008CCC                     l12499:
  7998  008CCC  2E12               	decfsz	___lbmod@counter^0,f,c
  7999  008CCE  D7F2               	goto	l12491
  8000  008CD0  5013               	movf	___lbmod@rem^0,w,c
  8001  008CD2  0012               	return		;funcret
  8002  008CD4                     __end_of___lbmod:
  8003                           	callstack 0
  8004                           
  8005 ;; *************** function ___awdiv *****************
  8006 ;; Defined at:
  8007 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  dividend        2   19[COMRAM] int 
  8010 ;;  divisor         2   21[COMRAM] int 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;  quotient        2   25[COMRAM] int 
  8013 ;;  sign            1   24[COMRAM] unsigned char 
  8014 ;;  counter         1   23[COMRAM] unsigned char 
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  2   19[COMRAM] int 
  8017 ;; Registers used:
  8018 ;;		wreg, status,2, status,0
  8019 ;; Tracked objects:
  8020 ;;		On entry : 3F/0
  8021 ;;		On exit  : 3F/0
  8022 ;;		Unchanged: 3F/0
  8023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8024 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8025 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8027 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8028 ;;Total ram usage:        8 bytes
  8029 ;; Hardware stack levels used: 1
  8030 ;; Hardware stack levels required when called: 4
  8031 ;; This function calls:
  8032 ;;		Nothing
  8033 ;; This function is called by:
  8034 ;;		_controlSelectRemote
  8035 ;; This function uses a non-reentrant model
  8036 ;;
  8037                           
  8038                           	psect	text12
  8039  00789E                     __ptext12:
  8040                           	callstack 0
  8041  00789E                     ___awdiv:
  8042                           	callstack 23
  8043                           
  8044                           ; BSR set to: 0
  8045                           
  8046                           ;incstack = 0
  8047  00789E  0E00               	movlw	0
  8048  0078A0  6E19               	movwf	___awdiv@sign^0,c
  8049                           
  8050                           ; BSR set to: 0
  8051  0078A2  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8052  0078A4  D006               	goto	l12427
  8053                           
  8054                           ; BSR set to: 0
  8055  0078A6  6C16               	negf	___awdiv@divisor^0,c
  8056  0078A8  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8057  0078AA  B0D8               	btfsc	status,0,c
  8058  0078AC  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8059                           
  8060                           ; BSR set to: 0
  8061  0078AE  0E01               	movlw	1
  8062  0078B0  6E19               	movwf	___awdiv@sign^0,c
  8063  0078B2                     l12427:
  8064                           
  8065                           ; BSR set to: 0
  8066  0078B2  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8067  0078B4  D006               	goto	l12433
  8068                           
  8069                           ; BSR set to: 0
  8070  0078B6  6C14               	negf	___awdiv@dividend^0,c
  8071  0078B8  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8072  0078BA  B0D8               	btfsc	status,0,c
  8073  0078BC  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8074                           
  8075                           ; BSR set to: 0
  8076  0078BE  0E01               	movlw	1
  8077  0078C0  1A19               	xorwf	___awdiv@sign^0,f,c
  8078  0078C2                     l12433:
  8079                           
  8080                           ; BSR set to: 0
  8081  0078C2  0E00               	movlw	0
  8082  0078C4  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8083  0078C6  0E00               	movlw	0
  8084  0078C8  6E1A               	movwf	___awdiv@quotient^0,c
  8085                           
  8086                           ; BSR set to: 0
  8087  0078CA  5016               	movf	___awdiv@divisor^0,w,c
  8088  0078CC  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8089  0078CE  B4D8               	btfsc	status,2,c
  8090  0078D0  D01C               	goto	l12455
  8091                           
  8092                           ; BSR set to: 0
  8093  0078D2  0E01               	movlw	1
  8094  0078D4  6E18               	movwf	___awdiv@counter^0,c
  8095  0078D6  D004               	goto	l12441
  8096  0078D8                     l12439:
  8097                           
  8098                           ; BSR set to: 0
  8099  0078D8  90D8               	bcf	status,0,c
  8100  0078DA  3616               	rlcf	___awdiv@divisor^0,f,c
  8101  0078DC  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8102  0078DE  2A18               	incf	___awdiv@counter^0,f,c
  8103  0078E0                     l12441:
  8104                           
  8105                           ; BSR set to: 0
  8106  0078E0  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8107  0078E2  D7FA               	goto	l12439
  8108  0078E4                     u12050:
  8109                           
  8110                           ; BSR set to: 0
  8111  0078E4  90D8               	bcf	status,0,c
  8112  0078E6  361A               	rlcf	___awdiv@quotient^0,f,c
  8113  0078E8  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8114                           
  8115                           ; BSR set to: 0
  8116  0078EA  5016               	movf	___awdiv@divisor^0,w,c
  8117  0078EC  5C14               	subwf	___awdiv@dividend^0,w,c
  8118  0078EE  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8119  0078F0  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8120  0078F2  A0D8               	btfss	status,0,c
  8121  0078F4  D005               	goto	l12451
  8122                           
  8123                           ; BSR set to: 0
  8124  0078F6  5016               	movf	___awdiv@divisor^0,w,c
  8125  0078F8  5E14               	subwf	___awdiv@dividend^0,f,c
  8126  0078FA  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8127  0078FC  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8128                           
  8129                           ; BSR set to: 0
  8130  0078FE  801A               	bsf	___awdiv@quotient^0,0,c
  8131  007900                     l12451:
  8132                           
  8133                           ; BSR set to: 0
  8134  007900  90D8               	bcf	status,0,c
  8135  007902  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8136  007904  3216               	rrcf	___awdiv@divisor^0,f,c
  8137                           
  8138                           ; BSR set to: 0
  8139  007906  2E18               	decfsz	___awdiv@counter^0,f,c
  8140  007908  D7ED               	goto	u12050
  8141  00790A                     l12455:
  8142                           
  8143                           ; BSR set to: 0
  8144  00790A  5019               	movf	___awdiv@sign^0,w,c
  8145  00790C  B4D8               	btfsc	status,2,c
  8146  00790E  D004               	goto	l12459
  8147                           
  8148                           ; BSR set to: 0
  8149  007910  6C1A               	negf	___awdiv@quotient^0,c
  8150  007912  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8151  007914  B0D8               	btfsc	status,0,c
  8152  007916  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8153  007918                     l12459:
  8154                           
  8155                           ; BSR set to: 0
  8156  007918  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8157  00791C  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8158                           
  8159                           ; BSR set to: 0
  8160  007920  0012               	return		;funcret
  8161  007922                     __end_of___awdiv:
  8162                           	callstack 0
  8163                           
  8164 ;; *************** function _RemoveSerial *****************
  8165 ;; Defined at:
  8166 ;;		line 95 in file "controlMemory_MC50.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  cmdType         1    wreg     unsigned char 
  8169 ;;  position        1   57[COMRAM] unsigned char 
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;  cmdType         1    2[BANK0 ] unsigned char 
  8172 ;;  tempSerial      4    3[BANK0 ] unsigned long 
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  1    wreg      void 
  8175 ;; Registers used:
  8176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8177 ;; Tracked objects:
  8178 ;;		On entry : 3F/1
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8182 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8183 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8184 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8185 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8186 ;;Total ram usage:        8 bytes
  8187 ;; Hardware stack levels used: 1
  8188 ;; Hardware stack levels required when called: 13
  8189 ;; This function calls:
  8190 ;;		_i2c_writeNBytes
  8191 ;; This function is called by:
  8192 ;;		_controlSelectRemote
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text13
  8197  007A28                     __ptext13:
  8198                           	callstack 0
  8199  007A28                     _RemoveSerial:
  8200                           	callstack 14
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;incstack = 0
  8204                           ;RemoveSerial@cmdType stored from wreg
  8205  007A28  0100               	movlb	0	; () banked
  8206  007A2A  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
  8207                           
  8208                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
  8209  007A2C  0E00               	movlw	0
  8210  007A2E  0100               	movlb	0	; () banked
  8211  007A30  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
  8212  007A32  0E00               	movlw	0
  8213  007A34  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
  8214  007A36  0E00               	movlw	0
  8215  007A38  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
  8216  007A3A  0E00               	movlw	0
  8217  007A3C  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
  8218                           
  8219                           ; BSR set to: 0
  8220                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
  8221  007A3E  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
  8222  007A40  A4D8               	btfss	status,2,c
  8223  007A42  D019               	goto	l19555
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
  8227  007A44  503A               	movf	RemoveSerial@position^0,w,c
  8228  007A46  6FD8               	movwf	??_RemoveSerial& (0+255),b
  8229  007A48  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
  8230  007A4A  90D8               	bcf	status,0,c
  8231  007A4C  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8232  007A4E  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8233  007A50  90D8               	bcf	status,0,c
  8234  007A52  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8235  007A54  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8236  007A56  0E00               	movlw	0
  8237  007A58  25D8               	addwf	??_RemoveSerial& (0+255),w,b
  8238  007A5A  6E22               	movwf	i2c_writeNBytes@reg^0,c
  8239  007A5C  0E02               	movlw	2
  8240  007A5E  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
  8241  007A60  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  8242  007A62  0EDB               	movlw	low RemoveSerial@tempSerial
  8243  007A64  6E24               	movwf	i2c_writeNBytes@data^0,c
  8244  007A66  0E00               	movlw	0
  8245  007A68  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  8246  007A6A  0E04               	movlw	4
  8247  007A6C  6E25               	movwf	i2c_writeNBytes@len^0,c
  8248  007A6E  0E50               	movlw	80
  8249  007A70  ECC1  F03E         	call	_i2c_writeNBytes
  8250                           
  8251                           ;controlMemory_MC50.c: 103:     }
  8252  007A74  0012               	return	
  8253  007A76                     l19555:
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
  8257  007A76  503A               	movf	RemoveSerial@position^0,w,c
  8258  007A78  6FD8               	movwf	??_RemoveSerial& (0+255),b
  8259  007A7A  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
  8260  007A7C  90D8               	bcf	status,0,c
  8261  007A7E  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8262  007A80  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8263  007A82  90D8               	bcf	status,0,c
  8264  007A84  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8265  007A86  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8266  007A88  0E00               	movlw	0
  8267  007A8A  25D8               	addwf	??_RemoveSerial& (0+255),w,b
  8268  007A8C  6E22               	movwf	i2c_writeNBytes@reg^0,c
  8269  007A8E  0E05               	movlw	5
  8270  007A90  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
  8271  007A92  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  8272  007A94  0EDB               	movlw	low RemoveSerial@tempSerial
  8273  007A96  6E24               	movwf	i2c_writeNBytes@data^0,c
  8274  007A98  0E00               	movlw	0
  8275  007A9A  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  8276  007A9C  0E04               	movlw	4
  8277  007A9E  6E25               	movwf	i2c_writeNBytes@len^0,c
  8278  007AA0  0E50               	movlw	80
  8279  007AA2  ECC1  F03E         	call	_i2c_writeNBytes
  8280  007AA6  0012               	return		;funcret
  8281  007AA8                     __end_of_RemoveSerial:
  8282                           	callstack 0
  8283                           
  8284 ;; *************** function _controlSaveRemote *****************
  8285 ;; Defined at:
  8286 ;;		line 1198 in file "sm_MenuConfiguration_MC50.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;		None
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;		None
  8291 ;; Return value:  Size  Location     Type
  8292 ;;                  1    wreg      void 
  8293 ;; Registers used:
  8294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8295 ;; Tracked objects:
  8296 ;;		On entry : 3F/0
  8297 ;;		On exit  : 0/0
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8304 ;;Total ram usage:        0 bytes
  8305 ;; Hardware stack levels used: 1
  8306 ;; Hardware stack levels required when called: 6
  8307 ;; This function calls:
  8308 ;;		_ClearFlag_rfCMD
  8309 ;;		_SetSegmentValueIntermitentMain
  8310 ;;		_SetSegmentValueMain
  8311 ;;		___lbdiv
  8312 ;;		_sm_send_event
  8313 ;; This function is called by:
  8314 ;;		_sm_execute_menuConfiguration
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           	psect	text14
  8319  0072FA                     __ptext14:
  8320                           	callstack 0
  8321  0072FA                     _controlSaveRemote:
  8322                           	callstack 22
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;sm_MenuConfiguration_MC50.c: 1199:      if (ts_system.timeSinalizationDigit<=0)
  8326                           
  8327                           ;incstack = 0
  8328  0072FA  0101               	movlb	1	; () banked
  8329  0072FC  BFA9               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8330  0072FE  D005               	goto	u24110
  8331  007300  51A9               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8332  007302  E149               	bnz	l3473
  8333  007304  05A8               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8334  007306  B0D8               	btfsc	status,0,c
  8335  007308  0012               	return	
  8336  00730A                     u24110:
  8337                           
  8338                           ; BSR set to: 1
  8339                           ;sm_MenuConfiguration_MC50.c: 1200:      {;sm_MenuConfiguration_MC50.c: 1201:          i
      +                          f(edit_Param.Max==0)
  8340  00730A  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8341  00730C  A4D8               	btfss	status,2,c
  8342  00730E  D023               	goto	l21015
  8343                           
  8344                           ; BSR set to: 1
  8345                           ;sm_MenuConfiguration_MC50.c: 1202:          {;sm_MenuConfiguration_MC50.c: 1203:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  8346  007310  0E00               	movlw	0
  8347  007312  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8348  007314  0EC8               	movlw	200
  8349  007316  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8350                           
  8351                           ; BSR set to: 1
  8352                           ;sm_MenuConfiguration_MC50.c: 1204:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  8353  007318  0EBB               	movlw	low _menuConfiguration_stateMachine
  8354  00731A  6E12               	movwf	sm_send_event@psm^0,c
  8355  00731C  0E02               	movlw	high _menuConfiguration_stateMachine
  8356  00731E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8357  007320  0E00               	movlw	0
  8358  007322  6E15               	movwf	(sm_send_event@event+1)^0,c
  8359  007324  0E09               	movlw	9
  8360  007326  6E14               	movwf	sm_send_event@event^0,c
  8361  007328  ECD6  F040         	call	_sm_send_event	;wreg free
  8362                           
  8363                           ;sm_MenuConfiguration_MC50.c: 1205:              SetSegmentValueIntermitentMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  8364  00732C  0E0A               	movlw	10
  8365  00732E  6E10               	movwf	___lbdiv@divisor^0,c
  8366  007330  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8367  007332  EC99  F044         	call	___lbdiv
  8368  007336  0DF6               	mullw	246
  8369  007338  50F3               	movf	243,w,c
  8370  00733A  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  8371  00733C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8372  00733E  0E00               	movlw	0
  8373  007340  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8374  007342  0E14               	movlw	20
  8375  007344  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8376  007346  0E0A               	movlw	10
  8377  007348  6E10               	movwf	___lbdiv@divisor^0,c
  8378  00734A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8379  00734C  EC99  F044         	call	___lbdiv
  8380  007350  EC28  F048         	call	_SetSegmentValueIntermitentMain
  8381                           
  8382                           ;sm_MenuConfiguration_MC50.c: 1206:          }
  8383  007354  0012               	return	
  8384  007356                     l21015:
  8385                           
  8386                           ; BSR set to: 1
  8387                           ;sm_MenuConfiguration_MC50.c: 1208:          {;sm_MenuConfiguration_MC50.c: 1209:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8388  007356  0EEF               	movlw	low _main_stateMachine
  8389  007358  6E12               	movwf	sm_send_event@psm^0,c
  8390  00735A  0E01               	movlw	high _main_stateMachine
  8391  00735C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8392  00735E  0E00               	movlw	0
  8393  007360  6E15               	movwf	(sm_send_event@event+1)^0,c
  8394  007362  0E07               	movlw	7
  8395  007364  6E14               	movwf	sm_send_event@event^0,c
  8396  007366  ECD6  F040         	call	_sm_send_event	;wreg free
  8397                           
  8398                           ;sm_MenuConfiguration_MC50.c: 1210:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8399  00736A  0EBB               	movlw	low _menuConfiguration_stateMachine
  8400  00736C  6E12               	movwf	sm_send_event@psm^0,c
  8401  00736E  0E02               	movlw	high _menuConfiguration_stateMachine
  8402  007370  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8403  007372  0E00               	movlw	0
  8404  007374  6E15               	movwf	(sm_send_event@event+1)^0,c
  8405  007376  0E04               	movlw	4
  8406  007378  6E14               	movwf	sm_send_event@event^0,c
  8407  00737A  ECD6  F040         	call	_sm_send_event	;wreg free
  8408                           
  8409                           ;sm_MenuConfiguration_MC50.c: 1211:             SetSegmentValueMain(dMinus,dMinus);
  8410  00737E  0E18               	movlw	24
  8411  007380  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8412  007382  0E18               	movlw	24
  8413  007384  EC8D  F047         	call	_SetSegmentValueMain
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;sm_MenuConfiguration_MC50.c: 1212:             ClearFlag_rfCMD();
  8417  007388  ECDD  F048         	call	_ClearFlag_rfCMD	;wreg free
  8418                           
  8419                           ;sm_MenuConfiguration_MC50.c: 1213:             ts_system.timeoutMenu = 0;
  8420  00738C  0E00               	movlw	0
  8421  00738E  0101               	movlb	1	; () banked
  8422  007390  6FAB               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8423  007392  0E00               	movlw	0
  8424  007394  6FAA               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8425  007396                     l3473:
  8426  007396  0012               	return		;funcret
  8427  007398                     __end_of_controlSaveRemote:
  8428                           	callstack 0
  8429                           
  8430 ;; *************** function _SetSegmentValueMain *****************
  8431 ;; Defined at:
  8432 ;;		line 104 in file "outputs_MC50.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;  d1              1    wreg     unsigned char 
  8435 ;;  d2              1   27[COMRAM] unsigned char 
  8436 ;; Auto vars:     Size  Location     Type
  8437 ;;  d1              1   28[COMRAM] unsigned char 
  8438 ;; Return value:  Size  Location     Type
  8439 ;;                  1    wreg      void 
  8440 ;; Registers used:
  8441 ;;		wreg, status,2
  8442 ;; Tracked objects:
  8443 ;;		On entry : 0/0
  8444 ;;		On exit  : 3F/0
  8445 ;;		Unchanged: 0/0
  8446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8447 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8451 ;;Total ram usage:        2 bytes
  8452 ;; Hardware stack levels used: 1
  8453 ;; Hardware stack levels required when called: 4
  8454 ;; This function calls:
  8455 ;;		Nothing
  8456 ;; This function is called by:
  8457 ;;		_sm_execute_main
  8458 ;;		_sm_execute_menuConfiguration
  8459 ;;		_load_New_Menu
  8460 ;;		_controlSelectRemote
  8461 ;;		_controlSaveRemote
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           	psect	text15
  8466  008F1A                     __ptext15:
  8467                           	callstack 0
  8468  008F1A                     _SetSegmentValueMain:
  8469                           	callstack 22
  8470                           
  8471                           ;incstack = 0
  8472                           ;SetSegmentValueMain@d1 stored from wreg
  8473  008F1A  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8474                           
  8475                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8476  008F1C  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8477                           
  8478                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8479  008F20  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8480                           
  8481                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8482  008F24  0E00               	movlw	0
  8483  008F26  0100               	movlb	0	; () banked
  8484  008F28  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8485  008F2A  0E00               	movlw	0
  8486  008F2C  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8490  008F2E  0E00               	movlw	0
  8491  008F30  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8492                           
  8493                           ; BSR set to: 0
  8494  008F32  0012               	return		;funcret
  8495  008F34                     __end_of_SetSegmentValueMain:
  8496                           	callstack 0
  8497                           
  8498 ;; *************** function _ClearFlag_rfCMD *****************
  8499 ;; Defined at:
  8500 ;;		line 463 in file "inputs_MC50.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;		None
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;		None
  8505 ;; Return value:  Size  Location     Type
  8506 ;;                  1    wreg      void 
  8507 ;; Registers used:
  8508 ;;		wreg, status,2
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/1
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8518 ;;Total ram usage:        0 bytes
  8519 ;; Hardware stack levels used: 1
  8520 ;; Hardware stack levels required when called: 4
  8521 ;; This function calls:
  8522 ;;		Nothing
  8523 ;; This function is called by:
  8524 ;;		_sm_execute_menuConfiguration
  8525 ;;		_controlSelectRemote
  8526 ;;		_controlSaveRemote
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text16
  8531  0091BA                     __ptext16:
  8532                           	callstack 0
  8533  0091BA                     _ClearFlag_rfCMD:
  8534                           	callstack 23
  8535                           
  8536                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;incstack = 0
  8540  0091BA  0E01               	movlw	1
  8541  0091BC  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8542  0091BE  0012               	return		;funcret
  8543  0091C0                     __end_of_ClearFlag_rfCMD:
  8544                           	callstack 0
  8545                           
  8546 ;; *************** function _controlLearnDigit *****************
  8547 ;; Defined at:
  8548 ;;		line 1219 in file "sm_MenuConfiguration_MC50.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;		None
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;		None
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  1    wreg      void 
  8555 ;; Registers used:
  8556 ;;		wreg, status,2, status,0, cstack
  8557 ;; Tracked objects:
  8558 ;;		On entry : 3F/0
  8559 ;;		On exit  : 3E/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8566 ;;Total ram usage:        0 bytes
  8567 ;; Hardware stack levels used: 1
  8568 ;; Hardware stack levels required when called: 5
  8569 ;; This function calls:
  8570 ;;		_SetSegmentValueLearn
  8571 ;; This function is called by:
  8572 ;;		_sm_execute_menuConfiguration
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text17
  8577  008A3C                     __ptext17:
  8578                           	callstack 0
  8579  008A3C                     _controlLearnDigit:
  8580                           	callstack 23
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;sm_MenuConfiguration_MC50.c: 1221:     if(ts_system.timeSinalizationDigit<=0 )
  8584                           
  8585                           ;incstack = 0
  8586  008A3C  0101               	movlb	1	; () banked
  8587  008A3E  BFA9               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8588  008A40  D005               	goto	u13570
  8589  008A42  51A9               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8590  008A44  E112               	bnz	l3479
  8591  008A46  05A8               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8592  008A48  B0D8               	btfsc	status,0,c
  8593  008A4A  0012               	return	
  8594  008A4C                     u13570:
  8595                           
  8596                           ; BSR set to: 1
  8597                           ;sm_MenuConfiguration_MC50.c: 1222:     {;sm_MenuConfiguration_MC50.c: 1223:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8598  008A4C  0E00               	movlw	0
  8599  008A4E  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8600  008A50  0E02               	movlw	2
  8601  008A52  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8602                           
  8603                           ; BSR set to: 1
  8604                           ;sm_MenuConfiguration_MC50.c: 1224:         if(var_sys.StateMotor==InClose)
  8605  008A54  0E03               	movlw	3
  8606  008A56  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8607  008A58  A4D8               	btfss	status,2,c
  8608  008A5A  D004               	goto	l13797
  8609                           
  8610                           ; BSR set to: 1
  8611                           ;sm_MenuConfiguration_MC50.c: 1225:         {;sm_MenuConfiguration_MC50.c: 1226:        
      +                               SetSegmentValueLearn(Left);
  8612  008A5C  0E00               	movlw	0
  8613  008A5E  ECB9  F034         	call	_SetSegmentValueLearn
  8614                           
  8615                           ;sm_MenuConfiguration_MC50.c: 1227:         }
  8616  008A62  0012               	return	
  8617  008A64                     l13797:
  8618                           
  8619                           ; BSR set to: 1
  8620                           ;sm_MenuConfiguration_MC50.c: 1229:         {;sm_MenuConfiguration_MC50.c: 1230:        
      +                               SetSegmentValueLearn(Rigth);
  8621  008A64  0E01               	movlw	1
  8622  008A66  ECB9  F034         	call	_SetSegmentValueLearn
  8623  008A6A                     l3479:
  8624  008A6A  0012               	return		;funcret
  8625  008A6C                     __end_of_controlLearnDigit:
  8626                           	callstack 0
  8627                           
  8628 ;; *************** function _SetSegmentValueLearn *****************
  8629 ;; Defined at:
  8630 ;;		line 124 in file "outputs_MC50.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;  direction       1    wreg     enum E10602
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;  direction       1   17[COMRAM] enum E10602
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  1    wreg      void 
  8637 ;; Registers used:
  8638 ;;		wreg, status,2, status,0
  8639 ;; Tracked objects:
  8640 ;;		On entry : 3F/1
  8641 ;;		On exit  : 3F/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8646 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8647 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8648 ;;Total ram usage:        3 bytes
  8649 ;; Hardware stack levels used: 1
  8650 ;; Hardware stack levels required when called: 4
  8651 ;; This function calls:
  8652 ;;		Nothing
  8653 ;; This function is called by:
  8654 ;;		_controlLearnDigit
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           	psect	text18
  8659  006972                     __ptext18:
  8660                           	callstack 0
  8661  006972                     _SetSegmentValueLearn:
  8662                           	callstack 23
  8663                           
  8664                           ;incstack = 0
  8665                           ;SetSegmentValueLearn@direction stored from wreg
  8666  006972  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8667                           
  8668                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8669  006974  0E00               	movlw	0
  8670  006976  0100               	movlb	0	; () banked
  8671  006978  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8672  00697A  0E00               	movlw	0
  8673  00697C  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8674                           
  8675                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8676  00697E  0E00               	movlw	0
  8677  006980  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8678                           
  8679                           ;outputs_MC50.c: 128:     switch (direction)
  8680  006982  D066               	goto	l12265
  8681  006984                     l12211:
  8682                           
  8683                           ; BSR set to: 0
  8684                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8685  006984  0E1A               	movlw	26
  8686  006986  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8687  006988  A4D8               	btfss	status,2,c
  8688  00698A  D009               	goto	l12217
  8689                           
  8690                           ; BSR set to: 0
  8691  00698C  0E20               	movlw	32
  8692  00698E  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8693  006990  A4D8               	btfss	status,2,c
  8694  006992  D005               	goto	l12217
  8695                           
  8696                           ; BSR set to: 0
  8697                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8698  006994  0E20               	movlw	32
  8699  006996  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8700                           
  8701                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8702  006998  0E1A               	movlw	26
  8703  00699A  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8704                           
  8705                           ;outputs_MC50.c: 135:             }
  8706  00699C  0012               	return	
  8707  00699E                     l12217:
  8708                           
  8709                           ; BSR set to: 0
  8710  00699E  0E20               	movlw	32
  8711  0069A0  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8712  0069A2  A4D8               	btfss	status,2,c
  8713  0069A4  D009               	goto	l12223
  8714                           
  8715                           ; BSR set to: 0
  8716  0069A6  0E1D               	movlw	29
  8717  0069A8  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8718  0069AA  A4D8               	btfss	status,2,c
  8719  0069AC  D005               	goto	l12223
  8720                           
  8721                           ; BSR set to: 0
  8722                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8723  0069AE  0E1D               	movlw	29
  8724  0069B0  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8725                           
  8726                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8727  0069B2  0E20               	movlw	32
  8728  0069B4  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8729                           
  8730                           ;outputs_MC50.c: 140:             }
  8731  0069B6  0012               	return	
  8732  0069B8                     l12223:
  8733                           
  8734                           ; BSR set to: 0
  8735  0069B8  0E1F               	movlw	31
  8736  0069BA  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8737  0069BC  A4D8               	btfss	status,2,c
  8738  0069BE  D005               	goto	l12227
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8742  0069C0  0E1A               	movlw	26
  8743  0069C2  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8744                           
  8745                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8746  0069C4  0E20               	movlw	32
  8747  0069C6  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8748                           
  8749                           ;outputs_MC50.c: 145:             }
  8750  0069C8  0012               	return	
  8751  0069CA                     l12227:
  8752                           
  8753                           ; BSR set to: 0
  8754  0069CA  0E20               	movlw	32
  8755  0069CC  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8756  0069CE  A4D8               	btfss	status,2,c
  8757  0069D0  D002               	goto	l12231
  8758                           
  8759                           ; BSR set to: 0
  8760                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8761  0069D2  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8762                           
  8763                           ;outputs_MC50.c: 149:             }
  8764  0069D4  0012               	return	
  8765  0069D6                     l12231:
  8766                           
  8767                           ; BSR set to: 0
  8768  0069D6  0E20               	movlw	32
  8769  0069D8  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8770  0069DA  A4D8               	btfss	status,2,c
  8771  0069DC  D002               	goto	l12235
  8772                           
  8773                           ; BSR set to: 0
  8774                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8775  0069DE  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8776                           
  8777                           ;outputs_MC50.c: 153:             }
  8778  0069E0  0012               	return	
  8779  0069E2                     l12235:
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8783  0069E2  0E1A               	movlw	26
  8784  0069E4  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8785                           
  8786                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8787  0069E6  0E20               	movlw	32
  8788  0069E8  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8789  0069EA  0012               	return	
  8790  0069EC                     l12237:
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8794  0069EC  0E1A               	movlw	26
  8795  0069EE  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8796  0069F0  A4D8               	btfss	status,2,c
  8797  0069F2  D009               	goto	l12243
  8798                           
  8799                           ; BSR set to: 0
  8800  0069F4  0E20               	movlw	32
  8801  0069F6  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8802  0069F8  A4D8               	btfss	status,2,c
  8803  0069FA  D005               	goto	l12243
  8804                           
  8805                           ; BSR set to: 0
  8806                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8807  0069FC  0E1A               	movlw	26
  8808  0069FE  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8809                           
  8810                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8811  006A00  0E20               	movlw	32
  8812  006A02  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8813                           
  8814                           ;outputs_MC50.c: 165:             }
  8815  006A04  0012               	return	
  8816  006A06                     l12243:
  8817                           
  8818                           ; BSR set to: 0
  8819  006A06  0E20               	movlw	32
  8820  006A08  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8821  006A0A  A4D8               	btfss	status,2,c
  8822  006A0C  D009               	goto	l12249
  8823                           
  8824                           ; BSR set to: 0
  8825  006A0E  0E1D               	movlw	29
  8826  006A10  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8827  006A12  A4D8               	btfss	status,2,c
  8828  006A14  D005               	goto	l12249
  8829                           
  8830                           ; BSR set to: 0
  8831                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8832  006A16  0E20               	movlw	32
  8833  006A18  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8834                           
  8835                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8836  006A1A  0E1D               	movlw	29
  8837  006A1C  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8838                           
  8839                           ;outputs_MC50.c: 170:             }
  8840  006A1E  0012               	return	
  8841  006A20                     l12249:
  8842                           
  8843                           ; BSR set to: 0
  8844  006A20  0E1A               	movlw	26
  8845  006A22  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8846  006A24  A4D8               	btfss	status,2,c
  8847  006A26  D003               	goto	l12253
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8851  006A28  0E1F               	movlw	31
  8852  006A2A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8853                           
  8854                           ;outputs_MC50.c: 174:             }
  8855  006A2C  0012               	return	
  8856  006A2E                     l12253:
  8857                           
  8858                           ; BSR set to: 0
  8859  006A2E  0E20               	movlw	32
  8860  006A30  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8861  006A32  A4D8               	btfss	status,2,c
  8862  006A34  D002               	goto	l12257
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8866  006A36  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8867                           
  8868                           ;outputs_MC50.c: 178:             }
  8869  006A38  0012               	return	
  8870  006A3A                     l12257:
  8871                           
  8872                           ; BSR set to: 0
  8873  006A3A  0E20               	movlw	32
  8874  006A3C  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8875  006A3E  A4D8               	btfss	status,2,c
  8876  006A40  D002               	goto	l12261
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8880  006A42  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8881                           
  8882                           ;outputs_MC50.c: 182:             }
  8883  006A44  0012               	return	
  8884  006A46                     l12261:
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8888  006A46  0E1A               	movlw	26
  8889  006A48  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8890                           
  8891                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8892  006A4A  0E20               	movlw	32
  8893  006A4C  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8894  006A4E  0012               	return	
  8895  006A50                     l12265:
  8896                           
  8897                           ; BSR set to: 0
  8898  006A50  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8899  006A52  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8900  006A54  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8901                           
  8902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8903                           ; Switch size 1, requested type "simple"
  8904                           ; Number of cases is 1, Range of values is 0 to 0
  8905                           ; switch strategies available:
  8906                           ; Name         Instructions Cycles
  8907                           ; simple_byte            4     3 (average)
  8908                           ;	Chosen strategy is simple_byte
  8909  006A56  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8910  006A58  0A00               	xorlw	0	; case 0
  8911  006A5A  A4D8               	btfss	status,2,c
  8912  006A5C  0012               	return	
  8913                           
  8914                           ; BSR set to: 0
  8915                           ; Switch size 1, requested type "simple"
  8916                           ; Number of cases is 2, Range of values is 0 to 1
  8917                           ; switch strategies available:
  8918                           ; Name         Instructions Cycles
  8919                           ; simple_byte            7     4 (average)
  8920                           ;	Chosen strategy is simple_byte
  8921  006A5E  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8922  006A60  0A00               	xorlw	0	; case 0
  8923  006A62  B4D8               	btfsc	status,2,c
  8924  006A64  D7C3               	goto	l12237
  8925  006A66  0A01               	xorlw	1	; case 1
  8926  006A68  A4D8               	btfss	status,2,c
  8927  006A6A  0012               	return	
  8928  006A6C  D78B               	goto	l12211
  8929  006A6E                     __end_of_SetSegmentValueLearn:
  8930                           	callstack 0
  8931                           
  8932 ;; *************** function ___lldiv *****************
  8933 ;; Defined at:
  8934 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;  dividend        4   15[COMRAM] unsigned long 
  8937 ;;  divisor         4   19[COMRAM] unsigned long 
  8938 ;; Auto vars:     Size  Location     Type
  8939 ;;  quotient        4   23[COMRAM] unsigned long 
  8940 ;;  counter         1   27[COMRAM] unsigned char 
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  4   15[COMRAM] unsigned long 
  8943 ;; Registers used:
  8944 ;;		wreg, status,2, status,0
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/1
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8950 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8951 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8953 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8954 ;;Total ram usage:       13 bytes
  8955 ;; Hardware stack levels used: 1
  8956 ;; Hardware stack levels required when called: 4
  8957 ;; This function calls:
  8958 ;;		Nothing
  8959 ;; This function is called by:
  8960 ;;		_sm_execute_menuConfiguration
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           	psect	text19
  8965  0079A6                     __ptext19:
  8966                           	callstack 0
  8967  0079A6                     ___lldiv:
  8968                           	callstack 24
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;incstack = 0
  8972  0079A6  0E00               	movlw	0
  8973  0079A8  6E18               	movwf	___lldiv@quotient^0,c
  8974  0079AA  0E00               	movlw	0
  8975  0079AC  6E19               	movwf	(___lldiv@quotient+1)^0,c
  8976  0079AE  0E00               	movlw	0
  8977  0079B0  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  8978  0079B2  0E00               	movlw	0
  8979  0079B4  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  8980  0079B6  5014               	movf	___lldiv@divisor^0,w,c
  8981  0079B8  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  8982  0079BA  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  8983  0079BC  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  8984  0079BE  B4D8               	btfsc	status,2,c
  8985  0079C0  D02A               	goto	l3665
  8986  0079C2  0E01               	movlw	1
  8987  0079C4  6E1C               	movwf	___lldiv@counter^0,c
  8988  0079C6  D006               	goto	l13815
  8989  0079C8                     l13813:
  8990  0079C8  90D8               	bcf	status,0,c
  8991  0079CA  3614               	rlcf	___lldiv@divisor^0,f,c
  8992  0079CC  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  8993  0079CE  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  8994  0079D0  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  8995  0079D2  2A1C               	incf	___lldiv@counter^0,f,c
  8996  0079D4                     l13815:
  8997  0079D4  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  8998  0079D6  D7F8               	goto	l13813
  8999  0079D8                     u13610:
  9000  0079D8  90D8               	bcf	status,0,c
  9001  0079DA  3618               	rlcf	___lldiv@quotient^0,f,c
  9002  0079DC  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  9003  0079DE  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  9004  0079E0  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  9005  0079E2  5014               	movf	___lldiv@divisor^0,w,c
  9006  0079E4  5C10               	subwf	___lldiv@dividend^0,w,c
  9007  0079E6  5015               	movf	(___lldiv@divisor+1)^0,w,c
  9008  0079E8  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  9009  0079EA  5016               	movf	(___lldiv@divisor+2)^0,w,c
  9010  0079EC  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  9011  0079EE  5017               	movf	(___lldiv@divisor+3)^0,w,c
  9012  0079F0  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  9013  0079F2  A0D8               	btfss	status,0,c
  9014  0079F4  D009               	goto	l13825
  9015  0079F6  5014               	movf	___lldiv@divisor^0,w,c
  9016  0079F8  5E10               	subwf	___lldiv@dividend^0,f,c
  9017  0079FA  5015               	movf	(___lldiv@divisor+1)^0,w,c
  9018  0079FC  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  9019  0079FE  5016               	movf	(___lldiv@divisor+2)^0,w,c
  9020  007A00  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  9021  007A02  5017               	movf	(___lldiv@divisor+3)^0,w,c
  9022  007A04  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  9023  007A06  8018               	bsf	___lldiv@quotient^0,0,c
  9024  007A08                     l13825:
  9025  007A08  90D8               	bcf	status,0,c
  9026  007A0A  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  9027  007A0C  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  9028  007A0E  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  9029  007A10  3214               	rrcf	___lldiv@divisor^0,f,c
  9030  007A12  2E1C               	decfsz	___lldiv@counter^0,f,c
  9031  007A14  D7E1               	goto	u13610
  9032  007A16                     l3665:
  9033  007A16  C018  F010         	movff	___lldiv@quotient,?___lldiv
  9034  007A1A  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  9035  007A1E  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  9036  007A22  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  9037  007A26  0012               	return		;funcret
  9038  007A28                     __end_of___lldiv:
  9039                           	callstack 0
  9040                           
  9041 ;; *************** function _sm_execute_ControlGate *****************
  9042 ;; Defined at:
  9043 ;;		line 128 in file "sm_ControlGate_MC50.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;  psm             2   15[BANK0 ] PTR struct .
  9046 ;;		 -> controlGate_stateMachine(11), 
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  1    wreg      void 
  9051 ;; Registers used:
  9052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9053 ;; Tracked objects:
  9054 ;;		On entry : 3F/0
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9058 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9059 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9060 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9061 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9062 ;;Total ram usage:        5 bytes
  9063 ;; Hardware stack levels used: 1
  9064 ;; Hardware stack levels required when called: 15
  9065 ;; This function calls:
  9066 ;;		_GetOpenOrder
  9067 ;;		_SetSegmentValueIntermitent
  9068 ;;		_WaitPreFlash
  9069 ;;		_actionZone_Closed
  9070 ;;		_actionZone_Closing
  9071 ;;		_actionZone_Opened
  9072 ;;		_actionZone_Opening
  9073 ;;		_sm_execute_ControlLearning
  9074 ;;		_sm_send_event
  9075 ;; This function is called by:
  9076 ;;		_main
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text20
  9081  003606                     __ptext20:
  9082                           	callstack 0
  9083  003606                     _sm_execute_ControlGate:
  9084                           	callstack 15
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  9088                           
  9089                           ;incstack = 0
  9090  003606  0101               	movlb	1	; () banked
  9091  003608  05EF               	decf	_main_stateMachine& (0+255),w,b
  9092  00360A  11F0               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  9093  00360C  A4D8               	btfss	status,2,c
  9094  00360E  D006               	goto	l23043
  9095                           
  9096                           ; BSR set to: 1
  9097  003610  0E06               	movlw	6
  9098  003612  0102               	movlb	2	; () banked
  9099  003614  19BB               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  9100  003616  11BC               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  9101  003618  A4D8               	btfss	status,2,c
  9102  00361A  0012               	return	
  9103  00361C                     l23043:
  9104                           
  9105                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  9106  00361C  0101               	movlb	1	; () banked
  9107  00361E  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  9108  003620  A4D8               	btfss	status,2,c
  9109  003622  D0CE               	goto	l23117
  9110                           
  9111                           ; BSR set to: 1
  9112                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  9113  003624  EC33  F03F         	call	_WaitPreFlash	;wreg free
  9114  003628  D0CB               	goto	l23117
  9115  00362A                     l23047:
  9116                           
  9117                           ; BSR set to: 0
  9118                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  9119  00362A  EE20 F004          	lfsr	2,4
  9120  00362E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9121  003630  26D9               	addwf	fsr2l,f,c
  9122  003632  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9123  003634  22DA               	addwfc	fsr2h,f,c
  9124  003636  0E0A               	movlw	10
  9125  003638  18DE               	xorwf	postinc2,w,c
  9126  00363A  10DE               	iorwf	postinc2,w,c
  9127  00363C  A4D8               	btfss	status,2,c
  9128  00363E  D006               	goto	l23051
  9129  003640                     u28440:
  9130                           
  9131                           ; BSR set to: 0
  9132                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  9133  003640  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9134  003644  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9135  003648  0E01               	movlw	1
  9136  00364A  D0B5               	goto	L55
  9137  00364C                     l23051:
  9138                           
  9139                           ; BSR set to: 0
  9140  00364C  EE20 F004          	lfsr	2,4
  9141  003650  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9142  003652  26D9               	addwf	fsr2l,f,c
  9143  003654  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9144  003656  22DA               	addwfc	fsr2h,f,c
  9145  003658  0E0B               	movlw	11
  9146  00365A  18DE               	xorwf	postinc2,w,c
  9147  00365C  10DE               	iorwf	postinc2,w,c
  9148  00365E  A4D8               	btfss	status,2,c
  9149  003660  D0CF               	goto	l23119
  9150  003662  D038               	goto	u28510
  9151  003664                     l23055:
  9152                           
  9153                           ; BSR set to: 0
  9154                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  9155  003664  EE20 F004          	lfsr	2,4
  9156  003668  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9157  00366A  26D9               	addwf	fsr2l,f,c
  9158  00366C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9159  00366E  22DA               	addwfc	fsr2h,f,c
  9160  003670  0E0C               	movlw	12
  9161  003672  18DE               	xorwf	postinc2,w,c
  9162  003674  10DE               	iorwf	postinc2,w,c
  9163  003676  A4D8               	btfss	status,2,c
  9164  003678  D072               	goto	l23103
  9165  00367A                     u28460:
  9166                           
  9167                           ; BSR set to: 0
  9168                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  9169  00367A  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9170  00367E  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9171  003682  0E02               	movlw	2
  9172  003684  D098               	goto	L55
  9173  003686                     l23063:
  9174                           
  9175                           ; BSR set to: 0
  9176                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  9177  003686  EE20 F004          	lfsr	2,4
  9178  00368A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9179  00368C  26D9               	addwf	fsr2l,f,c
  9180  00368E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9181  003690  22DA               	addwfc	fsr2h,f,c
  9182  003692  0E0D               	movlw	13
  9183  003694  18DE               	xorwf	postinc2,w,c
  9184  003696  10DE               	iorwf	postinc2,w,c
  9185  003698  B4D8               	btfsc	status,2,c
  9186  00369A  D01C               	goto	u28510
  9187                           
  9188                           ; BSR set to: 0
  9189                           
  9190                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9194  00369C  EE20 F004          	lfsr	2,4
  9195  0036A0  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9196  0036A2  26D9               	addwf	fsr2l,f,c
  9197  0036A4  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9198  0036A6  22DA               	addwfc	fsr2h,f,c
  9199  0036A8  0E0E               	movlw	14
  9200  0036AA  18DE               	xorwf	postinc2,w,c
  9201  0036AC  10DE               	iorwf	postinc2,w,c
  9202  0036AE  A4D8               	btfss	status,2,c
  9203  0036B0  D02D               	goto	L129
  9204  0036B2                     u28490:
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9208  0036B2  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9209  0036B6  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9210  0036BA  0E03               	movlw	3
  9211  0036BC  D07C               	goto	L55
  9212  0036BE                     l23075:
  9213                           
  9214                           ; BSR set to: 0
  9215                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9216  0036BE  EE20 F004          	lfsr	2,4
  9217  0036C2  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9218  0036C4  26D9               	addwf	fsr2l,f,c
  9219  0036C6  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9220  0036C8  22DA               	addwfc	fsr2h,f,c
  9221  0036CA  0E0D               	movlw	13
  9222  0036CC  18DE               	xorwf	postinc2,w,c
  9223  0036CE  10DE               	iorwf	postinc2,w,c
  9224  0036D0  A4D8               	btfss	status,2,c
  9225  0036D2  D006               	goto	l23079
  9226  0036D4                     u28510:
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9230  0036D4  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9231  0036D8  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9232  0036DC  0E04               	movlw	4
  9233  0036DE  D06B               	goto	L55
  9234  0036E0                     l23079:
  9235                           
  9236                           ; BSR set to: 0
  9237  0036E0  EE20 F004          	lfsr	2,4
  9238  0036E4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9239  0036E6  26D9               	addwf	fsr2l,f,c
  9240  0036E8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9241  0036EA  22DA               	addwfc	fsr2h,f,c
  9242  0036EC  0E0F               	movlw	15
  9243  0036EE  18DE               	xorwf	postinc2,w,c
  9244  0036F0  10DE               	iorwf	postinc2,w,c
  9245  0036F2  B4D8               	btfsc	status,2,c
  9246  0036F4  D7A5               	goto	u28440
  9247                           
  9248                           ; BSR set to: 0
  9249                           
  9250                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9251                           
  9252                           ; BSR set to: 0
  9253                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9254  0036F6  EE20 F004          	lfsr	2,4
  9255  0036FA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9256  0036FC  26D9               	addwf	fsr2l,f,c
  9257  0036FE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9258  003700  22DA               	addwfc	fsr2h,f,c
  9259  003702  0E0C               	movlw	12
  9260  003704  18DE               	xorwf	postinc2,w,c
  9261  003706  10DE               	iorwf	postinc2,w,c
  9262  003708  B4D8               	btfsc	status,2,c
  9263  00370A  D7B7               	goto	u28460
  9264  00370C                     L129:
  9265                           
  9266                           ; BSR set to: 0
  9267                           
  9268                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9272  00370C  EE20 F004          	lfsr	2,4
  9273  003710  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9274  003712  26D9               	addwf	fsr2l,f,c
  9275  003714  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9276  003716  22DA               	addwfc	fsr2h,f,c
  9277  003718  0E10               	movlw	16
  9278  00371A  D044               	goto	L126
  9279  00371C                     l23091:
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9283  00371C  EE20 F004          	lfsr	2,4
  9284  003720  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9285  003722  26D9               	addwf	fsr2l,f,c
  9286  003724  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9287  003726  22DA               	addwfc	fsr2h,f,c
  9288  003728  0E0E               	movlw	14
  9289  00372A  18DE               	xorwf	postinc2,w,c
  9290  00372C  10DE               	iorwf	postinc2,w,c
  9291  00372E  B4D8               	btfsc	status,2,c
  9292  003730  D7C0               	goto	u28490
  9293                           
  9294                           ; BSR set to: 0
  9295                           
  9296                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9300  003732  EE20 F004          	lfsr	2,4
  9301  003736  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9302  003738  26D9               	addwf	fsr2l,f,c
  9303  00373A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9304  00373C  22DA               	addwfc	fsr2h,f,c
  9305  00373E  0E0C               	movlw	12
  9306  003740  18DE               	xorwf	postinc2,w,c
  9307  003742  10DE               	iorwf	postinc2,w,c
  9308  003744  B4D8               	btfsc	status,2,c
  9309  003746  D799               	goto	u28460
  9310                           
  9311                           ; BSR set to: 0
  9312                           
  9313                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9314                           
  9315                           ; BSR set to: 0
  9316                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9317  003748  EE20 F004          	lfsr	2,4
  9318  00374C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9319  00374E  26D9               	addwf	fsr2l,f,c
  9320  003750  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9321  003752  22DA               	addwfc	fsr2h,f,c
  9322  003754  0E10               	movlw	16
  9323  003756  18DE               	xorwf	postinc2,w,c
  9324  003758  10DE               	iorwf	postinc2,w,c
  9325  00375A  B4D8               	btfsc	status,2,c
  9326  00375C  D027               	goto	L127
  9327  00375E                     l23103:
  9328                           
  9329                           ; BSR set to: 0
  9330  00375E  EE20 F004          	lfsr	2,4
  9331  003762  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9332  003764  26D9               	addwf	fsr2l,f,c
  9333  003766  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9334  003768  22DA               	addwfc	fsr2h,f,c
  9335  00376A  0E14               	movlw	20
  9336  00376C  18DE               	xorwf	postinc2,w,c
  9337  00376E  10DE               	iorwf	postinc2,w,c
  9338  003770  A4D8               	btfss	status,2,c
  9339  003772  D046               	goto	l23119
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9343  003774  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9344  003778  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9345  00377C  0E05               	movlw	5
  9346  00377E  D01B               	goto	L55
  9347  003780                     l23107:
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9351  003780  EE20 F004          	lfsr	2,4
  9352  003784  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9353  003786  26D9               	addwf	fsr2l,f,c
  9354  003788  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9355  00378A  22DA               	addwfc	fsr2h,f,c
  9356  00378C  0E13               	movlw	19
  9357  00378E  18DE               	xorwf	postinc2,w,c
  9358  003790  10DE               	iorwf	postinc2,w,c
  9359  003792  B4D8               	btfsc	status,2,c
  9360  003794  D755               	goto	u28440
  9361                           
  9362                           ; BSR set to: 0
  9363                           
  9364                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9368  003796  EE20 F004          	lfsr	2,4
  9369  00379A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9370  00379C  26D9               	addwf	fsr2l,f,c
  9371  00379E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9372  0037A0  22DA               	addwfc	fsr2h,f,c
  9373  0037A2  0E12               	movlw	18
  9374  0037A4                     L126:
  9375  0037A4  18DE               	xorwf	postinc2,w,c
  9376  0037A6  10DE               	iorwf	postinc2,w,c
  9377  0037A8  A4D8               	btfss	status,2,c
  9378  0037AA  D02A               	goto	l23119
  9379  0037AC                     L127:
  9380                           
  9381                           ; BSR set to: 0
  9382                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9383  0037AC  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9384  0037B0  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9385  0037B4  0E00               	movlw	0
  9386  0037B6                     L55:
  9387  0037B6  6EDE               	movwf	postinc2,c
  9388  0037B8  0E00               	movlw	0
  9389  0037BA  6EDD               	movwf	postdec2,c
  9390  0037BC  D021               	goto	l23119
  9391  0037BE                     l2648:
  9392                           
  9393                           ; BSR set to: 0
  9394  0037BE  D7FF               	goto	l2648
  9395  0037C0                     l23117:
  9396                           
  9397                           ; BSR set to: 1
  9398  0037C0  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9399  0037C4  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9400  0037C8  50DF               	movf	indf2,w,c
  9401  0037CA  0100               	movlb	0	; () banked
  9402  0037CC  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9403  0037CE  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9404                           
  9405                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9406                           ; Switch size 1, requested type "simple"
  9407                           ; Number of cases is 1, Range of values is 0 to 0
  9408                           ; switch strategies available:
  9409                           ; Name         Instructions Cycles
  9410                           ; simple_byte            4     3 (average)
  9411                           ;	Chosen strategy is simple_byte
  9412  0037D0  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9413  0037D2  0A00               	xorlw	0	; case 0
  9414  0037D4  A4D8               	btfss	status,2,c
  9415  0037D6  D7F3               	goto	l2648
  9416                           
  9417                           ; BSR set to: 0
  9418                           ; Switch size 1, requested type "simple"
  9419                           ; Number of cases is 6, Range of values is 0 to 5
  9420                           ; switch strategies available:
  9421                           ; Name         Instructions Cycles
  9422                           ; simple_byte           19    10 (average)
  9423                           ;	Chosen strategy is simple_byte
  9424  0037D8  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9425  0037DA  0A00               	xorlw	0	; case 0
  9426  0037DC  B4D8               	btfsc	status,2,c
  9427  0037DE  D725               	goto	l23047
  9428  0037E0  0A01               	xorlw	1	; case 1
  9429  0037E2  B4D8               	btfsc	status,2,c
  9430  0037E4  D73F               	goto	l23055
  9431  0037E6  0A03               	xorlw	3	; case 2
  9432  0037E8  B4D8               	btfsc	status,2,c
  9433  0037EA  D74D               	goto	l23063
  9434  0037EC  0A01               	xorlw	1	; case 3
  9435  0037EE  B4D8               	btfsc	status,2,c
  9436  0037F0  D766               	goto	l23075
  9437  0037F2  0A07               	xorlw	7	; case 4
  9438  0037F4  B4D8               	btfsc	status,2,c
  9439  0037F6  D792               	goto	l23091
  9440  0037F8  0A01               	xorlw	1	; case 5
  9441  0037FA  B4D8               	btfsc	status,2,c
  9442  0037FC  D7C1               	goto	l23107
  9443  0037FE  D7DF               	goto	l2648
  9444  003800                     l23119:
  9445                           
  9446                           ; BSR set to: 0
  9447                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9448  003800  0EE4               	movlw	low _controlGate_stateMachine
  9449  003802  6E12               	movwf	sm_send_event@psm^0,c
  9450  003804  0E01               	movlw	high _controlGate_stateMachine
  9451  003806  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9452  003808  0E00               	movlw	0
  9453  00380A  6E15               	movwf	(sm_send_event@event+1)^0,c
  9454  00380C  0E00               	movlw	0
  9455  00380E  6E14               	movwf	sm_send_event@event^0,c
  9456  003810  ECD6  F040         	call	_sm_send_event	;wreg free
  9457                           
  9458                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9459  003814  D07D               	goto	l23183
  9460  003816                     l23121:
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9464  003816  0E00               	movlw	0
  9465  003818  0101               	movlb	1	; () banked
  9466  00381A  6FDB               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9467  00381C  0E64               	movlw	100
  9468  00381E  6FDA               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9469                           
  9470                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9471  003820  0E01               	movlw	1
  9472  003822  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9473                           
  9474                           ; BSR set to: 1
  9475                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9476  003824  0E02               	movlw	2
  9477  003826  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9478  003828  B4D8               	btfsc	status,2,c
  9479  00382A  D003               	goto	u28620
  9480                           
  9481                           ; BSR set to: 1
  9482  00382C  0E03               	movlw	3
  9483  00382E  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9484  003830  D027               	goto	l23143
  9485  003832                     u28620:
  9486                           
  9487                           ; BSR set to: 1
  9488                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9489  003832  EC85  F028         	call	_GetOpenOrder	;wreg free
  9490  003836  0100               	movlb	0	; () banked
  9491  003838  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9492                           
  9493                           ; BSR set to: 0
  9494                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9495  00383A  0E14               	movlw	20
  9496  00383C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9497  00383E  0E00               	movlw	0
  9498  003840  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9499  003842  0E14               	movlw	20
  9500  003844  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9501  003846  0E0E               	movlw	14
  9502  003848  EC4D  F045         	call	_SetSegmentValueIntermitent
  9503                           
  9504                           ; BSR set to: 1
  9505                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9506  00384C  0E00               	movlw	0
  9507  00384E  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9508  003850  0E0A               	movlw	10
  9509  003852  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9510                           
  9511                           ; BSR set to: 1
  9512                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9513  003854  0100               	movlb	0	; () banked
  9514  003856  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9515  003858  A4D8               	btfss	status,2,c
  9516  00385A  D00A               	goto	u28660
  9517                           
  9518                           ; BSR set to: 0
  9519  00385C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9520  00385E  B4D8               	btfsc	status,2,c
  9521  003860  D007               	goto	u28660
  9522                           
  9523                           ; BSR set to: 0
  9524  003862  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9525  003864  B4D8               	btfsc	status,2,c
  9526  003866  D004               	goto	u28660
  9527                           
  9528                           ; BSR set to: 0
  9529  003868  0E17               	movlw	23
  9530  00386A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9531  00386C  A4D8               	btfss	status,2,c
  9532  00386E  0012               	return	
  9533  003870                     u28660:
  9534                           
  9535                           ; BSR set to: 0
  9536                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9537  003870  0E00               	movlw	0
  9538  003872  0101               	movlb	1	; () banked
  9539  003874  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9540                           
  9541                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9542  003876  0E00               	movlw	0
  9543  003878  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9544                           
  9545                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9546  00387A  0E01               	movlw	1
  9547  00387C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9548  00387E  0012               	return	
  9549  003880                     l23143:
  9550                           
  9551                           ; BSR set to: 1
  9552                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9553  003880  0E01               	movlw	1
  9554  003882  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9555                           
  9556                           ; BSR set to: 1
  9557                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9558  003884  0E01               	movlw	1
  9559  003886  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9560  003888  0E00               	movlw	0
  9561  00388A  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9562  00388C  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9563  00388E  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9564                           
  9565                           ; BSR set to: 1
  9566                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9567  003890  0E00               	movlw	0
  9568  003892  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9569                           
  9570                           ; BSR set to: 1
  9571                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9572  003894  0E00               	movlw	0
  9573  003896  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9574  003898  0E00               	movlw	0
  9575  00389A  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9576  00389C  0E00               	movlw	0
  9577  00389E  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9578  0038A0  0E00               	movlw	0
  9579  0038A2  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9580                           
  9581                           ; BSR set to: 1
  9582                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9583  0038A4  0E00               	movlw	0
  9584  0038A6  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9585                           
  9586                           ; BSR set to: 1
  9587                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9588  0038A8  0E00               	movlw	0
  9589  0038AA  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9590                           
  9591                           ; BSR set to: 1
  9592                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9593  0038AC  0E00               	movlw	0
  9594  0038AE  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9595                           
  9596                           ; BSR set to: 1
  9597                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9598  0038B0  0E00               	movlw	0
  9599  0038B2  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9600  0038B4  0E28               	movlw	40
  9601  0038B6  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9602                           
  9603                           ; BSR set to: 1
  9604                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9605  0038B8  0E0C               	movlw	12
  9606  0038BA  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9607  0038BC  0E00               	movlw	0
  9608  0038BE  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9609  0038C0  0E04               	movlw	4
  9610  0038C2  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9611  0038C4  0E0F               	movlw	15
  9612  0038C6  EC4D  F045         	call	_SetSegmentValueIntermitent
  9613                           
  9614                           ; BSR set to: 1
  9615                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9616  0038CA  0EE4               	movlw	low _controlGate_stateMachine
  9617  0038CC  6E12               	movwf	sm_send_event@psm^0,c
  9618  0038CE  0E01               	movlw	high _controlGate_stateMachine
  9619  0038D0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9620  0038D2  0E00               	movlw	0
  9621  0038D4  6E15               	movwf	(sm_send_event@event+1)^0,c
  9622  0038D6  0E0A               	movlw	10
  9623  0038D8  6E14               	movwf	sm_send_event@event^0,c
  9624  0038DA  ECD6  F040         	call	_sm_send_event	;wreg free
  9625  0038DE  0012               	return	
  9626  0038E0                     l23163:
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9630  0038E0  EC82  F038         	call	_actionZone_Closed	;wreg free
  9631                           
  9632                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9633  0038E4  0012               	return	
  9634  0038E6                     l23165:
  9635                           
  9636                           ; BSR set to: 0
  9637                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9638  0038E6  EC36  F022         	call	_actionZone_Opening	;wreg free
  9639  0038EA                     l23167:
  9640                           
  9641                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9642  0038EA  0E00               	movlw	0
  9643  0038EC  0101               	movlb	1	; () banked
  9644  0038EE  6FDB               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9645  0038F0  0E64               	movlw	100
  9646  0038F2  6FDA               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9647                           
  9648                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9649  0038F4  0012               	return	
  9650  0038F6                     l23169:
  9651                           
  9652                           ; BSR set to: 0
  9653                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9654  0038F6  ECA5  F026         	call	_actionZone_Opened	;wreg free
  9655  0038FA  D7F7               	goto	l23167
  9656  0038FC                     l23173:
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9660  0038FC  ECB5  F01F         	call	_actionZone_Closing	;wreg free
  9661  003900  D7F4               	goto	l23167
  9662  003902                     l23177:
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9666  003902  0EB0               	movlw	low _controlLearning_stateMachine
  9667  003904  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9668  003906  0E02               	movlw	high _controlLearning_stateMachine
  9669  003908  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9670  00390A  EC3B  F00C         	call	_sm_execute_ControlLearning	;wreg free
  9671  00390E  D7ED               	goto	l23167
  9672  003910                     l23183:
  9673  003910  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9674  003914  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9675  003918  50DF               	movf	indf2,w,c
  9676  00391A  0100               	movlb	0	; () banked
  9677  00391C  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9678  00391E  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9679                           
  9680                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9681                           ; Switch size 1, requested type "simple"
  9682                           ; Number of cases is 1, Range of values is 0 to 0
  9683                           ; switch strategies available:
  9684                           ; Name         Instructions Cycles
  9685                           ; simple_byte            4     3 (average)
  9686                           ;	Chosen strategy is simple_byte
  9687  003920  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9688  003922  0A00               	xorlw	0	; case 0
  9689  003924  A4D8               	btfss	status,2,c
  9690  003926  0012               	return	
  9691                           
  9692                           ; BSR set to: 0
  9693                           ; Switch size 1, requested type "simple"
  9694                           ; Number of cases is 6, Range of values is 0 to 5
  9695                           ; switch strategies available:
  9696                           ; Name         Instructions Cycles
  9697                           ; simple_byte           19    10 (average)
  9698                           ;	Chosen strategy is simple_byte
  9699  003928  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9700  00392A  0A00               	xorlw	0	; case 0
  9701  00392C  B4D8               	btfsc	status,2,c
  9702  00392E  D773               	goto	l23121
  9703  003930  0A01               	xorlw	1	; case 1
  9704  003932  B4D8               	btfsc	status,2,c
  9705  003934  D7D5               	goto	l23163
  9706  003936  0A03               	xorlw	3	; case 2
  9707  003938  B4D8               	btfsc	status,2,c
  9708  00393A  D7D5               	goto	l23165
  9709  00393C  0A01               	xorlw	1	; case 3
  9710  00393E  B4D8               	btfsc	status,2,c
  9711  003940  D7DD               	goto	l23173
  9712  003942  0A07               	xorlw	7	; case 4
  9713  003944  B4D8               	btfsc	status,2,c
  9714  003946  D7D7               	goto	l23169
  9715  003948  0A01               	xorlw	1	; case 5
  9716  00394A  A4D8               	btfss	status,2,c
  9717  00394C  0012               	return	
  9718  00394E  D7D9               	goto	l23177
  9719  003950                     __end_of_sm_execute_ControlGate:
  9720                           	callstack 0
  9721                           
  9722 ;; *************** function _sm_execute_ControlLearning *****************
  9723 ;; Defined at:
  9724 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;  psm             2    4[BANK0 ] PTR struct .
  9727 ;;		 -> controlLearning_stateMachine(11), 
  9728 ;; Auto vars:     Size  Location     Type
  9729 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9730 ;; Return value:  Size  Location     Type
  9731 ;;                  1    wreg      void 
  9732 ;; Registers used:
  9733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9734 ;; Tracked objects:
  9735 ;;		On entry : 3F/0
  9736 ;;		On exit  : 0/0
  9737 ;;		Unchanged: 0/0
  9738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9739 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9741 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9742 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9743 ;;Total ram usage:        5 bytes
  9744 ;; Hardware stack levels used: 1
  9745 ;; Hardware stack levels required when called: 14
  9746 ;; This function calls:
  9747 ;;		_GetOpenOrder
  9748 ;;		_SaveNVM_VarSystem
  9749 ;;		_calculateMean
  9750 ;;		_clearLearningValue
  9751 ;;		_generateErrorLearnig
  9752 ;;		_sm_send_event
  9753 ;; This function is called by:
  9754 ;;		_sm_execute_ControlGate
  9755 ;; This function uses a non-reentrant model
  9756 ;;
  9757                           
  9758                           	psect	text21
  9759  001876                     __ptext21:
  9760                           	callstack 0
  9761  001876                     _sm_execute_ControlLearning:
  9762                           	callstack 15
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9766                           
  9767                           ;incstack = 0
  9768  001876  EC85  F028         	call	_GetOpenOrder	;wreg free
  9769  00187A  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9770                           
  9771                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9772  00187C  D0B8               	goto	l21847
  9773  00187E                     l21773:
  9774                           
  9775                           ; BSR set to: 0
  9776                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9777  00187E  EE20 F004          	lfsr	2,4
  9778  001882  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9779  001884  26D9               	addwf	fsr2l,f,c
  9780  001886  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9781  001888  22DA               	addwfc	fsr2h,f,c
  9782  00188A  0E0A               	movlw	10
  9783  00188C  18DE               	xorwf	postinc2,w,c
  9784  00188E  10DE               	iorwf	postinc2,w,c
  9785  001890  A4D8               	btfss	status,2,c
  9786  001892  D00D               	goto	l21781
  9787                           
  9788                           ; BSR set to: 0
  9789  001894  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9790  001896  B4D8               	btfsc	status,2,c
  9791  001898  D00A               	goto	l21781
  9792                           
  9793                           ; BSR set to: 0
  9794  00189A  0101               	movlb	1	; () banked
  9795  00189C  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9796  00189E  A4D8               	btfss	status,2,c
  9797  0018A0  D006               	goto	l21781
  9798  0018A2                     u25770:
  9799                           
  9800                           ; BSR set to: 1
  9801                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9802  0018A2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9803  0018A6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9804  0018AA  0E02               	movlw	2
  9805  0018AC  D08A               	goto	L66
  9806  0018AE                     l21781:
  9807  0018AE  0100               	movlb	0	; () banked
  9808  0018B0  EE20 F004          	lfsr	2,4
  9809  0018B4  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9810  0018B6  26D9               	addwf	fsr2l,f,c
  9811  0018B8  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9812  0018BA  22DA               	addwfc	fsr2h,f,c
  9813  0018BC  0E0A               	movlw	10
  9814  0018BE  18DE               	xorwf	postinc2,w,c
  9815  0018C0  10DE               	iorwf	postinc2,w,c
  9816  0018C2  A4D8               	btfss	status,2,c
  9817  0018C4  D00D               	goto	l21789
  9818                           
  9819                           ; BSR set to: 0
  9820  0018C6  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9821  0018C8  B4D8               	btfsc	status,2,c
  9822  0018CA  D004               	goto	u25800
  9823                           
  9824                           ; BSR set to: 0
  9825  0018CC  0101               	movlb	1	; () banked
  9826  0018CE  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9827  0018D0  A4D8               	btfss	status,2,c
  9828  0018D2  D006               	goto	l21789
  9829  0018D4                     u25800:
  9830                           
  9831                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9832  0018D4  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9833  0018D8  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9834  0018DC  0E04               	movlw	4
  9835  0018DE  D071               	goto	L66
  9836  0018E0                     l21789:
  9837  0018E0  0100               	movlb	0	; () banked
  9838  0018E2  EE20 F004          	lfsr	2,4
  9839  0018E6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9840  0018E8  26D9               	addwf	fsr2l,f,c
  9841  0018EA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9842  0018EC  22DA               	addwfc	fsr2h,f,c
  9843  0018EE  0E0B               	movlw	11
  9844  0018F0  18DE               	xorwf	postinc2,w,c
  9845  0018F2  10DE               	iorwf	postinc2,w,c
  9846  0018F4  A4D8               	btfss	status,2,c
  9847  0018F6  D09B               	goto	l21849
  9848                           
  9849                           ; BSR set to: 0
  9850                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9851  0018F8  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9852  0018FC  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9853  001900  0E01               	movlw	1
  9854  001902  D05F               	goto	L66
  9855  001904                     l21793:
  9856                           
  9857                           ; BSR set to: 0
  9858                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9859  001904  EE20 F004          	lfsr	2,4
  9860  001908  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9861  00190A  26D9               	addwf	fsr2l,f,c
  9862  00190C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9863  00190E  22DA               	addwfc	fsr2h,f,c
  9864  001910  0E0A               	movlw	10
  9865  001912  18DE               	xorwf	postinc2,w,c
  9866  001914  10DE               	iorwf	postinc2,w,c
  9867  001916  A4D8               	btfss	status,2,c
  9868  001918  D007               	goto	l21801
  9869                           
  9870                           ; BSR set to: 0
  9871  00191A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9872  00191C  B4D8               	btfsc	status,2,c
  9873  00191E  D004               	goto	l21801
  9874                           
  9875                           ; BSR set to: 0
  9876  001920  0101               	movlb	1	; () banked
  9877  001922  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9878  001924  B4D8               	btfsc	status,2,c
  9879  001926  D7BD               	goto	u25770
  9880  001928                     l21801:
  9881  001928  0100               	movlb	0	; () banked
  9882  00192A  EE20 F004          	lfsr	2,4
  9883  00192E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9884  001930  26D9               	addwf	fsr2l,f,c
  9885  001932  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9886  001934  22DA               	addwfc	fsr2h,f,c
  9887  001936  0E0A               	movlw	10
  9888  001938  18DE               	xorwf	postinc2,w,c
  9889  00193A  10DE               	iorwf	postinc2,w,c
  9890  00193C  A4D8               	btfss	status,2,c
  9891  00193E  D007               	goto	l21809
  9892                           
  9893                           ; BSR set to: 0
  9894  001940  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9895  001942  B4D8               	btfsc	status,2,c
  9896  001944  D7C7               	goto	u25800
  9897                           
  9898                           ; BSR set to: 0
  9899  001946  0101               	movlb	1	; () banked
  9900  001948  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9901  00194A  B4D8               	btfsc	status,2,c
  9902  00194C  D7C3               	goto	u25800
  9903  00194E                     l21809:
  9904  00194E  0100               	movlb	0	; () banked
  9905  001950                     L68:
  9906  001950  EE20 F004          	lfsr	2,4
  9907  001954  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9908  001956  26D9               	addwf	fsr2l,f,c
  9909  001958  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9910  00195A  22DA               	addwfc	fsr2h,f,c
  9911  00195C  0E10               	movlw	16
  9912  00195E  18DE               	xorwf	postinc2,w,c
  9913  001960  10DE               	iorwf	postinc2,w,c
  9914  001962  A4D8               	btfss	status,2,c
  9915  001964  D064               	goto	l21849
  9916  001966  D03C               	goto	L128
  9917  001968                     l21813:
  9918                           
  9919                           ; BSR set to: 0
  9920                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9921  001968  EE20 F004          	lfsr	2,4
  9922  00196C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9923  00196E  26D9               	addwf	fsr2l,f,c
  9924  001970  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9925  001972  22DA               	addwfc	fsr2h,f,c
  9926  001974  0E0B               	movlw	11
  9927  001976  18DE               	xorwf	postinc2,w,c
  9928  001978  10DE               	iorwf	postinc2,w,c
  9929  00197A  A4D8               	btfss	status,2,c
  9930  00197C  D7E9               	goto	L68
  9931                           
  9932                           ; BSR set to: 0
  9933                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
  9934  00197E  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9935  001982  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9936  001986  0E03               	movlw	3
  9937  001988  D01C               	goto	L66
  9938  00198A                     l21821:
  9939                           
  9940                           ; BSR set to: 0
  9941                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
  9942  00198A  EE20 F004          	lfsr	2,4
  9943  00198E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9944  001990  26D9               	addwf	fsr2l,f,c
  9945  001992  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9946  001994  22DA               	addwfc	fsr2h,f,c
  9947  001996  0E0A               	movlw	10
  9948  001998  18DE               	xorwf	postinc2,w,c
  9949  00199A  10DE               	iorwf	postinc2,w,c
  9950  00199C  A4D8               	btfss	status,2,c
  9951  00199E  D7D8               	goto	L68
  9952  0019A0  D799               	goto	u25800
  9953  0019A2                     l21829:
  9954                           
  9955                           ; BSR set to: 0
  9956                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
  9957  0019A2  EE20 F004          	lfsr	2,4
  9958  0019A6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9959  0019A8  26D9               	addwf	fsr2l,f,c
  9960  0019AA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9961  0019AC  22DA               	addwfc	fsr2h,f,c
  9962  0019AE  0E0B               	movlw	11
  9963  0019B0  18DE               	xorwf	postinc2,w,c
  9964  0019B2  10DE               	iorwf	postinc2,w,c
  9965  0019B4  A4D8               	btfss	status,2,c
  9966  0019B6  D7CC               	goto	L68
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
  9970  0019B8  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9971  0019BC  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9972  0019C0  0E05               	movlw	5
  9973  0019C2                     L66:
  9974  0019C2  6EDE               	movwf	postinc2,c
  9975  0019C4  0E00               	movlw	0
  9976  0019C6  6EDD               	movwf	postdec2,c
  9977  0019C8  D032               	goto	l21849
  9978  0019CA                     l21837:
  9979                           
  9980                           ; BSR set to: 0
  9981                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
  9982  0019CA  EE20 F004          	lfsr	2,4
  9983  0019CE  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9984  0019D0  26D9               	addwf	fsr2l,f,c
  9985  0019D2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9986  0019D4  22DA               	addwfc	fsr2h,f,c
  9987  0019D6  0E0A               	movlw	10
  9988  0019D8  18DE               	xorwf	postinc2,w,c
  9989  0019DA  10DE               	iorwf	postinc2,w,c
  9990  0019DC  A4D8               	btfss	status,2,c
  9991  0019DE  D7B8               	goto	L68
  9992  0019E0                     L128:
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
  9996  0019E0  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9997  0019E4  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9998  0019E8  0E00               	movlw	0
  9999  0019EA  D7EB               	goto	L66
 10000  0019EC                     l2907:
 10001                           
 10002                           ; BSR set to: 0
 10003  0019EC  D7FF               	goto	l2907
 10004  0019EE                     l21847:
 10005  0019EE  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10006  0019F2  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10007  0019F6  50DF               	movf	indf2,w,c
 10008  0019F8  0100               	movlb	0	; () banked
 10009  0019FA  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10010  0019FC  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10011                           
 10012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10013                           ; Switch size 1, requested type "simple"
 10014                           ; Number of cases is 1, Range of values is 0 to 0
 10015                           ; switch strategies available:
 10016                           ; Name         Instructions Cycles
 10017                           ; simple_byte            4     3 (average)
 10018                           ;	Chosen strategy is simple_byte
 10019  0019FE  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10020  001A00  0A00               	xorlw	0	; case 0
 10021  001A02  A4D8               	btfss	status,2,c
 10022  001A04  D7F3               	goto	l2907
 10023                           
 10024                           ; BSR set to: 0
 10025                           ; Switch size 1, requested type "simple"
 10026                           ; Number of cases is 6, Range of values is 0 to 5
 10027                           ; switch strategies available:
 10028                           ; Name         Instructions Cycles
 10029                           ; simple_byte           19    10 (average)
 10030                           ;	Chosen strategy is simple_byte
 10031  001A06  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10032  001A08  0A00               	xorlw	0	; case 0
 10033  001A0A  B4D8               	btfsc	status,2,c
 10034  001A0C  D738               	goto	l21773
 10035  001A0E  0A01               	xorlw	1	; case 1
 10036  001A10  B4D8               	btfsc	status,2,c
 10037  001A12  D778               	goto	l21793
 10038  001A14  0A03               	xorlw	3	; case 2
 10039  001A16  B4D8               	btfsc	status,2,c
 10040  001A18  D7A7               	goto	l21813
 10041  001A1A  0A01               	xorlw	1	; case 3
 10042  001A1C  B4D8               	btfsc	status,2,c
 10043  001A1E  D7B5               	goto	l21821
 10044  001A20  0A07               	xorlw	7	; case 4
 10045  001A22  B4D8               	btfsc	status,2,c
 10046  001A24  D7BE               	goto	l21829
 10047  001A26  0A01               	xorlw	1	; case 5
 10048  001A28  B4D8               	btfsc	status,2,c
 10049  001A2A  D7CF               	goto	l21837
 10050  001A2C  D7DF               	goto	l2907
 10051  001A2E                     l21849:
 10052                           
 10053                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
 10054  001A2E  0EB0               	movlw	low _controlLearning_stateMachine
 10055  001A30  6E12               	movwf	sm_send_event@psm^0,c
 10056  001A32  0E02               	movlw	high _controlLearning_stateMachine
 10057  001A34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10058  001A36  0E00               	movlw	0
 10059  001A38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10060  001A3A  0E00               	movlw	0
 10061  001A3C  6E14               	movwf	sm_send_event@event^0,c
 10062  001A3E  ECD6  F040         	call	_sm_send_event	;wreg free
 10063                           
 10064                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
 10065  001A42  D280               	goto	l22105
 10066  001A44                     l21851:
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
 10070  001A44  0101               	movlb	1	; () banked
 10071  001A46  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10072  001A48  A4D8               	btfss	status,2,c
 10073  001A4A  D03A               	goto	l21869
 10074                           
 10075                           ; BSR set to: 1
 10076                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
 10077  001A4C  0E01               	movlw	1
 10078  001A4E  0100               	movlb	0	; () banked
 10079  001A50  6F81               	movwf	_control_limit_switch& (0+255),b
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10083  001A52  0EB0               	movlw	low _controlLearning_stateMachine
 10084  001A54  6E12               	movwf	sm_send_event@psm^0,c
 10085  001A56  0E02               	movlw	high _controlLearning_stateMachine
 10086  001A58  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10087  001A5A  0E00               	movlw	0
 10088  001A5C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10089  001A5E  0E0A               	movlw	10
 10090  001A60  6E14               	movwf	sm_send_event@event^0,c
 10091  001A62  ECD6  F040         	call	_sm_send_event	;wreg free
 10092                           
 10093                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
 10094  001A66  0E01               	movlw	1
 10095  001A68  0101               	movlb	1	; () banked
 10096  001A6A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10097                           
 10098                           ; BSR set to: 1
 10099                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
 10100  001A6C  EC93  F03D         	call	_clearLearningValue	;wreg free
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
 10104  001A70  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10105  001A72  B4D8               	btfsc	status,2,c
 10106  001A74  D016               	goto	l21867
 10107                           
 10108                           ; BSR set to: 0
 10109  001A76  0101               	movlb	1	; () banked
 10110  001A78  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10111  001A7A  A4D8               	btfss	status,2,c
 10112  001A7C  D012               	goto	l21867
 10113  001A7E                     u25990:
 10114                           
 10115                           ; BSR set to: 1
 10116                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
 10117  001A7E  0E01               	movlw	1
 10118  001A80  6FD3               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10119  001A82  0E2C               	movlw	44
 10120  001A84  6FD2               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10121                           
 10122                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
 10123  001A86  0E00               	movlw	0
 10124  001A88  6FD1               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10125  001A8A  0E78               	movlw	120
 10126  001A8C  6FD0               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10127                           
 10128                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10129  001A8E  0E00               	movlw	0
 10130  001A90  6FE1               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10131  001A92  0E14               	movlw	20
 10132  001A94  6FE0               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10133                           
 10134                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
 10135  001A96  0E01               	movlw	1
 10136  001A98  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10137                           
 10138                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
 10139  001A9A  0E00               	movlw	0
 10140  001A9C  0100               	movlb	0	; () banked
 10141  001A9E  6F81               	movwf	_control_limit_switch& (0+255),b
 10142                           
 10143                           ;sm_ControlLearning_MC50.c: 148:                  }
 10144  001AA0  0012               	return	
 10145  001AA2                     l21867:
 10146                           
 10147                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
 10148  001AA2  0E00               	movlw	0
 10149  001AA4  0101               	movlb	1	; () banked
 10150  001AA6  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10151                           
 10152                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10153  001AA8  0E00               	movlw	0
 10154  001AAA  6FD1               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10155  001AAC  0E50               	movlw	80
 10156  001AAE  6FD0               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10157                           
 10158                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10159  001AB0  0E00               	movlw	0
 10160  001AB2  6FE1               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10161  001AB4  0E14               	movlw	20
 10162  001AB6  6FE0               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10163                           
 10164                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
 10165  001AB8  0E00               	movlw	0
 10166  001ABA  0100               	movlb	0	; () banked
 10167  001ABC  6F81               	movwf	_control_limit_switch& (0+255),b
 10168  001ABE  0012               	return	
 10169  001AC0                     l21869:
 10170                           
 10171                           ; BSR set to: 1
 10172                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10173  001AC0  0EB0               	movlw	low _controlLearning_stateMachine
 10174  001AC2  6E12               	movwf	sm_send_event@psm^0,c
 10175  001AC4  0E02               	movlw	high _controlLearning_stateMachine
 10176  001AC6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10177  001AC8  0E00               	movlw	0
 10178  001ACA  6E15               	movwf	(sm_send_event@event+1)^0,c
 10179  001ACC  0E0B               	movlw	11
 10180  001ACE  6E14               	movwf	sm_send_event@event^0,c
 10181  001AD0  ECD6  F040         	call	_sm_send_event	;wreg free
 10182                           
 10183                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10184  001AD4  0E03               	movlw	3
 10185  001AD6  0101               	movlb	1	; () banked
 10186  001AD8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10187                           
 10188                           ; BSR set to: 1
 10189                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10190  001ADA  0E01               	movlw	1
 10191  001ADC  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10192                           
 10193                           ; BSR set to: 1
 10194                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10195                           
 10196                           ;sm_ControlLearning_MC50.c: 163:             }
 10197  001ADE  0012               	return	
 10198  001AE0                     l21875:
 10199                           
 10200                           ; BSR set to: 0
 10201                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10202  001AE0  0101               	movlb	1	; () banked
 10203  001AE2  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10204  001AE4  B4D8               	btfsc	status,2,c
 10205  001AE6  D00E               	goto	u26040
 10206                           
 10207                           ; BSR set to: 1
 10208  001AE8  0100               	movlb	0	; () banked
 10209  001AEA  0581               	decf	_control_limit_switch& (0+255),w,b
 10210  001AEC  B4D8               	btfsc	status,2,c
 10211  001AEE  D00A               	goto	u26040
 10212                           
 10213                           ; BSR set to: 0
 10214  001AF0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10215  001AF2  B4D8               	btfsc	status,2,c
 10216  001AF4  D003               	goto	u26030
 10217                           
 10218                           ; BSR set to: 0
 10219  001AF6  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10220  001AF8  A4D8               	btfss	status,2,c
 10221  001AFA  D028               	goto	l21903
 10222  001AFC                     u26030:
 10223                           
 10224                           ; BSR set to: 0
 10225  001AFC  0101               	movlb	1	; () banked
 10226  001AFE  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10227  001B00  A4D8               	btfss	status,2,c
 10228  001B02  D024               	goto	l21903
 10229  001B04                     u26040:
 10230                           
 10231                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10232  001B04  0E01               	movlw	1
 10233  001B06  0100               	movlb	0	; () banked
 10234  001B08  6F81               	movwf	_control_limit_switch& (0+255),b
 10235                           
 10236                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10237  001B0A  0E00               	movlw	0
 10238  001B0C  0101               	movlb	1	; () banked
 10239  001B0E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10240                           
 10241                           ; BSR set to: 1
 10242                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10243  001B10  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10244  001B12  D005               	goto	u26050
 10245  001B14  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10246  001B16  E102               	bnz	u26051
 10247  001B18  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10248  001B1A  B0D8               	btfsc	status,0,c
 10249  001B1C                     u26051:
 10250  001B1C  0012               	return	
 10251  001B1E                     u26050:
 10252                           
 10253                           ; BSR set to: 1
 10254                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10255  001B1E  0EB0               	movlw	low _controlLearning_stateMachine
 10256  001B20  6E12               	movwf	sm_send_event@psm^0,c
 10257  001B22  0E02               	movlw	high _controlLearning_stateMachine
 10258  001B24  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10259  001B26  0E00               	movlw	0
 10260  001B28  6E15               	movwf	(sm_send_event@event+1)^0,c
 10261  001B2A  0E0A               	movlw	10
 10262  001B2C  6E14               	movwf	sm_send_event@event^0,c
 10263  001B2E  ECD6  F040         	call	_sm_send_event	;wreg free
 10264                           
 10265                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10266  001B32  0E01               	movlw	1
 10267  001B34  0101               	movlb	1	; () banked
 10268  001B36  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10269                           
 10270                           ; BSR set to: 1
 10271                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10272  001B38  EC93  F03D         	call	_clearLearningValue	;wreg free
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10276  001B3C  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10277  001B3E  B4D8               	btfsc	status,2,c
 10278  001B40  D7B0               	goto	l21867
 10279                           
 10280                           ; BSR set to: 0
 10281  001B42  0101               	movlb	1	; () banked
 10282  001B44  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10283  001B46  B4D8               	btfsc	status,2,c
 10284  001B48  D79A               	goto	u25990
 10285  001B4A  D7AB               	goto	l21867
 10286  001B4C                     l21903:
 10287  001B4C  0101               	movlb	1	; () banked
 10288  001B4E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10289  001B50  A4D8               	btfss	status,2,c
 10290  001B52  D003               	goto	l21907
 10291  001B54                     u26080:
 10292                           
 10293                           ; BSR set to: 1
 10294                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10295  001B54  EC0F  F040         	call	_generateErrorLearnig	;wreg free
 10296                           
 10297                           ;sm_ControlLearning_MC50.c: 198:             }
 10298  001B58  0012               	return	
 10299  001B5A                     l21907:
 10300                           
 10301                           ; BSR set to: 1
 10302                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10303  001B5A  0E00               	movlw	0
 10304  001B5C  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10305  001B5E  0E28               	movlw	40
 10306  001B60  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10307  001B62  0012               	return	
 10308  001B64                     l21909:
 10309                           
 10310                           ; BSR set to: 0
 10311                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10312  001B64  0101               	movlb	1	; () banked
 10313  001B66  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10314  001B68  A4D8               	btfss	status,2,c
 10315                           
 10316                           ; BSR set to: 1
 10317  001B6A  BFD3               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10318  001B6C  D009               	goto	u26110
 10319  001B6E  51D3               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10320  001B70  E103               	bnz	u26100
 10321  001B72  05D2               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10322  001B74  A0D8               	btfss	status,0,c
 10323  001B76  D004               	goto	u26110
 10324  001B78                     u26100:
 10325                           
 10326                           ; BSR set to: 1
 10327  001B78  0100               	movlb	0	; () banked
 10328  001B7A  0581               	decf	_control_limit_switch& (0+255),w,b
 10329  001B7C  A4D8               	btfss	status,2,c
 10330  001B7E  D02A               	goto	l21931
 10331  001B80                     u26110:
 10332                           
 10333                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10334  001B80  0E01               	movlw	1
 10335  001B82  0100               	movlb	0	; () banked
 10336  001B84  6F81               	movwf	_control_limit_switch& (0+255),b
 10337                           
 10338                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10339  001B86  0E00               	movlw	0
 10340  001B88  0101               	movlb	1	; () banked
 10341  001B8A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10342                           
 10343                           ; BSR set to: 1
 10344                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10345  001B8C  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10346  001B8E  D005               	goto	u26120
 10347  001B90  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10348  001B92  E102               	bnz	u26121
 10349  001B94  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10350  001B96  B0D8               	btfsc	status,0,c
 10351  001B98                     u26121:
 10352  001B98  0012               	return	
 10353  001B9A                     u26120:
 10354                           
 10355                           ; BSR set to: 1
 10356                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10357  001B9A  0EB0               	movlw	low _controlLearning_stateMachine
 10358  001B9C  6E12               	movwf	sm_send_event@psm^0,c
 10359  001B9E  0E02               	movlw	high _controlLearning_stateMachine
 10360  001BA0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10361  001BA2  0E00               	movlw	0
 10362  001BA4  6E15               	movwf	(sm_send_event@event+1)^0,c
 10363  001BA6  0E0B               	movlw	11
 10364  001BA8  6E14               	movwf	sm_send_event@event^0,c
 10365  001BAA  ECD6  F040         	call	_sm_send_event	;wreg free
 10366                           
 10367                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10368  001BAE  0E03               	movlw	3
 10369  001BB0  0101               	movlb	1	; () banked
 10370  001BB2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10371                           
 10372                           ; BSR set to: 1
 10373                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10374  001BB4  0E00               	movlw	0
 10375  001BB6  6FD3               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10376  001BB8  0E64               	movlw	100
 10377  001BBA  6FD2               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10378                           
 10379                           ; BSR set to: 1
 10380                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10381  001BBC  0E00               	movlw	0
 10382  001BBE  6FD1               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10383  001BC0  0E64               	movlw	100
 10384  001BC2                     L67:
 10385  001BC2  6FD0               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10386                           
 10387                           ; BSR set to: 1
 10388                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10389  001BC4  0E00               	movlw	0
 10390  001BC6  6FE1               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10391  001BC8  0E14               	movlw	20
 10392  001BCA  6FE0               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10393                           
 10394                           ; BSR set to: 1
 10395                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10396  001BCC  0E00               	movlw	0
 10397  001BCE  0100               	movlb	0	; () banked
 10398  001BD0  6F81               	movwf	_control_limit_switch& (0+255),b
 10399  001BD2  0012               	return	
 10400  001BD4                     l21931:
 10401                           
 10402                           ; BSR set to: 0
 10403  001BD4  0101               	movlb	1	; () banked
 10404  001BD6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10405  001BD8  B4D8               	btfsc	status,2,c
 10406  001BDA  D7BC               	goto	u26080
 10407                           
 10408                           ; BSR set to: 1
 10409                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10410  001BDC  0E00               	movlw	0
 10411  001BDE  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10412  001BE0  0E28               	movlw	40
 10413  001BE2  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10414                           
 10415                           ; BSR set to: 1
 10416                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10417  001BE4  BFE1               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10418  001BE6  D005               	goto	u26140
 10419  001BE8  51E1               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10420  001BEA  E102               	bnz	u26141
 10421  001BEC  05E0               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10422  001BEE  B0D8               	btfsc	status,0,c
 10423  001BF0                     u26141:
 10424  001BF0  0012               	return	
 10425  001BF2                     u26140:
 10426                           
 10427                           ; BSR set to: 1
 10428                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10429  001BF2  BFD1               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10430  001BF4  0012               	return	
 10431  001BF6  51D1               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10432  001BF8  E103               	bnz	u26150
 10433  001BFA  05D0               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10434  001BFC  A0D8               	btfss	status,0,c
 10435  001BFE  0012               	return	
 10436  001C00                     u26150:
 10437                           
 10438                           ; BSR set to: 1
 10439                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10440  001C00  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10441  001C04  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10442  001C08  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10443  001C0A  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10444  001C0C  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10445  001C10  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10446  001C14  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10447  001C18  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10448  001C1C  EC76  F040         	call	_calculateMean	;wreg free
 10449  001C20  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10450  001C24  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10451  001C28  0012               	return	
 10452  001C2A                     l21943:
 10453                           
 10454                           ; BSR set to: 0
 10455                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10456  001C2A  0101               	movlb	1	; () banked
 10457  001C2C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10458  001C2E  B4D8               	btfsc	status,2,c
 10459  001C30  D004               	goto	u26170
 10460                           
 10461                           ; BSR set to: 1
 10462  001C32  0100               	movlb	0	; () banked
 10463  001C34  0581               	decf	_control_limit_switch& (0+255),w,b
 10464  001C36  A4D8               	btfss	status,2,c
 10465  001C38  D020               	goto	l21963
 10466  001C3A                     u26170:
 10467                           
 10468                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10469  001C3A  0E01               	movlw	1
 10470  001C3C  0100               	movlb	0	; () banked
 10471  001C3E  6F81               	movwf	_control_limit_switch& (0+255),b
 10472                           
 10473                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10474  001C40  0E00               	movlw	0
 10475  001C42  0101               	movlb	1	; () banked
 10476  001C44  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10477                           
 10478                           ; BSR set to: 1
 10479                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10480  001C46  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10481  001C48  D005               	goto	u26180
 10482  001C4A  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10483  001C4C  E102               	bnz	u26181
 10484  001C4E  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10485  001C50  B0D8               	btfsc	status,0,c
 10486  001C52                     u26181:
 10487  001C52  0012               	return	
 10488  001C54                     u26180:
 10489                           
 10490                           ; BSR set to: 1
 10491                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10492  001C54  0EB0               	movlw	low _controlLearning_stateMachine
 10493  001C56  6E12               	movwf	sm_send_event@psm^0,c
 10494  001C58  0E02               	movlw	high _controlLearning_stateMachine
 10495  001C5A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10496  001C5C  0E00               	movlw	0
 10497  001C5E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10498  001C60  0E0A               	movlw	10
 10499  001C62  6E14               	movwf	sm_send_event@event^0,c
 10500  001C64  ECD6  F040         	call	_sm_send_event	;wreg free
 10501                           
 10502                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10503  001C68  0E01               	movlw	1
 10504  001C6A  0101               	movlb	1	; () banked
 10505  001C6C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10506                           
 10507                           ; BSR set to: 1
 10508                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10509  001C6E  0E00               	movlw	0
 10510  001C70  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10511                           
 10512                           ; BSR set to: 1
 10513                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10514  001C72  0E00               	movlw	0
 10515  001C74  6FD1               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10516  001C76  0E3C               	movlw	60
 10517  001C78  D7A4               	goto	L67
 10518  001C7A                     l21963:
 10519                           
 10520                           ; BSR set to: 0
 10521  001C7A  0101               	movlb	1	; () banked
 10522  001C7C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10523  001C7E  B4D8               	btfsc	status,2,c
 10524  001C80  D769               	goto	u26080
 10525                           
 10526                           ; BSR set to: 1
 10527                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10528  001C82  0E00               	movlw	0
 10529  001C84  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10530  001C86  0E28               	movlw	40
 10531  001C88  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10532                           
 10533                           ; BSR set to: 1
 10534                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10535  001C8A  BFE1               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10536  001C8C  D005               	goto	u26200
 10537  001C8E  51E1               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10538  001C90  E102               	bnz	u26201
 10539  001C92  05E0               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10540  001C94  B0D8               	btfsc	status,0,c
 10541  001C96                     u26201:
 10542  001C96  0012               	return	
 10543  001C98                     u26200:
 10544                           
 10545                           ; BSR set to: 1
 10546                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10547  001C98  BFD1               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10548  001C9A  0012               	return	
 10549  001C9C  51D1               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10550  001C9E  E103               	bnz	u26210
 10551  001CA0  05D0               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10552  001CA2  A0D8               	btfss	status,0,c
 10553  001CA4  0012               	return	
 10554  001CA6                     u26210:
 10555                           
 10556                           ; BSR set to: 1
 10557                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10558  001CA6  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10559  001CAA  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10560  001CAE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10561  001CB0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10562  001CB2  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10563  001CB6  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10564  001CBA  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10565  001CBE  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10566  001CC2  EC76  F040         	call	_calculateMean	;wreg free
 10567  001CC6  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10568  001CCA  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10569  001CCE  0012               	return	
 10570  001CD0                     l21975:
 10571                           
 10572                           ; BSR set to: 0
 10573                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.
      +                          programinAutomatic == 1))
 10574  001CD0  0101               	movlb	1	; () banked
 10575  001CD2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10576  001CD4  B4D8               	btfsc	status,2,c
 10577  001CD6  D011               	goto	u26270
 10578                           
 10579                           ; BSR set to: 1
 10580  001CD8  0100               	movlb	0	; () banked
 10581  001CDA  0581               	decf	_control_limit_switch& (0+255),w,b
 10582  001CDC  B4D8               	btfsc	status,2,c
 10583  001CDE  D00D               	goto	u26270
 10584                           
 10585                           ; BSR set to: 0
 10586  001CE0  0101               	movlb	1	; () banked
 10587  001CE2  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10588  001CE4  A4D8               	btfss	status,2,c
 10589  001CE6  D02C               	goto	l22001
 10590                           
 10591                           ; BSR set to: 1
 10592  001CE8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10593  001CEA  B4D8               	btfsc	status,2,c
 10594  001CEC  D003               	goto	u26260
 10595                           
 10596                           ; BSR set to: 1
 10597  001CEE  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10598  001CF0  A4D8               	btfss	status,2,c
 10599  001CF2  D026               	goto	l22001
 10600  001CF4                     u26260:
 10601                           
 10602                           ; BSR set to: 1
 10603  001CF4  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10604  001CF6  A4D8               	btfss	status,2,c
 10605  001CF8  D023               	goto	l22001
 10606  001CFA                     u26270:
 10607                           
 10608                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10609  001CFA  0E00               	movlw	0
 10610  001CFC  0101               	movlb	1	; () banked
 10611  001CFE  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10612                           
 10613                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10614  001D00  0E00               	movlw	0
 10615  001D02  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10616                           
 10617                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10618  001D04  0E01               	movlw	1
 10619  001D06  0100               	movlb	0	; () banked
 10620  001D08  6F81               	movwf	_control_limit_switch& (0+255),b
 10621                           
 10622                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10623  001D0A  0E00               	movlw	0
 10624  001D0C  0101               	movlb	1	; () banked
 10625  001D0E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10626                           
 10627                           ; BSR set to: 1
 10628                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10629  001D10  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10630  001D12  D005               	goto	u26280
 10631  001D14  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10632  001D16  E102               	bnz	u26281
 10633  001D18  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10634  001D1A  B0D8               	btfsc	status,0,c
 10635  001D1C                     u26281:
 10636  001D1C  0012               	return	
 10637  001D1E                     u26280:
 10638                           
 10639                           ; BSR set to: 1
 10640                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10641  001D1E  0EB0               	movlw	low _controlLearning_stateMachine
 10642  001D20  6E12               	movwf	sm_send_event@psm^0,c
 10643  001D22  0E02               	movlw	high _controlLearning_stateMachine
 10644  001D24  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10645  001D26  0E00               	movlw	0
 10646  001D28  6E15               	movwf	(sm_send_event@event+1)^0,c
 10647  001D2A  0E0B               	movlw	11
 10648  001D2C  6E14               	movwf	sm_send_event@event^0,c
 10649  001D2E  ECD6  F040         	call	_sm_send_event	;wreg free
 10650                           
 10651                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10652  001D32  0E03               	movlw	3
 10653  001D34  0101               	movlb	1	; () banked
 10654  001D36  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10655                           
 10656                           ; BSR set to: 1
 10657                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10658  001D38  0E00               	movlw	0
 10659  001D3A  6FD1               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10660  001D3C  0E50               	movlw	80
 10661  001D3E  D741               	goto	L67
 10662  001D40                     l22001:
 10663                           
 10664                           ; BSR set to: 1
 10665  001D40  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10666  001D42  B4D8               	btfsc	status,2,c
 10667  001D44  D707               	goto	u26080
 10668                           
 10669                           ; BSR set to: 1
 10670  001D46  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10671  001D48  B4D8               	btfsc	status,2,c
 10672  001D4A  D003               	goto	u26310
 10673                           
 10674                           ; BSR set to: 1
 10675  001D4C  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10676  001D4E  A4D8               	btfss	status,2,c
 10677  001D50  D00F               	goto	l22015
 10678  001D52                     u26310:
 10679                           
 10680                           ; BSR set to: 1
 10681  001D52  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10682  001D54  A4D8               	btfss	status,2,c
 10683  001D56  D00C               	goto	l22015
 10684                           
 10685                           ; BSR set to: 1
 10686  001D58  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10687  001D5A  A4D8               	btfss	status,2,c
 10688  001D5C  D009               	goto	l22015
 10689  001D5E                     u26330:
 10690                           
 10691                           ; BSR set to: 1
 10692                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10693  001D5E  0E01               	movlw	1
 10694  001D60  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10695                           
 10696                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10697  001D62  0E01               	movlw	1
 10698  001D64  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10699                           
 10700                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10701  001D66  0E00               	movlw	0
 10702  001D68  6FD1               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10703  001D6A  0E50               	movlw	80
 10704  001D6C  6FD0               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10705                           
 10706                           ;sm_ControlLearning_MC50.c: 309:             }
 10707  001D6E  0012               	return	
 10708  001D70                     l22015:
 10709                           
 10710                           ; BSR set to: 1
 10711  001D70  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10712  001D72  A4D8               	btfss	status,2,c
 10713  001D74  D00C               	goto	l22023
 10714                           
 10715                           ; BSR set to: 1
 10716                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10717  001D76  0E00               	movlw	0
 10718  001D78  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10719  001D7A  0E28               	movlw	40
 10720  001D7C  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10721                           
 10722                           ; BSR set to: 1
 10723                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10724  001D7E  BFD1               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10725  001D80  0012               	return	
 10726  001D82  51D1               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10727  001D84  E103               	bnz	u26350
 10728  001D86  05D0               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10729  001D88  A0D8               	btfss	status,0,c
 10730  001D8A  0012               	return	
 10731  001D8C                     u26350:
 10732  001D8C  D739               	goto	u26150
 10733  001D8E                     l22023:
 10734                           
 10735                           ; BSR set to: 1
 10736                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10737  001D8E  0E01               	movlw	1
 10738  001D90  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10739                           
 10740                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10741  001D92  0E00               	movlw	0
 10742  001D94  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10743  001D96  0E28               	movlw	40
 10744  001D98  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10745                           
 10746                           ; BSR set to: 1
 10747                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10748  001D9A  BFE1               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10749  001D9C  D005               	goto	u26360
 10750  001D9E  51E1               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10751  001DA0  E102               	bnz	u26361
 10752  001DA2  05E0               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10753  001DA4  B0D8               	btfsc	status,0,c
 10754  001DA6                     u26361:
 10755  001DA6  0012               	return	
 10756  001DA8                     u26360:
 10757                           
 10758                           ; BSR set to: 1
 10759                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10760  001DA8  BFD1               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10761  001DAA  0012               	return	
 10762  001DAC  51D1               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10763  001DAE  E103               	bnz	u26370
 10764  001DB0  05D0               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10765  001DB2  A0D8               	btfss	status,0,c
 10766  001DB4  0012               	return	
 10767  001DB6                     u26370:
 10768                           
 10769                           ; BSR set to: 1
 10770                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10771  001DB6  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10772  001DBA  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10773  001DBE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10774  001DC0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10775  001DC2  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10776  001DC6  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10777  001DCA  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10778  001DCC  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10779  001DCE  EC76  F040         	call	_calculateMean	;wreg free
 10780  001DD2  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10781  001DD6  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10782  001DDA  0012               	return	
 10783  001DDC                     l22031:
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10787  001DDC  0101               	movlb	1	; () banked
 10788  001DDE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10789  001DE0  B4D8               	btfsc	status,2,c
 10790  001DE2  D00C               	goto	u26420
 10791                           
 10792                           ; BSR set to: 1
 10793  001DE4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10794  001DE6  A4D8               	btfss	status,2,c
 10795  001DE8  D06F               	goto	l22077
 10796                           
 10797                           ; BSR set to: 1
 10798  001DEA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10799  001DEC  B4D8               	btfsc	status,2,c
 10800  001DEE  D003               	goto	u26410
 10801                           
 10802                           ; BSR set to: 1
 10803  001DF0  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10804  001DF2  A4D8               	btfss	status,2,c
 10805  001DF4  D069               	goto	l22077
 10806  001DF6                     u26410:
 10807                           
 10808                           ; BSR set to: 1
 10809  001DF6  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10810  001DF8  A4D8               	btfss	status,2,c
 10811  001DFA  D066               	goto	l22077
 10812  001DFC                     u26420:
 10813                           
 10814                           ; BSR set to: 1
 10815                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10816  001DFC  0E01               	movlw	1
 10817  001DFE  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10818                           
 10819                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10820  001E00  0E00               	movlw	0
 10821  001E02  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10822                           
 10823                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10824  001E04  0E00               	movlw	0
 10825  001E06  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10826                           
 10827                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10828  001E08  0E00               	movlw	0
 10829  001E0A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10830                           
 10831                           ; BSR set to: 1
 10832                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10833  001E0C  0EB0               	movlw	low _controlLearning_stateMachine
 10834  001E0E  6E12               	movwf	sm_send_event@psm^0,c
 10835  001E10  0E02               	movlw	high _controlLearning_stateMachine
 10836  001E12  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10837  001E14  0E00               	movlw	0
 10838  001E16  6E15               	movwf	(sm_send_event@event+1)^0,c
 10839  001E18  0E0A               	movlw	10
 10840  001E1A  6E14               	movwf	sm_send_event@event^0,c
 10841  001E1C  ECD6  F040         	call	_sm_send_event	;wreg free
 10842                           
 10843                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10844  001E20  0EE4               	movlw	low _controlGate_stateMachine
 10845  001E22  6E12               	movwf	sm_send_event@psm^0,c
 10846  001E24  0E01               	movlw	high _controlGate_stateMachine
 10847  001E26  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10848  001E28  0E00               	movlw	0
 10849  001E2A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10850  001E2C  0E13               	movlw	19
 10851  001E2E  6E14               	movwf	sm_send_event@event^0,c
 10852  001E30  ECD6  F040         	call	_sm_send_event	;wreg free
 10853                           
 10854                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10855  001E34  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10856  001E38  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10857  001E3C  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10858  001E40  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10859                           
 10860                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10861  001E44  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10862  001E48  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10863  001E4C  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10864  001E50  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10865                           
 10866                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10867  001E54  0101               	movlb	1	; () banked
 10868  001E56  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10869  001E58  A4D8               	btfss	status,2,c
 10870  001E5A  D005               	goto	l22055
 10871                           
 10872                           ; BSR set to: 1
 10873                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10874  001E5C  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10875                           
 10876                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10877  001E60  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10878                           
 10879                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10880  001E64  D005               	goto	l22057
 10881  001E66                     l22055:
 10882                           
 10883                           ; BSR set to: 1
 10884                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10885  001E66  0E04               	movlw	4
 10886  001E68  0100               	movlb	0	; () banked
 10887  001E6A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10888                           
 10889                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10890  001E6C  0E04               	movlw	4
 10891  001E6E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10892  001E70                     l22057:
 10893                           
 10894                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10895  001E70  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10896  001E74  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10897                           
 10898                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10899  001E78  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10900  001E7C  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10901                           
 10902                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10903  001E80  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10904  001E84  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10905  001E88  0100               	movlb	0	; () banked
 10906  001E8A  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10907  001E8C  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10911  001E8E  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10912  001E92  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10913  001E96  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10914  001E98  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10918  001E9A  0E00               	movlw	0
 10919  001E9C  ECB6  F044         	call	_SaveNVM_VarSystem
 10920                           
 10921                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10922  001EA0  0E03               	movlw	3
 10923  001EA2  ECB6  F044         	call	_SaveNVM_VarSystem
 10924                           
 10925                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10926  001EA6  0E02               	movlw	2
 10927  001EA8  ECB6  F044         	call	_SaveNVM_VarSystem
 10928                           
 10929                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 10930  001EAC  0E00               	movlw	0
 10931  001EAE  0101               	movlb	1	; () banked
 10932  001EB0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10933                           
 10934                           ; BSR set to: 1
 10935                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 10936  001EB2  0E00               	movlw	0
 10937  001EB4  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 10938  001EB6  0E00               	movlw	0
 10939  001EB8  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 10940  001EBA  0E00               	movlw	0
 10941  001EBC  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 10942  001EBE  0E00               	movlw	0
 10943  001EC0  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 10944                           
 10945                           ; BSR set to: 1
 10946                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 10947  001EC2  0E00               	movlw	0
 10948  001EC4  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 10949                           
 10950                           ;sm_ControlLearning_MC50.c: 369:             }
 10951  001EC6  0012               	return	
 10952  001EC8                     l22077:
 10953                           
 10954                           ; BSR set to: 1
 10955  001EC8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10956  001ECA  B4D8               	btfsc	status,2,c
 10957  001ECC  D643               	goto	u26080
 10958                           
 10959                           ; BSR set to: 1
 10960  001ECE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10961  001ED0  B4D8               	btfsc	status,2,c
 10962  001ED2  D003               	goto	u26460
 10963                           
 10964                           ; BSR set to: 1
 10965  001ED4  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10966  001ED6  A4D8               	btfss	status,2,c
 10967  001ED8  D003               	goto	l22089
 10968  001EDA                     u26460:
 10969                           
 10970                           ; BSR set to: 1
 10971  001EDA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10972  001EDC  B4D8               	btfsc	status,2,c
 10973  001EDE  D73F               	goto	u26330
 10974  001EE0                     l22089:
 10975                           
 10976                           ; BSR set to: 1
 10977  001EE0  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10978  001EE2  A4D8               	btfss	status,2,c
 10979  001EE4  D008               	goto	l22095
 10980                           
 10981                           ; BSR set to: 1
 10982                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 10983  001EE6  BFD1               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10984  001EE8  0012               	return	
 10985  001EEA  51D1               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10986  001EEC  E103               	bnz	u26490
 10987  001EEE  05D0               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10988  001EF0  A0D8               	btfss	status,0,c
 10989  001EF2  0012               	return	
 10990  001EF4                     u26490:
 10991  001EF4  D6D8               	goto	u26210
 10992  001EF6                     l22095:
 10993                           
 10994                           ; BSR set to: 1
 10995                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 10996  001EF6  0E01               	movlw	1
 10997  001EF8  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10998                           
 10999                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 11000  001EFA  0E00               	movlw	0
 11001  001EFC  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11002  001EFE  0E28               	movlw	40
 11003  001F00  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11004                           
 11005                           ; BSR set to: 1
 11006                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 11007  001F02  BFE1               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 11008  001F04  D005               	goto	u26500
 11009  001F06  51E1               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 11010  001F08  E102               	bnz	u26501
 11011  001F0A  05E0               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 11012  001F0C  B0D8               	btfsc	status,0,c
 11013  001F0E                     u26501:
 11014  001F0E  0012               	return	
 11015  001F10                     u26500:
 11016                           
 11017                           ; BSR set to: 1
 11018                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 11019  001F10  BFD1               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 11020  001F12  0012               	return	
 11021  001F14  51D1               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 11022  001F16  E103               	bnz	u26510
 11023  001F18  05D0               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 11024  001F1A  A0D8               	btfss	status,0,c
 11025  001F1C  0012               	return	
 11026  001F1E                     u26510:
 11027                           
 11028                           ; BSR set to: 1
 11029                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 11030  001F1E  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 11031  001F22  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 11032  001F26  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 11033  001F28  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 11034  001F2A  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 11035  001F2E  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 11036  001F32  6A16               	clrf	(calculateMean@newValue+2)^0,c
 11037  001F34  6A17               	clrf	(calculateMean@newValue+3)^0,c
 11038  001F36  EC76  F040         	call	_calculateMean	;wreg free
 11039  001F3A  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 11040  001F3E  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 11041  001F42  0012               	return	
 11042  001F44                     l22105:
 11043  001F44  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 11044  001F48  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 11045  001F4C  50DF               	movf	indf2,w,c
 11046  001F4E  0100               	movlb	0	; () banked
 11047  001F50  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 11048  001F52  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 11049                           
 11050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11051                           ; Switch size 1, requested type "simple"
 11052                           ; Number of cases is 1, Range of values is 0 to 0
 11053                           ; switch strategies available:
 11054                           ; Name         Instructions Cycles
 11055                           ; simple_byte            4     3 (average)
 11056                           ;	Chosen strategy is simple_byte
 11057  001F54  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 11058  001F56  0A00               	xorlw	0	; case 0
 11059  001F58  A4D8               	btfss	status,2,c
 11060  001F5A  0012               	return	
 11061                           
 11062                           ; BSR set to: 0
 11063                           ; Switch size 1, requested type "simple"
 11064                           ; Number of cases is 6, Range of values is 0 to 5
 11065                           ; switch strategies available:
 11066                           ; Name         Instructions Cycles
 11067                           ; simple_byte           19    10 (average)
 11068                           ;	Chosen strategy is simple_byte
 11069  001F5C  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 11070  001F5E  0A00               	xorlw	0	; case 0
 11071  001F60  B4D8               	btfsc	status,2,c
 11072  001F62  D570               	goto	l21851
 11073  001F64  0A01               	xorlw	1	; case 1
 11074  001F66  B4D8               	btfsc	status,2,c
 11075  001F68  D5BB               	goto	l21875
 11076  001F6A  0A03               	xorlw	3	; case 2
 11077  001F6C  B4D8               	btfsc	status,2,c
 11078  001F6E  D5FA               	goto	l21909
 11079  001F70  0A01               	xorlw	1	; case 3
 11080  001F72  B4D8               	btfsc	status,2,c
 11081  001F74  D65A               	goto	l21943
 11082  001F76  0A07               	xorlw	7	; case 4
 11083  001F78  B4D8               	btfsc	status,2,c
 11084  001F7A  D6AA               	goto	l21975
 11085  001F7C  0A01               	xorlw	1	; case 5
 11086  001F7E  A4D8               	btfss	status,2,c
 11087  001F80  0012               	return	
 11088  001F82  D72C               	goto	l22031
 11089  001F84                     __end_of_sm_execute_ControlLearning:
 11090                           	callstack 0
 11091                           
 11092 ;; *************** function _generateErrorLearnig *****************
 11093 ;; Defined at:
 11094 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;		None
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;		None
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  1    wreg      void 
 11101 ;; Registers used:
 11102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11103 ;; Tracked objects:
 11104 ;;		On entry : 3E/1
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11112 ;;Total ram usage:        0 bytes
 11113 ;; Hardware stack levels used: 1
 11114 ;; Hardware stack levels required when called: 6
 11115 ;; This function calls:
 11116 ;;		_sm_init
 11117 ;; This function is called by:
 11118 ;;		_sm_execute_ControlLearning
 11119 ;; This function uses a non-reentrant model
 11120 ;;
 11121                           
 11122                           	psect	text22
 11123  00801E                     __ptext22:
 11124                           	callstack 0
 11125  00801E                     _generateErrorLearnig:
 11126                           	callstack 22
 11127                           
 11128                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 11129                           
 11130                           ;incstack = 0
 11131  00801E  0E00               	movlw	0
 11132  008020  0101               	movlb	1	; () banked
 11133  008022  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11134                           
 11135                           ; BSR set to: 1
 11136                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 11137  008024  0EBB               	movlw	low _menuConfiguration_stateMachine
 11138  008026  6E12               	movwf	sm_init@psm^0,c
 11139  008028  0E02               	movlw	high _menuConfiguration_stateMachine
 11140  00802A  6E13               	movwf	(sm_init@psm+1)^0,c
 11141  00802C  0E00               	movlw	0
 11142  00802E  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11143  008030  0E00               	movlw	0
 11144  008032  6E14               	movwf	sm_init@initial_state^0,c
 11145  008034  0E00               	movlw	0
 11146  008036  6E16               	movwf	sm_init@hist_mode^0,c
 11147  008038  ECB9  F041         	call	_sm_init	;wreg free
 11148                           
 11149                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 11150  00803C  0EEF               	movlw	low _main_stateMachine
 11151  00803E  6E12               	movwf	sm_init@psm^0,c
 11152  008040  0E01               	movlw	high _main_stateMachine
 11153  008042  6E13               	movwf	(sm_init@psm+1)^0,c
 11154  008044  0E00               	movlw	0
 11155  008046  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11156  008048  0E00               	movlw	0
 11157  00804A  6E14               	movwf	sm_init@initial_state^0,c
 11158  00804C  0E00               	movlw	0
 11159  00804E  6E16               	movwf	sm_init@hist_mode^0,c
 11160  008050  ECB9  F041         	call	_sm_init	;wreg free
 11161                           
 11162                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 11163  008054  0EE4               	movlw	low _controlGate_stateMachine
 11164  008056  6E12               	movwf	sm_init@psm^0,c
 11165  008058  0E01               	movlw	high _controlGate_stateMachine
 11166  00805A  6E13               	movwf	(sm_init@psm+1)^0,c
 11167  00805C  0E00               	movlw	0
 11168  00805E  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11169  008060  0E00               	movlw	0
 11170  008062  6E14               	movwf	sm_init@initial_state^0,c
 11171  008064  0E00               	movlw	0
 11172  008066  6E16               	movwf	sm_init@hist_mode^0,c
 11173  008068  ECB9  F041         	call	_sm_init	;wreg free
 11174                           
 11175                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 11176  00806C  0EB0               	movlw	low _controlLearning_stateMachine
 11177  00806E  6E12               	movwf	sm_init@psm^0,c
 11178  008070  0E02               	movlw	high _controlLearning_stateMachine
 11179  008072  6E13               	movwf	(sm_init@psm+1)^0,c
 11180  008074  0E00               	movlw	0
 11181  008076  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11182  008078  0E00               	movlw	0
 11183  00807A  6E14               	movwf	sm_init@initial_state^0,c
 11184  00807C  0E00               	movlw	0
 11185  00807E  6E16               	movwf	sm_init@hist_mode^0,c
 11186  008080  ECB9  F041         	call	_sm_init	;wreg free
 11187  008084  0012               	return		;funcret
 11188  008086                     __end_of_generateErrorLearnig:
 11189                           	callstack 0
 11190                           
 11191 ;; *************** function _sm_init *****************
 11192 ;; Defined at:
 11193 ;;		line 12 in file "sm_common_MC50.c"
 11194 ;; Parameters:    Size  Location     Type
 11195 ;;  psm             2   17[COMRAM] PTR struct .
 11196 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11197 ;;  initial_stat    2   19[COMRAM] int 
 11198 ;;  hist_mode       1   21[COMRAM] enum E348
 11199 ;; Auto vars:     Size  Location     Type
 11200 ;;		None
 11201 ;; Return value:  Size  Location     Type
 11202 ;;                  1    wreg      void 
 11203 ;; Registers used:
 11204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11205 ;; Tracked objects:
 11206 ;;		On entry : 0/1
 11207 ;;		On exit  : 0/0
 11208 ;;		Unchanged: 0/0
 11209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11210 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11213 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11214 ;;Total ram usage:        5 bytes
 11215 ;; Hardware stack levels used: 1
 11216 ;; Hardware stack levels required when called: 5
 11217 ;; This function calls:
 11218 ;;		_sm_restart
 11219 ;; This function is called by:
 11220 ;;		_main
 11221 ;;		_generateErrorLearnig
 11222 ;; This function uses a non-reentrant model
 11223 ;;
 11224                           
 11225                           	psect	text23
 11226  008372                     __ptext23:
 11227                           	callstack 0
 11228  008372                     _sm_init:
 11229                           	callstack 25
 11230                           
 11231                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11232                           
 11233                           ;incstack = 0
 11234  008372  EE20 F002          	lfsr	2,2
 11235  008376  5012               	movf	sm_init@psm^0,w,c
 11236  008378  26D9               	addwf	fsr2l,f,c
 11237  00837A  5013               	movf	(sm_init@psm+1)^0,w,c
 11238  00837C  22DA               	addwfc	fsr2h,f,c
 11239  00837E  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11240  008382  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11241                           
 11242                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11243  008386  EE20 F006          	lfsr	2,6
 11244  00838A  5012               	movf	sm_init@psm^0,w,c
 11245  00838C  26D9               	addwf	fsr2l,f,c
 11246  00838E  5013               	movf	(sm_init@psm+1)^0,w,c
 11247  008390  22DA               	addwfc	fsr2h,f,c
 11248  008392  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11249                           
 11250                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11251  008396  C012  FFD9         	movff	sm_init@psm,fsr2l
 11252  00839A  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11253  00839E  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11254  0083A2  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11255                           
 11256                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11257  0083A6  EE20 F007          	lfsr	2,7
 11258  0083AA  5012               	movf	sm_init@psm^0,w,c
 11259  0083AC  26D9               	addwf	fsr2l,f,c
 11260  0083AE  5013               	movf	(sm_init@psm+1)^0,w,c
 11261  0083B0  22DA               	addwfc	fsr2h,f,c
 11262  0083B2  0E00               	movlw	0
 11263  0083B4  6EDE               	movwf	postinc2,c
 11264  0083B6  0E00               	movlw	0
 11265  0083B8  6EDD               	movwf	postdec2,c
 11266                           
 11267                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11268  0083BA  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11269  0083BE  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11270  0083C2  EC96  F043         	call	_sm_restart	;wreg free
 11271  0083C6  0012               	return		;funcret
 11272  0083C8                     __end_of_sm_init:
 11273                           	callstack 0
 11274                           
 11275 ;; *************** function _sm_restart *****************
 11276 ;; Defined at:
 11277 ;;		line 23 in file "sm_common_MC50.c"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;  psm             2   15[COMRAM] PTR struct .
 11280 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11281 ;; Auto vars:     Size  Location     Type
 11282 ;;		None
 11283 ;; Return value:  Size  Location     Type
 11284 ;;                  1    wreg      void 
 11285 ;; Registers used:
 11286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11287 ;; Tracked objects:
 11288 ;;		On entry : 0/1
 11289 ;;		On exit  : 0/0
 11290 ;;		Unchanged: 0/0
 11291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11295 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11296 ;;Total ram usage:        2 bytes
 11297 ;; Hardware stack levels used: 1
 11298 ;; Hardware stack levels required when called: 4
 11299 ;; This function calls:
 11300 ;;		Nothing
 11301 ;; This function is called by:
 11302 ;;		_sm_init
 11303 ;; This function uses a non-reentrant model
 11304 ;;
 11305                           
 11306                           	psect	text24
 11307  00872C                     __ptext24:
 11308                           	callstack 0
 11309  00872C                     _sm_restart:
 11310                           	callstack 25
 11311                           
 11312                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11313                           
 11314                           ;incstack = 0
 11315  00872C  EE20 F006          	lfsr	2,6
 11316  008730  5010               	movf	sm_restart@psm^0,w,c
 11317  008732  26D9               	addwf	fsr2l,f,c
 11318  008734  5011               	movf	(sm_restart@psm+1)^0,w,c
 11319  008736  22DA               	addwfc	fsr2h,f,c
 11320  008738  50DF               	movf	indf2,w,c
 11321  00873A  A4D8               	btfss	status,2,c
 11322  00873C  D00E               	goto	l19491
 11323                           
 11324                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11325  00873E  EE20 F002          	lfsr	2,2
 11326  008742  5010               	movf	sm_restart@psm^0,w,c
 11327  008744  26D9               	addwf	fsr2l,f,c
 11328  008746  5011               	movf	(sm_restart@psm+1)^0,w,c
 11329  008748  22DA               	addwfc	fsr2h,f,c
 11330  00874A  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11331  00874E  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11332  008752  CFDE FFE6          	movff	postinc2,postinc1
 11333  008756  CFDD FFE5          	movff	postdec2,postdec1
 11334  00875A                     l19491:
 11335                           
 11336                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11337  00875A  EE20 F004          	lfsr	2,4
 11338  00875E  5010               	movf	sm_restart@psm^0,w,c
 11339  008760  26D9               	addwf	fsr2l,f,c
 11340  008762  5011               	movf	(sm_restart@psm+1)^0,w,c
 11341  008764  22DA               	addwfc	fsr2h,f,c
 11342  008766  0E00               	movlw	0
 11343  008768  6EDE               	movwf	postinc2,c
 11344  00876A  0E00               	movlw	0
 11345  00876C  6EDD               	movwf	postdec2,c
 11346  00876E  0012               	return		;funcret
 11347  008770                     __end_of_sm_restart:
 11348                           	callstack 0
 11349                           
 11350 ;; *************** function _clearLearningValue *****************
 11351 ;; Defined at:
 11352 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11353 ;; Parameters:    Size  Location     Type
 11354 ;;		None
 11355 ;; Auto vars:     Size  Location     Type
 11356 ;;		None
 11357 ;; Return value:  Size  Location     Type
 11358 ;;                  1    wreg      void 
 11359 ;; Registers used:
 11360 ;;		wreg, status,2
 11361 ;; Tracked objects:
 11362 ;;		On entry : 3F/1
 11363 ;;		On exit  : 3F/0
 11364 ;;		Unchanged: 0/0
 11365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11370 ;;Total ram usage:        0 bytes
 11371 ;; Hardware stack levels used: 1
 11372 ;; Hardware stack levels required when called: 4
 11373 ;; This function calls:
 11374 ;;		Nothing
 11375 ;; This function is called by:
 11376 ;;		_sm_execute_ControlLearning
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           	psect	text25
 11381  007B26                     __ptext25:
 11382                           	callstack 0
 11383  007B26                     _clearLearningValue:
 11384                           	callstack 24
 11385                           
 11386                           ; BSR set to: 1
 11387                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11388                           
 11389                           ;incstack = 0
 11390  007B26  0E00               	movlw	0
 11391  007B28  0100               	movlb	0	; () banked
 11392  007B2A  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11393  007B2C  0E00               	movlw	0
 11394  007B2E  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11395  007B30  0E00               	movlw	0
 11396  007B32  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11397  007B34  0E00               	movlw	0
 11398  007B36  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11399                           
 11400                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11401  007B38  0E00               	movlw	0
 11402  007B3A  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11403  007B3C  0E00               	movlw	0
 11404  007B3E  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11405  007B40  0E00               	movlw	0
 11406  007B42  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11407  007B44  0E00               	movlw	0
 11408  007B46  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11409                           
 11410                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11411  007B48  0E00               	movlw	0
 11412  007B4A  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11413                           
 11414                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11415  007B4C  0E00               	movlw	0
 11416  007B4E  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11417                           
 11418                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11419  007B50  0E00               	movlw	0
 11420  007B52  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11421  007B54  0E00               	movlw	0
 11422  007B56  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11423                           
 11424                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11425  007B58  0E00               	movlw	0
 11426  007B5A  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11427  007B5C  0E00               	movlw	0
 11428  007B5E  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11429                           
 11430                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11431  007B60  0E00               	movlw	0
 11432  007B62  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11433  007B64  0E00               	movlw	0
 11434  007B66  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11435                           
 11436                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11437  007B68  0E00               	movlw	0
 11438  007B6A  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11439  007B6C  0E00               	movlw	0
 11440  007B6E  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11441                           
 11442                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11443  007B70  0E00               	movlw	0
 11444  007B72  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11445  007B74  0E00               	movlw	0
 11446  007B76  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11447                           
 11448                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11449  007B78  0E00               	movlw	0
 11450  007B7A  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11451  007B7C  0E00               	movlw	0
 11452  007B7E  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11453                           
 11454                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11455  007B80  0E00               	movlw	0
 11456  007B82  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11457  007B84  0E00               	movlw	0
 11458  007B86  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11459  007B88  0E00               	movlw	0
 11460  007B8A  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11461  007B8C  0E00               	movlw	0
 11462  007B8E  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11463                           
 11464                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11465  007B90  0E00               	movlw	0
 11466  007B92  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11467  007B94  0E00               	movlw	0
 11468  007B96  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11469  007B98  0E00               	movlw	0
 11470  007B9A  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11471  007B9C  0E00               	movlw	0
 11472  007B9E  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11473                           
 11474                           ; BSR set to: 0
 11475  007BA0  0012               	return		;funcret
 11476  007BA2                     __end_of_clearLearningValue:
 11477                           	callstack 0
 11478                           
 11479 ;; *************** function _calculateMean *****************
 11480 ;; Defined at:
 11481 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;  meanValue       4   15[COMRAM] unsigned long 
 11484 ;;  newValue        4   19[COMRAM] unsigned long 
 11485 ;; Auto vars:     Size  Location     Type
 11486 ;;		None
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  4   15[COMRAM] unsigned long 
 11489 ;; Registers used:
 11490 ;;		wreg, status,2, status,0
 11491 ;; Tracked objects:
 11492 ;;		On entry : 3E/1
 11493 ;;		On exit  : 3E/0
 11494 ;;		Unchanged: 3E/0
 11495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11496 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11498 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11499 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11500 ;;Total ram usage:       12 bytes
 11501 ;; Hardware stack levels used: 1
 11502 ;; Hardware stack levels required when called: 4
 11503 ;; This function calls:
 11504 ;;		Nothing
 11505 ;; This function is called by:
 11506 ;;		_sm_execute_ControlLearning
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           	psect	text26
 11511  0080EC                     __ptext26:
 11512                           	callstack 0
 11513  0080EC                     _calculateMean:
 11514                           	callstack 24
 11515                           
 11516                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11517                           
 11518                           ; BSR set to: 0
 11519                           ;incstack = 0
 11520  0080EC  5010               	movf	calculateMean@meanValue^0,w,c
 11521  0080EE  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11522  0080F0  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11523  0080F2  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11524  0080F4  A4D8               	btfss	status,2,c
 11525  0080F6  D009               	goto	l20451
 11526                           
 11527                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11528  0080F8  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11529  0080FC  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11530  008100  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11531  008104  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11532                           
 11533                           ;sm_ControlLearning_MC50.c: 416:     }
 11534  008108  D019               	goto	l20453
 11535  00810A                     l20451:
 11536                           
 11537                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11538  00810A  5014               	movf	calculateMean@newValue^0,w,c
 11539  00810C  2410               	addwf	calculateMean@meanValue^0,w,c
 11540  00810E  6E18               	movwf	??_calculateMean^0,c
 11541  008110  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11542  008112  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11543  008114  6E19               	movwf	(??_calculateMean+1)^0,c
 11544  008116  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11545  008118  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11546  00811A  6E1A               	movwf	(??_calculateMean+2)^0,c
 11547  00811C  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11548  00811E  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11549  008120  6E1B               	movwf	(??_calculateMean+3)^0,c
 11550  008122  90D8               	bcf	status,0,c
 11551  008124  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11552  008126  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11553  008128  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11554  00812A  3218               	rrcf	??_calculateMean^0,f,c
 11555  00812C  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11556  008130  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11557  008134  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11558  008138  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11559  00813C                     l20453:
 11560                           
 11561                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11562  00813C  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11563  008140  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11564  008144  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11565  008148  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11566  00814C  0012               	return		;funcret
 11567  00814E                     __end_of_calculateMean:
 11568                           	callstack 0
 11569                           
 11570 ;; *************** function _actionZone_Opening *****************
 11571 ;; Defined at:
 11572 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11573 ;; Parameters:    Size  Location     Type
 11574 ;;		None
 11575 ;; Auto vars:     Size  Location     Type
 11576 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11577 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11578 ;;  securityClos    1   12[BANK0 ] enum E10397
 11579 ;; Return value:  Size  Location     Type
 11580 ;;                  1    wreg      void 
 11581 ;; Registers used:
 11582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11583 ;; Tracked objects:
 11584 ;;		On entry : 3F/0
 11585 ;;		On exit  : 0/0
 11586 ;;		Unchanged: 0/0
 11587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11589 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11591 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11592 ;;Total ram usage:        3 bytes
 11593 ;; Hardware stack levels used: 1
 11594 ;; Hardware stack levels required when called: 8
 11595 ;; This function calls:
 11596 ;;		_CloseOrder
 11597 ;;		_GetOpenOrder
 11598 ;;		_GetSecurityStateInClosing
 11599 ;;		_GetSecurityStateInOpening
 11600 ;;		_InitFullAutoTime
 11601 ;;		_InitWalkAutoTime
 11602 ;;		_SetSegmentValueIntermitent
 11603 ;;		_StopOrder
 11604 ;;		_VerifyFollowMe
 11605 ;;		_controlVelocity
 11606 ;;		_setPositionInvertionInClosing
 11607 ;;		_setPositionInvertionInOpening
 11608 ;;		_sm_send_event
 11609 ;; This function is called by:
 11610 ;;		_sm_execute_ControlGate
 11611 ;; This function uses a non-reentrant model
 11612 ;;
 11613                           
 11614                           	psect	text27
 11615  00446C                     __ptext27:
 11616                           	callstack 0
 11617  00446C                     _actionZone_Opening:
 11618                           	callstack 21
 11619                           
 11620                           ; BSR set to: 0
 11621                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11622                           
 11623                           ;incstack = 0
 11624  00446C  ECD7  F038         	call	_GetSecurityStateInClosing	;wreg free
 11625  004470  0100               	movlb	0	; () banked
 11626  004472  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11627                           
 11628                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11629  004474  EC2A  F039         	call	_GetSecurityStateInOpening	;wreg free
 11630  004478  0100               	movlb	0	; () banked
 11631  00447A  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11635  00447C  EC85  F028         	call	_GetOpenOrder	;wreg free
 11636  004480  0100               	movlb	0	; () banked
 11637  004482  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11638                           
 11639                           ; BSR set to: 0
 11640                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11641  004484  EC96  F025         	call	_controlVelocity	;wreg free
 11642                           
 11643                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11644  004488  EC9A  F047         	call	_InitFullAutoTime	;wreg free
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11648  00448C  0E00               	movlw	0
 11649  00448E  0101               	movlb	1	; () banked
 11650  004490  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11651                           
 11652                           ; BSR set to: 1
 11653                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11654  004492  0100               	movlb	0	; () banked
 11655  004494  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11656  004496  ECF2  F046         	call	_VerifyFollowMe
 11657                           
 11658                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11659  00449A  0E03               	movlw	3
 11660  00449C  0101               	movlb	1	; () banked
 11661  00449E  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11662  0044A0  D00D               	goto	l21307
 11663                           
 11664                           ; BSR set to: 1
 11665                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11666  0044A2  0E00               	movlw	0
 11667  0044A4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11668  0044A6                     l21305:
 11669                           
 11670                           ; BSR set to: 1
 11671                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11672  0044A6  0EE4               	movlw	low _controlGate_stateMachine
 11673  0044A8  6E12               	movwf	sm_send_event@psm^0,c
 11674  0044AA  0E01               	movlw	high _controlGate_stateMachine
 11675  0044AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11676  0044AE  0E00               	movlw	0
 11677  0044B0  6E15               	movwf	(sm_send_event@event+1)^0,c
 11678  0044B2  0E10               	movlw	16
 11679  0044B4  6E14               	movwf	sm_send_event@event^0,c
 11680  0044B6  ECD6  F040         	call	_sm_send_event	;wreg free
 11681                           
 11682                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11683  0044BA  0012               	return	
 11684  0044BC                     l21307:
 11685                           
 11686                           ; BSR set to: 1
 11687  0044BC  0E02               	movlw	2
 11688  0044BE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11689  0044C0  A4D8               	btfss	status,2,c
 11690  0044C2  D013               	goto	l21321
 11691                           
 11692                           ; BSR set to: 1
 11693  0044C4  BFAD               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11694  0044C6  D005               	goto	u24700
 11695  0044C8  51AD               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11696  0044CA  E10F               	bnz	l21321
 11697  0044CC  05AC               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11698  0044CE  B0D8               	btfsc	status,0,c
 11699  0044D0  D00C               	goto	l21321
 11700  0044D2                     u24700:
 11701                           
 11702                           ; BSR set to: 1
 11703                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11704  0044D2  EC28  F036         	call	_setPositionInvertionInOpening	;wreg free
 11705                           
 11706                           ; BSR set to: 1
 11707                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11708  0044D6  EC48  F047         	call	_StopOrder	;wreg free
 11709                           
 11710                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11711  0044DA  EC1E  F048         	call	_InitWalkAutoTime	;wreg free
 11712                           
 11713                           ; BSR set to: 0
 11714                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11715  0044DE  0E01               	movlw	1
 11716  0044E0  0101               	movlb	1	; () banked
 11717  0044E2  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11718                           
 11719                           ; BSR set to: 1
 11720                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11721  0044E4  0E01               	movlw	1
 11722  0044E6  6F8F               	movwf	_Abertura_pedonal& (0+255),b
 11723                           
 11724                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11725  0044E8  0012               	return	
 11726  0044EA                     l21321:
 11727                           
 11728                           ; BSR set to: 1
 11729  0044EA  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11730  0044EC  B4D8               	btfsc	status,2,c
 11731  0044EE  D010               	goto	u24750
 11732                           
 11733                           ; BSR set to: 1
 11734  0044F0  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11735  0044F2  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11736  0044F4  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11737  0044F6  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11738  0044F8  A4D8               	btfss	status,2,c
 11739  0044FA  D02F               	goto	l21341
 11740                           
 11741                           ; BSR set to: 1
 11742  0044FC  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11743  0044FE  A4D8               	btfss	status,2,c
 11744  004500  D02C               	goto	l21341
 11745                           
 11746                           ; BSR set to: 1
 11747  004502  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11748  004504  A4D8               	btfss	status,2,c
 11749  004506  D029               	goto	l21341
 11750                           
 11751                           ; BSR set to: 1
 11752  004508  0E02               	movlw	2
 11753  00450A  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11754  00450C  A4D8               	btfss	status,2,c
 11755  00450E  D025               	goto	l21341
 11756  004510                     u24750:
 11757                           
 11758                           ; BSR set to: 1
 11759                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11760  004510  0E04               	movlw	4
 11761  004512  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11762                           
 11763                           ; BSR set to: 1
 11764                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11765  004514  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11766  004518  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11767  00451C  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11768  004520  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11769                           
 11770                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11771  004524  0E00               	movlw	0
 11772  004526  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11773                           
 11774                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11775  004528  0E00               	movlw	0
 11776  00452A  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11777                           
 11778                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11779  00452C  0E01               	movlw	1
 11780  00452E  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11781                           
 11782                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11783  004530  0E00               	movlw	0
 11784  004532  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11785                           
 11786                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11787  004534  0E00               	movlw	0
 11788  004536  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11789  004538  0E28               	movlw	40
 11790  00453A  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11791                           
 11792                           ; BSR set to: 1
 11793                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11794  00453C  0E00               	movlw	0
 11795  00453E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11796  004540  0E00               	movlw	0
 11797  004542  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11798  004544  0E04               	movlw	4
 11799  004546  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11800  004548  0E0F               	movlw	15
 11801  00454A  EC4D  F045         	call	_SetSegmentValueIntermitent
 11802                           
 11803                           ; BSR set to: 1
 11804                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11805  00454E  EC48  F047         	call	_StopOrder	;wreg free
 11806                           
 11807                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11808  004552  0E01               	movlw	1
 11809  004554  0101               	movlb	1	; () banked
 11810  004556  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11811                           
 11812                           ;sm_ControlGate_MC50.c: 419:     }
 11813  004558  0012               	return	
 11814  00455A                     l21341:
 11815                           
 11816                           ; BSR set to: 1
 11817  00455A  0100               	movlb	0	; () banked
 11818  00455C  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11819  00455E  B4D8               	btfsc	status,2,c
 11820  004560  D012               	goto	u24790
 11821                           
 11822                           ; BSR set to: 0
 11823  004562  0101               	movlb	1	; () banked
 11824  004564  BFC7               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11825  004566  D025               	goto	l21361
 11826  004568  51C7               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11827  00456A  E103               	bnz	u24770
 11828  00456C  05C6               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11829  00456E  A0D8               	btfss	status,0,c
 11830  004570  D020               	goto	l21361
 11831  004572                     u24770:
 11832                           
 11833                           ; BSR set to: 1
 11834  004572  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11835  004574  A4D8               	btfss	status,2,c
 11836  004576  D01D               	goto	l21361
 11837                           
 11838                           ; BSR set to: 1
 11839  004578  BFCD               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11840  00457A  D005               	goto	u24790
 11841  00457C  51CD               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11842  00457E  E119               	bnz	l21361
 11843  004580  05CC               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11844  004582  B0D8               	btfsc	status,0,c
 11845  004584  D016               	goto	l21361
 11846  004586                     u24790:
 11847  004586  0101               	movlb	1	; () banked
 11848  004588  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11849  00458A  A4D8               	btfss	status,2,c
 11850  00458C  D012               	goto	l21361
 11851                           
 11852                           ; BSR set to: 1
 11853                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11854  00458E  0100               	movlb	0	; () banked
 11855  004590  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11856  004592  B4D8               	btfsc	status,2,c
 11857  004594  D002               	goto	l21355
 11858                           
 11859                           ; BSR set to: 0
 11860                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11861  004596  0101               	movlb	1	; () banked
 11862  004598  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11863  00459A                     l21355:
 11864                           
 11865                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11866  00459A  0E01               	movlw	1
 11867  00459C  0101               	movlb	1	; () banked
 11868  00459E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11869                           
 11870                           ; BSR set to: 1
 11871                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11872  0045A0  0E00               	movlw	0
 11873  0045A2  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11874  0045A4  0E0A               	movlw	10
 11875  0045A6  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11876                           
 11877                           ; BSR set to: 1
 11878                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11879  0045A8  0E00               	movlw	0
 11880  0045AA  6FDD               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11881  0045AC  0E1E               	movlw	30
 11882  0045AE  6FDC               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11883                           
 11884                           ;sm_ControlGate_MC50.c: 430:     }
 11885  0045B0  0012               	return	
 11886  0045B2                     l21361:
 11887                           
 11888                           ; BSR set to: 1
 11889  0045B2  BFC7               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11890  0045B4  D02D               	goto	l21391
 11891  0045B6  51C7               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11892  0045B8  E103               	bnz	u24820
 11893  0045BA  05C6               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11894  0045BC  A0D8               	btfss	status,0,c
 11895  0045BE  D028               	goto	l21391
 11896  0045C0                     u24820:
 11897                           
 11898                           ; BSR set to: 1
 11899  0045C0  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11900  0045C2  A4D8               	btfss	status,2,c
 11901  0045C4  D025               	goto	l21391
 11902                           
 11903                           ; BSR set to: 1
 11904                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11905  0045C6  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11906  0045C8  A4D8               	btfss	status,2,c
 11907  0045CA  D005               	goto	l21373
 11908                           
 11909                           ; BSR set to: 1
 11910                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11911  0045CC  0E00               	movlw	0
 11912  0045CE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11913                           
 11914                           ; BSR set to: 1
 11915                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11916  0045D0  EC81  F031         	call	_setPositionInvertionInClosing	;wreg free
 11917  0045D4  D768               	goto	l21305
 11918  0045D6                     l21373:
 11919                           
 11920                           ; BSR set to: 1
 11921  0045D6  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11922  0045D8  D005               	goto	u24850
 11923  0045DA  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11924  0045DC  E116               	bnz	l21389
 11925  0045DE  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11926  0045E0  B0D8               	btfsc	status,0,c
 11927  0045E2  D013               	goto	l21389
 11928  0045E4                     u24850:
 11929                           
 11930                           ; BSR set to: 1
 11931                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 11932  0045E4  EC93  F046         	call	_CloseOrder	;wreg free
 11933                           
 11934                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 11935  0045E8  EC28  F036         	call	_setPositionInvertionInOpening	;wreg free
 11936                           
 11937                           ; BSR set to: 1
 11938                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 11939  0045EC  0E00               	movlw	0
 11940  0045EE  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11941                           
 11942                           ; BSR set to: 1
 11943                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 11944  0045F0  0E01               	movlw	1
 11945  0045F2  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 11946                           
 11947                           ; BSR set to: 1
 11948                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 11949  0045F4  0E00               	movlw	0
 11950  0045F6  6FCD               	movwf	(_ts_system+49)& (0+255),b	;volatile
 11951  0045F8  0E14               	movlw	20
 11952  0045FA  6FCC               	movwf	(_ts_system+48)& (0+255),b	;volatile
 11953                           
 11954                           ; BSR set to: 1
 11955                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 11956  0045FC  0E00               	movlw	0
 11957  0045FE  6FCF               	movwf	(_ts_system+51)& (0+255),b	;volatile
 11958  004600  0E28               	movlw	40
 11959  004602  6FCE               	movwf	(_ts_system+50)& (0+255),b	;volatile
 11960                           
 11961                           ; BSR set to: 1
 11962                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 11963  004604  0E01               	movlw	1
 11964  004606  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 11965                           
 11966                           ;sm_ControlGate_MC50.c: 449:         } else
 11967  004608  0012               	return	
 11968  00460A                     l21389:
 11969                           
 11970                           ; BSR set to: 1
 11971                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 11972  00460A  0E00               	movlw	0
 11973  00460C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11974  00460E  0012               	return	
 11975  004610                     l21391:
 11976                           
 11977                           ; BSR set to: 1
 11978  004610  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11979  004612  A4D8               	btfss	status,2,c
 11980  004614  D00A               	goto	l21411
 11981                           
 11982                           ; BSR set to: 1
 11983                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 11984  004616  0E00               	movlw	0
 11985  004618  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11986                           
 11987                           ; BSR set to: 1
 11988                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 11989  00461A  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11990  00461C  D7E3               	goto	u24850
 11991  00461E  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11992  004620  E14E               	bnz	l2718
 11993  004622  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11994  004624  B0D8               	btfsc	status,0,c
 11995  004626  0012               	return	
 11996  004628  D7DD               	goto	u24850
 11997  00462A                     l21411:
 11998                           
 11999                           ; BSR set to: 1
 12000  00462A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12001  00462C  A4D8               	btfss	status,2,c
 12002  00462E  D018               	goto	l21429
 12003                           
 12004                           ; BSR set to: 1
 12005  004630  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12006  004632  D005               	goto	u24890
 12007  004634  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12008  004636  E114               	bnz	l21429
 12009  004638  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12010  00463A  B0D8               	btfsc	status,0,c
 12011  00463C  D011               	goto	l21429
 12012  00463E                     u24890:
 12013                           
 12014                           ; BSR set to: 1
 12015                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 12016  00463E  0E02               	movlw	2
 12017  004640  0100               	movlb	0	; () banked
 12018  004642  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 12019  004644  B4D8               	btfsc	status,2,c
 12020  004646  D007               	goto	l21425
 12021                           
 12022                           ; BSR set to: 0
 12023                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 12024  004648  0101               	movlb	1	; () banked
 12025  00464A  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 12026                           
 12027                           ; BSR set to: 1
 12028                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 12029  00464C  0E00               	movlw	0
 12030  00464E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12031                           
 12032                           ; BSR set to: 1
 12033                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 12034  004650  EC28  F036         	call	_setPositionInvertionInOpening	;wreg free
 12035  004654  D728               	goto	l21305
 12036  004656                     l21425:
 12037                           
 12038                           ; BSR set to: 0
 12039                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 12040  004656  EC28  F036         	call	_setPositionInvertionInOpening	;wreg free
 12041  00465A                     l21427:
 12042                           
 12043                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 12044  00465A  EC48  F047         	call	_StopOrder	;wreg free
 12045  00465E  0012               	return	
 12046  004660                     l21429:
 12047                           
 12048                           ; BSR set to: 1
 12049  004660  0100               	movlb	0	; () banked
 12050  004662  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 12051  004664  A4D8               	btfss	status,2,c
 12052  004666  D005               	goto	l21435
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 12056  004668  0E03               	movlw	3
 12057  00466A  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12058  00466C  B4D8               	btfsc	status,2,c
 12059  00466E  0012               	return	
 12060  004670  D7F4               	goto	l21427
 12061  004672                     l21435:
 12062                           
 12063                           ; BSR set to: 0
 12064  004672  0E02               	movlw	2
 12065  004674  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12066  004676  A4D8               	btfss	status,2,c
 12067  004678  D011               	goto	l21447
 12068                           
 12069                           ; BSR set to: 0
 12070  00467A  0E02               	movlw	2
 12071  00467C  0101               	movlb	1	; () banked
 12072  00467E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12073  004680  A4D8               	btfss	status,2,c
 12074  004682  D00C               	goto	l21447
 12075                           
 12076                           ; BSR set to: 1
 12077  004684  0E02               	movlw	2
 12078  004686  0100               	movlb	0	; () banked
 12079  004688  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12080  00468A  B4D8               	btfsc	status,2,c
 12081  00468C  D007               	goto	l21447
 12082                           
 12083                           ; BSR set to: 0
 12084                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 12085  00468E  EC28  F036         	call	_setPositionInvertionInOpening	;wreg free
 12086                           
 12087                           ; BSR set to: 1
 12088                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 12089  004692  EC48  F047         	call	_StopOrder	;wreg free
 12090                           
 12091                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 12092  004696  EC1E  F048         	call	_InitWalkAutoTime	;wreg free
 12093                           
 12094                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 12095  00469A  0012               	return	
 12096  00469C                     l21447:
 12097  00469C  0100               	movlb	0	; () banked
 12098  00469E  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12099  0046A0  B4D8               	btfsc	status,2,c
 12100  0046A2  D008               	goto	u24980
 12101                           
 12102                           ; BSR set to: 0
 12103  0046A4  0E03               	movlw	3
 12104  0046A6  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12105  0046A8  B4D8               	btfsc	status,2,c
 12106  0046AA  D004               	goto	u24980
 12107                           
 12108                           ; BSR set to: 0
 12109  0046AC  0E04               	movlw	4
 12110  0046AE  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12111  0046B0  A4D8               	btfss	status,2,c
 12112  0046B2  0012               	return	
 12113  0046B4                     u24980:
 12114                           
 12115                           ; BSR set to: 0
 12116  0046B4  0E02               	movlw	2
 12117  0046B6  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12118  0046B8  B4D8               	btfsc	status,2,c
 12119  0046BA  0012               	return	
 12120  0046BC  D7CC               	goto	l21425
 12121  0046BE                     l2718:
 12122  0046BE  0012               	return		;funcret
 12123  0046C0                     __end_of_actionZone_Opening:
 12124                           	callstack 0
 12125                           
 12126 ;; *************** function _setPositionInvertionInOpening *****************
 12127 ;; Defined at:
 12128 ;;		line 894 in file "sm_ControlGate_MC50.c"
 12129 ;; Parameters:    Size  Location     Type
 12130 ;;		None
 12131 ;; Auto vars:     Size  Location     Type
 12132 ;;		None
 12133 ;; Return value:  Size  Location     Type
 12134 ;;                  1    wreg      void 
 12135 ;; Registers used:
 12136 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12137 ;; Tracked objects:
 12138 ;;		On entry : 3E/1
 12139 ;;		On exit  : 3F/1
 12140 ;;		Unchanged: 0/0
 12141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12144 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12145 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12146 ;;Total ram usage:        8 bytes
 12147 ;; Hardware stack levels used: 1
 12148 ;; Hardware stack levels required when called: 6
 12149 ;; This function calls:
 12150 ;;		_getTimeDecelaration
 12151 ;; This function is called by:
 12152 ;;		_actionZone_Opening
 12153 ;; This function uses a non-reentrant model
 12154 ;;
 12155                           
 12156                           	psect	text28
 12157  006C50                     __ptext28:
 12158                           	callstack 0
 12159  006C50                     _setPositionInvertionInOpening:
 12160                           	callstack 22
 12161                           
 12162                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 12163                           
 12164                           ;incstack = 0
 12165  006C50  0E02               	movlw	2
 12166  006C52  0100               	movlb	0	; () banked
 12167  006C54  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 12168  006C56  B4D8               	btfsc	status,2,c
 12169  006C58  D009               	goto	l20403
 12170                           
 12171                           ; BSR set to: 0
 12172                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 12173  006C5A  0EFE               	movlw	254
 12174  006C5C  0101               	movlb	1	; () banked
 12175  006C5E  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12176  006C60  0EFF               	movlw	255
 12177  006C62  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12178  006C64  0EFF               	movlw	255
 12179  006C66  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12180  006C68  0EFF               	movlw	255
 12181  006C6A  D006               	goto	L69
 12182  006C6C                     l20403:
 12183                           
 12184                           ; BSR set to: 0
 12185                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12186  006C6C  0E01               	movlw	1
 12187  006C6E  0101               	movlb	1	; () banked
 12188  006C70  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12189  006C72  0E00               	movlw	0
 12190  006C74  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12191  006C76  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12192  006C78                     L69:
 12193  006C78  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12194                           
 12195                           ; BSR set to: 1
 12196                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12197  006C7A  0E03               	movlw	3
 12198  006C7C  ECB4  F035         	call	_getTimeDecelaration
 12199  006C80  5029               	movf	?_getTimeDecelaration^0,w,c
 12200  006C82  0101               	movlb	1	; () banked
 12201  006C84  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12202  006C86  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12203  006C88  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12204  006C8A  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12205  006C8C  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12206  006C8E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12207  006C90  0A80               	xorlw	128
 12208  006C92  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12209  006C94  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12210  006C96  0A80               	xorlw	128
 12211  006C98  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12212  006C9A  B0D8               	btfsc	status,0,c
 12213  006C9C  D004               	goto	l20409
 12214                           
 12215                           ; BSR set to: 1
 12216                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12217  006C9E  0E03               	movlw	3
 12218  006CA0  ECB4  F035         	call	_getTimeDecelaration
 12219  006CA4  D015               	goto	L70
 12220  006CA6                     l20409:
 12221                           
 12222                           ; BSR set to: 1
 12223  006CA6  0E01               	movlw	1
 12224  006CA8  ECB4  F035         	call	_getTimeDecelaration
 12225  006CAC  0101               	movlb	1	; () banked
 12226  006CAE  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12227  006CB0  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12228  006CB2  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12229  006CB4  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12230  006CB6  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12231  006CB8  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12232  006CBA  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12233  006CBC  0A80               	xorlw	128
 12234  006CBE  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12235  006CC0  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12236  006CC2  0A80               	xorlw	128
 12237  006CC4  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12238  006CC6  B0D8               	btfsc	status,0,c
 12239  006CC8  D00B               	goto	l20413
 12240                           
 12241                           ; BSR set to: 1
 12242                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12243  006CCA  0E01               	movlw	1
 12244  006CCC  ECB4  F035         	call	_getTimeDecelaration
 12245  006CD0                     L70:
 12246  006CD0  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12247  006CD4  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12248  006CD8  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12249  006CDC  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12250  006CE0                     l20413:
 12251                           
 12252                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12253  006CE0  0100               	movlb	0	; () banked
 12254  006CE2  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12255  006CE4  0D0A               	mullw	10
 12256  006CE6  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12257  006CEA  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12258  006CEE  0E00               	movlw	0
 12259  006CF0  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12260  006CF2  0EFF               	movlw	255
 12261  006CF4  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12262  006CF6  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12263  006CF8  0101               	movlb	1	; () banked
 12264  006CFA  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12265  006CFC  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12266  006CFE  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12267  006D00  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12268  006D02  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12269  006D04  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12270  006D06  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12271  006D08  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12272  006D0A  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12273  006D0C  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12274  006D0E  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12275  006D10  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12276  006D12  0EC8               	movlw	200
 12277  006D14  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12278  006D16  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12279  006D18  0E00               	movlw	0
 12280  006D1A  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12281  006D1C  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12282  006D1E  0E00               	movlw	0
 12283  006D20  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12284  006D22  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12285  006D24  0E00               	movlw	0
 12286  006D26  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12287  006D28  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12288                           
 12289                           ; BSR set to: 1
 12290  006D2A  0012               	return		;funcret
 12291  006D2C                     __end_of_setPositionInvertionInOpening:
 12292                           	callstack 0
 12293                           
 12294 ;; *************** function _controlVelocity *****************
 12295 ;; Defined at:
 12296 ;;		line 527 in file "outputs_MC50.c"
 12297 ;; Parameters:    Size  Location     Type
 12298 ;;		None
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;		None
 12301 ;; Return value:  Size  Location     Type
 12302 ;;                  1    wreg      void 
 12303 ;; Registers used:
 12304 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12305 ;; Tracked objects:
 12306 ;;		On entry : 3E/1
 12307 ;;		On exit  : 3E/0
 12308 ;;		Unchanged: 0/0
 12309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12312 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12313 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12314 ;;Total ram usage:        1 bytes
 12315 ;; Hardware stack levels used: 1
 12316 ;; Hardware stack levels required when called: 7
 12317 ;; This function calls:
 12318 ;;		_ControlDecelarationFactor
 12319 ;;		_InitSoftStop
 12320 ;;		_getStateOpenPosition
 12321 ;;		_getTimeDecelaration
 12322 ;; This function is called by:
 12323 ;;		_main
 12324 ;;		_actionZone_Opening
 12325 ;; This function uses a non-reentrant model
 12326 ;;
 12327                           
 12328                           	psect	text29
 12329  004B2C                     __ptext29:
 12330                           	callstack 0
 12331  004B2C                     _controlVelocity:
 12332                           	callstack 21
 12333                           
 12334                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12335                           
 12336                           ; BSR set to: 1
 12337                           ;incstack = 0
 12338  004B2C  0101               	movlb	1	; () banked
 12339  004B2E  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12340  004B30  A4D8               	btfss	status,2,c
 12341  004B32  D017               	goto	l20215
 12342                           
 12343                           ; BSR set to: 1
 12344  004B34  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12345  004B36  A4D8               	btfss	status,2,c
 12346  004B38  D014               	goto	l20215
 12347                           
 12348                           ; BSR set to: 1
 12349                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12350  004B3A  517B               	movf	_powerControl_st& (0+255),w,b
 12351  004B3C  A4D8               	btfss	status,2,c
 12352  004B3E  D008               	goto	l20209
 12353                           
 12354                           ; BSR set to: 1
 12355                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12356  004B40  0E00               	movlw	0
 12357  004B42  6FC9               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12358  004B44  0E0A               	movlw	10
 12359  004B46  6FC8               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12360                           
 12361                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12362  004B48  0E00               	movlw	0
 12363  004B4A  6FCB               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12364  004B4C  0E14               	movlw	20
 12365  004B4E  6FCA               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12366  004B50                     l20209:
 12367                           
 12368                           ; BSR set to: 1
 12369                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12370  004B50  ECC1  F047         	call	_ControlDecelarationFactor	;wreg free
 12371                           
 12372                           ; BSR set to: 1
 12373                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12374  004B54  0E01               	movlw	1
 12375  004B56  6F7B               	movwf	_powerControl_st& (0+255),b
 12376                           
 12377                           ; BSR set to: 1
 12378                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12379  004B58  0E00               	movlw	0
 12380  004B5A  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12381  004B5C  0E00               	movlw	0
 12382  004B5E  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12383                           
 12384                           ;outputs_MC50.c: 541:     }
 12385  004B60  0012               	return	
 12386  004B62                     l20215:
 12387                           
 12388                           ; BSR set to: 1
 12389  004B62  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12390  004B64  B4D8               	btfsc	status,2,c
 12391  004B66  D003               	goto	u23280
 12392                           
 12393                           ; BSR set to: 1
 12394  004B68  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12395  004B6A  A4D8               	btfss	status,2,c
 12396  004B6C  D007               	goto	l20221
 12397  004B6E                     u23280:
 12398                           
 12399                           ; BSR set to: 1
 12400                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12401  004B6E  0E00               	movlw	0
 12402  004B70  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12403  004B72  0E00               	movlw	0
 12404  004B74  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12405                           
 12406                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12407  004B76  0E00               	movlw	0
 12408  004B78  6F7B               	movwf	_powerControl_st& (0+255),b
 12409                           
 12410                           ;outputs_MC50.c: 547:     }
 12411  004B7A  0012               	return	
 12412  004B7C                     l20221:
 12413                           
 12414                           ; BSR set to: 1
 12415  004B7C  0E03               	movlw	3
 12416  004B7E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12417  004B80  A4D8               	btfss	status,2,c
 12418  004B82  D068               	goto	l20269
 12419                           
 12420                           ; BSR set to: 1
 12421  004B84  0E03               	movlw	3
 12422  004B86  ECB4  F035         	call	_getTimeDecelaration
 12423  004B8A  5029               	movf	?_getTimeDecelaration^0,w,c
 12424  004B8C  0101               	movlb	1	; () banked
 12425  004B8E  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12426  004B90  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12427  004B92  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12428  004B94  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12429  004B96  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12430  004B98  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12431  004B9A  0A80               	xorlw	128
 12432  004B9C  0100               	movlb	0	; () banked
 12433  004B9E  6FDA               	movwf	??_controlVelocity& (0+255),b
 12434  004BA0  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12435  004BA2  0A80               	xorlw	128
 12436  004BA4  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12437  004BA6  A0D8               	btfss	status,0,c
 12438  004BA8  D004               	goto	u23310
 12439                           
 12440                           ; BSR set to: 0
 12441  004BAA  0101               	movlb	1	; () banked
 12442  004BAC  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12443  004BAE  A4D8               	btfss	status,2,c
 12444  004BB0  D051               	goto	l20269
 12445  004BB2                     u23310:
 12446  004BB2  0100               	movlb	0	; () banked
 12447  004BB4  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12448  004BB6  B4D8               	btfsc	status,2,c
 12449  004BB8  D004               	goto	u23330
 12450                           
 12451                           ; BSR set to: 0
 12452  004BBA  0101               	movlb	1	; () banked
 12453  004BBC  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12454  004BBE  B4D8               	btfsc	status,2,c
 12455  004BC0  D00C               	goto	u23350
 12456  004BC2                     u23330:
 12457  004BC2  0101               	movlb	1	; () banked
 12458  004BC4  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12459  004BC6  D005               	goto	u23340
 12460  004BC8  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12461  004BCA  E144               	bnz	l20269
 12462  004BCC  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12463  004BCE  B0D8               	btfsc	status,0,c
 12464  004BD0  D041               	goto	l20269
 12465  004BD2                     u23340:
 12466                           
 12467                           ; BSR set to: 1
 12468  004BD2  0100               	movlb	0	; () banked
 12469  004BD4  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12470  004BD6  B4D8               	btfsc	status,2,c
 12471  004BD8  D03D               	goto	l20269
 12472  004BDA                     u23350:
 12473                           
 12474                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12475  004BDA  0101               	movlb	1	; () banked
 12476  004BDC  517B               	movf	_powerControl_st& (0+255),w,b
 12477  004BDE  A4D8               	btfss	status,2,c
 12478  004BE0  D022               	goto	l20255
 12479                           
 12480                           ; BSR set to: 1
 12481  004BE2  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12482  004BE4  A4D8               	btfss	status,2,c
 12483  004BE6  D01F               	goto	l20255
 12484                           
 12485                           ; BSR set to: 1
 12486                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12487  004BE8  0E00               	movlw	0
 12488  004BEA  6FCB               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12489  004BEC  0E14               	movlw	20
 12490  004BEE  6FCA               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12491                           
 12492                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12493  004BF0  0100               	movlb	0	; () banked
 12494  004BF2  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12495  004BF4  B4D8               	btfsc	status,2,c
 12496  004BF6  D008               	goto	l20245
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12500  004BF8  0E00               	movlw	0
 12501  004BFA  0101               	movlb	1	; () banked
 12502  004BFC  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12503                           
 12504                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12505  004BFE  0E01               	movlw	1
 12506  004C00  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12507                           
 12508                           ; BSR set to: 1
 12509                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12510  004C02  EC2A  F043         	call	_InitSoftStop	;wreg free
 12511                           
 12512                           ;outputs_MC50.c: 563:                     }
 12513  004C06  D00F               	goto	l20255
 12514  004C08                     l20245:
 12515                           
 12516                           ; BSR set to: 0
 12517                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12518  004C08  0E00               	movlw	0
 12519  004C0A  0101               	movlb	1	; () banked
 12520  004C0C  6FC9               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12521  004C0E  0E0A               	movlw	10
 12522  004C10  6FC8               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12523                           
 12524                           ; BSR set to: 1
 12525                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12526  004C12  ECC1  F047         	call	_ControlDecelarationFactor	;wreg free
 12527                           
 12528                           ; BSR set to: 1
 12529                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12530  004C16  0E01               	movlw	1
 12531  004C18  6F7B               	movwf	_powerControl_st& (0+255),b
 12532                           
 12533                           ; BSR set to: 1
 12534                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12535  004C1A  0E00               	movlw	0
 12536  004C1C  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12537  004C1E  0E00               	movlw	0
 12538  004C20  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12539                           
 12540                           ; BSR set to: 1
 12541                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12542  004C22  0E00               	movlw	0
 12543  004C24  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12544  004C26                     l20255:
 12545                           
 12546                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12547  004C26  0101               	movlb	1	; () banked
 12548  004C28  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12549  004C2A  D005               	goto	u23390
 12550  004C2C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12551  004C2E  E102               	bnz	u23391
 12552  004C30  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12553  004C32  B0D8               	btfsc	status,0,c
 12554  004C34                     u23391:
 12555  004C34  0012               	return	
 12556  004C36                     u23390:
 12557                           
 12558                           ; BSR set to: 1
 12559  004C36  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12560  004C38  A4D8               	btfss	status,2,c
 12561  004C3A  0012               	return	
 12562                           
 12563                           ; BSR set to: 1
 12564  004C3C  0100               	movlb	0	; () banked
 12565  004C3E  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12566  004C40  B4D8               	btfsc	status,2,c
 12567  004C42  0012               	return	
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12571  004C44  0E00               	movlw	0
 12572  004C46  0101               	movlb	1	; () banked
 12573  004C48  6FC9               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12574  004C4A  0E02               	movlw	2
 12575  004C4C  6FC8               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12576                           
 12577                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12578  004C4E  0E00               	movlw	0
 12579  004C50  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12580  004C52  D77E               	goto	l20209
 12581  004C54                     l20269:
 12582  004C54  0101               	movlb	1	; () banked
 12583  004C56  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12584  004C58  ECA7  F032         	call	_getStateOpenPosition
 12585  004C5C  06E8               	decf	wreg,f,c
 12586  004C5E  A4D8               	btfss	status,2,c
 12587  004C60  D042               	goto	l20311
 12588                           
 12589                           ; BSR set to: 0
 12590  004C62  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12591  004C64  B4D8               	btfsc	status,2,c
 12592  004C66  D004               	goto	u23440
 12593                           
 12594                           ; BSR set to: 0
 12595  004C68  0101               	movlb	1	; () banked
 12596  004C6A  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12597  004C6C  B4D8               	btfsc	status,2,c
 12598  004C6E  D00C               	goto	u23460
 12599  004C70                     u23440:
 12600  004C70  0101               	movlb	1	; () banked
 12601  004C72  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12602  004C74  D005               	goto	u23450
 12603  004C76  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12604  004C78  E136               	bnz	l20311
 12605  004C7A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12606  004C7C  B0D8               	btfsc	status,0,c
 12607  004C7E  D033               	goto	l20311
 12608  004C80                     u23450:
 12609                           
 12610                           ; BSR set to: 1
 12611  004C80  0100               	movlb	0	; () banked
 12612  004C82  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12613  004C84  B4D8               	btfsc	status,2,c
 12614  004C86  D02F               	goto	l20311
 12615  004C88                     u23460:
 12616                           
 12617                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12618  004C88  0101               	movlb	1	; () banked
 12619  004C8A  517B               	movf	_powerControl_st& (0+255),w,b
 12620  004C8C  A4D8               	btfss	status,2,c
 12621  004C8E  D022               	goto	l20297
 12622                           
 12623                           ; BSR set to: 1
 12624  004C90  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12625  004C92  A4D8               	btfss	status,2,c
 12626  004C94  D01F               	goto	l20297
 12627                           
 12628                           ; BSR set to: 1
 12629                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12630  004C96  0E00               	movlw	0
 12631  004C98  6FCB               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12632  004C9A  0E14               	movlw	20
 12633  004C9C  6FCA               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12634                           
 12635                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12636  004C9E  0100               	movlb	0	; () banked
 12637  004CA0  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12638  004CA2  B4D8               	btfsc	status,2,c
 12639  004CA4  D008               	goto	l20289
 12640                           
 12641                           ; BSR set to: 0
 12642                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12643  004CA6  0E00               	movlw	0
 12644  004CA8  0101               	movlb	1	; () banked
 12645  004CAA  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12646                           
 12647                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12648  004CAC  0E01               	movlw	1
 12649  004CAE  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12650                           
 12651                           ; BSR set to: 1
 12652                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12653  004CB0  EC2A  F043         	call	_InitSoftStop	;wreg free
 12654                           
 12655                           ;outputs_MC50.c: 598:             }else{
 12656  004CB4  D00F               	goto	l20297
 12657  004CB6                     l20289:
 12658                           
 12659                           ; BSR set to: 0
 12660                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12661  004CB6  0E00               	movlw	0
 12662  004CB8  0101               	movlb	1	; () banked
 12663  004CBA  6FC9               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12664  004CBC  0E0A               	movlw	10
 12665  004CBE  6FC8               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12666                           
 12667                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12668  004CC0  0E00               	movlw	0
 12669  004CC2  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12670                           
 12671                           ; BSR set to: 1
 12672                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12673  004CC4  ECC1  F047         	call	_ControlDecelarationFactor	;wreg free
 12674                           
 12675                           ; BSR set to: 1
 12676                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12677  004CC8  0E01               	movlw	1
 12678  004CCA  6F7B               	movwf	_powerControl_st& (0+255),b
 12679                           
 12680                           ; BSR set to: 1
 12681                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12682  004CCC  0E00               	movlw	0
 12683  004CCE  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12684  004CD0  0E00               	movlw	0
 12685  004CD2  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12686  004CD4                     l20297:
 12687                           
 12688                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12689  004CD4  0101               	movlb	1	; () banked
 12690  004CD6  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12691  004CD8  D7AE               	goto	u23390
 12692  004CDA  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12693  004CDC  E135               	bnz	l2306
 12694  004CDE  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12695  004CE0  B0D8               	btfsc	status,0,c
 12696  004CE2  0012               	return	
 12697  004CE4  D7A8               	goto	u23390
 12698  004CE6                     l20311:
 12699  004CE6  0101               	movlb	1	; () banked
 12700  004CE8  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12701  004CEA  D012               	goto	l20319
 12702  004CEC  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12703  004CEE  E103               	bnz	u23530
 12704  004CF0  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12705  004CF2  A0D8               	btfss	status,0,c
 12706  004CF4  D00D               	goto	l20319
 12707  004CF6                     u23530:
 12708                           
 12709                           ; BSR set to: 1
 12710  004CF6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12711  004CF8  B4D8               	btfsc	status,2,c
 12712  004CFA  D00A               	goto	l20319
 12713                           
 12714                           ; BSR set to: 1
 12715                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12716  004CFC  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12717  004CFE  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12718  004D00  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12719  004D02  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12720  004D04  A0D8               	btfss	status,0,c
 12721  004D06  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12722  004D08  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12723  004D0A                     l20317:
 12724                           
 12725                           ; BSR set to: 1
 12726                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12727  004D0A  0E00               	movlw	0
 12728  004D0C  6F7B               	movwf	_powerControl_st& (0+255),b
 12729                           
 12730                           ;outputs_MC50.c: 623:     }
 12731  004D0E  0012               	return	
 12732  004D10                     l20319:
 12733                           
 12734                           ; BSR set to: 1
 12735  004D10  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12736  004D12  D010               	goto	l20327
 12737  004D14  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12738  004D16  E103               	bnz	u23550
 12739  004D18  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12740  004D1A  A0D8               	btfss	status,0,c
 12741  004D1C  D00B               	goto	l20327
 12742  004D1E                     u23550:
 12743                           
 12744                           ; BSR set to: 1
 12745  004D1E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12746  004D20  B4D8               	btfsc	status,2,c
 12747  004D22  D008               	goto	l20327
 12748                           
 12749                           ; BSR set to: 1
 12750                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12751  004D24  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12752  004D26  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12753  004D28  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12754  004D2A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12755  004D2C  A0D8               	btfss	status,0,c
 12756  004D2E  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12757  004D30  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12758  004D32  D7EB               	goto	l20317
 12759  004D34                     l20327:
 12760                           
 12761                           ; BSR set to: 1
 12762                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12763  004D34  0E00               	movlw	0
 12764  004D36  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12765  004D38  0E00               	movlw	0
 12766  004D3A  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12767                           
 12768                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12769  004D3C  0E00               	movlw	0
 12770  004D3E  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12771  004D40  0E00               	movlw	0
 12772  004D42  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12773                           
 12774                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12775  004D44  0E00               	movlw	0
 12776  004D46  6F7B               	movwf	_powerControl_st& (0+255),b
 12777  004D48                     l2306:
 12778  004D48  0012               	return		;funcret
 12779  004D4A                     __end_of_controlVelocity:
 12780                           	callstack 0
 12781                           
 12782 ;; *************** function _getStateOpenPosition *****************
 12783 ;; Defined at:
 12784 ;;		line 470 in file "outputs_MC50.c"
 12785 ;; Parameters:    Size  Location     Type
 12786 ;;  stateMotor      1    wreg     enum E10381
 12787 ;; Auto vars:     Size  Location     Type
 12788 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12789 ;;  state           1    0[BANK0 ] _Bool 
 12790 ;; Return value:  Size  Location     Type
 12791 ;;                  1    wreg      _Bool 
 12792 ;; Registers used:
 12793 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12794 ;; Tracked objects:
 12795 ;;		On entry : 3F/1
 12796 ;;		On exit  : 3F/0
 12797 ;;		Unchanged: 0/0
 12798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12800 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12801 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12802 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12803 ;;Total ram usage:       11 bytes
 12804 ;; Hardware stack levels used: 1
 12805 ;; Hardware stack levels required when called: 6
 12806 ;; This function calls:
 12807 ;;		___lmul
 12808 ;;		_getTimeDecelaration
 12809 ;; This function is called by:
 12810 ;;		_controlVelocity
 12811 ;; This function uses a non-reentrant model
 12812 ;;
 12813                           
 12814                           	psect	text30
 12815  00654E                     __ptext30:
 12816                           	callstack 0
 12817  00654E                     _getStateOpenPosition:
 12818                           	callstack 21
 12819                           
 12820                           ;incstack = 0
 12821                           ;getStateOpenPosition@stateMotor stored from wreg
 12822  00654E  0100               	movlb	0	; () banked
 12823  006550  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12824                           
 12825                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12826  006552  0E00               	movlw	0
 12827  006554  0100               	movlb	0	; () banked
 12828  006556  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12829                           
 12830                           ; BSR set to: 0
 12831                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12832  006558  0101               	movlb	1	; () banked
 12833  00655A  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12834  00655C  A4D8               	btfss	status,2,c
 12835  00655E  D002               	goto	l19695
 12836  006560                     u22530:
 12837                           
 12838                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12839  006560  0E01               	movlw	1
 12840  006562  D046               	goto	L71
 12841  006564                     l19695:
 12842                           
 12843                           ; BSR set to: 1
 12844  006564  0100               	movlb	0	; () banked
 12845  006566  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12846  006568  0D14               	mullw	20
 12847  00656A  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12848  00656E  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12849  006572  0E00               	movlw	0
 12850  006574  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12851  006576  0EFF               	movlw	255
 12852  006578  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12853  00657A  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12854  00657C  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12855  00657E  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12856  006580  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12857  006582  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12858  006584  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12859  006586  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12860  006588  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12861  00658A  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12862  00658C  B0D8               	btfsc	status,0,c
 12863  00658E  D033               	goto	l19709
 12864                           
 12865                           ; BSR set to: 0
 12866  006590  0E02               	movlw	2
 12867  006592  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12868  006594  A4D8               	btfss	status,2,c
 12869  006596  D02F               	goto	l19709
 12870                           
 12871                           ; BSR set to: 0
 12872                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12873  006598  90D8               	bcf	status,0,c
 12874  00659A  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12875  00659C  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12876  00659E  D001               	goto	l19703
 12877  0065A0  D7DF               	goto	u22530
 12878  0065A2                     l19703:
 12879                           
 12880                           ; BSR set to: 0
 12881  0065A2  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12882  0065A4  0D14               	mullw	20
 12883  0065A6  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12884  0065AA  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12885  0065AE  0E00               	movlw	0
 12886  0065B0  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12887  0065B2  0EFF               	movlw	255
 12888  0065B4  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12889  0065B6  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12890  0065B8  0ED8               	movlw	216
 12891  0065BA  2432               	addwf	??_getStateOpenPosition^0,w,c
 12892  0065BC  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12893  0065BE  0EFF               	movlw	255
 12894  0065C0  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12895  0065C2  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12896  0065C4  0EFF               	movlw	255
 12897  0065C6  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12898  0065C8  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12899  0065CA  0EFF               	movlw	255
 12900  0065CC  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12901  0065CE  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12902  0065D0  0101               	movlb	1	; () banked
 12903  0065D2  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12904  0065D4  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12905  0065D6  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12906  0065D8  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12907  0065DA  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12908  0065DC  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12909  0065DE  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12910  0065E0  0A80               	xorlw	128
 12911  0065E2  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12912  0065E4  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12913  0065E6  0A80               	xorlw	128
 12914  0065E8  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12915  0065EA  A0D8               	btfss	status,0,c
 12916  0065EC  D7B9               	goto	u22530
 12917                           
 12918                           ; BSR set to: 1
 12919                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12920  0065EE  0E00               	movlw	0
 12921  0065F0                     L71:
 12922  0065F0  0100               	movlb	0	; () banked
 12923  0065F2  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12924  0065F4  D032               	goto	l2249
 12925  0065F6                     l19709:
 12926                           
 12927                           ; BSR set to: 0
 12928  0065F6  0E02               	movlw	2
 12929  0065F8  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12930  0065FA  B4D8               	btfsc	status,2,c
 12931  0065FC  D003               	goto	u22590
 12932                           
 12933                           ; BSR set to: 0
 12934  0065FE  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 12935  006600  A4D8               	btfss	status,2,c
 12936  006602  D02B               	goto	l2249
 12937  006604                     u22590:
 12938                           
 12939                           ; BSR set to: 0
 12940                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 12941  006604  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12942  006606  6E1D               	movwf	___lmul@multiplier^0,c
 12943  006608  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 12944  00660A  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 12945  00660C  6A20               	clrf	(___lmul@multiplier+3)^0,c
 12946  00660E  0E0A               	movlw	10
 12947  006610  6E21               	movwf	___lmul@multiplicand^0,c
 12948  006612  0E00               	movlw	0
 12949  006614  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 12950  006616  0E00               	movlw	0
 12951  006618  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 12952  00661A  0E00               	movlw	0
 12953  00661C  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 12954  00661E  ECE4  F041         	call	___lmul	;wreg free
 12955  006622  501D               	movf	?___lmul^0,w,c
 12956  006624  0100               	movlb	0	; () banked
 12957  006626  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12958  006628  501E               	movf	(?___lmul+1)^0,w,c
 12959  00662A  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12960  00662C  501F               	movf	(?___lmul+2)^0,w,c
 12961  00662E  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12962  006630  5020               	movf	(?___lmul+3)^0,w,c
 12963  006632  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12964  006634  A0D8               	btfss	status,0,c
 12965  006636  D794               	goto	u22530
 12966                           
 12967                           ; BSR set to: 0
 12968  006638  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 12969  00663A  ECB4  F035         	call	_getTimeDecelaration
 12970  00663E  0101               	movlb	1	; () banked
 12971  006640  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12972  006642  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12973  006644  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12974  006646  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12975  006648  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12976  00664A  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12977  00664C  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12978  00664E  0A80               	xorlw	128
 12979  006650  6E32               	movwf	??_getStateOpenPosition^0,c
 12980  006652  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12981  006654  0A80               	xorlw	128
 12982  006656  5832               	subwfb	??_getStateOpenPosition^0,w,c
 12983  006658  D7C8               	goto	L72
 12984  00665A                     l2249:
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;outputs_MC50.c: 507:     return state;
 12988  00665A  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 12989                           
 12990                           ; BSR set to: 0
 12991  00665C  0012               	return		;funcret
 12992  00665E                     __end_of_getStateOpenPosition:
 12993                           	callstack 0
 12994                           
 12995 ;; *************** function _InitSoftStop *****************
 12996 ;; Defined at:
 12997 ;;		line 849 in file "sm_ControlGate_MC50.c"
 12998 ;; Parameters:    Size  Location     Type
 12999 ;;		None
 13000 ;; Auto vars:     Size  Location     Type
 13001 ;;		None
 13002 ;; Return value:  Size  Location     Type
 13003 ;;                  1    wreg      void 
 13004 ;; Registers used:
 13005 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13006 ;; Tracked objects:
 13007 ;;		On entry : 3F/1
 13008 ;;		On exit  : 3E/0
 13009 ;;		Unchanged: 0/0
 13010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13015 ;;Total ram usage:        1 bytes
 13016 ;; Hardware stack levels used: 1
 13017 ;; Hardware stack levels required when called: 5
 13018 ;; This function calls:
 13019 ;;		_GetMotorPower
 13020 ;; This function is called by:
 13021 ;;		_controlVelocity
 13022 ;; This function uses a non-reentrant model
 13023 ;;
 13024                           
 13025                           	psect	text31
 13026  008654                     __ptext31:
 13027                           	callstack 0
 13028  008654                     _InitSoftStop:
 13029                           	callstack 22
 13030                           
 13031                           ; BSR set to: 1
 13032                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 13033                           
 13034                           ; BSR set to: 0
 13035                           ;incstack = 0
 13036  008654  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 13037  008656  B4D8               	btfsc	status,2,c
 13038  008658  D003               	goto	u22630
 13039                           
 13040                           ; BSR set to: 1
 13041  00865A  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13042  00865C  A4D8               	btfss	status,2,c
 13043  00865E  0012               	return	
 13044  008660                     u22630:
 13045                           
 13046                           ; BSR set to: 1
 13047  008660  0100               	movlb	0	; () banked
 13048  008662  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13049  008664  B4D8               	btfsc	status,2,c
 13050  008666  0012               	return	
 13051                           
 13052                           ; BSR set to: 0
 13053                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 13054  008668  0E00               	movlw	0
 13055  00866A  0101               	movlb	1	; () banked
 13056  00866C  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 13057  00866E  0E00               	movlw	0
 13058  008670  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 13059                           
 13060                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 13061  008672  0E00               	movlw	0
 13062  008674  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 13063  008676  0E00               	movlw	0
 13064  008678  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13065                           
 13066                           ; BSR set to: 1
 13067                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 13068  00867A  EC61  F037         	call	_GetMotorPower	;wreg free
 13069  00867E  6E14               	movwf	??_InitSoftStop^0,c
 13070  008680  5014               	movf	??_InitSoftStop^0,w,c
 13071  008682  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13072  008684  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 13073                           
 13074                           ; BSR set to: 1
 13075                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 13076  008686  0E01               	movlw	1
 13077  008688  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 13078  00868A  6FB4               	movwf	(_ts_system+24)& (0+255),b	;volatile
 13079  00868C  0E00               	movlw	0
 13080  00868E  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 13081  008690  6FB5               	movwf	(_ts_system+25)& (0+255),b	;volatile
 13082                           
 13083                           ; BSR set to: 1
 13084                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 13085  008692  0100               	movlb	0	; () banked
 13086  008694  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13087  008696  080A               	sublw	10
 13088  008698  0101               	movlb	1	; () banked
 13089  00869A  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 13090  00869C  0012               	return		;funcret
 13091  00869E                     __end_of_InitSoftStop:
 13092                           	callstack 0
 13093                           
 13094 ;; *************** function _ControlDecelarationFactor *****************
 13095 ;; Defined at:
 13096 ;;		line 463 in file "outputs_MC50.c"
 13097 ;; Parameters:    Size  Location     Type
 13098 ;;		None
 13099 ;; Auto vars:     Size  Location     Type
 13100 ;;		None
 13101 ;; Return value:  Size  Location     Type
 13102 ;;                  1    wreg      void 
 13103 ;; Registers used:
 13104 ;;		wreg, status,2, status,0, prodl, prodh
 13105 ;; Tracked objects:
 13106 ;;		On entry : 3E/1
 13107 ;;		On exit  : 3F/1
 13108 ;;		Unchanged: 0/0
 13109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13114 ;;Total ram usage:        0 bytes
 13115 ;; Hardware stack levels used: 1
 13116 ;; Hardware stack levels required when called: 4
 13117 ;; This function calls:
 13118 ;;		Nothing
 13119 ;; This function is called by:
 13120 ;;		_controlVelocity
 13121 ;; This function uses a non-reentrant model
 13122 ;;
 13123                           
 13124                           	psect	text32
 13125  008F82                     __ptext32:
 13126                           	callstack 0
 13127  008F82                     _ControlDecelarationFactor:
 13128                           	callstack 23
 13129                           
 13130                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 13131                           
 13132                           ;incstack = 0
 13133  008F82  0E01               	movlw	1
 13134  008F84  0101               	movlb	1	; () banked
 13135  008F86  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 13136                           
 13137                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 13138  008F88  0E02               	movlw	2
 13139  008F8A  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 13140                           
 13141                           ; BSR set to: 1
 13142                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 13143  008F8C  0100               	movlb	0	; () banked
 13144  008F8E  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 13145  008F90  0101               	movlb	1	; () banked
 13146  008F92  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 13147  008F94  CFF3 F17E          	movff	prodl,_powerControl_st+3
 13148                           
 13149                           ; BSR set to: 1
 13150  008F98  0012               	return		;funcret
 13151  008F9A                     __end_of_ControlDecelarationFactor:
 13152                           	callstack 0
 13153                           
 13154 ;; *************** function _actionZone_Opened *****************
 13155 ;; Defined at:
 13156 ;;		line 514 in file "sm_ControlGate_MC50.c"
 13157 ;; Parameters:    Size  Location     Type
 13158 ;;		None
 13159 ;; Auto vars:     Size  Location     Type
 13160 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 13161 ;;  securityClos    1   31[COMRAM] enum E10397
 13162 ;; Return value:  Size  Location     Type
 13163 ;;                  1    wreg      void 
 13164 ;; Registers used:
 13165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13166 ;; Tracked objects:
 13167 ;;		On entry : 3F/0
 13168 ;;		On exit  : 3E/0
 13169 ;;		Unchanged: 0/0
 13170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13175 ;;Total ram usage:        2 bytes
 13176 ;; Hardware stack levels used: 1
 13177 ;; Hardware stack levels required when called: 7
 13178 ;; This function calls:
 13179 ;;		_CloseOrder
 13180 ;;		_GetOpenOrder
 13181 ;;		_GetSecurityStateInClosing
 13182 ;;		_InitFullAutoTime
 13183 ;;		_InitWalkAutoTime
 13184 ;;		_OpenFullOrder
 13185 ;;		_OpenWalkOrder
 13186 ;;		_VerifyFollowMe
 13187 ;; This function is called by:
 13188 ;;		_sm_execute_ControlGate
 13189 ;; This function uses a non-reentrant model
 13190 ;;
 13191                           
 13192                           	psect	text33
 13193  004D4A                     __ptext33:
 13194                           	callstack 0
 13195  004D4A                     _actionZone_Opened:
 13196                           	callstack 22
 13197                           
 13198                           ; BSR set to: 0
 13199                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13200                           
 13201                           ; BSR set to: 1
 13202                           ;incstack = 0
 13203  004D4A  ECD7  F038         	call	_GetSecurityStateInClosing	;wreg free
 13204  004D4E  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13205                           
 13206                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13207  004D50  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13208  004D52  B4D8               	btfsc	status,2,c
 13209  004D54  D007               	goto	l21467
 13210  004D56  0101               	movlb	1	; () banked
 13211  004D58  518F               	movf	_Abertura_pedonal& (0+255),w,b
 13212  004D5A  A4D8               	btfss	status,2,c
 13213  004D5C  D003               	goto	l21467
 13214                           
 13215                           ; BSR set to: 1
 13216                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13217  004D5E  EC9A  F047         	call	_InitFullAutoTime	;wreg free
 13218                           
 13219                           ;sm_ControlGate_MC50.c: 519:     }
 13220  004D62  D008               	goto	l2722
 13221  004D64                     l21467:
 13222  004D64  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13223  004D66  B4D8               	btfsc	status,2,c
 13224  004D68  D005               	goto	l2722
 13225  004D6A  0101               	movlb	1	; () banked
 13226  004D6C  058F               	decf	_Abertura_pedonal& (0+255),w,b
 13227  004D6E  B4D8               	btfsc	status,2,c
 13228                           
 13229                           ; BSR set to: 1
 13230                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13231  004D70  EC1E  F048         	call	_InitWalkAutoTime	;wreg free
 13232  004D74                     l2722:
 13233                           
 13234                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13235  004D74  EC85  F028         	call	_GetOpenOrder	;wreg free
 13236  004D78  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13237                           
 13238                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13239  004D7A  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13240  004D7C  ECF2  F046         	call	_VerifyFollowMe
 13241                           
 13242                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13243  004D80  B28E               	btfsc	142,1,c	;volatile
 13244  004D82  D013               	goto	l2724
 13245  004D84  0100               	movlb	0	; () banked
 13246  004D86  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13247  004D88  B4D8               	btfsc	status,2,c
 13248  004D8A  D00F               	goto	l2724
 13249                           
 13250                           ; BSR set to: 0
 13251  004D8C  0101               	movlb	1	; () banked
 13252  004D8E  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13253  004D90  B4D8               	btfsc	status,2,c
 13254  004D92  D00B               	goto	l2724
 13255                           
 13256                           ; BSR set to: 1
 13257  004D94  0E35               	movlw	53
 13258  004D96  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13259  004D98  B4D8               	btfsc	status,2,c
 13260  004D9A  D007               	goto	l2724
 13261                           
 13262                           ; BSR set to: 1
 13263  004D9C  0E02               	movlw	2
 13264  004D9E  0100               	movlb	0	; () banked
 13265  004DA0  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13266  004DA2  A4D8               	btfss	status,2,c
 13267  004DA4  D002               	goto	l2724
 13268                           
 13269                           ; BSR set to: 0
 13270                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13271  004DA6  0E00               	movlw	0
 13272  004DA8  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13273  004DAA                     l2724:
 13274                           
 13275                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13276  004DAA  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13277  004DAC  B4D8               	btfsc	status,2,c
 13278  004DAE  D05D               	goto	l2725
 13279                           
 13280                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13281  004DB0  0E00               	movlw	0
 13282  004DB2  0101               	movlb	1	; () banked
 13283  004DB4  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13284  004DB6  0E3C               	movlw	60
 13285  004DB8  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13286                           
 13287                           ; BSR set to: 1
 13288                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13289  004DBA  0E02               	movlw	2
 13290  004DBC  0100               	movlb	0	; () banked
 13291  004DBE  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13292  004DC0  A4D8               	btfss	status,2,c
 13293  004DC2  D00D               	goto	l21499
 13294                           
 13295                           ; BSR set to: 0
 13296  004DC4  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13297  004DC6  A4D8               	btfss	status,2,c
 13298  004DC8  D00A               	goto	l21499
 13299                           
 13300                           ; BSR set to: 0
 13301  004DCA  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13302  004DCC  B4D8               	btfsc	status,2,c
 13303  004DCE  D004               	goto	u25130
 13304                           
 13305                           ; BSR set to: 0
 13306  004DD0  0E04               	movlw	4
 13307  004DD2  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13308  004DD4  A4D8               	btfss	status,2,c
 13309  004DD6  D003               	goto	l21499
 13310  004DD8                     u25130:
 13311                           
 13312                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13313  004DD8  EC93  F046         	call	_CloseOrder	;wreg free
 13314                           
 13315                           ;sm_ControlGate_MC50.c: 546:         }
 13316  004DDC  0012               	return	
 13317  004DDE                     l21499:
 13318                           
 13319                           ; BSR set to: 0
 13320  004DDE  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13321  004DE0  B4D8               	btfsc	status,2,c
 13322  004DE2  D014               	goto	l21513
 13323                           
 13324                           ; BSR set to: 0
 13325                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13326  004DE4  0E03               	movlw	3
 13327  004DE6  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13328  004DE8  A4D8               	btfss	status,2,c
 13329  004DEA  D00B               	goto	l21509
 13330                           
 13331                           ; BSR set to: 0
 13332  004DEC  0101               	movlb	1	; () banked
 13333  004DEE  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13334  004DF0  A4D8               	btfss	status,2,c
 13335  004DF2  D007               	goto	l21509
 13336                           
 13337                           ; BSR set to: 1
 13338  004DF4  0E04               	movlw	4
 13339  004DF6  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13340  004DF8  B4D8               	btfsc	status,2,c
 13341  004DFA  D003               	goto	l21509
 13342  004DFC                     u25170:
 13343                           
 13344                           ; BSR set to: 1
 13345                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13346  004DFC  ECA6  F046         	call	_OpenFullOrder	;wreg free
 13347                           
 13348                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13349  004E00  0012               	return	
 13350  004E02                     l21509:
 13351  004E02  0E04               	movlw	4
 13352  004E04  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13353  004E06  A4D8               	btfss	status,2,c
 13354  004E08  0012               	return	
 13355  004E0A  D7E6               	goto	u25130
 13356  004E0C                     l21513:
 13357                           
 13358                           ; BSR set to: 0
 13359  004E0C  0E03               	movlw	3
 13360  004E0E  0101               	movlb	1	; () banked
 13361  004E10  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13362  004E12  A4D8               	btfss	status,2,c
 13363  004E14  D009               	goto	l21521
 13364                           
 13365                           ; BSR set to: 1
 13366  004E16  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13367  004E18  A4D8               	btfss	status,2,c
 13368  004E1A  D006               	goto	l21521
 13369  004E1C                     u25200:
 13370                           
 13371                           ; BSR set to: 1
 13372                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13373  004E1C  ECA6  F046         	call	_OpenFullOrder	;wreg free
 13374  004E20                     l21519:
 13375                           
 13376                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13377  004E20  0E00               	movlw	0
 13378  004E22  0101               	movlb	1	; () banked
 13379  004E24  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13380                           
 13381                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13382  004E26  0012               	return	
 13383  004E28                     l21521:
 13384                           
 13385                           ; BSR set to: 1
 13386  004E28  0E03               	movlw	3
 13387  004E2A  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13388  004E2C  A4D8               	btfss	status,2,c
 13389  004E2E  D007               	goto	l21529
 13390                           
 13391                           ; BSR set to: 1
 13392  004E30  0E02               	movlw	2
 13393  004E32  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13394  004E34  A4D8               	btfss	status,2,c
 13395  004E36  D003               	goto	l21529
 13396                           
 13397                           ; BSR set to: 1
 13398                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13399  004E38  EC6B  F03F         	call	_OpenWalkOrder	;wreg free
 13400  004E3C  D7F1               	goto	l21519
 13401  004E3E                     l21529:
 13402                           
 13403                           ; BSR set to: 1
 13404  004E3E  0E03               	movlw	3
 13405  004E40  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13406  004E42  A4D8               	btfss	status,2,c
 13407  004E44  D005               	goto	l21539
 13408                           
 13409                           ; BSR set to: 1
 13410                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13411  004E46  0E04               	movlw	4
 13412  004E48  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13413  004E4A  B4D8               	btfsc	status,2,c
 13414  004E4C  0012               	return	
 13415  004E4E  D7E6               	goto	u25200
 13416  004E50                     l21539:
 13417                           
 13418                           ; BSR set to: 1
 13419  004E50  0100               	movlb	0	; () banked
 13420  004E52  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13421  004E54  B4D8               	btfsc	status,2,c
 13422  004E56  D007               	goto	l21545
 13423                           
 13424                           ; BSR set to: 0
 13425  004E58  0E02               	movlw	2
 13426  004E5A  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13427  004E5C  A4D8               	btfss	status,2,c
 13428  004E5E  D003               	goto	l21545
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13432  004E60  EC9A  F047         	call	_InitFullAutoTime	;wreg free
 13433                           
 13434                           ;sm_ControlGate_MC50.c: 586:         }
 13435  004E64  0012               	return	
 13436  004E66                     l21545:
 13437                           
 13438                           ; BSR set to: 0
 13439  004E66  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13440  004E68  D7CE               	goto	L73
 13441  004E6A                     l2725:
 13442  004E6A  B28E               	btfsc	142,1,c	;volatile
 13443  004E6C  D00B               	goto	l21553
 13444  004E6E  0100               	movlb	0	; () banked
 13445  004E70  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13446  004E72  B4D8               	btfsc	status,2,c
 13447  004E74  D007               	goto	l21553
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13451  004E76  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13452  004E78  0D14               	mullw	20
 13453  004E7A  CFF3 F1AE          	movff	prodl,_ts_system+18	;volatile
 13454  004E7E  CFF4 F1AF          	movff	prodh,_ts_system+19	;volatile
 13455                           
 13456                           ;sm_ControlGate_MC50.c: 599:     }
 13457  004E82  0012               	return	
 13458  004E84                     l21553:
 13459  004E84  0101               	movlb	1	; () banked
 13460  004E86  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13461  004E88  A4D8               	btfss	status,2,c
 13462  004E8A  D00F               	goto	l21563
 13463                           
 13464                           ; BSR set to: 1
 13465  004E8C  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13466  004E8E  A4D8               	btfss	status,2,c
 13467  004E90  D00C               	goto	l21563
 13468                           
 13469                           ; BSR set to: 1
 13470                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13471  004E92  0E00               	movlw	0
 13472  004E94  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13473                           
 13474                           ; BSR set to: 1
 13475                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13476  004E96  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13477                           
 13478                           ; BSR set to: 1
 13479                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13480  004E9A  0100               	movlb	0	; () banked
 13481  004E9C  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13482  004E9E  0D14               	mullw	20
 13483  004EA0  CFF3 F1AE          	movff	prodl,_ts_system+18	;volatile
 13484  004EA4  CFF4 F1AF          	movff	prodh,_ts_system+19	;volatile
 13485                           
 13486                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13487  004EA8  0012               	return	
 13488  004EAA                     l21563:
 13489                           
 13490                           ; BSR set to: 1
 13491  004EAA  BFAF               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13492  004EAC  D005               	goto	u25320
 13493  004EAE  51AF               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13494  004EB0  E113               	bnz	l21575
 13495  004EB2  05AE               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13496  004EB4  B0D8               	btfsc	status,0,c
 13497  004EB6  D010               	goto	l21575
 13498  004EB8                     u25320:
 13499                           
 13500                           ; BSR set to: 1
 13501  004EB8  0100               	movlb	0	; () banked
 13502  004EBA  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13503  004EBC  A4D8               	btfss	status,2,c
 13504  004EBE  D00C               	goto	l21575
 13505                           
 13506                           ; BSR set to: 0
 13507  004EC0  0101               	movlb	1	; () banked
 13508  004EC2  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13509  004EC4  A4D8               	btfss	status,2,c
 13510  004EC6  D008               	goto	l21575
 13511                           
 13512                           ; BSR set to: 1
 13513  004EC8  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13514  004ECA  B4D8               	btfsc	status,2,c
 13515  004ECC  D005               	goto	l21575
 13516                           
 13517                           ; BSR set to: 1
 13518                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13519  004ECE  0E00               	movlw	0
 13520  004ED0  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13521                           
 13522                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13523  004ED2  0E00               	movlw	0
 13524  004ED4  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13525  004ED6  D780               	goto	u25130
 13526  004ED8                     l21575:
 13527  004ED8  0101               	movlb	1	; () banked
 13528  004EDA  BFAF               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13529  004EDC  D005               	goto	u25360
 13530  004EDE  51AF               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13531  004EE0  E119               	bnz	l21593
 13532  004EE2  05AE               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13533  004EE4  B0D8               	btfsc	status,0,c
 13534  004EE6  D016               	goto	l21593
 13535  004EE8                     u25360:
 13536                           
 13537                           ; BSR set to: 1
 13538  004EE8  0100               	movlb	0	; () banked
 13539  004EEA  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13540  004EEC  B4D8               	btfsc	status,2,c
 13541  004EEE  D012               	goto	l21593
 13542                           
 13543                           ; BSR set to: 0
 13544  004EF0  0101               	movlb	1	; () banked
 13545  004EF2  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13546  004EF4  B4D8               	btfsc	status,2,c
 13547  004EF6  D00E               	goto	l21593
 13548                           
 13549                           ; BSR set to: 1
 13550                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13551  004EF8  0E00               	movlw	0
 13552  004EFA  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13553                           
 13554                           ; BSR set to: 1
 13555                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13556  004EFC  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13557  004EFE  A4D8               	btfss	status,2,c
 13558  004F00  D003               	goto	l21589
 13559                           
 13560                           ; BSR set to: 1
 13561                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13562  004F02  0E00               	movlw	0
 13563  004F04  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13564  004F06  D77A               	goto	u25170
 13565  004F08                     l21589:
 13566                           
 13567                           ; BSR set to: 1
 13568                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13569  004F08  EC93  F046         	call	_CloseOrder	;wreg free
 13570                           
 13571                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13572  004F0C  0E00               	movlw	0
 13573  004F0E  0101               	movlb	1	; () banked
 13574  004F10  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13575  004F12  0012               	return	
 13576  004F14                     l21593:
 13577  004F14  0101               	movlb	1	; () banked
 13578  004F16  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13579  004F18  A4D8               	btfss	status,2,c
 13580  004F1A  0012               	return	
 13581                           
 13582                           ; BSR set to: 1
 13583  004F1C  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13584  004F1E  A4D8               	btfss	status,2,c
 13585  004F20  0012               	return	
 13586                           
 13587                           ; BSR set to: 1
 13588                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13589  004F22  BFA9               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13590  004F24  D006               	goto	u25420
 13591  004F26  51A9               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13592  004F28  E103               	bnz	u25421
 13593  004F2A  0E02               	movlw	2
 13594  004F2C  5DA8               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13595  004F2E  B0D8               	btfsc	status,0,c
 13596  004F30                     u25421:
 13597  004F30  0012               	return	
 13598  004F32                     u25420:
 13599                           
 13600                           ; BSR set to: 1
 13601                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13602  004F32  0E00               	movlw	0
 13603  004F34  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13604  004F36  0012               	return		;funcret
 13605  004F38                     __end_of_actionZone_Opened:
 13606                           	callstack 0
 13607                           
 13608 ;; *************** function _VerifyFollowMe *****************
 13609 ;; Defined at:
 13610 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13611 ;; Parameters:    Size  Location     Type
 13612 ;;  securityClos    1    wreg     enum E10397
 13613 ;; Auto vars:     Size  Location     Type
 13614 ;;  securityClos    1   15[COMRAM] enum E10397
 13615 ;; Return value:  Size  Location     Type
 13616 ;;                  1    wreg      void 
 13617 ;; Registers used:
 13618 ;;		wreg, status,2, status,0
 13619 ;; Tracked objects:
 13620 ;;		On entry : 0/0
 13621 ;;		On exit  : 3E/0
 13622 ;;		Unchanged: 0/0
 13623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13628 ;;Total ram usage:        1 bytes
 13629 ;; Hardware stack levels used: 1
 13630 ;; Hardware stack levels required when called: 4
 13631 ;; This function calls:
 13632 ;;		Nothing
 13633 ;; This function is called by:
 13634 ;;		_actionZone_Opening
 13635 ;;		_actionZone_Opened
 13636 ;; This function uses a non-reentrant model
 13637 ;;
 13638                           
 13639                           	psect	text34
 13640  008DE4                     __ptext34:
 13641                           	callstack 0
 13642  008DE4                     _VerifyFollowMe:
 13643                           	callstack 24
 13644                           
 13645                           ;incstack = 0
 13646                           ;VerifyFollowMe@securityClose stored from wreg
 13647  008DE4  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13648                           
 13649                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13650  008DE6  0100               	movlb	0	; () banked
 13651  008DE8  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13652  008DEA  B4D8               	btfsc	status,2,c
 13653  008DEC  0012               	return	
 13654                           
 13655                           ; BSR set to: 0
 13656  008DEE  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13657  008DF0  A4D8               	btfss	status,2,c
 13658  008DF2  0012               	return	
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13662  008DF4  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13663  008DF6  A4D8               	btfss	status,2,c
 13664  008DF8  0012               	return	
 13665                           
 13666                           ; BSR set to: 0
 13667  008DFA  0101               	movlb	1	; () banked
 13668  008DFC  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13669  008DFE  A4D8               	btfss	status,2,c
 13670  008E00  0012               	return	
 13671                           
 13672                           ; BSR set to: 1
 13673                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13674  008E02  0E01               	movlw	1
 13675  008E04  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13676  008E06  0012               	return		;funcret
 13677  008E08                     __end_of_VerifyFollowMe:
 13678                           	callstack 0
 13679                           
 13680 ;; *************** function _CloseOrder *****************
 13681 ;; Defined at:
 13682 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13683 ;; Parameters:    Size  Location     Type
 13684 ;;		None
 13685 ;; Auto vars:     Size  Location     Type
 13686 ;;		None
 13687 ;; Return value:  Size  Location     Type
 13688 ;;                  1    wreg      void 
 13689 ;; Registers used:
 13690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13691 ;; Tracked objects:
 13692 ;;		On entry : 3E/1
 13693 ;;		On exit  : 3E/0
 13694 ;;		Unchanged: 0/0
 13695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13700 ;;Total ram usage:        0 bytes
 13701 ;; Hardware stack levels used: 1
 13702 ;; Hardware stack levels required when called: 6
 13703 ;; This function calls:
 13704 ;;		_InitSoftStart
 13705 ;;		_sm_send_event
 13706 ;; This function is called by:
 13707 ;;		_actionZone_Opening
 13708 ;;		_actionZone_Opened
 13709 ;; This function uses a non-reentrant model
 13710 ;;
 13711                           
 13712                           	psect	text35
 13713  008D26                     __ptext35:
 13714                           	callstack 0
 13715  008D26                     _CloseOrder:
 13716                           	callstack 22
 13717                           
 13718                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13719                           
 13720                           ;incstack = 0
 13721  008D26  0E03               	movlw	3
 13722  008D28  0101               	movlb	1	; () banked
 13723  008D2A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13724                           
 13725                           ; BSR set to: 1
 13726                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13727  008D2C  0EE4               	movlw	low _controlGate_stateMachine
 13728  008D2E  6E12               	movwf	sm_send_event@psm^0,c
 13729  008D30  0E01               	movlw	high _controlGate_stateMachine
 13730  008D32  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13731  008D34  0E00               	movlw	0
 13732  008D36  6E15               	movwf	(sm_send_event@event+1)^0,c
 13733  008D38  0E0E               	movlw	14
 13734  008D3A  6E14               	movwf	sm_send_event@event^0,c
 13735  008D3C  ECD6  F040         	call	_sm_send_event	;wreg free
 13736                           
 13737                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13738  008D40  0E03               	movlw	3
 13739  008D42  0101               	movlb	1	; () banked
 13740  008D44  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13741                           
 13742                           ; BSR set to: 1
 13743                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13744  008D46  EC04  F041         	call	_InitSoftStart	;wreg free
 13745  008D4A  0012               	return		;funcret
 13746  008D4C                     __end_of_CloseOrder:
 13747                           	callstack 0
 13748                           
 13749 ;; *************** function _actionZone_Closing *****************
 13750 ;; Defined at:
 13751 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13752 ;; Parameters:    Size  Location     Type
 13753 ;;		None
 13754 ;; Auto vars:     Size  Location     Type
 13755 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13756 ;;  securityClos    1   49[COMRAM] enum E10397
 13757 ;; Return value:  Size  Location     Type
 13758 ;;                  1    wreg      void 
 13759 ;; Registers used:
 13760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13761 ;; Tracked objects:
 13762 ;;		On entry : 3F/0
 13763 ;;		On exit  : 0/0
 13764 ;;		Unchanged: 0/0
 13765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13770 ;;Total ram usage:        2 bytes
 13771 ;; Hardware stack levels used: 1
 13772 ;; Hardware stack levels required when called: 7
 13773 ;; This function calls:
 13774 ;;		_GetOpenOrder
 13775 ;;		_GetSecurityStateInClosing
 13776 ;;		_InitFullAutoTime
 13777 ;;		_InitWalkAutoTime
 13778 ;;		_OpenFullOrder
 13779 ;;		_OpenWalkOrder
 13780 ;;		_SetSegmentValueIntermitent
 13781 ;;		_StopOrder
 13782 ;;		___lmul
 13783 ;;		_setPositionInvertionInClosing
 13784 ;;		_sm_send_event
 13785 ;; This function is called by:
 13786 ;;		_sm_execute_ControlGate
 13787 ;; This function uses a non-reentrant model
 13788 ;;
 13789                           
 13790                           	psect	text36
 13791  003F6A                     __ptext36:
 13792                           	callstack 0
 13793  003F6A                     _actionZone_Closing:
 13794                           	callstack 22
 13795                           
 13796                           ; BSR set to: 0
 13797                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13798                           
 13799                           ;incstack = 0
 13800  003F6A  EC85  F028         	call	_GetOpenOrder	;wreg free
 13801  003F6E  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13802                           
 13803                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13804  003F70  ECD7  F038         	call	_GetSecurityStateInClosing	;wreg free
 13805  003F74  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13806                           
 13807                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13808  003F76  0E00               	movlw	0
 13809  003F78  0101               	movlb	1	; () banked
 13810  003F7A  6F8F               	movwf	_Abertura_pedonal& (0+255),b
 13811                           
 13812                           ; BSR set to: 1
 13813                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13814  003F7C  EC9A  F047         	call	_InitFullAutoTime	;wreg free
 13815                           
 13816                           ; BSR set to: 0
 13817                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13818  003F80  0E00               	movlw	0
 13819  003F82  0101               	movlb	1	; () banked
 13820  003F84  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13821                           
 13822                           ; BSR set to: 1
 13823                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13824  003F86  0E03               	movlw	3
 13825  003F88  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13826  003F8A  D00D               	goto	l21617
 13827                           
 13828                           ; BSR set to: 1
 13829                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13830  003F8C  0E00               	movlw	0
 13831  003F8E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13832  003F90                     l21615:
 13833                           
 13834                           ; BSR set to: 1
 13835                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13836  003F90  0EE4               	movlw	low _controlGate_stateMachine
 13837  003F92  6E12               	movwf	sm_send_event@psm^0,c
 13838  003F94  0E01               	movlw	high _controlGate_stateMachine
 13839  003F96  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13840  003F98  0E00               	movlw	0
 13841  003F9A  6E15               	movwf	(sm_send_event@event+1)^0,c
 13842  003F9C  0E10               	movlw	16
 13843  003F9E  6E14               	movwf	sm_send_event@event^0,c
 13844  003FA0  ECD6  F040         	call	_sm_send_event	;wreg free
 13845                           
 13846                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13847  003FA4  0012               	return	
 13848  003FA6                     l21617:
 13849                           
 13850                           ; BSR set to: 1
 13851  003FA6  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13852  003FA8  B4D8               	btfsc	status,2,c
 13853  003FAA  D00C               	goto	u25470
 13854                           
 13855                           ; BSR set to: 1
 13856  003FAC  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13857  003FAE  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13858  003FB0  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13859  003FB2  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13860  003FB4  A4D8               	btfss	status,2,c
 13861  003FB6  D05F               	goto	l21649
 13862                           
 13863                           ; BSR set to: 1
 13864  003FB8  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13865  003FBA  A4D8               	btfss	status,2,c
 13866  003FBC  D05C               	goto	l21649
 13867                           
 13868                           ; BSR set to: 1
 13869  003FBE  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13870  003FC0  A4D8               	btfss	status,2,c
 13871  003FC2  D059               	goto	l21649
 13872  003FC4                     u25470:
 13873                           
 13874                           ; BSR set to: 1
 13875                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13876  003FC4  0E02               	movlw	2
 13877  003FC6  0100               	movlb	0	; () banked
 13878  003FC8  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13879  003FCA  A4D8               	btfss	status,2,c
 13880  003FCC  D018               	goto	l21629
 13881                           
 13882                           ; BSR set to: 0
 13883                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13884  003FCE  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13885  003FD0  6E1D               	movwf	___lmul@multiplier^0,c
 13886  003FD2  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13887  003FD4  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13888  003FD6  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13889  003FD8  0EB0               	movlw	176
 13890  003FDA  6E21               	movwf	___lmul@multiplicand^0,c
 13891  003FDC  0E04               	movlw	4
 13892  003FDE  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13893  003FE0  0E00               	movlw	0
 13894  003FE2  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13895  003FE4  0E00               	movlw	0
 13896  003FE6  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13897  003FE8  ECE4  F041         	call	___lmul	;wreg free
 13898  003FEC  C01D  F1BC         	movff	?___lmul,_ts_system+32	;volatile
 13899  003FF0  C01E  F1BD         	movff	?___lmul+1,_ts_system+33	;volatile
 13900  003FF4  C01F  F1BE         	movff	?___lmul+2,_ts_system+34	;volatile
 13901  003FF8  C020  F1BF         	movff	?___lmul+3,_ts_system+35	;volatile
 13902                           
 13903                           ;sm_ControlGate_MC50.c: 668:         }
 13904  003FFC  D009               	goto	l2768
 13905  003FFE                     l21629:
 13906                           
 13907                           ; BSR set to: 0
 13908                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13909  003FFE  0E00               	movlw	0
 13910  004000  0101               	movlb	1	; () banked
 13911  004002  6FBC               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13912  004004  0E00               	movlw	0
 13913  004006  6FBD               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13914  004008  0E00               	movlw	0
 13915  00400A  6FBE               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13916  00400C  0E00               	movlw	0
 13917  00400E  6FBF               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13918  004010                     l2768:
 13919                           
 13920                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13921  004010  0E00               	movlw	0
 13922  004012  0101               	movlb	1	; () banked
 13923  004014  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13924                           
 13925                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13926  004016  0E01               	movlw	1
 13927  004018  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13928                           
 13929                           ; BSR set to: 1
 13930                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 13931  00401A  0E01               	movlw	1
 13932  00401C  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 13933  00401E  0E00               	movlw	0
 13934  004020  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 13935  004022  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 13936  004024  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 13937                           
 13938                           ; BSR set to: 1
 13939                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 13940  004026  0E00               	movlw	0
 13941  004028  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 13942                           
 13943                           ; BSR set to: 1
 13944                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 13945  00402A  0E00               	movlw	0
 13946  00402C  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 13947  00402E  0E00               	movlw	0
 13948  004030  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 13949  004032  0E00               	movlw	0
 13950  004034  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 13951  004036  0E00               	movlw	0
 13952  004038  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 13953                           
 13954                           ; BSR set to: 1
 13955                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 13956  00403A  0E00               	movlw	0
 13957  00403C  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13958                           
 13959                           ; BSR set to: 1
 13960                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 13961  00403E  0E00               	movlw	0
 13962  004040  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 13963                           
 13964                           ; BSR set to: 1
 13965                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 13966  004042  0E00               	movlw	0
 13967  004044  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13968                           
 13969                           ; BSR set to: 1
 13970                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 13971  004046  0E00               	movlw	0
 13972  004048  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13973  00404A  0E28               	movlw	40
 13974  00404C  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13975                           
 13976                           ; BSR set to: 1
 13977                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 13978  00404E  0E0C               	movlw	12
 13979  004050  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 13980  004052  0E00               	movlw	0
 13981  004054  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 13982  004056  0E04               	movlw	4
 13983  004058  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 13984  00405A  0E0F               	movlw	15
 13985  00405C  EC4D  F045         	call	_SetSegmentValueIntermitent
 13986                           
 13987                           ; BSR set to: 1
 13988                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 13989  004060  0EE4               	movlw	low _controlGate_stateMachine
 13990  004062  6E12               	movwf	sm_send_event@psm^0,c
 13991  004064  0E01               	movlw	high _controlGate_stateMachine
 13992  004066  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13993  004068  0E00               	movlw	0
 13994  00406A  6E15               	movwf	(sm_send_event@event+1)^0,c
 13995  00406C  0E0F               	movlw	15
 13996  00406E  6E14               	movwf	sm_send_event@event^0,c
 13997  004070  ECD6  F040         	call	_sm_send_event	;wreg free
 13998                           
 13999                           ;sm_ControlGate_MC50.c: 691:     }
 14000  004074  0012               	return	
 14001  004076                     l21649:
 14002                           
 14003                           ; BSR set to: 1
 14004  004076  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14005  004078  B4D8               	btfsc	status,2,c
 14006  00407A  D011               	goto	u25520
 14007                           
 14008                           ; BSR set to: 1
 14009  00407C  BFC7               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14010  00407E  D021               	goto	l21669
 14011  004080  51C7               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14012  004082  E103               	bnz	u25500
 14013  004084  05C6               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14014  004086  A0D8               	btfss	status,0,c
 14015  004088  D01C               	goto	l21669
 14016  00408A                     u25500:
 14017                           
 14018                           ; BSR set to: 1
 14019  00408A  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 14020  00408C  A4D8               	btfss	status,2,c
 14021  00408E  D019               	goto	l21669
 14022                           
 14023                           ; BSR set to: 1
 14024  004090  BFCD               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 14025  004092  D005               	goto	u25520
 14026  004094  51CD               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 14027  004096  E115               	bnz	l21669
 14028  004098  05CC               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 14029  00409A  B0D8               	btfsc	status,0,c
 14030  00409C  D012               	goto	l21669
 14031  00409E                     u25520:
 14032                           
 14033                           ; BSR set to: 1
 14034  00409E  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 14035  0040A0  A4D8               	btfss	status,2,c
 14036  0040A2  D00F               	goto	l21669
 14037                           
 14038                           ; BSR set to: 1
 14039                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 14040  0040A4  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14041  0040A6  A4D8               	btfss	status,2,c
 14042                           
 14043                           ; BSR set to: 1
 14044                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 14045  0040A8  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14046                           
 14047                           ; BSR set to: 1
 14048                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 14049                           
 14050                           ;sm_ControlGate_MC50.c: 696:         }
 14051  0040AA  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14052                           
 14053                           ; BSR set to: 1
 14054                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 14055  0040AC  0E01               	movlw	1
 14056  0040AE  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14057                           
 14058                           ; BSR set to: 1
 14059                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 14060  0040B0  0E00               	movlw	0
 14061  0040B2  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14062  0040B4  0E0A               	movlw	10
 14063  0040B6  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14064                           
 14065                           ; BSR set to: 1
 14066                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 14067  0040B8  0E00               	movlw	0
 14068  0040BA  6FDD               	movwf	(_ts_system+65)& (0+255),b	;volatile
 14069  0040BC  0E1E               	movlw	30
 14070  0040BE  6FDC               	movwf	(_ts_system+64)& (0+255),b	;volatile
 14071                           
 14072                           ;sm_ControlGate_MC50.c: 702:     }
 14073  0040C0  0012               	return	
 14074  0040C2                     l21669:
 14075                           
 14076                           ; BSR set to: 1
 14077  0040C2  BFC7               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14078  0040C4  D02E               	goto	l21699
 14079  0040C6  51C7               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14080  0040C8  E103               	bnz	u25550
 14081  0040CA  05C6               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14082  0040CC  A0D8               	btfss	status,0,c
 14083  0040CE  D029               	goto	l21699
 14084  0040D0                     u25550:
 14085                           
 14086                           ; BSR set to: 1
 14087  0040D0  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14088  0040D2  A4D8               	btfss	status,2,c
 14089  0040D4  D026               	goto	l21699
 14090                           
 14091                           ; BSR set to: 1
 14092                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 14093  0040D6  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 14094  0040D8  A4D8               	btfss	status,2,c
 14095  0040DA  D005               	goto	l21681
 14096  0040DC                     u25570:
 14097                           
 14098                           ; BSR set to: 1
 14099                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 14100  0040DC  0E00               	movlw	0
 14101  0040DE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14102                           
 14103                           ; BSR set to: 1
 14104                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 14105  0040E0  EC81  F031         	call	_setPositionInvertionInClosing	;wreg free
 14106  0040E4  D755               	goto	l21615
 14107  0040E6                     l21681:
 14108                           
 14109                           ; BSR set to: 1
 14110  0040E6  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14111  0040E8  D005               	goto	u25580
 14112  0040EA  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14113  0040EC  E117               	bnz	l21697
 14114  0040EE  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14115  0040F0  B0D8               	btfsc	status,0,c
 14116  0040F2  D014               	goto	l21697
 14117  0040F4                     u25580:
 14118                           
 14119                           ; BSR set to: 1
 14120                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 14121  0040F4  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14122  0040F6  A4D8               	btfss	status,2,c
 14123  0040F8  D003               	goto	l21687
 14124                           
 14125                           ; BSR set to: 1
 14126                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 14127  0040FA  EC6B  F03F         	call	_OpenWalkOrder	;wreg free
 14128                           
 14129                           ;sm_ControlGate_MC50.c: 713:             }
 14130  0040FE  D004               	goto	l21691
 14131  004100                     l21687:
 14132                           
 14133                           ; BSR set to: 1
 14134                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 14135  004100  ECA6  F046         	call	_OpenFullOrder	;wreg free
 14136                           
 14137                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 14138  004104  EC81  F031         	call	_setPositionInvertionInClosing	;wreg free
 14139  004108                     l21691:
 14140                           
 14141                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 14142  004108  0E00               	movlw	0
 14143  00410A  0101               	movlb	1	; () banked
 14144  00410C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14145                           
 14146                           ; BSR set to: 1
 14147                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 14148  00410E  0E01               	movlw	1
 14149  004110  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 14150                           
 14151                           ; BSR set to: 1
 14152                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 14153  004112  0E00               	movlw	0
 14154  004114  6FCD               	movwf	(_ts_system+49)& (0+255),b	;volatile
 14155  004116  0E14               	movlw	20
 14156  004118  6FCC               	movwf	(_ts_system+48)& (0+255),b	;volatile
 14157                           
 14158                           ;sm_ControlGate_MC50.c: 726:         } else
 14159  00411A  0012               	return	
 14160  00411C                     l21697:
 14161                           
 14162                           ; BSR set to: 1
 14163                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 14164  00411C  0E00               	movlw	0
 14165  00411E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14166  004120  0012               	return	
 14167  004122                     l21699:
 14168                           
 14169                           ; BSR set to: 1
 14170  004122  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14171  004124  A4D8               	btfss	status,2,c
 14172  004126  D017               	goto	l21715
 14173                           
 14174                           ; BSR set to: 1
 14175                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 14176  004128  0E00               	movlw	0
 14177  00412A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14178                           
 14179                           ; BSR set to: 1
 14180                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 14181  00412C  BFC1               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14182  00412E  D005               	goto	u25610
 14183  004130  51C1               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14184  004132  E160               	bnz	l2805
 14185  004134  05C0               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14186  004136  B0D8               	btfsc	status,0,c
 14187  004138  0012               	return	
 14188  00413A                     u25610:
 14189                           
 14190                           ; BSR set to: 1
 14191                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14192  00413A  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14193  00413C  A4D8               	btfss	status,2,c
 14194  00413E  D003               	goto	l21709
 14195                           
 14196                           ; BSR set to: 1
 14197                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14198  004140  EC6B  F03F         	call	_OpenWalkOrder	;wreg free
 14199                           
 14200                           ;sm_ControlGate_MC50.c: 741:             }
 14201  004144  D004               	goto	l21713
 14202  004146                     l21709:
 14203                           
 14204                           ; BSR set to: 1
 14205                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14206  004146  ECA6  F046         	call	_OpenFullOrder	;wreg free
 14207                           
 14208                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14209  00414A  EC81  F031         	call	_setPositionInvertionInClosing	;wreg free
 14210  00414E                     l21713:
 14211                           
 14212                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14213  00414E  0E00               	movlw	0
 14214  004150  0101               	movlb	1	; () banked
 14215  004152  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14216  004154  0012               	return	
 14217  004156                     l21715:
 14218                           
 14219                           ; BSR set to: 1
 14220  004156  5100               	movf	_var_sys& (0+255),w,b	;volatile
 14221  004158  A4D8               	btfss	status,2,c
 14222  00415A  D00B               	goto	l21731
 14223                           
 14224                           ; BSR set to: 1
 14225                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14226  00415C  0E02               	movlw	2
 14227  00415E  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14228  004160  B4D8               	btfsc	status,2,c
 14229  004162  D002               	goto	l21727
 14230                           
 14231                           ; BSR set to: 1
 14232                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14233  004164  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14234  004166  D7BA               	goto	u25570
 14235  004168                     l21727:
 14236                           
 14237                           ; BSR set to: 1
 14238                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14239  004168  EC81  F031         	call	_setPositionInvertionInClosing	;wreg free
 14240  00416C                     l21729:
 14241                           
 14242                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14243  00416C  EC48  F047         	call	_StopOrder	;wreg free
 14244  004170  0012               	return	
 14245  004172                     l21731:
 14246                           
 14247                           ; BSR set to: 1
 14248  004172  BFCF               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14249  004174  D005               	goto	u25650
 14250  004176  51CF               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14251  004178  E10B               	bnz	l21741
 14252  00417A  05CE               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14253  00417C  B0D8               	btfsc	status,0,c
 14254  00417E  D008               	goto	l21741
 14255  004180                     u25650:
 14256                           
 14257                           ; BSR set to: 1
 14258  004180  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14259  004182  A4D8               	btfss	status,2,c
 14260  004184  D005               	goto	l21741
 14261                           
 14262                           ; BSR set to: 1
 14263                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14264  004186  EC81  F031         	call	_setPositionInvertionInClosing	;wreg free
 14265                           
 14266                           ; BSR set to: 1
 14267                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14268  00418A  0E00               	movlw	0
 14269  00418C  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14270  00418E  D7EE               	goto	l21729
 14271  004190                     l21741:
 14272                           
 14273                           ; BSR set to: 1
 14274  004190  0100               	movlb	0	; () banked
 14275  004192  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14276  004194  B4D8               	btfsc	status,2,c
 14277  004196  D004               	goto	u25680
 14278                           
 14279                           ; BSR set to: 0
 14280  004198  0E02               	movlw	2
 14281  00419A  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14282  00419C  A4D8               	btfss	status,2,c
 14283  00419E  D005               	goto	l21749
 14284  0041A0                     u25680:
 14285                           
 14286                           ; BSR set to: 0
 14287                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14288  0041A0  0E04               	movlw	4
 14289  0041A2  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14290  0041A4  B4D8               	btfsc	status,2,c
 14291  0041A6  0012               	return	
 14292  0041A8  D7E1               	goto	l21729
 14293  0041AA                     l21749:
 14294                           
 14295                           ; BSR set to: 0
 14296  0041AA  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14297  0041AC  B4D8               	btfsc	status,2,c
 14298  0041AE  0012               	return	
 14299                           
 14300                           ; BSR set to: 0
 14301                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14302  0041B0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14303  0041B2  A4D8               	btfss	status,2,c
 14304  0041B4  D013               	goto	l21765
 14305                           
 14306                           ; BSR set to: 0
 14307                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14308  0041B6  EC81  F031         	call	_setPositionInvertionInClosing	;wreg free
 14309                           
 14310                           ; BSR set to: 1
 14311                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14312  0041BA  EC48  F047         	call	_StopOrder	;wreg free
 14313                           
 14314                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14315  0041BE  0E02               	movlw	2
 14316  0041C0  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14317  0041C2  A4D8               	btfss	status,2,c
 14318  0041C4  0012               	return	
 14319  0041C6  0E02               	movlw	2
 14320  0041C8  0100               	movlb	0	; () banked
 14321  0041CA  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14322  0041CC  B4D8               	btfsc	status,2,c
 14323  0041CE  0012               	return	
 14324                           
 14325                           ; BSR set to: 0
 14326                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14327  0041D0  EC1E  F048         	call	_InitWalkAutoTime	;wreg free
 14328                           
 14329                           ; BSR set to: 0
 14330                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14331  0041D4  0E01               	movlw	1
 14332  0041D6  0101               	movlb	1	; () banked
 14333  0041D8  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14334  0041DA  0012               	return	
 14335  0041DC                     l21765:
 14336                           
 14337                           ; BSR set to: 0
 14338                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14339  0041DC  0E04               	movlw	4
 14340  0041DE  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14341  0041E0  B4D8               	btfsc	status,2,c
 14342  0041E2  D7C4               	goto	l21729
 14343                           
 14344                           ; BSR set to: 0
 14345                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14346  0041E4  0E01               	movlw	1
 14347  0041E6  0101               	movlb	1	; () banked
 14348  0041E8  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14349                           
 14350                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14351  0041EA  0E00               	movlw	0
 14352  0041EC  6FC1               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14353  0041EE  0E0A               	movlw	10
 14354  0041F0  6FC0               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14355                           
 14356                           ;sm_ControlGate_MC50.c: 806:             }
 14357  0041F2  0012               	return	
 14358  0041F4                     l2805:
 14359  0041F4  0012               	return		;funcret
 14360  0041F6                     __end_of_actionZone_Closing:
 14361                           	callstack 0
 14362                           
 14363 ;; *************** function _setPositionInvertionInClosing *****************
 14364 ;; Defined at:
 14365 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14366 ;; Parameters:    Size  Location     Type
 14367 ;;		None
 14368 ;; Auto vars:     Size  Location     Type
 14369 ;;		None
 14370 ;; Return value:  Size  Location     Type
 14371 ;;                  1    wreg      void 
 14372 ;; Registers used:
 14373 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14374 ;; Tracked objects:
 14375 ;;		On entry : 3E/1
 14376 ;;		On exit  : 3F/1
 14377 ;;		Unchanged: 0/0
 14378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14381 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14382 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14383 ;;Total ram usage:       12 bytes
 14384 ;; Hardware stack levels used: 1
 14385 ;; Hardware stack levels required when called: 6
 14386 ;; This function calls:
 14387 ;;		_getTimeDecelaration
 14388 ;; This function is called by:
 14389 ;;		_actionZone_Opening
 14390 ;;		_actionZone_Closing
 14391 ;; This function uses a non-reentrant model
 14392 ;;
 14393                           
 14394                           	psect	text37
 14395  006302                     __ptext37:
 14396                           	callstack 0
 14397  006302                     _setPositionInvertionInClosing:
 14398                           	callstack 22
 14399                           
 14400                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14401                           
 14402                           ;incstack = 0
 14403  006302  0E02               	movlw	2
 14404  006304  0100               	movlb	0	; () banked
 14405  006306  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14406  006308  B4D8               	btfsc	status,2,c
 14407  00630A  D007               	goto	l20419
 14408                           
 14409                           ; BSR set to: 0
 14410                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14411  00630C  0E02               	movlw	2
 14412  00630E  0101               	movlb	1	; () banked
 14413  006310  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14414  006312  0E00               	movlw	0
 14415  006314  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14416  006316  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14417  006318  D008               	goto	L74
 14418  00631A                     l20419:
 14419                           
 14420                           ; BSR set to: 0
 14421                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14422  00631A  0EFF               	movlw	255
 14423  00631C  0101               	movlb	1	; () banked
 14424  00631E  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14425  006320  0EFF               	movlw	255
 14426  006322  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14427  006324  0EFF               	movlw	255
 14428  006326  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14429  006328  0EFF               	movlw	255
 14430  00632A                     L74:
 14431  00632A  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14432                           
 14433                           ; BSR set to: 1
 14434                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14435  00632C  0E01               	movlw	1
 14436  00632E  ECB4  F035         	call	_getTimeDecelaration
 14437  006332  0101               	movlb	1	; () banked
 14438  006334  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14439  006336  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14440  006338  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14441  00633A  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14442  00633C  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14443  00633E  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14444  006340  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14445  006342  0A80               	xorlw	128
 14446  006344  0100               	movlb	0	; () banked
 14447  006346  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14448  006348  0101               	movlb	1	; () banked
 14449  00634A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14450  00634C  0A80               	xorlw	128
 14451  00634E  0100               	movlb	0	; () banked
 14452  006350  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14453  006352  B0D8               	btfsc	status,0,c
 14454  006354  D008               	goto	l20427
 14455                           
 14456                           ; BSR set to: 0
 14457  006356  0E02               	movlw	2
 14458  006358  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14459  00635A  B4D8               	btfsc	status,2,c
 14460  00635C  D004               	goto	l20427
 14461                           
 14462                           ; BSR set to: 0
 14463                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14464  00635E  0E01               	movlw	1
 14465  006360  ECB4  F035         	call	_getTimeDecelaration
 14466  006364  D01A               	goto	L75
 14467  006366                     l20427:
 14468                           
 14469                           ; BSR set to: 0
 14470  006366  0E03               	movlw	3
 14471  006368  ECB4  F035         	call	_getTimeDecelaration
 14472  00636C  5029               	movf	?_getTimeDecelaration^0,w,c
 14473  00636E  0101               	movlb	1	; () banked
 14474  006370  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14475  006372  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14476  006374  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14477  006376  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14478  006378  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14479  00637A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14480  00637C  0A80               	xorlw	128
 14481  00637E  0100               	movlb	0	; () banked
 14482  006380  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14483  006382  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14484  006384  0A80               	xorlw	128
 14485  006386  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14486  006388  B0D8               	btfsc	status,0,c
 14487  00638A  D00F               	goto	l20433
 14488                           
 14489                           ; BSR set to: 0
 14490  00638C  0E02               	movlw	2
 14491  00638E  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14492  006390  B4D8               	btfsc	status,2,c
 14493  006392  D00B               	goto	l20433
 14494                           
 14495                           ; BSR set to: 0
 14496                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14497  006394  0E03               	movlw	3
 14498  006396  ECB4  F035         	call	_getTimeDecelaration
 14499  00639A                     L75:
 14500  00639A  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14501  00639E  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14502  0063A2  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14503  0063A6  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14504  0063AA                     l20433:
 14505                           
 14506                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14507  0063AA  0100               	movlb	0	; () banked
 14508  0063AC  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14509  0063AE  0D0A               	mullw	10
 14510  0063B0  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14511  0063B4  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14512  0063B8  0E00               	movlw	0
 14513  0063BA  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14514  0063BC  0EFF               	movlw	255
 14515  0063BE  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14516  0063C0  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14517  0063C2  0101               	movlb	1	; () banked
 14518  0063C4  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14519  0063C6  0100               	movlb	0	; () banked
 14520  0063C8  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14521  0063CA  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14522  0063CC  0101               	movlb	1	; () banked
 14523  0063CE  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14524  0063D0  0100               	movlb	0	; () banked
 14525  0063D2  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14526  0063D4  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14527  0063D6  0101               	movlb	1	; () banked
 14528  0063D8  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14529  0063DA  0100               	movlb	0	; () banked
 14530  0063DC  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14531  0063DE  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14532  0063E0  0101               	movlb	1	; () banked
 14533  0063E2  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14534  0063E4  0100               	movlb	0	; () banked
 14535  0063E6  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14536  0063E8  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14537  0063EA  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14538  0063EC  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14539  0063EE  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14540  0063F0  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14541  0063F2  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14542  0063F4  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14543  0063F6  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14544  0063F8  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14545  0063FA  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14546  0063FC  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14547  0063FE  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14548  006400  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14549  006402  0EC8               	movlw	200
 14550  006404  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14551  006406  0101               	movlb	1	; () banked
 14552  006408  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14553  00640A  0E00               	movlw	0
 14554  00640C  0100               	movlb	0	; () banked
 14555  00640E  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14556  006410  0101               	movlb	1	; () banked
 14557  006412  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14558  006414  0E00               	movlw	0
 14559  006416  0100               	movlb	0	; () banked
 14560  006418  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14561  00641A  0101               	movlb	1	; () banked
 14562  00641C  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14563  00641E  0E00               	movlw	0
 14564  006420  0100               	movlb	0	; () banked
 14565  006422  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14566  006424  0101               	movlb	1	; () banked
 14567  006426  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14568                           
 14569                           ; BSR set to: 1
 14570  006428  0012               	return		;funcret
 14571  00642A                     __end_of_setPositionInvertionInClosing:
 14572                           	callstack 0
 14573                           
 14574 ;; *************** function _getTimeDecelaration *****************
 14575 ;; Defined at:
 14576 ;;		line 641 in file "outputs_MC50.c"
 14577 ;; Parameters:    Size  Location     Type
 14578 ;;  state           1    wreg     enum E10381
 14579 ;; Auto vars:     Size  Location     Type
 14580 ;;  state           1   48[COMRAM] enum E10381
 14581 ;; Return value:  Size  Location     Type
 14582 ;;                  4   40[COMRAM] long 
 14583 ;; Registers used:
 14584 ;;		wreg, status,2, status,0, cstack
 14585 ;; Tracked objects:
 14586 ;;		On entry : 3E/1
 14587 ;;		On exit  : 0/0
 14588 ;;		Unchanged: 0/0
 14589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14590 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14592 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14593 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14594 ;;Total ram usage:        9 bytes
 14595 ;; Hardware stack levels used: 1
 14596 ;; Hardware stack levels required when called: 5
 14597 ;; This function calls:
 14598 ;;		___lmul
 14599 ;; This function is called by:
 14600 ;;		_getStateOpenPosition
 14601 ;;		_controlVelocity
 14602 ;;		_setPositionInvertionInClosing
 14603 ;;		_setPositionInvertionInOpening
 14604 ;; This function uses a non-reentrant model
 14605 ;;
 14606                           
 14607                           	psect	text38
 14608  006B68                     __ptext38:
 14609                           	callstack 0
 14610  006B68                     _getTimeDecelaration:
 14611                           	callstack 22
 14612                           
 14613                           ; BSR set to: 1
 14614                           ;incstack = 0
 14615                           ;getTimeDecelaration@state stored from wreg
 14616  006B68  6E31               	movwf	getTimeDecelaration@state^0,c
 14617                           
 14618                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14619  006B6A  0E03               	movlw	3
 14620  006B6C  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14621  006B6E  A4D8               	btfss	status,2,c
 14622  006B70  D033               	goto	l19455
 14623                           
 14624                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14625  006B72  0E02               	movlw	2
 14626  006B74  0100               	movlb	0	; () banked
 14627  006B76  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14628  006B78  B4D8               	btfsc	status,2,c
 14629  006B7A  D018               	goto	l19451
 14630                           
 14631                           ; BSR set to: 0
 14632                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14633  006B7C  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14634  006B7E  6E1D               	movwf	___lmul@multiplier^0,c
 14635  006B80  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14636  006B82  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14637  006B84  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14638  006B86  0E0A               	movlw	10
 14639  006B88  6E21               	movwf	___lmul@multiplicand^0,c
 14640  006B8A  0E00               	movlw	0
 14641  006B8C  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14642  006B8E  0E00               	movlw	0
 14643  006B90  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14644  006B92  0E00               	movlw	0
 14645  006B94  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14646  006B96  ECE4  F041         	call	___lmul	;wreg free
 14647  006B9A  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14648  006B9E  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14649  006BA2  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14650  006BA6  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14651  006BAA  0012               	return	
 14652  006BAC                     l19451:
 14653                           
 14654                           ; BSR set to: 0
 14655  006BAC  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14656  006BB0  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14657  006BB2  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14658  006BB4  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14659  006BB6  0E02               	movlw	2
 14660  006BB8                     u22245:
 14661  006BB8  90D8               	bcf	status,0,c
 14662  006BBA  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14663  006BBC  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14664  006BBE  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14665  006BC0  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14666  006BC2  2EE8               	decfsz	wreg,f,c
 14667  006BC4  D7F9               	goto	u22245
 14668  006BC6  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14669  006BCA  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14670  006BCE  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14671  006BD2  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14672  006BD6  0012               	return	
 14673  006BD8                     l19455:
 14674                           
 14675                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14676  006BD8  0E02               	movlw	2
 14677  006BDA  0100               	movlb	0	; () banked
 14678  006BDC  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14679  006BDE  B4D8               	btfsc	status,2,c
 14680  006BE0  D01D               	goto	l19463
 14681                           
 14682                           ; BSR set to: 0
 14683                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14684  006BE2  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14685  006BE4  6E1D               	movwf	___lmul@multiplier^0,c
 14686  006BE6  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14687  006BE8  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14688  006BEA  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14689  006BEC  0EF6               	movlw	246
 14690  006BEE  6E21               	movwf	___lmul@multiplicand^0,c
 14691  006BF0  0EFF               	movlw	255
 14692  006BF2  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14693  006BF4  0EFF               	movlw	255
 14694  006BF6  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14695  006BF8  0EFF               	movlw	255
 14696  006BFA  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14697  006BFC  ECE4  F041         	call	___lmul	;wreg free
 14698  006C00  0100               	movlb	0	; () banked
 14699  006C02  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14700  006C04  241D               	addwf	?___lmul^0,w,c
 14701  006C06  6E29               	movwf	?_getTimeDecelaration^0,c
 14702  006C08  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14703  006C0A  201E               	addwfc	(?___lmul+1)^0,w,c
 14704  006C0C  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14705  006C0E  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14706  006C10  201F               	addwfc	(?___lmul+2)^0,w,c
 14707  006C12  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14708  006C14  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14709  006C16  2020               	addwfc	(?___lmul+3)^0,w,c
 14710  006C18  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14711  006C1A  0012               	return	
 14712  006C1C                     l19463:
 14713                           
 14714                           ; BSR set to: 0
 14715  006C1C  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14716  006C20  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14717  006C22  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14718  006C24  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14719  006C26  0E02               	movlw	2
 14720  006C28                     u22265:
 14721  006C28  90D8               	bcf	status,0,c
 14722  006C2A  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14723  006C2C  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14724  006C2E  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14725  006C30  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14726  006C32  2EE8               	decfsz	wreg,f,c
 14727  006C34  D7F9               	goto	u22265
 14728  006C36  502D               	movf	??_getTimeDecelaration^0,w,c
 14729  006C38  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14730  006C3A  6E29               	movwf	?_getTimeDecelaration^0,c
 14731  006C3C  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14732  006C3E  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14733  006C40  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14734  006C42  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14735  006C44  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14736  006C46  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14737  006C48  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14738  006C4A  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14739  006C4C  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14740  006C4E  0012               	return		;funcret
 14741  006C50                     __end_of_getTimeDecelaration:
 14742                           	callstack 0
 14743                           
 14744 ;; *************** function ___lmul *****************
 14745 ;; Defined at:
 14746 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14747 ;; Parameters:    Size  Location     Type
 14748 ;;  multiplier      4   28[COMRAM] unsigned long 
 14749 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14750 ;; Auto vars:     Size  Location     Type
 14751 ;;  product         4   36[COMRAM] unsigned long 
 14752 ;; Return value:  Size  Location     Type
 14753 ;;                  4   28[COMRAM] unsigned long 
 14754 ;; Registers used:
 14755 ;;		wreg, status,2, status,0
 14756 ;; Tracked objects:
 14757 ;;		On entry : 0/1
 14758 ;;		On exit  : 0/0
 14759 ;;		Unchanged: 0/0
 14760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14761 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14762 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14764 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14765 ;;Total ram usage:       12 bytes
 14766 ;; Hardware stack levels used: 1
 14767 ;; Hardware stack levels required when called: 4
 14768 ;; This function calls:
 14769 ;;		Nothing
 14770 ;; This function is called by:
 14771 ;;		_getStateOpenPosition
 14772 ;;		_getTimeDecelaration
 14773 ;;		_actionZone_Closing
 14774 ;;		_sm_execute_menuConfiguration
 14775 ;; This function uses a non-reentrant model
 14776 ;;
 14777                           
 14778                           	psect	text39
 14779  0083C8                     __ptext39:
 14780                           	callstack 0
 14781  0083C8                     ___lmul:
 14782                           	callstack 24
 14783                           
 14784                           ;incstack = 0
 14785  0083C8  0E00               	movlw	0
 14786  0083CA  6E25               	movwf	___lmul@product^0,c
 14787  0083CC  0E00               	movlw	0
 14788  0083CE  6E26               	movwf	(___lmul@product+1)^0,c
 14789  0083D0  0E00               	movlw	0
 14790  0083D2  6E27               	movwf	(___lmul@product+2)^0,c
 14791  0083D4  0E00               	movlw	0
 14792  0083D6  6E28               	movwf	(___lmul@product+3)^0,c
 14793  0083D8                     l19341:
 14794  0083D8  A01D               	btfss	___lmul@multiplier^0,0,c
 14795  0083DA  D008               	goto	l19345
 14796  0083DC  5021               	movf	___lmul@multiplicand^0,w,c
 14797  0083DE  2625               	addwf	___lmul@product^0,f,c
 14798  0083E0  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14799  0083E2  2226               	addwfc	(___lmul@product+1)^0,f,c
 14800  0083E4  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14801  0083E6  2227               	addwfc	(___lmul@product+2)^0,f,c
 14802  0083E8  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14803  0083EA  2228               	addwfc	(___lmul@product+3)^0,f,c
 14804  0083EC                     l19345:
 14805  0083EC  90D8               	bcf	status,0,c
 14806  0083EE  3621               	rlcf	___lmul@multiplicand^0,f,c
 14807  0083F0  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14808  0083F2  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14809  0083F4  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14810  0083F6  90D8               	bcf	status,0,c
 14811  0083F8  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14812  0083FA  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14813  0083FC  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14814  0083FE  321D               	rrcf	___lmul@multiplier^0,f,c
 14815  008400  501D               	movf	___lmul@multiplier^0,w,c
 14816  008402  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14817  008404  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14818  008406  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14819  008408  A4D8               	btfss	status,2,c
 14820  00840A  D7E6               	goto	l19341
 14821  00840C  C025  F01D         	movff	___lmul@product,?___lmul
 14822  008410  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14823  008414  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14824  008418  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14825  00841C  0012               	return		;funcret
 14826  00841E                     __end_of___lmul:
 14827                           	callstack 0
 14828                           
 14829 ;; *************** function _StopOrder *****************
 14830 ;; Defined at:
 14831 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14832 ;; Parameters:    Size  Location     Type
 14833 ;;		None
 14834 ;; Auto vars:     Size  Location     Type
 14835 ;;		None
 14836 ;; Return value:  Size  Location     Type
 14837 ;;                  1    wreg      void 
 14838 ;; Registers used:
 14839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14840 ;; Tracked objects:
 14841 ;;		On entry : 3E/1
 14842 ;;		On exit  : 0/0
 14843 ;;		Unchanged: 0/0
 14844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14849 ;;Total ram usage:        0 bytes
 14850 ;; Hardware stack levels used: 1
 14851 ;; Hardware stack levels required when called: 6
 14852 ;; This function calls:
 14853 ;;		_sm_send_event
 14854 ;; This function is called by:
 14855 ;;		_actionZone_Opening
 14856 ;;		_actionZone_Closing
 14857 ;; This function uses a non-reentrant model
 14858 ;;
 14859                           
 14860                           	psect	text40
 14861  008E90                     __ptext40:
 14862                           	callstack 0
 14863  008E90                     _StopOrder:
 14864                           	callstack 22
 14865                           
 14866                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14867                           
 14868                           ;incstack = 0
 14869  008E90  0E00               	movlw	0
 14870  008E92  0101               	movlb	1	; () banked
 14871  008E94  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14872                           
 14873                           ; BSR set to: 1
 14874                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14875  008E96  0EE4               	movlw	low _controlGate_stateMachine
 14876  008E98  6E12               	movwf	sm_send_event@psm^0,c
 14877  008E9A  0E01               	movlw	high _controlGate_stateMachine
 14878  008E9C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14879  008E9E  0E00               	movlw	0
 14880  008EA0  6E15               	movwf	(sm_send_event@event+1)^0,c
 14881  008EA2  0E0D               	movlw	13
 14882  008EA4  6E14               	movwf	sm_send_event@event^0,c
 14883  008EA6  ECD6  F040         	call	_sm_send_event	;wreg free
 14884  008EAA  0012               	return		;funcret
 14885  008EAC                     __end_of_StopOrder:
 14886                           	callstack 0
 14887                           
 14888 ;; *************** function _GetSecurityStateInClosing *****************
 14889 ;; Defined at:
 14890 ;;		line 776 in file "inputs_MC50.c"
 14891 ;; Parameters:    Size  Location     Type
 14892 ;;		None
 14893 ;; Auto vars:     Size  Location     Type
 14894 ;;		None
 14895 ;; Return value:  Size  Location     Type
 14896 ;;                  1    wreg      enum E10564
 14897 ;; Registers used:
 14898 ;;		wreg, status,2, status,0, cstack
 14899 ;; Tracked objects:
 14900 ;;		On entry : 0/0
 14901 ;;		On exit  : 3E/0
 14902 ;;		Unchanged: 0/0
 14903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14908 ;;Total ram usage:        0 bytes
 14909 ;; Hardware stack levels used: 1
 14910 ;; Hardware stack levels required when called: 5
 14911 ;; This function calls:
 14912 ;;		_SetSegmentValueIntermitent
 14913 ;; This function is called by:
 14914 ;;		_actionZone_Opening
 14915 ;;		_actionZone_Opened
 14916 ;;		_actionZone_Closing
 14917 ;; This function uses a non-reentrant model
 14918 ;;
 14919                           
 14920                           	psect	text41
 14921  0071AE                     __ptext41:
 14922                           	callstack 0
 14923  0071AE                     _GetSecurityStateInClosing:
 14924                           	callstack 23
 14925                           
 14926                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14927                           
 14928                           ;incstack = 0
 14929  0071AE  0100               	movlb	0	; () banked
 14930  0071B0  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 14931  0071B2  A4D8               	btfss	status,2,c
 14932  0071B4  D01B               	goto	l20099
 14933                           
 14934                           ; BSR set to: 0
 14935  0071B6  0101               	movlb	1	; () banked
 14936  0071B8  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14937  0071BA  A4D8               	btfss	status,2,c
 14938  0071BC  D017               	goto	l20099
 14939                           
 14940                           ; BSR set to: 1
 14941  0071BE  0100               	movlb	0	; () banked
 14942  0071C0  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 14943  0071C2  A4D8               	btfss	status,2,c
 14944  0071C4  D013               	goto	l20099
 14945                           
 14946                           ; BSR set to: 0
 14947  0071C6  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14948  0071C8  A4D8               	btfss	status,2,c
 14949  0071CA  D010               	goto	l20099
 14950                           
 14951                           ; BSR set to: 0
 14952                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14953  0071CC  0E00               	movlw	0
 14954  0071CE  0101               	movlb	1	; () banked
 14955  0071D0  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14956  0071D2  0E04               	movlw	4
 14957  0071D4  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14958                           
 14959                           ; BSR set to: 1
 14960                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 14961  0071D6  0E0A               	movlw	10
 14962  0071D8  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14963  0071DA  0E00               	movlw	0
 14964  0071DC  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14965  0071DE  0E14               	movlw	20
 14966  0071E0  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14967  0071E2  0E12               	movlw	18
 14968  0071E4  EC4D  F045         	call	_SetSegmentValueIntermitent
 14969  0071E8                     l20093:
 14970                           
 14971                           ; BSR set to: 1
 14972                           ;inputs_MC50.c: 792:         return YES;
 14973  0071E8  0E01               	movlw	1
 14974  0071EA  0012               	return	
 14975  0071EC                     l20099:
 14976  0071EC  0100               	movlb	0	; () banked
 14977  0071EE  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14978  0071F0  A4D8               	btfss	status,2,c
 14979  0071F2  D013               	goto	l20113
 14980                           
 14981                           ; BSR set to: 0
 14982  0071F4  0101               	movlb	1	; () banked
 14983  0071F6  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14984  0071F8  A4D8               	btfss	status,2,c
 14985  0071FA  D00F               	goto	l20113
 14986                           
 14987                           ; BSR set to: 1
 14988                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14989  0071FC  0E00               	movlw	0
 14990  0071FE  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14991  007200  0E04               	movlw	4
 14992  007202  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14993                           
 14994                           ; BSR set to: 1
 14995                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 14996  007204  0E15               	movlw	21
 14997  007206  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14998  007208  0E00               	movlw	0
 14999  00720A  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15000  00720C  0E14               	movlw	20
 15001  00720E  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15002  007210  0E05               	movlw	5
 15003  007212  EC4D  F045         	call	_SetSegmentValueIntermitent
 15004                           
 15005                           ; BSR set to: 1
 15006                           ;inputs_MC50.c: 799:         return ST;
 15007  007216  0E02               	movlw	2
 15008  007218  0012               	return	
 15009  00721A                     l20113:
 15010  00721A  0100               	movlb	0	; () banked
 15011  00721C  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15012  00721E  A4D8               	btfss	status,2,c
 15013  007220  D017               	goto	l20129
 15014                           
 15015                           ; BSR set to: 0
 15016  007222  0101               	movlb	1	; () banked
 15017  007224  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15018  007226  A4D8               	btfss	status,2,c
 15019  007228  D013               	goto	l20129
 15020                           
 15021                           ; BSR set to: 1
 15022  00722A  0100               	movlb	0	; () banked
 15023  00722C  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15024  00722E  A4D8               	btfss	status,2,c
 15025  007230  D00F               	goto	l20129
 15026                           
 15027                           ; BSR set to: 0
 15028                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15029  007232  0E00               	movlw	0
 15030  007234  0101               	movlb	1	; () banked
 15031  007236  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15032  007238  0E04               	movlw	4
 15033  00723A  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15034                           
 15035                           ; BSR set to: 1
 15036                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15037  00723C  0E0E               	movlw	14
 15038  00723E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15039  007240  0E00               	movlw	0
 15040  007242  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15041  007244  0E14               	movlw	20
 15042  007246  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15043  007248  0E12               	movlw	18
 15044  00724A  EC4D  F045         	call	_SetSegmentValueIntermitent
 15045  00724E  D7CC               	goto	l20093
 15046  007250                     l20129:
 15047                           
 15048                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 15049  007250  0E00               	movlw	0
 15050  007252  0012               	return		;funcret
 15051  007254                     __end_of_GetSecurityStateInClosing:
 15052                           	callstack 0
 15053                           
 15054 ;; *************** function _actionZone_Closed *****************
 15055 ;; Defined at:
 15056 ;;		line 327 in file "sm_ControlGate_MC50.c"
 15057 ;; Parameters:    Size  Location     Type
 15058 ;;		None
 15059 ;; Auto vars:     Size  Location     Type
 15060 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 15061 ;;  securityOpen    1   31[COMRAM] enum E10397
 15062 ;; Return value:  Size  Location     Type
 15063 ;;                  1    wreg      void 
 15064 ;; Registers used:
 15065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15066 ;; Tracked objects:
 15067 ;;		On entry : 3F/0
 15068 ;;		On exit  : 0/0
 15069 ;;		Unchanged: 0/0
 15070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15072 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15074 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15075 ;;Total ram usage:        2 bytes
 15076 ;; Hardware stack levels used: 1
 15077 ;; Hardware stack levels required when called: 8
 15078 ;; This function calls:
 15079 ;;		_GetOpenOrder
 15080 ;;		_GetSecurityStateInOpening
 15081 ;;		_InitFullAutoTime
 15082 ;;		_InitWalkAutoTime
 15083 ;;		_OpenFullOrder
 15084 ;;		_OpenWalkOrder
 15085 ;;		_WaitPreFlash
 15086 ;;		_sm_send_event
 15087 ;; This function is called by:
 15088 ;;		_sm_execute_ControlGate
 15089 ;; This function uses a non-reentrant model
 15090 ;;
 15091                           
 15092                           	psect	text42
 15093  007104                     __ptext42:
 15094                           	callstack 0
 15095  007104                     _actionZone_Closed:
 15096                           	callstack 21
 15097                           
 15098                           ; BSR set to: 0
 15099                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 15100                           
 15101                           ;incstack = 0
 15102  007104  0101               	movlb	1	; () banked
 15103  007106  05EF               	decf	_main_stateMachine& (0+255),w,b
 15104  007108  11F0               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15105  00710A  B4D8               	btfsc	status,2,c
 15106  00710C  0012               	return	
 15107                           
 15108                           ; BSR set to: 1
 15109                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 15110  00710E  EC85  F028         	call	_GetOpenOrder	;wreg free
 15111  007112  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 15112                           
 15113                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 15114  007114  EC2A  F039         	call	_GetSecurityStateInOpening	;wreg free
 15115  007118  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 15116                           
 15117                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 15118  00711A  0100               	movlb	0	; () banked
 15119  00711C  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15120  00711E  A4D8               	btfss	status,2,c
 15121  007120  D018               	goto	l21257
 15122                           
 15123                           ; BSR set to: 0
 15124                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 15125  007122  0E03               	movlw	3
 15126  007124  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15127  007126  A4D8               	btfss	status,2,c
 15128  007128  0012               	return	
 15129                           
 15130                           ; BSR set to: 0
 15131  00712A  0101               	movlb	1	; () banked
 15132  00712C  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 15133  00712E  A4D8               	btfss	status,2,c
 15134  007130  0012               	return	
 15135                           
 15136                           ; BSR set to: 1
 15137  007132  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15138  007134  A4D8               	btfss	status,2,c
 15139  007136  0012               	return	
 15140                           
 15141                           ; BSR set to: 1
 15142                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 15143  007138  ECA6  F046         	call	_OpenFullOrder	;wreg free
 15144  00713C                     l21255:
 15145                           
 15146                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 15147  00713C  0EEF               	movlw	low _main_stateMachine
 15148  00713E  6E12               	movwf	sm_send_event@psm^0,c
 15149  007140  0E01               	movlw	high _main_stateMachine
 15150  007142  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15151  007144  0E00               	movlw	0
 15152  007146  6E15               	movwf	(sm_send_event@event+1)^0,c
 15153  007148  0E11               	movlw	17
 15154  00714A  6E14               	movwf	sm_send_event@event^0,c
 15155  00714C  ECD6  F040         	call	_sm_send_event	;wreg free
 15156  007150  0012               	return	
 15157  007152                     l21257:
 15158                           
 15159                           ; BSR set to: 0
 15160  007152  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 15161  007154  B4D8               	btfsc	status,2,c
 15162  007156  D004               	goto	u24610
 15163                           
 15164                           ; BSR set to: 0
 15165  007158  0E03               	movlw	3
 15166  00715A  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15167  00715C  A4D8               	btfss	status,2,c
 15168  00715E  D017               	goto	l21277
 15169  007160                     u24610:
 15170                           
 15171                           ; BSR set to: 0
 15172  007160  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15173  007162  A4D8               	btfss	status,2,c
 15174  007164  D014               	goto	l21277
 15175                           
 15176                           ; BSR set to: 0
 15177  007166  0101               	movlb	1	; () banked
 15178  007168  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 15179  00716A  A4D8               	btfss	status,2,c
 15180  00716C  D010               	goto	l21277
 15181                           
 15182                           ; BSR set to: 1
 15183                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15184  00716E  0E02               	movlw	2
 15185  007170  0100               	movlb	0	; () banked
 15186  007172  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15187  007174  A4D8               	btfss	status,2,c
 15188  007176  D006               	goto	l21271
 15189                           
 15190                           ; BSR set to: 0
 15191                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15192  007178  0E01               	movlw	1
 15193  00717A  0101               	movlb	1	; () banked
 15194  00717C  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15195                           
 15196                           ; BSR set to: 1
 15197                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15198  00717E  EC33  F03F         	call	_WaitPreFlash	;wreg free
 15199                           
 15200                           ;sm_ControlGate_MC50.c: 356:             }
 15201  007182  0012               	return	
 15202  007184                     l21271:
 15203                           
 15204                           ; BSR set to: 0
 15205                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15206  007184  ECA6  F046         	call	_OpenFullOrder	;wreg free
 15207                           
 15208                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15209  007188  EC9A  F047         	call	_InitFullAutoTime	;wreg free
 15210  00718C  D7D7               	goto	l21255
 15211  00718E                     l21277:
 15212  00718E  0E02               	movlw	2
 15213  007190  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15214  007192  A4D8               	btfss	status,2,c
 15215  007194  0012               	return	
 15216  007196  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15217  007198  A4D8               	btfss	status,2,c
 15218  00719A  0012               	return	
 15219  00719C  0100               	movlb	0	; () banked
 15220  00719E  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15221  0071A0  B4D8               	btfsc	status,2,c
 15222  0071A2  0012               	return	
 15223                           
 15224                           ; BSR set to: 0
 15225                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15226  0071A4  EC6B  F03F         	call	_OpenWalkOrder	;wreg free
 15227                           
 15228                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15229  0071A8  EC1E  F048         	call	_InitWalkAutoTime	;wreg free
 15230  0071AC  D7C7               	goto	l21255
 15231  0071AE                     __end_of_actionZone_Closed:
 15232                           	callstack 0
 15233                           
 15234 ;; *************** function _WaitPreFlash *****************
 15235 ;; Defined at:
 15236 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15237 ;; Parameters:    Size  Location     Type
 15238 ;;		None
 15239 ;; Auto vars:     Size  Location     Type
 15240 ;;		None
 15241 ;; Return value:  Size  Location     Type
 15242 ;;                  1    wreg      void 
 15243 ;; Registers used:
 15244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15245 ;; Tracked objects:
 15246 ;;		On entry : 3F/1
 15247 ;;		On exit  : 3F/1
 15248 ;;		Unchanged: 0/0
 15249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15254 ;;Total ram usage:        0 bytes
 15255 ;; Hardware stack levels used: 1
 15256 ;; Hardware stack levels required when called: 7
 15257 ;; This function calls:
 15258 ;;		_InitFullAutoTime
 15259 ;;		_OpenFullOrder
 15260 ;;		_sm_send_event
 15261 ;; This function is called by:
 15262 ;;		_sm_execute_ControlGate
 15263 ;;		_actionZone_Closed
 15264 ;; This function uses a non-reentrant model
 15265 ;;
 15266                           
 15267                           	psect	text43
 15268  007E66                     __ptext43:
 15269                           	callstack 0
 15270  007E66                     _WaitPreFlash:
 15271                           	callstack 21
 15272                           
 15273                           ; BSR set to: 1
 15274                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15275                           
 15276                           ;incstack = 0
 15277  007E66  0E02               	movlw	2
 15278  007E68  0100               	movlb	0	; () banked
 15279  007E6A  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15280  007E6C  A4D8               	btfss	status,2,c
 15281  007E6E  D014               	goto	l20339
 15282                           
 15283                           ; BSR set to: 0
 15284  007E70  0101               	movlb	1	; () banked
 15285  007E72  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15286  007E74  A4D8               	btfss	status,2,c
 15287  007E76  D010               	goto	l20339
 15288                           
 15289                           ; BSR set to: 1
 15290  007E78  BFE3               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15291  007E7A  D005               	goto	u23590
 15292  007E7C  51E3               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15293  007E7E  E10C               	bnz	l20339
 15294  007E80  05E2               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15295  007E82  B0D8               	btfsc	status,0,c
 15296  007E84  D009               	goto	l20339
 15297  007E86                     u23590:
 15298                           
 15299                           ; BSR set to: 1
 15300  007E86  518E               	movf	_aux_i& (0+255),w,b
 15301  007E88  A4D8               	btfss	status,2,c
 15302  007E8A  D006               	goto	l20339
 15303                           
 15304                           ; BSR set to: 1
 15305                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15306  007E8C  0E00               	movlw	0
 15307  007E8E  6FE3               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15308  007E90  0E3C               	movlw	60
 15309  007E92  6FE2               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15310                           
 15311                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15312  007E94  0E01               	movlw	1
 15313  007E96  6F8E               	movwf	_aux_i& (0+255),b
 15314  007E98                     l20339:
 15315                           
 15316                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15317  007E98  0101               	movlb	1	; () banked
 15318  007E9A  BFE3               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15319  007E9C  D005               	goto	u23610
 15320  007E9E  51E3               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15321  007EA0  E119               	bnz	l2580
 15322  007EA2  05E2               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15323  007EA4  B0D8               	btfsc	status,0,c
 15324  007EA6  0012               	return	
 15325  007EA8                     u23610:
 15326                           
 15327                           ; BSR set to: 1
 15328  007EA8  058E               	decf	_aux_i& (0+255),w,b
 15329  007EAA  A4D8               	btfss	status,2,c
 15330  007EAC  0012               	return	
 15331                           
 15332                           ; BSR set to: 1
 15333                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15334  007EAE  0E00               	movlw	0
 15335  007EB0  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15336                           
 15337                           ; BSR set to: 1
 15338                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15339  007EB2  ECA6  F046         	call	_OpenFullOrder	;wreg free
 15340                           
 15341                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15342  007EB6  EC9A  F047         	call	_InitFullAutoTime	;wreg free
 15343                           
 15344                           ; BSR set to: 0
 15345                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15346  007EBA  0EEF               	movlw	low _main_stateMachine
 15347  007EBC  6E12               	movwf	sm_send_event@psm^0,c
 15348  007EBE  0E01               	movlw	high _main_stateMachine
 15349  007EC0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15350  007EC2  0E00               	movlw	0
 15351  007EC4  6E15               	movwf	(sm_send_event@event+1)^0,c
 15352  007EC6  0E11               	movlw	17
 15353  007EC8  6E14               	movwf	sm_send_event@event^0,c
 15354  007ECA  ECD6  F040         	call	_sm_send_event	;wreg free
 15355                           
 15356                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15357  007ECE  0E00               	movlw	0
 15358  007ED0  0101               	movlb	1	; () banked
 15359  007ED2  6F8E               	movwf	_aux_i& (0+255),b
 15360  007ED4                     l2580:
 15361                           
 15362                           ; BSR set to: 1
 15363  007ED4  0012               	return		;funcret
 15364  007ED6                     __end_of_WaitPreFlash:
 15365                           	callstack 0
 15366                           
 15367 ;; *************** function _OpenFullOrder *****************
 15368 ;; Defined at:
 15369 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15370 ;; Parameters:    Size  Location     Type
 15371 ;;		None
 15372 ;; Auto vars:     Size  Location     Type
 15373 ;;		None
 15374 ;; Return value:  Size  Location     Type
 15375 ;;                  1    wreg      void 
 15376 ;; Registers used:
 15377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15378 ;; Tracked objects:
 15379 ;;		On entry : 3E/1
 15380 ;;		On exit  : 3E/0
 15381 ;;		Unchanged: 0/0
 15382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15387 ;;Total ram usage:        0 bytes
 15388 ;; Hardware stack levels used: 1
 15389 ;; Hardware stack levels required when called: 6
 15390 ;; This function calls:
 15391 ;;		_InitSoftStart
 15392 ;;		_sm_send_event
 15393 ;; This function is called by:
 15394 ;;		_WaitPreFlash
 15395 ;;		_actionZone_Closed
 15396 ;;		_actionZone_Opened
 15397 ;;		_actionZone_Closing
 15398 ;; This function uses a non-reentrant model
 15399 ;;
 15400                           
 15401                           	psect	text44
 15402  008D4C                     __ptext44:
 15403                           	callstack 0
 15404  008D4C                     _OpenFullOrder:
 15405                           	callstack 22
 15406                           
 15407                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15408                           
 15409                           ; BSR set to: 1
 15410                           ;incstack = 0
 15411  008D4C  0E01               	movlw	1
 15412  008D4E  0101               	movlb	1	; () banked
 15413  008D50  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15414                           
 15415                           ; BSR set to: 1
 15416                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15417  008D52  0EE4               	movlw	low _controlGate_stateMachine
 15418  008D54  6E12               	movwf	sm_send_event@psm^0,c
 15419  008D56  0E01               	movlw	high _controlGate_stateMachine
 15420  008D58  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15421  008D5A  0E00               	movlw	0
 15422  008D5C  6E15               	movwf	(sm_send_event@event+1)^0,c
 15423  008D5E  0E0C               	movlw	12
 15424  008D60  6E14               	movwf	sm_send_event@event^0,c
 15425  008D62  ECD6  F040         	call	_sm_send_event	;wreg free
 15426                           
 15427                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15428  008D66  0E01               	movlw	1
 15429  008D68  0101               	movlb	1	; () banked
 15430  008D6A  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15431                           
 15432                           ; BSR set to: 1
 15433                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15434  008D6C  EC04  F041         	call	_InitSoftStart	;wreg free
 15435  008D70  0012               	return		;funcret
 15436  008D72                     __end_of_OpenFullOrder:
 15437                           	callstack 0
 15438                           
 15439 ;; *************** function _InitFullAutoTime *****************
 15440 ;; Defined at:
 15441 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15442 ;; Parameters:    Size  Location     Type
 15443 ;;		None
 15444 ;; Auto vars:     Size  Location     Type
 15445 ;;		None
 15446 ;; Return value:  Size  Location     Type
 15447 ;;                  1    wreg      void 
 15448 ;; Registers used:
 15449 ;;		wreg, status,2, status,0, prodl, prodh
 15450 ;; Tracked objects:
 15451 ;;		On entry : 3E/0
 15452 ;;		On exit  : 3F/0
 15453 ;;		Unchanged: 0/0
 15454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15459 ;;Total ram usage:        0 bytes
 15460 ;; Hardware stack levels used: 1
 15461 ;; Hardware stack levels required when called: 4
 15462 ;; This function calls:
 15463 ;;		Nothing
 15464 ;; This function is called by:
 15465 ;;		_WaitPreFlash
 15466 ;;		_actionZone_Closed
 15467 ;;		_actionZone_Opening
 15468 ;;		_actionZone_Opened
 15469 ;;		_actionZone_Closing
 15470 ;; This function uses a non-reentrant model
 15471 ;;
 15472                           
 15473                           	psect	text45
 15474  008F34                     __ptext45:
 15475                           	callstack 0
 15476  008F34                     _InitFullAutoTime:
 15477                           	callstack 24
 15478                           
 15479                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15480                           
 15481                           ;incstack = 0
 15482  008F34  0100               	movlb	0	; () banked
 15483  008F36  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15484  008F38  A4D8               	btfss	status,2,c
 15485  008F3A  0012               	return	
 15486                           
 15487                           ; BSR set to: 0
 15488                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15489  008F3C  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15490  008F3E  0D14               	mullw	20
 15491  008F40  CFF3 F1AE          	movff	prodl,_ts_system+18	;volatile
 15492  008F44  CFF4 F1AF          	movff	prodh,_ts_system+19	;volatile
 15493                           
 15494                           ; BSR set to: 0
 15495                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15496  008F48  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15497                           
 15498                           ; BSR set to: 0
 15499  008F4C  0012               	return		;funcret
 15500  008F4E                     __end_of_InitFullAutoTime:
 15501                           	callstack 0
 15502                           
 15503 ;; *************** function _OpenWalkOrder *****************
 15504 ;; Defined at:
 15505 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15506 ;; Parameters:    Size  Location     Type
 15507 ;;		None
 15508 ;; Auto vars:     Size  Location     Type
 15509 ;;  diffTime        2   25[COMRAM] int 
 15510 ;; Return value:  Size  Location     Type
 15511 ;;                  1    wreg      void 
 15512 ;; Registers used:
 15513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15514 ;; Tracked objects:
 15515 ;;		On entry : 3E/1
 15516 ;;		On exit  : 3E/0
 15517 ;;		Unchanged: 0/0
 15518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15521 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15522 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15523 ;;Total ram usage:        4 bytes
 15524 ;; Hardware stack levels used: 1
 15525 ;; Hardware stack levels required when called: 6
 15526 ;; This function calls:
 15527 ;;		_InitSoftStart
 15528 ;;		_sm_send_event
 15529 ;; This function is called by:
 15530 ;;		_actionZone_Closed
 15531 ;;		_actionZone_Opened
 15532 ;;		_actionZone_Closing
 15533 ;; This function uses a non-reentrant model
 15534 ;;
 15535                           
 15536                           	psect	text46
 15537  007ED6                     __ptext46:
 15538                           	callstack 0
 15539  007ED6                     _OpenWalkOrder:
 15540                           	callstack 22
 15541                           
 15542                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15543                           
 15544                           ; BSR set to: 0
 15545                           ;incstack = 0
 15546  007ED6  0100               	movlb	0	; () banked
 15547  007ED8  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15548  007EDA  0D14               	mullw	20
 15549  007EDC  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15550  007EE0  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15551  007EE4  0101               	movlb	1	; () banked
 15552  007EE6  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15553  007EE8  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15554  007EEA  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15555  007EEC  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15556  007EEE  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15557  007EF0  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15558                           
 15559                           ; BSR set to: 1
 15560                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15561  007EF2  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15562  007EF4  D022               	goto	l20377
 15563  007EF6  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15564  007EF8  E103               	bnz	u23630
 15565  007EFA  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15566  007EFC  A0D8               	btfss	status,0,c
 15567  007EFE  D01D               	goto	l20377
 15568  007F00                     u23630:
 15569                           
 15570                           ; BSR set to: 1
 15571                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15572  007F00  0EE4               	movlw	low _controlGate_stateMachine
 15573  007F02  6E12               	movwf	sm_send_event@psm^0,c
 15574  007F04  0E01               	movlw	high _controlGate_stateMachine
 15575  007F06  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15576  007F08  0E00               	movlw	0
 15577  007F0A  6E15               	movwf	(sm_send_event@event+1)^0,c
 15578  007F0C  0E0C               	movlw	12
 15579  007F0E  6E14               	movwf	sm_send_event@event^0,c
 15580  007F10  ECD6  F040         	call	_sm_send_event	;wreg free
 15581                           
 15582                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15583  007F14  0101               	movlb	1	; () banked
 15584  007F16  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15585  007F18  A4D8               	btfss	status,2,c
 15586  007F1A  D005               	goto	l20371
 15587                           
 15588                           ; BSR set to: 1
 15589                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15590  007F1C  C01A  F1AC         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15591  007F20  C01B  F1AD         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15592                           
 15593                           ;sm_ControlGate_MC50.c: 79:         }
 15594  007F24  D006               	goto	l20373
 15595  007F26                     l20371:
 15596                           
 15597                           ; BSR set to: 1
 15598                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15599  007F26  0E14               	movlw	20
 15600  007F28  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15601  007F2A  6FAC               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15602  007F2C  0E00               	movlw	0
 15603  007F2E  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15604  007F30  6FAD               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15605  007F32                     l20373:
 15606                           
 15607                           ; BSR set to: 1
 15608                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15609  007F32  0E02               	movlw	2
 15610  007F34  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15611                           
 15612                           ; BSR set to: 1
 15613                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15614  007F36  0E01               	movlw	1
 15615  007F38  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15616  007F3A                     l20377:
 15617                           
 15618                           ; BSR set to: 1
 15619                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15620  007F3A  0E02               	movlw	2
 15621  007F3C  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15622                           
 15623                           ; BSR set to: 1
 15624                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15625  007F3E  EC04  F041         	call	_InitSoftStart	;wreg free
 15626  007F42  0012               	return		;funcret
 15627  007F44                     __end_of_OpenWalkOrder:
 15628                           	callstack 0
 15629                           
 15630 ;; *************** function _sm_send_event *****************
 15631 ;; Defined at:
 15632 ;;		line 34 in file "sm_common_MC50.c"
 15633 ;; Parameters:    Size  Location     Type
 15634 ;;  psm             2   17[COMRAM] PTR struct .
 15635 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15636 ;;  event           2   19[COMRAM] int 
 15637 ;; Auto vars:     Size  Location     Type
 15638 ;;		None
 15639 ;; Return value:  Size  Location     Type
 15640 ;;                  1    wreg      void 
 15641 ;; Registers used:
 15642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15643 ;; Tracked objects:
 15644 ;;		On entry : 0/0
 15645 ;;		On exit  : 0/0
 15646 ;;		Unchanged: 0/0
 15647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15651 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15652 ;;Total ram usage:        6 bytes
 15653 ;; Hardware stack levels used: 1
 15654 ;; Hardware stack levels required when called: 5
 15655 ;; This function calls:
 15656 ;;		_sm_get_current_state
 15657 ;; This function is called by:
 15658 ;;		_OpenFullOrder
 15659 ;;		_WaitPreFlash
 15660 ;;		_CloseOrder
 15661 ;;		_OpenWalkOrder
 15662 ;;		_StopOrder
 15663 ;;		_sm_execute_ControlGate
 15664 ;;		_actionZone_Closed
 15665 ;;		_actionZone_Opening
 15666 ;;		_actionZone_Closing
 15667 ;;		_sm_execute_ControlLearning
 15668 ;;		_sm_execute_main
 15669 ;;		_sm_execute_menuConfiguration
 15670 ;;		_setValueToEdit
 15671 ;;		_controlSelectRemote
 15672 ;;		_controlSaveRemote
 15673 ;; This function uses a non-reentrant model
 15674 ;;
 15675                           
 15676                           	psect	text47
 15677  0081AC                     __ptext47:
 15678                           	callstack 0
 15679  0081AC                     _sm_send_event:
 15680                           	callstack 24
 15681                           
 15682                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15683                           
 15684                           ;incstack = 0
 15685  0081AC  EE20 F007          	lfsr	2,7
 15686  0081B0  5012               	movf	sm_send_event@psm^0,w,c
 15687  0081B2  26D9               	addwf	fsr2l,f,c
 15688  0081B4  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15689  0081B6  22DA               	addwfc	fsr2h,f,c
 15690  0081B8  50DE               	movf	postinc2,w,c
 15691  0081BA  10DE               	iorwf	postinc2,w,c
 15692  0081BC  B4D8               	btfsc	status,2,c
 15693  0081BE  D019               	goto	u22280
 15694  0081C0  EE20 F007          	lfsr	2,7
 15695  0081C4  5012               	movf	sm_send_event@psm^0,w,c
 15696  0081C6  26D9               	addwf	fsr2l,f,c
 15697  0081C8  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15698  0081CA  22DA               	addwfc	fsr2h,f,c
 15699  0081CC  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15700  0081D0  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15701  0081D4  EC3C  F048         	call	_sm_get_current_state	;wreg free
 15702  0081D8  EE20 F009          	lfsr	2,9
 15703  0081DC  5012               	movf	sm_send_event@psm^0,w,c
 15704  0081DE  26D9               	addwf	fsr2l,f,c
 15705  0081E0  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15706  0081E2  22DA               	addwfc	fsr2h,f,c
 15707  0081E4  50DE               	movf	postinc2,w,c
 15708  0081E6  1810               	xorwf	?_sm_get_current_state^0,w,c
 15709  0081E8  E10E               	bnz	l3497
 15710  0081EA  50DE               	movf	postinc2,w,c
 15711  0081EC  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15712  0081EE  A4D8               	btfss	status,2,c
 15713  0081F0  0012               	return	
 15714  0081F2                     u22280:
 15715                           
 15716                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15717  0081F2  EE20 F004          	lfsr	2,4
 15718  0081F6  5012               	movf	sm_send_event@psm^0,w,c
 15719  0081F8  26D9               	addwf	fsr2l,f,c
 15720  0081FA  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15721  0081FC  22DA               	addwfc	fsr2h,f,c
 15722  0081FE  C014  FFDE         	movff	sm_send_event@event,postinc2
 15723  008202  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15724  008206                     l3497:
 15725  008206  0012               	return		;funcret
 15726  008208                     __end_of_sm_send_event:
 15727                           	callstack 0
 15728                           
 15729 ;; *************** function _sm_get_current_state *****************
 15730 ;; Defined at:
 15731 ;;		line 30 in file "sm_common_MC50.c"
 15732 ;; Parameters:    Size  Location     Type
 15733 ;;  psm             2   15[COMRAM] PTR struct .
 15734 ;;		 -> NULL(0), 
 15735 ;; Auto vars:     Size  Location     Type
 15736 ;;		None
 15737 ;; Return value:  Size  Location     Type
 15738 ;;                  2   15[COMRAM] int 
 15739 ;; Registers used:
 15740 ;;		fsr2l, fsr2h
 15741 ;; Tracked objects:
 15742 ;;		On entry : 0/0
 15743 ;;		On exit  : 0/0
 15744 ;;		Unchanged: 0/0
 15745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15749 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15750 ;;Total ram usage:        2 bytes
 15751 ;; Hardware stack levels used: 1
 15752 ;; Hardware stack levels required when called: 4
 15753 ;; This function calls:
 15754 ;;		Nothing
 15755 ;; This function is called by:
 15756 ;;		_sm_send_event
 15757 ;; This function uses a non-reentrant model
 15758 ;;
 15759                           
 15760                           	psect	text48
 15761  009078                     __ptext48:
 15762                           	callstack 0
 15763  009078                     _sm_get_current_state:
 15764                           	callstack 24
 15765                           
 15766                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15767                           
 15768                           ;incstack = 0
 15769  009078  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15770  00907C  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15771  009080  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15772  009084  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15773  009088  0012               	return		;funcret
 15774  00908A                     __end_of_sm_get_current_state:
 15775                           	callstack 0
 15776                           
 15777 ;; *************** function _InitSoftStart *****************
 15778 ;; Defined at:
 15779 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15780 ;; Parameters:    Size  Location     Type
 15781 ;;		None
 15782 ;; Auto vars:     Size  Location     Type
 15783 ;;		None
 15784 ;; Return value:  Size  Location     Type
 15785 ;;                  1    wreg      void 
 15786 ;; Registers used:
 15787 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15788 ;; Tracked objects:
 15789 ;;		On entry : 3F/1
 15790 ;;		On exit  : 3E/0
 15791 ;;		Unchanged: 0/0
 15792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15795 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15796 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15797 ;;Total ram usage:        1 bytes
 15798 ;; Hardware stack levels used: 1
 15799 ;; Hardware stack levels required when called: 5
 15800 ;; This function calls:
 15801 ;;		_GetMotorPower
 15802 ;; This function is called by:
 15803 ;;		_OpenFullOrder
 15804 ;;		_CloseOrder
 15805 ;;		_OpenWalkOrder
 15806 ;; This function uses a non-reentrant model
 15807 ;;
 15808                           
 15809                           	psect	text49
 15810  008208                     __ptext49:
 15811                           	callstack 0
 15812  008208                     _InitSoftStart:
 15813                           	callstack 22
 15814                           
 15815                           ; BSR set to: 1
 15816                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15817                           
 15818                           ;incstack = 0
 15819  008208  0100               	movlb	0	; () banked
 15820  00820A  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15821  00820C  B4D8               	btfsc	status,2,c
 15822  00820E  0012               	return	
 15823                           
 15824                           ; BSR set to: 0
 15825  008210  0101               	movlb	1	; () banked
 15826  008212  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15827  008214  A4D8               	btfss	status,2,c
 15828  008216  0012               	return	
 15829                           
 15830                           ; BSR set to: 1
 15831                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15832  008218  0E00               	movlw	0
 15833  00821A  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15834  00821C  0E00               	movlw	0
 15835  00821E  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15836                           
 15837                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15838  008220  0E00               	movlw	0
 15839  008222  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15840  008224  0E00               	movlw	0
 15841  008226  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15842                           
 15843                           ; BSR set to: 1
 15844                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15845  008228  EC61  F037         	call	_GetMotorPower	;wreg free
 15846  00822C  6E14               	movwf	??_InitSoftStart^0,c
 15847  00822E  5014               	movf	??_InitSoftStart^0,w,c
 15848  008230  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15849  008232  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15850                           
 15851                           ; BSR set to: 1
 15852                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15853  008234  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15854  008236  D00A               	goto	l19485
 15855  008238  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15856  00823A  E104               	bnz	u22310
 15857  00823C  0E52               	movlw	82
 15858  00823E  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15859  008240  A0D8               	btfss	status,0,c
 15860  008242  D004               	goto	l19485
 15861  008244                     u22310:
 15862                           
 15863                           ; BSR set to: 1
 15864                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15865  008244  0E00               	movlw	0
 15866  008246  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15867  008248  0E51               	movlw	81
 15868  00824A  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15869  00824C                     l19485:
 15870                           
 15871                           ; BSR set to: 1
 15872                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15873  00824C  0E01               	movlw	1
 15874  00824E  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15875  008250  6FB2               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15876  008252  0E00               	movlw	0
 15877  008254  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15878  008256  6FB3               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15879                           
 15880                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15881  008258  0100               	movlb	0	; () banked
 15882  00825A  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15883  00825C  080A               	sublw	10
 15884  00825E  0101               	movlb	1	; () banked
 15885  008260  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15886  008262  0012               	return		;funcret
 15887  008264                     __end_of_InitSoftStart:
 15888                           	callstack 0
 15889                           
 15890 ;; *************** function _InitWalkAutoTime *****************
 15891 ;; Defined at:
 15892 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15893 ;; Parameters:    Size  Location     Type
 15894 ;;		None
 15895 ;; Auto vars:     Size  Location     Type
 15896 ;;		None
 15897 ;; Return value:  Size  Location     Type
 15898 ;;                  1    wreg      void 
 15899 ;; Registers used:
 15900 ;;		wreg, status,2, status,0, prodl, prodh
 15901 ;; Tracked objects:
 15902 ;;		On entry : 0/1
 15903 ;;		On exit  : 3F/0
 15904 ;;		Unchanged: 0/0
 15905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15910 ;;Total ram usage:        0 bytes
 15911 ;; Hardware stack levels used: 1
 15912 ;; Hardware stack levels required when called: 4
 15913 ;; This function calls:
 15914 ;;		Nothing
 15915 ;; This function is called by:
 15916 ;;		_actionZone_Closed
 15917 ;;		_actionZone_Opening
 15918 ;;		_actionZone_Opened
 15919 ;;		_actionZone_Closing
 15920 ;; This function uses a non-reentrant model
 15921 ;;
 15922                           
 15923                           	psect	text50
 15924  00903C                     __ptext50:
 15925                           	callstack 0
 15926  00903C                     _InitWalkAutoTime:
 15927                           	callstack 24
 15928                           
 15929                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 15930                           
 15931                           ;incstack = 0
 15932  00903C  0100               	movlb	0	; () banked
 15933  00903E  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 15934  009040  0D14               	mullw	20
 15935  009042  CFF3 F1AE          	movff	prodl,_ts_system+18	;volatile
 15936  009046  CFF4 F1AF          	movff	prodh,_ts_system+19	;volatile
 15937                           
 15938                           ; BSR set to: 0
 15939                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 15940  00904A  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 15941                           
 15942                           ; BSR set to: 0
 15943  00904E  0012               	return		;funcret
 15944  009050                     __end_of_InitWalkAutoTime:
 15945                           	callstack 0
 15946                           
 15947 ;; *************** function _GetSecurityStateInOpening *****************
 15948 ;; Defined at:
 15949 ;;		line 738 in file "inputs_MC50.c"
 15950 ;; Parameters:    Size  Location     Type
 15951 ;;		None
 15952 ;; Auto vars:     Size  Location     Type
 15953 ;;		None
 15954 ;; Return value:  Size  Location     Type
 15955 ;;                  1    wreg      enum E10564
 15956 ;; Registers used:
 15957 ;;		wreg, status,2, status,0, cstack
 15958 ;; Tracked objects:
 15959 ;;		On entry : 0/0
 15960 ;;		On exit  : 3E/0
 15961 ;;		Unchanged: 0/0
 15962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15967 ;;Total ram usage:        0 bytes
 15968 ;; Hardware stack levels used: 1
 15969 ;; Hardware stack levels required when called: 5
 15970 ;; This function calls:
 15971 ;;		_SetSegmentValueIntermitent
 15972 ;; This function is called by:
 15973 ;;		_actionZone_Closed
 15974 ;;		_actionZone_Opening
 15975 ;; This function uses a non-reentrant model
 15976 ;;
 15977                           
 15978                           	psect	text51
 15979  007254                     __ptext51:
 15980                           	callstack 0
 15981  007254                     _GetSecurityStateInOpening:
 15982                           	callstack 23
 15983                           
 15984                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 15985                           
 15986                           ; BSR set to: 0
 15987                           ;incstack = 0
 15988  007254  0100               	movlb	0	; () banked
 15989  007256  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15990  007258  A4D8               	btfss	status,2,c
 15991  00725A  D01B               	goto	l20047
 15992                           
 15993                           ; BSR set to: 0
 15994  00725C  0101               	movlb	1	; () banked
 15995  00725E  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15996  007260  A4D8               	btfss	status,2,c
 15997  007262  D017               	goto	l20047
 15998                           
 15999                           ; BSR set to: 1
 16000  007264  0100               	movlb	0	; () banked
 16001  007266  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 16002  007268  A4D8               	btfss	status,2,c
 16003  00726A  D013               	goto	l20047
 16004                           
 16005                           ; BSR set to: 0
 16006  00726C  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 16007  00726E  A4D8               	btfss	status,2,c
 16008  007270  D010               	goto	l20047
 16009                           
 16010                           ; BSR set to: 0
 16011                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16012  007272  0E00               	movlw	0
 16013  007274  0101               	movlb	1	; () banked
 16014  007276  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16015  007278  0E04               	movlw	4
 16016  00727A  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16017                           
 16018                           ; BSR set to: 1
 16019                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 16020  00727C  0E0A               	movlw	10
 16021  00727E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16022  007280  0E00               	movlw	0
 16023  007282  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16024  007284  0E14               	movlw	20
 16025  007286  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16026  007288  0E12               	movlw	18
 16027  00728A  EC4D  F045         	call	_SetSegmentValueIntermitent
 16028  00728E                     l20041:
 16029                           
 16030                           ; BSR set to: 1
 16031                           ;inputs_MC50.c: 752:         return YES;
 16032  00728E  0E01               	movlw	1
 16033  007290  0012               	return	
 16034  007292                     l20047:
 16035  007292  0100               	movlb	0	; () banked
 16036  007294  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 16037  007296  A4D8               	btfss	status,2,c
 16038  007298  D013               	goto	l20061
 16039                           
 16040                           ; BSR set to: 0
 16041  00729A  0101               	movlb	1	; () banked
 16042  00729C  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 16043  00729E  A4D8               	btfss	status,2,c
 16044  0072A0  D00F               	goto	l20061
 16045                           
 16046                           ; BSR set to: 1
 16047                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16048  0072A2  0E00               	movlw	0
 16049  0072A4  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16050  0072A6  0E04               	movlw	4
 16051  0072A8  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16052                           
 16053                           ; BSR set to: 1
 16054                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 16055  0072AA  0E15               	movlw	21
 16056  0072AC  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16057  0072AE  0E00               	movlw	0
 16058  0072B0  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16059  0072B2  0E14               	movlw	20
 16060  0072B4  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16061  0072B6  0E05               	movlw	5
 16062  0072B8  EC4D  F045         	call	_SetSegmentValueIntermitent
 16063                           
 16064                           ; BSR set to: 1
 16065                           ;inputs_MC50.c: 760:         return ST;
 16066  0072BC  0E02               	movlw	2
 16067  0072BE  0012               	return	
 16068  0072C0                     l20061:
 16069  0072C0  0100               	movlb	0	; () banked
 16070  0072C2  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 16071  0072C4  A4D8               	btfss	status,2,c
 16072  0072C6  D017               	goto	l20077
 16073                           
 16074                           ; BSR set to: 0
 16075  0072C8  0101               	movlb	1	; () banked
 16076  0072CA  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 16077  0072CC  A4D8               	btfss	status,2,c
 16078  0072CE  D013               	goto	l20077
 16079                           
 16080                           ; BSR set to: 1
 16081  0072D0  0100               	movlb	0	; () banked
 16082  0072D2  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 16083  0072D4  A4D8               	btfss	status,2,c
 16084  0072D6  D00F               	goto	l20077
 16085                           
 16086                           ; BSR set to: 0
 16087                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16088  0072D8  0E00               	movlw	0
 16089  0072DA  0101               	movlb	1	; () banked
 16090  0072DC  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16091  0072DE  0E04               	movlw	4
 16092  0072E0  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16093                           
 16094                           ; BSR set to: 1
 16095                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 16096  0072E2  0E0E               	movlw	14
 16097  0072E4  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16098  0072E6  0E00               	movlw	0
 16099  0072E8  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16100  0072EA  0E14               	movlw	20
 16101  0072EC  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16102  0072EE  0E12               	movlw	18
 16103  0072F0  EC4D  F045         	call	_SetSegmentValueIntermitent
 16104  0072F4  D7CC               	goto	l20041
 16105  0072F6                     l20077:
 16106                           
 16107                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 16108  0072F6  0E00               	movlw	0
 16109  0072F8  0012               	return		;funcret
 16110  0072FA                     __end_of_GetSecurityStateInOpening:
 16111                           	callstack 0
 16112                           
 16113 ;; *************** function _SetSegmentValueIntermitent *****************
 16114 ;; Defined at:
 16115 ;;		line 201 in file "outputs_MC50.c"
 16116 ;; Parameters:    Size  Location     Type
 16117 ;;  d1              1    wreg     unsigned char 
 16118 ;;  d2              1   15[COMRAM] unsigned char 
 16119 ;;  time            2   16[COMRAM] int 
 16120 ;; Auto vars:     Size  Location     Type
 16121 ;;  d1              1   18[COMRAM] unsigned char 
 16122 ;; Return value:  Size  Location     Type
 16123 ;;                  1    wreg      void 
 16124 ;; Registers used:
 16125 ;;		wreg, status,2, status,0
 16126 ;; Tracked objects:
 16127 ;;		On entry : 3E/0
 16128 ;;		On exit  : 3F/1
 16129 ;;		Unchanged: 0/0
 16130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16131 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16134 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16135 ;;Total ram usage:        4 bytes
 16136 ;; Hardware stack levels used: 1
 16137 ;; Hardware stack levels required when called: 4
 16138 ;; This function calls:
 16139 ;;		Nothing
 16140 ;; This function is called by:
 16141 ;;		_GetSecurityStateInOpening
 16142 ;;		_GetSecurityStateInClosing
 16143 ;;		_sm_execute_ControlGate
 16144 ;;		_actionZone_Opening
 16145 ;;		_actionZone_Closing
 16146 ;; This function uses a non-reentrant model
 16147 ;;
 16148                           
 16149                           	psect	text52
 16150  008A9A                     __ptext52:
 16151                           	callstack 0
 16152  008A9A                     _SetSegmentValueIntermitent:
 16153                           	callstack 24
 16154                           
 16155                           ;incstack = 0
 16156                           ;SetSegmentValueIntermitent@d1 stored from wreg
 16157  008A9A  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 16158                           
 16159                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 16160  008A9C  0101               	movlb	1	; () banked
 16161  008A9E  05EF               	decf	_main_stateMachine& (0+255),w,b
 16162  008AA0  11F0               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 16163  008AA2  B4D8               	btfsc	status,2,c
 16164  008AA4  0012               	return	
 16165                           
 16166                           ; BSR set to: 1
 16167  008AA6  51AA               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 16168  008AA8  11AB               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 16169  008AAA  A4D8               	btfss	status,2,c
 16170  008AAC  0012               	return	
 16171                           
 16172                           ; BSR set to: 1
 16173  008AAE  0E14               	movlw	20
 16174  008AB0  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16175  008AB2  0012               	return	
 16176                           
 16177                           ; BSR set to: 1
 16178                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 16179  008AB4  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 16180                           
 16181                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 16182  008AB8  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16183                           
 16184                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16185  008ABC  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16186  008AC0  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16187                           
 16188                           ; BSR set to: 1
 16189  008AC4  0012               	return		;funcret
 16190  008AC6                     __end_of_SetSegmentValueIntermitent:
 16191                           	callstack 0
 16192                           
 16193 ;; *************** function _GetOpenOrder *****************
 16194 ;; Defined at:
 16195 ;;		line 330 in file "inputs_MC50.c"
 16196 ;; Parameters:    Size  Location     Type
 16197 ;;		None
 16198 ;; Auto vars:     Size  Location     Type
 16199 ;;		None
 16200 ;; Return value:  Size  Location     Type
 16201 ;;                  1    wreg      enum E10539
 16202 ;; Registers used:
 16203 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16204 ;; Tracked objects:
 16205 ;;		On entry : 3E/1
 16206 ;;		On exit  : 0/0
 16207 ;;		Unchanged: 0/0
 16208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16213 ;;Total ram usage:        0 bytes
 16214 ;; Hardware stack levels used: 1
 16215 ;; Hardware stack levels required when called: 5
 16216 ;; This function calls:
 16217 ;;		_SetSegmentValueIntermitentMain
 16218 ;;		___lbdiv
 16219 ;; This function is called by:
 16220 ;;		_sm_execute_ControlGate
 16221 ;;		_actionZone_Closed
 16222 ;;		_actionZone_Opening
 16223 ;;		_actionZone_Opened
 16224 ;;		_actionZone_Closing
 16225 ;;		_sm_execute_ControlLearning
 16226 ;; This function uses a non-reentrant model
 16227 ;;
 16228                           
 16229                           	psect	text53
 16230  00510A                     __ptext53:
 16231                           	callstack 0
 16232  00510A                     _GetOpenOrder:
 16233                           	callstack 23
 16234                           
 16235                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16236                           
 16237                           ; BSR set to: 1
 16238                           ;incstack = 0
 16239  00510A  0101               	movlb	1	; () banked
 16240  00510C  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16241  00510E  A4D8               	btfss	status,2,c
 16242  005110  D0C0               	goto	l20017
 16243                           
 16244                           ; BSR set to: 1
 16245                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16246  005112  BFC7               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16247  005114  D019               	goto	l19909
 16248  005116  51C7               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16249  005118  E103               	bnz	u22840
 16250  00511A  05C6               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16251  00511C  A0D8               	btfss	status,0,c
 16252  00511E  D014               	goto	l19909
 16253  005120                     u22840:
 16254                           
 16255                           ; BSR set to: 1
 16256                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16257  005120  0E01               	movlw	1
 16258  005122  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16259  005124  0E00               	movlw	0
 16260  005126  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16261  005128  0E14               	movlw	20
 16262  00512A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16263  00512C  0E12               	movlw	18
 16264  00512E  EC28  F048         	call	_SetSegmentValueIntermitentMain
 16265                           
 16266                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16267  005132  0E00               	movlw	0
 16268  005134  0101               	movlb	1	; () banked
 16269  005136  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16270  005138  0E0A               	movlw	10
 16271  00513A  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16272                           
 16273                           ; BSR set to: 1
 16274                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16275  00513C  0E01               	movlw	1
 16276  00513E  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16277                           
 16278                           ; BSR set to: 1
 16279                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16280  005140  0E01               	movlw	1
 16281  005142  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16282  005144                     l19903:
 16283                           
 16284                           ;inputs_MC50.c: 341:             return NoCMD;
 16285  005144  0E00               	movlw	0
 16286  005146  0012               	return	
 16287  005148                     l19909:
 16288                           
 16289                           ; BSR set to: 1
 16290  005148  0100               	movlb	0	; () banked
 16291  00514A  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16292  00514C  B4D8               	btfsc	status,2,c
 16293  00514E  D02F               	goto	l19943
 16294                           
 16295                           ; BSR set to: 0
 16296                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16297  005150  0E35               	movlw	53
 16298  005152  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16299  005154  A4D8               	btfss	status,2,c
 16300  005156  D017               	goto	l19927
 16301                           
 16302                           ; BSR set to: 0
 16303                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16304  005158  0E00               	movlw	0
 16305  00515A  0101               	movlb	1	; () banked
 16306  00515C  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16307  00515E  0E0A               	movlw	10
 16308  005160  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16309                           
 16310                           ; BSR set to: 1
 16311                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16312  005162  0E00               	movlw	0
 16313  005164  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16314  005166  0E00               	movlw	0
 16315  005168  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16316  00516A  0E04               	movlw	4
 16317  00516C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16318  00516E  0E12               	movlw	18
 16319  005170  EC28  F048         	call	_SetSegmentValueIntermitentMain
 16320                           
 16321                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16322  005174  0E02               	movlw	2
 16323  005176  0100               	movlb	0	; () banked
 16324  005178  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16325  00517A  A4D8               	btfss	status,2,c
 16326  00517C  D002               	goto	l19921
 16327  00517E                     u22870:
 16328                           
 16329                           ; BSR set to: 0
 16330                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16331  00517E  0E01               	movlw	1
 16332  005180  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16333  005182                     l19921:
 16334                           
 16335                           ; BSR set to: 0
 16336                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16337  005182  0E03               	movlw	3
 16338  005184  0012               	return	
 16339  005186                     l19927:
 16340                           
 16341                           ; BSR set to: 0
 16342  005186  0E33               	movlw	51
 16343  005188  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16344  00518A  A4D8               	btfss	status,2,c
 16345  00518C  D7DB               	goto	l19903
 16346                           
 16347                           ; BSR set to: 0
 16348                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16349  00518E  0E00               	movlw	0
 16350  005190  0101               	movlb	1	; () banked
 16351  005192  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16352  005194  0E0A               	movlw	10
 16353  005196  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16354                           
 16355                           ; BSR set to: 1
 16356                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16357  005198  0E05               	movlw	5
 16358  00519A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16359  00519C  0E00               	movlw	0
 16360  00519E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16361  0051A0  0E04               	movlw	4
 16362  0051A2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16363  0051A4  0E12               	movlw	18
 16364  0051A6  EC28  F048         	call	_SetSegmentValueIntermitentMain
 16365  0051AA                     l19933:
 16366                           
 16367                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16368  0051AA  0E04               	movlw	4
 16369  0051AC  0012               	return	
 16370  0051AE                     l19943:
 16371                           
 16372                           ; BSR set to: 0
 16373  0051AE  0E35               	movlw	53
 16374  0051B0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16375  0051B2  A4D8               	btfss	status,2,c
 16376  0051B4  D016               	goto	l19965
 16377                           
 16378                           ; BSR set to: 0
 16379                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16380  0051B6  0E00               	movlw	0
 16381  0051B8  0101               	movlb	1	; () banked
 16382  0051BA  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16383  0051BC  0E28               	movlw	40
 16384  0051BE  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16385                           
 16386                           ; BSR set to: 1
 16387                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16388  0051C0  0E00               	movlw	0
 16389  0051C2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16390  0051C4  0E00               	movlw	0
 16391  0051C6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16392  0051C8  0E04               	movlw	4
 16393  0051CA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16394  0051CC  0E12               	movlw	18
 16395  0051CE  EC28  F048         	call	_SetSegmentValueIntermitentMain
 16396                           
 16397                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16398  0051D2  0100               	movlb	0	; () banked
 16399  0051D4  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16400  0051D6  B4D8               	btfsc	status,2,c
 16401  0051D8  D7D2               	goto	u22870
 16402  0051DA                     l19959:
 16403                           
 16404                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16405  0051DA  0E01               	movlw	1
 16406  0051DC  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16407                           
 16408                           ;inputs_MC50.c: 382:                 return TypeFull;
 16409  0051DE  0E01               	movlw	1
 16410  0051E0  0012               	return	
 16411  0051E2                     l19965:
 16412                           
 16413                           ; BSR set to: 0
 16414  0051E2  0E33               	movlw	51
 16415  0051E4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16416  0051E6  A4D8               	btfss	status,2,c
 16417  0051E8  D019               	goto	l19987
 16418                           
 16419                           ; BSR set to: 0
 16420                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16421  0051EA  0E00               	movlw	0
 16422  0051EC  0101               	movlb	1	; () banked
 16423  0051EE  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16424  0051F0  0E28               	movlw	40
 16425  0051F2  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16426                           
 16427                           ; BSR set to: 1
 16428                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16429  0051F4  0E05               	movlw	5
 16430  0051F6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16431  0051F8  0E00               	movlw	0
 16432  0051FA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16433  0051FC  0E04               	movlw	4
 16434  0051FE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16435  005200  0E12               	movlw	18
 16436  005202  EC28  F048         	call	_SetSegmentValueIntermitentMain
 16437                           
 16438                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16439  005206  0100               	movlb	0	; () banked
 16440  005208  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16441  00520A  A4D8               	btfss	status,2,c
 16442  00520C  D003               	goto	l19981
 16443                           
 16444                           ; BSR set to: 0
 16445                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16446  00520E  0E01               	movlw	1
 16447  005210  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16448  005212  D7CB               	goto	l19933
 16449  005214                     l19981:
 16450                           
 16451                           ; BSR set to: 0
 16452                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16453  005214  0E01               	movlw	1
 16454  005216  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16455                           
 16456                           ; BSR set to: 0
 16457                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16458  005218  0E02               	movlw	2
 16459  00521A  0012               	return	
 16460  00521C                     l19987:
 16461                           
 16462                           ; BSR set to: 0
 16463  00521C  0E36               	movlw	54
 16464  00521E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16465  005220  A4D8               	btfss	status,2,c
 16466  005222  D00F               	goto	l20001
 16467                           
 16468                           ; BSR set to: 0
 16469                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16470  005224  0E00               	movlw	0
 16471  005226  0101               	movlb	1	; () banked
 16472  005228  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16473  00522A  0E28               	movlw	40
 16474  00522C  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16475                           
 16476                           ; BSR set to: 1
 16477                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16478  00522E  0E13               	movlw	19
 16479  005230  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16480  005232  0E00               	movlw	0
 16481  005234  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16482  005236  0E04               	movlw	4
 16483  005238  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16484  00523A  0E10               	movlw	16
 16485  00523C  EC28  F048         	call	_SetSegmentValueIntermitentMain
 16486  005240  D7CC               	goto	l19959
 16487  005242                     l20001:
 16488                           
 16489                           ; BSR set to: 0
 16490                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16491  005242  503B               	movf	_rfCMD^0,w,c	;volatile
 16492  005244  B4D8               	btfsc	status,2,c
 16493  005246  D023               	goto	l20013
 16494                           
 16495                           ; BSR set to: 0
 16496  005248  0E06               	movlw	6
 16497  00524A  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16498  00524C  B4D8               	btfsc	status,2,c
 16499  00524E  D01F               	goto	l20013
 16500                           
 16501                           ; BSR set to: 0
 16502  005250  0E05               	movlw	5
 16503  005252  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16504  005254  B4D8               	btfsc	status,2,c
 16505  005256  D01B               	goto	l20013
 16506                           
 16507                           ; BSR set to: 0
 16508                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16509  005258  0E0A               	movlw	10
 16510  00525A  6E10               	movwf	___lbdiv@divisor^0,c
 16511  00525C  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16512  00525E  EC99  F044         	call	___lbdiv
 16513  005262  0DF6               	mullw	246
 16514  005264  50F3               	movf	243,w,c
 16515  005266  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16516  005268  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16517  00526A  0E00               	movlw	0
 16518  00526C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16519  00526E  0E04               	movlw	4
 16520  005270  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16521  005272  0E0A               	movlw	10
 16522  005274  6E10               	movwf	___lbdiv@divisor^0,c
 16523  005276  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16524  005278  EC99  F044         	call	___lbdiv
 16525  00527C  EC28  F048         	call	_SetSegmentValueIntermitentMain
 16526                           
 16527                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16528  005280  0E00               	movlw	0
 16529  005282  0101               	movlb	1	; () banked
 16530  005284  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16531  005286  0E28               	movlw	40
 16532  005288  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16533                           
 16534                           ; BSR set to: 1
 16535                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16536  00528A  0E01               	movlw	1
 16537  00528C  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16538  00528E                     l20013:
 16539                           
 16540                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16541  00528E  503B               	movf	_rfCMD^0,w,c	;volatile
 16542  005290  0012               	return	
 16543  005292                     l20017:
 16544                           
 16545                           ; BSR set to: 1
 16546                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16547  005292  503B               	movf	_rfCMD^0,w,c	;volatile
 16548  005294  B4D8               	btfsc	status,2,c
 16549  005296  D01B               	goto	l20025
 16550                           
 16551                           ; BSR set to: 1
 16552                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16553  005298  0E0A               	movlw	10
 16554  00529A  6E10               	movwf	___lbdiv@divisor^0,c
 16555  00529C  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16556  00529E  EC99  F044         	call	___lbdiv
 16557  0052A2  0DF6               	mullw	246
 16558  0052A4  50F3               	movf	243,w,c
 16559  0052A6  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16560  0052A8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16561  0052AA  0E00               	movlw	0
 16562  0052AC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16563  0052AE  0E04               	movlw	4
 16564  0052B0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16565  0052B2  0E0A               	movlw	10
 16566  0052B4  6E10               	movwf	___lbdiv@divisor^0,c
 16567  0052B6  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16568  0052B8  EC99  F044         	call	___lbdiv
 16569  0052BC  EC28  F048         	call	_SetSegmentValueIntermitentMain
 16570                           
 16571                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16572  0052C0  0E00               	movlw	0
 16573  0052C2  0101               	movlb	1	; () banked
 16574  0052C4  6FA9               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16575  0052C6  0E14               	movlw	20
 16576  0052C8  6FA8               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16577                           
 16578                           ; BSR set to: 1
 16579                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16580  0052CA  0E01               	movlw	1
 16581  0052CC  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16582  0052CE                     l20025:
 16583                           
 16584                           ; BSR set to: 1
 16585                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16586  0052CE  503B               	movf	_rfCMD^0,w,c	;volatile
 16587  0052D0  0012               	return		;funcret
 16588  0052D2                     __end_of_GetOpenOrder:
 16589                           	callstack 0
 16590                           
 16591 ;; *************** function ___lbdiv *****************
 16592 ;; Defined at:
 16593 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16594 ;; Parameters:    Size  Location     Type
 16595 ;;  dividend        1    wreg     unsigned char 
 16596 ;;  divisor         1   15[COMRAM] unsigned char 
 16597 ;; Auto vars:     Size  Location     Type
 16598 ;;  dividend        1   16[COMRAM] unsigned char 
 16599 ;;  quotient        1   18[COMRAM] unsigned char 
 16600 ;;  counter         1   17[COMRAM] unsigned char 
 16601 ;; Return value:  Size  Location     Type
 16602 ;;                  1    wreg      unsigned char 
 16603 ;; Registers used:
 16604 ;;		wreg, status,2, status,0
 16605 ;; Tracked objects:
 16606 ;;		On entry : 0/0
 16607 ;;		On exit  : 0/0
 16608 ;;		Unchanged: 0/0
 16609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16610 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16611 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16613 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16614 ;;Total ram usage:        4 bytes
 16615 ;; Hardware stack levels used: 1
 16616 ;; Hardware stack levels required when called: 4
 16617 ;; This function calls:
 16618 ;;		Nothing
 16619 ;; This function is called by:
 16620 ;;		_GetOpenOrder
 16621 ;;		_sm_execute_menuConfiguration
 16622 ;;		_controlSelectRemote
 16623 ;;		_controlSaveRemote
 16624 ;; This function uses a non-reentrant model
 16625 ;;
 16626                           
 16627                           	psect	text54
 16628  008932                     __ptext54:
 16629                           	callstack 0
 16630  008932                     ___lbdiv:
 16631                           	callstack 23
 16632                           
 16633                           ;incstack = 0
 16634                           ;___lbdiv@dividend stored from wreg
 16635  008932  6E11               	movwf	___lbdiv@dividend^0,c
 16636  008934  0E00               	movlw	0
 16637  008936  6E13               	movwf	___lbdiv@quotient^0,c
 16638  008938  5010               	movf	___lbdiv@divisor^0,w,c
 16639  00893A  B4D8               	btfsc	status,2,c
 16640  00893C  D015               	goto	l19855
 16641  00893E  0E01               	movlw	1
 16642  008940  6E12               	movwf	___lbdiv@counter^0,c
 16643  008942  D003               	goto	l19843
 16644  008944                     l19839:
 16645  008944  90D8               	bcf	status,0,c
 16646  008946  3610               	rlcf	___lbdiv@divisor^0,f,c
 16647  008948  2A12               	incf	___lbdiv@counter^0,f,c
 16648  00894A                     l19843:
 16649  00894A  AE10               	btfss	___lbdiv@divisor^0,7,c
 16650  00894C  D7FB               	goto	l19839
 16651  00894E                     u22740:
 16652  00894E  90D8               	bcf	status,0,c
 16653  008950  3613               	rlcf	___lbdiv@quotient^0,f,c
 16654  008952  5010               	movf	___lbdiv@divisor^0,w,c
 16655  008954  5C11               	subwf	___lbdiv@dividend^0,w,c
 16656  008956  A0D8               	btfss	status,0,c
 16657  008958  D003               	goto	l19851
 16658  00895A  5010               	movf	___lbdiv@divisor^0,w,c
 16659  00895C  5E11               	subwf	___lbdiv@dividend^0,f,c
 16660  00895E  8013               	bsf	___lbdiv@quotient^0,0,c
 16661  008960                     l19851:
 16662  008960  90D8               	bcf	status,0,c
 16663  008962  3210               	rrcf	___lbdiv@divisor^0,f,c
 16664  008964  2E12               	decfsz	___lbdiv@counter^0,f,c
 16665  008966  D7F3               	goto	u22740
 16666  008968                     l19855:
 16667  008968  5013               	movf	___lbdiv@quotient^0,w,c
 16668  00896A  0012               	return		;funcret
 16669  00896C                     __end_of___lbdiv:
 16670                           	callstack 0
 16671                           
 16672 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16673 ;; Defined at:
 16674 ;;		line 193 in file "outputs_MC50.c"
 16675 ;; Parameters:    Size  Location     Type
 16676 ;;  d1              1    wreg     unsigned char 
 16677 ;;  d2              1   27[COMRAM] unsigned char 
 16678 ;;  time            2   28[COMRAM] int 
 16679 ;; Auto vars:     Size  Location     Type
 16680 ;;  d1              1   30[COMRAM] unsigned char 
 16681 ;; Return value:  Size  Location     Type
 16682 ;;                  1    wreg      void 
 16683 ;; Registers used:
 16684 ;;		wreg
 16685 ;; Tracked objects:
 16686 ;;		On entry : 0/1
 16687 ;;		On exit  : 0/0
 16688 ;;		Unchanged: 0/0
 16689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16690 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16693 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16694 ;;Total ram usage:        4 bytes
 16695 ;; Hardware stack levels used: 1
 16696 ;; Hardware stack levels required when called: 4
 16697 ;; This function calls:
 16698 ;;		Nothing
 16699 ;; This function is called by:
 16700 ;;		_GetOpenOrder
 16701 ;;		_sm_execute_main
 16702 ;;		_sm_execute_menuConfiguration
 16703 ;;		_load_New_Menu
 16704 ;;		_controlSelectRemote
 16705 ;;		_controlSaveRemote
 16706 ;; This function uses a non-reentrant model
 16707 ;;
 16708                           
 16709                           	psect	text55
 16710  009050                     __ptext55:
 16711                           	callstack 0
 16712  009050                     _SetSegmentValueIntermitentMain:
 16713                           	callstack 22
 16714                           
 16715                           ;incstack = 0
 16716                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16717  009050  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16718                           
 16719                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16720  009052  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16721                           
 16722                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16723  009056  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16724                           
 16725                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16726  00905A  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16727  00905E  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16728  009062  0012               	return		;funcret
 16729  009064                     __end_of_SetSegmentValueIntermitentMain:
 16730                           	callstack 0
 16731                           
 16732 ;; *************** function _readbutton *****************
 16733 ;; Defined at:
 16734 ;;		line 471 in file "inputs_MC50.c"
 16735 ;; Parameters:    Size  Location     Type
 16736 ;;		None
 16737 ;; Auto vars:     Size  Location     Type
 16738 ;;		None
 16739 ;; Return value:  Size  Location     Type
 16740 ;;                  1    wreg      void 
 16741 ;; Registers used:
 16742 ;;		wreg, status,2, status,0
 16743 ;; Tracked objects:
 16744 ;;		On entry : 3F/1
 16745 ;;		On exit  : 3F/1
 16746 ;;		Unchanged: 0/0
 16747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16752 ;;Total ram usage:        0 bytes
 16753 ;; Hardware stack levels used: 1
 16754 ;; Hardware stack levels required when called: 4
 16755 ;; This function calls:
 16756 ;;		Nothing
 16757 ;; This function is called by:
 16758 ;;		_main
 16759 ;; This function uses a non-reentrant model
 16760 ;;
 16761                           
 16762                           	psect	text56
 16763  007FB2                     __ptext56:
 16764                           	callstack 0
 16765  007FB2                     _readbutton:
 16766                           	callstack 26
 16767                           
 16768                           ; BSR set to: 1
 16769                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16770                           
 16771                           ;incstack = 0
 16772  007FB2  508E               	movf	142,w,c	;volatile
 16773  007FB4  0B37               	andlw	55
 16774  007FB6  6F98               	movwf	readbutton@key2& (0+255),b
 16775  007FB8  F000               	nop		;# 
 16776  007FBA  F000               	nop		;# 
 16777  007FBC  F000               	nop		;# 
 16778                           
 16779                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16780  007FBE  508E               	movf	142,w,c	;volatile
 16781  007FC0  0B37               	andlw	55
 16782  007FC2  0100               	movlb	0	; () banked
 16783  007FC4  6F86               	movwf	readbutton@key1& (0+255),b
 16784                           
 16785                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16786  007FC6  5186               	movf	readbutton@key1& (0+255),w,b
 16787  007FC8  0101               	movlb	1	; () banked
 16788  007FCA  1998               	xorwf	readbutton@key2& (0+255),w,b
 16789  007FCC  A4D8               	btfss	status,2,c
 16790  007FCE  D003               	goto	l16535
 16791                           
 16792                           ; BSR set to: 1
 16793                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16794  007FD0  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16795                           
 16796                           ;inputs_MC50.c: 488:  }
 16797  007FD4  D002               	goto	l16537
 16798  007FD6                     l16535:
 16799                           
 16800                           ; BSR set to: 1
 16801                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16802  007FD6  0E37               	movlw	55
 16803  007FD8  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16804  007FDA                     l16537:
 16805                           
 16806                           ; BSR set to: 1
 16807                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16808  007FDA  0E37               	movlw	55
 16809  007FDC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16810  007FDE  B4D8               	btfsc	status,2,c
 16811  007FE0  D007               	goto	u18980
 16812                           
 16813                           ; BSR set to: 1
 16814  007FE2  504C               	movf	_button_struct^0,w,c	;volatile
 16815  007FE4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16816  007FE6  B4D8               	btfsc	status,2,c
 16817  007FE8  D007               	goto	l16545
 16818                           
 16819                           ; BSR set to: 1
 16820  007FEA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16821  007FEC  A4D8               	btfss	status,2,c
 16822  007FEE  D004               	goto	l16545
 16823  007FF0                     u18980:
 16824                           
 16825                           ; BSR set to: 1
 16826                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16827  007FF0  0E00               	movlw	0
 16828  007FF2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16829                           
 16830                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16831  007FF4  0E00               	movlw	0
 16832  007FF6  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16833  007FF8                     l16545:
 16834                           
 16835                           ; BSR set to: 1
 16836                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16837  007FF8  0E37               	movlw	55
 16838  007FFA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16839  007FFC  B4D8               	btfsc	status,2,c
 16840  007FFE  D007               	goto	l16553
 16841                           
 16842                           ; BSR set to: 1
 16843                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16844  008000  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16845                           
 16846                           ; BSR set to: 1
 16847                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16848  008004  0EFA               	movlw	250
 16849  008006  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16850  008008  D004               	goto	l16555
 16851                           
 16852                           ; BSR set to: 1
 16853                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16854  00800A  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16855  00800C  D002               	goto	l16555
 16856  00800E                     l16553:
 16857                           
 16858                           ; BSR set to: 1
 16859                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16860  00800E  0E00               	movlw	0
 16861  008010  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16862  008012                     l16555:
 16863                           
 16864                           ; BSR set to: 1
 16865                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16866  008012  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16867  008014  A4D8               	btfss	status,2,c
 16868  008016  0012               	return	
 16869                           
 16870                           ; BSR set to: 1
 16871                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16872  008018  0E37               	movlw	55
 16873  00801A  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16874                           
 16875                           ; BSR set to: 1
 16876  00801C  0012               	return		;funcret
 16877  00801E                     __end_of_readbutton:
 16878                           	callstack 0
 16879                           
 16880 ;; *************** function _read_package *****************
 16881 ;; Defined at:
 16882 ;;		line 21 in file "eusartpackage.c"
 16883 ;; Parameters:    Size  Location     Type
 16884 ;;		None
 16885 ;; Auto vars:     Size  Location     Type
 16886 ;;  package         7   23[COMRAM] struct package_t
 16887 ;; Return value:  Size  Location     Type
 16888 ;;                  7   16[COMRAM] struct package_t
 16889 ;; Registers used:
 16890 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16891 ;; Tracked objects:
 16892 ;;		On entry : 3F/0
 16893 ;;		On exit  : 3F/E
 16894 ;;		Unchanged: 0/0
 16895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16896 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16897 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16899 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16900 ;;Total ram usage:       14 bytes
 16901 ;; Hardware stack levels used: 1
 16902 ;; Hardware stack levels required when called: 5
 16903 ;; This function calls:
 16904 ;;		_EUSART1_Read
 16905 ;; This function is called by:
 16906 ;;		_main
 16907 ;; This function uses a non-reentrant model
 16908 ;;
 16909                           
 16910                           	psect	text57
 16911  00851A                     __ptext57:
 16912                           	callstack 0
 16913  00851A                     _read_package:
 16914                           	callstack 25
 16915                           
 16916                           ; BSR set to: 0
 16917                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16918                           
 16919                           ; BSR set to: 1
 16920                           ;incstack = 0
 16921  00851A  EC4F  F043         	call	_EUSART1_Read	;wreg free
 16922  00851E  0A0A               	xorlw	10
 16923  008520  B4D8               	btfsc	status,2,c
 16924  008522  D00C               	goto	l16713
 16925  008524                     u19510:
 16926                           
 16927                           ; BSR set to: 14
 16928                           ;eusartpackage.c: 25:             package.valid=0;
 16929  008524  0E00               	movlw	0
 16930  008526  6E1E               	movwf	(read_package@package+6)^0,c
 16931                           
 16932                           ; BSR set to: 14
 16933                           ;eusartpackage.c: 26:             return package;
 16934  008528  EE20  F018         	lfsr	2,read_package@package
 16935  00852C  EE00  F011         	lfsr	0,?_read_package
 16936  008530  0E06               	movlw	6
 16937  008532                     u19521:
 16938  008532  CFDB FFEB          	movff	plusw2,plusw0
 16939  008536  06E8               	decf	wreg,f,c
 16940  008538  E2FC               	bc	u19521
 16941  00853A  0012               	return	
 16942  00853C                     l16713:
 16943                           
 16944                           ; BSR set to: 14
 16945                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 16946  00853C  0E0A               	movlw	10
 16947  00853E  6E1C               	movwf	(read_package@package+4)^0,c
 16948                           
 16949                           ; BSR set to: 14
 16950                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 16951  008540  EC4F  F043         	call	_EUSART1_Read	;wreg free
 16952  008544  6E18               	movwf	read_package@package^0,c
 16953                           
 16954                           ; BSR set to: 14
 16955                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 16956  008546  EC4F  F043         	call	_EUSART1_Read	;wreg free
 16957  00854A  6E19               	movwf	(read_package@package+1)^0,c
 16958                           
 16959                           ; BSR set to: 14
 16960                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 16961  00854C  EC4F  F043         	call	_EUSART1_Read	;wreg free
 16962  008550  6E1A               	movwf	(read_package@package+2)^0,c
 16963                           
 16964                           ; BSR set to: 14
 16965                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 16966  008552  EC4F  F043         	call	_EUSART1_Read	;wreg free
 16967  008556  6E1B               	movwf	(read_package@package+3)^0,c
 16968                           
 16969                           ; BSR set to: 14
 16970                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 16971  008558  EC4F  F043         	call	_EUSART1_Read	;wreg free
 16972  00855C  0A0D               	xorlw	13
 16973  00855E  A4D8               	btfss	status,2,c
 16974  008560  D7E1               	goto	u19510
 16975                           
 16976                           ; BSR set to: 14
 16977                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 16978  008562  0E0D               	movlw	13
 16979  008564  6E1D               	movwf	(read_package@package+5)^0,c
 16980                           
 16981                           ; BSR set to: 14
 16982                           ;eusartpackage.c: 46:         package.valid=1;
 16983  008566  0E01               	movlw	1
 16984  008568  D7DE               	goto	L76
 16985  00856A                     __end_of_read_package:
 16986                           	callstack 0
 16987                           
 16988 ;; *************** function _EUSART1_Read *****************
 16989 ;; Defined at:
 16990 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 16991 ;; Parameters:    Size  Location     Type
 16992 ;;		None
 16993 ;; Auto vars:     Size  Location     Type
 16994 ;;  readValue       1   15[COMRAM] unsigned char 
 16995 ;; Return value:  Size  Location     Type
 16996 ;;                  1    wreg      unsigned char 
 16997 ;; Registers used:
 16998 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16999 ;; Tracked objects:
 17000 ;;		On entry : 31/0
 17001 ;;		On exit  : 3F/E
 17002 ;;		Unchanged: 0/0
 17003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17007 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17008 ;;Total ram usage:        1 bytes
 17009 ;; Hardware stack levels used: 1
 17010 ;; Hardware stack levels required when called: 4
 17011 ;; This function calls:
 17012 ;;		Nothing
 17013 ;; This function is called by:
 17014 ;;		_read_package
 17015 ;; This function uses a non-reentrant model
 17016 ;;
 17017                           
 17018                           	psect	text58
 17019  00869E                     __ptext58:
 17020                           	callstack 0
 17021  00869E                     _EUSART1_Read:
 17022                           	callstack 25
 17023                           
 17024                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17025                           
 17026                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17027                           
 17028                           ; BSR set to: 14
 17029                           ;incstack = 0
 17030  00869E  0100               	movlb	0	; () banked
 17031  0086A0  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 17032  0086A2  B4D8               	btfsc	status,2,c
 17033  0086A4  D7FC               	goto	__ptext58
 17034                           
 17035                           ; BSR set to: 0
 17036                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 17037  0086A6  0E74               	movlw	low _eusart1RxStatusBuffer
 17038  0086A8  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17039  0086AA  6ED9               	movwf	fsr2l,c
 17040  0086AC  6ADA               	clrf	fsr2h,c
 17041  0086AE  0E02               	movlw	high _eusart1RxStatusBuffer
 17042  0086B0  22DA               	addwfc	fsr2h,f,c
 17043  0086B2  50DF               	movf	indf2,w,c
 17044  0086B4  0101               	movlb	1	; () banked
 17045  0086B6  6F9B               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 17046                           
 17047                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 17048  0086B8  0E7C               	movlw	low _eusart1RxBuffer
 17049  0086BA  0100               	movlb	0	; () banked
 17050  0086BC  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17051  0086BE  6ED9               	movwf	fsr2l,c
 17052  0086C0  6ADA               	clrf	fsr2h,c
 17053  0086C2  0E02               	movlw	high _eusart1RxBuffer
 17054  0086C4  22DA               	addwfc	fsr2h,f,c
 17055  0086C6  50DF               	movf	indf2,w,c
 17056  0086C8  6E10               	movwf	EUSART1_Read@readValue^0,c
 17057                           
 17058                           ; BSR set to: 0
 17059  0086CA  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 17060                           
 17061                           ; BSR set to: 0
 17062                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 17063  0086CC  0E07               	movlw	7
 17064  0086CE  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 17065  0086D0  D002               	goto	l13953
 17066                           
 17067                           ; BSR set to: 0
 17068                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 17069  0086D2  0E00               	movlw	0
 17070  0086D4  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 17071  0086D6                     l13953:
 17072                           
 17073                           ; BSR set to: 0
 17074                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 17075  0086D6  010E               	movlb	14	; () banked
 17076  0086D8  9BC5               	bcf	197,5,b	;volatile
 17077                           
 17078                           ; BSR set to: 14
 17079                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 17080  0086DA  0100               	movlb	0	; () banked
 17081  0086DC  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 17082                           
 17083                           ; BSR set to: 0
 17084                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 17085  0086DE  010E               	movlb	14	; () banked
 17086  0086E0  8BC5               	bsf	197,5,b	;volatile
 17087                           
 17088                           ; BSR set to: 14
 17089                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 17090  0086E2  5010               	movf	EUSART1_Read@readValue^0,w,c
 17091                           
 17092                           ; BSR set to: 14
 17093  0086E4  0012               	return		;funcret
 17094  0086E6                     __end_of_EUSART1_Read:
 17095                           	callstack 0
 17096                           
 17097 ;; *************** function _readRFButtons *****************
 17098 ;; Defined at:
 17099 ;;		line 231 in file "inputs_MC50.c"
 17100 ;; Parameters:    Size  Location     Type
 17101 ;;		None
 17102 ;; Auto vars:     Size  Location     Type
 17103 ;;		None
 17104 ;; Return value:  Size  Location     Type
 17105 ;;                  1    wreg      void 
 17106 ;; Registers used:
 17107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17108 ;; Tracked objects:
 17109 ;;		On entry : 3F/1
 17110 ;;		On exit  : 3E/0
 17111 ;;		Unchanged: 0/0
 17112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17117 ;;Total ram usage:        0 bytes
 17118 ;; Hardware stack levels used: 1
 17119 ;; Hardware stack levels required when called: 15
 17120 ;; This function calls:
 17121 ;;		_DecryptPacket_12BIT
 17122 ;;		_keeloqDecryptPacket
 17123 ;; This function is called by:
 17124 ;;		_main
 17125 ;; This function uses a non-reentrant model
 17126 ;;
 17127                           
 17128                           	psect	text59
 17129  005942                     __ptext59:
 17130                           	callstack 0
 17131  005942                     _readRFButtons:
 17132                           	callstack 15
 17133                           
 17134                           ; BSR set to: 1
 17135                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 17136                           
 17137                           ; BSR set to: 14
 17138                           ;incstack = 0
 17139  005942  0100               	movlb	0	; () banked
 17140  005944  518B               	movf	_RFFull& (0+255),w,b	;volatile
 17141  005946  B4D8               	btfsc	status,2,c
 17142  005948  D0B9               	goto	l22675
 17143                           
 17144                           ; BSR set to: 0
 17145                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 17146  00594A  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 17147  00594C  A4D8               	btfss	status,2,c
 17148  00594E  D00B               	goto	l22621
 17149                           
 17150                           ; BSR set to: 0
 17151                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 17152  005950  0EC6               	movlw	low _BufferRF
 17153  005952  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 17154  005954  0E02               	movlw	high _BufferRF
 17155  005956  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 17156  005958  0E90               	movlw	low _classic_data
 17157  00595A  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 17158  00595C  0E02               	movlw	high _classic_data
 17159  00595E  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 17160  005960  EC9C  F027         	call	_keeloqDecryptPacket	;wreg free
 17161  005964  D00A               	goto	L77
 17162  005966                     l22621:
 17163                           
 17164                           ; BSR set to: 0
 17165                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 17166  005966  0EC6               	movlw	low _BufferRF
 17167  005968  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 17168  00596A  0E02               	movlw	high _BufferRF
 17169  00596C  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 17170  00596E  0E90               	movlw	low _classic_data
 17171  005970  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 17172  005972  0E02               	movlw	high _classic_data
 17173  005974  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 17174  005976  ECF6  F03A         	call	_DecryptPacket_12BIT	;wreg free
 17175  00597A                     L77:
 17176  00597A  6F87               	movwf	readRFButtons@keyType& (0+255),b
 17177                           
 17178                           ; BSR set to: 0
 17179                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 17180  00597C  C29C  F088         	movff	_classic_data+12,readRFButtons@key1
 17181                           
 17182                           ; BSR set to: 0
 17183                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 17184  005980  C294  F181         	movff	_classic_data+4,readRFButtons@serial
 17185  005984  C295  F182         	movff	_classic_data+5,readRFButtons@serial+1
 17186  005988  C296  F183         	movff	_classic_data+6,readRFButtons@serial+2
 17187  00598C  C297  F184         	movff	_classic_data+7,readRFButtons@serial+3
 17188                           
 17189                           ; BSR set to: 0
 17190                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17191  005990  C298  F187         	movff	_classic_data+8,readRFButtons@rollingCode
 17192  005994  C299  F188         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17193                           
 17194                           ; BSR set to: 0
 17195                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17196  005998  C29E  F199         	movff	_classic_data+14,readRFButtons@typeRemote
 17197                           
 17198                           ; BSR set to: 0
 17199                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17200  00599C  0101               	movlb	1	; () banked
 17201  00599E  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17202  0059A0  A4D8               	btfss	status,2,c
 17203  0059A2  D01E               	goto	l22643
 17204                           
 17205                           ; BSR set to: 1
 17206                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17207  0059A4  0100               	movlb	0	; () banked
 17208  0059A6  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17209  0059A8  B4D8               	btfsc	status,2,c
 17210  0059AA  D044               	goto	u27530
 17211                           
 17212                           ; BSR set to: 0
 17213  0059AC  5188               	movf	readRFButtons@key1& (0+255),w,b
 17214  0059AE  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17215  0059B0  A4D8               	btfss	status,2,c
 17216  0059B2  D040               	goto	u27530
 17217                           
 17218                           ; BSR set to: 0
 17219  0059B4  0101               	movlb	1	; () banked
 17220  0059B6  5181               	movf	readRFButtons@serial& (0+255),w,b
 17221  0059B8  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17222  0059BA  E13C               	bnz	l22655
 17223  0059BC  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17224  0059BE  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17225  0059C0  E139               	bnz	l22655
 17226  0059C2  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17227  0059C4  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17228  0059C6  E136               	bnz	l22655
 17229  0059C8  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17230  0059CA  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17231  0059CC  A4D8               	btfss	status,2,c
 17232  0059CE  D032               	goto	u27530
 17233                           
 17234                           ; BSR set to: 1
 17235  0059D0  0100               	movlb	0	; () banked
 17236  0059D2  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17237  0059D4  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17238  0059D6  A4D8               	btfss	status,2,c
 17239  0059D8  D02D               	goto	u27530
 17240  0059DA                     l1649:
 17241                           
 17242                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17243  0059DA  0E00               	movlw	0
 17244  0059DC  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17245                           
 17246                           ;inputs_MC50.c: 275:         }
 17247  0059DE  D038               	goto	l1652
 17248  0059E0                     l22643:
 17249                           
 17250                           ; BSR set to: 1
 17251  0059E0  0100               	movlb	0	; () banked
 17252  0059E2  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17253  0059E4  B4D8               	btfsc	status,2,c
 17254  0059E6  D026               	goto	u27530
 17255                           
 17256                           ; BSR set to: 0
 17257  0059E8  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17258  0059EA  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17259  0059EC  B4D8               	btfsc	status,2,c
 17260  0059EE  D00F               	goto	u27510
 17261                           
 17262                           ; BSR set to: 0
 17263  0059F0  0101               	movlb	1	; () banked
 17264  0059F2  BFB1               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17265  0059F4  D005               	goto	u27500
 17266  0059F6  51B1               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17267  0059F8  E10A               	bnz	l22651
 17268  0059FA  05B0               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17269  0059FC  B0D8               	btfsc	status,0,c
 17270  0059FE  D007               	goto	u27510
 17271  005A00                     u27500:
 17272                           
 17273                           ; BSR set to: 1
 17274  005A00  5187               	movf	readRFButtons@rollingCode& (0+255),w,b
 17275  005A02  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17276  005A04  E117               	bnz	l22655
 17277  005A06  5188               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17278  005A08  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17279  005A0A  A4D8               	btfss	status,2,c
 17280  005A0C  D013               	goto	u27530
 17281  005A0E                     u27510:
 17282  005A0E                     l22651:
 17283  005A0E  0100               	movlb	0	; () banked
 17284  005A10  5188               	movf	readRFButtons@key1& (0+255),w,b
 17285  005A12  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17286  005A14  A4D8               	btfss	status,2,c
 17287  005A16  D00E               	goto	u27530
 17288                           
 17289                           ; BSR set to: 0
 17290  005A18  0101               	movlb	1	; () banked
 17291  005A1A  5181               	movf	readRFButtons@serial& (0+255),w,b
 17292  005A1C  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17293  005A1E  E10A               	bnz	u27530
 17294  005A20  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17295  005A22  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17296  005A24  E107               	bnz	u27530
 17297  005A26  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17298  005A28  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17299  005A2A  E104               	bnz	u27530
 17300  005A2C  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17301  005A2E  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17302  005A30  B4D8               	btfsc	status,2,c
 17303  005A32  D003               	goto	l22657
 17304  005A34                     u27530:
 17305  005A34                     l22655:
 17306                           
 17307                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17308  005A34  0E00               	movlw	0
 17309  005A36  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17310  005A38  D7D0               	goto	l1649
 17311  005A3A                     l22657:
 17312                           
 17313                           ; BSR set to: 1
 17314  005A3A  BFB1               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17315  005A3C  D005               	goto	u27540
 17316  005A3E  51B1               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17317  005A40  E107               	bnz	l1652
 17318  005A42  05B0               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17319  005A44  B0D8               	btfsc	status,0,c
 17320  005A46  D004               	goto	l1652
 17321  005A48                     u27540:
 17322                           
 17323                           ; BSR set to: 1
 17324  005A48  0E02               	movlw	2
 17325  005A4A  1999               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17326  005A4C  B4D8               	btfsc	status,2,c
 17327  005A4E  D7F2               	goto	u27530
 17328  005A50                     l1652:
 17329                           
 17330                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17331  005A50  0E00               	movlw	0
 17332  005A52  0101               	movlb	1	; () banked
 17333  005A54  6FB1               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17334  005A56  0E0A               	movlw	10
 17335  005A58  6FB0               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17336                           
 17337                           ; BSR set to: 1
 17338                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17339  005A5A  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17340                           
 17341                           ;inputs_MC50.c: 292:         if
 17342  005A5E  503B               	movf	_rfCMD^0,w,c	;volatile
 17343  005A60  B4D8               	btfsc	status,2,c
 17344  005A62  D01A               	goto	u27590
 17345                           
 17346                           ; BSR set to: 1
 17347  005A64  0100               	movlb	0	; () banked
 17348  005A66  5188               	movf	readRFButtons@key1& (0+255),w,b
 17349  005A68  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17350  005A6A  A4D8               	btfss	status,2,c
 17351  005A6C  D015               	goto	u27590
 17352                           
 17353                           ; BSR set to: 0
 17354  005A6E  0101               	movlb	1	; () banked
 17355  005A70  5181               	movf	readRFButtons@serial& (0+255),w,b
 17356  005A72  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17357  005A74  E111               	bnz	l1662
 17358  005A76  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17359  005A78  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17360  005A7A  E10E               	bnz	l1662
 17361  005A7C  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17362  005A7E  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17363  005A80  E10B               	bnz	l1662
 17364  005A82  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17365  005A84  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17366  005A86  A4D8               	btfss	status,2,c
 17367  005A88  D007               	goto	u27590
 17368                           
 17369                           ; BSR set to: 1
 17370  005A8A  5187               	movf	readRFButtons@rollingCode& (0+255),w,b
 17371  005A8C  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17372  005A8E  E104               	bnz	u27590
 17373  005A90  5188               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17374  005A92  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17375  005A94  B4D8               	btfsc	status,2,c
 17376  005A96  D00E               	goto	l22673
 17377  005A98                     u27590:
 17378  005A98                     l1662:
 17379                           
 17380                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17381  005A98  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17382                           
 17383                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17384  005A9C  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17385  005AA0  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17386  005AA4  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17387  005AA8  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17388                           
 17389                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17390  005AAC  C29F  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17391                           
 17392                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17393  005AB0  0E00               	movlw	0
 17394  005AB2  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17395  005AB4                     l22673:
 17396                           
 17397                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17398  005AB4  C187  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17399  005AB8  C188  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17400  005ABC                     l22675:
 17401                           
 17402                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17403  005ABC  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17404  005ABE  A4D8               	btfss	status,2,c
 17405  005AC0  D003               	goto	l22679
 17406                           
 17407                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17408  005AC2  0E00               	movlw	0
 17409  005AC4  6E3B               	movwf	_rfCMD^0,c	;volatile
 17410                           
 17411                           ;inputs_MC50.c: 313:     }
 17412  005AC6  0012               	return	
 17413  005AC8                     l22679:
 17414  005AC8  503B               	movf	_rfCMD^0,w,c	;volatile
 17415  005ACA  B4D8               	btfsc	status,2,c
 17416  005ACC  0012               	return	
 17417                           
 17418                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17419  005ACE  0EFA               	movlw	250
 17420  005AD0  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17421  005AD2  0012               	return	
 17422                           
 17423                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17424  005AD4  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17425  005AD6  0012               	return		;funcret
 17426  005AD8                     __end_of_readRFButtons:
 17427                           	callstack 0
 17428                           
 17429 ;; *************** function _keeloqDecryptPacket *****************
 17430 ;; Defined at:
 17431 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17432 ;; Parameters:    Size  Location     Type
 17433 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17434 ;;		 -> BufferRF(9), 
 17435 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17436 ;;		 -> classic_data(16), 
 17437 ;; Auto vars:     Size  Location     Type
 17438 ;;  commandType     1   17[BANK0 ] enum E10539
 17439 ;;  hop_error       1   16[BANK0 ] enum E10730
 17440 ;; Return value:  Size  Location     Type
 17441 ;;                  1    wreg      enum E10539
 17442 ;; Registers used:
 17443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17444 ;; Tracked objects:
 17445 ;;		On entry : 3F/0
 17446 ;;		On exit  : 3F/0
 17447 ;;		Unchanged: 0/0
 17448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17449 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17450 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17451 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17452 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17453 ;;Total ram usage:       10 bytes
 17454 ;; Hardware stack levels used: 1
 17455 ;; Hardware stack levels required when called: 14
 17456 ;; This function calls:
 17457 ;;		_DecCHK
 17458 ;;		_HopCHK
 17459 ;;		_keeloq_classic_decrypt_packet
 17460 ;;		_memcpy
 17461 ;;		_validateRemoteSerialNumber
 17462 ;;		_verifyProgramingMode
 17463 ;; This function is called by:
 17464 ;;		_readRFButtons
 17465 ;; This function uses a non-reentrant model
 17466 ;;
 17467                           
 17468                           	psect	text60
 17469  004F38                     __ptext60:
 17470                           	callstack 0
 17471  004F38                     _keeloqDecryptPacket:
 17472                           	callstack 15
 17473                           
 17474                           ; BSR set to: 0
 17475                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17476                           
 17477                           ;incstack = 0
 17478  004F38  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17479  004F3C  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17480  004F40  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17481  004F44  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17482  004F48  0E00               	movlw	0
 17483  004F4A  6E15               	movwf	(memcpy@n+1)^0,c
 17484  004F4C  0E08               	movlw	8
 17485  004F4E  6E14               	movwf	memcpy@n^0,c
 17486  004F50  ECB8  F043         	call	_memcpy	;wreg free
 17487                           
 17488                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17489  004F54  0E08               	movlw	8
 17490  004F56  0100               	movlb	0	; () banked
 17491  004F58  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17492  004F5A  6E10               	movwf	memcpy@d1^0,c
 17493  004F5C  0E00               	movlw	0
 17494  004F5E  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17495  004F60  6E11               	movwf	(memcpy@d1+1)^0,c
 17496  004F62  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17497  004F66  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17498  004F6A  0E00               	movlw	0
 17499  004F6C  6E15               	movwf	(memcpy@n+1)^0,c
 17500  004F6E  0E04               	movlw	4
 17501  004F70  6E14               	movwf	memcpy@n^0,c
 17502  004F72  ECB8  F043         	call	_memcpy	;wreg free
 17503                           
 17504                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17505  004F76  0100               	movlb	0	; () banked
 17506  004F78  EE20 F00C          	lfsr	2,12
 17507  004F7C  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17508  004F7E  26D9               	addwf	fsr2l,f,c
 17509  004F80  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17510  004F82  22DA               	addwfc	fsr2h,f,c
 17511  004F84  EE10 F007          	lfsr	1,7
 17512  004F88  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17513  004F8A  26E1               	addwf	fsr1l,f,c
 17514  004F8C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17515  004F8E  22E2               	addwfc	fsr1h,f,c
 17516  004F90  50E7               	movf	indf1,w,c
 17517  004F92  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17518  004F94  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17519  004F96  0B0F               	andlw	15
 17520  004F98  6EDF               	movwf	indf2,c
 17521                           
 17522                           ; BSR set to: 0
 17523                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17524  004F9A  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17525  004F9E  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17526  004FA2  ECD2  F044         	call	_verifyProgramingMode	;wreg free
 17527  004FA6  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17528                           
 17529                           ; BSR set to: 0
 17530                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17531  004FA8  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17532  004FAA  A4D8               	btfss	status,2,c
 17533  004FAC  D019               	goto	l21163
 17534                           
 17535                           ; BSR set to: 0
 17536                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17537  004FAE  EE20 F004          	lfsr	2,4
 17538  004FB2  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17539  004FB4  26D9               	addwf	fsr2l,f,c
 17540  004FB6  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17541  004FB8  22DA               	addwfc	fsr2h,f,c
 17542  004FBA  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17543  004FBE  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17544  004FC2  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17545  004FC6  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17546  004FCA  0E00               	movlw	0
 17547  004FCC  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17548  004FCE  0E0F               	movlw	15
 17549  004FD0  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17550  004FD2  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17551  004FD4  0E00               	movlw	0
 17552  004FD6  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17553  004FD8  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17554  004FDA  EC39  F02A         	call	_validateRemoteSerialNumber	;wreg free
 17555  004FDE  D004               	goto	L78
 17556  004FE0                     l21163:
 17557                           
 17558                           ; BSR set to: 0
 17559  004FE0  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17560  004FE2  A4D8               	btfss	status,2,c
 17561  004FE4  D002               	goto	l21167
 17562                           
 17563                           ; BSR set to: 0
 17564                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17565  004FE6  0E00               	movlw	0
 17566  004FE8                     L78:
 17567  004FE8  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17568  004FEA                     l21167:
 17569                           
 17570                           ; BSR set to: 0
 17571                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17572  004FEA  EE20 F004          	lfsr	2,4
 17573  004FEE  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17574  004FF0  26D9               	addwf	fsr2l,f,c
 17575  004FF2  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17576  004FF4  22DA               	addwfc	fsr2h,f,c
 17577  004FF6  0EFF               	movlw	255
 17578  004FF8  14DE               	andwf	postinc2,w,c
 17579  004FFA  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17580  004FFC  0EFF               	movlw	255
 17581  004FFE  14DE               	andwf	postinc2,w,c
 17582  005000  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17583  005002  0EFF               	movlw	255
 17584  005004  14DE               	andwf	postinc2,w,c
 17585  005006  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17586  005008  0E0F               	movlw	15
 17587  00500A  14DE               	andwf	postinc2,w,c
 17588  00500C  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17589  00500E  EE20 F004          	lfsr	2,4
 17590  005012  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17591  005014  26D9               	addwf	fsr2l,f,c
 17592  005016  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17593  005018  22DA               	addwfc	fsr2h,f,c
 17594  00501A  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17595  00501E  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17596  005022  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17597  005026  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17598                           
 17599                           ; BSR set to: 0
 17600                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17601  00502A  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17602  00502E  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17603  005032  EC8D  F041         	call	_keeloq_classic_decrypt_packet	;wreg free
 17604                           
 17605                           ; BSR set to: 0
 17606                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17607  005036  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17608  005038  A4D8               	btfss	status,2,c
 17609  00503A  D01B               	goto	l21185
 17610                           
 17611                           ; BSR set to: 0
 17612                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17613  00503C  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17614  005040  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17615  005044  ECEC  F044         	call	_DecCHK	;wreg free
 17616  005048  0900               	iorlw	0
 17617  00504A  A4D8               	btfss	status,2,c
 17618  00504C  D008               	goto	l21177
 17619                           
 17620                           ; BSR set to: 0
 17621                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17622  00504E  EE20 F00E          	lfsr	2,14
 17623  005052  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17624  005054  26D9               	addwf	fsr2l,f,c
 17625  005056  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17626  005058  22DA               	addwfc	fsr2h,f,c
 17627  00505A  0E01               	movlw	1
 17628  00505C  D007               	goto	L79
 17629  00505E                     l21177:
 17630                           
 17631                           ; BSR set to: 0
 17632                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17633  00505E  EE20 F00E          	lfsr	2,14
 17634  005062  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17635  005064  26D9               	addwf	fsr2l,f,c
 17636  005066  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17637  005068  22DA               	addwfc	fsr2h,f,c
 17638  00506A  0E00               	movlw	0
 17639  00506C                     L79:
 17640  00506C  6EDF               	movwf	indf2,c
 17641  00506E                     l21179:
 17642                           
 17643                           ; BSR set to: 0
 17644                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17645  00506E  0E00               	movlw	0
 17646  005070  0012               	return	
 17647  005072                     l21185:
 17648                           
 17649                           ; BSR set to: 0
 17650  005072  0E06               	movlw	6
 17651  005074  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17652  005076  B4D8               	btfsc	status,2,c
 17653  005078  D004               	goto	u24500
 17654                           
 17655                           ; BSR set to: 0
 17656  00507A  0E05               	movlw	5
 17657  00507C  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17658  00507E  A4D8               	btfss	status,2,c
 17659  005080  D01B               	goto	l21195
 17660  005082                     u24500:
 17661                           
 17662                           ; BSR set to: 0
 17663                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17664  005082  EE20 F004          	lfsr	2,4
 17665  005086  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17666  005088  26D9               	addwf	fsr2l,f,c
 17667  00508A  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17668  00508C  22DA               	addwfc	fsr2h,f,c
 17669  00508E  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17670  005092  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17671  005096  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17672  00509A  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17673  00509E  0E01               	movlw	1
 17674  0050A0  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17675  0050A2  0E0F               	movlw	15
 17676  0050A4  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17677  0050A6  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17678  0050A8  0E00               	movlw	0
 17679  0050AA  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17680  0050AC  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17681  0050AE  EC39  F02A         	call	_validateRemoteSerialNumber	;wreg free
 17682  0050B2  0900               	iorlw	0
 17683  0050B4  B4D8               	btfsc	status,2,c
 17684  0050B6  D7DB               	goto	l21179
 17685  0050B8                     l21195:
 17686                           
 17687                           ; BSR set to: 0
 17688                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17689  0050B8  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17690  0050BC  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17691  0050C0  ECEC  F044         	call	_DecCHK	;wreg free
 17692  0050C4  0900               	iorlw	0
 17693  0050C6  A4D8               	btfss	status,2,c
 17694  0050C8  D00D               	goto	l21211
 17695                           
 17696                           ; BSR set to: 0
 17697                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17698  0050CA  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17699  0050CC  B4D8               	btfsc	status,2,c
 17700  0050CE  D7CF               	goto	l21179
 17701                           
 17702                           ; BSR set to: 0
 17703                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17704  0050D0  EE20 F00E          	lfsr	2,14
 17705  0050D4  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17706  0050D6  26D9               	addwf	fsr2l,f,c
 17707  0050D8  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17708  0050DA  22DA               	addwfc	fsr2h,f,c
 17709  0050DC  0E01               	movlw	1
 17710  0050DE  6EDF               	movwf	indf2,c
 17711                           
 17712                           ; BSR set to: 0
 17713                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17714  0050E0  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17715  0050E2  0012               	return	
 17716  0050E4                     l21211:
 17717                           
 17718                           ; BSR set to: 0
 17719                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17720  0050E4  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17721  0050E8  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17722  0050EC  ECC8  F03B         	call	_HopCHK	;wreg free
 17723  0050F0  0100               	movlb	0	; () banked
 17724  0050F2  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17725                           
 17726                           ; BSR set to: 0
 17727                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17728  0050F4  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17729  0050F6  A4D8               	btfss	status,2,c
 17730  0050F8  D7BA               	goto	l21179
 17731                           
 17732                           ; BSR set to: 0
 17733                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17734  0050FA  EE20 F00E          	lfsr	2,14
 17735  0050FE  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17736  005100  26D9               	addwf	fsr2l,f,c
 17737  005102  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17738  005104  22DA               	addwfc	fsr2h,f,c
 17739  005106  0E00               	movlw	0
 17740  005108  D7EA               	goto	L80
 17741  00510A                     __end_of_keeloqDecryptPacket:
 17742                           	callstack 0
 17743                           
 17744 ;; *************** function _verifyProgramingMode *****************
 17745 ;; Defined at:
 17746 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17747 ;; Parameters:    Size  Location     Type
 17748 ;;  classic_data    2   15[COMRAM] PTR struct .
 17749 ;;		 -> classic_data(16), 
 17750 ;; Auto vars:     Size  Location     Type
 17751 ;;		None
 17752 ;; Return value:  Size  Location     Type
 17753 ;;                  1    wreg      enum E10539
 17754 ;; Registers used:
 17755 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17756 ;; Tracked objects:
 17757 ;;		On entry : 3F/0
 17758 ;;		On exit  : 3F/0
 17759 ;;		Unchanged: 3F/0
 17760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17763 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17764 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17765 ;;Total ram usage:        3 bytes
 17766 ;; Hardware stack levels used: 1
 17767 ;; Hardware stack levels required when called: 4
 17768 ;; This function calls:
 17769 ;;		Nothing
 17770 ;; This function is called by:
 17771 ;;		_keeloqDecryptPacket
 17772 ;; This function uses a non-reentrant model
 17773 ;;
 17774                           
 17775                           	psect	text61
 17776  0089A4                     __ptext61:
 17777                           	callstack 0
 17778  0089A4                     _verifyProgramingMode:
 17779                           	callstack 24
 17780                           
 17781                           ; BSR set to: 0
 17782                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17783                           
 17784                           ; BSR set to: 0
 17785                           ;incstack = 0
 17786  0089A4  EE20 F00C          	lfsr	2,12
 17787  0089A8  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17788  0089AA  26D9               	addwf	fsr2l,f,c
 17789  0089AC  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17790  0089AE  22DA               	addwfc	fsr2h,f,c
 17791  0089B0  0E0A               	movlw	10
 17792  0089B2  18DE               	xorwf	postinc2,w,c
 17793  0089B4  A4D8               	btfss	status,2,c
 17794  0089B6  D002               	goto	l20185
 17795                           
 17796                           ; BSR set to: 0
 17797                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17798  0089B8  0E06               	movlw	6
 17799  0089BA  0012               	return	
 17800  0089BC                     l20185:
 17801                           
 17802                           ; BSR set to: 0
 17803  0089BC  EE20 F00C          	lfsr	2,12
 17804  0089C0  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17805  0089C2  26D9               	addwf	fsr2l,f,c
 17806  0089C4  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17807  0089C6  22DA               	addwfc	fsr2h,f,c
 17808  0089C8  0E05               	movlw	5
 17809  0089CA  18DE               	xorwf	postinc2,w,c
 17810  0089CC  A4D8               	btfss	status,2,c
 17811  0089CE  D002               	goto	l20193
 17812                           
 17813                           ; BSR set to: 0
 17814                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17815  0089D0  0E05               	movlw	5
 17816  0089D2  0012               	return	
 17817  0089D4                     l20193:
 17818                           
 17819                           ; BSR set to: 0
 17820                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17821  0089D4  0E00               	movlw	0
 17822                           
 17823                           ; BSR set to: 0
 17824  0089D6  0012               	return		;funcret
 17825  0089D8                     __end_of_verifyProgramingMode:
 17826                           	callstack 0
 17827                           
 17828 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17829 ;; Defined at:
 17830 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17831 ;; Parameters:    Size  Location     Type
 17832 ;;  data            2   55[COMRAM] PTR struct .
 17833 ;;		 -> classic_data(16), 
 17834 ;; Auto vars:     Size  Location     Type
 17835 ;;		None
 17836 ;; Return value:  Size  Location     Type
 17837 ;;                  1    wreg      void 
 17838 ;; Registers used:
 17839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17840 ;; Tracked objects:
 17841 ;;		On entry : 3F/0
 17842 ;;		On exit  : 3F/0
 17843 ;;		Unchanged: 0/0
 17844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17847 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17848 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17849 ;;Total ram usage:        5 bytes
 17850 ;; Hardware stack levels used: 1
 17851 ;; Hardware stack levels required when called: 7
 17852 ;; This function calls:
 17853 ;;		_Decrypt
 17854 ;;		_NormalKeyGen
 17855 ;; This function is called by:
 17856 ;;		_keeloqDecryptPacket
 17857 ;; This function uses a non-reentrant model
 17858 ;;
 17859                           
 17860                           	psect	text62
 17861  00831A                     __ptext62:
 17862                           	callstack 0
 17863  00831A                     _keeloq_classic_decrypt_packet:
 17864                           	callstack 21
 17865                           
 17866                           ; BSR set to: 0
 17867                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17868                           
 17869                           ; BSR set to: 0
 17870                           ;incstack = 0
 17871  00831A  0E04               	movlw	4
 17872  00831C  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17873  00831E  6E26               	movwf	NormalKeyGen@serial^0,c
 17874  008320  0E00               	movlw	0
 17875  008322  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17876  008324  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17877  008326  EC2F  F033         	call	_NormalKeyGen	;wreg free
 17878                           
 17879                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17880  00832A  0E08               	movlw	8
 17881  00832C  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17882  00832E  6E1B               	movwf	Decrypt@packet^0,c
 17883  008330  0E00               	movlw	0
 17884  008332  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17885  008334  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17886  008336  EC96  F036         	call	_Decrypt	;wreg free
 17887                           
 17888                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17889  00833A  EE20 F00D          	lfsr	2,13
 17890  00833E  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17891  008340  26D9               	addwf	fsr2l,f,c
 17892  008342  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17893  008344  22DA               	addwfc	fsr2h,f,c
 17894  008346  EE10 F00A          	lfsr	1,10
 17895  00834A  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17896  00834C  26E1               	addwf	fsr1l,f,c
 17897  00834E  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17898  008350  22E2               	addwfc	fsr1h,f,c
 17899  008352  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17900  008356  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17901  00835A  0E0C               	movlw	12
 17902  00835C  0100               	movlb	0	; () banked
 17903  00835E  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17904  008360                     u23235:
 17905  008360  90D8               	bcf	status,0,c
 17906  008362  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17907  008364  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17908  008366  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17909  008368  D7FB               	goto	u23235
 17910  00836A  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17911  00836C  0B0F               	andlw	15
 17912  00836E  6EDF               	movwf	indf2,c
 17913                           
 17914                           ; BSR set to: 0
 17915  008370  0012               	return		;funcret
 17916  008372                     __end_of_keeloq_classic_decrypt_packet:
 17917                           	callstack 0
 17918                           
 17919 ;; *************** function _NormalKeyGen *****************
 17920 ;; Defined at:
 17921 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17922 ;; Parameters:    Size  Location     Type
 17923 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17924 ;;		 -> classic_data(16), 
 17925 ;; Auto vars:     Size  Location     Type
 17926 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17927 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17928 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17929 ;; Return value:  Size  Location     Type
 17930 ;;                  1    wreg      void 
 17931 ;; Registers used:
 17932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17933 ;; Tracked objects:
 17934 ;;		On entry : 3F/0
 17935 ;;		On exit  : 0/0
 17936 ;;		Unchanged: 0/0
 17937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17939 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17941 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17942 ;;Total ram usage:       18 bytes
 17943 ;; Hardware stack levels used: 1
 17944 ;; Hardware stack levels required when called: 6
 17945 ;; This function calls:
 17946 ;;		_Decrypt
 17947 ;;		_LoadManufCode
 17948 ;;		_memcpy
 17949 ;; This function is called by:
 17950 ;;		_keeloq_classic_decrypt_packet
 17951 ;; This function uses a non-reentrant model
 17952 ;;
 17953                           
 17954                           	psect	text63
 17955  00665E                     __ptext63:
 17956                           	callstack 0
 17957  00665E                     _NormalKeyGen:
 17958                           	callstack 21
 17959                           
 17960                           ; BSR set to: 0
 17961                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 17962                           
 17963                           ; BSR set to: 0
 17964                           ;incstack = 0
 17965  00665E  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17966  006660  6E10               	movwf	memcpy@d1^0,c
 17967  006662  6A11               	clrf	(memcpy@d1+1)^0,c
 17968  006664  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 17969  006668  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 17970  00666C  0E00               	movlw	0
 17971  00666E  6E15               	movwf	(memcpy@n+1)^0,c
 17972  006670  0E04               	movlw	4
 17973  006672  6E14               	movwf	memcpy@n^0,c
 17974  006674  ECB8  F043         	call	_memcpy	;wreg free
 17975                           
 17976                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 17977  006678  0E28               	movlw	low NormalKeyGen@HOPtemp
 17978  00667A  6E10               	movwf	memcpy@d1^0,c
 17979  00667C  6A11               	clrf	(memcpy@d1+1)^0,c
 17980  00667E  0E30               	movlw	low NormalKeyGen@Buffer
 17981  006680  6E12               	movwf	memcpy@s1^0,c
 17982  006682  6A13               	clrf	(memcpy@s1+1)^0,c
 17983  006684  0E00               	movlw	0
 17984  006686  6E15               	movwf	(memcpy@n+1)^0,c
 17985  006688  0E04               	movlw	4
 17986  00668A  6E14               	movwf	memcpy@n^0,c
 17987  00668C  ECB8  F043         	call	_memcpy	;wreg free
 17988                           
 17989                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 17990  006690  0ED7               	movlw	low NormalKeyGen@SEED
 17991  006692  6E10               	movwf	memcpy@d1^0,c
 17992  006694  0E02               	movlw	high NormalKeyGen@SEED
 17993  006696  6E11               	movwf	(memcpy@d1+1)^0,c
 17994  006698  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17995  00669A  6E12               	movwf	memcpy@s1^0,c
 17996  00669C  6A13               	clrf	(memcpy@s1+1)^0,c
 17997  00669E  0E00               	movlw	0
 17998  0066A0  6E15               	movwf	(memcpy@n+1)^0,c
 17999  0066A2  0E04               	movlw	4
 18000  0066A4  6E14               	movwf	memcpy@n^0,c
 18001  0066A6  ECB8  F043         	call	_memcpy	;wreg free
 18002                           
 18003                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 18004  0066AA  0E0F               	movlw	15
 18005  0066AC  0102               	movlb	2	; () banked
 18006  0066AE  17DA               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 18007                           
 18008                           ; BSR set to: 2
 18009                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 18010  0066B0  0E30               	movlw	low NormalKeyGen@Buffer
 18011  0066B2  6E10               	movwf	memcpy@d1^0,c
 18012  0066B4  6A11               	clrf	(memcpy@d1+1)^0,c
 18013  0066B6  0ED7               	movlw	low NormalKeyGen@SEED
 18014  0066B8  6E12               	movwf	memcpy@s1^0,c
 18015  0066BA  0E02               	movlw	high NormalKeyGen@SEED
 18016  0066BC  6E13               	movwf	(memcpy@s1+1)^0,c
 18017  0066BE  0E00               	movlw	0
 18018  0066C0  6E15               	movwf	(memcpy@n+1)^0,c
 18019  0066C2  0E04               	movlw	4
 18020  0066C4  6E14               	movwf	memcpy@n^0,c
 18021  0066C6  ECB8  F043         	call	_memcpy	;wreg free
 18022                           
 18023                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 18024  0066CA  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 18025                           
 18026                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 18027  0066CC  EC04  F047         	call	_LoadManufCode	;wreg free
 18028                           
 18029                           ; BSR set to: 2
 18030                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 18031  0066D0  0E30               	movlw	low NormalKeyGen@Buffer
 18032  0066D2  6E1B               	movwf	Decrypt@packet^0,c
 18033  0066D4  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18034  0066D6  EC96  F036         	call	_Decrypt	;wreg free
 18035                           
 18036                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 18037  0066DA  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18038  0066DC  6E10               	movwf	memcpy@d1^0,c
 18039  0066DE  6A11               	clrf	(memcpy@d1+1)^0,c
 18040  0066E0  0E30               	movlw	low NormalKeyGen@Buffer
 18041  0066E2  6E12               	movwf	memcpy@s1^0,c
 18042  0066E4  6A13               	clrf	(memcpy@s1+1)^0,c
 18043  0066E6  0E00               	movlw	0
 18044  0066E8  6E15               	movwf	(memcpy@n+1)^0,c
 18045  0066EA  0E04               	movlw	4
 18046  0066EC  6E14               	movwf	memcpy@n^0,c
 18047  0066EE  ECB8  F043         	call	_memcpy	;wreg free
 18048                           
 18049                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 18050  0066F2  0E30               	movlw	low NormalKeyGen@Buffer
 18051  0066F4  6E10               	movwf	memcpy@d1^0,c
 18052  0066F6  6A11               	clrf	(memcpy@d1+1)^0,c
 18053  0066F8  0ED7               	movlw	low NormalKeyGen@SEED
 18054  0066FA  6E12               	movwf	memcpy@s1^0,c
 18055  0066FC  0E02               	movlw	high NormalKeyGen@SEED
 18056  0066FE  6E13               	movwf	(memcpy@s1+1)^0,c
 18057  006700  0E00               	movlw	0
 18058  006702  6E15               	movwf	(memcpy@n+1)^0,c
 18059  006704  0E04               	movlw	4
 18060  006706  6E14               	movwf	memcpy@n^0,c
 18061  006708  ECB8  F043         	call	_memcpy	;wreg free
 18062                           
 18063                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 18064  00670C  0E60               	movlw	96
 18065  00670E  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 18066                           
 18067                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 18068  006710  EC04  F047         	call	_LoadManufCode	;wreg free
 18069                           
 18070                           ; BSR set to: 2
 18071                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 18072  006714  0E30               	movlw	low NormalKeyGen@Buffer
 18073  006716  6E1B               	movwf	Decrypt@packet^0,c
 18074  006718  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18075  00671A  EC96  F036         	call	_Decrypt	;wreg free
 18076                           
 18077                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 18078  00671E  0ED3               	movlw	low (_DKEY+4)
 18079  006720  6E10               	movwf	memcpy@d1^0,c
 18080  006722  0E02               	movlw	high (_DKEY+4)
 18081  006724  6E11               	movwf	(memcpy@d1+1)^0,c
 18082  006726  0E30               	movlw	low NormalKeyGen@Buffer
 18083  006728  6E12               	movwf	memcpy@s1^0,c
 18084  00672A  6A13               	clrf	(memcpy@s1+1)^0,c
 18085  00672C  0E00               	movlw	0
 18086  00672E  6E15               	movwf	(memcpy@n+1)^0,c
 18087  006730  0E04               	movlw	4
 18088  006732  6E14               	movwf	memcpy@n^0,c
 18089  006734  ECB8  F043         	call	_memcpy	;wreg free
 18090                           
 18091                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 18092  006738  0ECF               	movlw	low _DKEY
 18093  00673A  6E10               	movwf	memcpy@d1^0,c
 18094  00673C  0E02               	movlw	high _DKEY
 18095  00673E  6E11               	movwf	(memcpy@d1+1)^0,c
 18096  006740  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18097  006742  6E12               	movwf	memcpy@s1^0,c
 18098  006744  6A13               	clrf	(memcpy@s1+1)^0,c
 18099  006746  0E00               	movlw	0
 18100  006748  6E15               	movwf	(memcpy@n+1)^0,c
 18101  00674A  0E04               	movlw	4
 18102  00674C  6E14               	movwf	memcpy@n^0,c
 18103  00674E  ECB8  F043         	call	_memcpy	;wreg free
 18104                           
 18105                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 18106  006752  0E30               	movlw	low NormalKeyGen@Buffer
 18107  006754  6E10               	movwf	memcpy@d1^0,c
 18108  006756  6A11               	clrf	(memcpy@d1+1)^0,c
 18109  006758  0E28               	movlw	low NormalKeyGen@HOPtemp
 18110  00675A  6E12               	movwf	memcpy@s1^0,c
 18111  00675C  6A13               	clrf	(memcpy@s1+1)^0,c
 18112  00675E  0E00               	movlw	0
 18113  006760  6E15               	movwf	(memcpy@n+1)^0,c
 18114  006762  0E04               	movlw	4
 18115  006764  6E14               	movwf	memcpy@n^0,c
 18116  006766  ECB8  F043         	call	_memcpy	;wreg free
 18117  00676A  0012               	return		;funcret
 18118  00676C                     __end_of_NormalKeyGen:
 18119                           	callstack 0
 18120                           
 18121 ;; *************** function _LoadManufCode *****************
 18122 ;; Defined at:
 18123 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 18124 ;; Parameters:    Size  Location     Type
 18125 ;;		None
 18126 ;; Auto vars:     Size  Location     Type
 18127 ;;		None
 18128 ;; Return value:  Size  Location     Type
 18129 ;;                  1    wreg      void 
 18130 ;; Registers used:
 18131 ;;		wreg, status,2
 18132 ;; Tracked objects:
 18133 ;;		On entry : 0/2
 18134 ;;		On exit  : 3F/2
 18135 ;;		Unchanged: 0/0
 18136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18141 ;;Total ram usage:        0 bytes
 18142 ;; Hardware stack levels used: 1
 18143 ;; Hardware stack levels required when called: 4
 18144 ;; This function calls:
 18145 ;;		Nothing
 18146 ;; This function is called by:
 18147 ;;		_NormalKeyGen
 18148 ;; This function uses a non-reentrant model
 18149 ;;
 18150                           
 18151                           	psect	text64
 18152  008E08                     __ptext64:
 18153                           	callstack 0
 18154  008E08                     _LoadManufCode:
 18155                           	callstack 22
 18156                           
 18157                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 18158                           
 18159                           ;incstack = 0
 18160  008E08  0102               	movlb	2	; () banked
 18161  008E0A  69CF               	setf	_DKEY& (0+255),b
 18162                           
 18163                           ; BSR set to: 2
 18164                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 18165  008E0C  0ECA               	movlw	202
 18166  008E0E  6FD0               	movwf	(_DKEY+1)& (0+255),b
 18167                           
 18168                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 18169  008E10  0E76               	movlw	118
 18170  008E12  6FD1               	movwf	(_DKEY+2)& (0+255),b
 18171                           
 18172                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 18173  008E14  0E94               	movlw	148
 18174  008E16  6FD2               	movwf	(_DKEY+3)& (0+255),b
 18175                           
 18176                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 18177  008E18  0E22               	movlw	34
 18178  008E1A  6FD3               	movwf	(_DKEY+4)& (0+255),b
 18179                           
 18180                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 18181  008E1C  0E68               	movlw	104
 18182  008E1E  6FD4               	movwf	(_DKEY+5)& (0+255),b
 18183                           
 18184                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18185  008E20  0E27               	movlw	39
 18186  008E22  6FD5               	movwf	(_DKEY+6)& (0+255),b
 18187                           
 18188                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18189  008E24  0E57               	movlw	87
 18190  008E26  6FD6               	movwf	(_DKEY+7)& (0+255),b
 18191                           
 18192                           ; BSR set to: 2
 18193  008E28  0012               	return		;funcret
 18194  008E2A                     __end_of_LoadManufCode:
 18195                           	callstack 0
 18196                           
 18197 ;; *************** function _Decrypt *****************
 18198 ;; Defined at:
 18199 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18200 ;; Parameters:    Size  Location     Type
 18201 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18202 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18203 ;; Auto vars:     Size  Location     Type
 18204 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18205 ;;  aux             1   32[COMRAM] unsigned char 
 18206 ;;  p               1   31[COMRAM] char 
 18207 ;;  j               1   30[COMRAM] unsigned char 
 18208 ;;  i               1   29[COMRAM] unsigned char 
 18209 ;;  key             1   28[COMRAM] unsigned char 
 18210 ;; Return value:  Size  Location     Type
 18211 ;;                  1    wreg      void 
 18212 ;; Registers used:
 18213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18214 ;; Tracked objects:
 18215 ;;		On entry : 0/0
 18216 ;;		On exit  : 0/0
 18217 ;;		Unchanged: 0/0
 18218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18220 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18222 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18223 ;;Total ram usage:       11 bytes
 18224 ;; Hardware stack levels used: 1
 18225 ;; Hardware stack levels required when called: 5
 18226 ;; This function calls:
 18227 ;;		_memcpy
 18228 ;; This function is called by:
 18229 ;;		_NormalKeyGen
 18230 ;;		_keeloq_classic_decrypt_packet
 18231 ;; This function uses a non-reentrant model
 18232 ;;
 18233                           
 18234                           	psect	text65
 18235  006D2C                     __ptext65:
 18236                           	callstack 0
 18237  006D2C                     _Decrypt:
 18238                           	callstack 21
 18239                           
 18240                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18241                           
 18242                           ; BSR set to: 2
 18243                           ;incstack = 0
 18244  006D2C  0E22               	movlw	low Decrypt@Buffer
 18245  006D2E  6E10               	movwf	memcpy@d1^0,c
 18246  006D30  6A11               	clrf	(memcpy@d1+1)^0,c
 18247  006D32  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18248  006D36  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18249  006D3A  0E00               	movlw	0
 18250  006D3C  6E15               	movwf	(memcpy@n+1)^0,c
 18251  006D3E  0E04               	movlw	4
 18252  006D40  6E14               	movwf	memcpy@n^0,c
 18253  006D42  ECB8  F043         	call	_memcpy	;wreg free
 18254                           
 18255                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18256  006D46  0E01               	movlw	1
 18257  006D48  6E20               	movwf	Decrypt@p^0,c
 18258                           
 18259                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18260  006D4A  0E42               	movlw	66
 18261  006D4C  6E1F               	movwf	Decrypt@j^0,c
 18262  006D4E                     l19397:
 18263                           
 18264                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18265  006D4E  0ECF               	movlw	low _DKEY
 18266  006D50  2420               	addwf	Decrypt@p^0,w,c
 18267  006D52  6ED9               	movwf	fsr2l,c
 18268  006D54  6ADA               	clrf	fsr2h,c
 18269  006D56  0E02               	movlw	high _DKEY
 18270  006D58  22DA               	addwfc	fsr2h,f,c
 18271  006D5A  50DF               	movf	indf2,w,c
 18272  006D5C  6E1D               	movwf	Decrypt@key^0,c
 18273  006D5E  0620               	decf	Decrypt@p^0,f,c
 18274                           
 18275                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18276  006D60  AE20               	btfss	Decrypt@p^0,7,c
 18277  006D62  D002               	goto	l19405
 18278                           
 18279                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18280  006D64  0E08               	movlw	8
 18281  006D66  2620               	addwf	Decrypt@p^0,f,c
 18282  006D68                     l19405:
 18283                           
 18284                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18285  006D68  0E08               	movlw	8
 18286  006D6A  6E1E               	movwf	Decrypt@i^0,c
 18287  006D6C                     l1854:
 18288                           
 18289                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18290  006D6C  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18291  006D6E  D006               	goto	l1856
 18292                           
 18293                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18294  006D70  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18295  006D72  D002               	goto	l19415
 18296                           
 18297                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18298  006D74  0E3A               	movlw	58
 18299  006D76  D007               	goto	L81
 18300  006D78                     l19415:
 18301                           
 18302                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18303  006D78  0E5C               	movlw	92
 18304  006D7A  D005               	goto	L81
 18305  006D7C                     l1856:
 18306                           
 18307                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18308  006D7C  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18309  006D7E  D002               	goto	l19419
 18310                           
 18311                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18312  006D80  0E74               	movlw	116
 18313  006D82  D001               	goto	L81
 18314  006D84                     l19419:
 18315                           
 18316                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18317  006D84  0E2E               	movlw	46
 18318  006D86                     L81:
 18319  006D86  6E21               	movwf	Decrypt@aux^0,c
 18320                           
 18321                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18322  006D88  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18323                           
 18324                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18325  006D8A  3A21               	swapf	Decrypt@aux^0,f,c
 18326                           
 18327                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18328  006D8C  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18329  006D8E  D004               	goto	l19427
 18330                           
 18331                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18332  006D90  90D8               	bcf	status,0,c
 18333  006D92  3621               	rlcf	Decrypt@aux^0,f,c
 18334  006D94  90D8               	bcf	status,0,c
 18335  006D96  3621               	rlcf	Decrypt@aux^0,f,c
 18336  006D98                     l19427:
 18337                           
 18338                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18339  006D98  A022               	btfss	Decrypt@Buffer^0,0,c
 18340  006D9A  D002               	goto	l1864
 18341                           
 18342                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18343  006D9C  90D8               	bcf	status,0,c
 18344  006D9E  3621               	rlcf	Decrypt@aux^0,f,c
 18345  006DA0                     l1864:
 18346                           
 18347                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18348  006DA0  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18349  006DA2  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18350  006DA4  181D               	xorwf	Decrypt@key^0,w,c
 18351  006DA6  1A21               	xorwf	Decrypt@aux^0,f,c
 18352                           
 18353                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18354  006DA8  90D8               	bcf	status,0,c
 18355  006DAA  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18356  006DAC  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18357  006DAE  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18358                           
 18359                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18360  006DB0  90D8               	bcf	status,0,c
 18361  006DB2  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18362  006DB4  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18363  006DB6  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18364                           
 18365                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18366  006DB8  90D8               	bcf	status,0,c
 18367  006DBA  3422               	rlcf	Decrypt@Buffer^0,w,c
 18368  006DBC  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18369  006DBE  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18370                           
 18371                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18372  006DC0  90D8               	bcf	status,0,c
 18373  006DC2  3421               	rlcf	Decrypt@aux^0,w,c
 18374  006DC4  3422               	rlcf	Decrypt@Buffer^0,w,c
 18375  006DC6  6E22               	movwf	Decrypt@Buffer^0,c
 18376                           
 18377                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18378  006DC8  90D8               	bcf	status,0,c
 18379  006DCA  361D               	rlcf	Decrypt@key^0,f,c
 18380                           
 18381                           ;keeloqDecrypt_MC50.c: 189:         }
 18382  006DCC  061E               	decf	Decrypt@i^0,f,c
 18383  006DCE  501E               	movf	Decrypt@i^0,w,c
 18384  006DD0  A4D8               	btfss	status,2,c
 18385  006DD2  D7CC               	goto	l1854
 18386                           
 18387                           ;keeloqDecrypt_MC50.c: 190:     }
 18388  006DD4  061F               	decf	Decrypt@j^0,f,c
 18389  006DD6  501F               	movf	Decrypt@j^0,w,c
 18390  006DD8  A4D8               	btfss	status,2,c
 18391  006DDA  D7B9               	goto	l19397
 18392                           
 18393                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18394  006DDC  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18395  006DE0  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18396  006DE4  0E22               	movlw	low Decrypt@Buffer
 18397  006DE6  6E12               	movwf	memcpy@s1^0,c
 18398  006DE8  6A13               	clrf	(memcpy@s1+1)^0,c
 18399  006DEA  0E00               	movlw	0
 18400  006DEC  6E15               	movwf	(memcpy@n+1)^0,c
 18401  006DEE  0E04               	movlw	4
 18402  006DF0  6E14               	movwf	memcpy@n^0,c
 18403  006DF2  ECB8  F043         	call	_memcpy	;wreg free
 18404  006DF6  0012               	return		;funcret
 18405  006DF8                     __end_of_Decrypt:
 18406                           	callstack 0
 18407                           
 18408 ;; *************** function _HopCHK *****************
 18409 ;; Defined at:
 18410 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18411 ;; Parameters:    Size  Location     Type
 18412 ;;  data            2   35[COMRAM] PTR struct .
 18413 ;;		 -> classic_data(16), 
 18414 ;; Auto vars:     Size  Location     Type
 18415 ;;  hopDiff         2   37[COMRAM] short 
 18416 ;; Return value:  Size  Location     Type
 18417 ;;                  1    wreg      enum E10730
 18418 ;; Registers used:
 18419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18420 ;; Tracked objects:
 18421 ;;		On entry : 3F/0
 18422 ;;		On exit  : 3E/0
 18423 ;;		Unchanged: 0/0
 18424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18429 ;;Total ram usage:        4 bytes
 18430 ;; Hardware stack levels used: 1
 18431 ;; Hardware stack levels required when called: 6
 18432 ;; This function calls:
 18433 ;;		_ReqResync
 18434 ;;		_getHopCode
 18435 ;; This function is called by:
 18436 ;;		_keeloqDecryptPacket
 18437 ;; This function uses a non-reentrant model
 18438 ;;
 18439                           
 18440                           	psect	text66
 18441  007790                     __ptext66:
 18442                           	callstack 0
 18443  007790                     _HopCHK:
 18444                           	callstack 22
 18445                           
 18446                           ; BSR set to: 0
 18447                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18448                           
 18449                           ;incstack = 0
 18450  007790  EE20 F008          	lfsr	2,8
 18451  007794  5024               	movf	HopCHK@data^0,w,c
 18452  007796  26D9               	addwf	fsr2l,f,c
 18453  007798  5025               	movf	(HopCHK@data+1)^0,w,c
 18454  00779A  22DA               	addwfc	fsr2h,f,c
 18455  00779C  CFDE F07C          	movff	postinc2,_Hop
 18456  0077A0  CFDD F07D          	movff	postdec2,_Hop+1
 18457                           
 18458                           ; BSR set to: 0
 18459                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18460  0077A4  C024  F016         	movff	HopCHK@data,getHopCode@data
 18461  0077A8  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18462  0077AC  EC53  F030         	call	_getHopCode	;wreg free
 18463  0077B0  C016  F28C         	movff	?_getHopCode,_EHop
 18464  0077B4  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18465                           
 18466                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18467  0077B8  0101               	movlb	1	; () banked
 18468  0077BA  5197               	movf	_F2Chance& (0+255),w,b
 18469  0077BC  B4D8               	btfsc	status,2,c
 18470  0077BE  D00F               	goto	l20157
 18471                           
 18472                           ; BSR set to: 1
 18473                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18474  0077C0  0100               	movlb	0	; () banked
 18475  0077C2  517C               	movf	_Hop& (0+255),w,b
 18476  0077C4  0101               	movlb	1	; () banked
 18477  0077C6  1985               	xorwf	_NextHop& (0+255),w,b
 18478  0077C8  E10A               	bnz	l20157
 18479  0077CA  0100               	movlb	0	; () banked
 18480  0077CC  517D               	movf	(_Hop+1)& (0+255),w,b
 18481  0077CE  0101               	movlb	1	; () banked
 18482  0077D0  1986               	xorwf	(_NextHop+1)& (0+255),w,b
 18483  0077D2  A4D8               	btfss	status,2,c
 18484  0077D4  D004               	goto	l20157
 18485                           
 18486                           ; BSR set to: 1
 18487                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18488  0077D6  0E00               	movlw	0
 18489  0077D8  6F97               	movwf	_F2Chance& (0+255),b
 18490  0077DA                     l20153:
 18491                           
 18492                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18493  0077DA  0E01               	movlw	1
 18494  0077DC  0012               	return	
 18495  0077DE                     l20157:
 18496                           
 18497                           ; BSR set to: 1
 18498                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18499  0077DE  0102               	movlb	2	; () banked
 18500  0077E0  518C               	movf	_EHop& (0+255),w,b
 18501  0077E2  0100               	movlb	0	; () banked
 18502  0077E4  5D7C               	subwf	_Hop& (0+255),w,b
 18503  0077E6  6E26               	movwf	HopCHK@hopDiff^0,c
 18504  0077E8  0102               	movlb	2	; () banked
 18505  0077EA  518D               	movf	(_EHop+1)& (0+255),w,b
 18506  0077EC  0100               	movlb	0	; () banked
 18507  0077EE  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18508  0077F0  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18509                           
 18510                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18511  0077F2  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18512  0077F4  D002               	goto	l20165
 18513                           
 18514                           ; BSR set to: 0
 18515                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18516  0077F6  0E0A               	movlw	10
 18517  0077F8  0012               	return	
 18518  0077FA                     l20165:
 18519                           
 18520                           ; BSR set to: 0
 18521  0077FA  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18522  0077FC  D7EE               	goto	l20153
 18523  0077FE  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18524  007800  E104               	bnz	u23200
 18525  007802  0E11               	movlw	17
 18526  007804  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18527  007806  A0D8               	btfss	status,0,c
 18528  007808  D7E8               	goto	l20153
 18529  00780A                     u23200:
 18530                           
 18531                           ; BSR set to: 0
 18532                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18533  00780A  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18534  00780E  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18535  007812  ECFD  F047         	call	_ReqResync	;wreg free
 18536  007816  0012               	return		;funcret
 18537  007818                     __end_of_HopCHK:
 18538                           	callstack 0
 18539                           
 18540 ;; *************** function _getHopCode *****************
 18541 ;; Defined at:
 18542 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18543 ;; Parameters:    Size  Location     Type
 18544 ;;  data            2   21[COMRAM] PTR struct .
 18545 ;;		 -> classic_data(16), 
 18546 ;; Auto vars:     Size  Location     Type
 18547 ;;  tempHop         2   31[COMRAM] unsigned short 
 18548 ;;  i               1   34[COMRAM] unsigned char 
 18549 ;;  tempPos         1   33[COMRAM] char 
 18550 ;; Return value:  Size  Location     Type
 18551 ;;                  2   21[COMRAM] unsigned short 
 18552 ;; Registers used:
 18553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18554 ;; Tracked objects:
 18555 ;;		On entry : 3F/0
 18556 ;;		On exit  : 3E/0
 18557 ;;		Unchanged: 0/0
 18558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18560 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18561 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18562 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18563 ;;Total ram usage:       14 bytes
 18564 ;; Hardware stack levels used: 1
 18565 ;; Hardware stack levels required when called: 5
 18566 ;; This function calls:
 18567 ;;		_ReqResync
 18568 ;;		___wmul
 18569 ;; This function is called by:
 18570 ;;		_HopCHK
 18571 ;; This function uses a non-reentrant model
 18572 ;;
 18573                           
 18574                           	psect	text67
 18575  0060A6                     __ptext67:
 18576                           	callstack 0
 18577  0060A6                     _getHopCode:
 18578                           	callstack 22
 18579                           
 18580                           ; BSR set to: 0
 18581                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18582                           
 18583                           ;incstack = 0
 18584  0060A6  0E00               	movlw	0
 18585  0060A8  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18586  0060AA  0E00               	movlw	0
 18587  0060AC  6E20               	movwf	getHopCode@tempHop^0,c
 18588                           
 18589                           ; BSR set to: 0
 18590                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18591  0060AE  6822               	setf	getHopCode@tempPos^0,c
 18592                           
 18593                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18594  0060B0  0E00               	movlw	0
 18595  0060B2  6E23               	movwf	getHopCode@i^0,c
 18596  0060B4                     l19645:
 18597                           
 18598                           ; BSR set to: 0
 18599                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18600  0060B4  EE20 F004          	lfsr	2,4
 18601  0060B8  5016               	movf	getHopCode@data^0,w,c
 18602  0060BA  26D9               	addwf	fsr2l,f,c
 18603  0060BC  5017               	movf	(getHopCode@data+1)^0,w,c
 18604  0060BE  22DA               	addwfc	fsr2h,f,c
 18605  0060C0  5023               	movf	getHopCode@i^0,w,c
 18606  0060C2  0D06               	mullw	6
 18607  0060C4  0E00               	movlw	low _listSyncValues
 18608  0060C6  24F3               	addwf	243,w,c
 18609  0060C8  6EE1               	movwf	fsr1l,c
 18610  0060CA  0E03               	movlw	high _listSyncValues
 18611  0060CC  20F4               	addwfc	prodh,w,c
 18612  0060CE  6EE2               	movwf	fsr1h,c
 18613  0060D0  50DE               	movf	postinc2,w,c
 18614  0060D2  18E6               	xorwf	postinc1,w,c
 18615  0060D4  E118               	bnz	l19651
 18616  0060D6  50DE               	movf	postinc2,w,c
 18617  0060D8  18E6               	xorwf	postinc1,w,c
 18618  0060DA  E115               	bnz	l19651
 18619  0060DC  50DE               	movf	postinc2,w,c
 18620  0060DE  18E6               	xorwf	postinc1,w,c
 18621  0060E0  E112               	bnz	l19651
 18622  0060E2  50DE               	movf	postinc2,w,c
 18623  0060E4  18E6               	xorwf	postinc1,w,c
 18624  0060E6  A4D8               	btfss	status,2,c
 18625  0060E8  D00E               	goto	l19651
 18626                           
 18627                           ; BSR set to: 0
 18628                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18629  0060EA  5023               	movf	getHopCode@i^0,w,c
 18630  0060EC  0D06               	mullw	6
 18631  0060EE  0E04               	movlw	low (_listSyncValues+4)
 18632  0060F0  24F3               	addwf	243,w,c
 18633  0060F2  6ED9               	movwf	fsr2l,c
 18634  0060F4  0E03               	movlw	high (_listSyncValues+4)
 18635  0060F6  20F4               	addwfc	prodh,w,c
 18636  0060F8  6EDA               	movwf	fsr2h,c
 18637  0060FA  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18638  0060FE  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18639                           
 18640                           ; BSR set to: 0
 18641                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18642  006102  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18643  006106                     l19651:
 18644                           
 18645                           ; BSR set to: 0
 18646                           ;keeloqDecrypt_MC50.c: 278:     }
 18647  006106  2A23               	incf	getHopCode@i^0,f,c
 18648                           
 18649                           ; BSR set to: 0
 18650  006108  0E18               	movlw	24
 18651  00610A  6423               	cpfsgt	getHopCode@i^0,c
 18652  00610C  D7D3               	goto	l19645
 18653                           
 18654                           ; BSR set to: 0
 18655                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18656  00610E  AE22               	btfss	getHopCode@tempPos^0,7,c
 18657  006110  D050               	goto	l19671
 18658                           
 18659                           ; BSR set to: 0
 18660                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18661  006112  EE20 F004          	lfsr	2,4
 18662  006116  5016               	movf	getHopCode@data^0,w,c
 18663  006118  26D9               	addwf	fsr2l,f,c
 18664  00611A  5017               	movf	(getHopCode@data+1)^0,w,c
 18665  00611C  22DA               	addwfc	fsr2h,f,c
 18666  00611E  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18667  006122  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18668  006126  0E00               	movlw	0
 18669  006128  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18670  00612A  0E06               	movlw	6
 18671  00612C  6E12               	movwf	___wmul@multiplicand^0,c
 18672  00612E  ECB9  F046         	call	___wmul	;wreg free
 18673  006132  0E00               	movlw	low _listSyncValues
 18674  006134  2410               	addwf	?___wmul^0,w,c
 18675  006136  6EE1               	movwf	fsr1l,c
 18676  006138  0E03               	movlw	high _listSyncValues
 18677  00613A  2011               	addwfc	(?___wmul+1)^0,w,c
 18678  00613C  6EE2               	movwf	fsr1h,c
 18679  00613E  CFDE FFE6          	movff	postinc2,postinc1
 18680  006142  CFDE FFE6          	movff	postinc2,postinc1
 18681  006146  CFDE FFE6          	movff	postinc2,postinc1
 18682  00614A  CFDE FFE6          	movff	postinc2,postinc1
 18683                           
 18684                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18685  00614E  EE20 F008          	lfsr	2,8
 18686  006152  5016               	movf	getHopCode@data^0,w,c
 18687  006154  26D9               	addwf	fsr2l,f,c
 18688  006156  5017               	movf	(getHopCode@data+1)^0,w,c
 18689  006158  22DA               	addwfc	fsr2h,f,c
 18690  00615A  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18691  00615E  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18692  006162  0E00               	movlw	0
 18693  006164  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18694  006166  0E06               	movlw	6
 18695  006168  6E12               	movwf	___wmul@multiplicand^0,c
 18696  00616A  ECB9  F046         	call	___wmul	;wreg free
 18697  00616E  0E04               	movlw	low (_listSyncValues+4)
 18698  006170  2410               	addwf	?___wmul^0,w,c
 18699  006172  6EE1               	movwf	fsr1l,c
 18700  006174  0E03               	movlw	high (_listSyncValues+4)
 18701  006176  2011               	addwfc	(?___wmul+1)^0,w,c
 18702  006178  6EE2               	movwf	fsr1h,c
 18703  00617A  CFDE FFE6          	movff	postinc2,postinc1
 18704  00617E  CFDD FFE5          	movff	postdec2,postdec1
 18705                           
 18706                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18707  006182  0100               	movlb	0	; () banked
 18708  006184  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18709  006186  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18710                           
 18711                           ; BSR set to: 0
 18712                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18713  006188  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18714  00618A  E104               	bnz	u22520
 18715  00618C  0E19               	movlw	25
 18716  00618E  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18717  006190  A0D8               	btfss	status,0,c
 18718  006192  D004               	goto	l19665
 18719  006194                     u22520:
 18720                           
 18721                           ; BSR set to: 0
 18722                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18723  006194  0E00               	movlw	0
 18724  006196  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18725  006198  0E00               	movlw	0
 18726  00619A  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18727  00619C                     l19665:
 18728                           
 18729                           ; BSR set to: 0
 18730                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18731  00619C  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18732  0061A0  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18733  0061A4  ECFD  F047         	call	_ReqResync	;wreg free
 18734  0061A8  6E18               	movwf	??_getHopCode^0,c
 18735  0061AA  5018               	movf	??_getHopCode^0,w,c
 18736  0061AC  6E16               	movwf	?_getHopCode^0,c
 18737  0061AE  6A17               	clrf	(?_getHopCode+1)^0,c
 18738  0061B0  0012               	return	
 18739  0061B2                     l19671:
 18740                           
 18741                           ; BSR set to: 0
 18742                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18743  0061B2  5022               	movf	getHopCode@tempPos^0,w,c
 18744  0061B4  0D06               	mullw	6
 18745  0061B6  0E04               	movlw	low (_listSyncValues+4)
 18746  0061B8  24F3               	addwf	243,w,c
 18747  0061BA  6ED9               	movwf	fsr2l,c
 18748  0061BC  0E03               	movlw	high (_listSyncValues+4)
 18749  0061BE  20F4               	addwfc	prodh,w,c
 18750  0061C0  6EDA               	movwf	fsr2h,c
 18751  0061C2  C07C  FFDE         	movff	_Hop,postinc2
 18752  0061C6  C07D  FFDD         	movff	_Hop+1,postdec2
 18753                           
 18754                           ; BSR set to: 0
 18755                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18756  0061CA  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18757  0061CE  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18758  0061D2  0012               	return		;funcret
 18759  0061D4                     __end_of_getHopCode:
 18760                           	callstack 0
 18761                           
 18762 ;; *************** function _ReqResync *****************
 18763 ;; Defined at:
 18764 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18765 ;; Parameters:    Size  Location     Type
 18766 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18767 ;; Auto vars:     Size  Location     Type
 18768 ;;		None
 18769 ;; Return value:  Size  Location     Type
 18770 ;;                  1    wreg      enum E10730
 18771 ;; Registers used:
 18772 ;;		wreg, status,2, status,0
 18773 ;; Tracked objects:
 18774 ;;		On entry : 3F/0
 18775 ;;		On exit  : 3F/1
 18776 ;;		Unchanged: 0/0
 18777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18781 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18782 ;;Total ram usage:        2 bytes
 18783 ;; Hardware stack levels used: 1
 18784 ;; Hardware stack levels required when called: 4
 18785 ;; This function calls:
 18786 ;;		Nothing
 18787 ;; This function is called by:
 18788 ;;		_HopCHK
 18789 ;;		_getHopCode
 18790 ;; This function uses a non-reentrant model
 18791 ;;
 18792                           
 18793                           	psect	text68
 18794  008FFA                     __ptext68:
 18795                           	callstack 0
 18796  008FFA                     _ReqResync:
 18797                           	callstack 22
 18798                           
 18799                           ; BSR set to: 0
 18800                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18801                           
 18802                           ;incstack = 0
 18803  008FFA  0E01               	movlw	1
 18804  008FFC  0101               	movlb	1	; () banked
 18805  008FFE  6F97               	movwf	_F2Chance& (0+255),b
 18806                           
 18807                           ; BSR set to: 1
 18808                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18809  009000  0E01               	movlw	1
 18810  009002  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18811  009004  6F85               	movwf	_NextHop& (0+255),b
 18812  009006  0E00               	movlw	0
 18813  009008  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18814  00900A  6F86               	movwf	(_NextHop+1)& (0+255),b
 18815                           
 18816                           ; BSR set to: 1
 18817                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18818  00900C  0E09               	movlw	9
 18819                           
 18820                           ; BSR set to: 1
 18821  00900E  0012               	return		;funcret
 18822  009010                     __end_of_ReqResync:
 18823                           	callstack 0
 18824                           
 18825 ;; *************** function _DecCHK *****************
 18826 ;; Defined at:
 18827 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18828 ;; Parameters:    Size  Location     Type
 18829 ;;  data            2   15[COMRAM] PTR struct .
 18830 ;;		 -> classic_data(16), 
 18831 ;; Auto vars:     Size  Location     Type
 18832 ;;		None
 18833 ;; Return value:  Size  Location     Type
 18834 ;;                  1    wreg      _Bool 
 18835 ;; Registers used:
 18836 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18837 ;; Tracked objects:
 18838 ;;		On entry : 3F/0
 18839 ;;		On exit  : 3F/0
 18840 ;;		Unchanged: 3F/0
 18841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18845 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18846 ;;Total ram usage:        4 bytes
 18847 ;; Hardware stack levels used: 1
 18848 ;; Hardware stack levels required when called: 4
 18849 ;; This function calls:
 18850 ;;		Nothing
 18851 ;; This function is called by:
 18852 ;;		_keeloqDecryptPacket
 18853 ;; This function uses a non-reentrant model
 18854 ;;
 18855                           
 18856                           	psect	text69
 18857  0089D8                     __ptext69:
 18858                           	callstack 0
 18859  0089D8                     _DecCHK:
 18860                           	callstack 24
 18861                           
 18862                           ; BSR set to: 0
 18863                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18864                           
 18865                           ; BSR set to: 1
 18866                           ;incstack = 0
 18867  0089D8  EE20 F00D          	lfsr	2,13
 18868  0089DC  5010               	movf	DecCHK@data^0,w,c
 18869  0089DE  26D9               	addwf	fsr2l,f,c
 18870  0089E0  5011               	movf	(DecCHK@data+1)^0,w,c
 18871  0089E2  22DA               	addwfc	fsr2h,f,c
 18872  0089E4  50DF               	movf	indf2,w,c
 18873  0089E6  6E12               	movwf	??_DecCHK^0,c
 18874  0089E8  EE20 F00C          	lfsr	2,12
 18875  0089EC  5010               	movf	DecCHK@data^0,w,c
 18876  0089EE  26D9               	addwf	fsr2l,f,c
 18877  0089F0  5011               	movf	(DecCHK@data+1)^0,w,c
 18878  0089F2  22DA               	addwfc	fsr2h,f,c
 18879  0089F4  50DF               	movf	indf2,w,c
 18880  0089F6  1812               	xorwf	??_DecCHK^0,w,c
 18881  0089F8  6E13               	movwf	(??_DecCHK+1)^0,c
 18882  0089FA  0E0F               	movlw	15
 18883  0089FC  1613               	andwf	(??_DecCHK+1)^0,f,c
 18884  0089FE  B4D8               	btfsc	status,2,c
 18885  008A00  D002               	goto	l20139
 18886                           
 18887                           ; BSR set to: 0
 18888                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18889  008A02  0E00               	movlw	0
 18890  008A04  0012               	return	
 18891  008A06                     l20139:
 18892                           
 18893                           ; BSR set to: 0
 18894                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18895  008A06  0E01               	movlw	1
 18896                           
 18897                           ; BSR set to: 0
 18898  008A08  0012               	return		;funcret
 18899  008A0A                     __end_of_DecCHK:
 18900                           	callstack 0
 18901                           
 18902 ;; *************** function _DecryptPacket_12BIT *****************
 18903 ;; Defined at:
 18904 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18905 ;; Parameters:    Size  Location     Type
 18906 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18907 ;;		 -> BufferRF(9), 
 18908 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18909 ;;		 -> classic_data(16), 
 18910 ;; Auto vars:     Size  Location     Type
 18911 ;;  commandType     1   12[BANK0 ] enum E10539
 18912 ;; Return value:  Size  Location     Type
 18913 ;;                  1    wreg      enum E10539
 18914 ;; Registers used:
 18915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18916 ;; Tracked objects:
 18917 ;;		On entry : 3F/0
 18918 ;;		On exit  : 3F/0
 18919 ;;		Unchanged: 0/0
 18920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18921 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18922 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18924 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18925 ;;Total ram usage:        5 bytes
 18926 ;; Hardware stack levels used: 1
 18927 ;; Hardware stack levels required when called: 14
 18928 ;; This function calls:
 18929 ;;		_memcpy
 18930 ;;		_validateRemoteSerialNumber
 18931 ;; This function is called by:
 18932 ;;		_readRFButtons
 18933 ;; This function uses a non-reentrant model
 18934 ;;
 18935                           
 18936                           	psect	text70
 18937  0075EC                     __ptext70:
 18938                           	callstack 0
 18939  0075EC                     _DecryptPacket_12BIT:
 18940                           	callstack 15
 18941                           
 18942                           ; BSR set to: 0
 18943                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 18944                           
 18945                           ; BSR set to: 0
 18946                           ;incstack = 0
 18947  0075EC  0E04               	movlw	4
 18948  0075EE  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18949  0075F0  6E10               	movwf	memcpy@d1^0,c
 18950  0075F2  0E00               	movlw	0
 18951  0075F4  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18952  0075F6  6E11               	movwf	(memcpy@d1+1)^0,c
 18953  0075F8  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 18954  0075FC  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 18955  007600  0E00               	movlw	0
 18956  007602  6E15               	movwf	(memcpy@n+1)^0,c
 18957  007604  0E04               	movlw	4
 18958  007606  6E14               	movwf	memcpy@n^0,c
 18959  007608  ECB8  F043         	call	_memcpy	;wreg free
 18960                           
 18961                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 18962  00760C  0100               	movlb	0	; () banked
 18963  00760E  EE20 F004          	lfsr	2,4
 18964  007612  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18965  007614  26D9               	addwf	fsr2l,f,c
 18966  007616  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18967  007618  22DA               	addwfc	fsr2h,f,c
 18968  00761A  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 18969  00761E  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 18970  007622  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 18971  007626  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 18972  00762A  0E00               	movlw	0
 18973  00762C  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 18974  00762E  0E0F               	movlw	15
 18975  007630  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18976  007632  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 18977  007634  0E00               	movlw	0
 18978  007636  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18979  007638  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 18980  00763A  EC39  F02A         	call	_validateRemoteSerialNumber	;wreg free
 18981  00763E  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 18982                           
 18983                           ; BSR set to: 0
 18984                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 18985  007640  EE20 F00C          	lfsr	2,12
 18986  007644  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18987  007646  26D9               	addwf	fsr2l,f,c
 18988  007648  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18989  00764A  22DA               	addwfc	fsr2h,f,c
 18990  00764C  0E00               	movlw	0
 18991  00764E  6EDF               	movwf	indf2,c
 18992                           
 18993                           ; BSR set to: 0
 18994                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 18995  007650  EE20 F008          	lfsr	2,8
 18996  007654  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18997  007656  26D9               	addwf	fsr2l,f,c
 18998  007658  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18999  00765A  22DA               	addwfc	fsr2h,f,c
 19000  00765C  0E00               	movlw	0
 19001  00765E  6EDE               	movwf	postinc2,c
 19002  007660  0E00               	movlw	0
 19003  007662  6EDD               	movwf	postdec2,c
 19004                           
 19005                           ; BSR set to: 0
 19006                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 19007  007664  EE20 F00E          	lfsr	2,14
 19008  007668  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19009  00766A  26D9               	addwf	fsr2l,f,c
 19010  00766C  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19011  00766E  22DA               	addwfc	fsr2h,f,c
 19012  007670  0E02               	movlw	2
 19013  007672  6EDF               	movwf	indf2,c
 19014                           
 19015                           ; BSR set to: 0
 19016                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 19017  007674  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 19018                           
 19019                           ; BSR set to: 0
 19020  007676  0012               	return		;funcret
 19021  007678                     __end_of_DecryptPacket_12BIT:
 19022                           	callstack 0
 19023                           
 19024 ;; *************** function _validateRemoteSerialNumber *****************
 19025 ;; Defined at:
 19026 ;;		line 27 in file "controlMemory_MC50.c"
 19027 ;; Parameters:    Size  Location     Type
 19028 ;;  serial          4   45[COMRAM] unsigned long 
 19029 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 19030 ;;  position        2   50[COMRAM] PTR unsigned char 
 19031 ;;		 -> controlSelectRemote@pos(1), classic_data(16), 
 19032 ;; Auto vars:     Size  Location     Type
 19033 ;;  mask            4   52[COMRAM] unsigned long 
 19034 ;;  i               1   57[COMRAM] unsigned char 
 19035 ;;  j               1   56[COMRAM] unsigned char 
 19036 ;; Return value:  Size  Location     Type
 19037 ;;                  1    wreg      enum E10539
 19038 ;; Registers used:
 19039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19040 ;; Tracked objects:
 19041 ;;		On entry : 3F/0
 19042 ;;		On exit  : 3F/0
 19043 ;;		Unchanged: 0/0
 19044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19045 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19046 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19047 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19048 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19049 ;;Total ram usage:       21 bytes
 19050 ;; Hardware stack levels used: 1
 19051 ;; Hardware stack levels required when called: 13
 19052 ;; This function calls:
 19053 ;;		_i2c_readDataBlock
 19054 ;; This function is called by:
 19055 ;;		_keeloqDecryptPacket
 19056 ;;		_DecryptPacket_12BIT
 19057 ;;		_controlSelectRemote
 19058 ;; This function uses a non-reentrant model
 19059 ;;
 19060                           
 19061                           	psect	text71
 19062  005472                     __ptext71:
 19063                           	callstack 0
 19064  005472                     _validateRemoteSerialNumber:
 19065                           	callstack 14
 19066                           
 19067                           ; BSR set to: 0
 19068                           ;controlMemory_MC50.c: 29:     char j=0;
 19069                           
 19070                           ; BSR set to: 0
 19071                           ;incstack = 0
 19072  005472  0E00               	movlw	0
 19073  005474  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19074                           
 19075                           ; BSR set to: 0
 19076                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 19077  005476  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 19078  005478  A4D8               	btfss	status,2,c
 19079  00547A  D009               	goto	l1436
 19080                           
 19081                           ; BSR set to: 0
 19082                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 19083  00547C  0EFF               	movlw	255
 19084  00547E  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 19085  005480  0EFF               	movlw	255
 19086  005482  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 19087  005484  0EFF               	movlw	255
 19088  005486  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 19089  005488  0E0F               	movlw	15
 19090  00548A  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 19091                           
 19092                           ;controlMemory_MC50.c: 36:     }
 19093  00548C  D004               	goto	l19499
 19094  00548E                     l1436:
 19095                           
 19096                           ; BSR set to: 0
 19097                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 19098  00548E  6835               	setf	validateRemoteSerialNumber@mask^0,c
 19099  005490  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 19100  005492  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 19101  005494  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 19102  005496                     l19499:
 19103                           
 19104                           ; BSR set to: 0
 19105                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 19106  005496  0E00               	movlw	0
 19107  005498  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 19108  00549A  D056               	goto	l19517
 19109  00549C                     l19501:
 19110                           
 19111                           ; BSR set to: 0
 19112                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 19113  00549C  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 19114  0054A0  0E03               	movlw	3
 19115  0054A2  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 19116  0054A4  A4D8               	btfss	status,2,c
 19117  0054A6  D01C               	goto	l19507
 19118                           
 19119                           ; BSR set to: 0
 19120                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 19121  0054A8  0E00               	movlw	0
 19122  0054AA  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19123                           
 19124                           ; BSR set to: 0
 19125                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 19126  0054AC  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 19127  0054AE  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 19128  0054B0  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 19129  0054B2  90D8               	bcf	status,0,c
 19130  0054B4  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19131  0054B6  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19132  0054B8  90D8               	bcf	status,0,c
 19133  0054BA  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19134  0054BC  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19135  0054BE  0E00               	movlw	0
 19136  0054C0  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 19137  0054C2  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19138  0054C4  0E02               	movlw	2
 19139  0054C6  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19140  0054C8  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19141  0054CA  0EA0               	movlw	low _memoryTEMP
 19142  0054CC  6E24               	movwf	i2c_readDataBlock@data^0,c
 19143  0054CE  0E02               	movlw	high _memoryTEMP
 19144  0054D0  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19145  0054D2  0E00               	movlw	0
 19146  0054D4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19147  0054D6  0E10               	movlw	16
 19148  0054D8  6E26               	movwf	i2c_readDataBlock@len^0,c
 19149  0054DA  0E50               	movlw	80
 19150  0054DC  EC86  F03E         	call	_i2c_readDataBlock
 19151  0054E0                     l19507:
 19152                           
 19153                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 19154  0054E0  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 19155  0054E2  0D04               	mullw	4
 19156  0054E4  0EA0               	movlw	low _memoryTEMP
 19157  0054E6  24F3               	addwf	243,w,c
 19158  0054E8  6ED9               	movwf	fsr2l,c
 19159  0054EA  0E02               	movlw	high _memoryTEMP
 19160  0054EC  20F4               	addwfc	prodh,w,c
 19161  0054EE  6EDA               	movwf	fsr2h,c
 19162  0054F0  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 19163  0054F4  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 19164  0054F8  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 19165  0054FC  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 19166  005500  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 19167  005502  0100               	movlb	0	; () banked
 19168  005504  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 19169  005506  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 19170  005508  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 19171  00550A  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19172  00550C  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 19173  00550E  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 19174  005510  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 19175  005512  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 19176  005514  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 19177  005516  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 19178  005518  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 19179  00551A  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 19180  00551C  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 19181  00551E  E112               	bnz	l19515
 19182  005520  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 19183  005522  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 19184  005524  E10F               	bnz	l19515
 19185  005526  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 19186  005528  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 19187  00552A  E10C               	bnz	l19515
 19188  00552C  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 19189  00552E  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 19190  005530  A4D8               	btfss	status,2,c
 19191  005532  D008               	goto	l19515
 19192                           
 19193                           ; BSR set to: 0
 19194                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 19195  005534  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 19196  005538  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 19197  00553C  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 19198                           
 19199                           ; BSR set to: 0
 19200                           ;controlMemory_MC50.c: 54:             return TypeFull;
 19201  005540  0E01               	movlw	1
 19202  005542  0012               	return	
 19203  005544                     l19515:
 19204                           
 19205                           ; BSR set to: 0
 19206                           ;controlMemory_MC50.c: 57:         j++;
 19207  005544  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 19208                           
 19209                           ;controlMemory_MC50.c: 59:     }
 19210  005546  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 19211  005548                     l19517:
 19212                           
 19213                           ; BSR set to: 0
 19214  005548  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 19215  00554A  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 19216  00554C  A0D8               	btfss	status,0,c
 19217  00554E  D7A6               	goto	l19501
 19218                           
 19219                           ; BSR set to: 0
 19220                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 19221  005550  0E00               	movlw	0
 19222  005552  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 19223  005554  D056               	goto	l19537
 19224  005556                     l19521:
 19225                           
 19226                           ; BSR set to: 0
 19227                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 19228  005556  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 19229  00555A  0E03               	movlw	3
 19230  00555C  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 19231  00555E  A4D8               	btfss	status,2,c
 19232  005560  D01C               	goto	l19527
 19233                           
 19234                           ; BSR set to: 0
 19235                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 19236  005562  0E00               	movlw	0
 19237  005564  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19238                           
 19239                           ; BSR set to: 0
 19240                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 19241  005566  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 19242  005568  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 19243  00556A  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 19244  00556C  90D8               	bcf	status,0,c
 19245  00556E  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19246  005570  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19247  005572  90D8               	bcf	status,0,c
 19248  005574  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19249  005576  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19250  005578  0E00               	movlw	0
 19251  00557A  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 19252  00557C  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19253  00557E  0E05               	movlw	5
 19254  005580  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19255  005582  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19256  005584  0EA0               	movlw	low _memoryTEMP
 19257  005586  6E24               	movwf	i2c_readDataBlock@data^0,c
 19258  005588  0E02               	movlw	high _memoryTEMP
 19259  00558A  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19260  00558C  0E00               	movlw	0
 19261  00558E  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19262  005590  0E10               	movlw	16
 19263  005592  6E26               	movwf	i2c_readDataBlock@len^0,c
 19264  005594  0E50               	movlw	80
 19265  005596  EC86  F03E         	call	_i2c_readDataBlock
 19266  00559A                     l19527:
 19267                           
 19268                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 19269  00559A  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 19270  00559C  0D04               	mullw	4
 19271  00559E  0EA0               	movlw	low _memoryTEMP
 19272  0055A0  24F3               	addwf	243,w,c
 19273  0055A2  6ED9               	movwf	fsr2l,c
 19274  0055A4  0E02               	movlw	high _memoryTEMP
 19275  0055A6  20F4               	addwfc	prodh,w,c
 19276  0055A8  6EDA               	movwf	fsr2h,c
 19277  0055AA  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 19278  0055AE  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 19279  0055B2  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 19280  0055B6  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 19281  0055BA  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 19282  0055BC  0100               	movlb	0	; () banked
 19283  0055BE  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 19284  0055C0  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 19285  0055C2  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 19286  0055C4  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19287  0055C6  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 19288  0055C8  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 19289  0055CA  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 19290  0055CC  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 19291  0055CE  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 19292  0055D0  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 19293  0055D2  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 19294  0055D4  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 19295  0055D6  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 19296  0055D8  E112               	bnz	l19535
 19297  0055DA  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 19298  0055DC  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 19299  0055DE  E10F               	bnz	l19535
 19300  0055E0  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 19301  0055E2  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 19302  0055E4  E10C               	bnz	l19535
 19303  0055E6  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 19304  0055E8  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 19305  0055EA  A4D8               	btfss	status,2,c
 19306  0055EC  D008               	goto	l19535
 19307                           
 19308                           ; BSR set to: 0
 19309                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 19310  0055EE  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 19311  0055F2  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 19312  0055F6  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 19313                           
 19314                           ; BSR set to: 0
 19315                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 19316  0055FA  0E02               	movlw	2
 19317  0055FC  0012               	return	
 19318  0055FE                     l19535:
 19319                           
 19320                           ; BSR set to: 0
 19321                           ;controlMemory_MC50.c: 75:         j++;
 19322  0055FE  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 19323                           
 19324                           ;controlMemory_MC50.c: 76:     }
 19325  005600  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 19326  005602                     l19537:
 19327                           
 19328                           ; BSR set to: 0
 19329  005602  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 19330  005604  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 19331  005606  A0D8               	btfss	status,0,c
 19332  005608  D7A6               	goto	l19521
 19333                           
 19334                           ; BSR set to: 0
 19335                           ;controlMemory_MC50.c: 78:     return NoCMD;
 19336  00560A  0E00               	movlw	0
 19337                           
 19338                           ; BSR set to: 0
 19339  00560C  0012               	return		;funcret
 19340  00560E                     __end_of_validateRemoteSerialNumber:
 19341                           	callstack 0
 19342                           
 19343 ;; *************** function _readInputs *****************
 19344 ;; Defined at:
 19345 ;;		line 528 in file "inputs_MC50.c"
 19346 ;; Parameters:    Size  Location     Type
 19347 ;;		None
 19348 ;; Auto vars:     Size  Location     Type
 19349 ;;		None
 19350 ;; Return value:  Size  Location     Type
 19351 ;;                  1    wreg      void 
 19352 ;; Registers used:
 19353 ;;		wreg, status,2, status,0
 19354 ;; Tracked objects:
 19355 ;;		On entry : 3F/1
 19356 ;;		On exit  : 3E/0
 19357 ;;		Unchanged: 0/0
 19358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19363 ;;Total ram usage:        0 bytes
 19364 ;; Hardware stack levels used: 1
 19365 ;; Hardware stack levels required when called: 4
 19366 ;; This function calls:
 19367 ;;		Nothing
 19368 ;; This function is called by:
 19369 ;;		_main
 19370 ;; This function uses a non-reentrant model
 19371 ;;
 19372                           
 19373                           	psect	text72
 19374  00676C                     __ptext72:
 19375                           	callstack 0
 19376  00676C                     _readInputs:
 19377                           	callstack 26
 19378                           
 19379                           ; BSR set to: 1
 19380                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 19381                           
 19382                           ; BSR set to: 0
 19383                           ;incstack = 0
 19384  00676C  0100               	movlb	0	; () banked
 19385  00676E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19386  006770  A4D8               	btfss	status,2,c
 19387  006772  D006               	goto	l16563
 19388                           
 19389                           ; BSR set to: 0
 19390  006774  0E00               	movlw	0
 19391  006776  B28D               	btfsc	141,1,c	;volatile
 19392  006778  0E01               	movlw	1
 19393  00677A  0101               	movlb	1	; () banked
 19394  00677C  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19395  00677E  D005               	goto	l16565
 19396  006780                     l16563:
 19397                           
 19398                           ; BSR set to: 0
 19399  006780  0E00               	movlw	0
 19400  006782  B48D               	btfsc	141,2,c	;volatile
 19401  006784  0E01               	movlw	1
 19402  006786  0101               	movlb	1	; () banked
 19403  006788  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19404  00678A                     l16565:
 19405                           
 19406                           ; BSR set to: 1
 19407                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 19408  00678A  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 19409  00678C  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 19410  00678E  A4D8               	btfss	status,2,c
 19411  006790  D002               	goto	l1726
 19412                           
 19413                           ; BSR set to: 1
 19414                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 19415  006792  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 19416                           
 19417                           ;inputs_MC50.c: 544:     }
 19418  006794  D004               	goto	l1727
 19419  006796                     l1726:
 19420                           
 19421                           ; BSR set to: 1
 19422                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 19423  006796  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 19424                           
 19425                           ; BSR set to: 1
 19426                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 19427  00679A  0E00               	movlw	0
 19428  00679C  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 19429  00679E                     l1727:
 19430                           
 19431                           ; BSR set to: 1
 19432                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 19433  00679E  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 19434  0067A0  A4D8               	btfss	status,2,c
 19435                           
 19436                           ; BSR set to: 1
 19437                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 19438  0067A2  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 19439                           
 19440                           ; BSR set to: 1
 19441                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 19442  0067A6  0100               	movlb	0	; () banked
 19443  0067A8  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19444  0067AA  A4D8               	btfss	status,2,c
 19445  0067AC  D006               	goto	l16577
 19446                           
 19447                           ; BSR set to: 0
 19448  0067AE  0E00               	movlw	0
 19449  0067B0  B48D               	btfsc	141,2,c	;volatile
 19450  0067B2  0E01               	movlw	1
 19451  0067B4  0101               	movlb	1	; () banked
 19452  0067B6  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19453  0067B8  D005               	goto	l16579
 19454  0067BA                     l16577:
 19455                           
 19456                           ; BSR set to: 0
 19457  0067BA  0E00               	movlw	0
 19458  0067BC  B28D               	btfsc	141,1,c	;volatile
 19459  0067BE  0E01               	movlw	1
 19460  0067C0  0101               	movlb	1	; () banked
 19461  0067C2  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19462  0067C4                     l16579:
 19463                           
 19464                           ; BSR set to: 1
 19465                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 19466  0067C4  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 19467  0067C6  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 19468  0067C8  A4D8               	btfss	status,2,c
 19469  0067CA  D002               	goto	l1731
 19470                           
 19471                           ; BSR set to: 1
 19472                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 19473  0067CC  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 19474                           
 19475                           ;inputs_MC50.c: 573:     }
 19476  0067CE  D004               	goto	l1732
 19477  0067D0                     l1731:
 19478                           
 19479                           ; BSR set to: 1
 19480                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 19481  0067D0  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 19482                           
 19483                           ; BSR set to: 1
 19484                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 19485  0067D4  0E00               	movlw	0
 19486  0067D6  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 19487  0067D8                     l1732:
 19488                           
 19489                           ; BSR set to: 1
 19490                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 19491  0067D8  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 19492  0067DA  A4D8               	btfss	status,2,c
 19493                           
 19494                           ; BSR set to: 1
 19495                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 19496  0067DC  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 19497                           
 19498                           ; BSR set to: 1
 19499                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 19500  0067E0  0E00               	movlw	0
 19501  0067E2  B88D               	btfsc	141,4,c	;volatile
 19502  0067E4  0E01               	movlw	1
 19503  0067E6  6F6A               	movwf	_security& (0+255),b	;volatile
 19504                           
 19505                           ; BSR set to: 1
 19506                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19507  0067E8  516A               	movf	_security& (0+255),w,b	;volatile
 19508  0067EA  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19509  0067EC  A4D8               	btfss	status,2,c
 19510  0067EE  D002               	goto	l1734
 19511                           
 19512                           ; BSR set to: 1
 19513                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19514  0067F0  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 19515                           
 19516                           ;inputs_MC50.c: 597:     }
 19517  0067F2  D004               	goto	l1735
 19518  0067F4                     l1734:
 19519                           
 19520                           ; BSR set to: 1
 19521                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19522  0067F4  C16A  F16B         	movff	_security,_security+1	;volatile
 19523                           
 19524                           ; BSR set to: 1
 19525                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19526  0067F8  0E00               	movlw	0
 19527  0067FA  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 19528  0067FC                     l1735:
 19529                           
 19530                           ; BSR set to: 1
 19531                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19532  0067FC  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 19533  0067FE  A4D8               	btfss	status,2,c
 19534                           
 19535                           ; BSR set to: 1
 19536                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19537  006800  C16A  F101         	movff	_security,_var_sys+1	;volatile
 19538                           
 19539                           ; BSR set to: 1
 19540                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19541  006804  0E00               	movlw	0
 19542  006806  BA8D               	btfsc	141,5,c	;volatile
 19543  006808  0E01               	movlw	1
 19544  00680A  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 19545                           
 19546                           ; BSR set to: 1
 19547                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19548  00680C  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19549  00680E  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19550  006810  A4D8               	btfss	status,2,c
 19551  006812  D002               	goto	l1737
 19552                           
 19553                           ; BSR set to: 1
 19554                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19555  006814  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19556                           
 19557                           ;inputs_MC50.c: 619:     }
 19558  006816  D004               	goto	l1738
 19559  006818                     l1737:
 19560                           
 19561                           ; BSR set to: 1
 19562                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19563  006818  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19564                           
 19565                           ; BSR set to: 1
 19566                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19567  00681C  0E00               	movlw	0
 19568  00681E  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19569  006820                     l1738:
 19570                           
 19571                           ; BSR set to: 1
 19572                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19573  006820  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19574  006822  A4D8               	btfss	status,2,c
 19575                           
 19576                           ; BSR set to: 1
 19577                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19578  006824  C16D  F170         	movff	_security+3,_security+6	;volatile
 19579                           
 19580                           ; BSR set to: 1
 19581                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19582  006828  0E00               	movlw	0
 19583  00682A  BC8D               	btfsc	141,6,c	;volatile
 19584  00682C  0E01               	movlw	1
 19585  00682E  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19586                           
 19587                           ; BSR set to: 1
 19588                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19589  006830  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19590  006832  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19591  006834  A4D8               	btfss	status,2,c
 19592  006836  D002               	goto	l1740
 19593                           
 19594                           ; BSR set to: 1
 19595                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19596  006838  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19597                           
 19598                           ;inputs_MC50.c: 640:     }
 19599  00683A  D004               	goto	l1741
 19600  00683C                     l1740:
 19601                           
 19602                           ; BSR set to: 1
 19603                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19604  00683C  C171  F172         	movff	_security+7,_security+8	;volatile
 19605                           
 19606                           ; BSR set to: 1
 19607                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19608  006840  0E00               	movlw	0
 19609  006842  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19610  006844                     l1741:
 19611                           
 19612                           ; BSR set to: 1
 19613                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19614  006844  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19615  006846  A4D8               	btfss	status,2,c
 19616                           
 19617                           ; BSR set to: 1
 19618                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19619  006848  C171  F174         	movff	_security+7,_security+10	;volatile
 19620                           
 19621                           ; BSR set to: 1
 19622                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19623  00684C  0100               	movlb	0	; () banked
 19624  00684E  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19625  006850  A4D8               	btfss	status,2,c
 19626  006852  D00D               	goto	l1743
 19627                           
 19628                           ; BSR set to: 0
 19629                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19630  006854  0101               	movlb	1	; () banked
 19631  006856  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19632  006858  A4D8               	btfss	status,2,c
 19633  00685A  D006               	goto	l16625
 19634                           
 19635                           ; BSR set to: 1
 19636  00685C  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19637  00685E  A4D8               	btfss	status,2,c
 19638  006860  D003               	goto	l16625
 19639                           
 19640                           ; BSR set to: 1
 19641                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19642  006862  0E00               	movlw	0
 19643  006864  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19644                           
 19645                           ;inputs_MC50.c: 660:         }
 19646  006866  0012               	return	
 19647  006868                     l16625:
 19648                           
 19649                           ; BSR set to: 1
 19650                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19651  006868  0E01               	movlw	1
 19652  00686A  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19653  00686C  0012               	return	
 19654  00686E                     l1743:
 19655                           
 19656                           ; BSR set to: 0
 19657                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19658  00686E  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19659  006872  0012               	return		;funcret
 19660  006874                     __end_of_readInputs:
 19661                           	callstack 0
 19662                           
 19663 ;; *************** function _loadNVM_VarSystem *****************
 19664 ;; Defined at:
 19665 ;;		line 139 in file "controlMemory_MC50.c"
 19666 ;; Parameters:    Size  Location     Type
 19667 ;;		None
 19668 ;; Auto vars:     Size  Location     Type
 19669 ;;		None
 19670 ;; Return value:  Size  Location     Type
 19671 ;;                  1    wreg      void 
 19672 ;; Registers used:
 19673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19674 ;; Tracked objects:
 19675 ;;		On entry : 3F/0
 19676 ;;		On exit  : 0/0
 19677 ;;		Unchanged: 0/0
 19678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19683 ;;Total ram usage:        0 bytes
 19684 ;; Hardware stack levels used: 1
 19685 ;; Hardware stack levels required when called: 15
 19686 ;; This function calls:
 19687 ;;		_I2C1_Read1ByteRegister
 19688 ;;		_ResetDefaultMemory
 19689 ;;		_SaveNVM_VarSystem
 19690 ;;		_checkNVM_VarSystem
 19691 ;;		_i2c_readDataBlock
 19692 ;; This function is called by:
 19693 ;;		_main
 19694 ;; This function uses a non-reentrant model
 19695 ;;
 19696                           
 19697                           	psect	text73
 19698  0061D4                     __ptext73:
 19699                           	callstack 0
 19700  0061D4                     _loadNVM_VarSystem:
 19701                           	callstack 15
 19702                           
 19703                           ; BSR set to: 0
 19704                           ;controlMemory_MC50.c: 141:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19705                           
 19706                           ;incstack = 0
 19707  0061D4  0E00               	movlw	0
 19708  0061D6  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19709  0061D8  0E50               	movlw	80
 19710  0061DA  EC32  F041         	call	_I2C1_Read1ByteRegister
 19711  0061DE  0AFF               	xorlw	255
 19712  0061E0  A4D8               	btfss	status,2,c
 19713  0061E2  D04C               	goto	l22593
 19714  0061E4  0E10               	movlw	16
 19715  0061E6  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19716  0061E8  0E50               	movlw	80
 19717  0061EA  EC32  F041         	call	_I2C1_Read1ByteRegister
 19718  0061EE  0AFF               	xorlw	255
 19719  0061F0  A4D8               	btfss	status,2,c
 19720  0061F2  D044               	goto	l22593
 19721                           
 19722                           ;controlMemory_MC50.c: 142:     {;controlMemory_MC50.c: 143:         ResetDefaultMemory(
      +                          SC);
 19723  0061F4  0E00               	movlw	0
 19724  0061F6  EC6C  F02D         	call	_ResetDefaultMemory
 19725                           
 19726                           ;controlMemory_MC50.c: 144:         var_sys_NVM.learningTimeToClose = 0;
 19727  0061FA  0E00               	movlw	0
 19728  0061FC  0100               	movlb	0	; () banked
 19729  0061FE  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19730  006200  0E00               	movlw	0
 19731  006202  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19732  006204  0E00               	movlw	0
 19733  006206  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19734  006208  0E00               	movlw	0
 19735  00620A  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19736                           
 19737                           ; BSR set to: 0
 19738                           ;controlMemory_MC50.c: 145:         var_sys_NVM.learningTimeToOpen = 0;
 19739  00620C  0E00               	movlw	0
 19740  00620E  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19741  006210  0E00               	movlw	0
 19742  006212  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19743  006214  0E00               	movlw	0
 19744  006216  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19745  006218  0E00               	movlw	0
 19746  00621A  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19747                           
 19748                           ; BSR set to: 0
 19749                           ;controlMemory_MC50.c: 146:         var_sys_NVM.learningCurrentNormalClose = 0;
 19750  00621C  0E00               	movlw	0
 19751  00621E  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19752  006220  0E00               	movlw	0
 19753  006222  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19754                           
 19755                           ; BSR set to: 0
 19756                           ;controlMemory_MC50.c: 147:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19757  006224  0E00               	movlw	0
 19758  006226  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19759  006228  0E00               	movlw	0
 19760  00622A  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19761                           
 19762                           ; BSR set to: 0
 19763                           ;controlMemory_MC50.c: 148:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19764  00622C  0E00               	movlw	0
 19765  00622E  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19766  006230  0E00               	movlw	0
 19767  006232  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19768  006234  0E00               	movlw	0
 19769  006236  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19770  006238  0E00               	movlw	0
 19771  00623A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19772                           
 19773                           ; BSR set to: 0
 19774                           ;controlMemory_MC50.c: 149:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19775  00623C  0E00               	movlw	0
 19776  00623E  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19777  006240  0E00               	movlw	0
 19778  006242  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19779  006244  0E00               	movlw	0
 19780  006246  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19781  006248  0E00               	movlw	0
 19782  00624A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19783                           
 19784                           ;controlMemory_MC50.c: 150:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19785  00624C  0E03               	movlw	3
 19786  00624E  ECB6  F044         	call	_SaveNVM_VarSystem
 19787                           
 19788                           ;controlMemory_MC50.c: 151:         var_sys_NVM.positionRemotesFull = 0;
 19789  006252  0E00               	movlw	0
 19790  006254  0100               	movlb	0	; () banked
 19791  006256  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19792                           
 19793                           ; BSR set to: 0
 19794                           ;controlMemory_MC50.c: 152:         var_sys_NVM.positionRemotesWalk = 0;
 19795  006258  0E00               	movlw	0
 19796  00625A  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19797                           
 19798                           ; BSR set to: 0
 19799                           ;controlMemory_MC50.c: 153:         var_sys_NVM.OnlyRollingCode = NO;
 19800  00625C  0E00               	movlw	0
 19801  00625E  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19802                           
 19803                           ; BSR set to: 0
 19804                           ;controlMemory_MC50.c: 154:         var_sys_NVM.counterMoves = 0;
 19805  006260  0E00               	movlw	0
 19806  006262  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19807  006264  0E00               	movlw	0
 19808  006266  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19809  006268  0E00               	movlw	0
 19810  00626A  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19811  00626C  0E00               	movlw	0
 19812  00626E  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19813                           
 19814                           ;controlMemory_MC50.c: 155:        SaveNVM_VarSystem(pageMemoryCounters);
 19815  006270  0E02               	movlw	2
 19816  006272  ECB6  F044         	call	_SaveNVM_VarSystem
 19817                           
 19818                           ;controlMemory_MC50.c: 157:          var_sys_NVM.TypeofMotor = 0;
 19819  006276  0E00               	movlw	0
 19820  006278  0100               	movlb	0	; () banked
 19821  00627A  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19822  00627C                     l22593:
 19823                           
 19824                           ;controlMemory_MC50.c: 160:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19825  00627C  0E00               	movlw	0
 19826  00627E  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19827  006280  0E00               	movlw	0
 19828  006282  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19829  006284  0E98               	movlw	low _var_sys_NVM
 19830  006286  6E24               	movwf	i2c_readDataBlock@data^0,c
 19831  006288  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19832  00628A  0E00               	movlw	0
 19833  00628C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19834  00628E  0E10               	movlw	16
 19835  006290  6E26               	movwf	i2c_readDataBlock@len^0,c
 19836  006292  0E50               	movlw	80
 19837  006294  EC86  F03E         	call	_i2c_readDataBlock
 19838                           
 19839                           ;controlMemory_MC50.c: 161:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19840  006298  0E00               	movlw	0
 19841  00629A  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19842  00629C  0E10               	movlw	16
 19843  00629E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19844  0062A0  0EA8               	movlw	low (_var_sys_NVM+16)
 19845  0062A2  6E24               	movwf	i2c_readDataBlock@data^0,c
 19846  0062A4  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19847  0062A6  0E00               	movlw	0
 19848  0062A8  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19849  0062AA  0E10               	movlw	16
 19850  0062AC  6E26               	movwf	i2c_readDataBlock@len^0,c
 19851  0062AE  0E50               	movlw	80
 19852  0062B0  EC86  F03E         	call	_i2c_readDataBlock
 19853                           
 19854                           ;controlMemory_MC50.c: 162:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19855  0062B4  0E00               	movlw	0
 19856  0062B6  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19857  0062B8  0E20               	movlw	32
 19858  0062BA  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19859  0062BC  0EB8               	movlw	low (_var_sys_NVM+32)
 19860  0062BE  6E24               	movwf	i2c_readDataBlock@data^0,c
 19861  0062C0  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19862  0062C2  0E00               	movlw	0
 19863  0062C4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19864  0062C6  0E10               	movlw	16
 19865  0062C8  6E26               	movwf	i2c_readDataBlock@len^0,c
 19866  0062CA  0E50               	movlw	80
 19867  0062CC  EC86  F03E         	call	_i2c_readDataBlock
 19868                           
 19869                           ;controlMemory_MC50.c: 163:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19870  0062D0  0E00               	movlw	0
 19871  0062D2  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19872  0062D4  0E30               	movlw	48
 19873  0062D6  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19874  0062D8  0EC8               	movlw	low (_var_sys_NVM+48)
 19875  0062DA  6E24               	movwf	i2c_readDataBlock@data^0,c
 19876  0062DC  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19877  0062DE  0E00               	movlw	0
 19878  0062E0  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19879  0062E2  0E10               	movlw	16
 19880  0062E4  6E26               	movwf	i2c_readDataBlock@len^0,c
 19881  0062E6  0E50               	movlw	80
 19882  0062E8  EC86  F03E         	call	_i2c_readDataBlock
 19883                           
 19884                           ;controlMemory_MC50.c: 166:     checkNVM_VarSystem();
 19885  0062EC  EC69  F029         	call	_checkNVM_VarSystem	;wreg free
 19886                           
 19887                           ;controlMemory_MC50.c: 168:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19888  0062F0  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19889  0062F4  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19890  0062F8  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19891  0062FC  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19892  006300  0012               	return		;funcret
 19893  006302                     __end_of_loadNVM_VarSystem:
 19894                           	callstack 0
 19895                           
 19896 ;; *************** function _i2c_readDataBlock *****************
 19897 ;; Defined at:
 19898 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19899 ;; Parameters:    Size  Location     Type
 19900 ;;  address         1    wreg     unsigned char 
 19901 ;;  reg             2   33[COMRAM] unsigned short 
 19902 ;;  data            2   35[COMRAM] PTR void 
 19903 ;;		 -> var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemotesFull(1), memoryTEMP(16)
      +, 
 19904 ;;		 -> var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 19905 ;;  len             2   37[COMRAM] unsigned int 
 19906 ;; Auto vars:     Size  Location     Type
 19907 ;;  address         1   40[COMRAM] unsigned char 
 19908 ;;  d               4   41[COMRAM] struct .
 19909 ;; Return value:  Size  Location     Type
 19910 ;;                  1    wreg      void 
 19911 ;; Registers used:
 19912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19913 ;; Tracked objects:
 19914 ;;		On entry : 0/1
 19915 ;;		On exit  : 0/0
 19916 ;;		Unchanged: 0/0
 19917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19918 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19919 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19920 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19921 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19922 ;;Total ram usage:       12 bytes
 19923 ;; Hardware stack levels used: 1
 19924 ;; Hardware stack levels required when called: 12
 19925 ;; This function calls:
 19926 ;;		_I2C1_Close
 19927 ;;		_I2C1_MasterWrite
 19928 ;;		_I2C1_Open
 19929 ;;		_I2C1_SetAddressNackCallback
 19930 ;;		_I2C1_SetBuffer
 19931 ;;		_I2C1_SetDataCompleteCallback
 19932 ;; This function is called by:
 19933 ;;		_validateRemoteSerialNumber
 19934 ;;		_cmdMemoryIsEmpty
 19935 ;;		_loadNVM_VarSystem
 19936 ;; This function uses a non-reentrant model
 19937 ;;
 19938                           
 19939                           	psect	text74
 19940  007D0C                     __ptext74:
 19941                           	callstack 0
 19942  007D0C                     _i2c_readDataBlock:
 19943                           	callstack 14
 19944                           
 19945                           ;incstack = 0
 19946                           ;i2c_readDataBlock@address stored from wreg
 19947  007D0C  6E29               	movwf	i2c_readDataBlock@address^0,c
 19948                           
 19949                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 19950  007D0E  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 19951  007D12  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 19952                           
 19953                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 19954  007D16  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 19955  007D1A  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 19956  007D1E                     l19367:
 19957  007D1E  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 19958  007D20  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 19959  007D22  EC91  F03C         	call	_I2C1_Open
 19960  007D26  0900               	iorlw	0
 19961  007D28  B4D8               	btfsc	status,2,c
 19962  007D2A  D7F9               	goto	l19367
 19963                           
 19964                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 19965  007D2C  0E76               	movlw	low _rdBlkRegCompleteHandler
 19966  007D2E  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 19967  007D30  0E88               	movlw	high _rdBlkRegCompleteHandler
 19968  007D32  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 19969  007D34  0E2A               	movlw	low i2c_readDataBlock@d
 19970  007D36  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 19971  007D38  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 19972  007D3A  ECF1  F047         	call	_I2C1_SetDataCompleteCallback	;wreg free
 19973                           
 19974                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 19975  007D3E  0E22               	movlw	low i2c_readDataBlock@reg
 19976  007D40  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 19977  007D42  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 19978  007D44  0E00               	movlw	0
 19979  007D46  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 19980  007D48  0E01               	movlw	1
 19981  007D4A  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 19982  007D4C  ECB4  F047         	call	_I2C1_SetBuffer	;wreg free
 19983                           
 19984                           ; BSR set to: 2
 19985                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 19986  007D50  0E00               	movlw	0
 19987  007D52  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 19988  007D54  0E00               	movlw	0
 19989  007D56  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 19990  007D58  0E00               	movlw	0
 19991  007D5A  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 19992  007D5C  0E00               	movlw	0
 19993  007D5E  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 19994  007D60  ECD9  F047         	call	_I2C1_SetAddressNackCallback	;wreg free
 19995                           
 19996                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 19997  007D64  ECB2  F048         	call	_I2C1_MasterWrite	;wreg free
 19998  007D68                     l19377:
 19999  007D68  EC26  F047         	call	_I2C1_Close	;wreg free
 20000  007D6C  06E8               	decf	wreg,f,c
 20001  007D6E  B4D8               	btfsc	status,2,c
 20002  007D70  D7FB               	goto	l19377
 20003                           
 20004                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 20005  007D72  0ED0               	movlw	208
 20006  007D74  6E28               	movwf	??_i2c_readDataBlock^0,c
 20007  007D76  0ECA               	movlw	202
 20008  007D78                     u28747:
 20009  007D78  2EE8               	decfsz	wreg,f,c
 20010  007D7A  D7FE               	bra	u28747
 20011  007D7C  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 20012  007D7E  D7FC               	bra	u28747
 20013  007D80  0012               	return		;funcret
 20014  007D82                     __end_of_i2c_readDataBlock:
 20015                           	callstack 0
 20016                           
 20017 ;; *************** function _checkNVM_VarSystem *****************
 20018 ;; Defined at:
 20019 ;;		line 314 in file "controlMemory_MC50.c"
 20020 ;; Parameters:    Size  Location     Type
 20021 ;;		None
 20022 ;; Auto vars:     Size  Location     Type
 20023 ;;  saveParam       1   57[COMRAM] unsigned char 
 20024 ;; Return value:  Size  Location     Type
 20025 ;;                  1    wreg      void 
 20026 ;; Registers used:
 20027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20028 ;; Tracked objects:
 20029 ;;		On entry : 0/2
 20030 ;;		On exit  : 0/0
 20031 ;;		Unchanged: 0/0
 20032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20034 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20036 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20037 ;;Total ram usage:        1 bytes
 20038 ;; Hardware stack levels used: 1
 20039 ;; Hardware stack levels required when called: 14
 20040 ;; This function calls:
 20041 ;;		_SaveNVM_VarSystem
 20042 ;; This function is called by:
 20043 ;;		_loadNVM_VarSystem
 20044 ;; This function uses a non-reentrant model
 20045 ;;
 20046                           
 20047                           	psect	text75
 20048  0052D2                     __ptext75:
 20049                           	callstack 0
 20050  0052D2                     _checkNVM_VarSystem:
 20051                           	callstack 15
 20052                           
 20053                           ;controlMemory_MC50.c: 316:     char saveParam;;controlMemory_MC50.c: 319:     saveParam
      +                           = 0;
 20054                           
 20055                           ;incstack = 0
 20056  0052D2  0E00               	movlw	0
 20057  0052D4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20058                           
 20059                           ;controlMemory_MC50.c: 327:     if ( var_sys_NVM.decelarationOpen>45 )
 20060  0052D6  0E2D               	movlw	45
 20061  0052D8  0100               	movlb	0	; () banked
 20062  0052DA  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 20063  0052DC  D004               	goto	l21047
 20064                           
 20065                           ; BSR set to: 0
 20066                           ;controlMemory_MC50.c: 328:     {;controlMemory_MC50.c: 330:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 20067  0052DE  0E03               	movlw	3
 20068  0052E0  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20069                           
 20070                           ;controlMemory_MC50.c: 331:         saveParam=1;
 20071  0052E2  0E01               	movlw	1
 20072  0052E4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20073  0052E6                     l21047:
 20074                           
 20075                           ; BSR set to: 0
 20076                           ;controlMemory_MC50.c: 334:     if ( var_sys_NVM.decelarationClose>45 )
 20077  0052E6  0E2D               	movlw	45
 20078  0052E8  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 20079  0052EA  D004               	goto	l1490
 20080                           
 20081                           ; BSR set to: 0
 20082                           ;controlMemory_MC50.c: 335:     {;controlMemory_MC50.c: 337:         var_sys_NVM.decelar
      +                          ationClose = 3;
 20083  0052EC  0E03               	movlw	3
 20084  0052EE  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20085                           
 20086                           ;controlMemory_MC50.c: 338:         saveParam=1;
 20087  0052F0  0E01               	movlw	1
 20088  0052F2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20089  0052F4                     l1490:
 20090                           
 20091                           ; BSR set to: 0
 20092                           ;controlMemory_MC50.c: 341:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 20093  0052F4  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 20094  0052F6  B4D8               	btfsc	status,2,c
 20095  0052F8  D003               	goto	u24180
 20096                           
 20097                           ; BSR set to: 0
 20098  0052FA  0E09               	movlw	9
 20099  0052FC  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 20100  0052FE  D004               	goto	l21055
 20101  005300                     u24180:
 20102                           
 20103                           ; BSR set to: 0
 20104                           ;controlMemory_MC50.c: 342:     {;controlMemory_MC50.c: 344:         var_sys_NVM.motorPo
      +                          wer = 9;
 20105  005300  0E09               	movlw	9
 20106  005302  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20107                           
 20108                           ;controlMemory_MC50.c: 345:         saveParam=1;
 20109  005304  0E01               	movlw	1
 20110  005306  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20111  005308                     l21055:
 20112                           
 20113                           ; BSR set to: 0
 20114                           ;controlMemory_MC50.c: 348:     if ( var_sys_NVM.motorSensitivity>9 )
 20115  005308  0E09               	movlw	9
 20116  00530A  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 20117  00530C  D004               	goto	l21059
 20118                           
 20119                           ; BSR set to: 0
 20120                           ;controlMemory_MC50.c: 349:     {;controlMemory_MC50.c: 351:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 20121  00530E  0E00               	movlw	0
 20122  005310  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20123                           
 20124                           ;controlMemory_MC50.c: 352:         saveParam=1;
 20125  005312  0E01               	movlw	1
 20126  005314  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20127  005316                     l21059:
 20128                           
 20129                           ; BSR set to: 0
 20130                           ;controlMemory_MC50.c: 355:     if ( var_sys_NVM.walkTime>99 )
 20131  005316  0E63               	movlw	99
 20132  005318  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 20133  00531A  D004               	goto	l21063
 20134                           
 20135                           ; BSR set to: 0
 20136                           ;controlMemory_MC50.c: 356:     {;controlMemory_MC50.c: 358:         var_sys_NVM.walkTim
      +                          e = 10;
 20137  00531C  0E0A               	movlw	10
 20138  00531E  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20139                           
 20140                           ;controlMemory_MC50.c: 359:         saveParam=1;
 20141  005320  0E01               	movlw	1
 20142  005322  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20143  005324                     l21063:
 20144                           
 20145                           ; BSR set to: 0
 20146                           ;controlMemory_MC50.c: 362:     if ( var_sys_NVM.autoTimeFullClose>99 )
 20147  005324  0E63               	movlw	99
 20148  005326  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 20149  005328  D004               	goto	l21067
 20150                           
 20151                           ; BSR set to: 0
 20152                           ;controlMemory_MC50.c: 363:     {;controlMemory_MC50.c: 365:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 20153  00532A  0E00               	movlw	0
 20154  00532C  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20155                           
 20156                           ;controlMemory_MC50.c: 366:         saveParam=1;
 20157  00532E  0E01               	movlw	1
 20158  005330  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20159  005332                     l21067:
 20160                           
 20161                           ; BSR set to: 0
 20162                           ;controlMemory_MC50.c: 369:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 20163  005332  0E63               	movlw	99
 20164  005334  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 20165  005336  D004               	goto	l21071
 20166                           
 20167                           ; BSR set to: 0
 20168                           ;controlMemory_MC50.c: 370:     {;controlMemory_MC50.c: 372:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 20169  005338  0E00               	movlw	0
 20170  00533A  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20171                           
 20172                           ;controlMemory_MC50.c: 373:         saveParam=1;
 20173  00533C  0E01               	movlw	1
 20174  00533E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20175  005340                     l21071:
 20176                           
 20177                           ; BSR set to: 0
 20178                           ;controlMemory_MC50.c: 376:     if ( var_sys_NVM.photoCellIsON>1 )
 20179  005340  0E01               	movlw	1
 20180  005342  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 20181  005344  D004               	goto	l21075
 20182                           
 20183                           ; BSR set to: 0
 20184                           ;controlMemory_MC50.c: 377:     {;controlMemory_MC50.c: 379:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 20185  005346  0E00               	movlw	0
 20186  005348  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20187                           
 20188                           ;controlMemory_MC50.c: 380:         saveParam=1;
 20189  00534A  0E01               	movlw	1
 20190  00534C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20191  00534E                     l21075:
 20192                           
 20193                           ; BSR set to: 0
 20194                           ;controlMemory_MC50.c: 383:     if ( var_sys_NVM.photoCellInOpen>1 )
 20195  00534E  0E01               	movlw	1
 20196  005350  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 20197  005352  D004               	goto	l21079
 20198                           
 20199                           ; BSR set to: 0
 20200                           ;controlMemory_MC50.c: 384:     {;controlMemory_MC50.c: 386:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 20201  005354  0E00               	movlw	0
 20202  005356  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20203                           
 20204                           ;controlMemory_MC50.c: 387:         saveParam=1;
 20205  005358  0E01               	movlw	1
 20206  00535A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20207  00535C                     l21079:
 20208                           
 20209                           ; BSR set to: 0
 20210                           ;controlMemory_MC50.c: 390:     if ( var_sys_NVM.securityBandIsON>1 )
 20211  00535C  0E01               	movlw	1
 20212  00535E  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 20213  005360  D004               	goto	l21083
 20214                           
 20215                           ; BSR set to: 0
 20216                           ;controlMemory_MC50.c: 391:     {;controlMemory_MC50.c: 393:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 20217  005362  0E00               	movlw	0
 20218  005364  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20219                           
 20220                           ;controlMemory_MC50.c: 394:         saveParam=1;
 20221  005366  0E01               	movlw	1
 20222  005368  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20223  00536A                     l21083:
 20224                           
 20225                           ; BSR set to: 0
 20226                           ;controlMemory_MC50.c: 397:     if ( var_sys_NVM.securityBandType>1 )
 20227  00536A  0E01               	movlw	1
 20228  00536C  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 20229  00536E  D004               	goto	l21087
 20230                           
 20231                           ; BSR set to: 0
 20232                           ;controlMemory_MC50.c: 398:     {;controlMemory_MC50.c: 400:         var_sys_NVM.securit
      +                          yBandType = 1;
 20233  005370  0E01               	movlw	1
 20234  005372  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20235                           
 20236                           ;controlMemory_MC50.c: 401:         saveParam=1;
 20237  005374  0E01               	movlw	1
 20238  005376  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20239  005378                     l21087:
 20240                           
 20241                           ; BSR set to: 0
 20242                           ;controlMemory_MC50.c: 404:     if ( var_sys_NVM.securityBandInOpen>1 )
 20243  005378  0E01               	movlw	1
 20244  00537A  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 20245  00537C  D004               	goto	l21091
 20246                           
 20247                           ; BSR set to: 0
 20248                           ;controlMemory_MC50.c: 405:     {;controlMemory_MC50.c: 407:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 20249  00537E  0E00               	movlw	0
 20250  005380  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20251                           
 20252                           ;controlMemory_MC50.c: 408:         saveParam=1;
 20253  005382  0E01               	movlw	1
 20254  005384  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20255  005386                     l21091:
 20256                           
 20257                           ; BSR set to: 0
 20258                           ;controlMemory_MC50.c: 411:     if ( var_sys_NVM.operationMode>2 )
 20259  005386  0E02               	movlw	2
 20260  005388  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 20261  00538A  D004               	goto	l21095
 20262                           
 20263                           ; BSR set to: 0
 20264                           ;controlMemory_MC50.c: 412:     {;controlMemory_MC50.c: 414:         var_sys_NVM.operati
      +                          onMode = 0;
 20265  00538C  0E00               	movlw	0
 20266  00538E  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20267                           
 20268                           ;controlMemory_MC50.c: 415:         saveParam=1;
 20269  005390  0E01               	movlw	1
 20270  005392  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20271  005394                     l21095:
 20272                           
 20273                           ; BSR set to: 0
 20274                           ;controlMemory_MC50.c: 418:     if ( var_sys_NVM.flashLightMode>3 )
 20275  005394  0E03               	movlw	3
 20276  005396  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 20277  005398  D004               	goto	l21099
 20278                           
 20279                           ; BSR set to: 0
 20280                           ;controlMemory_MC50.c: 419:     {;controlMemory_MC50.c: 421:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 20281  00539A  0E00               	movlw	0
 20282  00539C  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20283                           
 20284                           ;controlMemory_MC50.c: 422:         saveParam=1;
 20285  00539E  0E01               	movlw	1
 20286  0053A0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20287  0053A2                     l21099:
 20288                           
 20289                           ; BSR set to: 0
 20290                           ;controlMemory_MC50.c: 425:     if ( var_sys_NVM.programmingDistance>1 )
 20291  0053A2  0E01               	movlw	1
 20292  0053A4  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 20293  0053A6  D004               	goto	l21103
 20294                           
 20295                           ; BSR set to: 0
 20296                           ;controlMemory_MC50.c: 426:     {;controlMemory_MC50.c: 428:         var_sys_NVM.program
      +                          mingDistance = 0;
 20297  0053A8  0E00               	movlw	0
 20298  0053AA  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20299                           
 20300                           ;controlMemory_MC50.c: 429:         saveParam=1;
 20301  0053AC  0E01               	movlw	1
 20302  0053AE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20303  0053B0                     l21103:
 20304                           
 20305                           ; BSR set to: 0
 20306                           ;controlMemory_MC50.c: 432:     if ( var_sys_NVM.decelarationSensivity>9 )
 20307  0053B0  0E09               	movlw	9
 20308  0053B2  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 20309  0053B4  D004               	goto	l21107
 20310                           
 20311                           ; BSR set to: 0
 20312                           ;controlMemory_MC50.c: 433:     {;controlMemory_MC50.c: 435:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 20313  0053B6  0E00               	movlw	0
 20314  0053B8  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20315                           
 20316                           ;controlMemory_MC50.c: 436:         saveParam=1;
 20317  0053BA  0E01               	movlw	1
 20318  0053BC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20319  0053BE                     l21107:
 20320                           
 20321                           ; BSR set to: 0
 20322                           ;controlMemory_MC50.c: 441:     if ( var_sys_NVM.homemPresente>2 )
 20323  0053BE  0E02               	movlw	2
 20324  0053C0  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 20325  0053C2  D004               	goto	l21111
 20326                           
 20327                           ; BSR set to: 0
 20328                           ;controlMemory_MC50.c: 442:     {;controlMemory_MC50.c: 444:         var_sys_NVM.homemPr
      +                          esente = 0;
 20329  0053C4  0E00               	movlw	0
 20330  0053C6  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20331                           
 20332                           ;controlMemory_MC50.c: 445:         saveParam=1;
 20333  0053C8  0E01               	movlw	1
 20334  0053CA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20335  0053CC                     l21111:
 20336                           
 20337                           ; BSR set to: 0
 20338                           ;controlMemory_MC50.c: 448:     if ( var_sys_NVM.logicDigital>1 )
 20339  0053CC  0E01               	movlw	1
 20340  0053CE  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 20341  0053D0  D004               	goto	l21115
 20342                           
 20343                           ; BSR set to: 0
 20344                           ;controlMemory_MC50.c: 449:     {;controlMemory_MC50.c: 451:         var_sys_NVM.logicDi
      +                          gital = 0;
 20345  0053D2  0E00               	movlw	0
 20346  0053D4  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20347                           
 20348                           ;controlMemory_MC50.c: 452:         saveParam=1;
 20349  0053D6  0E01               	movlw	1
 20350  0053D8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20351  0053DA                     l21115:
 20352                           
 20353                           ; BSR set to: 0
 20354                           ;controlMemory_MC50.c: 455:     if ( var_sys_NVM.softStart>9 )
 20355  0053DA  0E09               	movlw	9
 20356  0053DC  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 20357  0053DE  D004               	goto	l21119
 20358                           
 20359                           ; BSR set to: 0
 20360                           ;controlMemory_MC50.c: 456:     {;controlMemory_MC50.c: 458:         var_sys_NVM.softSta
      +                          rt = 0;
 20361  0053E0  0E00               	movlw	0
 20362  0053E2  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20363                           
 20364                           ;controlMemory_MC50.c: 459:         saveParam=1;
 20365  0053E4  0E01               	movlw	1
 20366  0053E6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20367  0053E8                     l21119:
 20368                           
 20369                           ; BSR set to: 0
 20370                           ;controlMemory_MC50.c: 463:     if ( var_sys_NVM.ligthTime>99 )
 20371  0053E8  0E63               	movlw	99
 20372  0053EA  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 20373  0053EC  D004               	goto	l21123
 20374                           
 20375                           ; BSR set to: 0
 20376                           ;controlMemory_MC50.c: 464:     {;controlMemory_MC50.c: 466:         var_sys_NVM.ligthTi
      +                          me = 3;
 20377  0053EE  0E03               	movlw	3
 20378  0053F0  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20379                           
 20380                           ;controlMemory_MC50.c: 467:         saveParam=1;
 20381  0053F2  0E01               	movlw	1
 20382  0053F4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20383  0053F6                     l21123:
 20384                           
 20385                           ; BSR set to: 0
 20386                           ;controlMemory_MC50.c: 470:     if ( var_sys_NVM.folow_me>9 )
 20387  0053F6  0E09               	movlw	9
 20388  0053F8  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 20389  0053FA  D004               	goto	l21127
 20390                           
 20391                           ; BSR set to: 0
 20392                           ;controlMemory_MC50.c: 471:     {;controlMemory_MC50.c: 473:         var_sys_NVM.folow_m
      +                          e = 0;
 20393  0053FC  0E00               	movlw	0
 20394  0053FE  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20395                           
 20396                           ;controlMemory_MC50.c: 474:         saveParam=1;
 20397  005400  0E01               	movlw	1
 20398  005402  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20399  005404                     l21127:
 20400                           
 20401                           ; BSR set to: 0
 20402                           ;controlMemory_MC50.c: 479:     if ( var_sys_NVM.electricBrake>1 )
 20403  005404  0E01               	movlw	1
 20404  005406  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 20405  005408  D004               	goto	l1512
 20406                           
 20407                           ; BSR set to: 0
 20408                           ;controlMemory_MC50.c: 480:     {;controlMemory_MC50.c: 482:         var_sys_NVM.electri
      +                          cBrake = 0;
 20409  00540A  0E00               	movlw	0
 20410  00540C  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20411                           
 20412                           ;controlMemory_MC50.c: 483:         saveParam=1;
 20413  00540E  0E01               	movlw	1
 20414  005410  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20415  005412                     l1512:
 20416                           
 20417                           ; BSR set to: 0
 20418                           ;controlMemory_MC50.c: 486:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 20419  005412  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 20420  005414  B4D8               	btfsc	status,2,c
 20421  005416  D003               	goto	u24390
 20422                           
 20423                           ; BSR set to: 0
 20424  005418  0E09               	movlw	9
 20425  00541A  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 20426  00541C  D004               	goto	l21135
 20427  00541E                     u24390:
 20428                           
 20429                           ; BSR set to: 0
 20430                           ;controlMemory_MC50.c: 487:     {;controlMemory_MC50.c: 489:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 20431  00541E  0E05               	movlw	5
 20432  005420  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20433                           
 20434                           ;controlMemory_MC50.c: 490:         saveParam=1;
 20435  005422  0E01               	movlw	1
 20436  005424  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20437  005426                     l21135:
 20438                           
 20439                           ; BSR set to: 0
 20440                           ;controlMemory_MC50.c: 493:     if ( var_sys_NVM.flashRGBMode>3 )
 20441  005426  0E03               	movlw	3
 20442  005428  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 20443  00542A  D004               	goto	l21139
 20444                           
 20445                           ; BSR set to: 0
 20446                           ;controlMemory_MC50.c: 494:     {;controlMemory_MC50.c: 496:         var_sys_NVM.flashRG
      +                          BMode = 3;
 20447  00542C  0E03               	movlw	3
 20448  00542E  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20449                           
 20450                           ;controlMemory_MC50.c: 497:         saveParam=1;
 20451  005430  0E01               	movlw	1
 20452  005432  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20453  005434                     l21139:
 20454                           
 20455                           ; BSR set to: 0
 20456                           ;controlMemory_MC50.c: 499:         if ( var_sys_NVM.Stopboton > 1 )
 20457  005434  0E01               	movlw	1
 20458  005436  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 20459  005438  D004               	goto	l21143
 20460                           
 20461                           ; BSR set to: 0
 20462                           ;controlMemory_MC50.c: 500:     {;controlMemory_MC50.c: 502:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 20463  00543A  0E00               	movlw	0
 20464  00543C  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20465                           
 20466                           ;controlMemory_MC50.c: 503:         saveParam=1;
 20467  00543E  0E01               	movlw	1
 20468  005440  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20469  005442                     l21143:
 20470                           
 20471                           ; BSR set to: 0
 20472                           ;controlMemory_MC50.c: 505:         if ( var_sys_NVM.Direction_motor>1 )
 20473  005442  0E01               	movlw	1
 20474  005444  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 20475  005446  D004               	goto	l21147
 20476                           
 20477                           ; BSR set to: 0
 20478                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.Directi
      +                          on_motor = 1;
 20479  005448  0E01               	movlw	1
 20480  00544A  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20481                           
 20482                           ;controlMemory_MC50.c: 509:         saveParam=1;
 20483  00544C  0E01               	movlw	1
 20484  00544E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20485  005450                     l21147:
 20486                           
 20487                           ; BSR set to: 0
 20488                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.softstop>9 )
 20489  005450  0E09               	movlw	9
 20490  005452  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 20491  005454  D004               	goto	l1519
 20492                           
 20493                           ; BSR set to: 0
 20494                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.softsto
      +                          p = 0;
 20495  005456  0E00               	movlw	0
 20496  005458  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20497                           
 20498                           ;controlMemory_MC50.c: 515:         saveParam=1;
 20499  00545A  0E01               	movlw	1
 20500  00545C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20501  00545E                     l1519:
 20502                           
 20503                           ; BSR set to: 0
 20504                           ;controlMemory_MC50.c: 540:     if ( saveParam != 0 )
 20505  00545E  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 20506  005460  B4D8               	btfsc	status,2,c
 20507  005462  0012               	return	
 20508                           
 20509                           ; BSR set to: 0
 20510                           ;controlMemory_MC50.c: 541:     {;controlMemory_MC50.c: 542:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 20511  005464  0E00               	movlw	0
 20512  005466  ECB6  F044         	call	_SaveNVM_VarSystem
 20513                           
 20514                           ;controlMemory_MC50.c: 543:         SaveNVM_VarSystem(pageMemoryE);
 20515  00546A  0E01               	movlw	1
 20516  00546C  ECB6  F044         	call	_SaveNVM_VarSystem
 20517  005470  0012               	return		;funcret
 20518  005472                     __end_of_checkNVM_VarSystem:
 20519                           	callstack 0
 20520                           
 20521 ;; *************** function _ResetDefaultMemory *****************
 20522 ;; Defined at:
 20523 ;;		line 186 in file "controlMemory_MC50.c"
 20524 ;; Parameters:    Size  Location     Type
 20525 ;;  type            1    wreg     unsigned char 
 20526 ;; Auto vars:     Size  Location     Type
 20527 ;;  type            1   57[COMRAM] unsigned char 
 20528 ;; Return value:  Size  Location     Type
 20529 ;;                  1    wreg      void 
 20530 ;; Registers used:
 20531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20532 ;; Tracked objects:
 20533 ;;		On entry : 31/0
 20534 ;;		On exit  : 0/0
 20535 ;;		Unchanged: 0/0
 20536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20541 ;;Total ram usage:        1 bytes
 20542 ;; Hardware stack levels used: 1
 20543 ;; Hardware stack levels required when called: 14
 20544 ;; This function calls:
 20545 ;;		_SaveNVM_VarSystem
 20546 ;; This function is called by:
 20547 ;;		_loadNVM_VarSystem
 20548 ;;		_sm_execute_menuConfiguration
 20549 ;; This function uses a non-reentrant model
 20550 ;;
 20551                           
 20552                           	psect	text76
 20553  005AD8                     __ptext76:
 20554                           	callstack 0
 20555  005AD8                     _ResetDefaultMemory:
 20556                           	callstack 14
 20557                           
 20558                           ;incstack = 0
 20559                           ;ResetDefaultMemory@type stored from wreg
 20560  005AD8  6E3A               	movwf	ResetDefaultMemory@type^0,c
 20561                           
 20562                           ;controlMemory_MC50.c: 186: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 187: {;controlMemory_MC50.c: 190:     var_sys_NVM.decelarationOpen = 3;
 20563  005ADA  0E03               	movlw	3
 20564  005ADC  0100               	movlb	0	; () banked
 20565  005ADE  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20566                           
 20567                           ;controlMemory_MC50.c: 191:     var_sys_NVM.motorPower = 9;
 20568  005AE0  0E09               	movlw	9
 20569  005AE2  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20570                           
 20571                           ;controlMemory_MC50.c: 192:     var_sys_NVM.decelarationClose = 3;
 20572  005AE4  0E03               	movlw	3
 20573  005AE6  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20574                           
 20575                           ;controlMemory_MC50.c: 193:     var_sys_NVM.photoCellIsON = 0;
 20576  005AE8  0E00               	movlw	0
 20577  005AEA  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20578                           
 20579                           ;controlMemory_MC50.c: 194:     var_sys_NVM.photoCellInOpen = 0;
 20580  005AEC  0E00               	movlw	0
 20581  005AEE  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20582                           
 20583                           ;controlMemory_MC50.c: 195:     var_sys_NVM.securityBandIsON = 0 ;
 20584  005AF0  0E00               	movlw	0
 20585  005AF2  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20586                           
 20587                           ;controlMemory_MC50.c: 196:     var_sys_NVM.securityBandType = 1;
 20588  005AF4  0E01               	movlw	1
 20589  005AF6  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20590                           
 20591                           ;controlMemory_MC50.c: 197:     var_sys_NVM.securityBandInOpen = 0;
 20592  005AF8  0E00               	movlw	0
 20593  005AFA  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20594                           
 20595                           ;controlMemory_MC50.c: 198:     var_sys_NVM.flashLightMode = 0;
 20596  005AFC  0E00               	movlw	0
 20597  005AFE  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20598                           
 20599                           ;controlMemory_MC50.c: 199:     var_sys_NVM.programmingDistance = 0;
 20600  005B00  0E00               	movlw	0
 20601  005B02  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20602                           
 20603                           ;controlMemory_MC50.c: 200:     var_sys_NVM.decelarationSensivity = 0;
 20604  005B04  0E00               	movlw	0
 20605  005B06  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20606                           
 20607                           ;controlMemory_MC50.c: 201:     var_sys_NVM.homemPresente = 0;
 20608  005B08  0E00               	movlw	0
 20609  005B0A  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20610                           
 20611                           ;controlMemory_MC50.c: 202:     var_sys_NVM.autoTimeWalkClose = 0;
 20612  005B0C  0E00               	movlw	0
 20613  005B0E  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20614                           
 20615                           ;controlMemory_MC50.c: 203:     var_sys_NVM.ligthTime = 3;
 20616  005B10  0E03               	movlw	3
 20617  005B12  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20618                           
 20619                           ;controlMemory_MC50.c: 204:     var_sys_NVM.folow_me = 0;
 20620  005B14  0E00               	movlw	0
 20621  005B16  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20622                           
 20623                           ;controlMemory_MC50.c: 205:     var_sys_NVM.electricBrake = 0;
 20624  005B18  0E00               	movlw	0
 20625  005B1A  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20626                           
 20627                           ;controlMemory_MC50.c: 206:     var_sys_NVM.autoTimeWalkClose = 0;
 20628  005B1C  0E00               	movlw	0
 20629  005B1E  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20630                           
 20631                           ;controlMemory_MC50.c: 207:     var_sys_NVM.Direction_motor = 1 ;
 20632  005B20  0E01               	movlw	1
 20633  005B22  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20634                           
 20635                           ; BSR set to: 0
 20636                           ;controlMemory_MC50.c: 210:     if (type == SC){
 20637  005B24  503A               	movf	ResetDefaultMemory@type^0,w,c
 20638  005B26  A4D8               	btfss	status,2,c
 20639  005B28  D014               	goto	l19865
 20640                           
 20641                           ; BSR set to: 0
 20642                           ;controlMemory_MC50.c: 212:         var_sys_NVM.motorSensitivity = 0;
 20643  005B2A  0E00               	movlw	0
 20644  005B2C  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20645                           
 20646                           ;controlMemory_MC50.c: 213:         var_sys_NVM.logicDigital = 0;
 20647  005B2E  0E00               	movlw	0
 20648  005B30  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20649                           
 20650                           ;controlMemory_MC50.c: 214:         var_sys_NVM.Stopboton = 0;
 20651  005B32  0E00               	movlw	0
 20652  005B34  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20653                           
 20654                           ;controlMemory_MC50.c: 215:         var_sys_NVM.autoTimeFullClose = 0;
 20655  005B36  0E00               	movlw	0
 20656  005B38  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20657                           
 20658                           ;controlMemory_MC50.c: 216:         var_sys_NVM.operationMode = 0;
 20659  005B3A  0E00               	movlw	0
 20660  005B3C  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20661                           
 20662                           ;controlMemory_MC50.c: 217:         var_sys_NVM.velocityDecelaration = 5;
 20663  005B3E  0E05               	movlw	5
 20664  005B40  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20665                           
 20666                           ;controlMemory_MC50.c: 218:         var_sys_NVM.flashRGBMode = 3;
 20667  005B42  0E03               	movlw	3
 20668  005B44  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20669                           
 20670                           ;controlMemory_MC50.c: 219:         var_sys_NVM.softstop = 0;
 20671  005B46  0E00               	movlw	0
 20672  005B48  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20673                           
 20674                           ;controlMemory_MC50.c: 220:         var_sys_NVM.softStart = 0;
 20675  005B4A  0E00               	movlw	0
 20676  005B4C  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20677                           
 20678                           ;controlMemory_MC50.c: 221:         var_sys_NVM.walkTime = 10;
 20679  005B4E  0E0A               	movlw	10
 20680  005B50  D039               	goto	L82
 20681  005B52                     l19865:
 20682                           
 20683                           ; BSR set to: 0
 20684  005B52  043A               	decf	ResetDefaultMemory@type^0,w,c
 20685  005B54  A4D8               	btfss	status,2,c
 20686  005B56  D01B               	goto	l19869
 20687                           
 20688                           ; BSR set to: 0
 20689                           ;controlMemory_MC50.c: 225:         var_sys_NVM.decelarationClose = 4;
 20690  005B58  0E04               	movlw	4
 20691  005B5A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20692                           
 20693                           ;controlMemory_MC50.c: 226:         var_sys_NVM.decelarationOpen = 4;
 20694  005B5C  0E04               	movlw	4
 20695  005B5E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20696                           
 20697                           ;controlMemory_MC50.c: 227:         var_sys_NVM.motorSensitivity = 4;
 20698  005B60  0E04               	movlw	4
 20699  005B62  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20700                           
 20701                           ;controlMemory_MC50.c: 228:         var_sys_NVM.logicDigital = 1;
 20702  005B64  0E01               	movlw	1
 20703  005B66  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20704                           
 20705                           ;controlMemory_MC50.c: 229:         var_sys_NVM.Stopboton = 1;
 20706  005B68  0E01               	movlw	1
 20707  005B6A  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20708                           
 20709                           ;controlMemory_MC50.c: 230:         var_sys_NVM.autoTimeFullClose = 0;
 20710  005B6C  0E00               	movlw	0
 20711  005B6E  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20712                           
 20713                           ;controlMemory_MC50.c: 231:         var_sys_NVM.operationMode = 0;
 20714  005B70  0E00               	movlw	0
 20715  005B72  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20716                           
 20717                           ;controlMemory_MC50.c: 232:         var_sys_NVM.velocityDecelaration = 5;
 20718  005B74  0E05               	movlw	5
 20719  005B76  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20720                           
 20721                           ;controlMemory_MC50.c: 233:         var_sys_NVM.flashRGBMode = 3;
 20722  005B78  0E03               	movlw	3
 20723  005B7A  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20724                           
 20725                           ;controlMemory_MC50.c: 234:         var_sys_NVM.softstop = 0;
 20726  005B7C  0E00               	movlw	0
 20727  005B7E  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20728                           
 20729                           ;controlMemory_MC50.c: 235:         var_sys_NVM.softStart = 5;
 20730  005B80  0E05               	movlw	5
 20731  005B82  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20732                           
 20733                           ;controlMemory_MC50.c: 236:         var_sys_NVM.walkTime = 0;
 20734  005B84  0E00               	movlw	0
 20735  005B86  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20736                           
 20737                           ;controlMemory_MC50.c: 237:         var_sys_NVM.Direction_motor = 0 ;
 20738  005B88  0E00               	movlw	0
 20739  005B8A  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20740                           
 20741                           ;controlMemory_MC50.c: 239:     }
 20742  005B8C  D01C               	goto	l19873
 20743  005B8E                     l19869:
 20744                           
 20745                           ; BSR set to: 0
 20746  005B8E  0E02               	movlw	2
 20747  005B90  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20748  005B92  A4D8               	btfss	status,2,c
 20749  005B94  D018               	goto	l19873
 20750                           
 20751                           ; BSR set to: 0
 20752                           ;controlMemory_MC50.c: 241:         var_sys_NVM.decelarationClose = 6;
 20753  005B96  0E06               	movlw	6
 20754  005B98  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20755                           
 20756                           ;controlMemory_MC50.c: 242:         var_sys_NVM.decelarationOpen = 2;
 20757  005B9A  0E02               	movlw	2
 20758  005B9C  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20759                           
 20760                           ;controlMemory_MC50.c: 243:         var_sys_NVM.motorSensitivity = 0;
 20761  005B9E  0E00               	movlw	0
 20762  005BA0  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20763                           
 20764                           ;controlMemory_MC50.c: 244:         var_sys_NVM.logicDigital = 0;
 20765  005BA2  0E00               	movlw	0
 20766  005BA4  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20767                           
 20768                           ;controlMemory_MC50.c: 245:         var_sys_NVM.Stopboton = 0;
 20769  005BA6  0E00               	movlw	0
 20770  005BA8  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20771                           
 20772                           ;controlMemory_MC50.c: 246:         var_sys_NVM.autoTimeFullClose = 0;
 20773  005BAA  0E00               	movlw	0
 20774  005BAC  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20775                           
 20776                           ;controlMemory_MC50.c: 247:         var_sys_NVM.operationMode = 2;
 20777  005BAE  0E02               	movlw	2
 20778  005BB0  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20779                           
 20780                           ;controlMemory_MC50.c: 248:         var_sys_NVM.velocityDecelaration = 5;
 20781  005BB2  0E05               	movlw	5
 20782  005BB4  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20783                           
 20784                           ;controlMemory_MC50.c: 249:         var_sys_NVM.flashRGBMode = 1;
 20785  005BB6  0E01               	movlw	1
 20786  005BB8  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20787                           
 20788                           ;controlMemory_MC50.c: 250:         var_sys_NVM.softstop = 5;
 20789  005BBA  0E05               	movlw	5
 20790  005BBC  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20791                           
 20792                           ;controlMemory_MC50.c: 251:         var_sys_NVM.softStart = 0;
 20793  005BBE  0E00               	movlw	0
 20794  005BC0  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20795                           
 20796                           ;controlMemory_MC50.c: 252:         var_sys_NVM.walkTime = 0;
 20797  005BC2  0E00               	movlw	0
 20798  005BC4                     L82:
 20799  005BC4  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20800  005BC6                     l19873:
 20801                           
 20802                           ; BSR set to: 0
 20803                           ;controlMemory_MC50.c: 260:     SaveNVM_VarSystem(pageMemoryE);
 20804  005BC6  0E01               	movlw	1
 20805  005BC8  ECB6  F044         	call	_SaveNVM_VarSystem
 20806                           
 20807                           ;controlMemory_MC50.c: 261:     SaveNVM_VarSystem(pageMemoryP);
 20808  005BCC  0E00               	movlw	0
 20809  005BCE  ECB6  F044         	call	_SaveNVM_VarSystem
 20810                           
 20811                           ;controlMemory_MC50.c: 266:     var_sys_NVM.learningTimeToClose = 0;
 20812  005BD2  0E00               	movlw	0
 20813  005BD4  0100               	movlb	0	; () banked
 20814  005BD6  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20815  005BD8  0E00               	movlw	0
 20816  005BDA  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20817  005BDC  0E00               	movlw	0
 20818  005BDE  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20819  005BE0  0E00               	movlw	0
 20820  005BE2  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20821                           
 20822                           ;controlMemory_MC50.c: 267:     var_sys_NVM.learningTimeToOpen = 0;
 20823  005BE4  0E00               	movlw	0
 20824  005BE6  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20825  005BE8  0E00               	movlw	0
 20826  005BEA  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20827  005BEC  0E00               	movlw	0
 20828  005BEE  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20829  005BF0  0E00               	movlw	0
 20830  005BF2  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20831                           
 20832                           ;controlMemory_MC50.c: 268:     var_sys_NVM.learningCurrentNormalClose = 0;
 20833  005BF4  0E00               	movlw	0
 20834  005BF6  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20835  005BF8  0E00               	movlw	0
 20836  005BFA  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20837                           
 20838                           ;controlMemory_MC50.c: 269:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20839  005BFC  0E00               	movlw	0
 20840  005BFE  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20841  005C00  0E00               	movlw	0
 20842  005C02  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20843                           
 20844                           ;controlMemory_MC50.c: 270:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20845  005C04  0E00               	movlw	0
 20846  005C06  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20847  005C08  0E00               	movlw	0
 20848  005C0A  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20849  005C0C  0E00               	movlw	0
 20850  005C0E  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20851  005C10  0E00               	movlw	0
 20852  005C12  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20853                           
 20854                           ;controlMemory_MC50.c: 271:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20855  005C14  0E00               	movlw	0
 20856  005C16  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20857  005C18  0E00               	movlw	0
 20858  005C1A  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20859  005C1C  0E00               	movlw	0
 20860  005C1E  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20861  005C20  0E00               	movlw	0
 20862  005C22  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20863                           
 20864                           ; BSR set to: 0
 20865                           ;controlMemory_MC50.c: 277:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20866  005C24  A48D               	btfss	141,2,c	;volatile
 20867                           
 20868                           ; BSR set to: 0
 20869  005C26  B28D               	btfsc	141,1,c	;volatile
 20870  005C28  D015               	goto	l19887
 20871                           
 20872                           ; BSR set to: 0
 20873  005C2A  A08E               	btfss	142,0,c	;volatile
 20874                           
 20875                           ; BSR set to: 0
 20876  005C2C  BA8D               	btfsc	141,5,c	;volatile
 20877  005C2E  D012               	goto	l19887
 20878                           
 20879                           ; BSR set to: 0
 20880                           ;controlMemory_MC50.c: 278:      var_sys.actualCounterMoves = 0;
 20881  005C30  0E00               	movlw	0
 20882  005C32  0101               	movlb	1	; () banked
 20883  005C34  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20884  005C36  0E00               	movlw	0
 20885  005C38  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20886  005C3A  0E00               	movlw	0
 20887  005C3C  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20888  005C3E  0E00               	movlw	0
 20889  005C40  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20890                           
 20891                           ;controlMemory_MC50.c: 279:      var_sys_NVM.counterMoves = 0;
 20892  005C42  0E00               	movlw	0
 20893  005C44  0100               	movlb	0	; () banked
 20894  005C46  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20895  005C48  0E00               	movlw	0
 20896  005C4A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20897  005C4C  0E00               	movlw	0
 20898  005C4E  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20899  005C50  0E00               	movlw	0
 20900  005C52  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20901  005C54                     l19887:
 20902                           
 20903                           ; BSR set to: 0
 20904                           ;controlMemory_MC50.c: 284:     SaveNVM_VarSystem(pageMemoryCounters);
 20905  005C54  0E02               	movlw	2
 20906  005C56  ECB6  F044         	call	_SaveNVM_VarSystem
 20907                           
 20908                           ;controlMemory_MC50.c: 285:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20909  005C5A  0E03               	movlw	3
 20910  005C5C  ECB6  F044         	call	_SaveNVM_VarSystem
 20911  005C60  0012               	return		;funcret
 20912  005C62                     __end_of_ResetDefaultMemory:
 20913                           	callstack 0
 20914                           
 20915 ;; *************** function _I2C1_Read1ByteRegister *****************
 20916 ;; Defined at:
 20917 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20918 ;; Parameters:    Size  Location     Type
 20919 ;;  address         1    wreg     unsigned char 
 20920 ;;  reg             1   33[COMRAM] unsigned char 
 20921 ;; Auto vars:     Size  Location     Type
 20922 ;;  address         1   34[COMRAM] unsigned char 
 20923 ;;  returnValue     1   35[COMRAM] unsigned char 
 20924 ;; Return value:  Size  Location     Type
 20925 ;;                  1    wreg      unsigned char 
 20926 ;; Registers used:
 20927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20928 ;; Tracked objects:
 20929 ;;		On entry : 31/0
 20930 ;;		On exit  : 33/2
 20931 ;;		Unchanged: 0/0
 20932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20933 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20934 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20936 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20937 ;;Total ram usage:        3 bytes
 20938 ;; Hardware stack levels used: 1
 20939 ;; Hardware stack levels required when called: 12
 20940 ;; This function calls:
 20941 ;;		_I2C1_Close
 20942 ;;		_I2C1_MasterWrite
 20943 ;;		_I2C1_Open
 20944 ;;		_I2C1_SetAddressNackCallback
 20945 ;;		_I2C1_SetBuffer
 20946 ;;		_I2C1_SetDataCompleteCallback
 20947 ;; This function is called by:
 20948 ;;		_loadNVM_VarSystem
 20949 ;; This function uses a non-reentrant model
 20950 ;;
 20951                           
 20952                           	psect	text77
 20953  008264                     __ptext77:
 20954                           	callstack 0
 20955  008264                     _I2C1_Read1ByteRegister:
 20956                           	callstack 17
 20957                           
 20958                           ;incstack = 0
 20959                           ;I2C1_Read1ByteRegister@address stored from wreg
 20960  008264  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 20961                           
 20962                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 20963  008266  0E00               	movlw	0
 20964  008268  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 20965  00826A                     l21025:
 20966  00826A  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 20967  00826C  EC91  F03C         	call	_I2C1_Open
 20968  008270  0900               	iorlw	0
 20969  008272  B4D8               	btfsc	status,2,c
 20970  008274  D7FA               	goto	l21025
 20971                           
 20972                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 20973  008276  0EA2               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 20974  008278  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20975  00827A  0E8B               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 20976  00827C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20977  00827E  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 20978  008280  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20979  008282  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20980  008284  ECF1  F047         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20981                           
 20982                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 20983  008288  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 20984  00828A  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20985  00828C  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20986  00828E  0E00               	movlw	0
 20987  008290  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20988  008292  0E01               	movlw	1
 20989  008294  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20990  008296  ECB4  F047         	call	_I2C1_SetBuffer	;wreg free
 20991                           
 20992                           ; BSR set to: 2
 20993                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 20994  00829A  0E00               	movlw	0
 20995  00829C  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20996  00829E  0E00               	movlw	0
 20997  0082A0  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20998  0082A2  0E00               	movlw	0
 20999  0082A4  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 21000  0082A6  0E00               	movlw	0
 21001  0082A8  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 21002  0082AA  ECD9  F047         	call	_I2C1_SetAddressNackCallback	;wreg free
 21003                           
 21004                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 21005  0082AE  ECB2  F048         	call	_I2C1_MasterWrite	;wreg free
 21006  0082B2                     l21035:
 21007  0082B2  EC26  F047         	call	_I2C1_Close	;wreg free
 21008  0082B6  06E8               	decf	wreg,f,c
 21009  0082B8  B4D8               	btfsc	status,2,c
 21010  0082BA  D7FB               	goto	l21035
 21011                           
 21012                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 21013  0082BC  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 21014  0082BE  0012               	return		;funcret
 21015  0082C0                     __end_of_I2C1_Read1ByteRegister:
 21016                           	callstack 0
 21017                           
 21018 ;; *************** function _getKeyPressed *****************
 21019 ;; Defined at:
 21020 ;;		line 217 in file "inputs_MC50.c"
 21021 ;; Parameters:    Size  Location     Type
 21022 ;;		None
 21023 ;; Auto vars:     Size  Location     Type
 21024 ;;  temp            1   15[COMRAM] char 
 21025 ;; Return value:  Size  Location     Type
 21026 ;;                  1    wreg      char 
 21027 ;; Registers used:
 21028 ;;		wreg, status,2, status,0
 21029 ;; Tracked objects:
 21030 ;;		On entry : 3E/1
 21031 ;;		On exit  : 3D/0
 21032 ;;		Unchanged: 0/0
 21033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21037 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21038 ;;Total ram usage:        1 bytes
 21039 ;; Hardware stack levels used: 1
 21040 ;; Hardware stack levels required when called: 4
 21041 ;; This function calls:
 21042 ;;		Nothing
 21043 ;; This function is called by:
 21044 ;;		_main
 21045 ;; This function uses a non-reentrant model
 21046 ;;
 21047                           
 21048                           	psect	text78
 21049  008F9A                     __ptext78:
 21050                           	callstack 0
 21051  008F9A                     _getKeyPressed:
 21052                           	callstack 26
 21053                           
 21054                           ;inputs_MC50.c: 218:     signed char temp=-1;
 21055                           
 21056                           ;incstack = 0
 21057  008F9A  6810               	setf	getKeyPressed@temp^0,c
 21058                           
 21059                           ;inputs_MC50.c: 219:     if(RFFull)
 21060  008F9C  0100               	movlb	0	; () banked
 21061  008F9E  518B               	movf	_RFFull& (0+255),w,b	;volatile
 21062  008FA0  B4D8               	btfsc	status,2,c
 21063  008FA2  D005               	goto	l16457
 21064                           
 21065                           ; BSR set to: 0
 21066                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 21067  008FA4  0102               	movlb	2	; () banked
 21068  008FA6  39CD               	swapf	(_BufferRF+7)& (0+255),w,b
 21069  008FA8  0B0F               	andlw	15
 21070  008FAA  0B0F               	andlw	15
 21071  008FAC  6E10               	movwf	getKeyPressed@temp^0,c
 21072  008FAE                     l16457:
 21073                           
 21074                           ;inputs_MC50.c: 223:     return temp;
 21075  008FAE  5010               	movf	getKeyPressed@temp^0,w,c
 21076  008FB0  0012               	return		;funcret
 21077  008FB2                     __end_of_getKeyPressed:
 21078                           	callstack 0
 21079                           
 21080 ;; *************** function _eusartparser *****************
 21081 ;; Defined at:
 21082 ;;		line 441 in file "eusartparser.c"
 21083 ;; Parameters:    Size  Location     Type
 21084 ;;  package         1   57[COMRAM] PTR struct package_t
 21085 ;;		 -> main@package(7), 
 21086 ;; Auto vars:     Size  Location     Type
 21087 ;;  a               7    0        struct package_t
 21088 ;; Return value:  Size  Location     Type
 21089 ;;                  1    wreg      void 
 21090 ;; Registers used:
 21091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 21092 ;; Tracked objects:
 21093 ;;		On entry : 3F/E
 21094 ;;		On exit  : 0/0
 21095 ;;		Unchanged: 0/0
 21096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21097 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21099 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21100 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21101 ;;Total ram usage:        3 bytes
 21102 ;; Hardware stack levels used: 1
 21103 ;; Hardware stack levels required when called: 14
 21104 ;; This function calls:
 21105 ;;		_SaveNVM_VarSystem
 21106 ;;		_read_eusartparser
 21107 ;;		_write_eusartparser
 21108 ;;		_write_package
 21109 ;; This function is called by:
 21110 ;;		_main
 21111 ;; This function uses a non-reentrant model
 21112 ;;
 21113                           
 21114                           	psect	text79
 21115  006DF8                     __ptext79:
 21116                           	callstack 0
 21117  006DF8                     _eusartparser:
 21118                           	callstack 16
 21119                           
 21120                           ; BSR set to: 14
 21121                           ;eusartparser.c: 442:         struct package_t a;;eusartparser.c: 443:         switch(pa
      +                          ckage->functioncode){
 21122                           
 21123                           ;incstack = 0
 21124  006DF8  D04E               	goto	l22715
 21125  006DFA                     l22687:
 21126                           
 21127                           ; BSR set to: 0
 21128                           ;eusartparser.c: 445:                 if(programmer_enable)
 21129  006DFA  5185               	movf	_programmer_enable& (0+255),w,b
 21130  006DFC  B4D8               	btfsc	status,2,c
 21131  006DFE  0012               	return	
 21132                           
 21133                           ; BSR set to: 0
 21134                           ;eusartparser.c: 446:                     read_eusartparser(package);
 21135  006E00  C03A  F018         	movff	eusartparser@package,read_eusartparser@package
 21136  006E04  EC46  F012         	call	_read_eusartparser	;wreg free
 21137  006E08  0012               	return	
 21138  006E0A                     l22691:
 21139                           
 21140                           ; BSR set to: 0
 21141                           ;eusartparser.c: 450:                 if(programmer_enable)
 21142  006E0A  5185               	movf	_programmer_enable& (0+255),w,b
 21143  006E0C  B4D8               	btfsc	status,2,c
 21144  006E0E  0012               	return	
 21145                           
 21146                           ; BSR set to: 0
 21147                           ;eusartparser.c: 451:                     write_eusartparser(*package);
 21148  006E10  503A               	movf	eusartparser@package^0,w,c
 21149  006E12  6ED9               	movwf	fsr2l,c
 21150  006E14  6ADA               	clrf	fsr2h,c
 21151  006E16  EE00  F010         	lfsr	0,write_eusartparser@package
 21152  006E1A  0E06               	movlw	6
 21153  006E1C                     u27651:
 21154  006E1C  CFDB FFEB          	movff	plusw2,plusw0
 21155  006E20  06E8               	decf	wreg,f,c
 21156  006E22  E2FC               	bc	u27651
 21157  006E24  EC32  F017         	call	_write_eusartparser	;wreg free
 21158  006E28  0012               	return	
 21159  006E2A                     l22695:
 21160                           
 21161                           ; BSR set to: 0
 21162                           ;eusartparser.c: 455:                 if(programmer_enable){
 21163  006E2A  5185               	movf	_programmer_enable& (0+255),w,b
 21164  006E2C  B4D8               	btfsc	status,2,c
 21165  006E2E  D008               	goto	l22701
 21166                           
 21167                           ; BSR set to: 0
 21168                           ;eusartparser.c: 456:                     SaveNVM_VarSystem(pageMemoryE);
 21169  006E30  0E01               	movlw	1
 21170  006E32  ECB6  F044         	call	_SaveNVM_VarSystem
 21171                           
 21172                           ;eusartparser.c: 457:                     SaveNVM_VarSystem(pageMemoryP);
 21173  006E36  0E00               	movlw	0
 21174  006E38  ECB6  F044         	call	_SaveNVM_VarSystem
 21175                           
 21176                           ;eusartparser.c: 458:                     programmer_enable=0;
 21177  006E3C  0E00               	movlw	0
 21178  006E3E  D005               	goto	L83
 21179  006E40                     l22701:
 21180                           
 21181                           ; BSR set to: 0
 21182                           ;eusartparser.c: 461:                     if((sm_state_Main_t)main_stateMachine.current_
      +                          state==st_standBy)
 21183  006E40  0101               	movlb	1	; () banked
 21184  006E42  51EF               	movf	_main_stateMachine& (0+255),w,b
 21185  006E44  A4D8               	btfss	status,2,c
 21186  006E46  D004               	goto	l22705
 21187                           
 21188                           ; BSR set to: 1
 21189                           ;eusartparser.c: 462:                         programmer_enable=1;
 21190  006E48  0E01               	movlw	1
 21191  006E4A                     L83:
 21192  006E4A  0100               	movlb	0	; () banked
 21193  006E4C  6F85               	movwf	_programmer_enable& (0+255),b
 21194  006E4E  D016               	goto	l22709
 21195  006E50                     l22705:
 21196                           
 21197                           ; BSR set to: 1
 21198                           ;eusartparser.c: 464:                         package->data.data16=(uint16_t)2;
 21199  006E50  503A               	movf	eusartparser@package^0,w,c
 21200  006E52  6ED9               	movwf	fsr2l,c
 21201  006E54  6ADA               	clrf	fsr2h,c
 21202  006E56  0E02               	movlw	2
 21203  006E58  26D9               	addwf	fsr2l,f,c
 21204  006E5A  0E02               	movlw	2
 21205  006E5C  6EDE               	movwf	postinc2,c
 21206  006E5E  0E00               	movlw	0
 21207  006E60  6EDD               	movwf	postdec2,c
 21208  006E62                     l22707:
 21209                           
 21210                           ;eusartparser.c: 465:                         write_package(*package);
 21211  006E62  503A               	movf	eusartparser@package^0,w,c
 21212  006E64  6ED9               	movwf	fsr2l,c
 21213  006E66  6ADA               	clrf	fsr2h,c
 21214  006E68  EE00  F011         	lfsr	0,write_package@package
 21215  006E6C  0E06               	movlw	6
 21216  006E6E                     u27681:
 21217  006E6E  CFDB FFEB          	movff	plusw2,plusw0
 21218  006E72  06E8               	decf	wreg,f,c
 21219  006E74  E2FC               	bc	u27681
 21220  006E76  EC63  F045         	call	_write_package	;wreg free
 21221                           
 21222                           ;eusartparser.c: 466:                         break;
 21223  006E7A  0012               	return	
 21224  006E7C                     l22709:
 21225                           
 21226                           ; BSR set to: 0
 21227                           ;eusartparser.c: 470:                 package->data.data16=(uint16_t)programmer_enable;
 21228  006E7C  5185               	movf	_programmer_enable& (0+255),w,b
 21229  006E7E  6FDC               	movwf	??_eusartparser& (0+255),b
 21230  006E80  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21231  006E82  503A               	movf	eusartparser@package^0,w,c
 21232  006E84  6ED9               	movwf	fsr2l,c
 21233  006E86  6ADA               	clrf	fsr2h,c
 21234  006E88  0E02               	movlw	2
 21235  006E8A  26D9               	addwf	fsr2l,f,c
 21236  006E8C  C0DC  FFDE         	movff	??_eusartparser,postinc2
 21237  006E90  C0DD  FFDD         	movff	??_eusartparser+1,postdec2
 21238  006E94  D7E6               	goto	l22707
 21239  006E96                     l22715:
 21240                           
 21241                           ; BSR set to: 14
 21242  006E96  503A               	movf	eusartparser@package^0,w,c
 21243  006E98  6ED9               	movwf	fsr2l,c
 21244  006E9A  6ADA               	clrf	fsr2h,c
 21245  006E9C  50DF               	movf	indf2,w,c
 21246  006E9E  0100               	movlb	0	; () banked
 21247  006EA0  6FDC               	movwf	??_eusartparser& (0+255),b
 21248  006EA2  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21249                           
 21250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21251                           ; Switch size 1, requested type "simple"
 21252                           ; Number of cases is 1, Range of values is 0 to 0
 21253                           ; switch strategies available:
 21254                           ; Name         Instructions Cycles
 21255                           ; simple_byte            4     3 (average)
 21256                           ;	Chosen strategy is simple_byte
 21257  006EA4  51DD               	movf	(??_eusartparser+1)& (0+255),w,b
 21258  006EA6  0A00               	xorlw	0	; case 0
 21259  006EA8  A4D8               	btfss	status,2,c
 21260  006EAA  0012               	return	
 21261                           
 21262                           ; BSR set to: 0
 21263                           ; Switch size 1, requested type "simple"
 21264                           ; Number of cases is 3, Range of values is 0 to 2
 21265                           ; switch strategies available:
 21266                           ; Name         Instructions Cycles
 21267                           ; simple_byte           10     6 (average)
 21268                           ;	Chosen strategy is simple_byte
 21269  006EAC  51DC               	movf	??_eusartparser& (0+255),w,b
 21270  006EAE  0A00               	xorlw	0	; case 0
 21271  006EB0  B4D8               	btfsc	status,2,c
 21272  006EB2  D7A3               	goto	l22687
 21273  006EB4  0A01               	xorlw	1	; case 1
 21274  006EB6  B4D8               	btfsc	status,2,c
 21275  006EB8  D7A8               	goto	l22691
 21276  006EBA  0A03               	xorlw	3	; case 2
 21277  006EBC  A4D8               	btfss	status,2,c
 21278  006EBE  0012               	return	
 21279  006EC0  D7B4               	goto	l22695
 21280  006EC2                     __end_of_eusartparser:
 21281                           	callstack 0
 21282                           
 21283 ;; *************** function _write_eusartparser *****************
 21284 ;; Defined at:
 21285 ;;		line 241 in file "eusartparser.c"
 21286 ;; Parameters:    Size  Location     Type
 21287 ;;  package         7   15[COMRAM] struct package_t
 21288 ;; Auto vars:     Size  Location     Type
 21289 ;;  debug2          2   32[COMRAM] volatile int 
 21290 ;;  debug           2   30[COMRAM] volatile int 
 21291 ;; Return value:  Size  Location     Type
 21292 ;;                  1    wreg      void 
 21293 ;; Registers used:
 21294 ;;		wreg, status,2, status,0
 21295 ;; Tracked objects:
 21296 ;;		On entry : 3F/0
 21297 ;;		On exit  : 3F/0
 21298 ;;		Unchanged: 0/0
 21299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21300 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21301 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21302 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21303 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21304 ;;Total ram usage:       19 bytes
 21305 ;; Hardware stack levels used: 1
 21306 ;; Hardware stack levels required when called: 4
 21307 ;; This function calls:
 21308 ;;		Nothing
 21309 ;; This function is called by:
 21310 ;;		_eusartparser
 21311 ;; This function uses a non-reentrant model
 21312 ;;
 21313                           
 21314                           	psect	text80
 21315  002E64                     __ptext80:
 21316                           	callstack 0
 21317  002E64                     _write_eusartparser:
 21318                           	callstack 25
 21319                           
 21320                           ; BSR set to: 0
 21321                           ;eusartparser.c: 242:         volatile int debug=(uint8_t)package.address;
 21322                           
 21323                           ;incstack = 0
 21324  002E64  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 21325  002E68  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 21326                           
 21327                           ; BSR set to: 0
 21328                           ;eusartparser.c: 243:         volatile int debug2=0x10;
 21329  002E6A  0E00               	movlw	0
 21330  002E6C  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 21331  002E6E  0E10               	movlw	16
 21332  002E70  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 21333                           
 21334                           ;eusartparser.c: 244:         switch((uint8_t)package.address){
 21335  002E72  D180               	goto	l16149
 21336  002E74                     l3577:
 21337                           
 21338                           ; BSR set to: 0
 21339                           ;eusartparser.c: 249:                 var_sys_NVM.decelarationOpen=package.data.data8[0]
      +                          ;
 21340  002E74  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 21341                           
 21342                           ;eusartparser.c: 250:                 var_sys_NVM.decelarationClose=package.data.data8[1
      +                          ];
 21343  002E78  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 21344                           
 21345                           ;eusartparser.c: 251:                 break;
 21346  002E7C  0012               	return	
 21347  002E7E                     l3579:
 21348                           
 21349                           ; BSR set to: 0
 21350                           ;eusartparser.c: 255:                 var_sys_NVM.motorPower=package.data.data8[0];
 21351  002E7E  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 21352                           
 21353                           ;eusartparser.c: 256:                 var_sys_NVM.motorSensitivity=package.data.data8[1]
      +                          ;
 21354  002E82  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 21355                           
 21356                           ;eusartparser.c: 257:                 break;
 21357  002E86  0012               	return	
 21358  002E88                     l3580:
 21359                           
 21360                           ; BSR set to: 0
 21361                           ;eusartparser.c: 261:                 var_sys_NVM.walkTime=package.data.data8[1];
 21362  002E88  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 21363                           
 21364                           ;eusartparser.c: 262:                 break;
 21365  002E8C  0012               	return	
 21366  002E8E                     l3582:
 21367                           
 21368                           ; BSR set to: 0
 21369                           ;eusartparser.c: 267:                 var_sys_NVM.autoTimeFullClose=package.data.data8[0
      +                          ];
 21370  002E8E  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 21371                           
 21372                           ;eusartparser.c: 268:                 var_sys_NVM.autoTimeWalkClose=package.data.data8[1
      +                          ];
 21373  002E92  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 21374                           
 21375                           ;eusartparser.c: 269:                 break;
 21376  002E96  0012               	return	
 21377  002E98                     l3584:
 21378                           
 21379                           ; BSR set to: 0
 21380                           ;eusartparser.c: 274:                 var_sys_NVM.photoCellIsON=package.data.data8[0];
 21381  002E98  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 21382                           
 21383                           ;eusartparser.c: 275:                 var_sys_NVM.photoCellInOpen=package.data.data8[1];
 21384  002E9C  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 21385                           
 21386                           ;eusartparser.c: 276:                 break;
 21387  002EA0  0012               	return	
 21388  002EA2                     l3585:
 21389                           
 21390                           ; BSR set to: 0
 21391                           ;eusartparser.c: 280:                 var_sys_NVM.securityBandIsON=package.data.data8[0]
      +                          ;
 21392  002EA2  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 21393                           
 21394                           ;eusartparser.c: 281:                 var_sys_NVM.securityBandType=package.data.data8[1]
      +                          ;
 21395  002EA6  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 21396                           
 21397                           ;eusartparser.c: 282:                 break;
 21398  002EAA  0012               	return	
 21399  002EAC                     l3586:
 21400                           
 21401                           ; BSR set to: 0
 21402                           ;eusartparser.c: 286:                 var_sys_NVM.securityBandInOpen=package.data.data8[
      +                          1];
 21403  002EAC  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 21404                           
 21405                           ;eusartparser.c: 287:                 break;
 21406  002EB0  0012               	return	
 21407  002EB2                     l3587:
 21408                           
 21409                           ; BSR set to: 0
 21410                           ;eusartparser.c: 291:                 var_sys_NVM.operationMode=package.data.data8[1];
 21411  002EB2  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 21412                           
 21413                           ;eusartparser.c: 292:                 break;
 21414  002EB6  0012               	return	
 21415  002EB8                     l3588:
 21416                           
 21417                           ; BSR set to: 0
 21418                           ;eusartparser.c: 296:                 var_sys_NVM.flashLightMode=package.data.data8[1];
 21419  002EB8  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 21420                           
 21421                           ;eusartparser.c: 297:                 break;
 21422  002EBC  0012               	return	
 21423  002EBE                     l3589:
 21424                           
 21425                           ; BSR set to: 0
 21426                           ;eusartparser.c: 301:                 var_sys_NVM.programmingDistance=package.data.data8
      +                          [1];
 21427  002EBE  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 21428                           
 21429                           ;eusartparser.c: 302:                 break;
 21430  002EC2  0012               	return	
 21431  002EC4                     l3590:
 21432                           
 21433                           ; BSR set to: 0
 21434                           ;eusartparser.c: 306:                 var_sys_NVM.decelarationSensivity=package.data.dat
      +                          a8[1];
 21435  002EC4  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 21436                           
 21437                           ;eusartparser.c: 307:                 break;
 21438  002EC8  0012               	return	
 21439  002ECA                     l3591:
 21440                           
 21441                           ; BSR set to: 0
 21442                           ;eusartparser.c: 312:                 var_sys_NVM.homemPresente=package.data.data8[1];
 21443  002ECA  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 21444                           
 21445                           ;eusartparser.c: 313:                 break;
 21446  002ECE  0012               	return	
 21447  002ED0                     l3593:
 21448                           
 21449                           ; BSR set to: 0
 21450                           ;eusartparser.c: 318:                 var_sys_NVM.logicDigital=package.data.data8[1];
 21451  002ED0  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 21452                           
 21453                           ;eusartparser.c: 319:                 break;
 21454  002ED4  0012               	return	
 21455  002ED6                     l3594:
 21456                           
 21457                           ; BSR set to: 0
 21458                           ;eusartparser.c: 323:                 var_sys_NVM.softStart=package.data.data8[0];
 21459  002ED6  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 21460                           
 21461                           ;eusartparser.c: 324:                 var_sys_NVM.softstop=package.data.data8[1];
 21462  002EDA  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 21463                           
 21464                           ;eusartparser.c: 325:                 break;
 21465  002EDE  0012               	return	
 21466  002EE0                     l3596:
 21467                           
 21468                           ; BSR set to: 0
 21469                           ;eusartparser.c: 330:                 var_sys_NVM.ligthTime=package.data.data8[1];
 21470  002EE0  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 21471                           
 21472                           ;eusartparser.c: 331:                 break;
 21473  002EE4  0012               	return	
 21474  002EE6                     l3598:
 21475                           
 21476                           ; BSR set to: 0
 21477                           ;eusartparser.c: 336:                 var_sys_NVM.folow_me=package.data.data8[1];
 21478  002EE6  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 21479                           
 21480                           ;eusartparser.c: 337:                 break;
 21481  002EEA  0012               	return	
 21482  002EEC                     l3599:
 21483                           
 21484                           ; BSR set to: 0
 21485                           ;eusartparser.c: 341:                 var_sys_NVM.Stopboton=package.data.data8[1];
 21486  002EEC  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 21487                           
 21488                           ;eusartparser.c: 342:                 break;
 21489  002EF0  0012               	return	
 21490  002EF2                     l3600:
 21491                           
 21492                           ; BSR set to: 0
 21493                           ;eusartparser.c: 346:                 var_sys_NVM.electricBrake=package.data.data8[1];
 21494  002EF2  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 21495                           
 21496                           ;eusartparser.c: 347:                 break;
 21497  002EF6  0012               	return	
 21498  002EF8                     l3601:
 21499                           
 21500                           ; BSR set to: 0
 21501                           ;eusartparser.c: 351:                 var_sys_NVM.velocityDecelaration=package.data.data
      +                          8[1];
 21502  002EF8  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 21503                           
 21504                           ;eusartparser.c: 352:                 break;
 21505  002EFC  0012               	return	
 21506  002EFE                     l3603:
 21507                           
 21508                           ; BSR set to: 0
 21509                           ;eusartparser.c: 357:                 var_sys_NVM.flashRGBMode=package.data.data8[1];
 21510  002EFE  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 21511                           
 21512                           ;eusartparser.c: 358:                 break;
 21513  002F02  0012               	return	
 21514  002F04                     l3604:
 21515                           
 21516                           ; BSR set to: 0
 21517                           ;eusartparser.c: 362:                 var_sys_NVM.Direction_motor=package.data.data8[1];
 21518  002F04  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 21519                           
 21520                           ;eusartparser.c: 363:                 break;
 21521  002F08  0012               	return	
 21522  002F0A                     l3605:
 21523                           
 21524                           ; BSR set to: 0
 21525                           ;eusartparser.c: 367:                 var_sys_NVM.TypeofMotor=package.data.data8[1];
 21526  002F0A  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 21527                           
 21528                           ;eusartparser.c: 368:                 break;
 21529  002F0E  0012               	return	
 21530  002F10                     l3606:
 21531                           
 21532                           ; BSR set to: 0
 21533                           ;eusartparser.c: 372:                 var_sys_NVM.positionRemotesFull=package.data.data8
      +                          [0];
 21534  002F10  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 21535                           
 21536                           ;eusartparser.c: 373:                 var_sys_NVM.positionRemotesWalk=package.data.data8
      +                          [1];
 21537  002F14  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 21538                           
 21539                           ;eusartparser.c: 374:                 break;
 21540  002F18  0012               	return	
 21541  002F1A                     l16127:
 21542                           
 21543                           ; BSR set to: 0
 21544                           ;eusartparser.c: 377:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21545  002F1A  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21546  002F1C  6E17               	movwf	??_write_eusartparser^0,c
 21547  002F1E  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21548  002F20  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21549  002F22  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21550  002F24  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21551  002F26  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21552  002F2A  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21553  002F2E  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21554  002F30  6A17               	clrf	??_write_eusartparser^0,c
 21555  002F32  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21556  002F34  1017               	iorwf	??_write_eusartparser^0,w,c
 21557  002F36  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21558  002F38  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21559  002F3A  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21560  002F3C  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21561  002F3E  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21562  002F40  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21563  002F42  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21564  002F44  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21565  002F46  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21566  002F48  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21567                           
 21568                           ;eusartparser.c: 378:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21569  002F4A  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21570  002F4C  6E17               	movwf	??_write_eusartparser^0,c
 21571  002F4E  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21572  002F50  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21573  002F52  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21574  002F54  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21575  002F56  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21576  002F5A  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21577  002F5E  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21578  002F60  6A17               	clrf	??_write_eusartparser^0,c
 21579  002F62  1C17               	comf	??_write_eusartparser^0,w,c
 21580  002F64  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21581  002F66  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21582  002F68  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21583  002F6A  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21584  002F6C  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21585  002F6E  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21586  002F70  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21587  002F72  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21588  002F74  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21589  002F76  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21590  002F78  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21591  002F7A  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21592  002F7C  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21593  002F7E  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21594  002F80  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21595  002F82  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21596  002F84  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21597  002F86  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21598  002F88  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21599                           
 21600                           ;eusartparser.c: 379:                 break;
 21601  002F8A  0012               	return	
 21602  002F8C                     l16129:
 21603                           
 21604                           ; BSR set to: 0
 21605                           ;eusartparser.c: 381:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21606  002F8C  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21607  002F8E  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21608  002F90  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21609  002F92  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21610  002F94  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21611  002F96  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21612  002F98  0E00               	movlw	0
 21613  002F9A  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21614  002F9C  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21615  002F9E  0E00               	movlw	0
 21616  002FA0  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21617  002FA2  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21618                           
 21619                           ;eusartparser.c: 382:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21620  002FA4  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21621  002FA6  6E17               	movwf	??_write_eusartparser^0,c
 21622  002FA8  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21623  002FAA  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21624  002FAC  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21625  002FAE  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21626  002FB0  1C17               	comf	??_write_eusartparser^0,w,c
 21627  002FB2  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21628  002FB4  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21629  002FB6  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21630  002FB8  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21631  002FBA  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21632  002FBC  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21633  002FBE  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21634  002FC0  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21635  002FC2  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21636  002FC4  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21637  002FC6  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21638  002FC8  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21639  002FCA  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21640  002FCC  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21641  002FCE  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21642  002FD0  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21643  002FD2  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21644  002FD4  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21645  002FD6  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21646                           
 21647                           ;eusartparser.c: 383:                 break;
 21648  002FD8  0012               	return	
 21649  002FDA                     l3609:
 21650                           
 21651                           ; BSR set to: 0
 21652                           ;eusartparser.c: 388:                 var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 21653  002FDA  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 21654                           
 21655                           ;eusartparser.c: 389:                 break;
 21656  002FDE  0012               	return	
 21657  002FE0                     l16131:
 21658                           
 21659                           ; BSR set to: 0
 21660                           ;eusartparser.c: 392:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21661  002FE0  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21662  002FE2  6E17               	movwf	??_write_eusartparser^0,c
 21663  002FE4  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21664  002FE6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21665  002FE8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21666  002FEA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21667  002FEC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21668  002FF0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21669  002FF4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21670  002FF6  6A17               	clrf	??_write_eusartparser^0,c
 21671  002FF8  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21672  002FFA  1017               	iorwf	??_write_eusartparser^0,w,c
 21673  002FFC  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21674  002FFE  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21675  003000  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21676  003002  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21677  003004  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21678  003006  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21679  003008  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21680  00300A  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21681  00300C  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21682  00300E  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21683                           
 21684                           ;eusartparser.c: 393:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 21685  003010  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21686  003012  6E17               	movwf	??_write_eusartparser^0,c
 21687  003014  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21688  003016  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21689  003018  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21690  00301A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21691  00301C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21692  003020  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21693  003024  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21694  003026  6A17               	clrf	??_write_eusartparser^0,c
 21695  003028  1C17               	comf	??_write_eusartparser^0,w,c
 21696  00302A  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21697  00302C  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21698  00302E  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21699  003030  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21700  003032  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21701  003034  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21702  003036  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21703  003038  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21704  00303A  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21705  00303C  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21706  00303E  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21707  003040  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21708  003042  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21709  003044  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21710  003046  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21711  003048  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21712  00304A  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21713  00304C  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21714  00304E  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21715                           
 21716                           ;eusartparser.c: 394:                 break;
 21717  003050  0012               	return	
 21718  003052                     l16133:
 21719                           
 21720                           ; BSR set to: 0
 21721                           ;eusartparser.c: 396:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21722  003052  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21723  003054  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21724  003056  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21725  003058  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21726  00305A  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21727  00305C  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21728  00305E  0E00               	movlw	0
 21729  003060  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21730  003062  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21731  003064  0E00               	movlw	0
 21732  003066  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21733  003068  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21734                           
 21735                           ;eusartparser.c: 397:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(0*16));
 21736  00306A  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21737  00306C  6E17               	movwf	??_write_eusartparser^0,c
 21738  00306E  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21739  003070  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21740  003072  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21741  003074  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21742  003076  1C17               	comf	??_write_eusartparser^0,w,c
 21743  003078  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21744  00307A  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21745  00307C  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21746  00307E  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21747  003080  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21748  003082  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21749  003084  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21750  003086  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21751  003088  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21752  00308A  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21753  00308C  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21754  00308E  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21755  003090  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21756  003092  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21757  003094  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21758  003096  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21759  003098  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21760  00309A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21761  00309C  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21762                           
 21763                           ;eusartparser.c: 398:                 break;
 21764  00309E  0012               	return	
 21765  0030A0                     l16135:
 21766                           
 21767                           ; BSR set to: 0
 21768                           ;eusartparser.c: 401:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 21769  0030A0  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21770  0030A2  6E17               	movwf	??_write_eusartparser^0,c
 21771  0030A4  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21772  0030A6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21773  0030A8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21774  0030AA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21775  0030AC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21776  0030B0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21777  0030B4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21778  0030B6  6A17               	clrf	??_write_eusartparser^0,c
 21779  0030B8  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21780  0030BA  1017               	iorwf	??_write_eusartparser^0,w,c
 21781  0030BC  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21782  0030BE  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21783  0030C0  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21784  0030C2  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21785  0030C4  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21786  0030C6  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21787  0030C8  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21788  0030CA  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21789  0030CC  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21790  0030CE  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21791                           
 21792                           ;eusartparser.c: 402:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21793  0030D0  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21794  0030D2  6E17               	movwf	??_write_eusartparser^0,c
 21795  0030D4  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21796  0030D6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21797  0030D8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21798  0030DA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21799  0030DC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21800  0030E0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21801  0030E4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21802  0030E6  6A17               	clrf	??_write_eusartparser^0,c
 21803  0030E8  1C17               	comf	??_write_eusartparser^0,w,c
 21804  0030EA  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21805  0030EC  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21806  0030EE  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21807  0030F0  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21808  0030F2  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21809  0030F4  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21810  0030F6  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21811  0030F8  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21812  0030FA  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21813  0030FC  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21814  0030FE  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21815  003100  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21816  003102  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21817  003104  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21818  003106  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21819  003108  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21820  00310A  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21821  00310C  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21822  00310E  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21823                           
 21824                           ;eusartparser.c: 403:                 break;
 21825  003110  0012               	return	
 21826  003112                     l16137:
 21827                           
 21828                           ; BSR set to: 0
 21829                           ;eusartparser.c: 405:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 21830  003112  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21831  003114  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21832  003116  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21833  003118  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21834  00311A  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21835  00311C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21836  00311E  0E00               	movlw	0
 21837  003120  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21838  003122  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21839  003124  0E00               	movlw	0
 21840  003126  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21841  003128  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21842                           
 21843                           ;eusartparser.c: 406:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21844  00312A  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21845  00312C  6E17               	movwf	??_write_eusartparser^0,c
 21846  00312E  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21847  003130  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21848  003132  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21849  003134  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21850  003136  1C17               	comf	??_write_eusartparser^0,w,c
 21851  003138  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21852  00313A  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21853  00313C  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21854  00313E  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21855  003140  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21856  003142  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21857  003144  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21858  003146  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21859  003148  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21860  00314A  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21861  00314C  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21862  00314E  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21863  003150  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21864  003152  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21865  003154  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21866  003156  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21867  003158  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21868  00315A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21869  00315C  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21870                           
 21871                           ;eusartparser.c: 407:                 break;
 21872  00315E  0012               	return	
 21873  003160                     l3614:
 21874                           
 21875                           ; BSR set to: 0
 21876                           ;eusartparser.c: 410:                 var_sys_NVM.learningCurrentNormalClose=package.dat
      +                          a.data16;
 21877  003160  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 21878  003164  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 21879                           
 21880                           ;eusartparser.c: 411:                 break;
 21881  003168  0012               	return	
 21882  00316A                     l3615:
 21883                           
 21884                           ; BSR set to: 0
 21885                           ;eusartparser.c: 414:                 var_sys_NVM.learningCurrentNormalOpen=package.data
      +                          .data16;
 21886  00316A  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 21887  00316E  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 21888                           
 21889                           ;eusartparser.c: 415:                 break;
 21890  003172  0012               	return	
 21891  003174                     l16149:
 21892                           
 21893                           ; BSR set to: 0
 21894  003174  5011               	movf	(write_eusartparser@package+1)^0,w,c
 21895  003176  6E17               	movwf	??_write_eusartparser^0,c
 21896  003178  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21897                           
 21898                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21899                           ; Switch size 1, requested type "simple"
 21900                           ; Number of cases is 1, Range of values is 0 to 0
 21901                           ; switch strategies available:
 21902                           ; Name         Instructions Cycles
 21903                           ; simple_byte            4     3 (average)
 21904                           ;	Chosen strategy is simple_byte
 21905  00317A  5018               	movf	(??_write_eusartparser+1)^0,w,c
 21906  00317C  0A00               	xorlw	0	; case 0
 21907  00317E  A4D8               	btfss	status,2,c
 21908  003180  0012               	return	
 21909                           
 21910                           ; BSR set to: 0
 21911                           ; Switch size 1, requested type "simple"
 21912                           ; Number of cases is 43, Range of values is 0 to 51
 21913                           ; switch strategies available:
 21914                           ; Name         Instructions Cycles
 21915                           ; simple_byte          130    66 (average)
 21916                           ;	Chosen strategy is simple_byte
 21917  003182  5017               	movf	??_write_eusartparser^0,w,c
 21918  003184  0A00               	xorlw	0	; case 0
 21919  003186  B4D8               	btfsc	status,2,c
 21920  003188  D675               	goto	l3577
 21921  00318A  0A02               	xorlw	2	; case 2
 21922  00318C  B4D8               	btfsc	status,2,c
 21923  00318E  D67F               	goto	l3582
 21924  003190  0A01               	xorlw	1	; case 3
 21925  003192  B4D8               	btfsc	status,2,c
 21926  003194  D6A5               	goto	l3596
 21927  003196  0A06               	xorlw	6	; case 5
 21928  003198  B4D8               	btfsc	status,2,c
 21929  00319A  D67E               	goto	l3584
 21930  00319C  0A02               	xorlw	2	; case 7
 21931  00319E  B4D8               	btfsc	status,2,c
 21932  0031A0  D697               	goto	l3593
 21933  0031A2  0A0F               	xorlw	15	; case 8
 21934  0031A4  B4D8               	btfsc	status,2,c
 21935  0031A6  D6AB               	goto	l3603
 21936  0031A8  0A02               	xorlw	2	; case 10
 21937  0031AA  B4D8               	btfsc	status,2,c
 21938  0031AC  D69C               	goto	l3598
 21939  0031AE  0A1A               	xorlw	26	; case 16
 21940  0031B0  B4D8               	btfsc	status,2,c
 21941  0031B2  D660               	goto	l3577
 21942  0031B4  0A01               	xorlw	1	; case 17
 21943  0031B6  B4D8               	btfsc	status,2,c
 21944  0031B8  D662               	goto	l3579
 21945  0031BA  0A03               	xorlw	3	; case 18
 21946  0031BC  B4D8               	btfsc	status,2,c
 21947  0031BE  D664               	goto	l3580
 21948  0031C0  0A01               	xorlw	1	; case 19
 21949  0031C2  B4D8               	btfsc	status,2,c
 21950  0031C4  D664               	goto	l3582
 21951  0031C6  0A07               	xorlw	7	; case 20
 21952  0031C8  B4D8               	btfsc	status,2,c
 21953  0031CA  D666               	goto	l3584
 21954  0031CC  0A01               	xorlw	1	; case 21
 21955  0031CE  B4D8               	btfsc	status,2,c
 21956  0031D0  D668               	goto	l3585
 21957  0031D2  0A03               	xorlw	3	; case 22
 21958  0031D4  B4D8               	btfsc	status,2,c
 21959  0031D6  D66A               	goto	l3586
 21960  0031D8  0A01               	xorlw	1	; case 23
 21961  0031DA  B4D8               	btfsc	status,2,c
 21962  0031DC  D66A               	goto	l3587
 21963  0031DE  0A0F               	xorlw	15	; case 24
 21964  0031E0  B4D8               	btfsc	status,2,c
 21965  0031E2  D66A               	goto	l3588
 21966  0031E4  0A01               	xorlw	1	; case 25
 21967  0031E6  B4D8               	btfsc	status,2,c
 21968  0031E8  D66A               	goto	l3589
 21969  0031EA  0A03               	xorlw	3	; case 26
 21970  0031EC  B4D8               	btfsc	status,2,c
 21971  0031EE  D66A               	goto	l3590
 21972  0031F0  0A01               	xorlw	1	; case 27
 21973  0031F2  B4D8               	btfsc	status,2,c
 21974  0031F4  D66A               	goto	l3591
 21975  0031F6  0A07               	xorlw	7	; case 28
 21976  0031F8  B4D8               	btfsc	status,2,c
 21977  0031FA  D66A               	goto	l3593
 21978  0031FC  0A01               	xorlw	1	; case 29
 21979  0031FE  B4D8               	btfsc	status,2,c
 21980  003200  D66A               	goto	l3594
 21981  003202  0A03               	xorlw	3	; case 30
 21982  003204  B4D8               	btfsc	status,2,c
 21983  003206  D66C               	goto	l3596
 21984  003208  0A01               	xorlw	1	; case 31
 21985  00320A  B4D8               	btfsc	status,2,c
 21986  00320C  D66C               	goto	l3598
 21987  00320E  0A3F               	xorlw	63	; case 32
 21988  003210  B4D8               	btfsc	status,2,c
 21989  003212  D66C               	goto	l3599
 21990  003214  0A01               	xorlw	1	; case 33
 21991  003216  B4D8               	btfsc	status,2,c
 21992  003218  D66C               	goto	l3600
 21993  00321A  0A03               	xorlw	3	; case 34
 21994  00321C  B4D8               	btfsc	status,2,c
 21995  00321E  D66C               	goto	l3601
 21996  003220  0A01               	xorlw	1	; case 35
 21997  003222  B4D8               	btfsc	status,2,c
 21998  003224  D66C               	goto	l3603
 21999  003226  0A07               	xorlw	7	; case 36
 22000  003228  B4D8               	btfsc	status,2,c
 22001  00322A  D66C               	goto	l3604
 22002  00322C  0A01               	xorlw	1	; case 37
 22003  00322E  B4D8               	btfsc	status,2,c
 22004  003230  D66C               	goto	l3605
 22005  003232  0A03               	xorlw	3	; case 38
 22006  003234  B4D8               	btfsc	status,2,c
 22007  003236  D66C               	goto	l3606
 22008  003238  0A01               	xorlw	1	; case 39
 22009  00323A  B4D8               	btfsc	status,2,c
 22010  00323C  D66E               	goto	l16127
 22011  00323E  0A0F               	xorlw	15	; case 40
 22012  003240  B4D8               	btfsc	status,2,c
 22013  003242  D6A4               	goto	l16129
 22014  003244  0A01               	xorlw	1	; case 41
 22015  003246  B4D8               	btfsc	status,2,c
 22016  003248  D6C8               	goto	l3609
 22017  00324A  0A03               	xorlw	3	; case 42
 22018  00324C  B4D8               	btfsc	status,2,c
 22019  00324E  D6C8               	goto	l16131
 22020  003250  0A01               	xorlw	1	; case 43
 22021  003252  B4D8               	btfsc	status,2,c
 22022  003254  D6FE               	goto	l16133
 22023  003256  0A07               	xorlw	7	; case 44
 22024  003258  B4D8               	btfsc	status,2,c
 22025  00325A  D722               	goto	l16135
 22026  00325C  0A01               	xorlw	1	; case 45
 22027  00325E  B4D8               	btfsc	status,2,c
 22028  003260  D758               	goto	l16137
 22029  003262  0A03               	xorlw	3	; case 46
 22030  003264  B4D8               	btfsc	status,2,c
 22031  003266  D77C               	goto	l3614
 22032  003268  0A01               	xorlw	1	; case 47
 22033  00326A  B4D8               	btfsc	status,2,c
 22034  00326C  D77E               	goto	l3615
 22035  00326E  0A1F               	xorlw	31	; case 48
 22036  003270  B4D8               	btfsc	status,2,c
 22037  003272  D716               	goto	l16135
 22038  003274  0A01               	xorlw	1	; case 49
 22039  003276  B4D8               	btfsc	status,2,c
 22040  003278  D74C               	goto	l16137
 22041  00327A  0A03               	xorlw	3	; case 50
 22042  00327C  B4D8               	btfsc	status,2,c
 22043  00327E  D710               	goto	l16135
 22044  003280  0A01               	xorlw	1	; case 51
 22045  003282  A4D8               	btfss	status,2,c
 22046  003284  0012               	return	
 22047  003286  D745               	goto	l16137
 22048  003288                     __end_of_write_eusartparser:
 22049                           	callstack 0
 22050                           
 22051 ;; *************** function _read_eusartparser *****************
 22052 ;; Defined at:
 22053 ;;		line 5 in file "eusartparser.c"
 22054 ;; Parameters:    Size  Location     Type
 22055 ;;  package         1   23[COMRAM] PTR struct package_t
 22056 ;;		 -> main@package(7), 
 22057 ;; Auto vars:     Size  Location     Type
 22058 ;;		None
 22059 ;; Return value:  Size  Location     Type
 22060 ;;                  1    wreg      void 
 22061 ;; Registers used:
 22062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22063 ;; Tracked objects:
 22064 ;;		On entry : 3F/0
 22065 ;;		On exit  : 0/0
 22066 ;;		Unchanged: 0/0
 22067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22068 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22070 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22071 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22072 ;;Total ram usage:        3 bytes
 22073 ;; Hardware stack levels used: 1
 22074 ;; Hardware stack levels required when called: 6
 22075 ;; This function calls:
 22076 ;;		_write_package
 22077 ;; This function is called by:
 22078 ;;		_eusartparser
 22079 ;; This function uses a non-reentrant model
 22080 ;;
 22081                           
 22082                           	psect	text81
 22083  00248C                     __ptext81:
 22084                           	callstack 0
 22085  00248C                     _read_eusartparser:
 22086                           	callstack 23
 22087                           
 22088                           ; BSR set to: 0
 22089                           ;eusartparser.c: 6:         switch(package->address){
 22090                           
 22091                           ; BSR set to: 0
 22092                           ;incstack = 0
 22093  00248C  D203               	goto	l16117
 22094  00248E                     l15981:
 22095                           
 22096                           ; BSR set to: 0
 22097                           ;eusartparser.c: 11:                 package->data.data8[1]=var_sys_NVM.decelarationClos
      +                          e;
 22098  00248E  5018               	movf	read_eusartparser@package^0,w,c
 22099  002490  6ED9               	movwf	fsr2l,c
 22100  002492  6ADA               	clrf	fsr2h,c
 22101  002494  0E03               	movlw	3
 22102  002496  26D9               	addwf	fsr2l,f,c
 22103  002498  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 22104                           
 22105                           ;eusartparser.c: 12:                 package->data.data8[0]=var_sys_NVM.decelarationOpen
      +                          ;
 22106  00249C  5018               	movf	read_eusartparser@package^0,w,c
 22107  00249E  6ED9               	movwf	fsr2l,c
 22108  0024A0  6ADA               	clrf	fsr2h,c
 22109  0024A2  0E02               	movlw	2
 22110  0024A4  26D9               	addwf	fsr2l,f,c
 22111  0024A6  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 22112  0024AA                     l15983:
 22113                           
 22114                           ; BSR set to: 0
 22115                           ;eusartparser.c: 13:                 write_package(*package);
 22116  0024AA  5018               	movf	read_eusartparser@package^0,w,c
 22117  0024AC  6ED9               	movwf	fsr2l,c
 22118  0024AE  6ADA               	clrf	fsr2h,c
 22119  0024B0  EE00  F011         	lfsr	0,write_package@package
 22120  0024B4  0E06               	movlw	6
 22121  0024B6                     u18001:
 22122  0024B6  CFDB FFEB          	movff	plusw2,plusw0
 22123  0024BA  06E8               	decf	wreg,f,c
 22124  0024BC  E2FC               	bc	u18001
 22125  0024BE  EC63  F045         	call	_write_package	;wreg free
 22126                           
 22127                           ;eusartparser.c: 14:                 break;
 22128  0024C2  0012               	return	
 22129  0024C4                     l15985:
 22130                           
 22131                           ; BSR set to: 0
 22132                           ;eusartparser.c: 18:                 package->data.data8[1]=var_sys_NVM.motorSensitivity
      +                          ;
 22133  0024C4  5018               	movf	read_eusartparser@package^0,w,c
 22134  0024C6  6ED9               	movwf	fsr2l,c
 22135  0024C8  6ADA               	clrf	fsr2h,c
 22136  0024CA  0E03               	movlw	3
 22137  0024CC  26D9               	addwf	fsr2l,f,c
 22138  0024CE  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 22139                           
 22140                           ;eusartparser.c: 19:                 package->data.data8[0]=var_sys_NVM.motorPower;
 22141  0024D2  5018               	movf	read_eusartparser@package^0,w,c
 22142  0024D4  6ED9               	movwf	fsr2l,c
 22143  0024D6  6ADA               	clrf	fsr2h,c
 22144  0024D8  0E02               	movlw	2
 22145  0024DA  26D9               	addwf	fsr2l,f,c
 22146  0024DC  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 22147  0024E0  D7E4               	goto	l15983
 22148  0024E2                     l15989:
 22149                           
 22150                           ; BSR set to: 0
 22151                           ;eusartparser.c: 25:                 package->data.data8[1]=var_sys_NVM.walkTime;
 22152  0024E2  5018               	movf	read_eusartparser@package^0,w,c
 22153  0024E4  6ED9               	movwf	fsr2l,c
 22154  0024E6  6ADA               	clrf	fsr2h,c
 22155  0024E8  0E03               	movlw	3
 22156  0024EA  26D9               	addwf	fsr2l,f,c
 22157  0024EC  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 22158  0024F0  D0F9               	goto	L99
 22159  0024F2                     l15993:
 22160                           
 22161                           ; BSR set to: 0
 22162                           ;eusartparser.c: 33:                 package->data.data8[1]=var_sys_NVM.autoTimeWalkClos
      +                          e;
 22163  0024F2  5018               	movf	read_eusartparser@package^0,w,c
 22164  0024F4  6ED9               	movwf	fsr2l,c
 22165  0024F6  6ADA               	clrf	fsr2h,c
 22166  0024F8  0E03               	movlw	3
 22167  0024FA  26D9               	addwf	fsr2l,f,c
 22168  0024FC  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 22169                           
 22170                           ;eusartparser.c: 34:                 package->data.data8[0]=var_sys_NVM.autoTimeFullClos
      +                          e;
 22171  002500  5018               	movf	read_eusartparser@package^0,w,c
 22172  002502  6ED9               	movwf	fsr2l,c
 22173  002504  6ADA               	clrf	fsr2h,c
 22174  002506  0E02               	movlw	2
 22175  002508  26D9               	addwf	fsr2l,f,c
 22176  00250A  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 22177  00250E  D7CD               	goto	l15983
 22178  002510                     l15997:
 22179                           
 22180                           ; BSR set to: 0
 22181                           ;eusartparser.c: 41:                 package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 22182  002510  5018               	movf	read_eusartparser@package^0,w,c
 22183  002512  6ED9               	movwf	fsr2l,c
 22184  002514  6ADA               	clrf	fsr2h,c
 22185  002516  0E03               	movlw	3
 22186  002518  26D9               	addwf	fsr2l,f,c
 22187  00251A  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 22188                           
 22189                           ;eusartparser.c: 42:                 package->data.data8[0]=var_sys_NVM.photoCellIsON;
 22190  00251E  5018               	movf	read_eusartparser@package^0,w,c
 22191  002520  6ED9               	movwf	fsr2l,c
 22192  002522  6ADA               	clrf	fsr2h,c
 22193  002524  0E02               	movlw	2
 22194  002526  26D9               	addwf	fsr2l,f,c
 22195  002528  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 22196  00252C  D7BE               	goto	l15983
 22197  00252E                     l16001:
 22198                           
 22199                           ; BSR set to: 0
 22200                           ;eusartparser.c: 48:                 package->data.data8[1]=var_sys_NVM.securityBandType
      +                          ;
 22201  00252E  5018               	movf	read_eusartparser@package^0,w,c
 22202  002530  6ED9               	movwf	fsr2l,c
 22203  002532  6ADA               	clrf	fsr2h,c
 22204  002534  0E03               	movlw	3
 22205  002536  26D9               	addwf	fsr2l,f,c
 22206  002538  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 22207                           
 22208                           ;eusartparser.c: 49:                 package->data.data8[0]=var_sys_NVM.securityBandIsON
      +                          ;
 22209  00253C  5018               	movf	read_eusartparser@package^0,w,c
 22210  00253E  6ED9               	movwf	fsr2l,c
 22211  002540  6ADA               	clrf	fsr2h,c
 22212  002542  0E02               	movlw	2
 22213  002544  26D9               	addwf	fsr2l,f,c
 22214  002546  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 22215  00254A  D7AF               	goto	l15983
 22216  00254C                     l16005:
 22217                           
 22218                           ; BSR set to: 0
 22219                           ;eusartparser.c: 55:                 package->data.data8[1]=var_sys_NVM.securityBandInOp
      +                          en;
 22220  00254C  5018               	movf	read_eusartparser@package^0,w,c
 22221  00254E  6ED9               	movwf	fsr2l,c
 22222  002550  6ADA               	clrf	fsr2h,c
 22223  002552  0E03               	movlw	3
 22224  002554  26D9               	addwf	fsr2l,f,c
 22225  002556  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 22226  00255A  D0C4               	goto	L99
 22227  00255C                     l16009:
 22228                           
 22229                           ; BSR set to: 0
 22230                           ;eusartparser.c: 62:                 package->data.data8[1]=var_sys_NVM.operationMode;
 22231  00255C  5018               	movf	read_eusartparser@package^0,w,c
 22232  00255E  6ED9               	movwf	fsr2l,c
 22233  002560  6ADA               	clrf	fsr2h,c
 22234  002562  0E03               	movlw	3
 22235  002564  26D9               	addwf	fsr2l,f,c
 22236  002566  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 22237  00256A  D0BC               	goto	L99
 22238  00256C                     l16013:
 22239                           
 22240                           ; BSR set to: 0
 22241                           ;eusartparser.c: 69:                 package->data.data8[1]=var_sys_NVM.flashLightMode;
 22242  00256C  5018               	movf	read_eusartparser@package^0,w,c
 22243  00256E  6ED9               	movwf	fsr2l,c
 22244  002570  6ADA               	clrf	fsr2h,c
 22245  002572  0E03               	movlw	3
 22246  002574  26D9               	addwf	fsr2l,f,c
 22247  002576  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 22248  00257A  D0B4               	goto	L99
 22249  00257C                     l16017:
 22250                           
 22251                           ; BSR set to: 0
 22252                           ;eusartparser.c: 76:                 package->data.data8[1]=var_sys_NVM.programmingDista
      +                          nce;
 22253  00257C  5018               	movf	read_eusartparser@package^0,w,c
 22254  00257E  6ED9               	movwf	fsr2l,c
 22255  002580  6ADA               	clrf	fsr2h,c
 22256  002582  0E03               	movlw	3
 22257  002584  26D9               	addwf	fsr2l,f,c
 22258  002586  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 22259  00258A  D0AC               	goto	L99
 22260  00258C                     l16021:
 22261                           
 22262                           ; BSR set to: 0
 22263                           ;eusartparser.c: 83:                 package->data.data8[1]=var_sys_NVM.decelarationSens
      +                          ivity;
 22264  00258C  5018               	movf	read_eusartparser@package^0,w,c
 22265  00258E  6ED9               	movwf	fsr2l,c
 22266  002590  6ADA               	clrf	fsr2h,c
 22267  002592  0E03               	movlw	3
 22268  002594  26D9               	addwf	fsr2l,f,c
 22269  002596  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 22270  00259A  D0A4               	goto	L99
 22271  00259C                     l16025:
 22272                           
 22273                           ; BSR set to: 0
 22274                           ;eusartparser.c: 91:                 package->data.data8[1]=var_sys_NVM.homemPresente;
 22275  00259C  5018               	movf	read_eusartparser@package^0,w,c
 22276  00259E  6ED9               	movwf	fsr2l,c
 22277  0025A0  6ADA               	clrf	fsr2h,c
 22278  0025A2  0E03               	movlw	3
 22279  0025A4  26D9               	addwf	fsr2l,f,c
 22280  0025A6  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 22281  0025AA  D09C               	goto	L99
 22282  0025AC                     l16029:
 22283                           
 22284                           ; BSR set to: 0
 22285                           ;eusartparser.c: 99:                 package->data.data8[1]=var_sys_NVM.logicDigital;
 22286  0025AC  5018               	movf	read_eusartparser@package^0,w,c
 22287  0025AE  6ED9               	movwf	fsr2l,c
 22288  0025B0  6ADA               	clrf	fsr2h,c
 22289  0025B2  0E03               	movlw	3
 22290  0025B4  26D9               	addwf	fsr2l,f,c
 22291  0025B6  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 22292  0025BA  D094               	goto	L99
 22293  0025BC                     l16033:
 22294                           
 22295                           ; BSR set to: 0
 22296                           ;eusartparser.c: 106:                 package->data.data8[1]=var_sys_NVM.softstop;
 22297  0025BC  5018               	movf	read_eusartparser@package^0,w,c
 22298  0025BE  6ED9               	movwf	fsr2l,c
 22299  0025C0  6ADA               	clrf	fsr2h,c
 22300  0025C2  0E03               	movlw	3
 22301  0025C4  26D9               	addwf	fsr2l,f,c
 22302  0025C6  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 22303                           
 22304                           ;eusartparser.c: 107:                 package->data.data8[0]=var_sys_NVM.softStart;
 22305  0025CA  5018               	movf	read_eusartparser@package^0,w,c
 22306  0025CC  6ED9               	movwf	fsr2l,c
 22307  0025CE  6ADA               	clrf	fsr2h,c
 22308  0025D0  0E02               	movlw	2
 22309  0025D2  26D9               	addwf	fsr2l,f,c
 22310  0025D4  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 22311  0025D8  D768               	goto	l15983
 22312  0025DA                     l16037:
 22313                           
 22314                           ; BSR set to: 0
 22315                           ;eusartparser.c: 114:                 package->data.data8[1]=var_sys_NVM.ligthTime;
 22316  0025DA  5018               	movf	read_eusartparser@package^0,w,c
 22317  0025DC  6ED9               	movwf	fsr2l,c
 22318  0025DE  6ADA               	clrf	fsr2h,c
 22319  0025E0  0E03               	movlw	3
 22320  0025E2  26D9               	addwf	fsr2l,f,c
 22321  0025E4  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 22322  0025E8  D07D               	goto	L99
 22323  0025EA                     l16041:
 22324                           
 22325                           ; BSR set to: 0
 22326                           ;eusartparser.c: 122:                 package->data.data8[1]=var_sys_NVM.folow_me;
 22327  0025EA  5018               	movf	read_eusartparser@package^0,w,c
 22328  0025EC  6ED9               	movwf	fsr2l,c
 22329  0025EE  6ADA               	clrf	fsr2h,c
 22330  0025F0  0E03               	movlw	3
 22331  0025F2  26D9               	addwf	fsr2l,f,c
 22332  0025F4  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 22333  0025F8  D075               	goto	L99
 22334  0025FA                     l16045:
 22335                           
 22336                           ; BSR set to: 0
 22337                           ;eusartparser.c: 129:                 package->data.data8[1]=var_sys_NVM.Stopboton;
 22338  0025FA  5018               	movf	read_eusartparser@package^0,w,c
 22339  0025FC  6ED9               	movwf	fsr2l,c
 22340  0025FE  6ADA               	clrf	fsr2h,c
 22341  002600  0E03               	movlw	3
 22342  002602  26D9               	addwf	fsr2l,f,c
 22343  002604  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 22344  002608  D06D               	goto	L99
 22345  00260A                     l16049:
 22346                           
 22347                           ; BSR set to: 0
 22348                           ;eusartparser.c: 136:                 package->data.data8[1]=var_sys_NVM.electricBrake;
 22349  00260A  5018               	movf	read_eusartparser@package^0,w,c
 22350  00260C  6ED9               	movwf	fsr2l,c
 22351  00260E  6ADA               	clrf	fsr2h,c
 22352  002610  0E03               	movlw	3
 22353  002612  26D9               	addwf	fsr2l,f,c
 22354  002614  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 22355  002618  D065               	goto	L99
 22356  00261A                     l16053:
 22357                           
 22358                           ; BSR set to: 0
 22359                           ;eusartparser.c: 143:                 package->data.data8[1]=var_sys_NVM.velocityDecelar
      +                          ation;
 22360  00261A  5018               	movf	read_eusartparser@package^0,w,c
 22361  00261C  6ED9               	movwf	fsr2l,c
 22362  00261E  6ADA               	clrf	fsr2h,c
 22363  002620  0E03               	movlw	3
 22364  002622  26D9               	addwf	fsr2l,f,c
 22365  002624  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 22366  002628  D05D               	goto	L99
 22367  00262A                     l16057:
 22368                           
 22369                           ; BSR set to: 0
 22370                           ;eusartparser.c: 151:                 package->data.data8[1]=var_sys_NVM.flashRGBMode;
 22371  00262A  5018               	movf	read_eusartparser@package^0,w,c
 22372  00262C  6ED9               	movwf	fsr2l,c
 22373  00262E  6ADA               	clrf	fsr2h,c
 22374  002630  0E03               	movlw	3
 22375  002632  26D9               	addwf	fsr2l,f,c
 22376  002634  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 22377  002638  D055               	goto	L99
 22378  00263A                     l16061:
 22379                           
 22380                           ; BSR set to: 0
 22381                           ;eusartparser.c: 158:                 package->data.data8[1]=var_sys_NVM.Direction_motor
      +                          ;
 22382  00263A  5018               	movf	read_eusartparser@package^0,w,c
 22383  00263C  6ED9               	movwf	fsr2l,c
 22384  00263E  6ADA               	clrf	fsr2h,c
 22385  002640  0E03               	movlw	3
 22386  002642  26D9               	addwf	fsr2l,f,c
 22387  002644  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 22388  002648  D04D               	goto	L99
 22389  00264A                     l16065:
 22390                           
 22391                           ; BSR set to: 0
 22392                           ;eusartparser.c: 165:                 package->data.data8[1]=var_sys_NVM.TypeofMotor;
 22393  00264A  5018               	movf	read_eusartparser@package^0,w,c
 22394  00264C  6ED9               	movwf	fsr2l,c
 22395  00264E  6ADA               	clrf	fsr2h,c
 22396  002650  0E03               	movlw	3
 22397  002652  26D9               	addwf	fsr2l,f,c
 22398  002654  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 22399  002658  D045               	goto	L99
 22400  00265A                     l16069:
 22401                           
 22402                           ; BSR set to: 0
 22403                           ;eusartparser.c: 172:                 package->data.data8[1]=var_sys_NVM.positionRemotes
      +                          Walk;
 22404  00265A  5018               	movf	read_eusartparser@package^0,w,c
 22405  00265C  6ED9               	movwf	fsr2l,c
 22406  00265E  6ADA               	clrf	fsr2h,c
 22407  002660  0E03               	movlw	3
 22408  002662  26D9               	addwf	fsr2l,f,c
 22409  002664  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 22410                           
 22411                           ;eusartparser.c: 173:                 package->data.data8[0]=var_sys_NVM.positionRemotes
      +                          Full;
 22412  002668  5018               	movf	read_eusartparser@package^0,w,c
 22413  00266A  6ED9               	movwf	fsr2l,c
 22414  00266C  6ADA               	clrf	fsr2h,c
 22415  00266E  0E02               	movlw	2
 22416  002670  26D9               	addwf	fsr2l,f,c
 22417  002672  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 22418  002676  D719               	goto	l15983
 22419  002678                     l16073:
 22420                           
 22421                           ; BSR set to: 0
 22422                           ;eusartparser.c: 179:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+1);
 22423  002678  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 22424  00267C  5018               	movf	read_eusartparser@package^0,w,c
 22425  00267E  6EE1               	movwf	fsr1l,c
 22426  002680  6AE2               	clrf	fsr1h,c
 22427  002682  0E02               	movlw	2
 22428  002684  26E1               	addwf	fsr1l,f,c
 22429  002686  CFDE FFE6          	movff	postinc2,postinc1
 22430  00268A  CFDD FFE5          	movff	postdec2,postdec1
 22431                           
 22432                           ; BSR set to: 0
 22433                           ;eusartparser.c: 180:                 write_package(*package);
 22434  00268E  5018               	movf	read_eusartparser@package^0,w,c
 22435  002690  6ED9               	movwf	fsr2l,c
 22436  002692  6ADA               	clrf	fsr2h,c
 22437  002694  EE00  F011         	lfsr	0,write_package@package
 22438  002698  0E06               	movlw	6
 22439  00269A                     u18011:
 22440  00269A  CFDB FFEB          	movff	plusw2,plusw0
 22441  00269E  06E8               	decf	wreg,f,c
 22442  0026A0  E2FC               	bc	u18011
 22443  0026A2  EC63  F045         	call	_write_package	;wreg free
 22444                           
 22445                           ;eusartparser.c: 181:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+0);
 22446  0026A6  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 22447  0026AA  5018               	movf	read_eusartparser@package^0,w,c
 22448  0026AC  6EE1               	movwf	fsr1l,c
 22449  0026AE  6AE2               	clrf	fsr1h,c
 22450  0026B0  0E02               	movlw	2
 22451  0026B2  26E1               	addwf	fsr1l,f,c
 22452  0026B4  CFDE FFE6          	movff	postinc2,postinc1
 22453  0026B8  CFDD FFE5          	movff	postdec2,postdec1
 22454                           
 22455                           ;eusartparser.c: 182:                 write_package(*package);
 22456  0026BC  5018               	movf	read_eusartparser@package^0,w,c
 22457  0026BE  6ED9               	movwf	fsr2l,c
 22458  0026C0  6ADA               	clrf	fsr2h,c
 22459  0026C2  EE00  F011         	lfsr	0,write_package@package
 22460  0026C6  0E06               	movlw	6
 22461  0026C8                     u18021:
 22462  0026C8  CFDB FFEB          	movff	plusw2,plusw0
 22463  0026CC  06E8               	decf	wreg,f,c
 22464  0026CE  E2FC               	bc	u18021
 22465  0026D0  EC63  F045         	call	_write_package	;wreg free
 22466                           
 22467                           ;eusartparser.c: 183:                 break;
 22468  0026D4  0012               	return	
 22469  0026D6                     l16079:
 22470                           
 22471                           ; BSR set to: 0
 22472                           ;eusartparser.c: 187:                 package->data.data8[1]=var_sys_NVM.OnlyRollingCode
      +                          ;
 22473  0026D6  5018               	movf	read_eusartparser@package^0,w,c
 22474  0026D8  6ED9               	movwf	fsr2l,c
 22475  0026DA  6ADA               	clrf	fsr2h,c
 22476  0026DC  0E03               	movlw	3
 22477  0026DE  26D9               	addwf	fsr2l,f,c
 22478  0026E0  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 22479  0026E4                     L99:
 22480                           
 22481                           ;eusartparser.c: 188:                 package->data.data8[0]=0x00;
 22482  0026E4  5018               	movf	read_eusartparser@package^0,w,c
 22483  0026E6  6ED9               	movwf	fsr2l,c
 22484  0026E8  6ADA               	clrf	fsr2h,c
 22485  0026EA  0E02               	movlw	2
 22486  0026EC  26D9               	addwf	fsr2l,f,c
 22487  0026EE  0E00               	movlw	0
 22488  0026F0  6EDF               	movwf	indf2,c
 22489  0026F2  D6DB               	goto	l15983
 22490  0026F4                     l16083:
 22491                           
 22492                           ; BSR set to: 0
 22493                           ;eusartparser.c: 194:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+1);
 22494  0026F4  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 22495  0026F8  5018               	movf	read_eusartparser@package^0,w,c
 22496  0026FA  6EE1               	movwf	fsr1l,c
 22497  0026FC  6AE2               	clrf	fsr1h,c
 22498  0026FE  0E02               	movlw	2
 22499  002700  26E1               	addwf	fsr1l,f,c
 22500  002702  CFDE FFE6          	movff	postinc2,postinc1
 22501  002706  CFDD FFE5          	movff	postdec2,postdec1
 22502                           
 22503                           ; BSR set to: 0
 22504                           ;eusartparser.c: 195:                 write_package(*package);
 22505  00270A  5018               	movf	read_eusartparser@package^0,w,c
 22506  00270C  6ED9               	movwf	fsr2l,c
 22507  00270E  6ADA               	clrf	fsr2h,c
 22508  002710  EE00  F011         	lfsr	0,write_package@package
 22509  002714  0E06               	movlw	6
 22510  002716                     u18031:
 22511  002716  CFDB FFEB          	movff	plusw2,plusw0
 22512  00271A  06E8               	decf	wreg,f,c
 22513  00271C  E2FC               	bc	u18031
 22514  00271E  EC63  F045         	call	_write_package	;wreg free
 22515                           
 22516                           ;eusartparser.c: 196:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+0);
 22517  002722  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 22518  002726  5018               	movf	read_eusartparser@package^0,w,c
 22519  002728  6EE1               	movwf	fsr1l,c
 22520  00272A  6AE2               	clrf	fsr1h,c
 22521  00272C  0E02               	movlw	2
 22522  00272E  26E1               	addwf	fsr1l,f,c
 22523  002730  CFDE FFE6          	movff	postinc2,postinc1
 22524  002734  CFDD FFE5          	movff	postdec2,postdec1
 22525                           
 22526                           ;eusartparser.c: 197:                 write_package(*package);
 22527  002738  5018               	movf	read_eusartparser@package^0,w,c
 22528  00273A  6ED9               	movwf	fsr2l,c
 22529  00273C  6ADA               	clrf	fsr2h,c
 22530  00273E  EE00  F011         	lfsr	0,write_package@package
 22531  002742  0E06               	movlw	6
 22532  002744                     u18041:
 22533  002744  CFDB FFEB          	movff	plusw2,plusw0
 22534  002748  06E8               	decf	wreg,f,c
 22535  00274A  E2FC               	bc	u18041
 22536  00274C  EC63  F045         	call	_write_package	;wreg free
 22537                           
 22538                           ;eusartparser.c: 198:                 break;
 22539  002750  0012               	return	
 22540  002752                     l16089:
 22541                           
 22542                           ; BSR set to: 0
 22543                           ;eusartparser.c: 202:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+1);
 22544  002752  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 22545  002756  5018               	movf	read_eusartparser@package^0,w,c
 22546  002758  6EE1               	movwf	fsr1l,c
 22547  00275A  6AE2               	clrf	fsr1h,c
 22548  00275C  0E02               	movlw	2
 22549  00275E  26E1               	addwf	fsr1l,f,c
 22550  002760  CFDE FFE6          	movff	postinc2,postinc1
 22551  002764  CFDD FFE5          	movff	postdec2,postdec1
 22552                           
 22553                           ; BSR set to: 0
 22554                           ;eusartparser.c: 203:                 write_package(*package);
 22555  002768  5018               	movf	read_eusartparser@package^0,w,c
 22556  00276A  6ED9               	movwf	fsr2l,c
 22557  00276C  6ADA               	clrf	fsr2h,c
 22558  00276E  EE00  F011         	lfsr	0,write_package@package
 22559  002772  0E06               	movlw	6
 22560  002774                     u18051:
 22561  002774  CFDB FFEB          	movff	plusw2,plusw0
 22562  002778  06E8               	decf	wreg,f,c
 22563  00277A  E2FC               	bc	u18051
 22564  00277C  EC63  F045         	call	_write_package	;wreg free
 22565                           
 22566                           ;eusartparser.c: 204:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+0);
 22567  002780  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 22568  002784  5018               	movf	read_eusartparser@package^0,w,c
 22569  002786  6EE1               	movwf	fsr1l,c
 22570  002788  6AE2               	clrf	fsr1h,c
 22571  00278A  0E02               	movlw	2
 22572  00278C  26E1               	addwf	fsr1l,f,c
 22573  00278E  CFDE FFE6          	movff	postinc2,postinc1
 22574  002792  CFDD FFE5          	movff	postdec2,postdec1
 22575                           
 22576                           ;eusartparser.c: 205:                 write_package(*package);
 22577  002796  5018               	movf	read_eusartparser@package^0,w,c
 22578  002798  6ED9               	movwf	fsr2l,c
 22579  00279A  6ADA               	clrf	fsr2h,c
 22580  00279C  EE00  F011         	lfsr	0,write_package@package
 22581  0027A0  0E06               	movlw	6
 22582  0027A2                     u18061:
 22583  0027A2  CFDB FFEB          	movff	plusw2,plusw0
 22584  0027A6  06E8               	decf	wreg,f,c
 22585  0027A8  E2FC               	bc	u18061
 22586  0027AA  EC63  F045         	call	_write_package	;wreg free
 22587                           
 22588                           ;eusartparser.c: 206:                 break;
 22589  0027AE  0012               	return	
 22590  0027B0                     l16095:
 22591                           
 22592                           ; BSR set to: 0
 22593                           ;eusartparser.c: 210:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalClose;
 22594  0027B0  5018               	movf	read_eusartparser@package^0,w,c
 22595  0027B2  6ED9               	movwf	fsr2l,c
 22596  0027B4  6ADA               	clrf	fsr2h,c
 22597  0027B6  0E02               	movlw	2
 22598  0027B8  26D9               	addwf	fsr2l,f,c
 22599  0027BA  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 22600  0027BE  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 22601  0027C2  D673               	goto	l15983
 22602  0027C4                     l16099:
 22603                           
 22604                           ; BSR set to: 0
 22605                           ;eusartparser.c: 216:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalOpen;
 22606  0027C4  5018               	movf	read_eusartparser@package^0,w,c
 22607  0027C6  6ED9               	movwf	fsr2l,c
 22608  0027C8  6ADA               	clrf	fsr2h,c
 22609  0027CA  0E02               	movlw	2
 22610  0027CC  26D9               	addwf	fsr2l,f,c
 22611  0027CE  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 22612  0027D2  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 22613  0027D6  D669               	goto	l15983
 22614  0027D8                     l16103:
 22615                           
 22616                           ; BSR set to: 0
 22617                           ;eusartparser.c: 222:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+1);
 22618  0027D8  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 22619  0027DC  5018               	movf	read_eusartparser@package^0,w,c
 22620  0027DE  6EE1               	movwf	fsr1l,c
 22621  0027E0  6AE2               	clrf	fsr1h,c
 22622  0027E2  0E02               	movlw	2
 22623  0027E4  26E1               	addwf	fsr1l,f,c
 22624  0027E6  CFDE FFE6          	movff	postinc2,postinc1
 22625  0027EA  CFDD FFE5          	movff	postdec2,postdec1
 22626                           
 22627                           ; BSR set to: 0
 22628                           ;eusartparser.c: 223:                 write_package(*package);
 22629  0027EE  5018               	movf	read_eusartparser@package^0,w,c
 22630  0027F0  6ED9               	movwf	fsr2l,c
 22631  0027F2  6ADA               	clrf	fsr2h,c
 22632  0027F4  EE00  F011         	lfsr	0,write_package@package
 22633  0027F8  0E06               	movlw	6
 22634  0027FA                     u18071:
 22635  0027FA  CFDB FFEB          	movff	plusw2,plusw0
 22636  0027FE  06E8               	decf	wreg,f,c
 22637  002800  E2FC               	bc	u18071
 22638  002802  EC63  F045         	call	_write_package	;wreg free
 22639                           
 22640                           ;eusartparser.c: 224:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+0);
 22641  002806  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 22642  00280A  5018               	movf	read_eusartparser@package^0,w,c
 22643  00280C  6EE1               	movwf	fsr1l,c
 22644  00280E  6AE2               	clrf	fsr1h,c
 22645  002810  0E02               	movlw	2
 22646  002812  26E1               	addwf	fsr1l,f,c
 22647  002814  CFDE FFE6          	movff	postinc2,postinc1
 22648  002818  CFDD FFE5          	movff	postdec2,postdec1
 22649                           
 22650                           ;eusartparser.c: 225:                 write_package(*package);
 22651  00281C  5018               	movf	read_eusartparser@package^0,w,c
 22652  00281E  6ED9               	movwf	fsr2l,c
 22653  002820  6ADA               	clrf	fsr2h,c
 22654  002822  EE00  F011         	lfsr	0,write_package@package
 22655  002826  0E06               	movlw	6
 22656  002828                     u18081:
 22657  002828  CFDB FFEB          	movff	plusw2,plusw0
 22658  00282C  06E8               	decf	wreg,f,c
 22659  00282E  E2FC               	bc	u18081
 22660  002830  EC63  F045         	call	_write_package	;wreg free
 22661                           
 22662                           ;eusartparser.c: 226:                 break;
 22663  002834  0012               	return	
 22664  002836                     l16109:
 22665                           
 22666                           ; BSR set to: 0
 22667                           ;eusartparser.c: 230:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+1);
 22668  002836  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 22669  00283A  5018               	movf	read_eusartparser@package^0,w,c
 22670  00283C  6EE1               	movwf	fsr1l,c
 22671  00283E  6AE2               	clrf	fsr1h,c
 22672  002840  0E02               	movlw	2
 22673  002842  26E1               	addwf	fsr1l,f,c
 22674  002844  CFDE FFE6          	movff	postinc2,postinc1
 22675  002848  CFDD FFE5          	movff	postdec2,postdec1
 22676                           
 22677                           ; BSR set to: 0
 22678                           ;eusartparser.c: 231:                 write_package(*package);
 22679  00284C  5018               	movf	read_eusartparser@package^0,w,c
 22680  00284E  6ED9               	movwf	fsr2l,c
 22681  002850  6ADA               	clrf	fsr2h,c
 22682  002852  EE00  F011         	lfsr	0,write_package@package
 22683  002856  0E06               	movlw	6
 22684  002858                     u18091:
 22685  002858  CFDB FFEB          	movff	plusw2,plusw0
 22686  00285C  06E8               	decf	wreg,f,c
 22687  00285E  E2FC               	bc	u18091
 22688  002860  EC63  F045         	call	_write_package	;wreg free
 22689                           
 22690                           ;eusartparser.c: 232:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+0);
 22691  002864  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 22692  002868  5018               	movf	read_eusartparser@package^0,w,c
 22693  00286A  6EE1               	movwf	fsr1l,c
 22694  00286C  6AE2               	clrf	fsr1h,c
 22695  00286E  0E02               	movlw	2
 22696  002870  26E1               	addwf	fsr1l,f,c
 22697  002872  CFDE FFE6          	movff	postinc2,postinc1
 22698  002876  CFDD FFE5          	movff	postdec2,postdec1
 22699                           
 22700                           ;eusartparser.c: 233:                 write_package(*package);
 22701  00287A  5018               	movf	read_eusartparser@package^0,w,c
 22702  00287C  6ED9               	movwf	fsr2l,c
 22703  00287E  6ADA               	clrf	fsr2h,c
 22704  002880  EE00  F011         	lfsr	0,write_package@package
 22705  002884  0E06               	movlw	6
 22706  002886                     u18101:
 22707  002886  CFDB FFEB          	movff	plusw2,plusw0
 22708  00288A  06E8               	decf	wreg,f,c
 22709  00288C  E2FC               	bc	u18101
 22710  00288E  EC63  F045         	call	_write_package	;wreg free
 22711                           
 22712                           ;eusartparser.c: 234:                 break;
 22713  002892  0012               	return	
 22714  002894                     l16117:
 22715                           
 22716                           ; BSR set to: 0
 22717  002894  5018               	movf	read_eusartparser@package^0,w,c
 22718  002896  6ED9               	movwf	fsr2l,c
 22719  002898  6ADA               	clrf	fsr2h,c
 22720  00289A  0E01               	movlw	1
 22721  00289C  26D9               	addwf	fsr2l,f,c
 22722  00289E  50DF               	movf	indf2,w,c
 22723  0028A0  6E19               	movwf	??_read_eusartparser^0,c
 22724  0028A2  6A1A               	clrf	(??_read_eusartparser+1)^0,c
 22725                           
 22726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22727                           ; Switch size 1, requested type "simple"
 22728                           ; Number of cases is 1, Range of values is 0 to 0
 22729                           ; switch strategies available:
 22730                           ; Name         Instructions Cycles
 22731                           ; simple_byte            4     3 (average)
 22732                           ;	Chosen strategy is simple_byte
 22733  0028A4  501A               	movf	(??_read_eusartparser+1)^0,w,c
 22734  0028A6  0A00               	xorlw	0	; case 0
 22735  0028A8  A4D8               	btfss	status,2,c
 22736  0028AA  0012               	return	
 22737                           
 22738                           ; BSR set to: 0
 22739                           ; Switch size 1, requested type "simple"
 22740                           ; Number of cases is 38, Range of values is 0 to 50
 22741                           ; switch strategies available:
 22742                           ; Name         Instructions Cycles
 22743                           ; simple_byte          115    58 (average)
 22744                           ;	Chosen strategy is simple_byte
 22745  0028AC  5019               	movf	??_read_eusartparser^0,w,c
 22746  0028AE  0A00               	xorlw	0	; case 0
 22747  0028B0  B4D8               	btfsc	status,2,c
 22748  0028B2  D5ED               	goto	l15981
 22749  0028B4  0A02               	xorlw	2	; case 2
 22750  0028B6  B4D8               	btfsc	status,2,c
 22751  0028B8  D61C               	goto	l15993
 22752  0028BA  0A01               	xorlw	1	; case 3
 22753  0028BC  B4D8               	btfsc	status,2,c
 22754  0028BE  D68D               	goto	l16037
 22755  0028C0  0A06               	xorlw	6	; case 5
 22756  0028C2  B4D8               	btfsc	status,2,c
 22757  0028C4  D625               	goto	l15997
 22758  0028C6  0A02               	xorlw	2	; case 7
 22759  0028C8  B4D8               	btfsc	status,2,c
 22760  0028CA  D670               	goto	l16029
 22761  0028CC  0A0F               	xorlw	15	; case 8
 22762  0028CE  B4D8               	btfsc	status,2,c
 22763  0028D0  D6AC               	goto	l16057
 22764  0028D2  0A02               	xorlw	2	; case 10
 22765  0028D4  B4D8               	btfsc	status,2,c
 22766  0028D6  D689               	goto	l16041
 22767  0028D8  0A1A               	xorlw	26	; case 16
 22768  0028DA  B4D8               	btfsc	status,2,c
 22769  0028DC  D5D8               	goto	l15981
 22770  0028DE  0A01               	xorlw	1	; case 17
 22771  0028E0  B4D8               	btfsc	status,2,c
 22772  0028E2  D5F0               	goto	l15985
 22773  0028E4  0A03               	xorlw	3	; case 18
 22774  0028E6  B4D8               	btfsc	status,2,c
 22775  0028E8  D5FC               	goto	l15989
 22776  0028EA  0A01               	xorlw	1	; case 19
 22777  0028EC  B4D8               	btfsc	status,2,c
 22778  0028EE  D601               	goto	l15993
 22779  0028F0  0A07               	xorlw	7	; case 20
 22780  0028F2  B4D8               	btfsc	status,2,c
 22781  0028F4  D60D               	goto	l15997
 22782  0028F6  0A01               	xorlw	1	; case 21
 22783  0028F8  B4D8               	btfsc	status,2,c
 22784  0028FA  D619               	goto	l16001
 22785  0028FC  0A03               	xorlw	3	; case 22
 22786  0028FE  B4D8               	btfsc	status,2,c
 22787  002900  D625               	goto	l16005
 22788  002902  0A01               	xorlw	1	; case 23
 22789  002904  B4D8               	btfsc	status,2,c
 22790  002906  D62A               	goto	l16009
 22791  002908  0A0F               	xorlw	15	; case 24
 22792  00290A  B4D8               	btfsc	status,2,c
 22793  00290C  D62F               	goto	l16013
 22794  00290E  0A01               	xorlw	1	; case 25
 22795  002910  B4D8               	btfsc	status,2,c
 22796  002912  D634               	goto	l16017
 22797  002914  0A03               	xorlw	3	; case 26
 22798  002916  B4D8               	btfsc	status,2,c
 22799  002918  D639               	goto	l16021
 22800  00291A  0A01               	xorlw	1	; case 27
 22801  00291C  B4D8               	btfsc	status,2,c
 22802  00291E  D63E               	goto	l16025
 22803  002920  0A07               	xorlw	7	; case 28
 22804  002922  B4D8               	btfsc	status,2,c
 22805  002924  D643               	goto	l16029
 22806  002926  0A01               	xorlw	1	; case 29
 22807  002928  B4D8               	btfsc	status,2,c
 22808  00292A  D648               	goto	l16033
 22809  00292C  0A03               	xorlw	3	; case 30
 22810  00292E  B4D8               	btfsc	status,2,c
 22811  002930  D654               	goto	l16037
 22812  002932  0A01               	xorlw	1	; case 31
 22813  002934  B4D8               	btfsc	status,2,c
 22814  002936  D659               	goto	l16041
 22815  002938  0A3F               	xorlw	63	; case 32
 22816  00293A  B4D8               	btfsc	status,2,c
 22817  00293C  D65E               	goto	l16045
 22818  00293E  0A01               	xorlw	1	; case 33
 22819  002940  B4D8               	btfsc	status,2,c
 22820  002942  D663               	goto	l16049
 22821  002944  0A03               	xorlw	3	; case 34
 22822  002946  B4D8               	btfsc	status,2,c
 22823  002948  D668               	goto	l16053
 22824  00294A  0A01               	xorlw	1	; case 35
 22825  00294C  B4D8               	btfsc	status,2,c
 22826  00294E  D66D               	goto	l16057
 22827  002950  0A07               	xorlw	7	; case 36
 22828  002952  B4D8               	btfsc	status,2,c
 22829  002954  D672               	goto	l16061
 22830  002956  0A01               	xorlw	1	; case 37
 22831  002958  B4D8               	btfsc	status,2,c
 22832  00295A  D677               	goto	l16065
 22833  00295C  0A03               	xorlw	3	; case 38
 22834  00295E  B4D8               	btfsc	status,2,c
 22835  002960  D67C               	goto	l16069
 22836  002962  0A01               	xorlw	1	; case 39
 22837  002964  B4D8               	btfsc	status,2,c
 22838  002966  D688               	goto	l16073
 22839  002968  0A0E               	xorlw	14	; case 41
 22840  00296A  B4D8               	btfsc	status,2,c
 22841  00296C  D6B4               	goto	l16079
 22842  00296E  0A03               	xorlw	3	; case 42
 22843  002970  B4D8               	btfsc	status,2,c
 22844  002972  D6C0               	goto	l16083
 22845  002974  0A06               	xorlw	6	; case 44
 22846  002976  B4D8               	btfsc	status,2,c
 22847  002978  D6EC               	goto	l16089
 22848  00297A  0A02               	xorlw	2	; case 46
 22849  00297C  B4D8               	btfsc	status,2,c
 22850  00297E  D718               	goto	l16095
 22851  002980  0A01               	xorlw	1	; case 47
 22852  002982  B4D8               	btfsc	status,2,c
 22853  002984  D71F               	goto	l16099
 22854  002986  0A1F               	xorlw	31	; case 48
 22855  002988  B4D8               	btfsc	status,2,c
 22856  00298A  D726               	goto	l16103
 22857  00298C  0A02               	xorlw	2	; case 50
 22858  00298E  A4D8               	btfss	status,2,c
 22859  002990  0012               	return	
 22860  002992  D751               	goto	l16109
 22861  002994                     __end_of_read_eusartparser:
 22862                           	callstack 0
 22863                           
 22864 ;; *************** function _write_package *****************
 22865 ;; Defined at:
 22866 ;;		line 50 in file "eusartpackage.c"
 22867 ;; Parameters:    Size  Location     Type
 22868 ;;  package         7   16[COMRAM] const struct package_t
 22869 ;; Auto vars:     Size  Location     Type
 22870 ;;		None
 22871 ;; Return value:  Size  Location     Type
 22872 ;;                  1    wreg      void 
 22873 ;; Registers used:
 22874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22875 ;; Tracked objects:
 22876 ;;		On entry : 0/1
 22877 ;;		On exit  : 0/0
 22878 ;;		Unchanged: 0/0
 22879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22880 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22883 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22884 ;;Total ram usage:        7 bytes
 22885 ;; Hardware stack levels used: 1
 22886 ;; Hardware stack levels required when called: 5
 22887 ;; This function calls:
 22888 ;;		_EUSART1_Write
 22889 ;; This function is called by:
 22890 ;;		_read_eusartparser
 22891 ;;		_eusartparser
 22892 ;; This function uses a non-reentrant model
 22893 ;;
 22894                           
 22895                           	psect	text82
 22896  008AC6                     __ptext82:
 22897                           	callstack 0
 22898  008AC6                     _write_package:
 22899                           	callstack 24
 22900                           
 22901                           ;eusartpackage.c: 52:         if(package.valid==0)
 22902                           
 22903                           ;incstack = 0
 22904  008AC6  5017               	movf	(write_package@package+6)^0,w,c
 22905  008AC8  B4D8               	btfsc	status,2,c
 22906  008ACA  0012               	return	
 22907                           
 22908                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 22909  008ACC  5015               	movf	(write_package@package+4)^0,w,c
 22910  008ACE  ECFB  F043         	call	_EUSART1_Write
 22911                           
 22912                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 22913  008AD2  5011               	movf	write_package@package^0,w,c
 22914  008AD4  ECFB  F043         	call	_EUSART1_Write
 22915                           
 22916                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 22917  008AD8  5012               	movf	(write_package@package+1)^0,w,c
 22918  008ADA  ECFB  F043         	call	_EUSART1_Write
 22919                           
 22920                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 22921  008ADE  5013               	movf	(write_package@package+2)^0,w,c
 22922  008AE0  ECFB  F043         	call	_EUSART1_Write
 22923                           
 22924                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 22925  008AE4  5014               	movf	(write_package@package+3)^0,w,c
 22926  008AE6  ECFB  F043         	call	_EUSART1_Write
 22927                           
 22928                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 22929  008AEA  5016               	movf	(write_package@package+5)^0,w,c
 22930  008AEC  ECFB  F043         	call	_EUSART1_Write
 22931  008AF0  0012               	return		;funcret
 22932  008AF2                     __end_of_write_package:
 22933                           	callstack 0
 22934                           
 22935 ;; *************** function _EUSART1_Write *****************
 22936 ;; Defined at:
 22937 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 22938 ;; Parameters:    Size  Location     Type
 22939 ;;  txData          1    wreg     unsigned char 
 22940 ;; Auto vars:     Size  Location     Type
 22941 ;;  txData          1   15[COMRAM] unsigned char 
 22942 ;; Return value:  Size  Location     Type
 22943 ;;                  1    wreg      void 
 22944 ;; Registers used:
 22945 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22946 ;; Tracked objects:
 22947 ;;		On entry : 0/1
 22948 ;;		On exit  : 3F/E
 22949 ;;		Unchanged: 0/0
 22950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22954 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22955 ;;Total ram usage:        1 bytes
 22956 ;; Hardware stack levels used: 1
 22957 ;; Hardware stack levels required when called: 4
 22958 ;; This function calls:
 22959 ;;		Nothing
 22960 ;; This function is called by:
 22961 ;;		_write_package
 22962 ;; This function uses a non-reentrant model
 22963 ;;
 22964                           
 22965                           	psect	text83
 22966  0087F6                     __ptext83:
 22967                           	callstack 0
 22968  0087F6                     _EUSART1_Write:
 22969                           	callstack 24
 22970                           
 22971                           ;incstack = 0
 22972                           ;EUSART1_Write@txData stored from wreg
 22973  0087F6  6E10               	movwf	EUSART1_Write@txData^0,c
 22974  0087F8                     
 22975                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 22976                           
 22977                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 22978  0087F8  0101               	movlb	1	; () banked
 22979  0087FA  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 22980  0087FC  B4D8               	btfsc	status,2,c
 22981  0087FE  D7FC               	goto	l11981
 22982                           
 22983                           ; BSR set to: 1
 22984                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 22985  008800  010E               	movlb	14	; () banked
 22986  008802  B9C5               	btfsc	197,4,b	;volatile
 22987  008804  D003               	goto	l100
 22988                           
 22989                           ; BSR set to: 14
 22990                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 22991  008806  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 22992                           
 22993                           ;mcc_generated_files/eusart1.c: 182:     }
 22994  00880A  D012               	goto	l11997
 22995  00880C                     l100:
 22996                           
 22997                           ; BSR set to: 14
 22998                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 22999  00880C  99C5               	bcf	197,4,b	;volatile
 23000                           
 23001                           ; BSR set to: 14
 23002                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23003  00880E  0E84               	movlw	low _eusart1TxBuffer
 23004  008810  0100               	movlb	0	; () banked
 23005  008812  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 23006  008814  6ED9               	movwf	fsr2l,c
 23007  008816  6ADA               	clrf	fsr2h,c
 23008  008818  0E02               	movlw	high _eusart1TxBuffer
 23009  00881A  22DA               	addwfc	fsr2h,f,c
 23010  00881C  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 23011                           
 23012                           ; BSR set to: 0
 23013  008820  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 23014                           
 23015                           ; BSR set to: 0
 23016                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23017  008822  0E07               	movlw	7
 23018  008824  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 23019  008826  D002               	goto	l11995
 23020                           
 23021                           ; BSR set to: 0
 23022                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23023  008828  0E00               	movlw	0
 23024  00882A  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 23025  00882C                     l11995:
 23026                           
 23027                           ; BSR set to: 0
 23028                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23029  00882C  0101               	movlb	1	; () banked
 23030  00882E  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 23031  008830                     l11997:
 23032                           
 23033                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23034  008830  010E               	movlb	14	; () banked
 23035  008832  89C5               	bsf	197,4,b	;volatile
 23036                           
 23037                           ; BSR set to: 14
 23038  008834  0012               	return		;funcret
 23039  008836                     __end_of_EUSART1_Write:
 23040                           	callstack 0
 23041                           
 23042 ;; *************** function _WWDT_TimerClear *****************
 23043 ;; Defined at:
 23044 ;;		line 128 in file "mcc_generated_files/mcc.c"
 23045 ;; Parameters:    Size  Location     Type
 23046 ;;		None
 23047 ;; Auto vars:     Size  Location     Type
 23048 ;;  state           1   15[COMRAM] _Bool 
 23049 ;;  readBack        1    0        unsigned char 
 23050 ;; Return value:  Size  Location     Type
 23051 ;;                  1    wreg      void 
 23052 ;; Registers used:
 23053 ;;		wreg, status,2
 23054 ;; Tracked objects:
 23055 ;;		On entry : 0/0
 23056 ;;		On exit  : 0/0
 23057 ;;		Unchanged: 0/0
 23058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23062 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23063 ;;Total ram usage:        1 bytes
 23064 ;; Hardware stack levels used: 1
 23065 ;; Hardware stack levels required when called: 4
 23066 ;; This function calls:
 23067 ;;		Nothing
 23068 ;; This function is called by:
 23069 ;;		_main
 23070 ;; This function uses a non-reentrant model
 23071 ;;
 23072                           
 23073                           	psect	text84
 23074  008EAC                     __ptext84:
 23075                           	callstack 0
 23076  008EAC                     _WWDT_TimerClear:
 23077                           	callstack 26
 23078                           
 23079                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 23080                           
 23081                           ; BSR set to: 14
 23082                           ;incstack = 0
 23083  008EAC  0E00               	movlw	0
 23084  008EAE  BEF2               	btfsc	4082,7,c	;volatile
 23085  008EB0  0E01               	movlw	1
 23086  008EB2  6E10               	movwf	WWDT_TimerClear@state^0,c
 23087                           
 23088                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 23089  008EB4  9EF2               	bcf	4082,7,c	;volatile
 23090  008EB6  010E               	movlb	14	; () banked
 23091  008EB8  51D2               	movf	210,w,b	;volatile
 23092  008EBA  0004               	clrwdt		;# 
 23093                           
 23094                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 23095  008EBC  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 23096  008EBE  D002               	bra	u18515
 23097  008EC0  9EF2               	bcf	4082,7,c	;volatile
 23098  008EC2  D001               	bra	u18516
 23099  008EC4                     u18515:
 23100  008EC4  8EF2               	bsf	4082,7,c	;volatile
 23101  008EC6                     u18516:
 23102  008EC6  0012               	return		;funcret
 23103  008EC8                     __end_of_WWDT_TimerClear:
 23104                           	callstack 0
 23105                           
 23106 ;; *************** function _WWDT_SoftEnable *****************
 23107 ;; Defined at:
 23108 ;;		line 104 in file "mcc_generated_files/mcc.c"
 23109 ;; Parameters:    Size  Location     Type
 23110 ;;		None
 23111 ;; Auto vars:     Size  Location     Type
 23112 ;;		None
 23113 ;; Return value:  Size  Location     Type
 23114 ;;                  1    wreg      void 
 23115 ;; Registers used:
 23116 ;;		None
 23117 ;; Tracked objects:
 23118 ;;		On entry : 3F/E
 23119 ;;		On exit  : 3F/E
 23120 ;;		Unchanged: 0/0
 23121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23126 ;;Total ram usage:        0 bytes
 23127 ;; Hardware stack levels used: 1
 23128 ;; Hardware stack levels required when called: 4
 23129 ;; This function calls:
 23130 ;;		Nothing
 23131 ;; This function is called by:
 23132 ;;		_main
 23133 ;; This function uses a non-reentrant model
 23134 ;;
 23135                           
 23136                           	psect	text85
 23137  0091E8                     __ptext85:
 23138                           	callstack 0
 23139  0091E8                     _WWDT_SoftEnable:
 23140                           	callstack 26
 23141                           
 23142                           ; BSR set to: 14
 23143                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 23144                           
 23145                           ;incstack = 0
 23146  0091E8  81D2               	bsf	210,0,b	;volatile
 23147                           
 23148                           ; BSR set to: 14
 23149  0091EA  0012               	return		;funcret
 23150  0091EC                     __end_of_WWDT_SoftEnable:
 23151                           	callstack 0
 23152                           
 23153 ;; *************** function _ShowVersion *****************
 23154 ;; Defined at:
 23155 ;;		line 254 in file "main_MC50.c"
 23156 ;; Parameters:    Size  Location     Type
 23157 ;;		None
 23158 ;; Auto vars:     Size  Location     Type
 23159 ;;		None
 23160 ;; Return value:  Size  Location     Type
 23161 ;;                  1    wreg      void 
 23162 ;; Registers used:
 23163 ;;		wreg, status,2, status,0, cstack
 23164 ;; Tracked objects:
 23165 ;;		On entry : 3F/1
 23166 ;;		On exit  : 3F/1
 23167 ;;		Unchanged: 0/0
 23168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23173 ;;Total ram usage:        0 bytes
 23174 ;; Hardware stack levels used: 1
 23175 ;; Hardware stack levels required when called: 5
 23176 ;; This function calls:
 23177 ;;		_SetSegmentValue
 23178 ;; This function is called by:
 23179 ;;		_main
 23180 ;; This function uses a non-reentrant model
 23181 ;;
 23182                           
 23183                           	psect	text86
 23184  008086                     __ptext86:
 23185                           	callstack 0
 23186  008086                     _ShowVersion:
 23187                           	callstack 25
 23188                           
 23189                           ; BSR set to: 1
 23190                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 23191                           
 23192                           ; BSR set to: 14
 23193                           ;incstack = 0
 23194  008086  BFD9               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 23195  008088  D005               	goto	u19600
 23196  00808A  51D9               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 23197  00808C  E12E               	bnz	l2039
 23198  00808E  05D8               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 23199  008090  B0D8               	btfsc	status,0,c
 23200  008092  0012               	return	
 23201  008094                     u19600:
 23202                           
 23203                           ; BSR set to: 1
 23204                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 23205  008094  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 23206  008096  A4D8               	btfss	status,2,c
 23207  008098  D006               	goto	l16781
 23208                           
 23209                           ; BSR set to: 1
 23210                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 23211  00809A  0E01               	movlw	1
 23212  00809C  6E1C               	movwf	SetSegmentValue@d2^0,c
 23213  00809E  0E00               	movlw	0
 23214  0080A0  ECA7  F047         	call	_SetSegmentValue
 23215                           
 23216                           ;main_MC50.c: 262:             }
 23217  0080A4  D01C               	goto	l2034
 23218  0080A6                     l16781:
 23219                           
 23220                           ; BSR set to: 1
 23221  0080A6  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 23222  0080A8  A4D8               	btfss	status,2,c
 23223  0080AA  D006               	goto	l16785
 23224                           
 23225                           ; BSR set to: 1
 23226                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 23227  0080AC  0E01               	movlw	1
 23228  0080AE  6E1C               	movwf	SetSegmentValue@d2^0,c
 23229  0080B0  0E14               	movlw	20
 23230  0080B2  ECA7  F047         	call	_SetSegmentValue
 23231                           
 23232                           ;main_MC50.c: 266:             }
 23233  0080B6  D013               	goto	l2034
 23234  0080B8                     l16785:
 23235                           
 23236                           ; BSR set to: 1
 23237  0080B8  0E02               	movlw	2
 23238  0080BA  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 23239  0080BC  A4D8               	btfss	status,2,c
 23240  0080BE  D006               	goto	l16789
 23241                           
 23242                           ; BSR set to: 1
 23243                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 23244  0080C0  0E00               	movlw	0
 23245  0080C2  6E1C               	movwf	SetSegmentValue@d2^0,c
 23246  0080C4  0E08               	movlw	8
 23247  0080C6  ECA7  F047         	call	_SetSegmentValue
 23248                           
 23249                           ;main_MC50.c: 270:             }
 23250  0080CA  D009               	goto	l2034
 23251  0080CC                     l16789:
 23252                           
 23253                           ; BSR set to: 1
 23254  0080CC  0E03               	movlw	3
 23255  0080CE  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 23256  0080D0  A4D8               	btfss	status,2,c
 23257  0080D2  D005               	goto	l2034
 23258                           
 23259                           ; BSR set to: 1
 23260                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 23261  0080D4  0E02               	movlw	2
 23262  0080D6  6E1C               	movwf	SetSegmentValue@d2^0,c
 23263  0080D8  0E14               	movlw	20
 23264  0080DA  ECA7  F047         	call	_SetSegmentValue
 23265  0080DE                     l2034:
 23266                           
 23267                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 23268                           
 23269                           ; BSR set to: 1
 23270  0080DE  0101               	movlb	1	; () banked
 23271  0080E0  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 23272                           
 23273                           ; BSR set to: 1
 23274                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 23275  0080E2  0E00               	movlw	0
 23276  0080E4  6FD9               	movwf	(_ts_system+61)& (0+255),b	;volatile
 23277  0080E6  0E14               	movlw	20
 23278  0080E8  6FD8               	movwf	(_ts_system+60)& (0+255),b	;volatile
 23279  0080EA                     l2039:
 23280                           
 23281                           ; BSR set to: 1
 23282  0080EA  0012               	return		;funcret
 23283  0080EC                     __end_of_ShowVersion:
 23284                           	callstack 0
 23285                           
 23286 ;; *************** function _SetSegmentValue *****************
 23287 ;; Defined at:
 23288 ;;		line 112 in file "outputs_MC50.c"
 23289 ;; Parameters:    Size  Location     Type
 23290 ;;  d1              1    wreg     unsigned char 
 23291 ;;  d2              1   27[COMRAM] unsigned char 
 23292 ;; Auto vars:     Size  Location     Type
 23293 ;;  d1              1   28[COMRAM] unsigned char 
 23294 ;; Return value:  Size  Location     Type
 23295 ;;                  1    wreg      void 
 23296 ;; Registers used:
 23297 ;;		wreg, status,2
 23298 ;; Tracked objects:
 23299 ;;		On entry : 0/0
 23300 ;;		On exit  : 3F/0
 23301 ;;		Unchanged: 0/0
 23302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23303 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23306 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23307 ;;Total ram usage:        2 bytes
 23308 ;; Hardware stack levels used: 1
 23309 ;; Hardware stack levels required when called: 4
 23310 ;; This function calls:
 23311 ;;		Nothing
 23312 ;; This function is called by:
 23313 ;;		_main
 23314 ;;		_ShowVersion
 23315 ;;		_controlSelectRemote
 23316 ;; This function uses a non-reentrant model
 23317 ;;
 23318                           
 23319                           	psect	text87
 23320  008F4E                     __ptext87:
 23321                           	callstack 0
 23322  008F4E                     _SetSegmentValue:
 23323                           	callstack 23
 23324                           
 23325                           ; BSR set to: 1
 23326                           ;incstack = 0
 23327                           ;SetSegmentValue@d1 stored from wreg
 23328  008F4E  6E1D               	movwf	SetSegmentValue@d1^0,c
 23329                           
 23330                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 23331  008F50  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 23332                           
 23333                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 23334  008F54  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 23335                           
 23336                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 23337  008F58  0E00               	movlw	0
 23338  008F5A  0100               	movlb	0	; () banked
 23339  008F5C  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 23340  008F5E  0E00               	movlw	0
 23341  008F60  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 23342                           
 23343                           ; BSR set to: 0
 23344                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 23345  008F62  0E00               	movlw	0
 23346  008F64  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 23347                           
 23348                           ; BSR set to: 0
 23349  008F66  0012               	return		;funcret
 23350  008F68                     __end_of_SetSegmentValue:
 23351                           	callstack 0
 23352                           
 23353 ;; *************** function _SYSTEM_Initialize *****************
 23354 ;; Defined at:
 23355 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23356 ;; Parameters:    Size  Location     Type
 23357 ;;		None
 23358 ;; Auto vars:     Size  Location     Type
 23359 ;;		None
 23360 ;; Return value:  Size  Location     Type
 23361 ;;                  1    wreg      void 
 23362 ;; Registers used:
 23363 ;;		wreg, status,2, status,0, cstack
 23364 ;; Tracked objects:
 23365 ;;		On entry : 3F/0
 23366 ;;		On exit  : 3F/E
 23367 ;;		Unchanged: 0/0
 23368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23373 ;;Total ram usage:        0 bytes
 23374 ;; Hardware stack levels used: 1
 23375 ;; Hardware stack levels required when called: 6
 23376 ;; This function calls:
 23377 ;;		_ADCC_Initialize
 23378 ;;		_EUSART1_Initialize
 23379 ;;		_I2C1_Initialize
 23380 ;;		_INTERRUPT_Initialize
 23381 ;;		_OSCILLATOR_Initialize
 23382 ;;		_PIN_MANAGER_Initialize
 23383 ;;		_PMD_Initialize
 23384 ;;		_TMR0_Initialize
 23385 ;;		_TMR1_Initialize
 23386 ;;		_TMR2_Initialize
 23387 ;;		_WWDT_Initialize
 23388 ;; This function is called by:
 23389 ;;		_main
 23390 ;; This function uses a non-reentrant model
 23391 ;;
 23392                           
 23393                           	psect	text88
 23394  008A6C                     __ptext88:
 23395                           	callstack 0
 23396  008A6C                     _SYSTEM_Initialize:
 23397                           	callstack 24
 23398                           
 23399                           ; BSR set to: 0
 23400                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23401                           
 23402                           ; BSR set to: 0
 23403                           ;incstack = 0
 23404  008A6C  ECF6  F048         	call	_INTERRUPT_Initialize	;wreg free
 23405                           
 23406                           ; BSR set to: 0
 23407                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23408  008A70  EC64  F047         	call	_PMD_Initialize	;wreg free
 23409                           
 23410                           ; BSR set to: 14
 23411                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 23412  008A74  EC32  F048         	call	_I2C1_Initialize	;wreg free
 23413                           
 23414                           ; BSR set to: 14
 23415                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 23416  008A78  EC19  F03A         	call	_PIN_MANAGER_Initialize	;wreg free
 23417                           
 23418                           ; BSR set to: 14
 23419                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 23420  008A7C  EC08  F048         	call	_OSCILLATOR_Initialize	;wreg free
 23421                           
 23422                           ; BSR set to: 14
 23423                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 23424  008A80  EC76  F048         	call	_WWDT_Initialize	;wreg free
 23425                           
 23426                           ; BSR set to: 14
 23427                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 23428  008A84  ECB5  F042         	call	_ADCC_Initialize	;wreg free
 23429                           
 23430                           ; BSR set to: 15
 23431                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23432  008A88  EC79  F045         	call	_TMR2_Initialize	;wreg free
 23433                           
 23434                           ; BSR set to: 14
 23435                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 23436  008A8C  ECDA  F043         	call	_TMR1_Initialize	;wreg free
 23437                           
 23438                           ; BSR set to: 14
 23439                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 23440  008A90  EC15  F047         	call	_TMR0_Initialize	;wreg free
 23441                           
 23442                           ; BSR set to: 14
 23443                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 23444  008A94  EC54  F03D         	call	_EUSART1_Initialize	;wreg free
 23445                           
 23446                           ; BSR set to: 14
 23447  008A98  0012               	return		;funcret
 23448  008A9A                     __end_of_SYSTEM_Initialize:
 23449                           	callstack 0
 23450                           
 23451 ;; *************** function _WWDT_Initialize *****************
 23452 ;; Defined at:
 23453 ;;		line 96 in file "mcc_generated_files/mcc.c"
 23454 ;; Parameters:    Size  Location     Type
 23455 ;;		None
 23456 ;; Auto vars:     Size  Location     Type
 23457 ;;		None
 23458 ;; Return value:  Size  Location     Type
 23459 ;;                  1    wreg      void 
 23460 ;; Registers used:
 23461 ;;		wreg, status,2
 23462 ;; Tracked objects:
 23463 ;;		On entry : 3F/E
 23464 ;;		On exit  : 3F/E
 23465 ;;		Unchanged: 0/0
 23466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23471 ;;Total ram usage:        0 bytes
 23472 ;; Hardware stack levels used: 1
 23473 ;; Hardware stack levels required when called: 4
 23474 ;; This function calls:
 23475 ;;		Nothing
 23476 ;; This function is called by:
 23477 ;;		_SYSTEM_Initialize
 23478 ;; This function uses a non-reentrant model
 23479 ;;
 23480                           
 23481                           	psect	text89
 23482  0090EC                     __ptext89:
 23483                           	callstack 0
 23484  0090EC                     _WWDT_Initialize:
 23485                           	callstack 25
 23486                           
 23487                           ; BSR set to: 14
 23488                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 23489                           
 23490                           ; BSR set to: 14
 23491                           ;incstack = 0
 23492  0090EC  0E16               	movlw	22
 23493  0090EE  6FD2               	movwf	210,b	;volatile
 23494                           
 23495                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 23496  0090F0  0E27               	movlw	39
 23497  0090F2  6FD3               	movwf	211,b	;volatile
 23498                           
 23499                           ; BSR set to: 14
 23500  0090F4  0012               	return		;funcret
 23501  0090F6                     __end_of_WWDT_Initialize:
 23502                           	callstack 0
 23503                           
 23504 ;; *************** function _TMR2_Initialize *****************
 23505 ;; Defined at:
 23506 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 23507 ;; Parameters:    Size  Location     Type
 23508 ;;		None
 23509 ;; Auto vars:     Size  Location     Type
 23510 ;;		None
 23511 ;; Return value:  Size  Location     Type
 23512 ;;                  1    wreg      void 
 23513 ;; Registers used:
 23514 ;;		wreg, status,2, status,0, cstack
 23515 ;; Tracked objects:
 23516 ;;		On entry : 3F/F
 23517 ;;		On exit  : 3F/E
 23518 ;;		Unchanged: 0/0
 23519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23524 ;;Total ram usage:        0 bytes
 23525 ;; Hardware stack levels used: 1
 23526 ;; Hardware stack levels required when called: 5
 23527 ;; This function calls:
 23528 ;;		_TMR2_SetInterruptHandler
 23529 ;; This function is called by:
 23530 ;;		_SYSTEM_Initialize
 23531 ;; This function uses a non-reentrant model
 23532 ;;
 23533                           
 23534                           	psect	text90
 23535  008AF2                     __ptext90:
 23536                           	callstack 0
 23537  008AF2                     _TMR2_Initialize:
 23538                           	callstack 24
 23539                           
 23540                           ; BSR set to: 15
 23541                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 23542                           
 23543                           ; BSR set to: 14
 23544                           ;incstack = 0
 23545  008AF2  0E02               	movlw	2
 23546  008AF4  6EBF               	movwf	191,c	;volatile
 23547                           
 23548                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 23549  008AF6  0E40               	movlw	64
 23550  008AF8  6EBE               	movwf	190,c	;volatile
 23551                           
 23552                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 23553  008AFA  0E00               	movlw	0
 23554  008AFC  6EC0               	movwf	192,c	;volatile
 23555                           
 23556                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 23557  008AFE  0EC7               	movlw	199
 23558  008B00  6EBC               	movwf	188,c	;volatile
 23559                           
 23560                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 23561  008B02  0E00               	movlw	0
 23562  008B04  6EBB               	movwf	187,c	;volatile
 23563                           
 23564                           ; BSR set to: 15
 23565                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 23566  008B06  010E               	movlb	14	; () banked
 23567  008B08  93CE               	bcf	206,1,b	;volatile
 23568                           
 23569                           ; BSR set to: 14
 23570                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 23571  008B0A  83C6               	bsf	198,1,b	;volatile
 23572                           
 23573                           ; BSR set to: 14
 23574                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 23575  008B0C  0E18               	movlw	low _TMR2_DefaultInterruptHandler
 23576  008B0E  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 23577  008B10  0E92               	movlw	high _TMR2_DefaultInterruptHandler
 23578  008B12  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 23579  008B14  EC7B  F048         	call	_TMR2_SetInterruptHandler	;wreg free
 23580                           
 23581                           ; BSR set to: 14
 23582                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 23583  008B18  0ED9               	movlw	217
 23584  008B1A  6EBD               	movwf	189,c	;volatile
 23585                           
 23586                           ; BSR set to: 14
 23587  008B1C  0012               	return		;funcret
 23588  008B1E                     __end_of_TMR2_Initialize:
 23589                           	callstack 0
 23590                           
 23591 ;; *************** function _TMR2_SetInterruptHandler *****************
 23592 ;; Defined at:
 23593 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 23594 ;; Parameters:    Size  Location     Type
 23595 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23596 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 23597 ;; Auto vars:     Size  Location     Type
 23598 ;;		None
 23599 ;; Return value:  Size  Location     Type
 23600 ;;                  1    wreg      void 
 23601 ;; Registers used:
 23602 ;;		wreg, status,2, status,0
 23603 ;; Tracked objects:
 23604 ;;		On entry : 3F/E
 23605 ;;		On exit  : 3F/E
 23606 ;;		Unchanged: 3F/0
 23607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23612 ;;Total ram usage:        2 bytes
 23613 ;; Hardware stack levels used: 1
 23614 ;; Hardware stack levels required when called: 4
 23615 ;; This function calls:
 23616 ;;		Nothing
 23617 ;; This function is called by:
 23618 ;;		_TMR2_Initialize
 23619 ;; This function uses a non-reentrant model
 23620 ;;
 23621                           
 23622                           	psect	text91
 23623  0090F6                     __ptext91:
 23624                           	callstack 0
 23625  0090F6                     _TMR2_SetInterruptHandler:
 23626                           	callstack 24
 23627                           
 23628                           ; BSR set to: 14
 23629                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 23630                           
 23631                           ; BSR set to: 14
 23632                           ;incstack = 0
 23633  0090F6  C010  F2DB         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 23634  0090FA  C011  F2DC         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 23635                           
 23636                           ; BSR set to: 14
 23637  0090FE  0012               	return		;funcret
 23638  009100                     __end_of_TMR2_SetInterruptHandler:
 23639                           	callstack 0
 23640                           
 23641 ;; *************** function _TMR1_Initialize *****************
 23642 ;; Defined at:
 23643 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 23644 ;; Parameters:    Size  Location     Type
 23645 ;;		None
 23646 ;; Auto vars:     Size  Location     Type
 23647 ;;		None
 23648 ;; Return value:  Size  Location     Type
 23649 ;;                  1    wreg      void 
 23650 ;; Registers used:
 23651 ;;		wreg, status,2, status,0, cstack
 23652 ;; Tracked objects:
 23653 ;;		On entry : 3F/E
 23654 ;;		On exit  : 3F/E
 23655 ;;		Unchanged: 0/0
 23656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23661 ;;Total ram usage:        2 bytes
 23662 ;; Hardware stack levels used: 1
 23663 ;; Hardware stack levels required when called: 5
 23664 ;; This function calls:
 23665 ;;		_TMR1_SetInterruptHandler
 23666 ;; This function is called by:
 23667 ;;		_SYSTEM_Initialize
 23668 ;; This function uses a non-reentrant model
 23669 ;;
 23670                           
 23671                           	psect	text92
 23672  0087B4                     __ptext92:
 23673                           	callstack 0
 23674  0087B4                     _TMR1_Initialize:
 23675                           	callstack 24
 23676                           
 23677                           ; BSR set to: 14
 23678                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 23679                           
 23680                           ; BSR set to: 14
 23681                           ;incstack = 0
 23682  0087B4  0E00               	movlw	0
 23683  0087B6  6ED0               	movwf	208,c	;volatile
 23684                           
 23685                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 23686  0087B8  0E00               	movlw	0
 23687  0087BA  6ED1               	movwf	209,c	;volatile
 23688                           
 23689                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 23690  0087BC  0E01               	movlw	1
 23691  0087BE  6ED2               	movwf	210,c	;volatile
 23692                           
 23693                           ; BSR set to: 14
 23694                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 23695  0087C0  68CE               	setf	206,c	;volatile
 23696                           
 23697                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 23698  0087C2  0E38               	movlw	56
 23699  0087C4  6ECD               	movwf	205,c	;volatile
 23700                           
 23701                           ; BSR set to: 14
 23702                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 23703  0087C6  91CE               	bcf	206,0,b	;volatile
 23704                           
 23705                           ; BSR set to: 14
 23706                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 23707  0087C8  50CD               	movf	205,w,c	;volatile
 23708  0087CA  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 23709  0087CE  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 23710  0087D0  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 23711  0087D4  6A12               	clrf	??_TMR1_Initialize^0,c
 23712  0087D6  1012               	iorwf	??_TMR1_Initialize^0,w,c
 23713  0087D8  0102               	movlb	2	; () banked
 23714  0087DA  6FDF               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 23715  0087DC  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 23716  0087DE  6FE0               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 23717                           
 23718                           ; BSR set to: 2
 23719                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 23720  0087E0  010E               	movlb	14	; () banked
 23721  0087E2  81C6               	bsf	198,0,b	;volatile
 23722                           
 23723                           ; BSR set to: 14
 23724                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 23725  0087E4  0E1A               	movlw	low _TMR1_DefaultInterruptHandler
 23726  0087E6  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 23727  0087E8  0E92               	movlw	high _TMR1_DefaultInterruptHandler
 23728  0087EA  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 23729  0087EC  EC80  F048         	call	_TMR1_SetInterruptHandler	;wreg free
 23730                           
 23731                           ; BSR set to: 14
 23732                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 23733  0087F0  0E31               	movlw	49
 23734  0087F2  6ECF               	movwf	207,c	;volatile
 23735                           
 23736                           ; BSR set to: 14
 23737  0087F4  0012               	return		;funcret
 23738  0087F6                     __end_of_TMR1_Initialize:
 23739                           	callstack 0
 23740                           
 23741 ;; *************** function _TMR1_SetInterruptHandler *****************
 23742 ;; Defined at:
 23743 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 23744 ;; Parameters:    Size  Location     Type
 23745 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23746 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 23747 ;; Auto vars:     Size  Location     Type
 23748 ;;		None
 23749 ;; Return value:  Size  Location     Type
 23750 ;;                  1    wreg      void 
 23751 ;; Registers used:
 23752 ;;		wreg, status,2, status,0
 23753 ;; Tracked objects:
 23754 ;;		On entry : 3F/E
 23755 ;;		On exit  : 3F/E
 23756 ;;		Unchanged: 3F/0
 23757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23762 ;;Total ram usage:        2 bytes
 23763 ;; Hardware stack levels used: 1
 23764 ;; Hardware stack levels required when called: 4
 23765 ;; This function calls:
 23766 ;;		Nothing
 23767 ;; This function is called by:
 23768 ;;		_TMR1_Initialize
 23769 ;; This function uses a non-reentrant model
 23770 ;;
 23771                           
 23772                           	psect	text93
 23773  009100                     __ptext93:
 23774                           	callstack 0
 23775  009100                     _TMR1_SetInterruptHandler:
 23776                           	callstack 24
 23777                           
 23778                           ; BSR set to: 14
 23779                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 23780                           
 23781                           ; BSR set to: 14
 23782                           ;incstack = 0
 23783  009100  C010  F2DD         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 23784  009104  C011  F2DE         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 23785                           
 23786                           ; BSR set to: 14
 23787  009108  0012               	return		;funcret
 23788  00910A                     __end_of_TMR1_SetInterruptHandler:
 23789                           	callstack 0
 23790                           
 23791 ;; *************** function _TMR0_Initialize *****************
 23792 ;; Defined at:
 23793 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 23794 ;; Parameters:    Size  Location     Type
 23795 ;;		None
 23796 ;; Auto vars:     Size  Location     Type
 23797 ;;		None
 23798 ;; Return value:  Size  Location     Type
 23799 ;;                  1    wreg      void 
 23800 ;; Registers used:
 23801 ;;		wreg, status,2, status,0, cstack
 23802 ;; Tracked objects:
 23803 ;;		On entry : 3F/E
 23804 ;;		On exit  : 3F/E
 23805 ;;		Unchanged: 0/0
 23806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23811 ;;Total ram usage:        0 bytes
 23812 ;; Hardware stack levels used: 1
 23813 ;; Hardware stack levels required when called: 5
 23814 ;; This function calls:
 23815 ;;		_TMR0_SetInterruptHandler
 23816 ;; This function is called by:
 23817 ;;		_SYSTEM_Initialize
 23818 ;; This function uses a non-reentrant model
 23819 ;;
 23820                           
 23821                           	psect	text94
 23822  008E2A                     __ptext94:
 23823                           	callstack 0
 23824  008E2A                     _TMR0_Initialize:
 23825                           	callstack 24
 23826                           
 23827                           ; BSR set to: 14
 23828                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 23829                           
 23830                           ; BSR set to: 14
 23831                           ;incstack = 0
 23832  008E2A  0E41               	movlw	65
 23833  008E2C  6ED6               	movwf	214,c	;volatile
 23834                           
 23835                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 23836  008E2E  0E84               	movlw	132
 23837  008E30  6ED4               	movwf	212,c	;volatile
 23838                           
 23839                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 23840  008E32  0E00               	movlw	0
 23841  008E34  6ED3               	movwf	211,c	;volatile
 23842                           
 23843                           ; BSR set to: 14
 23844                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 23845  008E36  9BCA               	bcf	202,5,b	;volatile
 23846                           
 23847                           ; BSR set to: 14
 23848                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 23849  008E38  8BC2               	bsf	194,5,b	;volatile
 23850                           
 23851                           ; BSR set to: 14
 23852                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 23853  008E3A  0E1C               	movlw	low _TMR0_DefaultInterruptHandler
 23854  008E3C  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 23855  008E3E  0E92               	movlw	high _TMR0_DefaultInterruptHandler
 23856  008E40  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 23857  008E42  EC85  F048         	call	_TMR0_SetInterruptHandler	;wreg free
 23858                           
 23859                           ; BSR set to: 14
 23860                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 23861  008E46  0E87               	movlw	135
 23862  008E48  6ED5               	movwf	213,c	;volatile
 23863                           
 23864                           ; BSR set to: 14
 23865  008E4A  0012               	return		;funcret
 23866  008E4C                     __end_of_TMR0_Initialize:
 23867                           	callstack 0
 23868                           
 23869 ;; *************** function _TMR0_SetInterruptHandler *****************
 23870 ;; Defined at:
 23871 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 23872 ;; Parameters:    Size  Location     Type
 23873 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23874 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 23875 ;; Auto vars:     Size  Location     Type
 23876 ;;		None
 23877 ;; Return value:  Size  Location     Type
 23878 ;;                  1    wreg      void 
 23879 ;; Registers used:
 23880 ;;		wreg, status,2, status,0
 23881 ;; Tracked objects:
 23882 ;;		On entry : 3F/E
 23883 ;;		On exit  : 3F/E
 23884 ;;		Unchanged: 3F/0
 23885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23889 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23890 ;;Total ram usage:        2 bytes
 23891 ;; Hardware stack levels used: 1
 23892 ;; Hardware stack levels required when called: 4
 23893 ;; This function calls:
 23894 ;;		Nothing
 23895 ;; This function is called by:
 23896 ;;		_TMR0_Initialize
 23897 ;; This function uses a non-reentrant model
 23898 ;;
 23899                           
 23900                           	psect	text95
 23901  00910A                     __ptext95:
 23902                           	callstack 0
 23903  00910A                     _TMR0_SetInterruptHandler:
 23904                           	callstack 24
 23905                           
 23906                           ; BSR set to: 14
 23907                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 23908                           
 23909                           ; BSR set to: 14
 23910                           ;incstack = 0
 23911  00910A  C010  F2E1         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 23912  00910E  C011  F2E2         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 23913                           
 23914                           ; BSR set to: 14
 23915  009112  0012               	return		;funcret
 23916  009114                     __end_of_TMR0_SetInterruptHandler:
 23917                           	callstack 0
 23918                           
 23919 ;; *************** function _PMD_Initialize *****************
 23920 ;; Defined at:
 23921 ;;		line 79 in file "mcc_generated_files/mcc.c"
 23922 ;; Parameters:    Size  Location     Type
 23923 ;;		None
 23924 ;; Auto vars:     Size  Location     Type
 23925 ;;		None
 23926 ;; Return value:  Size  Location     Type
 23927 ;;                  1    wreg      void 
 23928 ;; Registers used:
 23929 ;;		wreg, status,2
 23930 ;; Tracked objects:
 23931 ;;		On entry : 3F/0
 23932 ;;		On exit  : 3F/E
 23933 ;;		Unchanged: 0/0
 23934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23939 ;;Total ram usage:        0 bytes
 23940 ;; Hardware stack levels used: 1
 23941 ;; Hardware stack levels required when called: 4
 23942 ;; This function calls:
 23943 ;;		Nothing
 23944 ;; This function is called by:
 23945 ;;		_SYSTEM_Initialize
 23946 ;; This function uses a non-reentrant model
 23947 ;;
 23948                           
 23949                           	psect	text96
 23950  008EC8                     __ptext96:
 23951                           	callstack 0
 23952  008EC8                     _PMD_Initialize:
 23953                           	callstack 25
 23954                           
 23955                           ; BSR set to: 0
 23956                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 23957                           
 23958                           ; BSR set to: 14
 23959                           ;incstack = 0
 23960  008EC8  0E00               	movlw	0
 23961  008ECA  010E               	movlb	14	; () banked
 23962  008ECC  6FE1               	movwf	225,b	;volatile
 23963                           
 23964                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 23965  008ECE  0E00               	movlw	0
 23966  008ED0  6FE2               	movwf	226,b	;volatile
 23967                           
 23968                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 23969  008ED2  0E00               	movlw	0
 23970  008ED4  6FE3               	movwf	227,b	;volatile
 23971                           
 23972                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 23973  008ED6  0E00               	movlw	0
 23974  008ED8  6FE4               	movwf	228,b	;volatile
 23975                           
 23976                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 23977  008EDA  0E00               	movlw	0
 23978  008EDC  6FE5               	movwf	229,b	;volatile
 23979                           
 23980                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 23981  008EDE  0E00               	movlw	0
 23982  008EE0  6FE6               	movwf	230,b	;volatile
 23983                           
 23984                           ; BSR set to: 14
 23985  008EE2  0012               	return		;funcret
 23986  008EE4                     __end_of_PMD_Initialize:
 23987                           	callstack 0
 23988                           
 23989 ;; *************** function _PIN_MANAGER_Initialize *****************
 23990 ;; Defined at:
 23991 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 23992 ;; Parameters:    Size  Location     Type
 23993 ;;		None
 23994 ;; Auto vars:     Size  Location     Type
 23995 ;;		None
 23996 ;; Return value:  Size  Location     Type
 23997 ;;                  1    wreg      void 
 23998 ;; Registers used:
 23999 ;;		wreg, status,2
 24000 ;; Tracked objects:
 24001 ;;		On entry : 3F/E
 24002 ;;		On exit  : 3F/E
 24003 ;;		Unchanged: 0/0
 24004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24009 ;;Total ram usage:        0 bytes
 24010 ;; Hardware stack levels used: 1
 24011 ;; Hardware stack levels required when called: 4
 24012 ;; This function calls:
 24013 ;;		Nothing
 24014 ;; This function is called by:
 24015 ;;		_SYSTEM_Initialize
 24016 ;; This function uses a non-reentrant model
 24017 ;;
 24018                           
 24019                           	psect	text97
 24020  007432                     __ptext97:
 24021                           	callstack 0
 24022  007432                     _PIN_MANAGER_Initialize:
 24023                           	callstack 25
 24024                           
 24025                           ; BSR set to: 14
 24026                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 24027                           
 24028                           ; BSR set to: 14
 24029                           ;incstack = 0
 24030  007432  0E00               	movlw	0
 24031  007434  6E87               	movwf	135,c	;volatile
 24032                           
 24033                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 24034  007436  0E00               	movlw	0
 24035  007438  6E86               	movwf	134,c	;volatile
 24036                           
 24037                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 24038  00743A  0E00               	movlw	0
 24039  00743C  6E83               	movwf	131,c	;volatile
 24040                           
 24041                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 24042  00743E  0E00               	movlw	0
 24043  007440  6E84               	movwf	132,c	;volatile
 24044                           
 24045                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 24046  007442  0E00               	movlw	0
 24047  007444  6E85               	movwf	133,c	;volatile
 24048                           
 24049                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 24050  007446  0E00               	movlw	0
 24051  007448  6E8C               	movwf	140,c	;volatile
 24052                           
 24053                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 24054  00744A  0E7F               	movlw	127
 24055  00744C  6E88               	movwf	136,c	;volatile
 24056                           
 24057                           ; BSR set to: 14
 24058                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 24059  00744E  6889               	setf	137,c	;volatile
 24060                           
 24061                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 24062  007450  0E58               	movlw	88
 24063  007452  6E8A               	movwf	138,c	;volatile
 24064                           
 24065                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 24066  007454  0E00               	movlw	0
 24067  007456  6E8B               	movwf	139,c	;volatile
 24068                           
 24069                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 24070  007458  0E00               	movlw	0
 24071  00745A  010F               	movlb	15	; () banked
 24072  00745C  6F26               	movwf	38,b	;volatile
 24073                           
 24074                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 24075  00745E  0E00               	movlw	0
 24076  007460  6F21               	movwf	33,b	;volatile
 24077                           
 24078                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 24079  007462  0E00               	movlw	0
 24080  007464  6F19               	movwf	25,b	;volatile
 24081                           
 24082                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 24083  007466  0E00               	movlw	0
 24084  007468  6F2E               	movwf	46,b	;volatile
 24085                           
 24086                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 24087  00746A  0E01               	movlw	1
 24088  00746C  6F11               	movwf	17,b	;volatile
 24089                           
 24090                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 24091  00746E  0E00               	movlw	0
 24092  007470  6F25               	movwf	37,b	;volatile
 24093                           
 24094                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 24095  007472  0E00               	movlw	0
 24096  007474  6F2D               	movwf	45,b	;volatile
 24097                           
 24098                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 24099  007476  0EF7               	movlw	247
 24100  007478  6F18               	movwf	24,b	;volatile
 24101                           
 24102                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 24103  00747A  0E00               	movlw	0
 24104  00747C  6F10               	movwf	16,b	;volatile
 24105                           
 24106                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 24107  00747E  0E00               	movlw	0
 24108  007480  6F20               	movwf	32,b	;volatile
 24109                           
 24110                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 24111  007482  0E00               	movlw	0
 24112  007484  6F2C               	movwf	44,b	;volatile
 24113                           
 24114                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 24115  007486  0E00               	movlw	0
 24116  007488  6F0F               	movwf	15,b	;volatile
 24117                           
 24118                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 24119  00748A  0E00               	movlw	0
 24120  00748C  6F17               	movwf	23,b	;volatile
 24121                           
 24122                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 24123  00748E  0E00               	movlw	0
 24124  007490  6F1F               	movwf	31,b	;volatile
 24125                           
 24126                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 24127  007492  0E00               	movlw	0
 24128  007494  6F24               	movwf	36,b	;volatile
 24129                           
 24130                           ; BSR set to: 15
 24131                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 24132  007496  690E               	setf	14,b	;volatile
 24133                           
 24134                           ; BSR set to: 15
 24135                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 24136  007498  6916               	setf	22,b	;volatile
 24137                           
 24138                           ; BSR set to: 15
 24139                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 24140  00749A  691E               	setf	30,b	;volatile
 24141                           
 24142                           ; BSR set to: 15
 24143                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 24144  00749C  6923               	setf	35,b	;volatile
 24145                           
 24146                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 24147  00749E  0E07               	movlw	7
 24148  0074A0  6F2B               	movwf	43,b	;volatile
 24149                           
 24150                           ; BSR set to: 15
 24151                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 24152  0074A2  690D               	setf	13,b	;volatile
 24153                           
 24154                           ; BSR set to: 15
 24155                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 24156  0074A4  6915               	setf	21,b	;volatile
 24157                           
 24158                           ; BSR set to: 15
 24159                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 24160  0074A6  691D               	setf	29,b	;volatile
 24161                           
 24162                           ; BSR set to: 15
 24163                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 24164  0074A8  6922               	setf	34,b	;volatile
 24165                           
 24166                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 24167  0074AA  0E0F               	movlw	15
 24168  0074AC  6F2A               	movwf	42,b	;volatile
 24169                           
 24170                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 24171  0074AE  0E13               	movlw	19
 24172  0074B0  010E               	movlb	14	; () banked
 24173  0074B2  6FB7               	movwf	183,b	;volatile
 24174                           
 24175                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 24176  0074B4  0E16               	movlw	22
 24177  0074B6  6FB5               	movwf	181,b	;volatile
 24178                           
 24179                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 24180  0074B8  0E0F               	movlw	15
 24181  0074BA  6FFA               	movwf	250,b	;volatile
 24182                           
 24183                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 24184  0074BC  0E10               	movlw	16
 24185  0074BE  6FFB               	movwf	251,b	;volatile
 24186                           
 24187                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 24188  0074C0  0E09               	movlw	9
 24189  0074C2  6FFE               	movwf	254,b	;volatile
 24190                           
 24191                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 24192  0074C4  0E14               	movlw	20
 24193  0074C6  6FB8               	movwf	184,b	;volatile
 24194                           
 24195                           ; BSR set to: 14
 24196  0074C8  0012               	return		;funcret
 24197  0074CA                     __end_of_PIN_MANAGER_Initialize:
 24198                           	callstack 0
 24199                           
 24200 ;; *************** function _OSCILLATOR_Initialize *****************
 24201 ;; Defined at:
 24202 ;;		line 65 in file "mcc_generated_files/mcc.c"
 24203 ;; Parameters:    Size  Location     Type
 24204 ;;		None
 24205 ;; Auto vars:     Size  Location     Type
 24206 ;;		None
 24207 ;; Return value:  Size  Location     Type
 24208 ;;                  1    wreg      void 
 24209 ;; Registers used:
 24210 ;;		wreg, status,2
 24211 ;; Tracked objects:
 24212 ;;		On entry : 3F/E
 24213 ;;		On exit  : 3F/E
 24214 ;;		Unchanged: 0/0
 24215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24220 ;;Total ram usage:        0 bytes
 24221 ;; Hardware stack levels used: 1
 24222 ;; Hardware stack levels required when called: 4
 24223 ;; This function calls:
 24224 ;;		Nothing
 24225 ;; This function is called by:
 24226 ;;		_SYSTEM_Initialize
 24227 ;; This function uses a non-reentrant model
 24228 ;;
 24229                           
 24230                           	psect	text98
 24231  009010                     __ptext98:
 24232                           	callstack 0
 24233  009010                     _OSCILLATOR_Initialize:
 24234                           	callstack 25
 24235                           
 24236                           ; BSR set to: 14
 24237                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 24238                           
 24239                           ; BSR set to: 14
 24240                           ;incstack = 0
 24241  009010  0E60               	movlw	96
 24242  009012  6FD8               	movwf	216,b	;volatile
 24243                           
 24244                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 24245  009014  0E00               	movlw	0
 24246  009016  6FDA               	movwf	218,b	;volatile
 24247                           
 24248                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 24249  009018  0E00               	movlw	0
 24250  00901A  6FDC               	movwf	220,b	;volatile
 24251                           
 24252                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 24253  00901C  0E08               	movlw	8
 24254  00901E  6FDE               	movwf	222,b	;volatile
 24255                           
 24256                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 24257  009020  0E00               	movlw	0
 24258  009022  6FDD               	movwf	221,b	;volatile
 24259                           
 24260                           ; BSR set to: 14
 24261  009024  0012               	return		;funcret
 24262  009026                     __end_of_OSCILLATOR_Initialize:
 24263                           	callstack 0
 24264                           
 24265 ;; *************** function _INTERRUPT_Initialize *****************
 24266 ;; Defined at:
 24267 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24268 ;; Parameters:    Size  Location     Type
 24269 ;;		None
 24270 ;; Auto vars:     Size  Location     Type
 24271 ;;		None
 24272 ;; Return value:  Size  Location     Type
 24273 ;;                  1    wreg      void 
 24274 ;; Registers used:
 24275 ;;		None
 24276 ;; Tracked objects:
 24277 ;;		On entry : 3F/0
 24278 ;;		On exit  : 3F/0
 24279 ;;		Unchanged: 3F/0
 24280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24285 ;;Total ram usage:        0 bytes
 24286 ;; Hardware stack levels used: 1
 24287 ;; Hardware stack levels required when called: 4
 24288 ;; This function calls:
 24289 ;;		Nothing
 24290 ;; This function is called by:
 24291 ;;		_SYSTEM_Initialize
 24292 ;; This function uses a non-reentrant model
 24293 ;;
 24294                           
 24295                           	psect	text99
 24296  0091EC                     __ptext99:
 24297                           	callstack 0
 24298  0091EC                     _INTERRUPT_Initialize:
 24299                           	callstack 25
 24300                           
 24301                           ; BSR set to: 0
 24302                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 24303                           
 24304                           ; BSR set to: 14
 24305                           ;incstack = 0
 24306  0091EC  9AF2               	bcf	242,5,c	;volatile
 24307                           
 24308                           ; BSR set to: 0
 24309  0091EE  0012               	return		;funcret
 24310  0091F0                     __end_of_INTERRUPT_Initialize:
 24311                           	callstack 0
 24312                           
 24313 ;; *************** function _I2C1_Initialize *****************
 24314 ;; Defined at:
 24315 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 24316 ;; Parameters:    Size  Location     Type
 24317 ;;		None
 24318 ;; Auto vars:     Size  Location     Type
 24319 ;;		None
 24320 ;; Return value:  Size  Location     Type
 24321 ;;                  1    wreg      void 
 24322 ;; Registers used:
 24323 ;;		wreg, status,2
 24324 ;; Tracked objects:
 24325 ;;		On entry : 3F/E
 24326 ;;		On exit  : 3F/E
 24327 ;;		Unchanged: 3F/0
 24328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24333 ;;Total ram usage:        0 bytes
 24334 ;; Hardware stack levels used: 1
 24335 ;; Hardware stack levels required when called: 4
 24336 ;; This function calls:
 24337 ;;		Nothing
 24338 ;; This function is called by:
 24339 ;;		_SYSTEM_Initialize
 24340 ;; This function uses a non-reentrant model
 24341 ;;
 24342                           
 24343                           	psect	text100
 24344  009064                     __ptext100:
 24345                           	callstack 0
 24346  009064                     _I2C1_Initialize:
 24347                           	callstack 25
 24348                           
 24349                           ; BSR set to: 14
 24350                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 24351                           
 24352                           ; BSR set to: 0
 24353                           ;incstack = 0
 24354  009064  0E80               	movlw	128
 24355  009066  6E95               	movwf	149,c	;volatile
 24356                           
 24357                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 24358  009068  0E08               	movlw	8
 24359  00906A  6E96               	movwf	150,c	;volatile
 24360                           
 24361                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 24362  00906C  0E00               	movlw	0
 24363  00906E  6E97               	movwf	151,c	;volatile
 24364                           
 24365                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 24366  009070  0E9F               	movlw	159
 24367  009072  6E93               	movwf	147,c	;volatile
 24368                           
 24369                           ; BSR set to: 14
 24370                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 24371  009074  9A96               	bcf	150,5,c	;volatile
 24372                           
 24373                           ; BSR set to: 14
 24374  009076  0012               	return		;funcret
 24375  009078                     __end_of_I2C1_Initialize:
 24376                           	callstack 0
 24377                           
 24378 ;; *************** function _EUSART1_Initialize *****************
 24379 ;; Defined at:
 24380 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 24381 ;; Parameters:    Size  Location     Type
 24382 ;;		None
 24383 ;; Auto vars:     Size  Location     Type
 24384 ;;		None
 24385 ;; Return value:  Size  Location     Type
 24386 ;;                  1    wreg      void 
 24387 ;; Registers used:
 24388 ;;		wreg, status,2, status,0, cstack
 24389 ;; Tracked objects:
 24390 ;;		On entry : 3F/E
 24391 ;;		On exit  : 3F/E
 24392 ;;		Unchanged: 0/0
 24393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24398 ;;Total ram usage:        0 bytes
 24399 ;; Hardware stack levels used: 1
 24400 ;; Hardware stack levels required when called: 5
 24401 ;; This function calls:
 24402 ;;		_EUSART1_SetErrorHandler
 24403 ;;		_EUSART1_SetFramingErrorHandler
 24404 ;;		_EUSART1_SetOverrunErrorHandler
 24405 ;;		_EUSART1_SetRxInterruptHandler
 24406 ;;		_EUSART1_SetTxInterruptHandler
 24407 ;; This function is called by:
 24408 ;;		_SYSTEM_Initialize
 24409 ;; This function uses a non-reentrant model
 24410 ;;
 24411                           
 24412                           	psect	text101
 24413  007AA8                     __ptext101:
 24414                           	callstack 0
 24415  007AA8                     _EUSART1_Initialize:
 24416                           	callstack 24
 24417                           
 24418                           ; BSR set to: 14
 24419                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 24420                           
 24421                           ; BSR set to: 14
 24422                           ;incstack = 0
 24423  007AA8  9BC5               	bcf	197,5,b	;volatile
 24424                           
 24425                           ; BSR set to: 14
 24426                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 24427  007AAA  0E98               	movlw	low _EUSART1_Receive_ISR
 24428  007AAC  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 24429  007AAE  0E73               	movlw	high _EUSART1_Receive_ISR
 24430  007AB0  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 24431  007AB2  EC8F  F048         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 24432                           
 24433                           ; BSR set to: 14
 24434                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 24435  007AB6  99C5               	bcf	197,4,b	;volatile
 24436                           
 24437                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 24438  007AB8  0E0A               	movlw	low _EUSART1_Transmit_ISR
 24439  007ABA  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 24440  007ABC  0E8A               	movlw	high _EUSART1_Transmit_ISR
 24441  007ABE  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 24442  007AC0  EC8A  F048         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 24443                           
 24444                           ; BSR set to: 14
 24445                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 24446  007AC4  0E08               	movlw	8
 24447  007AC6  6E9F               	movwf	159,c	;volatile
 24448                           
 24449                           ; BSR set to: 14
 24450                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 24451  007AC8  0E90               	movlw	144
 24452  007ACA  6E9D               	movwf	157,c	;volatile
 24453                           
 24454                           ; BSR set to: 14
 24455                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 24456  007ACC  0E24               	movlw	36
 24457  007ACE  6E9E               	movwf	158,c	;volatile
 24458                           
 24459                           ; BSR set to: 14
 24460                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 24461  007AD0  0E82               	movlw	130
 24462  007AD2  6E9B               	movwf	155,c	;volatile
 24463                           
 24464                           ; BSR set to: 14
 24465                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 24466  007AD4  0E06               	movlw	6
 24467  007AD6  6E9C               	movwf	156,c	;volatile
 24468                           
 24469                           ; BSR set to: 14
 24470                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 24471  007AD8  0E1E               	movlw	low _EUSART1_DefaultFramingErrorHandler
 24472  007ADA  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 24473  007ADC  0E92               	movlw	high _EUSART1_DefaultFramingErrorHandler
 24474  007ADE  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 24475  007AE0  EC99  F048         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 24476                           
 24477                           ; BSR set to: 14
 24478                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 24479  007AE4  0ED8               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 24480  007AE6  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 24481  007AE8  0E91               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 24482  007AEA  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 24483  007AEC  EC94  F048         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 24484                           
 24485                           ; BSR set to: 14
 24486                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 24487  007AF0  0EDE               	movlw	low _EUSART1_DefaultErrorHandler
 24488  007AF2  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 24489  007AF4  0E91               	movlw	high _EUSART1_DefaultErrorHandler
 24490  007AF6  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 24491  007AF8  EC9E  F048         	call	_EUSART1_SetErrorHandler	;wreg free
 24492                           
 24493                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 24494  007AFC  0E00               	movlw	0
 24495  007AFE  0101               	movlb	1	; () banked
 24496  007B00  6F9B               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 24497                           
 24498                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 24499  007B02  0E00               	movlw	0
 24500  007B04  0100               	movlb	0	; () banked
 24501  007B06  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 24502                           
 24503                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 24504  007B08  0E00               	movlw	0
 24505  007B0A  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 24506                           
 24507                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 24508  007B0C  0E08               	movlw	8
 24509  007B0E  0101               	movlb	1	; () banked
 24510  007B10  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 24511                           
 24512                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 24513  007B12  0E00               	movlw	0
 24514  007B14  0100               	movlb	0	; () banked
 24515  007B16  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 24516                           
 24517                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 24518  007B18  0E00               	movlw	0
 24519  007B1A  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 24520                           
 24521                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 24522  007B1C  0E00               	movlw	0
 24523  007B1E  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 24524                           
 24525                           ; BSR set to: 0
 24526                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 24527  007B20  010E               	movlb	14	; () banked
 24528  007B22  8BC5               	bsf	197,5,b	;volatile
 24529                           
 24530                           ; BSR set to: 14
 24531  007B24  0012               	return		;funcret
 24532  007B26                     __end_of_EUSART1_Initialize:
 24533                           	callstack 0
 24534                           
 24535 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 24536 ;; Defined at:
 24537 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 24538 ;; Parameters:    Size  Location     Type
 24539 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24540 ;;		 -> EUSART1_Transmit_ISR(1), 
 24541 ;; Auto vars:     Size  Location     Type
 24542 ;;		None
 24543 ;; Return value:  Size  Location     Type
 24544 ;;                  1    wreg      void 
 24545 ;; Registers used:
 24546 ;;		wreg, status,2, status,0
 24547 ;; Tracked objects:
 24548 ;;		On entry : 3F/E
 24549 ;;		On exit  : 3F/E
 24550 ;;		Unchanged: 3F/0
 24551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24555 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24556 ;;Total ram usage:        2 bytes
 24557 ;; Hardware stack levels used: 1
 24558 ;; Hardware stack levels required when called: 4
 24559 ;; This function calls:
 24560 ;;		Nothing
 24561 ;; This function is called by:
 24562 ;;		_EUSART1_Initialize
 24563 ;; This function uses a non-reentrant model
 24564 ;;
 24565                           
 24566                           	psect	text102
 24567  009114                     __ptext102:
 24568                           	callstack 0
 24569  009114                     _EUSART1_SetTxInterruptHandler:
 24570                           	callstack 24
 24571                           
 24572                           ; BSR set to: 14
 24573                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 24574                           
 24575                           ; BSR set to: 14
 24576                           ;incstack = 0
 24577  009114  C010  F2EB         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 24578  009118  C011  F2EC         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 24579                           
 24580                           ; BSR set to: 14
 24581  00911C  0012               	return		;funcret
 24582  00911E                     __end_of_EUSART1_SetTxInterruptHandler:
 24583                           	callstack 0
 24584                           
 24585 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 24586 ;; Defined at:
 24587 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 24588 ;; Parameters:    Size  Location     Type
 24589 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24590 ;;		 -> EUSART1_Receive_ISR(1), 
 24591 ;; Auto vars:     Size  Location     Type
 24592 ;;		None
 24593 ;; Return value:  Size  Location     Type
 24594 ;;                  1    wreg      void 
 24595 ;; Registers used:
 24596 ;;		wreg, status,2, status,0
 24597 ;; Tracked objects:
 24598 ;;		On entry : 3F/E
 24599 ;;		On exit  : 3F/E
 24600 ;;		Unchanged: 3F/0
 24601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24606 ;;Total ram usage:        2 bytes
 24607 ;; Hardware stack levels used: 1
 24608 ;; Hardware stack levels required when called: 4
 24609 ;; This function calls:
 24610 ;;		Nothing
 24611 ;; This function is called by:
 24612 ;;		_EUSART1_Initialize
 24613 ;; This function uses a non-reentrant model
 24614 ;;
 24615                           
 24616                           	psect	text103
 24617  00911E                     __ptext103:
 24618                           	callstack 0
 24619  00911E                     _EUSART1_SetRxInterruptHandler:
 24620                           	callstack 24
 24621                           
 24622                           ; BSR set to: 14
 24623                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 24624                           
 24625                           ; BSR set to: 14
 24626                           ;incstack = 0
 24627  00911E  C010  F2E9         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 24628  009122  C011  F2EA         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 24629                           
 24630                           ; BSR set to: 14
 24631  009126  0012               	return		;funcret
 24632  009128                     __end_of_EUSART1_SetRxInterruptHandler:
 24633                           	callstack 0
 24634                           
 24635 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 24636 ;; Defined at:
 24637 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 24638 ;; Parameters:    Size  Location     Type
 24639 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24640 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 24641 ;; Auto vars:     Size  Location     Type
 24642 ;;		None
 24643 ;; Return value:  Size  Location     Type
 24644 ;;                  1    wreg      void 
 24645 ;; Registers used:
 24646 ;;		wreg, status,2, status,0
 24647 ;; Tracked objects:
 24648 ;;		On entry : 3F/E
 24649 ;;		On exit  : 3F/E
 24650 ;;		Unchanged: 3F/0
 24651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24656 ;;Total ram usage:        2 bytes
 24657 ;; Hardware stack levels used: 1
 24658 ;; Hardware stack levels required when called: 4
 24659 ;; This function calls:
 24660 ;;		Nothing
 24661 ;; This function is called by:
 24662 ;;		_EUSART1_Initialize
 24663 ;; This function uses a non-reentrant model
 24664 ;;
 24665                           
 24666                           	psect	text104
 24667  009128                     __ptext104:
 24668                           	callstack 0
 24669  009128                     _EUSART1_SetOverrunErrorHandler:
 24670                           	callstack 24
 24671                           
 24672                           ; BSR set to: 14
 24673                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 24674                           
 24675                           ; BSR set to: 14
 24676                           ;incstack = 0
 24677  009128  C010  F2E5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 24678  00912C  C011  F2E6         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 24679                           
 24680                           ; BSR set to: 14
 24681  009130  0012               	return		;funcret
 24682  009132                     __end_of_EUSART1_SetOverrunErrorHandler:
 24683                           	callstack 0
 24684                           
 24685 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 24686 ;; Defined at:
 24687 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 24688 ;; Parameters:    Size  Location     Type
 24689 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24690 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 24691 ;; Auto vars:     Size  Location     Type
 24692 ;;		None
 24693 ;; Return value:  Size  Location     Type
 24694 ;;                  1    wreg      void 
 24695 ;; Registers used:
 24696 ;;		wreg, status,2, status,0
 24697 ;; Tracked objects:
 24698 ;;		On entry : 3F/E
 24699 ;;		On exit  : 3F/E
 24700 ;;		Unchanged: 3F/0
 24701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24705 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24706 ;;Total ram usage:        2 bytes
 24707 ;; Hardware stack levels used: 1
 24708 ;; Hardware stack levels required when called: 4
 24709 ;; This function calls:
 24710 ;;		Nothing
 24711 ;; This function is called by:
 24712 ;;		_EUSART1_Initialize
 24713 ;; This function uses a non-reentrant model
 24714 ;;
 24715                           
 24716                           	psect	text105
 24717  009132                     __ptext105:
 24718                           	callstack 0
 24719  009132                     _EUSART1_SetFramingErrorHandler:
 24720                           	callstack 24
 24721                           
 24722                           ; BSR set to: 14
 24723                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 24724                           
 24725                           ; BSR set to: 14
 24726                           ;incstack = 0
 24727  009132  C010  F2E7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 24728  009136  C011  F2E8         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 24729                           
 24730                           ; BSR set to: 14
 24731  00913A  0012               	return		;funcret
 24732  00913C                     __end_of_EUSART1_SetFramingErrorHandler:
 24733                           	callstack 0
 24734                           
 24735 ;; *************** function _EUSART1_SetErrorHandler *****************
 24736 ;; Defined at:
 24737 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 24738 ;; Parameters:    Size  Location     Type
 24739 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24740 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 24741 ;; Auto vars:     Size  Location     Type
 24742 ;;		None
 24743 ;; Return value:  Size  Location     Type
 24744 ;;                  1    wreg      void 
 24745 ;; Registers used:
 24746 ;;		wreg, status,2, status,0
 24747 ;; Tracked objects:
 24748 ;;		On entry : 3F/E
 24749 ;;		On exit  : 3F/E
 24750 ;;		Unchanged: 3F/0
 24751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24756 ;;Total ram usage:        2 bytes
 24757 ;; Hardware stack levels used: 1
 24758 ;; Hardware stack levels required when called: 4
 24759 ;; This function calls:
 24760 ;;		Nothing
 24761 ;; This function is called by:
 24762 ;;		_EUSART1_Initialize
 24763 ;; This function uses a non-reentrant model
 24764 ;;
 24765                           
 24766                           	psect	text106
 24767  00913C                     __ptext106:
 24768                           	callstack 0
 24769  00913C                     _EUSART1_SetErrorHandler:
 24770                           	callstack 24
 24771                           
 24772                           ; BSR set to: 14
 24773                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 24774                           
 24775                           ; BSR set to: 14
 24776                           ;incstack = 0
 24777  00913C  C010  F2E3         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 24778  009140  C011  F2E4         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 24779                           
 24780                           ; BSR set to: 14
 24781  009144  0012               	return		;funcret
 24782  009146                     __end_of_EUSART1_SetErrorHandler:
 24783                           	callstack 0
 24784                           
 24785 ;; *************** function _ADCC_Initialize *****************
 24786 ;; Defined at:
 24787 ;;		line 62 in file "mcc_generated_files/adcc.c"
 24788 ;; Parameters:    Size  Location     Type
 24789 ;;		None
 24790 ;; Auto vars:     Size  Location     Type
 24791 ;;		None
 24792 ;; Return value:  Size  Location     Type
 24793 ;;                  1    wreg      void 
 24794 ;; Registers used:
 24795 ;;		wreg, status,2
 24796 ;; Tracked objects:
 24797 ;;		On entry : 3F/E
 24798 ;;		On exit  : 3F/F
 24799 ;;		Unchanged: 0/0
 24800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24805 ;;Total ram usage:        0 bytes
 24806 ;; Hardware stack levels used: 1
 24807 ;; Hardware stack levels required when called: 4
 24808 ;; This function calls:
 24809 ;;		Nothing
 24810 ;; This function is called by:
 24811 ;;		_SYSTEM_Initialize
 24812 ;; This function uses a non-reentrant model
 24813 ;;
 24814                           
 24815                           	psect	text107
 24816  00856A                     __ptext107:
 24817                           	callstack 0
 24818  00856A                     _ADCC_Initialize:
 24819                           	callstack 25
 24820                           
 24821                           ; BSR set to: 14
 24822                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 24823                           
 24824                           ; BSR set to: 14
 24825                           ;incstack = 0
 24826  00856A  0E00               	movlw	0
 24827  00856C  6E6A               	movwf	106,c	;volatile
 24828                           
 24829                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 24830  00856E  0E00               	movlw	0
 24831  008570  6E6B               	movwf	107,c	;volatile
 24832                           
 24833                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 24834  008572  0E00               	movlw	0
 24835  008574  6E6C               	movwf	108,c	;volatile
 24836                           
 24837                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 24838  008576  0E00               	movlw	0
 24839  008578  6E6D               	movwf	109,c	;volatile
 24840                           
 24841                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 24842  00857A  0E00               	movlw	0
 24843  00857C  6E68               	movwf	104,c	;volatile
 24844                           
 24845                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 24846  00857E  0E00               	movlw	0
 24847  008580  6E69               	movwf	105,c	;volatile
 24848                           
 24849                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 24850  008582  0E00               	movlw	0
 24851  008584  6E66               	movwf	102,c	;volatile
 24852                           
 24853                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 24854  008586  0E00               	movlw	0
 24855  008588  010F               	movlb	15	; () banked
 24856  00858A  6F5F               	movwf	95,b	;volatile
 24857                           
 24858                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 24859  00858C  0E00               	movlw	0
 24860  00858E  6F5D               	movwf	93,b	;volatile
 24861                           
 24862                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 24863  008590  0E00               	movlw	0
 24864  008592  6F5E               	movwf	94,b	;volatile
 24865                           
 24866                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 24867  008594  0E00               	movlw	0
 24868  008596  6F59               	movwf	89,b	;volatile
 24869                           
 24870                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 24871  008598  0E00               	movlw	0
 24872  00859A  6F5A               	movwf	90,b	;volatile
 24873                           
 24874                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 24875  00859C  0E00               	movlw	0
 24876  00859E  6F5B               	movwf	91,b	;volatile
 24877                           
 24878                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 24879  0085A0  0E00               	movlw	0
 24880  0085A2  6E65               	movwf	101,c	;volatile
 24881                           
 24882                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 24883  0085A4  0E00               	movlw	0
 24884  0085A6  6F58               	movwf	88,b	;volatile
 24885                           
 24886                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 24887  0085A8  0E00               	movlw	0
 24888  0085AA  6F56               	movwf	86,b	;volatile
 24889                           
 24890                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 24891  0085AC  0E3F               	movlw	63
 24892  0085AE  6F57               	movwf	87,b	;volatile
 24893                           
 24894                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 24895  0085B0  0E80               	movlw	128
 24896  0085B2  6E60               	movwf	96,c	;volatile
 24897                           
 24898                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 24899  0085B4  0E00               	movlw	0
 24900  0085B6  6F5C               	movwf	92,b	;volatile
 24901                           
 24902                           ; BSR set to: 15
 24903  0085B8  0012               	return		;funcret
 24904  0085BA                     __end_of_ADCC_Initialize:
 24905                           	callstack 0
 24906                           
 24907 ;; *************** function _EUSART1_is_rx_ready *****************
 24908 ;; Defined at:
 24909 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 24910 ;; Parameters:    Size  Location     Type
 24911 ;;		None
 24912 ;; Auto vars:     Size  Location     Type
 24913 ;;		None
 24914 ;; Return value:  Size  Location     Type
 24915 ;;                  1    wreg      _Bool 
 24916 ;; Registers used:
 24917 ;;		wreg, status,2
 24918 ;; Tracked objects:
 24919 ;;		On entry : 0/1
 24920 ;;		On exit  : 3F/0
 24921 ;;		Unchanged: 0/0
 24922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24927 ;;Total ram usage:        0 bytes
 24928 ;; Hardware stack levels used: 1
 24929 ;; Hardware stack levels required when called: 4
 24930 ;; This function calls:
 24931 ;;		Nothing
 24932 ;; This function is called by:
 24933 ;;		_main
 24934 ;; This function uses a non-reentrant model
 24935 ;;
 24936                           
 24937                           	psect	text108
 24938  00908A                     __ptext108:
 24939                           	callstack 0
 24940  00908A                     _EUSART1_is_rx_ready:
 24941                           	callstack 26
 24942                           
 24943                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 24944                           
 24945                           ; BSR set to: 15
 24946                           ;incstack = 0
 24947  00908A  0100               	movlb	0	; () banked
 24948  00908C  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 24949  00908E  B4D8               	btfsc	status,2,c
 24950  009090  D002               	goto	u18110
 24951  009092  0E01               	movlw	1
 24952  009094  0012               	return	
 24953  009096                     u18110:
 24954  009096  0E00               	movlw	0
 24955                           
 24956                           ; BSR set to: 0
 24957  009098  0012               	return		;funcret
 24958  00909A                     __end_of_EUSART1_is_rx_ready:
 24959                           	callstack 0
 24960                           
 24961 ;; *************** function _ControlMotor *****************
 24962 ;; Defined at:
 24963 ;;		line 703 in file "outputs_MC50.c"
 24964 ;; Parameters:    Size  Location     Type
 24965 ;;		None
 24966 ;; Auto vars:     Size  Location     Type
 24967 ;;  stateMotor      1   23[COMRAM] enum E10381
 24968 ;; Return value:  Size  Location     Type
 24969 ;;                  1    wreg      void 
 24970 ;; Registers used:
 24971 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 24972 ;; Tracked objects:
 24973 ;;		On entry : 3E/1
 24974 ;;		On exit  : 3E/0
 24975 ;;		Unchanged: 0/0
 24976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24979 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24980 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24981 ;;Total ram usage:        7 bytes
 24982 ;; Hardware stack levels used: 1
 24983 ;; Hardware stack levels required when called: 5
 24984 ;; This function calls:
 24985 ;;		_VerifyElectricalBrake
 24986 ;; This function is called by:
 24987 ;;		_main
 24988 ;; This function uses a non-reentrant model
 24989 ;;
 24990                           
 24991                           	psect	text109
 24992  0046C0                     __ptext109:
 24993                           	callstack 0
 24994  0046C0                     _ControlMotor:
 24995                           	callstack 25
 24996                           
 24997                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 24998                           
 24999                           ; BSR set to: 0
 25000                           ;incstack = 0
 25001  0046C0  0101               	movlb	1	; () banked
 25002  0046C2  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 25003  0046C4  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 25004  0046C6  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 25005  0046C8  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 25006  0046CA  A4D8               	btfss	status,2,c
 25007  0046CC  D00D               	goto	l16807
 25008                           
 25009                           ; BSR set to: 1
 25010  0046CE  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 25011  0046D0  B4D8               	btfsc	status,2,c
 25012  0046D2  D00A               	goto	l16807
 25013                           
 25014                           ; BSR set to: 1
 25015  0046D4  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 25016  0046D6  A4D8               	btfss	status,2,c
 25017  0046D8  D007               	goto	l16807
 25018                           
 25019                           ; BSR set to: 1
 25020  0046DA  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 25021  0046DC  A4D8               	btfss	status,2,c
 25022  0046DE  D004               	goto	l16807
 25023                           
 25024                           ; BSR set to: 1
 25025                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 25026  0046E0  0E00               	movlw	0
 25027  0046E2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 25028                           
 25029                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 25030  0046E4  0E02               	movlw	2
 25031  0046E6  D007               	goto	L100
 25032  0046E8                     l16807:
 25033                           
 25034                           ; BSR set to: 1
 25035  0046E8  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 25036  0046EA  A4D8               	btfss	status,2,c
 25037  0046EC  D005               	goto	l16813
 25038                           
 25039                           ; BSR set to: 1
 25040  0046EE  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25041  0046F0  A4D8               	btfss	status,2,c
 25042  0046F2  D002               	goto	l16813
 25043                           
 25044                           ; BSR set to: 1
 25045                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 25046  0046F4  0E00               	movlw	0
 25047  0046F6                     L100:
 25048  0046F6  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 25049  0046F8                     l16813:
 25050                           
 25051                           ; BSR set to: 1
 25052                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 25053  0046F8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25054  0046FA  EC0E  F03E         	call	_VerifyElectricalBrake
 25055  0046FE  6E18               	movwf	ControlMotor@stateMotor^0,c
 25056                           
 25057                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 25058  004700  5018               	movf	ControlMotor@stateMotor^0,w,c
 25059  004702  A4D8               	btfss	status,2,c
 25060  004704  D00A               	goto	l16823
 25061                           
 25062                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 25063  004706  0E01               	movlw	1
 25064  004708  0101               	movlb	1	; () banked
 25065  00470A  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25066                           
 25067                           ; BSR set to: 1
 25068                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 25069  00470C  BFA3               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 25070  00470E  0012               	return	
 25071                           
 25072                           ; BSR set to: 1
 25073                           
 25074                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 25075  004710  9287               	bcf	135,1,c	;volatile
 25076                           
 25077                           ; BSR set to: 1
 25078                           
 25079                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 25080  004712  9087               	bcf	135,0,c	;volatile
 25081  004714                     l16821:
 25082                           
 25083                           ; BSR set to: 1
 25084                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 25085  004714  0E00               	movlw	0
 25086  004716  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25087  004718  0012               	return	
 25088  00471A                     l16823:
 25089  00471A  0100               	movlb	0	; () banked
 25090  00471C  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 25091  00471E  A4D8               	btfss	status,2,c
 25092  004720  D022               	goto	l16839
 25093                           
 25094                           ; BSR set to: 0
 25095  004722  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 25096  004724  A4D8               	btfss	status,2,c
 25097  004726  D01F               	goto	l16839
 25098                           
 25099                           ; BSR set to: 0
 25100  004728  0101               	movlb	1	; () banked
 25101  00472A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25102  00472C  A4D8               	btfss	status,2,c
 25103  00472E  D01B               	goto	l16839
 25104                           
 25105                           ; BSR set to: 1
 25106  004730  5018               	movf	ControlMotor@stateMotor^0,w,c
 25107  004732  A4D8               	btfss	status,2,c
 25108                           
 25109                           ; BSR set to: 1
 25110  004734  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25111  004736  D017               	goto	l16839
 25112  004738  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25113  00473A  E103               	bnz	u19770
 25114  00473C  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 25115  00473E  A0D8               	btfss	status,0,c
 25116  004740  D012               	goto	l16839
 25117  004742                     u19770:
 25118                           
 25119                           ; BSR set to: 1
 25120  004742  BFDD               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 25121  004744  D005               	goto	u19780
 25122  004746  51DD               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 25123  004748  E10E               	bnz	l16839
 25124  00474A  05DC               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 25125  00474C  B0D8               	btfsc	status,0,c
 25126  00474E  D00B               	goto	l16839
 25127  004750                     u19780:
 25128                           
 25129                           ; BSR set to: 1
 25130                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 25131  004750  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25132  004752  D006               	goto	u19790
 25133  004754  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25134  004756  E103               	bnz	u19791
 25135  004758  0E12               	movlw	18
 25136  00475A  5DC4               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 25137  00475C  B0D8               	btfsc	status,0,c
 25138  00475E                     u19791:
 25139  00475E  0012               	return	
 25140  004760                     u19790:
 25141                           
 25142                           ; BSR set to: 1
 25143                           
 25144                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 25145  004760  8287               	bsf	135,1,c	;volatile
 25146                           
 25147                           ; BSR set to: 1
 25148                           
 25149                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 25150  004762  8087               	bsf	135,0,c	;volatile
 25151  004764  D7D7               	goto	l16821
 25152  004766                     l16839:
 25153  004766  0418               	decf	ControlMotor@stateMotor^0,w,c
 25154  004768  B4D8               	btfsc	status,2,c
 25155  00476A  D004               	goto	u19810
 25156  00476C  0E02               	movlw	2
 25157  00476E  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 25158  004770  A4D8               	btfss	status,2,c
 25159  004772  D063               	goto	l16869
 25160  004774                     u19810:
 25161  004774  0101               	movlb	1	; () banked
 25162  004776  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 25163  004778  A4D8               	btfss	status,2,c
 25164  00477A  D05F               	goto	l16869
 25165                           
 25166                           ; BSR set to: 1
 25167                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 25168  00477C  B291               	btfsc	145,1,c	;volatile
 25169  00477E  D004               	goto	u19840
 25170                           
 25171                           ; BSR set to: 1
 25172  004780  0100               	movlb	0	; () banked
 25173  004782  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25174  004784  B4D8               	btfsc	status,2,c
 25175  004786  D006               	goto	u19860
 25176  004788                     u19840:
 25177  004788  B091               	btfsc	145,0,c	;volatile
 25178  00478A  D04F               	goto	l2348
 25179  00478C  0100               	movlb	0	; () banked
 25180  00478E  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25181  004790  A4D8               	btfss	status,2,c
 25182  004792  D04B               	goto	l2348
 25183  004794                     u19860:
 25184                           
 25185                           ; BSR set to: 0
 25186                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 25187  004794  B091               	btfsc	145,0,c	;volatile
 25188  004796  D003               	goto	u19880
 25189                           
 25190                           ; BSR set to: 0
 25191  004798  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25192  00479A  B4D8               	btfsc	status,2,c
 25193  00479C  D005               	goto	u19900
 25194  00479E                     u19880:
 25195                           
 25196                           ; BSR set to: 0
 25197  00479E  B291               	btfsc	145,1,c	;volatile
 25198  0047A0  D03A               	goto	l16865
 25199                           
 25200                           ; BSR set to: 0
 25201  0047A2  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25202  0047A4  A4D8               	btfss	status,2,c
 25203  0047A6  D037               	goto	l16865
 25204  0047A8                     u19900:
 25205                           
 25206                           ; BSR set to: 0
 25207                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 25208  0047A8  0E00               	movlw	0
 25209  0047AA  0101               	movlb	1	; () banked
 25210  0047AC  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25211                           
 25212                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 25213  0047AE  0E00               	movlw	0
 25214  0047B0  6FA3               	movwf	(_ts_system+7)& (0+255),b	;volatile
 25215  0047B2  0EC8               	movlw	200
 25216  0047B4  6FA2               	movwf	(_ts_system+6)& (0+255),b	;volatile
 25217                           
 25218                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 25219  0047B6  0E00               	movlw	0
 25220  0047B8  6FB7               	movwf	(_ts_system+27)& (0+255),b	;volatile
 25221  0047BA  0E14               	movlw	20
 25222  0047BC  6FB6               	movwf	(_ts_system+26)& (0+255),b	;volatile
 25223                           
 25224                           ; BSR set to: 1
 25225                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 25226  0047BE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 25227  0047C0  B4D8               	btfsc	status,2,c
 25228  0047C2  D003               	goto	u19920
 25229                           
 25230                           ; BSR set to: 1
 25231  0047C4  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 25232  0047C6  A4D8               	btfss	status,2,c
 25233  0047C8  D024               	goto	l16863
 25234  0047CA                     u19920:
 25235                           
 25236                           ; BSR set to: 1
 25237                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 25238  0047CA  0100               	movlb	0	; () banked
 25239  0047CC  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 25240  0047CE  0D0A               	mullw	10
 25241  0047D0  CFF3 F012          	movff	prodl,??_ControlMotor
 25242  0047D4  CFF4 F013          	movff	prodh,??_ControlMotor+1
 25243  0047D8  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 25244  0047DA  2612               	addwf	??_ControlMotor^0,f,c
 25245  0047DC  0E00               	movlw	0
 25246  0047DE  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 25247  0047E0  5012               	movf	??_ControlMotor^0,w,c
 25248  0047E2  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 25249  0047E4  6E14               	movwf	(??_ControlMotor+2)^0,c
 25250  0047E6  5013               	movf	(??_ControlMotor+1)^0,w,c
 25251  0047E8  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 25252  0047EA  6E15               	movwf	(??_ControlMotor+3)^0,c
 25253  0047EC  0E00               	movlw	0
 25254  0047EE  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 25255  0047F0  6E16               	movwf	(??_ControlMotor+4)^0,c
 25256  0047F2  0E00               	movlw	0
 25257  0047F4  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 25258  0047F6  6E17               	movwf	(??_ControlMotor+5)^0,c
 25259  0047F8  0E50               	movlw	80
 25260  0047FA  2414               	addwf	(??_ControlMotor+2)^0,w,c
 25261  0047FC  0101               	movlb	1	; () banked
 25262  0047FE  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 25263  004800  0E00               	movlw	0
 25264  004802  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 25265  004804  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 25266  004806  0E00               	movlw	0
 25267  004808  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 25268  00480A  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 25269  00480C  0E00               	movlw	0
 25270  00480E  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 25271  004810  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 25272  004812                     l16863:
 25273                           
 25274                           ; BSR set to: 1
 25275                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 25276  004812  0E02               	movlw	2
 25277  004814  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 25278  004816                     l16865:
 25279                           
 25280                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 25281  004816  0100               	movlb	0	; () banked
 25282  004818  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25283  00481A  A4D8               	btfss	status,2,c
 25284  00481C  D002               	goto	l2365
 25285                           
 25286                           ; BSR set to: 0
 25287  00481E  8087               	bsf	135,0,c	;volatile
 25288  004820  D001               	goto	l16867
 25289  004822                     l2365:
 25290                           
 25291                           ; BSR set to: 0
 25292  004822  8287               	bsf	135,1,c	;volatile
 25293  004824                     l16867:
 25294                           
 25295                           ; BSR set to: 0
 25296                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 25297  004824  0E01               	movlw	1
 25298  004826  0101               	movlb	1	; () banked
 25299  004828  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25300  00482A                     l2348:
 25301                           
 25302                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 25303  00482A  0100               	movlb	0	; () banked
 25304  00482C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25305  00482E  A4D8               	btfss	status,2,c
 25306  004830  D002               	goto	l2371
 25307                           
 25308                           ; BSR set to: 0
 25309  004832  9287               	bcf	135,1,c	;volatile
 25310  004834  0012               	return	
 25311  004836                     l2371:
 25312                           
 25313                           ; BSR set to: 0
 25314  004836  9087               	bcf	135,0,c	;volatile
 25315  004838  0012               	return	
 25316  00483A                     l16869:
 25317  00483A  0E03               	movlw	3
 25318  00483C  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 25319  00483E  A4D8               	btfss	status,2,c
 25320  004840  0012               	return	
 25321  004842  0101               	movlb	1	; () banked
 25322  004844  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 25323  004846  A4D8               	btfss	status,2,c
 25324  004848  0012               	return	
 25325                           
 25326                           ; BSR set to: 1
 25327                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 25328  00484A  B091               	btfsc	145,0,c	;volatile
 25329  00484C  D004               	goto	u19980
 25330                           
 25331                           ; BSR set to: 1
 25332  00484E  0100               	movlb	0	; () banked
 25333  004850  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25334  004852  B4D8               	btfsc	status,2,c
 25335  004854  D006               	goto	u20000
 25336  004856                     u19980:
 25337  004856  B291               	btfsc	145,1,c	;volatile
 25338  004858  D050               	goto	l2375
 25339  00485A  0100               	movlb	0	; () banked
 25340  00485C  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25341  00485E  A4D8               	btfss	status,2,c
 25342  004860  D04C               	goto	l2375
 25343  004862                     u20000:
 25344                           
 25345                           ; BSR set to: 0
 25346                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 25347  004862  B291               	btfsc	145,1,c	;volatile
 25348  004864  D003               	goto	u20020
 25349                           
 25350                           ; BSR set to: 0
 25351  004866  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25352  004868  B4D8               	btfsc	status,2,c
 25353  00486A  D005               	goto	u20040
 25354  00486C                     u20020:
 25355                           
 25356                           ; BSR set to: 0
 25357  00486C  B091               	btfsc	145,0,c	;volatile
 25358  00486E  D03B               	goto	l16893
 25359                           
 25360                           ; BSR set to: 0
 25361  004870  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25362  004872  A4D8               	btfss	status,2,c
 25363  004874  D038               	goto	l16893
 25364  004876                     u20040:
 25365                           
 25366                           ; BSR set to: 0
 25367                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 25368  004876  0E00               	movlw	0
 25369  004878  0101               	movlb	1	; () banked
 25370  00487A  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25371                           
 25372                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 25373  00487C  0E00               	movlw	0
 25374  00487E  6FA3               	movwf	(_ts_system+7)& (0+255),b	;volatile
 25375  004880  0EC8               	movlw	200
 25376  004882  6FA2               	movwf	(_ts_system+6)& (0+255),b	;volatile
 25377                           
 25378                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 25379  004884  0E00               	movlw	0
 25380  004886  6FB7               	movwf	(_ts_system+27)& (0+255),b	;volatile
 25381  004888  0E14               	movlw	20
 25382  00488A  6FB6               	movwf	(_ts_system+26)& (0+255),b	;volatile
 25383                           
 25384                           ; BSR set to: 1
 25385                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 25386  00488C  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 25387  00488E  B4D8               	btfsc	status,2,c
 25388  004890  D004               	goto	u20060
 25389                           
 25390                           ; BSR set to: 1
 25391  004892  0E04               	movlw	4
 25392  004894  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 25393  004896  A4D8               	btfss	status,2,c
 25394  004898  D024               	goto	l16891
 25395  00489A                     u20060:
 25396                           
 25397                           ; BSR set to: 1
 25398                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 25399  00489A  0100               	movlb	0	; () banked
 25400  00489C  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 25401  00489E  0D0A               	mullw	10
 25402  0048A0  CFF3 F012          	movff	prodl,??_ControlMotor
 25403  0048A4  CFF4 F013          	movff	prodh,??_ControlMotor+1
 25404  0048A8  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 25405  0048AA  2612               	addwf	??_ControlMotor^0,f,c
 25406  0048AC  0E00               	movlw	0
 25407  0048AE  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 25408  0048B0  5012               	movf	??_ControlMotor^0,w,c
 25409  0048B2  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 25410  0048B4  6E14               	movwf	(??_ControlMotor+2)^0,c
 25411  0048B6  5013               	movf	(??_ControlMotor+1)^0,w,c
 25412  0048B8  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 25413  0048BA  6E15               	movwf	(??_ControlMotor+3)^0,c
 25414  0048BC  0E00               	movlw	0
 25415  0048BE  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 25416  0048C0  6E16               	movwf	(??_ControlMotor+4)^0,c
 25417  0048C2  0E00               	movlw	0
 25418  0048C4  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 25419  0048C6  6E17               	movwf	(??_ControlMotor+5)^0,c
 25420  0048C8  0E50               	movlw	80
 25421  0048CA  2414               	addwf	(??_ControlMotor+2)^0,w,c
 25422  0048CC  0101               	movlb	1	; () banked
 25423  0048CE  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 25424  0048D0  0E00               	movlw	0
 25425  0048D2  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 25426  0048D4  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 25427  0048D6  0E00               	movlw	0
 25428  0048D8  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 25429  0048DA  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 25430  0048DC  0E00               	movlw	0
 25431  0048DE  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 25432  0048E0  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 25433  0048E2                     l16891:
 25434                           
 25435                           ; BSR set to: 1
 25436                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 25437  0048E2  0E03               	movlw	3
 25438  0048E4  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 25439  0048E6                     l16893:
 25440                           
 25441                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 25442  0048E6  0100               	movlb	0	; () banked
 25443  0048E8  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25444  0048EA  A4D8               	btfss	status,2,c
 25445  0048EC  D002               	goto	l2392
 25446                           
 25447                           ; BSR set to: 0
 25448  0048EE  8287               	bsf	135,1,c	;volatile
 25449  0048F0  D001               	goto	l16895
 25450  0048F2                     l2392:
 25451                           
 25452                           ; BSR set to: 0
 25453  0048F2  8087               	bsf	135,0,c	;volatile
 25454  0048F4                     l16895:
 25455                           
 25456                           ; BSR set to: 0
 25457                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 25458  0048F4  0E02               	movlw	2
 25459  0048F6  0101               	movlb	1	; () banked
 25460  0048F8  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25461  0048FA                     l2375:
 25462                           
 25463                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 25464  0048FA  0100               	movlb	0	; () banked
 25465  0048FC  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25466  0048FE  A4D8               	btfss	status,2,c
 25467  004900  D002               	goto	l2398
 25468                           
 25469                           ; BSR set to: 0
 25470  004902  9087               	bcf	135,0,c	;volatile
 25471  004904  0012               	return	
 25472  004906                     l2398:
 25473                           
 25474                           ; BSR set to: 0
 25475  004906  9287               	bcf	135,1,c	;volatile
 25476  004908  0012               	return		;funcret
 25477  00490A                     __end_of_ControlMotor:
 25478                           	callstack 0
 25479                           
 25480 ;; *************** function _VerifyElectricalBrake *****************
 25481 ;; Defined at:
 25482 ;;		line 658 in file "outputs_MC50.c"
 25483 ;; Parameters:    Size  Location     Type
 25484 ;;  actualState     1    wreg     enum E10381
 25485 ;; Auto vars:     Size  Location     Type
 25486 ;;  actualState     1   16[COMRAM] enum E10381
 25487 ;;  tempState       1   15[COMRAM] enum E10381
 25488 ;; Return value:  Size  Location     Type
 25489 ;;                  1    wreg      enum E10381
 25490 ;; Registers used:
 25491 ;;		wreg, status,2, status,0
 25492 ;; Tracked objects:
 25493 ;;		On entry : 3F/1
 25494 ;;		On exit  : 3E/0
 25495 ;;		Unchanged: 0/0
 25496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25498 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25501 ;;Total ram usage:        2 bytes
 25502 ;; Hardware stack levels used: 1
 25503 ;; Hardware stack levels required when called: 4
 25504 ;; This function calls:
 25505 ;;		Nothing
 25506 ;; This function is called by:
 25507 ;;		_ControlMotor
 25508 ;; This function uses a non-reentrant model
 25509 ;;
 25510                           
 25511                           	psect	text110
 25512  007C1C                     __ptext110:
 25513                           	callstack 0
 25514  007C1C                     _VerifyElectricalBrake:
 25515                           	callstack 25
 25516                           
 25517                           ;incstack = 0
 25518                           ;VerifyElectricalBrake@actualState stored from wreg
 25519  007C1C  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 25520                           
 25521                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 25522  007C1E  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 25523                           
 25524                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 25525  007C22  0100               	movlb	0	; () banked
 25526  007C24  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 25527  007C26  A4D8               	btfss	status,2,c
 25528  007C28  D02E               	goto	l2318
 25529                           
 25530                           ; BSR set to: 0
 25531  007C2A  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 25532  007C2C  A4D8               	btfss	status,2,c
 25533  007C2E  D02B               	goto	l2318
 25534                           
 25535                           ; BSR set to: 0
 25536  007C30  0101               	movlb	1	; () banked
 25537  007C32  BFDD               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 25538  007C34  D005               	goto	u15200
 25539  007C36  51DD               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 25540  007C38  E126               	bnz	l2318
 25541  007C3A  05DC               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 25542  007C3C  B0D8               	btfsc	status,0,c
 25543  007C3E  D023               	goto	l2318
 25544  007C40                     u15200:
 25545                           
 25546                           ; BSR set to: 1
 25547                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 25548  007C40  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 25549  007C42  0100               	movlb	0	; () banked
 25550  007C44  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 25551  007C46  B4D8               	btfsc	status,2,c
 25552  007C48  D00B               	goto	l14659
 25553                           
 25554                           ; BSR set to: 0
 25555  007C4A  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 25556  007C4C  A4D8               	btfss	status,2,c
 25557  007C4E  D008               	goto	l14659
 25558                           
 25559                           ; BSR set to: 0
 25560                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 25561  007C50  0E01               	movlw	1
 25562  007C52  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 25563                           
 25564                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 25565  007C54  0E00               	movlw	0
 25566  007C56  0101               	movlb	1	; () banked
 25567  007C58  6FC5               	movwf	(_ts_system+41)& (0+255),b	;volatile
 25568  007C5A  0E16               	movlw	22
 25569  007C5C  6FC4               	movwf	(_ts_system+40)& (0+255),b	;volatile
 25570                           
 25571                           ;outputs_MC50.c: 670:         }
 25572  007C5E  D018               	goto	l2323
 25573  007C60                     l14659:
 25574                           
 25575                           ; BSR set to: 0
 25576  007C60  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 25577  007C62  A4D8               	btfss	status,2,c
 25578  007C64  D00B               	goto	l14665
 25579                           
 25580                           ; BSR set to: 0
 25581  007C66  0101               	movlb	1	; () banked
 25582  007C68  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25583  007C6A  D008               	goto	l14665
 25584  007C6C  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25585  007C6E  E103               	bnz	u15240
 25586  007C70  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 25587  007C72  A0D8               	btfss	status,0,c
 25588  007C74  D003               	goto	l14665
 25589  007C76                     u15240:
 25590                           
 25591                           ; BSR set to: 1
 25592                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 25593  007C76  0E01               	movlw	1
 25594  007C78  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 25595                           
 25596                           ;outputs_MC50.c: 686:         }
 25597  007C7A  D00A               	goto	l2323
 25598  007C7C                     l14665:
 25599                           
 25600                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 25601  007C7C  0E00               	movlw	0
 25602  007C7E  0100               	movlb	0	; () banked
 25603  007C80  6F78               	movwf	_brakeElectric_st& (0+255),b
 25604                           
 25605                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 25606  007C82  0E00               	movlw	0
 25607  007C84  D004               	goto	L101
 25608  007C86                     l2318:
 25609                           
 25610                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 25611  007C86  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 25612                           
 25613                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 25614  007C8A  0E00               	movlw	0
 25615  007C8C  0100               	movlb	0	; () banked
 25616  007C8E                     L101:
 25617  007C8E  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 25618  007C90                     l2323:
 25619                           
 25620                           ;outputs_MC50.c: 700:     return tempState;
 25621  007C90  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 25622  007C92  0012               	return		;funcret
 25623  007C94                     __end_of_VerifyElectricalBrake:
 25624                           	callstack 0
 25625                           
 25626 ;; *************** function _ControlLights *****************
 25627 ;; Defined at:
 25628 ;;		line 816 in file "outputs_MC50.c"
 25629 ;; Parameters:    Size  Location     Type
 25630 ;;		None
 25631 ;; Auto vars:     Size  Location     Type
 25632 ;;		None
 25633 ;; Return value:  Size  Location     Type
 25634 ;;                  1    wreg      void 
 25635 ;; Registers used:
 25636 ;;		wreg, status,2, status,0, cstack
 25637 ;; Tracked objects:
 25638 ;;		On entry : 3E/1
 25639 ;;		On exit  : 3E/0
 25640 ;;		Unchanged: 0/0
 25641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25646 ;;Total ram usage:        0 bytes
 25647 ;; Hardware stack levels used: 1
 25648 ;; Hardware stack levels required when called: 6
 25649 ;; This function calls:
 25650 ;;		_setFlashLigth_ON
 25651 ;;		_setRGB_ON
 25652 ;; This function is called by:
 25653 ;;		_main
 25654 ;; This function uses a non-reentrant model
 25655 ;;
 25656                           
 25657                           	psect	text111
 25658  003950                     __ptext111:
 25659                           	callstack 0
 25660  003950                     _ControlLights:
 25661                           	callstack 24
 25662                           
 25663                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 25664                           
 25665                           ;incstack = 0
 25666  003950  0101               	movlb	1	; () banked
 25667  003952  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 25668  003954  A4D8               	btfss	status,2,c
 25669  003956  D007               	goto	l16901
 25670                           
 25671                           ; BSR set to: 1
 25672                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 25673  003958  0E00               	movlw	0
 25674  00395A  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25675  00395C  0E14               	movlw	20
 25676  00395E  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25677  003960  EC7B  F044         	call	_setFlashLigth_ON	;wreg free
 25678                           
 25679                           ;outputs_MC50.c: 821:     }
 25680  003964  D010               	goto	l16907
 25681  003966                     l16901:
 25682                           
 25683                           ; BSR set to: 1
 25684  003966  51E4               	movf	_controlGate_stateMachine& (0+255),w,b
 25685  003968  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25686  00396A  A4D8               	btfss	status,2,c
 25687  00396C  D00C               	goto	l16907
 25688                           
 25689                           ; BSR set to: 1
 25690                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 25691  00396E  0E00               	movlw	0
 25692  003970  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 25693                           
 25694                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 25695  003972  0E00               	movlw	0
 25696  003974  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 25697                           
 25698                           ; BSR set to: 1
 25699                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 25700  003976  0E03               	movlw	3
 25701  003978  0100               	movlb	0	; () banked
 25702  00397A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 25703  00397C  B4D8               	btfsc	status,2,c
 25704  00397E  D002               	goto	l2410
 25705                           
 25706                           ; BSR set to: 0
 25707                           
 25708                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 25709  003980  9487               	bcf	135,2,c	;volatile
 25710  003982  D001               	goto	l16907
 25711  003984                     l2410:
 25712                           
 25713                           ; BSR set to: 0
 25714  003984  8487               	bsf	135,2,c	;volatile
 25715  003986                     l16907:
 25716                           
 25717                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 25718  003986  0101               	movlb	1	; () banked
 25719  003988  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 25720  00398A  B4D8               	btfsc	status,2,c
 25721  00398C  D005               	goto	u20130
 25722                           
 25723                           ; BSR set to: 1
 25724  00398E  0E04               	movlw	4
 25725  003990  19E4               	xorwf	_controlGate_stateMachine& (0+255),w,b
 25726  003992  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25727  003994  A4D8               	btfss	status,2,c
 25728  003996  D01C               	goto	l16919
 25729  003998                     u20130:
 25730                           
 25731                           ; BSR set to: 1
 25732  003998  BFAF               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 25733  00399A  D01A               	goto	l16919
 25734  00399C  51AF               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 25735  00399E  E103               	bnz	u20140
 25736  0039A0  05AE               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 25737  0039A2  A0D8               	btfss	status,0,c
 25738  0039A4  D015               	goto	l16919
 25739  0039A6                     u20140:
 25740                           
 25741                           ; BSR set to: 1
 25742  0039A6  BFAF               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 25743  0039A8  D006               	goto	u20150
 25744  0039AA  51AF               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 25745  0039AC  E111               	bnz	l16919
 25746  0039AE  0E3D               	movlw	61
 25747  0039B0  5DAE               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 25748  0039B2  B0D8               	btfsc	status,0,c
 25749  0039B4  D00D               	goto	l16919
 25750  0039B6                     u20150:
 25751                           
 25752                           ; BSR set to: 1
 25753  0039B6  0E02               	movlw	2
 25754  0039B8  0100               	movlb	0	; () banked
 25755  0039BA  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25756  0039BC  A4D8               	btfss	status,2,c
 25757  0039BE  D008               	goto	l16919
 25758                           
 25759                           ; BSR set to: 0
 25760                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 25761  0039C0  0E00               	movlw	0
 25762  0039C2  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25763  0039C4  0E04               	movlw	4
 25764  0039C6  6E11               	movwf	setRGB_ON@Freq^0,c
 25765  0039C8  0E01               	movlw	1
 25766  0039CA  ECAE  F03A         	call	_setRGB_ON
 25767                           
 25768                           ;outputs_MC50.c: 838:     }
 25769  0039CE  0012               	return	
 25770  0039D0                     l16919:
 25771  0039D0  0E03               	movlw	3
 25772  0039D2  0101               	movlb	1	; () banked
 25773  0039D4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 25774  0039D6  A4D8               	btfss	status,2,c
 25775  0039D8  D04F               	goto	l16949
 25776                           
 25777                           ; BSR set to: 1
 25778                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 25779  0039DA  0E00               	movlw	0
 25780  0039DC  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 25781                           
 25782                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 25783  0039DE  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 25784  0039E0  A4D8               	btfss	status,2,c
 25785  0039E2  D013               	goto	l16931
 25786                           
 25787                           ; BSR set to: 1
 25788  0039E4  0E03               	movlw	3
 25789  0039E6  0100               	movlb	0	; () banked
 25790  0039E8  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25791  0039EA  A4D8               	btfss	status,2,c
 25792  0039EC  D00E               	goto	l16931
 25793                           
 25794                           ; BSR set to: 0
 25795                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 25796  0039EE  0E00               	movlw	0
 25797  0039F0  0101               	movlb	1	; () banked
 25798  0039F2  6FDF               	movwf	(_ts_system+67)& (0+255),b	;volatile
 25799  0039F4  0E28               	movlw	40
 25800  0039F6  6FDE               	movwf	(_ts_system+66)& (0+255),b	;volatile
 25801                           
 25802                           ; BSR set to: 1
 25803                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 25804  0039F8  0E00               	movlw	0
 25805  0039FA  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25806  0039FC  0E00               	movlw	0
 25807  0039FE  6E11               	movwf	setRGB_ON@Freq^0,c
 25808  003A00  0E04               	movlw	4
 25809  003A02  ECAE  F03A         	call	_setRGB_ON
 25810                           
 25811                           ; BSR set to: 1
 25812                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 25813  003A06  0E01               	movlw	1
 25814  003A08  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 25815  003A0A                     l16931:
 25816                           
 25817                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 25818  003A0A  0101               	movlb	1	; () banked
 25819  003A0C  BFDF               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 25820  003A0E  D005               	goto	u20200
 25821  003A10  51DF               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 25822  003A12  E105               	bnz	l16935
 25823  003A14  05DE               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 25824  003A16  B0D8               	btfsc	status,0,c
 25825  003A18  D002               	goto	l16935
 25826  003A1A                     u20200:
 25827                           
 25828                           ; BSR set to: 1
 25829  003A1A  0100               	movlb	0	; () banked
 25830  003A1C  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25831  003A1E                     l16935:
 25832                           
 25833                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 25834  003A1E  0100               	movlb	0	; () banked
 25835  003A20  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25836  003A22  A4D8               	btfss	status,2,c
 25837  003A24  D010               	goto	l16941
 25838                           
 25839                           ; BSR set to: 0
 25840  003A26  0101               	movlb	1	; () banked
 25841  003A28  BFDF               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 25842  003A2A  D005               	goto	u20220
 25843  003A2C  51DF               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 25844  003A2E  E10B               	bnz	l16941
 25845  003A30  05DE               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 25846  003A32  B0D8               	btfsc	status,0,c
 25847  003A34  D008               	goto	l16941
 25848  003A36                     u20220:
 25849                           
 25850                           ; BSR set to: 1
 25851                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 25852  003A36  0E00               	movlw	0
 25853  003A38  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25854  003A3A  0E05               	movlw	5
 25855  003A3C  6E11               	movwf	setRGB_ON@Freq^0,c
 25856  003A3E  0E03               	movlw	3
 25857  003A40  ECAE  F03A         	call	_setRGB_ON
 25858                           
 25859                           ;outputs_MC50.c: 862:         }
 25860  003A44  D007               	goto	l16943
 25861  003A46                     l16941:
 25862                           
 25863                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 25864  003A46  0E00               	movlw	0
 25865  003A48  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25866  003A4A  0E00               	movlw	0
 25867  003A4C  6E11               	movwf	setRGB_ON@Freq^0,c
 25868  003A4E  0E03               	movlw	3
 25869  003A50  ECAE  F03A         	call	_setRGB_ON
 25870  003A54                     l16943:
 25871                           
 25872                           ; BSR set to: 1
 25873                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 25874  003A54  0100               	movlb	0	; () banked
 25875  003A56  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 25876  003A58  A4D8               	btfss	status,2,c
 25877  003A5A  D007               	goto	l16947
 25878                           
 25879                           ; BSR set to: 0
 25880                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 25881  003A5C  0E00               	movlw	0
 25882  003A5E  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25883  003A60  0E0A               	movlw	10
 25884  003A62  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25885  003A64  EC7B  F044         	call	_setFlashLigth_ON	;wreg free
 25886                           
 25887                           ;outputs_MC50.c: 873:         }
 25888  003A68  0012               	return	
 25889  003A6A                     l16947:
 25890                           
 25891                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 25892  003A6A  0E00               	movlw	0
 25893  003A6C  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25894  003A6E  0E00               	movlw	0
 25895  003A70  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25896  003A72  EC7B  F044         	call	_setFlashLigth_ON	;wreg free
 25897  003A76  0012               	return	
 25898  003A78                     l16949:
 25899                           
 25900                           ; BSR set to: 1
 25901  003A78  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25902  003A7A  A4D8               	btfss	status,2,c
 25903  003A7C  D042               	goto	l16977
 25904                           
 25905                           ; BSR set to: 1
 25906  003A7E  05E4               	decf	_controlGate_stateMachine& (0+255),w,b
 25907  003A80  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25908  003A82  A4D8               	btfss	status,2,c
 25909  003A84  D03E               	goto	l16977
 25910                           
 25911                           ; BSR set to: 1
 25912                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 25913  003A86  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 25914  003A88  A4D8               	btfss	status,2,c
 25915                           
 25916                           ; BSR set to: 1
 25917                           
 25918                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 25919  003A8A  8E83               	bsf	131,7,c	;volatile
 25920                           
 25921                           ; BSR set to: 1
 25922                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 25923  003A8C  0100               	movlb	0	; () banked
 25924  003A8E  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25925  003A90  A4D8               	btfss	status,2,c
 25926  003A92  D017               	goto	l16965
 25927                           
 25928                           ; BSR set to: 0
 25929                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 25930  003A94  0E02               	movlw	2
 25931  003A96  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 25932  003A98  B4D8               	btfsc	status,2,c
 25933  003A9A  D003               	goto	u20290
 25934                           
 25935                           ; BSR set to: 0
 25936  003A9C  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 25937  003A9E  A4D8               	btfss	status,2,c
 25938  003AA0  D008               	goto	l16963
 25939  003AA2                     u20290:
 25940                           
 25941                           ; BSR set to: 0
 25942  003AA2  0E00               	movlw	0
 25943  003AA4  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25944  003AA6  0E00               	movlw	0
 25945  003AA8  6E11               	movwf	setRGB_ON@Freq^0,c
 25946  003AAA  0E04               	movlw	4
 25947  003AAC  ECAE  F03A         	call	_setRGB_ON
 25948  003AB0  D013               	goto	l16969
 25949  003AB2                     l16963:
 25950                           
 25951                           ; BSR set to: 0
 25952  003AB2  0E00               	movlw	0
 25953  003AB4  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25954  003AB6  0E28               	movlw	40
 25955  003AB8  6E11               	movwf	setRGB_ON@Freq^0,c
 25956  003ABA  0E04               	movlw	4
 25957  003ABC  ECAE  F03A         	call	_setRGB_ON
 25958  003AC0  D00B               	goto	l16969
 25959  003AC2                     l16965:
 25960                           
 25961                           ; BSR set to: 0
 25962  003AC2  0E03               	movlw	3
 25963  003AC4  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25964  003AC6  B4D8               	btfsc	status,2,c
 25965  003AC8  D007               	goto	l16969
 25966                           
 25967                           ; BSR set to: 0
 25968  003ACA  0E00               	movlw	0
 25969  003ACC  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25970  003ACE  0E00               	movlw	0
 25971  003AD0  6E11               	movwf	setRGB_ON@Freq^0,c
 25972  003AD2  0E04               	movlw	4
 25973  003AD4  ECAE  F03A         	call	_setRGB_ON
 25974  003AD8                     l16969:
 25975                           
 25976                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 25977  003AD8  0E03               	movlw	3
 25978  003ADA  0100               	movlb	0	; () banked
 25979  003ADC  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 25980  003ADE  B4D8               	btfsc	status,2,c
 25981  003AE0  0012               	return	
 25982                           
 25983                           ; BSR set to: 0
 25984                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 25985  003AE2  0101               	movlb	1	; () banked
 25986  003AE4  BFBF               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 25987  003AE6  D007               	goto	l2438
 25988  003AE8  51BF               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 25989  003AEA  11BE               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 25990  003AEC  11BD               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 25991  003AEE  E1BD               	bnz	l16947
 25992  003AF0  05BC               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 25993  003AF2  B0D8               	btfsc	status,0,c
 25994  003AF4  D7BA               	goto	l16947
 25995  003AF6                     l2438:
 25996                           
 25997                           ; BSR set to: 1
 25998  003AF6  9487               	bcf	135,2,c	;volatile
 25999                           
 26000                           ; BSR set to: 1
 26001                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 26002  003AF8  0E00               	movlw	0
 26003  003AFA  6FBB               	movwf	(_ts_system+31)& (0+255),b	;volatile
 26004  003AFC  0E00               	movlw	0
 26005  003AFE  6FBA               	movwf	(_ts_system+30)& (0+255),b	;volatile
 26006                           
 26007                           ; BSR set to: 0
 26008                           ;outputs_MC50.c: 907:     }
 26009                           
 26010                           ;outputs_MC50.c: 906:         }
 26011  003B00  0012               	return	
 26012  003B02                     l16977:
 26013                           
 26014                           ; BSR set to: 1
 26015  003B02  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26016  003B04  A4D8               	btfss	status,2,c
 26017  003B06  D048               	goto	l17011
 26018                           
 26019                           ; BSR set to: 1
 26020                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 26021  003B08  0100               	movlb	0	; () banked
 26022  003B0A  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26023  003B0C  A4D8               	btfss	status,2,c
 26024  003B0E  D004               	goto	u20350
 26025                           
 26026                           ; BSR set to: 0
 26027  003B10  0101               	movlb	1	; () banked
 26028  003B12  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26029  003B14  B4D8               	btfsc	status,2,c
 26030  003B16  D00C               	goto	u20380
 26031  003B18                     u20350:
 26032  003B18  0100               	movlb	0	; () banked
 26033  003B1A  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26034  003B1C  A4D8               	btfss	status,2,c
 26035  003B1E  D017               	goto	l16995
 26036                           
 26037                           ; BSR set to: 0
 26038  003B20  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26039  003B22  B4D8               	btfsc	status,2,c
 26040  003B24  D014               	goto	l16995
 26041                           
 26042                           ; BSR set to: 0
 26043  003B26  0E02               	movlw	2
 26044  003B28  0101               	movlb	1	; () banked
 26045  003B2A  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26046  003B2C  A4D8               	btfss	status,2,c
 26047  003B2E  D00F               	goto	l16995
 26048  003B30                     u20380:
 26049                           
 26050                           ; BSR set to: 1
 26051                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26052  003B30  0E00               	movlw	0
 26053  003B32  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26054                           
 26055                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 26056  003B34  0E00               	movlw	0
 26057  003B36  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26058                           
 26059                           ; BSR set to: 1
 26060                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 26061  003B38  0E03               	movlw	3
 26062  003B3A  0100               	movlb	0	; () banked
 26063  003B3C  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26064  003B3E  B4D8               	btfsc	status,2,c
 26065  003B40  0012               	return	
 26066                           
 26067                           ; BSR set to: 0
 26068  003B42  0E02               	movlw	2
 26069  003B44  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26070  003B46  B4D8               	btfsc	status,2,c
 26071  003B48  0012               	return	
 26072                           
 26073                           ; BSR set to: 0
 26074                           
 26075                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 26076  003B4A  9487               	bcf	135,2,c	;volatile
 26077  003B4C  0012               	return	
 26078  003B4E                     l16995:
 26079                           
 26080                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26081  003B4E  0100               	movlb	0	; () banked
 26082  003B50  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26083  003B52  A4D8               	btfss	status,2,c
 26084  003B54  D008               	goto	l16999
 26085                           
 26086                           ; BSR set to: 0
 26087                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 26088  003B56  0E00               	movlw	0
 26089  003B58  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26090  003B5A  0E14               	movlw	20
 26091  003B5C  6E11               	movwf	setRGB_ON@Freq^0,c
 26092  003B5E  0E01               	movlw	1
 26093  003B60  ECAE  F03A         	call	_setRGB_ON
 26094                           
 26095                           ;outputs_MC50.c: 932:             }
 26096  003B64  D007               	goto	l17001
 26097  003B66                     l16999:
 26098                           
 26099                           ; BSR set to: 0
 26100                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 26101  003B66  0E00               	movlw	0
 26102  003B68  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26103  003B6A  0E00               	movlw	0
 26104  003B6C  6E11               	movwf	setRGB_ON@Freq^0,c
 26105  003B6E  0E01               	movlw	1
 26106  003B70  ECAE  F03A         	call	_setRGB_ON
 26107  003B74                     l17001:
 26108                           
 26109                           ; BSR set to: 1
 26110                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 26111  003B74  0100               	movlb	0	; () banked
 26112  003B76  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26113  003B78  B4D8               	btfsc	status,2,c
 26114  003B7A  D004               	goto	u20430
 26115                           
 26116                           ; BSR set to: 0
 26117  003B7C  0E03               	movlw	3
 26118  003B7E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26119  003B80  A4D8               	btfss	status,2,c
 26120  003B82  D002               	goto	l17005
 26121  003B84                     u20430:
 26122                           
 26123                           ; BSR set to: 0
 26124                           
 26125                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 26126  003B84  9487               	bcf	135,2,c	;volatile
 26127  003B86  0012               	return	
 26128  003B88                     l17005:
 26129                           
 26130                           ; BSR set to: 0
 26131  003B88  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26132  003B8A  B4D8               	btfsc	status,2,c
 26133  003B8C  D76E               	goto	l16947
 26134                           
 26135                           ; BSR set to: 0
 26136  003B8E  0E02               	movlw	2
 26137  003B90  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26138  003B92  A4D8               	btfss	status,2,c
 26139  003B94  0012               	return	
 26140  003B96  D769               	goto	l16947
 26141  003B98                     l17011:
 26142                           
 26143                           ; BSR set to: 1
 26144                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 26145  003B98  0E00               	movlw	0
 26146  003B9A  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26147                           
 26148                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 26149  003B9C  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 26150  003B9E  A4D8               	btfss	status,2,c
 26151  003BA0  D00C               	goto	l17017
 26152                           
 26153                           ; BSR set to: 1
 26154  003BA2  0E03               	movlw	3
 26155  003BA4  0100               	movlb	0	; () banked
 26156  003BA6  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26157  003BA8  A4D8               	btfss	status,2,c
 26158  003BAA  D007               	goto	l17017
 26159                           
 26160                           ; BSR set to: 0
 26161                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 26162  003BAC  0E00               	movlw	0
 26163  003BAE  0101               	movlb	1	; () banked
 26164  003BB0  6FDF               	movwf	(_ts_system+67)& (0+255),b	;volatile
 26165  003BB2  0E28               	movlw	40
 26166  003BB4  6FDE               	movwf	(_ts_system+66)& (0+255),b	;volatile
 26167                           
 26168                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 26169  003BB6  0E01               	movlw	1
 26170  003BB8  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26171  003BBA                     l17017:
 26172                           
 26173                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 26174  003BBA  0101               	movlb	1	; () banked
 26175  003BBC  BFDF               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26176  003BBE  D005               	goto	u20480
 26177  003BC0  51DF               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26178  003BC2  E105               	bnz	l17021
 26179  003BC4  05DE               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26180  003BC6  B0D8               	btfsc	status,0,c
 26181  003BC8  D002               	goto	l17021
 26182  003BCA                     u20480:
 26183                           
 26184                           ; BSR set to: 1
 26185  003BCA  0100               	movlb	0	; () banked
 26186  003BCC  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26187  003BCE                     l17021:
 26188                           
 26189                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 26190  003BCE  0E04               	movlw	4
 26191  003BD0  0101               	movlb	1	; () banked
 26192  003BD2  19E4               	xorwf	_controlGate_stateMachine& (0+255),w,b
 26193  003BD4  11E5               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26194  003BD6  A4D8               	btfss	status,2,c
 26195  003BD8  D01B               	goto	l17033
 26196                           
 26197                           ; BSR set to: 1
 26198                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26199  003BDA  0E00               	movlw	0
 26200  003BDC  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26201                           
 26202                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 26203  003BDE  0E00               	movlw	0
 26204  003BE0  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26205                           
 26206                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 26207  003BE2  0100               	movlb	0	; () banked
 26208  003BE4  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26209  003BE6  A4D8               	btfss	status,2,c
 26210  003BE8  D00A               	goto	u20530
 26211                           
 26212                           ; BSR set to: 0
 26213  003BEA  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26214  003BEC  B4D8               	btfsc	status,2,c
 26215  003BEE  D003               	goto	u20520
 26216                           
 26217                           ; BSR set to: 0
 26218  003BF0  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26219  003BF2  A4D8               	btfss	status,2,c
 26220  003BF4  D004               	goto	u20530
 26221  003BF6                     u20520:
 26222                           
 26223                           ; BSR set to: 0
 26224  003BF6  0E02               	movlw	2
 26225  003BF8  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 26226  003BFA  A4D8               	btfss	status,2,c
 26227  003BFC  D007               	goto	l2472
 26228  003BFE                     u20530:
 26229                           
 26230                           ; BSR set to: 0
 26231                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 26232  003BFE  0E00               	movlw	0
 26233  003C00  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26234  003C02  0E00               	movlw	0
 26235  003C04  6E11               	movwf	setRGB_ON@Freq^0,c
 26236  003C06  0E01               	movlw	1
 26237  003C08  ECAE  F03A         	call	_setRGB_ON
 26238  003C0C                     l2472:
 26239  003C0C  9487               	bcf	135,2,c	;volatile
 26240  003C0E  0012               	return	
 26241  003C10                     l17033:
 26242                           
 26243                           ; BSR set to: 1
 26244                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26245  003C10  0100               	movlb	0	; () banked
 26246  003C12  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26247  003C14  A4D8               	btfss	status,2,c
 26248  003C16  D008               	goto	l17037
 26249                           
 26250                           ; BSR set to: 0
 26251                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 26252  003C18  0E00               	movlw	0
 26253  003C1A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26254  003C1C  0E0A               	movlw	10
 26255  003C1E  6E11               	movwf	setRGB_ON@Freq^0,c
 26256  003C20  0E02               	movlw	2
 26257  003C22  ECAE  F03A         	call	_setRGB_ON
 26258                           
 26259                           ;outputs_MC50.c: 999:             }
 26260  003C26  D007               	goto	l17039
 26261  003C28                     l17037:
 26262                           
 26263                           ; BSR set to: 0
 26264                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 26265  003C28  0E00               	movlw	0
 26266  003C2A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26267  003C2C  0E00               	movlw	0
 26268  003C2E  6E11               	movwf	setRGB_ON@Freq^0,c
 26269  003C30  0E02               	movlw	2
 26270  003C32  ECAE  F03A         	call	_setRGB_ON
 26271  003C36                     l17039:
 26272                           
 26273                           ; BSR set to: 1
 26274                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 26275  003C36  0100               	movlb	0	; () banked
 26276  003C38  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26277  003C3A  A4D8               	btfss	status,2,c
 26278  003C3C  D007               	goto	l17043
 26279                           
 26280                           ; BSR set to: 0
 26281                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 26282  003C3E  0E00               	movlw	0
 26283  003C40  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26284  003C42  0E14               	movlw	20
 26285  003C44  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26286  003C46  EC7B  F044         	call	_setFlashLigth_ON	;wreg free
 26287                           
 26288                           ;outputs_MC50.c: 1011:             }
 26289  003C4A  D00D               	goto	l17049
 26290  003C4C                     l17043:
 26291                           
 26292                           ; BSR set to: 0
 26293  003C4C  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26294  003C4E  B4D8               	btfsc	status,2,c
 26295  003C50  D004               	goto	u20570
 26296                           
 26297                           ; BSR set to: 0
 26298  003C52  0E02               	movlw	2
 26299  003C54  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26300  003C56  A4D8               	btfss	status,2,c
 26301  003C58  D006               	goto	l17049
 26302  003C5A                     u20570:
 26303                           
 26304                           ; BSR set to: 0
 26305                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 26306  003C5A  0E00               	movlw	0
 26307  003C5C  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26308  003C5E  0E00               	movlw	0
 26309  003C60  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26310  003C62  EC7B  F044         	call	_setFlashLigth_ON	;wreg free
 26311  003C66                     l17049:
 26312                           
 26313                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 26314  003C66  0E03               	movlw	3
 26315  003C68  0100               	movlb	0	; () banked
 26316  003C6A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26317  003C6C  A4D8               	btfss	status,2,c
 26318  003C6E  0012               	return	
 26319                           
 26320                           ; BSR set to: 0
 26321                           
 26322                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 26323  003C70  9487               	bcf	135,2,c	;volatile
 26324  003C72  0012               	return		;funcret
 26325  003C74                     __end_of_ControlLights:
 26326                           	callstack 0
 26327                           
 26328 ;; *************** function _setRGB_ON *****************
 26329 ;; Defined at:
 26330 ;;		line 1028 in file "outputs_MC50.c"
 26331 ;; Parameters:    Size  Location     Type
 26332 ;;  RGBLigth        1    wreg     enum E10611
 26333 ;;  Freq            2   16[COMRAM] int 
 26334 ;; Auto vars:     Size  Location     Type
 26335 ;;  RGBLigth        1   20[COMRAM] enum E10611
 26336 ;; Return value:  Size  Location     Type
 26337 ;;                  1    wreg      void 
 26338 ;; Registers used:
 26339 ;;		wreg, status,2, status,0, cstack
 26340 ;; Tracked objects:
 26341 ;;		On entry : 3E/0
 26342 ;;		On exit  : 3F/1
 26343 ;;		Unchanged: 0/0
 26344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26348 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26349 ;;Total ram usage:        5 bytes
 26350 ;; Hardware stack levels used: 1
 26351 ;; Hardware stack levels required when called: 5
 26352 ;; This function calls:
 26353 ;;		_RGB_Set
 26354 ;; This function is called by:
 26355 ;;		_ControlLights
 26356 ;; This function uses a non-reentrant model
 26357 ;;
 26358                           
 26359                           	psect	text112
 26360  00755C                     __ptext112:
 26361                           	callstack 0
 26362  00755C                     _setRGB_ON:
 26363                           	callstack 24
 26364                           
 26365                           ;incstack = 0
 26366                           ;setRGB_ON@RGBLigth stored from wreg
 26367  00755C  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 26368                           
 26369                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 26370  00755E  8E83               	bsf	131,7,c	;volatile
 26371                           
 26372                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 26373  007560  5011               	movf	setRGB_ON@Freq^0,w,c
 26374  007562  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 26375  007564  B4D8               	btfsc	status,2,c
 26376  007566  D015               	goto	l14697
 26377  007568  0101               	movlb	1	; () banked
 26378  00756A  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 26379  00756C  B4D8               	btfsc	status,2,c
 26380  00756E  D011               	goto	l14697
 26381  007570  D024               	goto	l14699
 26382  007572                     l14687:
 26383                           
 26384                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 26385  007572  0E20               	movlw	32
 26386  007574  EC55  F048         	call	_RGB_Set
 26387                           
 26388                           ;outputs_MC50.c: 1044:             break;
 26389  007578  D020               	goto	l14699
 26390  00757A                     l14689:
 26391                           
 26392                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 26393  00757A  0E04               	movlw	4
 26394  00757C  EC55  F048         	call	_RGB_Set
 26395                           
 26396                           ;outputs_MC50.c: 1048:             break;
 26397  007580  D01C               	goto	l14699
 26398  007582                     l14691:
 26399                           
 26400                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 26401  007582  0E00               	movlw	0
 26402  007584  EC55  F048         	call	_RGB_Set
 26403                           
 26404                           ;outputs_MC50.c: 1052:             break;
 26405  007588  D018               	goto	l14699
 26406  00758A                     l14693:
 26407                           
 26408                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 26409  00758A  0E24               	movlw	36
 26410  00758C  EC55  F048         	call	_RGB_Set
 26411                           
 26412                           ;outputs_MC50.c: 1056:             break;
 26413  007590  D014               	goto	l14699
 26414  007592                     l14697:
 26415  007592  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 26416  007594  6E13               	movwf	??_setRGB_ON^0,c
 26417  007596  6A14               	clrf	(??_setRGB_ON+1)^0,c
 26418                           
 26419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26420                           ; Switch size 1, requested type "simple"
 26421                           ; Number of cases is 1, Range of values is 0 to 0
 26422                           ; switch strategies available:
 26423                           ; Name         Instructions Cycles
 26424                           ; simple_byte            4     3 (average)
 26425                           ;	Chosen strategy is simple_byte
 26426  007598  5014               	movf	(??_setRGB_ON+1)^0,w,c
 26427  00759A  0A00               	xorlw	0	; case 0
 26428  00759C  A4D8               	btfss	status,2,c
 26429  00759E  D00D               	goto	l14699
 26430                           
 26431                           ; Switch size 1, requested type "simple"
 26432                           ; Number of cases is 4, Range of values is 1 to 4
 26433                           ; switch strategies available:
 26434                           ; Name         Instructions Cycles
 26435                           ; simple_byte           13     7 (average)
 26436                           ;	Chosen strategy is simple_byte
 26437  0075A0  5013               	movf	??_setRGB_ON^0,w,c
 26438  0075A2  0A01               	xorlw	1	; case 1
 26439  0075A4  B4D8               	btfsc	status,2,c
 26440  0075A6  D7ED               	goto	l14691
 26441  0075A8  0A03               	xorlw	3	; case 2
 26442  0075AA  B4D8               	btfsc	status,2,c
 26443  0075AC  D7E6               	goto	l14689
 26444  0075AE  0A01               	xorlw	1	; case 3
 26445  0075B0  B4D8               	btfsc	status,2,c
 26446  0075B2  D7DF               	goto	l14687
 26447  0075B4  0A07               	xorlw	7	; case 4
 26448  0075B6  B4D8               	btfsc	status,2,c
 26449  0075B8  D7E8               	goto	l14693
 26450  0075BA                     l14699:
 26451                           
 26452                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 26453  0075BA  0101               	movlb	1	; () banked
 26454  0075BC  BFB9               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 26455  0075BE  D005               	goto	u15310
 26456  0075C0  51B9               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 26457  0075C2  E113               	bnz	l2502
 26458  0075C4  05B8               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 26459  0075C6  B0D8               	btfsc	status,0,c
 26460  0075C8  0012               	return	
 26461  0075CA                     u15310:
 26462                           
 26463                           ; BSR set to: 1
 26464  0075CA  5011               	movf	setRGB_ON@Freq^0,w,c
 26465  0075CC  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 26466  0075CE  B4D8               	btfsc	status,2,c
 26467  0075D0  0012               	return	
 26468                           
 26469                           ; BSR set to: 1
 26470                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 26471  0075D2  C011  F1B8         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 26472  0075D6  C012  F1B9         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 26473                           
 26474                           ; BSR set to: 1
 26475                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 26476  0075DA  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 26477  0075DC  A4D8               	btfss	status,2,c
 26478  0075DE  D003               	goto	l14709
 26479                           
 26480                           ; BSR set to: 1
 26481                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 26482  0075E0  0E00               	movlw	0
 26483  0075E2  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 26484                           
 26485                           ;outputs_MC50.c: 1067:         }
 26486  0075E4  0012               	return	
 26487  0075E6                     l14709:
 26488                           
 26489                           ; BSR set to: 1
 26490                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 26491  0075E6  0E01               	movlw	1
 26492  0075E8  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 26493  0075EA                     l2502:
 26494                           
 26495                           ; BSR set to: 1
 26496  0075EA  0012               	return		;funcret
 26497  0075EC                     __end_of_setRGB_ON:
 26498                           	callstack 0
 26499                           
 26500 ;; *************** function _RGB_Set *****************
 26501 ;; Defined at:
 26502 ;;		line 98 in file "outputs_MC50.c"
 26503 ;; Parameters:    Size  Location     Type
 26504 ;;  value           1    wreg     unsigned char 
 26505 ;; Auto vars:     Size  Location     Type
 26506 ;;  value           1   15[COMRAM] unsigned char 
 26507 ;; Return value:  Size  Location     Type
 26508 ;;                  1    wreg      void 
 26509 ;; Registers used:
 26510 ;;		wreg, status,2, status,0
 26511 ;; Tracked objects:
 26512 ;;		On entry : 0/0
 26513 ;;		On exit  : 0/0
 26514 ;;		Unchanged: 0/0
 26515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26519 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26520 ;;Total ram usage:        1 bytes
 26521 ;; Hardware stack levels used: 1
 26522 ;; Hardware stack levels required when called: 4
 26523 ;; This function calls:
 26524 ;;		Nothing
 26525 ;; This function is called by:
 26526 ;;		_setRGB_ON
 26527 ;; This function uses a non-reentrant model
 26528 ;;
 26529                           
 26530                           	psect	text113
 26531  0090AA                     __ptext113:
 26532                           	callstack 0
 26533  0090AA                     _RGB_Set:
 26534                           	callstack 24
 26535                           
 26536                           ; BSR set to: 1
 26537                           ;incstack = 0
 26538                           ;RGB_Set@value stored from wreg
 26539  0090AA  6E10               	movwf	RGB_Set@value^0,c
 26540                           
 26541                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 26542  0090AC  0EDB               	movlw	219
 26543  0090AE  1685               	andwf	133,f,c	;volatile
 26544                           
 26545                           ;outputs_MC50.c: 101:    LATC |= value;
 26546  0090B0  5010               	movf	RGB_Set@value^0,w,c	;volatile
 26547  0090B2  1285               	iorwf	133,f,c	;volatile
 26548  0090B4  9E83               	bcf	131,7,c	;volatile
 26549  0090B6  0012               	return		;funcret
 26550  0090B8                     __end_of_RGB_Set:
 26551                           	callstack 0
 26552                           
 26553 ;; *************** function _setFlashLigth_ON *****************
 26554 ;; Defined at:
 26555 ;;		line 1077 in file "outputs_MC50.c"
 26556 ;; Parameters:    Size  Location     Type
 26557 ;;  Freq            2   15[COMRAM] int 
 26558 ;; Auto vars:     Size  Location     Type
 26559 ;;		None
 26560 ;; Return value:  Size  Location     Type
 26561 ;;                  1    wreg      void 
 26562 ;; Registers used:
 26563 ;;		wreg, status,2, status,0
 26564 ;; Tracked objects:
 26565 ;;		On entry : 3E/1
 26566 ;;		On exit  : 3F/1
 26567 ;;		Unchanged: 0/0
 26568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26573 ;;Total ram usage:        2 bytes
 26574 ;; Hardware stack levels used: 1
 26575 ;; Hardware stack levels required when called: 4
 26576 ;; This function calls:
 26577 ;;		Nothing
 26578 ;; This function is called by:
 26579 ;;		_ControlLights
 26580 ;; This function uses a non-reentrant model
 26581 ;;
 26582                           
 26583                           	psect	text114
 26584  0088F6                     __ptext114:
 26585                           	callstack 0
 26586  0088F6                     _setFlashLigth_ON:
 26587                           	callstack 25
 26588                           
 26589                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 26590                           
 26591                           ;incstack = 0
 26592  0088F6  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 26593  0088F8  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 26594  0088FA  B4D8               	btfsc	status,2,c
 26595  0088FC  D004               	goto	u15260
 26596  0088FE  0101               	movlb	1	; () banked
 26597  008900  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 26598  008902  A4D8               	btfss	status,2,c
 26599  008904  D002               	goto	l2511
 26600  008906                     u15260:
 26601                           
 26602                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 26603  008906  8487               	bsf	135,2,c	;volatile
 26604  008908  D001               	goto	l14675
 26605  00890A                     l2511:
 26606                           
 26607                           ; BSR set to: 1
 26608  00890A  9487               	bcf	135,2,c	;volatile
 26609  00890C                     l14675:
 26610                           
 26611                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 26612  00890C  0101               	movlb	1	; () banked
 26613  00890E  BFBB               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 26614  008910  D005               	goto	u15270
 26615  008912  51BB               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 26616  008914  E10D               	bnz	l2514
 26617  008916  05BA               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 26618  008918  B0D8               	btfsc	status,0,c
 26619  00891A  0012               	return	
 26620  00891C                     u15270:
 26621                           
 26622                           ; BSR set to: 1
 26623  00891C  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 26624  00891E  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 26625  008920  B4D8               	btfsc	status,2,c
 26626  008922  0012               	return	
 26627                           
 26628                           ; BSR set to: 1
 26629                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 26630  008924  C010  F1BA         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 26631  008928  C011  F1BB         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 26632                           
 26633                           ; BSR set to: 1
 26634                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 26635  00892C  0E01               	movlw	1
 26636  00892E  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 26637  008930                     l2514:
 26638                           
 26639                           ; BSR set to: 1
 26640  008930  0012               	return		;funcret
 26641  008932                     __end_of_setFlashLigth_ON:
 26642                           	callstack 0
 26643                           
 26644 ;; *************** function _ControlInputs *****************
 26645 ;; Defined at:
 26646 ;;		line 674 in file "inputs_MC50.c"
 26647 ;; Parameters:    Size  Location     Type
 26648 ;;		None
 26649 ;; Auto vars:     Size  Location     Type
 26650 ;;		None
 26651 ;; Return value:  Size  Location     Type
 26652 ;;                  1    wreg      void 
 26653 ;; Registers used:
 26654 ;;		wreg, status,2, status,0
 26655 ;; Tracked objects:
 26656 ;;		On entry : 3E/1
 26657 ;;		On exit  : 3E/0
 26658 ;;		Unchanged: 0/0
 26659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26664 ;;Total ram usage:        0 bytes
 26665 ;; Hardware stack levels used: 1
 26666 ;; Hardware stack levels required when called: 4
 26667 ;; This function calls:
 26668 ;;		Nothing
 26669 ;; This function is called by:
 26670 ;;		_main
 26671 ;; This function uses a non-reentrant model
 26672 ;;
 26673                           
 26674                           	psect	text115
 26675  00642A                     __ptext115:
 26676                           	callstack 0
 26677  00642A                     _ControlInputs:
 26678                           	callstack 26
 26679                           
 26680                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 26681                           
 26682                           ; BSR set to: 1
 26683                           ;incstack = 0
 26684  00642A  0E03               	movlw	3
 26685  00642C  0101               	movlb	1	; () banked
 26686  00642E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26687  006430  B4D8               	btfsc	status,2,c
 26688  006432  D00C               	goto	u19210
 26689                           
 26690                           ; BSR set to: 1
 26691  006434  A291               	btfss	145,1,c	;volatile
 26692  006436  D004               	goto	u19190
 26693                           
 26694                           ; BSR set to: 1
 26695  006438  0100               	movlb	0	; () banked
 26696  00643A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26697  00643C  B4D8               	btfsc	status,2,c
 26698  00643E  D006               	goto	u19210
 26699  006440                     u19190:
 26700  006440  A091               	btfss	145,0,c	;volatile
 26701  006442  D00A               	goto	l16639
 26702  006444  0100               	movlb	0	; () banked
 26703  006446  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26704  006448  A4D8               	btfss	status,2,c
 26705  00644A  D006               	goto	l16639
 26706  00644C                     u19210:
 26707  00644C  0101               	movlb	1	; () banked
 26708  00644E  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 26709  006450  A4D8               	btfss	status,2,c
 26710  006452  D002               	goto	l16639
 26711                           
 26712                           ; BSR set to: 1
 26713                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 26714  006454  0E00               	movlw	0
 26715  006456  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26716  006458                     l16639:
 26717                           
 26718                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 26719  006458  0101               	movlb	1	; () banked
 26720  00645A  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26721  00645C  B4D8               	btfsc	status,2,c
 26722  00645E  D010               	goto	u19280
 26723                           
 26724                           ; BSR set to: 1
 26725  006460  0E02               	movlw	2
 26726  006462  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26727  006464  B4D8               	btfsc	status,2,c
 26728  006466  D00C               	goto	u19280
 26729                           
 26730                           ; BSR set to: 1
 26731  006468  A091               	btfss	145,0,c	;volatile
 26732  00646A  D004               	goto	u19260
 26733                           
 26734                           ; BSR set to: 1
 26735  00646C  0100               	movlb	0	; () banked
 26736  00646E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26737  006470  B4D8               	btfsc	status,2,c
 26738  006472  D006               	goto	u19280
 26739  006474                     u19260:
 26740  006474  A291               	btfss	145,1,c	;volatile
 26741  006476  D00A               	goto	l16653
 26742  006478  0100               	movlb	0	; () banked
 26743  00647A  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26744  00647C  A4D8               	btfss	status,2,c
 26745  00647E  D006               	goto	l16653
 26746  006480                     u19280:
 26747  006480  0101               	movlb	1	; () banked
 26748  006482  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 26749  006484  A4D8               	btfss	status,2,c
 26750  006486  D002               	goto	l16653
 26751                           
 26752                           ; BSR set to: 1
 26753                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 26754  006488  0E00               	movlw	0
 26755  00648A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26756  00648C                     l16653:
 26757                           
 26758                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 26759  00648C  0101               	movlb	1	; () banked
 26760  00648E  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 26761  006490  B4D8               	btfsc	status,2,c
 26762  006492  0012               	return	
 26763                           
 26764                           ; BSR set to: 1
 26765                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 26766  006494  0100               	movlb	0	; () banked
 26767  006496  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 26768  006498  A4D8               	btfss	status,2,c
 26769  00649A  D02B               	goto	l16679
 26770                           
 26771                           ; BSR set to: 0
 26772  00649C  0101               	movlb	1	; () banked
 26773  00649E  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 26774  0064A0  A4D8               	btfss	status,2,c
 26775  0064A2  D027               	goto	l16679
 26776                           
 26777                           ; BSR set to: 1
 26778  0064A4  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 26779  0064A6  A4D8               	btfss	status,2,c
 26780  0064A8  D024               	goto	l16679
 26781                           
 26782                           ; BSR set to: 1
 26783                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 26784  0064AA  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26785  0064AC  B4D8               	btfsc	status,2,c
 26786  0064AE  D004               	goto	u19350
 26787                           
 26788                           ; BSR set to: 1
 26789  0064B0  0E02               	movlw	2
 26790  0064B2  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26791  0064B4  A4D8               	btfss	status,2,c
 26792  0064B6  D007               	goto	l16669
 26793  0064B8                     u19350:
 26794                           
 26795                           ; BSR set to: 1
 26796  0064B8  0100               	movlb	0	; () banked
 26797  0064BA  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 26798  0064BC  A4D8               	btfss	status,2,c
 26799  0064BE  D003               	goto	l16669
 26800                           
 26801                           ; BSR set to: 0
 26802                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 26803  0064C0  0E00               	movlw	0
 26804  0064C2  0101               	movlb	1	; () banked
 26805  0064C4  D015               	goto	L102
 26806  0064C6                     l16669:
 26807  0064C6  0E03               	movlw	3
 26808  0064C8  0101               	movlb	1	; () banked
 26809  0064CA  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26810  0064CC  A4D8               	btfss	status,2,c
 26811  0064CE  D011               	goto	l16679
 26812                           
 26813                           ; BSR set to: 1
 26814  0064D0  0100               	movlb	0	; () banked
 26815  0064D2  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 26816  0064D4  A4D8               	btfss	status,2,c
 26817  0064D6  D00D               	goto	l16679
 26818                           
 26819                           ; BSR set to: 0
 26820  0064D8  0101               	movlb	1	; () banked
 26821  0064DA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 26822  0064DC  D005               	goto	u19390
 26823  0064DE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 26824  0064E0  E108               	bnz	l16679
 26825  0064E2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 26826  0064E4  B0D8               	btfsc	status,0,c
 26827  0064E6  D005               	goto	l16679
 26828  0064E8                     u19390:
 26829                           
 26830                           ; BSR set to: 1
 26831  0064E8  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 26832  0064EA  A4D8               	btfss	status,2,c
 26833  0064EC  D002               	goto	l16679
 26834                           
 26835                           ; BSR set to: 1
 26836                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 26837  0064EE  0E00               	movlw	0
 26838  0064F0                     L102:
 26839  0064F0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26840  0064F2                     l16679:
 26841                           
 26842                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 26843  0064F2  0100               	movlb	0	; () banked
 26844  0064F4  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 26845  0064F6  B4D8               	btfsc	status,2,c
 26846  0064F8  D003               	goto	u19420
 26847                           
 26848                           ; BSR set to: 0
 26849  0064FA  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 26850  0064FC  A4D8               	btfss	status,2,c
 26851  0064FE  0012               	return	
 26852  006500                     u19420:
 26853                           
 26854                           ; BSR set to: 0
 26855  006500  0101               	movlb	1	; () banked
 26856  006502  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 26857  006504  A4D8               	btfss	status,2,c
 26858  006506  0012               	return	
 26859                           
 26860                           ; BSR set to: 1
 26861  006508  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 26862  00650A  A4D8               	btfss	status,2,c
 26863  00650C  0012               	return	
 26864                           
 26865                           ; BSR set to: 1
 26866                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 26867  00650E  0E03               	movlw	3
 26868  006510  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26869  006512  A4D8               	btfss	status,2,c
 26870  006514  D008               	goto	l16693
 26871                           
 26872                           ; BSR set to: 1
 26873  006516  0100               	movlb	0	; () banked
 26874  006518  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 26875  00651A  A4D8               	btfss	status,2,c
 26876  00651C  D004               	goto	l16693
 26877                           
 26878                           ; BSR set to: 0
 26879                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 26880  00651E  0E00               	movlw	0
 26881  006520  0101               	movlb	1	; () banked
 26882  006522  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26883                           
 26884                           ;inputs_MC50.c: 727:             }
 26885  006524  0012               	return	
 26886  006526                     l16693:
 26887  006526  0101               	movlb	1	; () banked
 26888  006528  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26889  00652A  B4D8               	btfsc	status,2,c
 26890  00652C  D004               	goto	u19480
 26891                           
 26892                           ; BSR set to: 1
 26893  00652E  0E02               	movlw	2
 26894  006530  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26895  006532  A4D8               	btfss	status,2,c
 26896  006534  D004               	goto	u19490
 26897  006536                     u19480:
 26898                           
 26899                           ; BSR set to: 1
 26900  006536  0100               	movlb	0	; () banked
 26901  006538  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 26902  00653A  B4D8               	btfsc	status,2,c
 26903  00653C  D004               	goto	u19500
 26904  00653E                     u19490:
 26905  00653E  0100               	movlb	0	; () banked
 26906  006540  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 26907  006542  A4D8               	btfss	status,2,c
 26908  006544  0012               	return	
 26909  006546                     u19500:
 26910                           
 26911                           ; BSR set to: 0
 26912                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 26913  006546  0E00               	movlw	0
 26914  006548  0101               	movlb	1	; () banked
 26915  00654A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26916  00654C  0012               	return	
 26917  00654E                     __end_of_ControlInputs:
 26918                           	callstack 0
 26919                           
 26920 ;; *************** function _ControlCurrent *****************
 26921 ;; Defined at:
 26922 ;;		line 342 in file "controlCurrent_MC50.c"
 26923 ;; Parameters:    Size  Location     Type
 26924 ;;		None
 26925 ;; Auto vars:     Size  Location     Type
 26926 ;;		None
 26927 ;; Return value:  Size  Location     Type
 26928 ;;                  1    wreg      void 
 26929 ;; Registers used:
 26930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26931 ;; Tracked objects:
 26932 ;;		On entry : 3E/1
 26933 ;;		On exit  : 3E/0
 26934 ;;		Unchanged: 0/0
 26935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26938 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26939 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26940 ;;Total ram usage:        4 bytes
 26941 ;; Hardware stack levels used: 1
 26942 ;; Hardware stack levels required when called: 6
 26943 ;; This function calls:
 26944 ;;		_GetMotorPower
 26945 ;;		_getCurrentComparator
 26946 ;;		_refreshADCZeroOffset
 26947 ;;		_refreshCurrent
 26948 ;; This function is called by:
 26949 ;;		_main
 26950 ;; This function uses a non-reentrant model
 26951 ;;
 26952                           
 26953                           	psect	text116
 26954  005DE4                     __ptext116:
 26955                           	callstack 0
 26956  005DE4                     _ControlCurrent:
 26957                           	callstack 24
 26958                           
 26959                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 26960                           
 26961                           ;incstack = 0
 26962  005DE4  EC73  F043         	call	_refreshCurrent	;wreg free
 26963                           
 26964                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 26965  005DE8  EC3A  F034         	call	_refreshADCZeroOffset	;wreg free
 26966                           
 26967                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 26968  005DEC  EC61  F037         	call	_GetMotorPower	;wreg free
 26969  005DF0  6E23               	movwf	??_ControlCurrent^0,c
 26970  005DF2  5023               	movf	??_ControlCurrent^0,w,c
 26971  005DF4  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 26972  005DF6  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 26973                           
 26974                           ; BSR set to: 1
 26975                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 26976  005DF8  EC07  F02B         	call	_getCurrentComparator	;wreg free
 26977  005DFC  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 26978  005E00  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 26979  005E04  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 26980  005E08  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 26981                           
 26982                           ; BSR set to: 1
 26983                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 26984  005E0C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26985  005E0E  A4D8               	btfss	status,2,c
 26986  005E10  D00F               	goto	l22513
 26987                           
 26988                           ; BSR set to: 1
 26989                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 26990  005E12  0E00               	movlw	0
 26991  005E14  0100               	movlb	0	; () banked
 26992  005E16  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 26993                           
 26994                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 26995  005E18  0E00               	movlw	0
 26996  005E1A  0101               	movlb	1	; () banked
 26997  005E1C  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 26998                           
 26999                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 27000  005E1E  0E00               	movlw	0
 27001  005E20  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27002                           
 27003                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 27004  005E22  0E00               	movlw	0
 27005  005E24  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27006                           
 27007                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 27008  005E26  0E00               	movlw	0
 27009  005E28  6FD5               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27010  005E2A  0E14               	movlw	20
 27011  005E2C  6FD4               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27012                           
 27013                           ;controlCurrent_MC50.c: 365:     }
 27014  005E2E  0012               	return	
 27015  005E30                     l22513:
 27016                           
 27017                           ; BSR set to: 1
 27018  005E30  517B               	movf	_powerControl_st& (0+255),w,b
 27019  005E32  A4D8               	btfss	status,2,c
 27020  005E34  D05D               	goto	l22547
 27021                           
 27022                           ; BSR set to: 1
 27023                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 27024  005E36  0E00               	movlw	0
 27025  005E38  6FD5               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27026  005E3A  0E14               	movlw	20
 27027  005E3C  6FD4               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27028                           
 27029                           ; BSR set to: 1
 27030                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 27031  005E3E  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 27032  005E40  6E23               	movwf	??_ControlCurrent^0,c
 27033  005E42  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 27034  005E44  6E24               	movwf	(??_ControlCurrent+1)^0,c
 27035  005E46  6A25               	clrf	(??_ControlCurrent+2)^0,c
 27036  005E48  6A26               	clrf	(??_ControlCurrent+3)^0,c
 27037  005E4A  5023               	movf	??_ControlCurrent^0,w,c
 27038  005E4C  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 27039  005E4E  5024               	movf	(??_ControlCurrent+1)^0,w,c
 27040  005E50  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 27041  005E52  5025               	movf	(??_ControlCurrent+2)^0,w,c
 27042  005E54  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 27043  005E56  5026               	movf	(??_ControlCurrent+3)^0,w,c
 27044  005E58  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 27045  005E5A  B0D8               	btfsc	status,0,c
 27046  005E5C  D03E               	goto	l22545
 27047                           
 27048                           ; BSR set to: 1
 27049  005E5E  BFB7               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27050  005E60  D005               	goto	u27240
 27051  005E62  51B7               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27052  005E64  E13A               	bnz	l22545
 27053  005E66  05B6               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27054  005E68  B0D8               	btfsc	status,0,c
 27055  005E6A  D037               	goto	l22545
 27056  005E6C                     u27240:
 27057                           
 27058                           ; BSR set to: 1
 27059  005E6C  0100               	movlb	0	; () banked
 27060  005E6E  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 27061  005E70  B4D8               	btfsc	status,2,c
 27062  005E72  D033               	goto	l22545
 27063                           
 27064                           ; BSR set to: 0
 27065  005E74  0101               	movlb	1	; () banked
 27066  005E76  BFDF               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27067  005E78  D005               	goto	u27260
 27068  005E7A  51DF               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27069  005E7C  E12E               	bnz	l22545
 27070  005E7E  05DE               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27071  005E80  B0D8               	btfsc	status,0,c
 27072  005E82  D02B               	goto	l22545
 27073  005E84                     u27260:
 27074                           
 27075                           ; BSR set to: 1
 27076                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 27077  005E84  0100               	movlb	0	; () banked
 27078  005E86  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 27079  005E88  B4D8               	btfsc	status,2,c
 27080  005E8A  D00B               	goto	l22531
 27081                           
 27082                           ; BSR set to: 0
 27083                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 27084  005E8C  0101               	movlb	1	; () banked
 27085  005E8E  518B               	movf	_erroranterior& (0+255),w,b	;volatile
 27086  005E90  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 27087  005E92  518C               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 27088  005E94  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 27089  005E96  B0D8               	btfsc	status,0,c
 27090  005E98  D004               	goto	l22531
 27091                           
 27092                           ; BSR set to: 1
 27093                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 27094  005E9A  0E00               	movlw	0
 27095  005E9C  0100               	movlb	0	; () banked
 27096  005E9E  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27097                           
 27098                           ;controlCurrent_MC50.c: 384:                  }
 27099  005EA0  D002               	goto	l22533
 27100  005EA2                     l22531:
 27101                           
 27102                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 27103  005EA2  0100               	movlb	0	; () banked
 27104  005EA4  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 27105  005EA6                     l22533:
 27106                           
 27107                           ; BSR set to: 0
 27108                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 27109  005EA6  C12E  F18B         	movff	_var_sys+46,_erroranterior	;volatile
 27110  005EAA  C12F  F18C         	movff	_var_sys+47,_erroranterior+1	;volatile
 27111                           
 27112                           ; BSR set to: 0
 27113                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 27114                           
 27115                           ;controlCurrent_MC50.c: 390:              }
 27116  005EAE  0101               	movlb	1	; () banked
 27117  005EB0  BFCB               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 27118  005EB2  D005               	goto	u27290
 27119  005EB4  51CB               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 27120  005EB6  E14F               	bnz	l1405
 27121  005EB8  05CA               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 27122  005EBA  B0D8               	btfsc	status,0,c
 27123  005EBC  0012               	return	
 27124  005EBE                     u27290:
 27125                           
 27126                           ; BSR set to: 1
 27127  005EBE  0E01               	movlw	1
 27128  005EC0  0100               	movlb	0	; () banked
 27129  005EC2  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 27130  005EC4  0012               	return	
 27131                           
 27132                           ; BSR set to: 0
 27133                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 27134  005EC6  0E00               	movlw	0
 27135  005EC8  0101               	movlb	1	; () banked
 27136  005ECA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27137                           
 27138                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 27139  005ECC  0E00               	movlw	0
 27140  005ECE  6FC7               	movwf	(_ts_system+43)& (0+255),b	;volatile
 27141  005ED0  0EC8               	movlw	200
 27142  005ED2  6FC6               	movwf	(_ts_system+42)& (0+255),b	;volatile
 27143                           
 27144                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 27145  005ED4  0E01               	movlw	1
 27146  005ED6  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27147  005ED8  0012               	return	
 27148  005EDA                     l22545:
 27149                           
 27150                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 27151  005EDA  0E00               	movlw	0
 27152  005EDC  0100               	movlb	0	; () banked
 27153  005EDE  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27154                           
 27155                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 27156  005EE0  0E00               	movlw	0
 27157  005EE2  0101               	movlb	1	; () banked
 27158  005EE4  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27159                           
 27160                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 27161  005EE6  0E00               	movlw	0
 27162  005EE8  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27163                           
 27164                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 27165  005EEA  0E00               	movlw	0
 27166  005EEC  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27167  005EEE  0012               	return	
 27168  005EF0                     l22547:
 27169                           
 27170                           ; BSR set to: 1
 27171                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 27172  005EF0  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 27173  005EF2  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 27174  005EF4  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 27175  005EF6  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 27176  005EF8  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 27177  005EFA  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 27178  005EFC  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 27179  005EFE  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 27180  005F00  B0D8               	btfsc	status,0,c
 27181  005F02  D7EB               	goto	l22545
 27182                           
 27183                           ; BSR set to: 1
 27184  005F04  BFB7               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27185  005F06  D005               	goto	u27320
 27186  005F08  51B7               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27187  005F0A  E1E7               	bnz	l22545
 27188  005F0C  05B6               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27189  005F0E  B0D8               	btfsc	status,0,c
 27190  005F10  D7E4               	goto	l22545
 27191  005F12                     u27320:
 27192                           
 27193                           ; BSR set to: 1
 27194  005F12  BFD5               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 27195  005F14  D005               	goto	u27330
 27196  005F16  51D5               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 27197  005F18  E1E0               	bnz	l22545
 27198  005F1A  05D4               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 27199  005F1C  B0D8               	btfsc	status,0,c
 27200  005F1E  D7DD               	goto	l22545
 27201  005F20                     u27330:
 27202                           
 27203                           ; BSR set to: 1
 27204  005F20  0100               	movlb	0	; () banked
 27205  005F22  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 27206  005F24  B4D8               	btfsc	status,2,c
 27207  005F26  D7D9               	goto	l22545
 27208                           
 27209                           ; BSR set to: 0
 27210                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 27211  005F28  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 27212                           
 27213                           ; BSR set to: 0
 27214                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 27215  005F2A  0101               	movlb	1	; () banked
 27216  005F2C  BFCB               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 27217  005F2E  D005               	goto	u27350
 27218  005F30  51CB               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 27219  005F32  E111               	bnz	l1405
 27220  005F34  05CA               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 27221  005F36  B0D8               	btfsc	status,0,c
 27222  005F38  0012               	return	
 27223  005F3A                     u27350:
 27224                           
 27225                           ; BSR set to: 1
 27226  005F3A  0E02               	movlw	2
 27227  005F3C  0100               	movlb	0	; () banked
 27228  005F3E  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 27229  005F40  0012               	return	
 27230                           
 27231                           ; BSR set to: 0
 27232                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 27233  005F42  0E00               	movlw	0
 27234  005F44  0101               	movlb	1	; () banked
 27235  005F46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27236                           
 27237                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 27238  005F48  0E00               	movlw	0
 27239  005F4A  6FC7               	movwf	(_ts_system+43)& (0+255),b	;volatile
 27240  005F4C  0EC8               	movlw	200
 27241  005F4E  6FC6               	movwf	(_ts_system+42)& (0+255),b	;volatile
 27242                           
 27243                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 27244  005F50  0E01               	movlw	1
 27245  005F52  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27246  005F54  0012               	return	
 27247  005F56                     l1405:
 27248  005F56  0012               	return		;funcret
 27249  005F58                     __end_of_ControlCurrent:
 27250                           	callstack 0
 27251                           
 27252 ;; *************** function _refreshCurrent *****************
 27253 ;; Defined at:
 27254 ;;		line 233 in file "controlCurrent_MC50.c"
 27255 ;; Parameters:    Size  Location     Type
 27256 ;;		None
 27257 ;; Auto vars:     Size  Location     Type
 27258 ;;		None
 27259 ;; Return value:  Size  Location     Type
 27260 ;;                  1    wreg      void 
 27261 ;; Registers used:
 27262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27263 ;; Tracked objects:
 27264 ;;		On entry : 3E/1
 27265 ;;		On exit  : 3F/0
 27266 ;;		Unchanged: 0/0
 27267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27272 ;;Total ram usage:        0 bytes
 27273 ;; Hardware stack levels used: 1
 27274 ;; Hardware stack levels required when called: 5
 27275 ;; This function calls:
 27276 ;;		_saveEnergyADCHist
 27277 ;;		_sumEnergyADC
 27278 ;;		_sumHIST
 27279 ;; This function is called by:
 27280 ;;		_ControlCurrent
 27281 ;; This function uses a non-reentrant model
 27282 ;;
 27283                           
 27284                           	psect	text117
 27285  0086E6                     __ptext117:
 27286                           	callstack 0
 27287  0086E6                     _refreshCurrent:
 27288                           	callstack 24
 27289                           
 27290                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 27291                           
 27292                           ;incstack = 0
 27293  0086E6  0100               	movlb	0	; () banked
 27294  0086E8  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27295  0086EA  A4D8               	btfss	status,2,c
 27296  0086EC  D008               	goto	l14405
 27297                           
 27298                           ; BSR set to: 0
 27299  0086EE  0101               	movlb	1	; () banked
 27300  0086F0  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27301  0086F2  D005               	goto	l14405
 27302  0086F4  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27303  0086F6  E109               	bnz	l1372
 27304  0086F8  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27305  0086FA  B0D8               	btfsc	status,0,c
 27306  0086FC  D006               	goto	l1372
 27307  0086FE                     l14405:
 27308                           
 27309                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 27310  0086FE  EC3C  F03B         	call	_sumEnergyADC	;wreg free
 27311  008702  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 27312  008706  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 27313  00870A                     l1372:
 27314                           
 27315                           ; BSR set to: 1
 27316                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 27317  00870A  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 27318  00870E  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 27319  008712  EC7F  F046         	call	_saveEnergyADCHist	;wreg free
 27320                           
 27321                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 27322  008716  EC37  F035         	call	_sumHIST	;wreg free
 27323  00871A  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 27324  00871E  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 27325  008722  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 27326  008726  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 27327                           
 27328                           ; BSR set to: 0
 27329  00872A  0012               	return		;funcret
 27330  00872C                     __end_of_refreshCurrent:
 27331                           	callstack 0
 27332                           
 27333 ;; *************** function _sumHIST *****************
 27334 ;; Defined at:
 27335 ;;		line 199 in file "controlCurrent_MC50.c"
 27336 ;; Parameters:    Size  Location     Type
 27337 ;;		None
 27338 ;; Auto vars:     Size  Location     Type
 27339 ;;  sumH            4   27[COMRAM] unsigned long 
 27340 ;;  min             2   25[COMRAM] unsigned int 
 27341 ;;  max             2   23[COMRAM] unsigned int 
 27342 ;;  i               1   31[COMRAM] unsigned char 
 27343 ;; Return value:  Size  Location     Type
 27344 ;;                  4   15[COMRAM] unsigned long 
 27345 ;; Registers used:
 27346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27347 ;; Tracked objects:
 27348 ;;		On entry : 3F/0
 27349 ;;		On exit  : 3F/0
 27350 ;;		Unchanged: 3F/0
 27351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27353 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27354 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27355 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27356 ;;Total ram usage:       17 bytes
 27357 ;; Hardware stack levels used: 1
 27358 ;; Hardware stack levels required when called: 4
 27359 ;; This function calls:
 27360 ;;		Nothing
 27361 ;; This function is called by:
 27362 ;;		_refreshCurrent
 27363 ;; This function uses a non-reentrant model
 27364 ;;
 27365                           
 27366                           	psect	text118
 27367  006A6E                     __ptext118:
 27368                           	callstack 0
 27369  006A6E                     _sumHIST:
 27370                           	callstack 24
 27371                           
 27372                           ; BSR set to: 0
 27373                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 27374                           
 27375                           ; BSR set to: 0
 27376                           ;incstack = 0
 27377  006A6E  0E00               	movlw	0
 27378  006A70  6E1C               	movwf	sumHIST@sumH^0,c
 27379  006A72  0E00               	movlw	0
 27380  006A74  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27381  006A76  0E00               	movlw	0
 27382  006A78  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27383  006A7A  0E00               	movlw	0
 27384  006A7C  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27385                           
 27386                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 27387  006A7E  0E00               	movlw	0
 27388  006A80  6E19               	movwf	(sumHIST@max+1)^0,c
 27389  006A82  0E00               	movlw	0
 27390  006A84  6E18               	movwf	sumHIST@max^0,c
 27391                           
 27392                           ; BSR set to: 0
 27393                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 27394  006A86  681A               	setf	sumHIST@min^0,c
 27395  006A88  681B               	setf	(sumHIST@min+1)^0,c
 27396                           
 27397                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 27398  006A8A  0E00               	movlw	0
 27399  006A8C  6E20               	movwf	sumHIST@i^0,c
 27400  006A8E                     l12575:
 27401                           
 27402                           ; BSR set to: 0
 27403                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 27404  006A8E  5020               	movf	sumHIST@i^0,w,c
 27405  006A90  0D02               	mullw	2
 27406  006A92  0E60               	movlw	low _SumEnergyADCHist_array
 27407  006A94  24F3               	addwf	243,w,c
 27408  006A96  6ED9               	movwf	fsr2l,c
 27409  006A98  0E02               	movlw	high _SumEnergyADCHist_array
 27410  006A9A  20F4               	addwfc	prodh,w,c
 27411  006A9C  6EDA               	movwf	fsr2h,c
 27412  006A9E  CFDE F014          	movff	postinc2,??_sumHIST
 27413  006AA2  CFDD F015          	movff	postdec2,??_sumHIST+1
 27414  006AA6  5014               	movf	??_sumHIST^0,w,c
 27415  006AA8  241C               	addwf	sumHIST@sumH^0,w,c
 27416  006AAA  6E1C               	movwf	sumHIST@sumH^0,c
 27417  006AAC  5015               	movf	(??_sumHIST+1)^0,w,c
 27418  006AAE  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 27419  006AB0  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27420  006AB2  0E00               	movlw	0
 27421  006AB4  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 27422  006AB6  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27423  006AB8  0E00               	movlw	0
 27424  006ABA  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 27425  006ABC  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27426                           
 27427                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 27428  006ABE  5020               	movf	sumHIST@i^0,w,c
 27429  006AC0  0D02               	mullw	2
 27430  006AC2  0E60               	movlw	low _SumEnergyADCHist_array
 27431  006AC4  24F3               	addwf	243,w,c
 27432  006AC6  6ED9               	movwf	fsr2l,c
 27433  006AC8  0E02               	movlw	high _SumEnergyADCHist_array
 27434  006ACA  20F4               	addwfc	prodh,w,c
 27435  006ACC  6EDA               	movwf	fsr2h,c
 27436  006ACE  50DE               	movf	postinc2,w,c
 27437  006AD0  5C18               	subwf	sumHIST@max^0,w,c
 27438  006AD2  50DE               	movf	postinc2,w,c
 27439  006AD4  5819               	subwfb	(sumHIST@max+1)^0,w,c
 27440  006AD6  B0D8               	btfsc	status,0,c
 27441  006AD8  D00C               	goto	l1366
 27442                           
 27443                           ; BSR set to: 0
 27444                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 27445  006ADA  5020               	movf	sumHIST@i^0,w,c
 27446  006ADC  0D02               	mullw	2
 27447  006ADE  0E60               	movlw	low _SumEnergyADCHist_array
 27448  006AE0  24F3               	addwf	243,w,c
 27449  006AE2  6ED9               	movwf	fsr2l,c
 27450  006AE4  0E02               	movlw	high _SumEnergyADCHist_array
 27451  006AE6  20F4               	addwfc	prodh,w,c
 27452  006AE8  6EDA               	movwf	fsr2h,c
 27453  006AEA  CFDE F018          	movff	postinc2,sumHIST@max
 27454  006AEE  CFDD F019          	movff	postdec2,sumHIST@max+1
 27455  006AF2                     l1366:
 27456                           
 27457                           ; BSR set to: 0
 27458                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 27459  006AF2  5020               	movf	sumHIST@i^0,w,c
 27460  006AF4  0D02               	mullw	2
 27461  006AF6  0E60               	movlw	low _SumEnergyADCHist_array
 27462  006AF8  24F3               	addwf	243,w,c
 27463  006AFA  6ED9               	movwf	fsr2l,c
 27464  006AFC  0E02               	movlw	high _SumEnergyADCHist_array
 27465  006AFE  20F4               	addwfc	prodh,w,c
 27466  006B00  6EDA               	movwf	fsr2h,c
 27467  006B02  501A               	movf	sumHIST@min^0,w,c
 27468  006B04  5CDE               	subwf	postinc2,w,c
 27469  006B06  501B               	movf	(sumHIST@min+1)^0,w,c
 27470  006B08  58DE               	subwfb	postinc2,w,c
 27471  006B0A  B0D8               	btfsc	status,0,c
 27472  006B0C  D00C               	goto	l12581
 27473                           
 27474                           ; BSR set to: 0
 27475                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 27476  006B0E  5020               	movf	sumHIST@i^0,w,c
 27477  006B10  0D02               	mullw	2
 27478  006B12  0E60               	movlw	low _SumEnergyADCHist_array
 27479  006B14  24F3               	addwf	243,w,c
 27480  006B16  6ED9               	movwf	fsr2l,c
 27481  006B18  0E02               	movlw	high _SumEnergyADCHist_array
 27482  006B1A  20F4               	addwfc	prodh,w,c
 27483  006B1C  6EDA               	movwf	fsr2h,c
 27484  006B1E  CFDE F01A          	movff	postinc2,sumHIST@min
 27485  006B22  CFDD F01B          	movff	postdec2,sumHIST@min+1
 27486  006B26                     l12581:
 27487                           
 27488                           ; BSR set to: 0
 27489                           ;controlCurrent_MC50.c: 222:     }
 27490  006B26  2A20               	incf	sumHIST@i^0,f,c
 27491                           
 27492                           ; BSR set to: 0
 27493  006B28  0E09               	movlw	9
 27494  006B2A  6420               	cpfsgt	sumHIST@i^0,c
 27495  006B2C  D7B0               	goto	l12575
 27496                           
 27497                           ; BSR set to: 0
 27498                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 27499  006B2E  501A               	movf	sumHIST@min^0,w,c
 27500  006B30  2418               	addwf	sumHIST@max^0,w,c
 27501  006B32  6E14               	movwf	??_sumHIST^0,c
 27502  006B34  501B               	movf	(sumHIST@min+1)^0,w,c
 27503  006B36  2019               	addwfc	(sumHIST@max+1)^0,w,c
 27504  006B38  6E15               	movwf	(??_sumHIST+1)^0,c
 27505  006B3A  6A16               	clrf	(??_sumHIST+2)^0,c
 27506  006B3C  6A17               	clrf	(??_sumHIST+3)^0,c
 27507  006B3E  5014               	movf	??_sumHIST^0,w,c
 27508  006B40  5C1C               	subwf	sumHIST@sumH^0,w,c
 27509  006B42  6E1C               	movwf	sumHIST@sumH^0,c
 27510  006B44  5015               	movf	(??_sumHIST+1)^0,w,c
 27511  006B46  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 27512  006B48  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27513  006B4A  5016               	movf	(??_sumHIST+2)^0,w,c
 27514  006B4C  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 27515  006B4E  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27516  006B50  5017               	movf	(??_sumHIST+3)^0,w,c
 27517  006B52  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 27518  006B54  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27519                           
 27520                           ; BSR set to: 0
 27521                           ;controlCurrent_MC50.c: 226:     return sumH;
 27522  006B56  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 27523  006B5A  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 27524  006B5E  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 27525  006B62  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 27526                           
 27527                           ; BSR set to: 0
 27528  006B66  0012               	return		;funcret
 27529  006B68                     __end_of_sumHIST:
 27530                           	callstack 0
 27531                           
 27532 ;; *************** function _sumEnergyADC *****************
 27533 ;; Defined at:
 27534 ;;		line 59 in file "controlCurrent_MC50.c"
 27535 ;; Parameters:    Size  Location     Type
 27536 ;;		None
 27537 ;; Auto vars:     Size  Location     Type
 27538 ;;  auxValue        2   21[COMRAM] unsigned int 
 27539 ;;  sumE            2   19[COMRAM] unsigned int 
 27540 ;;  i               1   23[COMRAM] unsigned char 
 27541 ;; Return value:  Size  Location     Type
 27542 ;;                  2   15[COMRAM] unsigned int 
 27543 ;; Registers used:
 27544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27545 ;; Tracked objects:
 27546 ;;		On entry : 3E/0
 27547 ;;		On exit  : 3F/1
 27548 ;;		Unchanged: 0/0
 27549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27551 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27553 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27554 ;;Total ram usage:        9 bytes
 27555 ;; Hardware stack levels used: 1
 27556 ;; Hardware stack levels required when called: 4
 27557 ;; This function calls:
 27558 ;;		Nothing
 27559 ;; This function is called by:
 27560 ;;		_refreshCurrent
 27561 ;; This function uses a non-reentrant model
 27562 ;;
 27563                           
 27564                           	psect	text119
 27565  007678                     __ptext119:
 27566                           	callstack 0
 27567  007678                     _sumEnergyADC:
 27568                           	callstack 24
 27569                           
 27570                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 27571                           
 27572                           ; BSR set to: 0
 27573                           ;incstack = 0
 27574  007678  0E00               	movlw	0
 27575  00767A  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 27576  00767C  0E00               	movlw	0
 27577  00767E  6E14               	movwf	sumEnergyADC@sumE^0,c
 27578                           
 27579                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 27580  007680  0E00               	movlw	0
 27581  007682  6E18               	movwf	sumEnergyADC@i^0,c
 27582  007684                     l12547:
 27583                           
 27584                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 27585  007684  5018               	movf	sumEnergyADC@i^0,w,c
 27586  007686  0D02               	mullw	2
 27587  007688  0E00               	movlw	low _ADC_array
 27588  00768A  24F3               	addwf	243,w,c
 27589  00768C  6ED9               	movwf	fsr2l,c
 27590  00768E  0E02               	movlw	high _ADC_array
 27591  007690  20F4               	addwfc	prodh,w,c
 27592  007692  6EDA               	movwf	fsr2h,c
 27593  007694  50DE               	movf	postinc2,w,c
 27594  007696  0101               	movlb	1	; () banked
 27595  007698  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 27596  00769A  50DE               	movf	postinc2,w,c
 27597  00769C  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 27598  00769E  B0D8               	btfsc	status,0,c
 27599  0076A0  D012               	goto	l12551
 27600                           
 27601                           ; BSR set to: 1
 27602                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 27603  0076A2  5018               	movf	sumEnergyADC@i^0,w,c
 27604  0076A4  0D02               	mullw	2
 27605  0076A6  0E00               	movlw	low _ADC_array
 27606  0076A8  24F3               	addwf	243,w,c
 27607  0076AA  6ED9               	movwf	fsr2l,c
 27608  0076AC  0E02               	movlw	high _ADC_array
 27609  0076AE  20F4               	addwfc	prodh,w,c
 27610  0076B0  6EDA               	movwf	fsr2h,c
 27611  0076B2  CFDE F012          	movff	postinc2,??_sumEnergyADC
 27612  0076B6  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 27613  0076BA  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 27614  0076BC  5C12               	subwf	??_sumEnergyADC^0,w,c
 27615  0076BE  6E16               	movwf	sumEnergyADC@auxValue^0,c
 27616  0076C0  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 27617  0076C2  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 27618  0076C4  D011               	goto	L103
 27619  0076C6                     l12551:
 27620                           
 27621                           ; BSR set to: 1
 27622                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 27623  0076C6  5018               	movf	sumEnergyADC@i^0,w,c
 27624  0076C8  0D02               	mullw	2
 27625  0076CA  0E00               	movlw	low _ADC_array
 27626  0076CC  24F3               	addwf	243,w,c
 27627  0076CE  6ED9               	movwf	fsr2l,c
 27628  0076D0  0E02               	movlw	high _ADC_array
 27629  0076D2  20F4               	addwfc	prodh,w,c
 27630  0076D4  6EDA               	movwf	fsr2h,c
 27631  0076D6  CFDE F012          	movff	postinc2,??_sumEnergyADC
 27632  0076DA  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 27633  0076DE  5012               	movf	??_sumEnergyADC^0,w,c
 27634  0076E0  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 27635  0076E2  6E16               	movwf	sumEnergyADC@auxValue^0,c
 27636  0076E4  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 27637  0076E6  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 27638  0076E8                     L103:
 27639  0076E8  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 27640                           
 27641                           ; BSR set to: 1
 27642                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 27643  0076EA  5016               	movf	sumEnergyADC@auxValue^0,w,c
 27644  0076EC  2614               	addwf	sumEnergyADC@sumE^0,f,c
 27645  0076EE  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 27646  0076F0  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 27647                           
 27648                           ; BSR set to: 1
 27649                           ;controlCurrent_MC50.c: 94:     }
 27650  0076F2  2A18               	incf	sumEnergyADC@i^0,f,c
 27651                           
 27652                           ; BSR set to: 1
 27653  0076F4  0E1D               	movlw	29
 27654  0076F6  6418               	cpfsgt	sumEnergyADC@i^0,c
 27655  0076F8  D7C5               	goto	l12547
 27656                           
 27657                           ; BSR set to: 1
 27658                           ;controlCurrent_MC50.c: 96:     return sumE;
 27659  0076FA  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 27660  0076FE  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 27661                           
 27662                           ; BSR set to: 1
 27663  007702  0012               	return		;funcret
 27664  007704                     __end_of_sumEnergyADC:
 27665                           	callstack 0
 27666                           
 27667 ;; *************** function _saveEnergyADCHist *****************
 27668 ;; Defined at:
 27669 ;;		line 182 in file "controlCurrent_MC50.c"
 27670 ;; Parameters:    Size  Location     Type
 27671 ;;  valueToSave     2   15[COMRAM] unsigned int 
 27672 ;; Auto vars:     Size  Location     Type
 27673 ;;		None
 27674 ;; Return value:  Size  Location     Type
 27675 ;;                  1    wreg      void 
 27676 ;; Registers used:
 27677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27678 ;; Tracked objects:
 27679 ;;		On entry : 3F/1
 27680 ;;		On exit  : 3F/0
 27681 ;;		Unchanged: 0/0
 27682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27687 ;;Total ram usage:        2 bytes
 27688 ;; Hardware stack levels used: 1
 27689 ;; Hardware stack levels required when called: 4
 27690 ;; This function calls:
 27691 ;;		Nothing
 27692 ;; This function is called by:
 27693 ;;		_refreshCurrent
 27694 ;; This function uses a non-reentrant model
 27695 ;;
 27696                           
 27697                           	psect	text120
 27698  008CFE                     __ptext120:
 27699                           	callstack 0
 27700  008CFE                     _saveEnergyADCHist:
 27701                           	callstack 24
 27702                           
 27703                           ; BSR set to: 1
 27704                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 27705                           
 27706                           ; BSR set to: 1
 27707                           ;incstack = 0
 27708  008CFE  0E09               	movlw	9
 27709  008D00  0100               	movlb	0	; () banked
 27710  008D02  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 27711  008D04  D002               	goto	l12563
 27712                           
 27713                           ; BSR set to: 0
 27714                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 27715  008D06  0E00               	movlw	0
 27716  008D08  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 27717  008D0A                     l12563:
 27718                           
 27719                           ; BSR set to: 0
 27720                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 27721  008D0A  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 27722  008D0C  0D02               	mullw	2
 27723  008D0E  0E60               	movlw	low _SumEnergyADCHist_array
 27724  008D10  24F3               	addwf	243,w,c
 27725  008D12  6ED9               	movwf	fsr2l,c
 27726  008D14  0E02               	movlw	high _SumEnergyADCHist_array
 27727  008D16  20F4               	addwfc	prodh,w,c
 27728  008D18  6EDA               	movwf	fsr2h,c
 27729  008D1A  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 27730  008D1E  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 27731                           
 27732                           ; BSR set to: 0
 27733                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 27734  008D22  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 27735                           
 27736                           ; BSR set to: 0
 27737  008D24  0012               	return		;funcret
 27738  008D26                     __end_of_saveEnergyADCHist:
 27739                           	callstack 0
 27740                           
 27741 ;; *************** function _refreshADCZeroOffset *****************
 27742 ;; Defined at:
 27743 ;;		line 103 in file "controlCurrent_MC50.c"
 27744 ;; Parameters:    Size  Location     Type
 27745 ;;		None
 27746 ;; Auto vars:     Size  Location     Type
 27747 ;;  media           2   23[COMRAM] unsigned int 
 27748 ;;  i               1   22[COMRAM] unsigned char 
 27749 ;; Return value:  Size  Location     Type
 27750 ;;                  1    wreg      void 
 27751 ;; Registers used:
 27752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27753 ;; Tracked objects:
 27754 ;;		On entry : 3F/0
 27755 ;;		On exit  : 3E/0
 27756 ;;		Unchanged: 0/0
 27757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27759 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27761 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27762 ;;Total ram usage:        3 bytes
 27763 ;; Hardware stack levels used: 1
 27764 ;; Hardware stack levels required when called: 5
 27765 ;; This function calls:
 27766 ;;		___lwdiv
 27767 ;; This function is called by:
 27768 ;;		_ControlCurrent
 27769 ;; This function uses a non-reentrant model
 27770 ;;
 27771                           
 27772                           	psect	text121
 27773  006874                     __ptext121:
 27774                           	callstack 0
 27775  006874                     _refreshADCZeroOffset:
 27776                           	callstack 24
 27777                           
 27778                           ; BSR set to: 0
 27779                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 27780                           
 27781                           ; BSR set to: 0
 27782                           ;incstack = 0
 27783  006874  0E00               	movlw	0
 27784  006876  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27785  006878  0E00               	movlw	0
 27786  00687A  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27787                           
 27788                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 27789  00687C  0101               	movlb	1	; () banked
 27790  00687E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27791  006880  A4D8               	btfss	status,2,c
 27792  006882  0012               	return	
 27793                           
 27794                           ; BSR set to: 1
 27795                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 27796  006884  BFDB               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 27797  006886  D005               	goto	u14620
 27798  006888  51DB               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 27799  00688A  E172               	bnz	l1357
 27800  00688C  05DA               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 27801  00688E  B0D8               	btfsc	status,0,c
 27802  006890  0012               	return	
 27803  006892                     u14620:
 27804                           
 27805                           ; BSR set to: 1
 27806                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 27807  006892  0E00               	movlw	0
 27808  006894  6FDB               	movwf	(_ts_system+63)& (0+255),b	;volatile
 27809  006896  0E14               	movlw	20
 27810  006898  6FDA               	movwf	(_ts_system+62)& (0+255),b	;volatile
 27811                           
 27812                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 27813  00689A  0E00               	movlw	0
 27814  00689C  6E17               	movwf	refreshADCZeroOffset@i^0,c
 27815  00689E                     l14357:
 27816                           
 27817                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 27818  00689E  5017               	movf	refreshADCZeroOffset@i^0,w,c
 27819  0068A0  0D02               	mullw	2
 27820  0068A2  0E00               	movlw	low _ADC_array
 27821  0068A4  24F3               	addwf	243,w,c
 27822  0068A6  6ED9               	movwf	fsr2l,c
 27823  0068A8  0E02               	movlw	high _ADC_array
 27824  0068AA  20F4               	addwfc	prodh,w,c
 27825  0068AC  6EDA               	movwf	fsr2h,c
 27826  0068AE  50DE               	movf	postinc2,w,c
 27827  0068B0  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 27828  0068B2  50DD               	movf	postdec2,w,c
 27829  0068B4  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 27830                           
 27831                           ;controlCurrent_MC50.c: 128:             }
 27832  0068B6  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 27833  0068B8  0E1D               	movlw	29
 27834  0068BA  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 27835  0068BC  D7F0               	goto	l14357
 27836                           
 27837                           ;controlCurrent_MC50.c: 130:             media = media/30;
 27838  0068BE  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 27839  0068C2  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 27840  0068C6  0E00               	movlw	0
 27841  0068C8  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 27842  0068CA  0E1E               	movlw	30
 27843  0068CC  6E12               	movwf	___lwdiv@divisor^0,c
 27844  0068CE  EC64  F042         	call	___lwdiv	;wreg free
 27845  0068D2  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 27846  0068D6  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 27847                           
 27848                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 27849  0068DA  0EEB               	movlw	235
 27850  0068DC  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 27851  0068DE  0E01               	movlw	1
 27852  0068E0  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 27853  0068E2  A0D8               	btfss	status,0,c
 27854  0068E4  D006               	goto	l14371
 27855  0068E6  0E12               	movlw	18
 27856  0068E8  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 27857  0068EA  0E02               	movlw	2
 27858  0068EC  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 27859  0068EE  A0D8               	btfss	status,0,c
 27860  0068F0  D004               	goto	l14373
 27861  0068F2                     l14371:
 27862                           
 27863                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 27864  0068F2  0E01               	movlw	1
 27865  0068F4  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27866  0068F6  0EFE               	movlw	254
 27867  0068F8  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27868  0068FA                     l14373:
 27869                           
 27870                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 27871  0068FA  0E1D               	movlw	29
 27872  0068FC  0100               	movlb	0	; () banked
 27873  0068FE  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 27874  006900  D002               	goto	l14377
 27875                           
 27876                           ; BSR set to: 0
 27877                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 27878  006902  0E00               	movlw	0
 27879  006904  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 27880  006906                     l14377:
 27881                           
 27882                           ; BSR set to: 0
 27883                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 27884  006906  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 27885  006908  0D02               	mullw	2
 27886  00690A  0E96               	movlw	low _ADC_zero_array
 27887  00690C  24F3               	addwf	243,w,c
 27888  00690E  6ED9               	movwf	fsr2l,c
 27889  006910  0E03               	movlw	high _ADC_zero_array
 27890  006912  20F4               	addwfc	prodh,w,c
 27891  006914  6EDA               	movwf	fsr2h,c
 27892  006916  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 27893  00691A  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 27894                           
 27895                           ; BSR set to: 0
 27896                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 27897  00691E  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 27898                           
 27899                           ; BSR set to: 0
 27900                           ;controlCurrent_MC50.c: 150:             media = 0;
 27901  006920  0E00               	movlw	0
 27902  006922  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27903  006924  0E00               	movlw	0
 27904  006926  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27905                           
 27906                           ; BSR set to: 0
 27907                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 27908  006928  0E00               	movlw	0
 27909  00692A  6E17               	movwf	refreshADCZeroOffset@i^0,c
 27910  00692C                     l14389:
 27911                           
 27912                           ; BSR set to: 0
 27913                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 27914  00692C  5017               	movf	refreshADCZeroOffset@i^0,w,c
 27915  00692E  0D02               	mullw	2
 27916  006930  0E96               	movlw	low _ADC_zero_array
 27917  006932  24F3               	addwf	243,w,c
 27918  006934  6ED9               	movwf	fsr2l,c
 27919  006936  0E03               	movlw	high _ADC_zero_array
 27920  006938  20F4               	addwfc	prodh,w,c
 27921  00693A  6EDA               	movwf	fsr2h,c
 27922  00693C  50DE               	movf	postinc2,w,c
 27923  00693E  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 27924  006940  50DD               	movf	postdec2,w,c
 27925  006942  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 27926                           
 27927                           ; BSR set to: 0
 27928                           ;controlCurrent_MC50.c: 159:             }
 27929  006944  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 27930                           
 27931                           ; BSR set to: 0
 27932  006946  0E1D               	movlw	29
 27933  006948  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 27934  00694A  D7F0               	goto	l14389
 27935                           
 27936                           ; BSR set to: 0
 27937                           ;controlCurrent_MC50.c: 160:             media = media/30;
 27938  00694C  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 27939  006950  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 27940  006954  0E00               	movlw	0
 27941  006956  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 27942  006958  0E1E               	movlw	30
 27943  00695A  6E12               	movwf	___lwdiv@divisor^0,c
 27944  00695C  EC64  F042         	call	___lwdiv	;wreg free
 27945  006960  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 27946  006964  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 27947                           
 27948                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 27949  006968  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 27950  00696C  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 27951  006970                     l1357:
 27952  006970  0012               	return		;funcret
 27953  006972                     __end_of_refreshADCZeroOffset:
 27954                           	callstack 0
 27955                           
 27956 ;; *************** function ___lwdiv *****************
 27957 ;; Defined at:
 27958 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 27959 ;; Parameters:    Size  Location     Type
 27960 ;;  dividend        2   15[COMRAM] unsigned int 
 27961 ;;  divisor         2   17[COMRAM] unsigned int 
 27962 ;; Auto vars:     Size  Location     Type
 27963 ;;  quotient        2   19[COMRAM] unsigned int 
 27964 ;;  counter         1   21[COMRAM] unsigned char 
 27965 ;; Return value:  Size  Location     Type
 27966 ;;                  2   15[COMRAM] unsigned int 
 27967 ;; Registers used:
 27968 ;;		wreg, status,2, status,0
 27969 ;; Tracked objects:
 27970 ;;		On entry : 3E/1
 27971 ;;		On exit  : 3E/0
 27972 ;;		Unchanged: 3E/0
 27973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27974 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27975 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27977 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27978 ;;Total ram usage:        7 bytes
 27979 ;; Hardware stack levels used: 1
 27980 ;; Hardware stack levels required when called: 4
 27981 ;; This function calls:
 27982 ;;		Nothing
 27983 ;; This function is called by:
 27984 ;;		_refreshADCZeroOffset
 27985 ;;		_sm_execute_menuConfiguration
 27986 ;; This function uses a non-reentrant model
 27987 ;;
 27988                           
 27989                           	psect	text122
 27990  0084C8                     __ptext122:
 27991                           	callstack 0
 27992  0084C8                     ___lwdiv:
 27993                           	callstack 24
 27994                           
 27995                           ;incstack = 0
 27996  0084C8  0E00               	movlw	0
 27997  0084CA  6E15               	movwf	(___lwdiv@quotient+1)^0,c
 27998  0084CC  0E00               	movlw	0
 27999  0084CE  6E14               	movwf	___lwdiv@quotient^0,c
 28000  0084D0  5012               	movf	___lwdiv@divisor^0,w,c
 28001  0084D2  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 28002  0084D4  B4D8               	btfsc	status,2,c
 28003  0084D6  D01C               	goto	l4129
 28004  0084D8  0E01               	movlw	1
 28005  0084DA  6E16               	movwf	___lwdiv@counter^0,c
 28006  0084DC  D004               	goto	l13837
 28007  0084DE                     l13835:
 28008  0084DE  90D8               	bcf	status,0,c
 28009  0084E0  3612               	rlcf	___lwdiv@divisor^0,f,c
 28010  0084E2  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 28011  0084E4  2A16               	incf	___lwdiv@counter^0,f,c
 28012  0084E6                     l13837:
 28013  0084E6  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 28014  0084E8  D7FA               	goto	l13835
 28015  0084EA                     u13640:
 28016  0084EA  90D8               	bcf	status,0,c
 28017  0084EC  3614               	rlcf	___lwdiv@quotient^0,f,c
 28018  0084EE  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
 28019  0084F0  5012               	movf	___lwdiv@divisor^0,w,c
 28020  0084F2  5C10               	subwf	___lwdiv@dividend^0,w,c
 28021  0084F4  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28022  0084F6  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 28023  0084F8  A0D8               	btfss	status,0,c
 28024  0084FA  D005               	goto	l13847
 28025  0084FC  5012               	movf	___lwdiv@divisor^0,w,c
 28026  0084FE  5E10               	subwf	___lwdiv@dividend^0,f,c
 28027  008500  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28028  008502  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 28029  008504  8014               	bsf	___lwdiv@quotient^0,0,c
 28030  008506                     l13847:
 28031  008506  90D8               	bcf	status,0,c
 28032  008508  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 28033  00850A  3212               	rrcf	___lwdiv@divisor^0,f,c
 28034  00850C  2E16               	decfsz	___lwdiv@counter^0,f,c
 28035  00850E  D7ED               	goto	u13640
 28036  008510                     l4129:
 28037  008510  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
 28038  008514  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 28039  008518  0012               	return		;funcret
 28040  00851A                     __end_of___lwdiv:
 28041                           	callstack 0
 28042                           
 28043 ;; *************** function _getCurrentComparator *****************
 28044 ;; Defined at:
 28045 ;;		line 264 in file "controlCurrent_MC50.c"
 28046 ;; Parameters:    Size  Location     Type
 28047 ;;		None
 28048 ;; Auto vars:     Size  Location     Type
 28049 ;;  x               1   33[COMRAM] unsigned char 
 28050 ;;  tempOffset      2   31[COMRAM] unsigned int 
 28051 ;; Return value:  Size  Location     Type
 28052 ;;                  4   21[COMRAM] unsigned long 
 28053 ;; Registers used:
 28054 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28055 ;; Tracked objects:
 28056 ;;		On entry : 3F/1
 28057 ;;		On exit  : 3F/1
 28058 ;;		Unchanged: 0/0
 28059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28061 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28062 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28063 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28064 ;;Total ram usage:       13 bytes
 28065 ;; Hardware stack levels used: 1
 28066 ;; Hardware stack levels required when called: 5
 28067 ;; This function calls:
 28068 ;;		___wmul
 28069 ;; This function is called by:
 28070 ;;		_ControlCurrent
 28071 ;; This function uses a non-reentrant model
 28072 ;;
 28073                           
 28074                           	psect	text123
 28075  00560E                     __ptext123:
 28076                           	callstack 0
 28077  00560E                     _getCurrentComparator:
 28078                           	callstack 24
 28079                           
 28080                           ; BSR set to: 1
 28081                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 28082                           
 28083                           ; BSR set to: 1
 28084                           
 28085                           ;incstack = 0
 28086  00560E  BFB3               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 28087  005610  D00A               	goto	l14413
 28088  005612  51B3               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 28089  005614  E103               	bnz	u14700
 28090  005616  05B2               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 28091  005618  A0D8               	btfss	status,0,c
 28092  00561A  D005               	goto	l14413
 28093  00561C                     u14700:
 28094                           
 28095                           ; BSR set to: 1
 28096                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 28097  00561C  0E00               	movlw	0
 28098  00561E  6FD7               	movwf	(_ts_system+59)& (0+255),b	;volatile
 28099  005620  0E14               	movlw	20
 28100  005622  6FD6               	movwf	(_ts_system+58)& (0+255),b	;volatile
 28101  005624  D007               	goto	u14710
 28102  005626                     l14413:
 28103                           
 28104                           ; BSR set to: 1
 28105  005626  BFD7               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 28106  005628  D009               	goto	l14417
 28107  00562A  51D7               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 28108  00562C  E103               	bnz	u14710
 28109  00562E  05D6               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 28110  005630  A0D8               	btfss	status,0,c
 28111  005632  D004               	goto	l14417
 28112  005634                     u14710:
 28113                           
 28114                           ; BSR set to: 1
 28115                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 28116  005634  0E04               	movlw	4
 28117  005636  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 28118  005638  0EB0               	movlw	176
 28119  00563A  D003               	goto	L104
 28120  00563C                     l14417:
 28121                           
 28122                           ; BSR set to: 1
 28123                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 28124  00563C  0E00               	movlw	0
 28125  00563E  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 28126  005640  0E00               	movlw	0
 28127  005642                     L104:
 28128  005642  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 28129                           
 28130                           ; BSR set to: 1
 28131                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 28132  005644  517B               	movf	_powerControl_st& (0+255),w,b
 28133  005646  A4D8               	btfss	status,2,c
 28134  005648  D05B               	goto	l14433
 28135                           
 28136                           ; BSR set to: 1
 28137                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 28138  00564A  0E03               	movlw	3
 28139  00564C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28140  00564E  A4D8               	btfss	status,2,c
 28141  005650  D005               	goto	l14423
 28142                           
 28143                           ; BSR set to: 1
 28144                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 28145  005652  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 28146  005656  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 28147  00565A  D004               	goto	L105
 28148  00565C                     l14423:
 28149                           
 28150                           ; BSR set to: 1
 28151                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 28152  00565C  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 28153  005660  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 28154  005664                     L105:
 28155  005664  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 28156  005666  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 28157                           
 28158                           ; BSR set to: 1
 28159                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 28160  005668  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28161  00566A  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28162  00566C  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 28163  00566E  E104               	bnz	u14740
 28164  005670  0E65               	movlw	101
 28165  005672  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28166  005674  A0D8               	btfss	status,0,c
 28167  005676  D009               	goto	u14750
 28168  005678                     u14740:
 28169                           
 28170                           ; BSR set to: 1
 28171  005678  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28172  00567A  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28173  00567C  E106               	bnz	u14750
 28174  00567E  0EC5               	movlw	197
 28175  005680  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28176  005682  0E3B               	movlw	59
 28177  005684  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28178  005686  A0D8               	btfss	status,0,c
 28179  005688  D004               	goto	l1383
 28180  00568A                     u14750:
 28181                           
 28182                           ; BSR set to: 1
 28183                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 28184  00568A  0EC4               	movlw	196
 28185  00568C  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28186  00568E  0E3B               	movlw	59
 28187  005690  D058               	goto	L107
 28188  005692                     l1383:
 28189                           
 28190                           ; BSR set to: 1
 28191                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 28192  005692  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 28193                           
 28194                           ; BSR set to: 1
 28195                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 28196  005696  5022               	movf	getCurrentComparator@x^0,w,c
 28197  005698  0222               	mulwf	getCurrentComparator@x^0,c
 28198  00569A  CFF3 F010          	movff	prodl,___wmul@multiplier
 28199  00569E  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 28200  0056A2  0E00               	movlw	0
 28201  0056A4  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28202  0056A6  0E0A               	movlw	10
 28203  0056A8  6E12               	movwf	___wmul@multiplicand^0,c
 28204  0056AA  ECB9  F046         	call	___wmul	;wreg free
 28205  0056AE  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 28206  0056B2  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 28207  0056B6  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 28208  0056BA  6A11               	clrf	(___wmul@multiplier+1)^0,c
 28209  0056BC  0EFF               	movlw	255
 28210  0056BE  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28211  0056C0  0E38               	movlw	56
 28212  0056C2  6E12               	movwf	___wmul@multiplicand^0,c
 28213  0056C4  ECB9  F046         	call	___wmul	;wreg free
 28214  0056C8  5010               	movf	?___wmul^0,w,c
 28215  0056CA  261A               	addwf	??_getCurrentComparator^0,f,c
 28216  0056CC  5011               	movf	(?___wmul+1)^0,w,c
 28217  0056CE  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 28218  0056D0  0E14               	movlw	20
 28219  0056D2  241A               	addwf	??_getCurrentComparator^0,w,c
 28220  0056D4  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 28221  0056D6  0E05               	movlw	5
 28222  0056D8  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 28223  0056DA  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 28224  0056DC  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 28225  0056DE  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 28226  0056E0  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 28227  0056E2  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 28228  0056E4  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 28229  0056E6  0101               	movlb	1	; () banked
 28230  0056E8  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 28231  0056EA  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 28232  0056EC  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28233  0056EE  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 28234  0056F0  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 28235  0056F2  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28236  0056F4  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 28237  0056F6  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 28238  0056F8  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28239  0056FA  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28240  0056FC  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 28241  0056FE  D046               	goto	L106
 28242  005700                     l14433:
 28243                           
 28244                           ; BSR set to: 1
 28245                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 28246  005700  0E03               	movlw	3
 28247  005702  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28248  005704  A4D8               	btfss	status,2,c
 28249  005706  D009               	goto	l1388
 28250                           
 28251                           ; BSR set to: 1
 28252                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 28253  005708  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 28254  00570C  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 28255  005710  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 28256  005714  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 28257                           
 28258                           ;controlCurrent_MC50.c: 315:         }
 28259  005718  D008               	goto	l14437
 28260  00571A                     l1388:
 28261                           
 28262                           ; BSR set to: 1
 28263                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 28264  00571A  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 28265  00571E  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 28266  005722  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 28267  005726  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 28268  00572A                     l14437:
 28269                           
 28270                           ; BSR set to: 1
 28271                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 28272  00572A  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28273  00572C  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28274  00572E  E10E               	bnz	l14441
 28275  005730  0E89               	movlw	137
 28276  005732  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28277  005734  0E13               	movlw	19
 28278  005736  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28279  005738  B0D8               	btfsc	status,0,c
 28280  00573A  D008               	goto	l14441
 28281                           
 28282                           ; BSR set to: 1
 28283                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 28284  00573C  0E88               	movlw	136
 28285  00573E  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28286  005740  0E13               	movlw	19
 28287  005742                     L107:
 28288  005742  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28289  005744  0E00               	movlw	0
 28290  005746  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28291  005748  0E00               	movlw	0
 28292  00574A  D020               	goto	L106
 28293  00574C                     l14441:
 28294                           
 28295                           ; BSR set to: 1
 28296                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 28297  00574C  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 28298  005750  6A11               	clrf	(___wmul@multiplier+1)^0,c
 28299  005752  0EFE               	movlw	254
 28300  005754  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28301  005756  0E0C               	movlw	12
 28302  005758  6E12               	movwf	___wmul@multiplicand^0,c
 28303  00575A  ECB9  F046         	call	___wmul	;wreg free
 28304  00575E  0E38               	movlw	56
 28305  005760  2410               	addwf	?___wmul^0,w,c
 28306  005762  6E1A               	movwf	??_getCurrentComparator^0,c
 28307  005764  0E18               	movlw	24
 28308  005766  2011               	addwfc	(?___wmul+1)^0,w,c
 28309  005768  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 28310  00576A  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 28311  00576C  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 28312  00576E  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 28313  005770  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 28314  005772  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 28315  005774  501A               	movf	??_getCurrentComparator^0,w,c
 28316  005776  0101               	movlb	1	; () banked
 28317  005778  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28318  00577A  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28319  00577C  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 28320  00577E  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28321  005780  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28322  005782  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 28323  005784  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 28324  005786  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28325  005788  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 28326  00578A  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 28327  00578C                     L106:
 28328  00578C  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 28329                           
 28330                           ; BSR set to: 1
 28331                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 28332  00578E  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 28333  005790  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 28334  005792  6E16               	movwf	?_getCurrentComparator^0,c
 28335  005794  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 28336  005796  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 28337  005798  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 28338  00579A  0E00               	movlw	0
 28339  00579C  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 28340  00579E  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 28341  0057A0  0E00               	movlw	0
 28342  0057A2  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 28343  0057A4  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 28344                           
 28345                           ; BSR set to: 1
 28346  0057A6  0012               	return		;funcret
 28347  0057A8                     __end_of_getCurrentComparator:
 28348                           	callstack 0
 28349                           
 28350 ;; *************** function ___wmul *****************
 28351 ;; Defined at:
 28352 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 28353 ;; Parameters:    Size  Location     Type
 28354 ;;  multiplier      2   15[COMRAM] unsigned int 
 28355 ;;  multiplicand    2   17[COMRAM] unsigned int 
 28356 ;; Auto vars:     Size  Location     Type
 28357 ;;  product         2   19[COMRAM] unsigned int 
 28358 ;; Return value:  Size  Location     Type
 28359 ;;                  2   15[COMRAM] unsigned int 
 28360 ;; Registers used:
 28361 ;;		wreg, status,2, status,0, prodl, prodh
 28362 ;; Tracked objects:
 28363 ;;		On entry : 0/0
 28364 ;;		On exit  : 0/0
 28365 ;;		Unchanged: 0/0
 28366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28370 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28371 ;;Total ram usage:        6 bytes
 28372 ;; Hardware stack levels used: 1
 28373 ;; Hardware stack levels required when called: 4
 28374 ;; This function calls:
 28375 ;;		Nothing
 28376 ;; This function is called by:
 28377 ;;		_getCurrentComparator
 28378 ;;		_getHopCode
 28379 ;; This function uses a non-reentrant model
 28380 ;;
 28381                           
 28382                           	psect	text124
 28383  008D72                     __ptext124:
 28384                           	callstack 0
 28385  008D72                     ___wmul:
 28386                           	callstack 22
 28387                           
 28388                           ; BSR set to: 1
 28389                           ;incstack = 0
 28390  008D72  5010               	movf	___wmul@multiplier^0,w,c
 28391  008D74  0212               	mulwf	___wmul@multiplicand^0,c
 28392  008D76  CFF3 F014          	movff	prodl,___wmul@product
 28393  008D7A  CFF4 F015          	movff	prodh,___wmul@product+1
 28394  008D7E  5010               	movf	___wmul@multiplier^0,w,c
 28395  008D80  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 28396  008D82  50F3               	movf	243,w,c
 28397  008D84  2615               	addwf	(___wmul@product+1)^0,f,c
 28398  008D86  5011               	movf	(___wmul@multiplier+1)^0,w,c
 28399  008D88  0212               	mulwf	___wmul@multiplicand^0,c
 28400  008D8A  50F3               	movf	243,w,c
 28401  008D8C  2615               	addwf	(___wmul@product+1)^0,f,c
 28402  008D8E  C014  F010         	movff	___wmul@product,?___wmul
 28403  008D92  C015  F011         	movff	___wmul@product+1,?___wmul+1
 28404  008D96  0012               	return		;funcret
 28405  008D98                     __end_of___wmul:
 28406                           	callstack 0
 28407                           
 28408 ;; *************** function _GetMotorPower *****************
 28409 ;; Defined at:
 28410 ;;		line 405 in file "outputs_MC50.c"
 28411 ;; Parameters:    Size  Location     Type
 28412 ;;		None
 28413 ;; Auto vars:     Size  Location     Type
 28414 ;;  defineatraso    1   18[COMRAM] unsigned char 
 28415 ;; Return value:  Size  Location     Type
 28416 ;;                  1    wreg      unsigned char 
 28417 ;; Registers used:
 28418 ;;		wreg, status,2, status,0, prodl, prodh
 28419 ;; Tracked objects:
 28420 ;;		On entry : 3E/1
 28421 ;;		On exit  : 3F/1
 28422 ;;		Unchanged: 0/0
 28423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28426 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28427 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28428 ;;Total ram usage:        4 bytes
 28429 ;; Hardware stack levels used: 1
 28430 ;; Hardware stack levels required when called: 4
 28431 ;; This function calls:
 28432 ;;		Nothing
 28433 ;; This function is called by:
 28434 ;;		_ControlCurrent
 28435 ;;		_InitSoftStart
 28436 ;;		_InitSoftStop
 28437 ;; This function uses a non-reentrant model
 28438 ;;
 28439                           
 28440                           	psect	text125
 28441  006EC2                     __ptext125:
 28442                           	callstack 0
 28443  006EC2                     _GetMotorPower:
 28444                           	callstack 22
 28445                           
 28446                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 28447                           
 28448                           ;incstack = 0
 28449  006EC2  0101               	movlb	1	; () banked
 28450  006EC4  057B               	decf	_powerControl_st& (0+255),w,b
 28451  006EC6  A4D8               	btfss	status,2,c
 28452  006EC8  D006               	goto	l19299
 28453                           
 28454                           ; BSR set to: 1
 28455                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 28456  006ECA  0100               	movlb	0	; () banked
 28457  006ECC  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 28458  006ECE  0D06               	mullw	6
 28459  006ED0  CFF3 F190          	movff	prodl,_temppower
 28460                           
 28461                           ;outputs_MC50.c: 416:     }
 28462  006ED4  D043               	goto	l2235
 28463  006ED6                     l19299:
 28464                           
 28465                           ; BSR set to: 1
 28466                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 28467  006ED6  0100               	movlb	0	; () banked
 28468  006ED8  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 28469  006EDA  0D06               	mullw	6
 28470  006EDC  CFF3 F082          	movff	prodl,_fullmotorPower
 28471                           
 28472                           ; BSR set to: 0
 28473                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 28474  006EE0  0101               	movlb	1	; () banked
 28475  006EE2  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28476  006EE4  D01C               	goto	l19309
 28477  006EE6  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28478  006EE8  E103               	bnz	u21990
 28479  006EEA  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28480  006EEC  A0D8               	btfss	status,0,c
 28481  006EEE  D017               	goto	l19309
 28482  006EF0                     u21990:
 28483                           
 28484                           ; BSR set to: 1
 28485                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 28486  006EF0  0100               	movlb	0	; () banked
 28487  006EF2  5182               	movf	_fullmotorPower& (0+255),w,b
 28488  006EF4  6E10               	movwf	??_GetMotorPower^0,c
 28489  006EF6  6A11               	clrf	(??_GetMotorPower+1)^0,c
 28490  006EF8  0101               	movlb	1	; () banked
 28491  006EFA  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 28492  006EFC  5C10               	subwf	??_GetMotorPower^0,w,c
 28493  006EFE  5011               	movf	(??_GetMotorPower+1)^0,w,c
 28494  006F00  0A80               	xorlw	128
 28495  006F02  6E12               	movwf	(??_GetMotorPower+2)^0,c
 28496  006F04  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28497  006F06  0A80               	xorlw	128
 28498  006F08  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 28499  006F0A  B0D8               	btfsc	status,0,c
 28500  006F0C  D002               	goto	l19307
 28501                           
 28502                           ; BSR set to: 1
 28503                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 28504  006F0E  0E01               	movlw	1
 28505  006F10  D004               	goto	L109
 28506  006F12                     l19307:
 28507                           
 28508                           ; BSR set to: 1
 28509                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 28510  006F12  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 28511  006F14  0100               	movlb	0	; () banked
 28512  006F16  5D82               	subwf	_fullmotorPower& (0+255),w,b
 28513  006F18  D017               	goto	L110
 28514  006F1A                     L109:
 28515  006F1A  6F90               	movwf	_temppower& (0+255),b
 28516  006F1C  D01F               	goto	l2235
 28517  006F1E                     l19309:
 28518                           
 28519                           ; BSR set to: 1
 28520  006F1E  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28521  006F20  D005               	goto	u22010
 28522  006F22  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28523  006F24  E113               	bnz	l19319
 28524  006F26  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28525  006F28  B0D8               	btfsc	status,0,c
 28526  006F2A  D010               	goto	l19319
 28527  006F2C                     u22010:
 28528                           
 28529                           ; BSR set to: 1
 28530  006F2C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28531  006F2E  D005               	goto	u22020
 28532  006F30  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28533  006F32  E10C               	bnz	l19319
 28534  006F34  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28535  006F36  B0D8               	btfsc	status,0,c
 28536  006F38  D009               	goto	l19319
 28537  006F3A                     u22020:
 28538                           
 28539                           ; BSR set to: 1
 28540                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 28541  006F3A  C082  F190         	movff	_fullmotorPower,_temppower
 28542                           
 28543                           ; BSR set to: 1
 28544                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 28545  006F3E  0E08               	movlw	8
 28546  006F40  0100               	movlb	0	; () banked
 28547  006F42  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 28548  006F44  D00B               	goto	l2235
 28549                           
 28550                           ; BSR set to: 0
 28551                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 28552  006F46  0E3A               	movlw	58
 28553  006F48                     L110:
 28554  006F48  0101               	movlb	1	; () banked
 28555  006F4A  D7E7               	goto	L109
 28556  006F4C                     l19319:
 28557                           
 28558                           ; BSR set to: 1
 28559  006F4C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28560  006F4E  D006               	goto	l2235
 28561  006F50  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28562  006F52  E102               	bnz	u22040
 28563  006F54  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28564  006F56  B0D8               	btfsc	status,0,c
 28565  006F58                     u22040:
 28566                           
 28567                           ; BSR set to: 1
 28568                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 28569  006F58  C110  F190         	movff	_var_sys+16,_temppower	;volatile
 28570  006F5C                     l2235:
 28571                           
 28572                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 28573  006F5C  0101               	movlb	1	; () banked
 28574  006F5E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28575  006F60  D00E               	goto	l19329
 28576  006F62  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28577  006F64  E103               	bnz	u22050
 28578  006F66  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28579  006F68  A0D8               	btfss	status,0,c
 28580  006F6A  D009               	goto	l19329
 28581  006F6C                     u22050:
 28582                           
 28583                           ; BSR set to: 1
 28584  006F6C  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28585  006F6E  D005               	goto	u22060
 28586  006F70  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28587  006F72  E105               	bnz	l19329
 28588  006F74  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28589  006F76  B0D8               	btfsc	status,0,c
 28590  006F78  D002               	goto	l19329
 28591  006F7A                     u22060:
 28592                           
 28593                           ; BSR set to: 1
 28594                           ;outputs_MC50.c: 452:     defineatraso = 5;
 28595  006F7A  0E05               	movlw	5
 28596  006F7C  D001               	goto	L108
 28597  006F7E                     l19329:
 28598                           
 28599                           ; BSR set to: 1
 28600                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 28601  006F7E  0E17               	movlw	23
 28602  006F80                     L108:
 28603  006F80  6E13               	movwf	GetMotorPower@defineatraso^0,c
 28604                           
 28605                           ; BSR set to: 1
 28606                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 28607  006F82  5190               	movf	_temppower& (0+255),w,b
 28608  006F84  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 28609                           
 28610                           ; BSR set to: 1
 28611  006F86  0012               	return		;funcret
 28612  006F88                     __end_of_GetMotorPower:
 28613                           	callstack 0
 28614                           
 28615 ;; *************** function _ControlCounterMoves *****************
 28616 ;; Defined at:
 28617 ;;		line 293 in file "controlMemory_MC50.c"
 28618 ;; Parameters:    Size  Location     Type
 28619 ;;		None
 28620 ;; Auto vars:     Size  Location     Type
 28621 ;;		None
 28622 ;; Return value:  Size  Location     Type
 28623 ;;                  1    wreg      void 
 28624 ;; Registers used:
 28625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28626 ;; Tracked objects:
 28627 ;;		On entry : 3E/1
 28628 ;;		On exit  : 0/0
 28629 ;;		Unchanged: 0/0
 28630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28635 ;;Total ram usage:        0 bytes
 28636 ;; Hardware stack levels used: 1
 28637 ;; Hardware stack levels required when called: 14
 28638 ;; This function calls:
 28639 ;;		_SaveNVM_VarSystem
 28640 ;; This function is called by:
 28641 ;;		_main
 28642 ;; This function uses a non-reentrant model
 28643 ;;
 28644                           
 28645                           	psect	text126
 28646  0082C0                     __ptext126:
 28647                           	callstack 0
 28648  0082C0                     _ControlCounterMoves:
 28649                           	callstack 16
 28650                           
 28651                           ;controlMemory_MC50.c: 296:     if(ts_system.timeBetweenSaveCounters<=0)
 28652                           
 28653                           ; BSR set to: 1
 28654                           ;incstack = 0
 28655  0082C0  0101               	movlb	1	; () banked
 28656  0082C2  BFC3               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 28657  0082C4  D005               	goto	u27390
 28658  0082C6  51C3               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 28659  0082C8  E127               	bnz	l1486
 28660  0082CA  05C2               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 28661  0082CC  B0D8               	btfsc	status,0,c
 28662  0082CE  0012               	return	
 28663  0082D0                     u27390:
 28664                           
 28665                           ; BSR set to: 1
 28666                           ;controlMemory_MC50.c: 297:     {;controlMemory_MC50.c: 298:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 28667  0082D0  0E17               	movlw	23
 28668  0082D2  6FC3               	movwf	(_ts_system+39)& (0+255),b	;volatile
 28669  0082D4  0E70               	movlw	112
 28670  0082D6  6FC2               	movwf	(_ts_system+38)& (0+255),b	;volatile
 28671                           
 28672                           ; BSR set to: 1
 28673                           ;controlMemory_MC50.c: 300:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 28674  0082D8  0100               	movlb	0	; () banked
 28675  0082DA  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 28676  0082DC  0101               	movlb	1	; () banked
 28677  0082DE  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 28678  0082E0  E110               	bnz	u27400
 28679  0082E2  0100               	movlb	0	; () banked
 28680  0082E4  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 28681  0082E6  0101               	movlb	1	; () banked
 28682  0082E8  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 28683  0082EA  E10B               	bnz	u27400
 28684  0082EC  0100               	movlb	0	; () banked
 28685  0082EE  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 28686  0082F0  0101               	movlb	1	; () banked
 28687  0082F2  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 28688  0082F4  E106               	bnz	u27400
 28689  0082F6  0100               	movlb	0	; () banked
 28690  0082F8  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 28691  0082FA  0101               	movlb	1	; () banked
 28692  0082FC  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 28693  0082FE  B4D8               	btfsc	status,2,c
 28694  008300  0012               	return	
 28695  008302                     u27400:
 28696                           
 28697                           ; BSR set to: 1
 28698                           ;controlMemory_MC50.c: 301:        {;controlMemory_MC50.c: 302:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 28699  008302  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 28700  008306  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 28701  00830A  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 28702  00830E  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 28703                           
 28704                           ; BSR set to: 1
 28705                           ;controlMemory_MC50.c: 303:            SaveNVM_VarSystem(pageMemoryCounters);
 28706  008312  0E02               	movlw	2
 28707  008314  ECB6  F044         	call	_SaveNVM_VarSystem
 28708  008318                     l1486:
 28709  008318  0012               	return		;funcret
 28710  00831A                     __end_of_ControlCounterMoves:
 28711                           	callstack 0
 28712                           
 28713 ;; *************** function _SaveNVM_VarSystem *****************
 28714 ;; Defined at:
 28715 ;;		line 175 in file "controlMemory_MC50.c"
 28716 ;; Parameters:    Size  Location     Type
 28717 ;;  page            1    wreg     unsigned char 
 28718 ;; Auto vars:     Size  Location     Type
 28719 ;;  page            1    0[BANK0 ] unsigned char 
 28720 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 28721 ;;  point           1    3[BANK0 ] PTR unsigned char 
 28722 ;;		 -> var_sys_NVM(64), 
 28723 ;; Return value:  Size  Location     Type
 28724 ;;                  1    wreg      void 
 28725 ;; Registers used:
 28726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28727 ;; Tracked objects:
 28728 ;;		On entry : 0/0
 28729 ;;		On exit  : 0/0
 28730 ;;		Unchanged: 0/0
 28731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28733 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28735 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28736 ;;Total ram usage:        4 bytes
 28737 ;; Hardware stack levels used: 1
 28738 ;; Hardware stack levels required when called: 13
 28739 ;; This function calls:
 28740 ;;		_i2c_writeNBytes
 28741 ;; This function is called by:
 28742 ;;		_loadNVM_VarSystem
 28743 ;;		_ResetDefaultMemory
 28744 ;;		_ControlCounterMoves
 28745 ;;		_checkNVM_VarSystem
 28746 ;;		_sm_execute_ControlLearning
 28747 ;;		_sm_execute_menuConfiguration
 28748 ;;		_setValueToEdit
 28749 ;;		_controlSelectRemote
 28750 ;;		_eusartparser
 28751 ;; This function uses a non-reentrant model
 28752 ;;
 28753                           
 28754                           	psect	text127
 28755  00896C                     __ptext127:
 28756                           	callstack 0
 28757  00896C                     _SaveNVM_VarSystem:
 28758                           	callstack 14
 28759                           
 28760                           ;incstack = 0
 28761                           ;SaveNVM_VarSystem@page stored from wreg
 28762  00896C  0100               	movlb	0	; () banked
 28763  00896E  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 28764                           
 28765                           ;controlMemory_MC50.c: 175: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 176: {;controlMemory_MC50.c: 177:     unsigned int tempAdd=page*16;
 28766  008970  0100               	movlb	0	; () banked
 28767  008972  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 28768  008974  0D10               	mullw	16
 28769  008976  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 28770  00897A  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 28771                           
 28772                           ; BSR set to: 0
 28773                           ;controlMemory_MC50.c: 178:     char* point=(char*)&var_sys_NVM;
 28774  00897E  0E98               	movlw	low _var_sys_NVM
 28775  008980  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 28776                           
 28777                           ; BSR set to: 0
 28778                           ;controlMemory_MC50.c: 179:     point=point+tempAdd;
 28779  008982  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 28780  008984  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 28781  008986  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 28782                           
 28783                           ; BSR set to: 0
 28784                           ;controlMemory_MC50.c: 180:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 28785  008988  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 28786  00898C  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 28787  008990  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 28788  008994  0E00               	movlw	0
 28789  008996  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 28790  008998  0E10               	movlw	16
 28791  00899A  6E25               	movwf	i2c_writeNBytes@len^0,c
 28792  00899C  0E50               	movlw	80
 28793  00899E  ECC1  F03E         	call	_i2c_writeNBytes
 28794  0089A2  0012               	return		;funcret
 28795  0089A4                     __end_of_SaveNVM_VarSystem:
 28796                           	callstack 0
 28797                           
 28798 ;; *************** function _i2c_writeNBytes *****************
 28799 ;; Defined at:
 28800 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 28801 ;; Parameters:    Size  Location     Type
 28802 ;;  address         1    wreg     unsigned char 
 28803 ;;  reg             2   33[COMRAM] unsigned short 
 28804 ;;  data            1   35[COMRAM] PTR void 
 28805 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 28806 ;;  len             2   36[COMRAM] unsigned int 
 28807 ;; Auto vars:     Size  Location     Type
 28808 ;;  address         1   56[COMRAM] unsigned char 
 28809 ;;  dat            17   39[COMRAM] unsigned char [17]
 28810 ;; Return value:  Size  Location     Type
 28811 ;;                  1    wreg      void 
 28812 ;; Registers used:
 28813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28814 ;; Tracked objects:
 28815 ;;		On entry : 3F/0
 28816 ;;		On exit  : 0/0
 28817 ;;		Unchanged: 0/0
 28818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28819 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28820 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28822 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28823 ;;Total ram usage:       24 bytes
 28824 ;; Hardware stack levels used: 1
 28825 ;; Hardware stack levels required when called: 12
 28826 ;; This function calls:
 28827 ;;		_I2C1_Close
 28828 ;;		_I2C1_MasterWrite
 28829 ;;		_I2C1_Open
 28830 ;;		_I2C1_SetAddressNackCallback
 28831 ;;		_I2C1_SetBuffer
 28832 ;;		_memcpy
 28833 ;; This function is called by:
 28834 ;;		_saveNewSerial
 28835 ;;		_RemoveSerial
 28836 ;;		_SaveNVM_VarSystem
 28837 ;; This function uses a non-reentrant model
 28838 ;;
 28839                           
 28840                           	psect	text128
 28841  007D82                     __ptext128:
 28842                           	callstack 0
 28843  007D82                     _i2c_writeNBytes:
 28844                           	callstack 14
 28845                           
 28846                           ;incstack = 0
 28847                           ;i2c_writeNBytes@address stored from wreg
 28848  007D82  6E39               	movwf	i2c_writeNBytes@address^0,c
 28849                           
 28850                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 28851  007D84  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 28852                           
 28853                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 28854  007D88  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 28855  007D8A  6E10               	movwf	memcpy@d1^0,c
 28856  007D8C  6A11               	clrf	(memcpy@d1+1)^0,c
 28857  007D8E  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 28858  007D92  6A13               	clrf	(memcpy@s1+1)^0,c
 28859  007D94  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 28860  007D98  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 28861  007D9C  ECB8  F043         	call	_memcpy	;wreg free
 28862  007DA0                     l19353:
 28863  007DA0  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 28864  007DA2  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 28865  007DA4  EC91  F03C         	call	_I2C1_Open
 28866  007DA8  0900               	iorlw	0
 28867  007DAA  B4D8               	btfsc	status,2,c
 28868  007DAC  D7F9               	goto	l19353
 28869                           
 28870                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 28871  007DAE  0E28               	movlw	low i2c_writeNBytes@dat
 28872  007DB0  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 28873  007DB2  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 28874  007DB4  0E01               	movlw	1
 28875  007DB6  2425               	addwf	i2c_writeNBytes@len^0,w,c
 28876  007DB8  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 28877  007DBA  0E00               	movlw	0
 28878  007DBC  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 28879  007DBE  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 28880  007DC0  ECB4  F047         	call	_I2C1_SetBuffer	;wreg free
 28881                           
 28882                           ; BSR set to: 2
 28883                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 28884  007DC4  0E00               	movlw	0
 28885  007DC6  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 28886  007DC8  0E00               	movlw	0
 28887  007DCA  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 28888  007DCC  0E00               	movlw	0
 28889  007DCE  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 28890  007DD0  0E00               	movlw	0
 28891  007DD2  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 28892  007DD4  ECD9  F047         	call	_I2C1_SetAddressNackCallback	;wreg free
 28893                           
 28894                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 28895  007DD8  ECB2  F048         	call	_I2C1_MasterWrite	;wreg free
 28896  007DDC                     l19361:
 28897  007DDC  EC26  F047         	call	_I2C1_Close	;wreg free
 28898  007DE0  06E8               	decf	wreg,f,c
 28899  007DE2  B4D8               	btfsc	status,2,c
 28900  007DE4  D7FB               	goto	l19361
 28901                           
 28902                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 28903  007DE6  0ED0               	movlw	208
 28904  007DE8  6E27               	movwf	??_i2c_writeNBytes^0,c
 28905  007DEA  0ECA               	movlw	202
 28906  007DEC                     u28757:
 28907  007DEC  2EE8               	decfsz	wreg,f,c
 28908  007DEE  D7FE               	bra	u28757
 28909  007DF0  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 28910  007DF2  D7FC               	bra	u28757
 28911  007DF4  0012               	return		;funcret
 28912  007DF6                     __end_of_i2c_writeNBytes:
 28913                           	callstack 0
 28914                           
 28915 ;; *************** function _memcpy *****************
 28916 ;; Defined at:
 28917 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 28918 ;; Parameters:    Size  Location     Type
 28919 ;;  d1              2   15[COMRAM] PTR void 
 28920 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28921 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28922 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 28923 ;;		 -> i2c_writeNBytes@dat(17), 
 28924 ;;  s1              2   17[COMRAM] PTR const void 
 28925 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28926 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28927 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 28928 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 28929 ;;  n               2   19[COMRAM] unsigned int 
 28930 ;; Auto vars:     Size  Location     Type
 28931 ;;  s               2   24[COMRAM] PTR const unsigned char 
 28932 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28933 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28934 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 28935 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 28936 ;;  d               2   22[COMRAM] PTR unsigned char 
 28937 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28938 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28939 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 28940 ;;		 -> i2c_writeNBytes@dat(17), 
 28941 ;;  tmp             1   21[COMRAM] unsigned char 
 28942 ;; Return value:  Size  Location     Type
 28943 ;;                  2   15[COMRAM] PTR void 
 28944 ;; Registers used:
 28945 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28946 ;; Tracked objects:
 28947 ;;		On entry : 0/0
 28948 ;;		On exit  : 0/0
 28949 ;;		Unchanged: 0/0
 28950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28951 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28952 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28954 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28955 ;;Total ram usage:       11 bytes
 28956 ;; Hardware stack levels used: 1
 28957 ;; Hardware stack levels required when called: 4
 28958 ;; This function calls:
 28959 ;;		Nothing
 28960 ;; This function is called by:
 28961 ;;		_i2c_writeNBytes
 28962 ;;		_getSerialCmd
 28963 ;;		_NormalKeyGen
 28964 ;;		_Decrypt
 28965 ;;		_keeloqDecryptPacket
 28966 ;;		_DecryptPacket_12BIT
 28967 ;; This function uses a non-reentrant model
 28968 ;;
 28969                           
 28970                           	psect	text129
 28971  008770                     __ptext129:
 28972                           	callstack 0
 28973  008770                     _memcpy:
 28974                           	callstack 21
 28975                           
 28976                           ;incstack = 0
 28977  008770  C012  F019         	movff	memcpy@s1,memcpy@s
 28978  008774  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 28979  008778  C010  F017         	movff	memcpy@d1,memcpy@d
 28980  00877C  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 28981  008780  D010               	goto	l19293
 28982  008782                     l19285:
 28983  008782  C019  FFD9         	movff	memcpy@s,fsr2l
 28984  008786  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 28985  00878A  50DF               	movf	indf2,w,c
 28986  00878C  6E16               	movwf	memcpy@tmp^0,c
 28987  00878E  4A19               	infsnz	memcpy@s^0,f,c
 28988  008790  2A1A               	incf	(memcpy@s+1)^0,f,c
 28989  008792  C017  FFD9         	movff	memcpy@d,fsr2l
 28990  008796  C018  FFDA         	movff	memcpy@d+1,fsr2h
 28991  00879A  C016  FFDF         	movff	memcpy@tmp,indf2
 28992  00879E  4A17               	infsnz	memcpy@d^0,f,c
 28993  0087A0  2A18               	incf	(memcpy@d+1)^0,f,c
 28994  0087A2                     l19293:
 28995  0087A2  0614               	decf	memcpy@n^0,f,c
 28996  0087A4  A0D8               	btfss	status,0,c
 28997  0087A6  0615               	decf	(memcpy@n+1)^0,f,c
 28998  0087A8  2814               	incf	memcpy@n^0,w,c
 28999  0087AA  E1EB               	bnz	l19285
 29000  0087AC  2815               	incf	(memcpy@n+1)^0,w,c
 29001  0087AE  B4D8               	btfsc	status,2,c
 29002  0087B0  0012               	return	
 29003  0087B2  D7E7               	goto	l19285
 29004  0087B4                     __end_of_memcpy:
 29005                           	callstack 0
 29006                           
 29007 ;; *************** function _I2C1_SetAddressNackCallback *****************
 29008 ;; Defined at:
 29009 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 29010 ;; Parameters:    Size  Location     Type
 29011 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 29012 ;;		 -> Absolute function(1), 
 29013 ;;  ptr             2   22[COMRAM] PTR void 
 29014 ;;		 -> NULL(0), 
 29015 ;; Auto vars:     Size  Location     Type
 29016 ;;		None
 29017 ;; Return value:  Size  Location     Type
 29018 ;;                  1    wreg      void 
 29019 ;; Registers used:
 29020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29021 ;; Tracked objects:
 29022 ;;		On entry : 3F/2
 29023 ;;		On exit  : 0/0
 29024 ;;		Unchanged: 0/0
 29025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29026 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29029 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29030 ;;Total ram usage:        4 bytes
 29031 ;; Hardware stack levels used: 1
 29032 ;; Hardware stack levels required when called: 5
 29033 ;; This function calls:
 29034 ;;		_I2C1_SetCallback
 29035 ;; This function is called by:
 29036 ;;		_i2c_writeNBytes
 29037 ;;		_i2c_readDataBlock
 29038 ;;		_I2C1_Read1ByteRegister
 29039 ;; This function uses a non-reentrant model
 29040 ;;
 29041                           
 29042                           	psect	text130
 29043  008FB2                     __ptext130:
 29044                           	callstack 0
 29045  008FB2                     _I2C1_SetAddressNackCallback:
 29046                           	callstack 20
 29047                           
 29048                           ; BSR set to: 2
 29049                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 29050                           
 29051                           ;incstack = 0
 29052  008FB2  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 29053  008FB6  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 29054  008FBA  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 29055  008FBE  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 29056  008FC2  0E02               	movlw	2
 29057  008FC4  ECA2  F03F         	call	_I2C1_SetCallback
 29058  008FC8  0012               	return		;funcret
 29059  008FCA                     __end_of_I2C1_SetAddressNackCallback:
 29060                           	callstack 0
 29061                           
 29062 ;; *************** function _I2C1_Open *****************
 29063 ;; Defined at:
 29064 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 29065 ;; Parameters:    Size  Location     Type
 29066 ;;  address         1    wreg     unsigned char 
 29067 ;; Auto vars:     Size  Location     Type
 29068 ;;  address         1   15[COMRAM] unsigned char 
 29069 ;;  returnValue     1   16[COMRAM] enum E355
 29070 ;; Return value:  Size  Location     Type
 29071 ;;                  1    wreg      enum E355
 29072 ;; Registers used:
 29073 ;;		wreg, status,2, status,0, cstack
 29074 ;; Tracked objects:
 29075 ;;		On entry : 0/1
 29076 ;;		On exit  : 33/2
 29077 ;;		Unchanged: 0/0
 29078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29080 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29083 ;;Total ram usage:        2 bytes
 29084 ;; Hardware stack levels used: 1
 29085 ;; Hardware stack levels required when called: 5
 29086 ;; This function calls:
 29087 ;;		_I2C1_MasterClearIrq
 29088 ;;		_I2C1_MasterOpen
 29089 ;; This function is called by:
 29090 ;;		_i2c_writeNBytes
 29091 ;;		_i2c_readDataBlock
 29092 ;;		_I2C1_Read1ByteRegister
 29093 ;; This function uses a non-reentrant model
 29094 ;;
 29095                           
 29096                           	psect	text131
 29097  007922                     __ptext131:
 29098                           	callstack 0
 29099  007922                     _I2C1_Open:
 29100                           	callstack 20
 29101                           
 29102                           ;incstack = 0
 29103                           ;I2C1_Open@address stored from wreg
 29104  007922  6E10               	movwf	I2C1_Open@address^0,c
 29105                           
 29106                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 29107  007924  0E01               	movlw	1
 29108  007926  6E11               	movwf	I2C1_Open@returnValue^0,c
 29109                           
 29110                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 29111  007928  0102               	movlb	2	; () banked
 29112  00792A  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 29113  00792C  D03A               	goto	l19259
 29114                           
 29115                           ; BSR set to: 2
 29116                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 29117  00792E  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 29118                           
 29119                           ; BSR set to: 2
 29120                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 29121  007932  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 29122                           
 29123                           ; BSR set to: 2
 29124                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 29125  007934  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 29126                           
 29127                           ; BSR set to: 2
 29128                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 29129  007936  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 29130                           
 29131                           ; BSR set to: 2
 29132                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 29133  007938  0E0E               	movlw	14
 29134  00793A  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29135                           
 29136                           ; BSR set to: 2
 29137                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 29138  00793C  0E01               	movlw	1
 29139  00793E  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 29140  007940  0EF4               	movlw	244
 29141  007942  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 29142                           
 29143                           ; BSR set to: 2
 29144                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 29145  007944  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 29146                           
 29147                           ; BSR set to: 2
 29148                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 29149  007946  0EFC               	movlw	low _I2C1_CallbackReturnStop
 29150  007948  6F3C               	movwf	_I2C1_Status& (0+255),b
 29151  00794A  0E91               	movlw	high _I2C1_CallbackReturnStop
 29152  00794C  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 29153                           
 29154                           ; BSR set to: 2
 29155                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 29156  00794E  0E00               	movlw	0
 29157  007950  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 29158  007952  0E00               	movlw	0
 29159  007954  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 29160                           
 29161                           ; BSR set to: 2
 29162                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 29163  007956  0EFC               	movlw	low _I2C1_CallbackReturnStop
 29164  007958  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 29165  00795A  0E91               	movlw	high _I2C1_CallbackReturnStop
 29166  00795C  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 29167                           
 29168                           ; BSR set to: 2
 29169                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 29170  00795E  0E00               	movlw	0
 29171  007960  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 29172  007962  0E00               	movlw	0
 29173  007964  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 29174                           
 29175                           ; BSR set to: 2
 29176                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 29177  007966  0EFC               	movlw	low _I2C1_CallbackReturnStop
 29178  007968  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 29179  00796A  0E91               	movlw	high _I2C1_CallbackReturnStop
 29180  00796C  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 29181                           
 29182                           ; BSR set to: 2
 29183                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 29184  00796E  0E00               	movlw	0
 29185  007970  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 29186  007972  0E00               	movlw	0
 29187  007974  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 29188                           
 29189                           ; BSR set to: 2
 29190                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 29191  007976  0EFC               	movlw	low _I2C1_CallbackReturnStop
 29192  007978  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 29193  00797A  0E91               	movlw	high _I2C1_CallbackReturnStop
 29194  00797C  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 29195                           
 29196                           ; BSR set to: 2
 29197                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 29198  00797E  0E00               	movlw	0
 29199  007980  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 29200  007982  0E00               	movlw	0
 29201  007984  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 29202                           
 29203                           ; BSR set to: 2
 29204                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 29205  007986  0EF8               	movlw	low _I2C1_CallbackReturnReset
 29206  007988  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 29207  00798A  0E91               	movlw	high _I2C1_CallbackReturnReset
 29208  00798C  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 29209                           
 29210                           ; BSR set to: 2
 29211                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 29212  00798E  0E00               	movlw	0
 29213  007990  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 29214  007992  0E00               	movlw	0
 29215  007994  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 29216                           
 29217                           ; BSR set to: 2
 29218                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 29219  007996  ECE9  F048         	call	_I2C1_MasterClearIrq	;wreg free
 29220                           
 29221                           ; BSR set to: 14
 29222                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 29223  00799A  ECE5  F047         	call	_I2C1_MasterOpen	;wreg free
 29224                           
 29225                           ; BSR set to: 14
 29226                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 29227  00799E  0E00               	movlw	0
 29228  0079A0  6E11               	movwf	I2C1_Open@returnValue^0,c
 29229  0079A2                     l19259:
 29230                           
 29231                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 29232  0079A2  5011               	movf	I2C1_Open@returnValue^0,w,c
 29233  0079A4  0012               	return		;funcret
 29234  0079A6                     __end_of_I2C1_Open:
 29235                           	callstack 0
 29236                           
 29237 ;; *************** function _I2C1_MasterOpen *****************
 29238 ;; Defined at:
 29239 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 29240 ;; Parameters:    Size  Location     Type
 29241 ;;		None
 29242 ;; Auto vars:     Size  Location     Type
 29243 ;;		None
 29244 ;; Return value:  Size  Location     Type
 29245 ;;                  1    wreg      _Bool 
 29246 ;; Registers used:
 29247 ;;		wreg, status,2
 29248 ;; Tracked objects:
 29249 ;;		On entry : 3F/E
 29250 ;;		On exit  : 3F/E
 29251 ;;		Unchanged: 3F/0
 29252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29257 ;;Total ram usage:        0 bytes
 29258 ;; Hardware stack levels used: 1
 29259 ;; Hardware stack levels required when called: 4
 29260 ;; This function calls:
 29261 ;;		Nothing
 29262 ;; This function is called by:
 29263 ;;		_I2C1_Open
 29264 ;; This function uses a non-reentrant model
 29265 ;;
 29266                           
 29267                           	psect	text132
 29268  008FCA                     __ptext132:
 29269                           	callstack 0
 29270  008FCA                     _I2C1_MasterOpen:
 29271                           	callstack 20
 29272                           
 29273                           ; BSR set to: 14
 29274                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 29275                           
 29276                           ;incstack = 0
 29277  008FCA  BA96               	btfsc	150,5,c	;volatile
 29278  008FCC  0012               	return	
 29279                           
 29280                           ; BSR set to: 14
 29281                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 29282  008FCE  0E80               	movlw	128
 29283  008FD0  6E95               	movwf	149,c	;volatile
 29284                           
 29285                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 29286  008FD2  0E08               	movlw	8
 29287  008FD4  6E96               	movwf	150,c	;volatile
 29288                           
 29289                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 29290  008FD6  0E00               	movlw	0
 29291  008FD8  6E97               	movwf	151,c	;volatile
 29292                           
 29293                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 29294  008FDA  0E9F               	movlw	159
 29295  008FDC  6E93               	movwf	147,c	;volatile
 29296                           
 29297                           ; BSR set to: 14
 29298                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 29299  008FDE  8A96               	bsf	150,5,c	;volatile
 29300                           
 29301                           ; BSR set to: 14
 29302  008FE0  0012               	return		;funcret
 29303  008FE2                     __end_of_I2C1_MasterOpen:
 29304                           	callstack 0
 29305                           
 29306 ;; *************** function _I2C1_MasterWrite *****************
 29307 ;; Defined at:
 29308 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 29309 ;; Parameters:    Size  Location     Type
 29310 ;;		None
 29311 ;; Auto vars:     Size  Location     Type
 29312 ;;		None
 29313 ;; Return value:  Size  Location     Type
 29314 ;;                  1    wreg      enum E355
 29315 ;; Registers used:
 29316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29317 ;; Tracked objects:
 29318 ;;		On entry : 0/2
 29319 ;;		On exit  : 3F/2
 29320 ;;		Unchanged: 0/0
 29321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29326 ;;Total ram usage:        0 bytes
 29327 ;; Hardware stack levels used: 1
 29328 ;; Hardware stack levels required when called: 11
 29329 ;; This function calls:
 29330 ;;		_I2C1_MasterOperation
 29331 ;; This function is called by:
 29332 ;;		_i2c_writeNBytes
 29333 ;;		_i2c_readDataBlock
 29334 ;;		_I2C1_Read1ByteRegister
 29335 ;; This function uses a non-reentrant model
 29336 ;;
 29337                           
 29338                           	psect	text133
 29339  009164                     __ptext133:
 29340                           	callstack 0
 29341  009164                     _I2C1_MasterWrite:
 29342                           	callstack 14
 29343                           
 29344                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 29345                           
 29346                           ; BSR set to: 14
 29347                           ;incstack = 0
 29348  009164  0E00               	movlw	0
 29349  009166  EC8F  F045         	call	_I2C1_MasterOperation
 29350                           
 29351                           ; BSR set to: 2
 29352  00916A  0012               	return		;funcret
 29353  00916C                     __end_of_I2C1_MasterWrite:
 29354                           	callstack 0
 29355                           
 29356 ;; *************** function _I2C1_MasterOperation *****************
 29357 ;; Defined at:
 29358 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 29359 ;; Parameters:    Size  Location     Type
 29360 ;;  read            1    wreg     _Bool 
 29361 ;; Auto vars:     Size  Location     Type
 29362 ;;  read            1   31[COMRAM] _Bool 
 29363 ;;  returnValue     1   32[COMRAM] enum E355
 29364 ;; Return value:  Size  Location     Type
 29365 ;;                  1    wreg      enum E355
 29366 ;; Registers used:
 29367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29368 ;; Tracked objects:
 29369 ;;		On entry : 0/2
 29370 ;;		On exit  : 3F/2
 29371 ;;		Unchanged: 0/0
 29372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29374 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29376 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29377 ;;Total ram usage:        2 bytes
 29378 ;; Hardware stack levels used: 1
 29379 ;; Hardware stack levels required when called: 10
 29380 ;; This function calls:
 29381 ;;		_I2C1_MasterStart
 29382 ;;		_I2C1_Poller
 29383 ;; This function is called by:
 29384 ;;		_I2C1_MasterWrite
 29385 ;; This function uses a non-reentrant model
 29386 ;;
 29387                           
 29388                           	psect	text134
 29389  008B1E                     __ptext134:
 29390                           	callstack 0
 29391  008B1E                     _I2C1_MasterOperation:
 29392                           	callstack 14
 29393                           
 29394                           ; BSR set to: 2
 29395                           ;incstack = 0
 29396                           ;I2C1_MasterOperation@read stored from wreg
 29397  008B1E  6E20               	movwf	I2C1_MasterOperation@read^0,c
 29398                           
 29399                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 29400  008B20  0E01               	movlw	1
 29401  008B22  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 29402                           
 29403                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 29404  008B24  0102               	movlb	2	; () banked
 29405  008B26  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 29406  008B28  D00E               	goto	l19211
 29407                           
 29408                           ; BSR set to: 2
 29409                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 29410  008B2A  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 29411                           
 29412                           ; BSR set to: 2
 29413                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 29414  008B2C  0E00               	movlw	0
 29415  008B2E  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 29416                           
 29417                           ; BSR set to: 2
 29418                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 29419  008B30  5020               	movf	I2C1_MasterOperation@read^0,w,c
 29420  008B32  B4D8               	btfsc	status,2,c
 29421  008B34  D002               	goto	l19205
 29422                           
 29423                           ; BSR set to: 2
 29424                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 29425  008B36  0E01               	movlw	1
 29426  008B38  D001               	goto	L111
 29427  008B3A                     l19205:
 29428                           
 29429                           ; BSR set to: 2
 29430                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 29431  008B3A  0E02               	movlw	2
 29432  008B3C                     L111:
 29433  008B3C  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29434                           
 29435                           ; BSR set to: 2
 29436                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 29437  008B3E  EC04  F049         	call	_I2C1_MasterStart	;wreg free
 29438                           
 29439                           ; BSR set to: 2
 29440                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 29441  008B42  EC4D  F048         	call	_I2C1_Poller	;wreg free
 29442  008B46                     l19211:
 29443                           
 29444                           ; BSR set to: 2
 29445                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 29446  008B46  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 29447                           
 29448                           ; BSR set to: 2
 29449  008B48  0012               	return		;funcret
 29450  008B4A                     __end_of_I2C1_MasterOperation:
 29451                           	callstack 0
 29452                           
 29453 ;; *************** function _I2C1_Poller *****************
 29454 ;; Defined at:
 29455 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 29456 ;; Parameters:    Size  Location     Type
 29457 ;;		None
 29458 ;; Auto vars:     Size  Location     Type
 29459 ;;		None
 29460 ;; Return value:  Size  Location     Type
 29461 ;;                  1    wreg      void 
 29462 ;; Registers used:
 29463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29464 ;; Tracked objects:
 29465 ;;		On entry : 3F/2
 29466 ;;		On exit  : 3F/2
 29467 ;;		Unchanged: 0/0
 29468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29473 ;;Total ram usage:        0 bytes
 29474 ;; Hardware stack levels used: 1
 29475 ;; Hardware stack levels required when called: 9
 29476 ;; This function calls:
 29477 ;;		_I2C1_MasterFsm
 29478 ;;		_I2C1_MasterWaitForEvent
 29479 ;; This function is called by:
 29480 ;;		_I2C1_MasterOperation
 29481 ;; This function uses a non-reentrant model
 29482 ;;
 29483                           
 29484                           	psect	text135
 29485  00909A                     __ptext135:
 29486                           	callstack 0
 29487  00909A                     _I2C1_Poller:
 29488                           	callstack 14
 29489                           
 29490                           ; BSR set to: 2
 29491                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 29492                           
 29493                           ; BSR set to: 2
 29494                           ;incstack = 0
 29495  00909A  D004               	goto	l19179
 29496  00909C                     l19175:
 29497                           
 29498                           ; BSR set to: 2
 29499                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 29500  00909C  ECB6  F048         	call	_I2C1_MasterWaitForEvent	;wreg free
 29501                           
 29502                           ; BSR set to: 14
 29503                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 29504  0090A0  EC3A  F042         	call	_I2C1_MasterFsm	;wreg free
 29505  0090A4                     l19179:
 29506                           
 29507                           ; BSR set to: 2
 29508                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 29509  0090A4  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 29510  0090A6  0012               	return	
 29511  0090A8  D7F9               	goto	l19175
 29512  0090AA                     __end_of_I2C1_Poller:
 29513                           	callstack 0
 29514                           
 29515 ;; *************** function _I2C1_MasterWaitForEvent *****************
 29516 ;; Defined at:
 29517 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 29518 ;; Parameters:    Size  Location     Type
 29519 ;;		None
 29520 ;; Auto vars:     Size  Location     Type
 29521 ;;		None
 29522 ;; Return value:  Size  Location     Type
 29523 ;;                  1    wreg      void 
 29524 ;; Registers used:
 29525 ;;		None
 29526 ;; Tracked objects:
 29527 ;;		On entry : 3F/2
 29528 ;;		On exit  : 3F/E
 29529 ;;		Unchanged: 0/0
 29530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29535 ;;Total ram usage:        0 bytes
 29536 ;; Hardware stack levels used: 1
 29537 ;; Hardware stack levels required when called: 4
 29538 ;; This function calls:
 29539 ;;		Nothing
 29540 ;; This function is called by:
 29541 ;;		_I2C1_Poller
 29542 ;; This function uses a non-reentrant model
 29543 ;;
 29544                           
 29545                           	psect	text136
 29546  00916C                     __ptext136:
 29547                           	callstack 0
 29548  00916C                     _I2C1_MasterWaitForEvent:
 29549                           	callstack 18
 29550                           
 29551                           ; BSR set to: 2
 29552                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 29553                           
 29554                           ; BSR set to: 2
 29555                           ;incstack = 0
 29556                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 29557  00916C  010E               	movlb	14	; () banked
 29558  00916E  B1CD               	btfsc	205,0,b	;volatile
 29559  009170  0012               	return	
 29560  009172  D7FC               	goto	__ptext136
 29561  009174                     __end_of_I2C1_MasterWaitForEvent:
 29562                           	callstack 0
 29563                           
 29564 ;; *************** function _I2C1_MasterFsm *****************
 29565 ;; Defined at:
 29566 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 29567 ;; Parameters:    Size  Location     Type
 29568 ;;		None
 29569 ;; Auto vars:     Size  Location     Type
 29570 ;;		None
 29571 ;; Return value:  Size  Location     Type
 29572 ;;                  1    wreg      void 
 29573 ;; Registers used:
 29574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29575 ;; Tracked objects:
 29576 ;;		On entry : 3F/E
 29577 ;;		On exit  : 3F/2
 29578 ;;		Unchanged: 0/0
 29579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29582 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29583 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29584 ;;Total ram usage:        3 bytes
 29585 ;; Hardware stack levels used: 1
 29586 ;; Hardware stack levels required when called: 8
 29587 ;; This function calls:
 29588 ;;		_I2C1_DO_ADDRESS_NACK
 29589 ;;		_I2C1_DO_IDLE
 29590 ;;		_I2C1_DO_RCEN
 29591 ;;		_I2C1_DO_RESET
 29592 ;;		_I2C1_DO_RX
 29593 ;;		_I2C1_DO_RX_ACK
 29594 ;;		_I2C1_DO_RX_NACK_RESTART
 29595 ;;		_I2C1_DO_RX_NACK_STOP
 29596 ;;		_I2C1_DO_SEND_ADR_READ
 29597 ;;		_I2C1_DO_SEND_ADR_WRITE
 29598 ;;		_I2C1_DO_SEND_RESTART
 29599 ;;		_I2C1_DO_SEND_RESTART_READ
 29600 ;;		_I2C1_DO_SEND_RESTART_WRITE
 29601 ;;		_I2C1_DO_SEND_STOP
 29602 ;;		_I2C1_DO_TX
 29603 ;;		_I2C1_DO_TX_EMPTY
 29604 ;;		_I2C1_MasterClearIrq
 29605 ;;		_I2C1_MasterIsNack
 29606 ;; This function is called by:
 29607 ;;		_I2C1_Poller
 29608 ;; This function uses a non-reentrant model
 29609 ;;
 29610                           
 29611                           	psect	text137
 29612  008474                     __ptext137:
 29613                           	callstack 0
 29614  008474                     _I2C1_MasterFsm:
 29615                           	callstack 14
 29616                           
 29617                           ; BSR set to: 14
 29618                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 29619                           
 29620                           ; BSR set to: 14
 29621                           ;incstack = 0
 29622  008474  ECE9  F048         	call	_I2C1_MasterClearIrq	;wreg free
 29623                           
 29624                           ; BSR set to: 14
 29625                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 29626  008478  0102               	movlb	2	; () banked
 29627  00847A  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 29628  00847C  D007               	goto	l19169
 29629                           
 29630                           ; BSR set to: 2
 29631  00847E  EC6A  F048         	call	_I2C1_MasterIsNack	;wreg free
 29632  008482  0900               	iorlw	0
 29633  008484  B4D8               	btfsc	status,2,c
 29634  008486  D002               	goto	l19169
 29635                           
 29636                           ; BSR set to: 2
 29637                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 29638  008488  0E0F               	movlw	15
 29639  00848A  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29640  00848C                     l19169:
 29641                           
 29642                           ; BSR set to: 2
 29643                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 29644  00848C  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 29645  00848E  0D02               	mullw	2
 29646  008490  50F3               	movf	243,w,c
 29647  008492  0F01               	addlw	low _i2c1_fsmStateTable
 29648  008494  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 29649  008496  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 29650  00849A                     	if	1	;There is more than 1 active tblptr byte
 29651  00849A  0E0F               	movlw	high __smallconst
 29652  00849C  6EF7               	movwf	tblptrh,c
 29653  00849E                     	endif
 29654  00849E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29655  00849E  6AF8               	clrf	tblptru,c
 29656  0084A0                     	endif
 29657  0084A0                     	if	0	;tblptru may be non-zero
 29658  0084A0                     	endif
 29659  0084A0  0009               	tblrd		*+
 29660  0084A2  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 29661  0084A6  0009               	tblrd		*+
 29662  0084A8  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 29663  0084AC  D801               	call	u21908
 29664  0084AE  D009               	goto	u21909
 29665  0084B0                     u21908:
 29666  0084B0  0005               	push	
 29667  0084B2  6EFA               	movwf	pclath,c
 29668  0084B4  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 29669  0084B6  6EFD               	movwf	tosl,c
 29670  0084B8  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 29671  0084BA  6EFE               	movwf	tosh,c
 29672  0084BC  6AFF               	clrf	tosu,c
 29673  0084BE  50FA               	movf	pclath,w,c
 29674  0084C0  0012               	return		;indir
 29675  0084C2                     u21909:
 29676  0084C2  0102               	movlb	2	; () banked
 29677  0084C4  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29678                           
 29679                           ; BSR set to: 2
 29680  0084C6  0012               	return		;funcret
 29681  0084C8                     __end_of_I2C1_MasterFsm:
 29682                           	callstack 0
 29683                           
 29684 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 29685 ;; Defined at:
 29686 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 29687 ;; Parameters:    Size  Location     Type
 29688 ;;		None
 29689 ;; Auto vars:     Size  Location     Type
 29690 ;;		None
 29691 ;; Return value:  Size  Location     Type
 29692 ;;                  1    wreg      enum E10442
 29693 ;; Registers used:
 29694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 29695 ;; Tracked objects:
 29696 ;;		On entry : 3F/2
 29697 ;;		On exit  : 0/0
 29698 ;;		Unchanged: 0/0
 29699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29702 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29703 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29704 ;;Total ram usage:        2 bytes
 29705 ;; Hardware stack levels used: 1
 29706 ;; Hardware stack levels required when called: 7
 29707 ;; This function calls:
 29708 ;;		Absolute function
 29709 ;;		_I2C1_CallbackReturnReset
 29710 ;;		_I2C1_CallbackReturnStop
 29711 ;;		_I2C1_DO_SEND_RESTART
 29712 ;;		_I2C1_DO_SEND_STOP
 29713 ;;		_rd1RegCompleteHandler
 29714 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 29715 ;;		_rd2RegCompleteHandler
 29716 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 29717 ;;		_rdBlkRegCompleteHandler
 29718 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 29719 ;;		_wr1RegCompleteHandler
 29720 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 29721 ;;		_wr2RegCompleteHandler
 29722 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 29723 ;; This function is called by:
 29724 ;;		_I2C1_MasterFsm
 29725 ;; This function uses a non-reentrant model
 29726 ;;
 29727                           
 29728                           	psect	text138
 29729  0085BA                     __ptext138:
 29730                           	callstack 0
 29731  0085BA                     _I2C1_DO_ADDRESS_NACK:
 29732                           	callstack 14
 29733                           
 29734                           ; BSR set to: 2
 29735                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 29736                           
 29737                           ; BSR set to: 2
 29738                           ;incstack = 0
 29739  0085BA  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 29740                           
 29741                           ; BSR set to: 2
 29742                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 29743  0085BC  0E02               	movlw	2
 29744  0085BE  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 29745                           
 29746                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 29747  0085C0  D006               	goto	l19153
 29748  0085C2                     l19143:
 29749                           
 29750                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 29751  0085C2  ECCA  F048         	call	_I2C1_DO_SEND_RESTART	;wreg free
 29752  0085C6  0012               	return	
 29753  0085C8                     l19147:
 29754                           
 29755                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 29756  0085C8  ECC6  F048         	call	_I2C1_DO_SEND_STOP	;wreg free
 29757  0085CC  0012               	return	
 29758  0085CE                     l19153:
 29759                           
 29760                           ; BSR set to: 2
 29761  0085CE  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 29762  0085D2  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 29763  0085D6  D801               	call	u21868
 29764  0085D8  D009               	goto	u21869
 29765  0085DA                     u21868:
 29766  0085DA  0005               	push	
 29767  0085DC  6EFA               	movwf	pclath,c
 29768  0085DE  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 29769  0085E0  6EFD               	movwf	tosl,c
 29770  0085E2  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 29771  0085E4  6EFE               	movwf	tosh,c
 29772  0085E6  6AFF               	clrf	tosu,c
 29773  0085E8  50FA               	movf	pclath,w,c
 29774  0085EA  0012               	return		;indir
 29775  0085EC                     u21869:
 29776  0085EC  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 29777  0085EE  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 29778                           
 29779                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29780                           ; Switch size 1, requested type "simple"
 29781                           ; Number of cases is 1, Range of values is 0 to 0
 29782                           ; switch strategies available:
 29783                           ; Name         Instructions Cycles
 29784                           ; simple_byte            4     3 (average)
 29785                           ;	Chosen strategy is simple_byte
 29786  0085F0  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 29787  0085F2  0A00               	xorlw	0	; case 0
 29788  0085F4  A4D8               	btfss	status,2,c
 29789  0085F6  D7E8               	goto	l19147
 29790                           
 29791                           ; Switch size 1, requested type "simple"
 29792                           ; Number of cases is 2, Range of values is 2 to 3
 29793                           ; switch strategies available:
 29794                           ; Name         Instructions Cycles
 29795                           ; simple_byte            7     4 (average)
 29796                           ;	Chosen strategy is simple_byte
 29797  0085F8  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 29798  0085FA  0A02               	xorlw	2	; case 2
 29799  0085FC  B4D8               	btfsc	status,2,c
 29800  0085FE  D7E1               	goto	l19143
 29801  008600  0A01               	xorlw	1	; case 3
 29802  008602  B4D8               	btfsc	status,2,c
 29803  008604  D7DE               	goto	l19143
 29804  008606  D7E0               	goto	l19147
 29805  008608                     __end_of_I2C1_DO_ADDRESS_NACK:
 29806                           	callstack 0
 29807                           
 29808 ;; *************** function _I2C1_DO_RESET *****************
 29809 ;; Defined at:
 29810 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 29811 ;; Parameters:    Size  Location     Type
 29812 ;;		None
 29813 ;; Auto vars:     Size  Location     Type
 29814 ;;		None
 29815 ;; Return value:  Size  Location     Type
 29816 ;;                  1    wreg      enum E10442
 29817 ;; Registers used:
 29818 ;;		wreg, status,2
 29819 ;; Tracked objects:
 29820 ;;		On entry : 3F/2
 29821 ;;		On exit  : 3F/2
 29822 ;;		Unchanged: 0/0
 29823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29828 ;;Total ram usage:        0 bytes
 29829 ;; Hardware stack levels used: 1
 29830 ;; Hardware stack levels required when called: 4
 29831 ;; This function calls:
 29832 ;;		Nothing
 29833 ;; This function is called by:
 29834 ;;		_I2C1_MasterFsm
 29835 ;; This function uses a non-reentrant model
 29836 ;;
 29837                           
 29838                           	psect	text139
 29839  009146                     __ptext139:
 29840                           	callstack 0
 29841  009146                     _I2C1_DO_RESET:
 29842                           	callstack 17
 29843                           
 29844                           ; BSR set to: 2
 29845                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 29846                           
 29847                           ;incstack = 0
 29848  009146  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 29849                           
 29850                           ; BSR set to: 2
 29851                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 29852  009148  0E00               	movlw	0
 29853  00914A  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 29854                           
 29855                           ; BSR set to: 2
 29856                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 29857  00914C  0E0E               	movlw	14
 29858                           
 29859                           ; BSR set to: 2
 29860  00914E  0012               	return		;funcret
 29861  009150                     __end_of_I2C1_DO_RESET:
 29862                           	callstack 0
 29863                           
 29864 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 29865 ;; Defined at:
 29866 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 29867 ;; Parameters:    Size  Location     Type
 29868 ;;		None
 29869 ;; Auto vars:     Size  Location     Type
 29870 ;;		None
 29871 ;; Return value:  Size  Location     Type
 29872 ;;                  1    wreg      enum E10442
 29873 ;; Registers used:
 29874 ;;		wreg, cstack
 29875 ;; Tracked objects:
 29876 ;;		On entry : 0/2
 29877 ;;		On exit  : 0/0
 29878 ;;		Unchanged: 0/0
 29879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29884 ;;Total ram usage:        0 bytes
 29885 ;; Hardware stack levels used: 1
 29886 ;; Hardware stack levels required when called: 5
 29887 ;; This function calls:
 29888 ;;		_I2C1_MasterSendNack
 29889 ;; This function is called by:
 29890 ;;		_I2C1_DO_RX
 29891 ;;		_I2C1_MasterFsm
 29892 ;; This function uses a non-reentrant model
 29893 ;;
 29894                           
 29895                           	psect	text140
 29896  009174                     __ptext140:
 29897                           	callstack 0
 29898  009174                     _I2C1_DO_RX_NACK_RESTART:
 29899                           	callstack 16
 29900                           
 29901                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 29902                           
 29903                           ; BSR set to: 2
 29904                           ;incstack = 0
 29905  009174  ECE6  F048         	call	_I2C1_MasterSendNack	;wreg free
 29906                           
 29907                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 29908  009178  0E09               	movlw	9
 29909  00917A  0012               	return		;funcret
 29910  00917C                     __end_of_I2C1_DO_RX_NACK_RESTART:
 29911                           	callstack 0
 29912                           
 29913 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 29914 ;; Defined at:
 29915 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 29916 ;; Parameters:    Size  Location     Type
 29917 ;;		None
 29918 ;; Auto vars:     Size  Location     Type
 29919 ;;		None
 29920 ;; Return value:  Size  Location     Type
 29921 ;;                  1    wreg      enum E10442
 29922 ;; Registers used:
 29923 ;;		wreg, cstack
 29924 ;; Tracked objects:
 29925 ;;		On entry : 0/2
 29926 ;;		On exit  : 0/0
 29927 ;;		Unchanged: 0/0
 29928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29933 ;;Total ram usage:        0 bytes
 29934 ;; Hardware stack levels used: 1
 29935 ;; Hardware stack levels required when called: 5
 29936 ;; This function calls:
 29937 ;;		_I2C1_MasterSendNack
 29938 ;; This function is called by:
 29939 ;;		_I2C1_DO_RX
 29940 ;;		_I2C1_MasterFsm
 29941 ;; This function uses a non-reentrant model
 29942 ;;
 29943                           
 29944                           	psect	text141
 29945  00917C                     __ptext141:
 29946                           	callstack 0
 29947  00917C                     _I2C1_DO_RX_NACK_STOP:
 29948                           	callstack 16
 29949                           
 29950                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 29951                           
 29952                           ;incstack = 0
 29953  00917C  ECE6  F048         	call	_I2C1_MasterSendNack	;wreg free
 29954                           
 29955                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 29956  009180  0E0A               	movlw	10
 29957  009182  0012               	return		;funcret
 29958  009184                     __end_of_I2C1_DO_RX_NACK_STOP:
 29959                           	callstack 0
 29960                           
 29961 ;; *************** function _I2C1_DO_RX_ACK *****************
 29962 ;; Defined at:
 29963 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 29964 ;; Parameters:    Size  Location     Type
 29965 ;;		None
 29966 ;; Auto vars:     Size  Location     Type
 29967 ;;		None
 29968 ;; Return value:  Size  Location     Type
 29969 ;;                  1    wreg      enum E10442
 29970 ;; Registers used:
 29971 ;;		wreg, cstack
 29972 ;; Tracked objects:
 29973 ;;		On entry : 3F/2
 29974 ;;		On exit  : 3F/2
 29975 ;;		Unchanged: 3F/0
 29976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29981 ;;Total ram usage:        0 bytes
 29982 ;; Hardware stack levels used: 1
 29983 ;; Hardware stack levels required when called: 5
 29984 ;; This function calls:
 29985 ;;		_I2C1_MasterSendAck
 29986 ;; This function is called by:
 29987 ;;		_I2C1_MasterFsm
 29988 ;; This function uses a non-reentrant model
 29989 ;;
 29990                           
 29991                           	psect	text142
 29992  009184                     __ptext142:
 29993                           	callstack 0
 29994  009184                     _I2C1_DO_RX_ACK:
 29995                           	callstack 16
 29996                           
 29997                           ; BSR set to: 2
 29998                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 29999                           
 30000                           ;incstack = 0
 30001  009184  ECE3  F048         	call	_I2C1_MasterSendAck	;wreg free
 30002                           
 30003                           ; BSR set to: 2
 30004                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 30005  009188  0E05               	movlw	5
 30006                           
 30007                           ; BSR set to: 2
 30008  00918A  0012               	return		;funcret
 30009  00918C                     __end_of_I2C1_DO_RX_ACK:
 30010                           	callstack 0
 30011                           
 30012 ;; *************** function _I2C1_DO_SEND_STOP *****************
 30013 ;; Defined at:
 30014 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 30015 ;; Parameters:    Size  Location     Type
 30016 ;;		None
 30017 ;; Auto vars:     Size  Location     Type
 30018 ;;		None
 30019 ;; Return value:  Size  Location     Type
 30020 ;;                  1    wreg      enum E10442
 30021 ;; Registers used:
 30022 ;;		wreg, cstack
 30023 ;; Tracked objects:
 30024 ;;		On entry : 0/2
 30025 ;;		On exit  : 0/0
 30026 ;;		Unchanged: 0/0
 30027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30032 ;;Total ram usage:        0 bytes
 30033 ;; Hardware stack levels used: 1
 30034 ;; Hardware stack levels required when called: 5
 30035 ;; This function calls:
 30036 ;;		_I2C1_MasterStop
 30037 ;; This function is called by:
 30038 ;;		_I2C1_DO_TX
 30039 ;;		_I2C1_DO_TX_EMPTY
 30040 ;;		_I2C1_DO_ADDRESS_NACK
 30041 ;;		_I2C1_MasterFsm
 30042 ;; This function uses a non-reentrant model
 30043 ;;
 30044                           
 30045                           	psect	text143
 30046  00918C                     __ptext143:
 30047                           	callstack 0
 30048  00918C                     _I2C1_DO_SEND_STOP:
 30049                           	callstack 15
 30050                           
 30051                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 30052                           
 30053                           ; BSR set to: 2
 30054                           ;incstack = 0
 30055  00918C  EC00  F049         	call	_I2C1_MasterStop	;wreg free
 30056                           
 30057                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 30058  009190  0E00               	movlw	0
 30059  009192  0012               	return		;funcret
 30060  009194                     __end_of_I2C1_DO_SEND_STOP:
 30061                           	callstack 0
 30062                           
 30063 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 30064 ;; Defined at:
 30065 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 30066 ;; Parameters:    Size  Location     Type
 30067 ;;		None
 30068 ;; Auto vars:     Size  Location     Type
 30069 ;;		None
 30070 ;; Return value:  Size  Location     Type
 30071 ;;                  1    wreg      enum E10442
 30072 ;; Registers used:
 30073 ;;		wreg, cstack
 30074 ;; Tracked objects:
 30075 ;;		On entry : 0/2
 30076 ;;		On exit  : 0/0
 30077 ;;		Unchanged: 0/0
 30078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30083 ;;Total ram usage:        0 bytes
 30084 ;; Hardware stack levels used: 1
 30085 ;; Hardware stack levels required when called: 5
 30086 ;; This function calls:
 30087 ;;		_I2C1_MasterEnableRestart
 30088 ;; This function is called by:
 30089 ;;		_I2C1_DO_TX_EMPTY
 30090 ;;		_I2C1_DO_ADDRESS_NACK
 30091 ;;		_I2C1_MasterFsm
 30092 ;; This function uses a non-reentrant model
 30093 ;;
 30094                           
 30095                           	psect	text144
 30096  009194                     __ptext144:
 30097                           	callstack 0
 30098  009194                     _I2C1_DO_SEND_RESTART:
 30099                           	callstack 15
 30100                           
 30101                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 30102                           
 30103                           ;incstack = 0
 30104  009194  EC02  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30105                           
 30106                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 30107  009198  0E01               	movlw	1
 30108  00919A  0012               	return		;funcret
 30109  00919C                     __end_of_I2C1_DO_SEND_RESTART:
 30110                           	callstack 0
 30111                           
 30112 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 30113 ;; Defined at:
 30114 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 30115 ;; Parameters:    Size  Location     Type
 30116 ;;		None
 30117 ;; Auto vars:     Size  Location     Type
 30118 ;;		None
 30119 ;; Return value:  Size  Location     Type
 30120 ;;                  1    wreg      enum E10442
 30121 ;; Registers used:
 30122 ;;		wreg, cstack
 30123 ;; Tracked objects:
 30124 ;;		On entry : 0/2
 30125 ;;		On exit  : 0/0
 30126 ;;		Unchanged: 0/0
 30127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30132 ;;Total ram usage:        0 bytes
 30133 ;; Hardware stack levels used: 1
 30134 ;; Hardware stack levels required when called: 5
 30135 ;; This function calls:
 30136 ;;		_I2C1_MasterEnableRestart
 30137 ;; This function is called by:
 30138 ;;		_I2C1_DO_TX
 30139 ;;		_I2C1_MasterFsm
 30140 ;; This function uses a non-reentrant model
 30141 ;;
 30142                           
 30143                           	psect	text145
 30144  00919C                     __ptext145:
 30145                           	callstack 0
 30146  00919C                     _I2C1_DO_SEND_RESTART_WRITE:
 30147                           	callstack 15
 30148                           
 30149                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 30150                           
 30151                           ;incstack = 0
 30152  00919C  EC02  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30153                           
 30154                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 30155  0091A0  0E02               	movlw	2
 30156  0091A2  0012               	return		;funcret
 30157  0091A4                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 30158                           	callstack 0
 30159                           
 30160 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 30161 ;; Defined at:
 30162 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 30163 ;; Parameters:    Size  Location     Type
 30164 ;;		None
 30165 ;; Auto vars:     Size  Location     Type
 30166 ;;		None
 30167 ;; Return value:  Size  Location     Type
 30168 ;;                  1    wreg      enum E10442
 30169 ;; Registers used:
 30170 ;;		wreg, cstack
 30171 ;; Tracked objects:
 30172 ;;		On entry : 0/2
 30173 ;;		On exit  : 0/0
 30174 ;;		Unchanged: 0/0
 30175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30180 ;;Total ram usage:        0 bytes
 30181 ;; Hardware stack levels used: 1
 30182 ;; Hardware stack levels required when called: 5
 30183 ;; This function calls:
 30184 ;;		_I2C1_MasterEnableRestart
 30185 ;; This function is called by:
 30186 ;;		_I2C1_DO_TX
 30187 ;;		_I2C1_MasterFsm
 30188 ;; This function uses a non-reentrant model
 30189 ;;
 30190                           
 30191                           	psect	text146
 30192  0091A4                     __ptext146:
 30193                           	callstack 0
 30194  0091A4                     _I2C1_DO_SEND_RESTART_READ:
 30195                           	callstack 15
 30196                           
 30197                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 30198                           
 30199                           ;incstack = 0
 30200  0091A4  EC02  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30201                           
 30202                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 30203  0091A8  0E01               	movlw	1
 30204  0091AA  0012               	return		;funcret
 30205  0091AC                     __end_of_I2C1_DO_SEND_RESTART_READ:
 30206                           	callstack 0
 30207                           
 30208 ;; *************** function _I2C1_DO_RCEN *****************
 30209 ;; Defined at:
 30210 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 30211 ;; Parameters:    Size  Location     Type
 30212 ;;		None
 30213 ;; Auto vars:     Size  Location     Type
 30214 ;;		None
 30215 ;; Return value:  Size  Location     Type
 30216 ;;                  1    wreg      enum E10442
 30217 ;; Registers used:
 30218 ;;		wreg, cstack
 30219 ;; Tracked objects:
 30220 ;;		On entry : 3F/2
 30221 ;;		On exit  : 3F/2
 30222 ;;		Unchanged: 0/0
 30223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30228 ;;Total ram usage:        0 bytes
 30229 ;; Hardware stack levels used: 1
 30230 ;; Hardware stack levels required when called: 5
 30231 ;; This function calls:
 30232 ;;		_I2C1_MasterStartRx
 30233 ;; This function is called by:
 30234 ;;		_I2C1_MasterFsm
 30235 ;; This function uses a non-reentrant model
 30236 ;;
 30237                           
 30238                           	psect	text147
 30239  009150                     __ptext147:
 30240                           	callstack 0
 30241  009150                     _I2C1_DO_RCEN:
 30242                           	callstack 16
 30243                           
 30244                           ; BSR set to: 2
 30245                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 30246                           
 30247                           ;incstack = 0
 30248  009150  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30249                           
 30250                           ; BSR set to: 2
 30251                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 30252  009152  ECFA  F048         	call	_I2C1_MasterStartRx	;wreg free
 30253                           
 30254                           ; BSR set to: 2
 30255                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 30256  009156  0E04               	movlw	4
 30257                           
 30258                           ; BSR set to: 2
 30259  009158  0012               	return		;funcret
 30260  00915A                     __end_of_I2C1_DO_RCEN:
 30261                           	callstack 0
 30262                           
 30263 ;; *************** function _I2C1_DO_RX *****************
 30264 ;; Defined at:
 30265 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 30266 ;; Parameters:    Size  Location     Type
 30267 ;;		None
 30268 ;; Auto vars:     Size  Location     Type
 30269 ;;		None
 30270 ;; Return value:  Size  Location     Type
 30271 ;;                  1    wreg      enum E10442
 30272 ;; Registers used:
 30273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30274 ;; Tracked objects:
 30275 ;;		On entry : 3F/2
 30276 ;;		On exit  : 0/0
 30277 ;;		Unchanged: 0/0
 30278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30281 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30283 ;;Total ram usage:        2 bytes
 30284 ;; Hardware stack levels used: 1
 30285 ;; Hardware stack levels required when called: 7
 30286 ;; This function calls:
 30287 ;;		Absolute function
 30288 ;;		_I2C1_CallbackReturnReset
 30289 ;;		_I2C1_CallbackReturnStop
 30290 ;;		_I2C1_DO_RX_NACK_RESTART
 30291 ;;		_I2C1_DO_RX_NACK_STOP
 30292 ;;		_I2C1_MasterGetRxData
 30293 ;;		_I2C1_MasterSendAck
 30294 ;;		_rd1RegCompleteHandler
 30295 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30296 ;;		_rd2RegCompleteHandler
 30297 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30298 ;;		_rdBlkRegCompleteHandler
 30299 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30300 ;;		_wr1RegCompleteHandler
 30301 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30302 ;;		_wr2RegCompleteHandler
 30303 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30304 ;; This function is called by:
 30305 ;;		_I2C1_MasterFsm
 30306 ;; This function uses a non-reentrant model
 30307 ;;
 30308                           
 30309                           	psect	text148
 30310  007BA2                     __ptext148:
 30311                           	callstack 0
 30312  007BA2                     _I2C1_DO_RX:
 30313                           	callstack 14
 30314                           
 30315                           ; BSR set to: 2
 30316                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 30317                           
 30318                           ; BSR set to: 2
 30319                           ;incstack = 0
 30320  007BA2  ECF8  F048         	call	_I2C1_MasterGetRxData	;wreg free
 30321  007BA6  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 30322  007BAA  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 30323  007BAE  6EDF               	movwf	indf2,c
 30324                           
 30325                           ; BSR set to: 2
 30326  007BB0  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 30327  007BB2  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 30328                           
 30329                           ; BSR set to: 2
 30330                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 30331  007BB4  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 30332  007BB6  A0D8               	btfss	status,0,c
 30333  007BB8  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 30334  007BBA  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 30335  007BBC  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 30336  007BBE  B4D8               	btfsc	status,2,c
 30337  007BC0  D004               	goto	l690
 30338                           
 30339                           ; BSR set to: 2
 30340                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 30341  007BC2  ECE3  F048         	call	_I2C1_MasterSendAck	;wreg free
 30342                           
 30343                           ; BSR set to: 2
 30344                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 30345  007BC6  0E05               	movlw	5
 30346  007BC8  0012               	return	
 30347  007BCA                     l690:
 30348                           
 30349                           ; BSR set to: 2
 30350                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 30351  007BCA  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30352                           
 30353                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 30354  007BCC  D006               	goto	l19087
 30355  007BCE                     l19077:
 30356                           
 30357                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 30358  007BCE  ECBA  F048         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 30359  007BD2  0012               	return	
 30360  007BD4                     l19081:
 30361                           
 30362                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 30363  007BD4  ECBE  F048         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 30364  007BD8  0012               	return	
 30365  007BDA                     l19087:
 30366                           
 30367                           ; BSR set to: 2
 30368  007BDA  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 30369  007BDE  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 30370  007BE2  D801               	call	u21848
 30371  007BE4  D009               	goto	u21849
 30372  007BE6                     u21848:
 30373  007BE6  0005               	push	
 30374  007BE8  6EFA               	movwf	pclath,c
 30375  007BEA  513C               	movf	_I2C1_Status& (0+255),w,b
 30376  007BEC  6EFD               	movwf	tosl,c
 30377  007BEE  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 30378  007BF0  6EFE               	movwf	tosh,c
 30379  007BF2  6AFF               	clrf	tosu,c
 30380  007BF4  50FA               	movf	pclath,w,c
 30381  007BF6  0012               	return		;indir
 30382  007BF8                     u21849:
 30383  007BF8  6E1B               	movwf	??_I2C1_DO_RX^0,c
 30384  007BFA  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 30385                           
 30386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30387                           ; Switch size 1, requested type "simple"
 30388                           ; Number of cases is 1, Range of values is 0 to 0
 30389                           ; switch strategies available:
 30390                           ; Name         Instructions Cycles
 30391                           ; simple_byte            4     3 (average)
 30392                           ;	Chosen strategy is simple_byte
 30393  007BFC  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 30394  007BFE  0A00               	xorlw	0	; case 0
 30395  007C00  A4D8               	btfss	status,2,c
 30396  007C02  D7E8               	goto	l19081
 30397                           
 30398                           ; Switch size 1, requested type "simple"
 30399                           ; Number of cases is 4, Range of values is 1 to 4
 30400                           ; switch strategies available:
 30401                           ; Name         Instructions Cycles
 30402                           ; simple_byte           13     7 (average)
 30403                           ;	Chosen strategy is simple_byte
 30404  007C04  501B               	movf	??_I2C1_DO_RX^0,w,c
 30405  007C06  0A01               	xorlw	1	; case 1
 30406  007C08  B4D8               	btfsc	status,2,c
 30407  007C0A  D7E4               	goto	l19081
 30408  007C0C  0A03               	xorlw	3	; case 2
 30409  007C0E  B4D8               	btfsc	status,2,c
 30410  007C10  D7DE               	goto	l19077
 30411  007C12  0A01               	xorlw	1	; case 3
 30412  007C14  B4D8               	btfsc	status,2,c
 30413  007C16  D7DB               	goto	l19077
 30414  007C18  0A07               	xorlw	7	; case 4
 30415  007C1A  D7DC               	goto	l19081
 30416  007C1C                     __end_of_I2C1_DO_RX:
 30417                           	callstack 0
 30418                           
 30419 ;; *************** function _I2C1_DO_TX *****************
 30420 ;; Defined at:
 30421 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 30422 ;; Parameters:    Size  Location     Type
 30423 ;;		None
 30424 ;; Auto vars:     Size  Location     Type
 30425 ;;		None
 30426 ;; Return value:  Size  Location     Type
 30427 ;;                  1    wreg      enum E10442
 30428 ;; Registers used:
 30429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30430 ;; Tracked objects:
 30431 ;;		On entry : 3F/2
 30432 ;;		On exit  : 0/0
 30433 ;;		Unchanged: 0/0
 30434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30437 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30439 ;;Total ram usage:        2 bytes
 30440 ;; Hardware stack levels used: 1
 30441 ;; Hardware stack levels required when called: 7
 30442 ;; This function calls:
 30443 ;;		Absolute function
 30444 ;;		_I2C1_CallbackReturnReset
 30445 ;;		_I2C1_CallbackReturnStop
 30446 ;;		_I2C1_DO_SEND_RESTART_READ
 30447 ;;		_I2C1_DO_SEND_RESTART_WRITE
 30448 ;;		_I2C1_DO_SEND_STOP
 30449 ;;		_I2C1_MasterIsNack
 30450 ;;		_I2C1_MasterSendTxData
 30451 ;;		_rd1RegCompleteHandler
 30452 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30453 ;;		_rd2RegCompleteHandler
 30454 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30455 ;;		_rdBlkRegCompleteHandler
 30456 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30457 ;;		_wr1RegCompleteHandler
 30458 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30459 ;;		_wr2RegCompleteHandler
 30460 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30461 ;; This function is called by:
 30462 ;;		_I2C1_MasterFsm
 30463 ;; This function uses a non-reentrant model
 30464 ;;
 30465                           
 30466                           	psect	text149
 30467  007704                     __ptext149:
 30468                           	callstack 0
 30469  007704                     _I2C1_DO_TX:
 30470                           	callstack 14
 30471                           
 30472                           ; BSR set to: 2
 30473                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 30474                           
 30475                           ;incstack = 0
 30476  007704  EC6A  F048         	call	_I2C1_MasterIsNack	;wreg free
 30477  007708  0900               	iorlw	0
 30478  00770A  A4D8               	btfss	status,2,c
 30479  00770C  D00A               	goto	l19047
 30480  00770E  D02A               	goto	l674
 30481  007710                     l19033:
 30482                           
 30483                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 30484  007710  ECD2  F048         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 30485  007714  0012               	return	
 30486  007716                     l19037:
 30487                           
 30488                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 30489  007716  ECCE  F048         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 30490  00771A  0012               	return	
 30491  00771C                     l19041:
 30492                           
 30493                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 30494  00771C  ECC6  F048         	call	_I2C1_DO_SEND_STOP	;wreg free
 30495  007720  0012               	return	
 30496  007722                     l19047:
 30497                           
 30498                           ; BSR set to: 2
 30499  007722  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 30500  007726  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 30501  00772A  D801               	call	u21818
 30502  00772C  D009               	goto	u21819
 30503  00772E                     u21818:
 30504  00772E  0005               	push	
 30505  007730  6EFA               	movwf	pclath,c
 30506  007732  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 30507  007734  6EFD               	movwf	tosl,c
 30508  007736  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 30509  007738  6EFE               	movwf	tosh,c
 30510  00773A  6AFF               	clrf	tosu,c
 30511  00773C  50FA               	movf	pclath,w,c
 30512  00773E  0012               	return		;indir
 30513  007740                     u21819:
 30514  007740  6E1B               	movwf	??_I2C1_DO_TX^0,c
 30515  007742  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 30516                           
 30517                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30518                           ; Switch size 1, requested type "simple"
 30519                           ; Number of cases is 1, Range of values is 0 to 0
 30520                           ; switch strategies available:
 30521                           ; Name         Instructions Cycles
 30522                           ; simple_byte            4     3 (average)
 30523                           ;	Chosen strategy is simple_byte
 30524  007744  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 30525  007746  0A00               	xorlw	0	; case 0
 30526  007748  A4D8               	btfss	status,2,c
 30527  00774A  D7E8               	goto	l19041
 30528                           
 30529                           ; Switch size 1, requested type "simple"
 30530                           ; Number of cases is 4, Range of values is 1 to 4
 30531                           ; switch strategies available:
 30532                           ; Name         Instructions Cycles
 30533                           ; simple_byte           13     7 (average)
 30534                           ;	Chosen strategy is simple_byte
 30535  00774C  501B               	movf	??_I2C1_DO_TX^0,w,c
 30536  00774E  0A01               	xorlw	1	; case 1
 30537  007750  B4D8               	btfsc	status,2,c
 30538  007752  D7E4               	goto	l19041
 30539  007754  0A03               	xorlw	3	; case 2
 30540  007756  B4D8               	btfsc	status,2,c
 30541  007758  D7DB               	goto	l19033
 30542  00775A  0A01               	xorlw	1	; case 3
 30543  00775C  B4D8               	btfsc	status,2,c
 30544  00775E  D7DB               	goto	l19037
 30545  007760  0A07               	xorlw	7	; case 4
 30546  007762  D7DC               	goto	l19041
 30547  007764                     l674:
 30548                           
 30549                           ; BSR set to: 2
 30550                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 30551  007764  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30552                           
 30553                           ; BSR set to: 2
 30554                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 30555  007766  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 30556  00776A  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 30557  00776E  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 30558  007770  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 30559  007772  50DF               	movf	indf2,w,c
 30560  007774  ECD6  F048         	call	_I2C1_MasterSendTxData
 30561                           
 30562                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 30563  007778  0102               	movlb	2	; () banked
 30564  00777A  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 30565  00777C  A0D8               	btfss	status,0,c
 30566  00777E  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 30567  007780  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 30568  007782  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 30569  007784  A4D8               	btfss	status,2,c
 30570  007786  D002               	goto	l19055
 30571                           
 30572                           ; BSR set to: 2
 30573  007788  0E06               	movlw	6
 30574  00778A  0012               	return	
 30575  00778C                     l19055:
 30576                           
 30577                           ; BSR set to: 2
 30578  00778C  0E03               	movlw	3
 30579  00778E  0012               	return		;funcret
 30580  007790                     __end_of_I2C1_DO_TX:
 30581                           	callstack 0
 30582                           
 30583 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 30584 ;; Defined at:
 30585 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 30586 ;; Parameters:    Size  Location     Type
 30587 ;;		None
 30588 ;; Auto vars:     Size  Location     Type
 30589 ;;		None
 30590 ;; Return value:  Size  Location     Type
 30591 ;;                  1    wreg      enum E10442
 30592 ;; Registers used:
 30593 ;;		wreg, status,2, status,0, cstack
 30594 ;; Tracked objects:
 30595 ;;		On entry : 3F/2
 30596 ;;		On exit  : 0/0
 30597 ;;		Unchanged: 0/0
 30598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30603 ;;Total ram usage:        0 bytes
 30604 ;; Hardware stack levels used: 1
 30605 ;; Hardware stack levels required when called: 5
 30606 ;; This function calls:
 30607 ;;		_I2C1_MasterSendTxData
 30608 ;; This function is called by:
 30609 ;;		_I2C1_MasterFsm
 30610 ;; This function uses a non-reentrant model
 30611 ;;
 30612                           
 30613                           	psect	text150
 30614  0090B8                     __ptext150:
 30615                           	callstack 0
 30616  0090B8                     _I2C1_DO_SEND_ADR_WRITE:
 30617                           	callstack 16
 30618                           
 30619                           ; BSR set to: 2
 30620                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 30621                           
 30622                           ;incstack = 0
 30623  0090B8  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 30624                           
 30625                           ; BSR set to: 2
 30626                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 30627  0090BA  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 30628  0090BC  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 30629  0090BE  ECD6  F048         	call	_I2C1_MasterSendTxData
 30630                           
 30631                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 30632  0090C2  0E03               	movlw	3
 30633  0090C4  0012               	return		;funcret
 30634  0090C6                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 30635                           	callstack 0
 30636                           
 30637 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 30638 ;; Defined at:
 30639 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 30640 ;; Parameters:    Size  Location     Type
 30641 ;;		None
 30642 ;; Auto vars:     Size  Location     Type
 30643 ;;		None
 30644 ;; Return value:  Size  Location     Type
 30645 ;;                  1    wreg      enum E10442
 30646 ;; Registers used:
 30647 ;;		wreg, status,0, cstack
 30648 ;; Tracked objects:
 30649 ;;		On entry : 3F/2
 30650 ;;		On exit  : 0/0
 30651 ;;		Unchanged: 0/0
 30652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30657 ;;Total ram usage:        0 bytes
 30658 ;; Hardware stack levels used: 1
 30659 ;; Hardware stack levels required when called: 5
 30660 ;; This function calls:
 30661 ;;		_I2C1_MasterSendTxData
 30662 ;; This function is called by:
 30663 ;;		_I2C1_MasterFsm
 30664 ;; This function uses a non-reentrant model
 30665 ;;
 30666                           
 30667                           	psect	text151
 30668  0090C6                     __ptext151:
 30669                           	callstack 0
 30670  0090C6                     _I2C1_DO_SEND_ADR_READ:
 30671                           	callstack 16
 30672                           
 30673                           ; BSR set to: 2
 30674                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 30675                           
 30676                           ;incstack = 0
 30677  0090C6  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 30678                           
 30679                           ; BSR set to: 2
 30680                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 30681  0090C8  80D8               	bsf	status,0,c
 30682  0090CA  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 30683  0090CC  ECD6  F048         	call	_I2C1_MasterSendTxData
 30684                           
 30685                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 30686  0090D0  0E05               	movlw	5
 30687  0090D2  0012               	return		;funcret
 30688  0090D4                     __end_of_I2C1_DO_SEND_ADR_READ:
 30689                           	callstack 0
 30690                           
 30691 ;; *************** function _I2C1_DO_IDLE *****************
 30692 ;; Defined at:
 30693 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 30694 ;; Parameters:    Size  Location     Type
 30695 ;;		None
 30696 ;; Auto vars:     Size  Location     Type
 30697 ;;		None
 30698 ;; Return value:  Size  Location     Type
 30699 ;;                  1    wreg      enum E10442
 30700 ;; Registers used:
 30701 ;;		wreg, status,2
 30702 ;; Tracked objects:
 30703 ;;		On entry : 3F/2
 30704 ;;		On exit  : 3F/2
 30705 ;;		Unchanged: 0/0
 30706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30711 ;;Total ram usage:        0 bytes
 30712 ;; Hardware stack levels used: 1
 30713 ;; Hardware stack levels required when called: 4
 30714 ;; This function calls:
 30715 ;;		Nothing
 30716 ;; This function is called by:
 30717 ;;		_I2C1_MasterFsm
 30718 ;; This function uses a non-reentrant model
 30719 ;;
 30720                           
 30721                           	psect	text152
 30722  00915A                     __ptext152:
 30723                           	callstack 0
 30724  00915A                     _I2C1_DO_IDLE:
 30725                           	callstack 17
 30726                           
 30727                           ; BSR set to: 2
 30728                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 30729                           
 30730                           ;incstack = 0
 30731  00915A  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30732                           
 30733                           ; BSR set to: 2
 30734                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 30735  00915C  0E00               	movlw	0
 30736  00915E  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30737                           
 30738                           ; BSR set to: 2
 30739                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 30740  009160  0E0E               	movlw	14
 30741                           
 30742                           ; BSR set to: 2
 30743  009162  0012               	return		;funcret
 30744  009164                     __end_of_I2C1_DO_IDLE:
 30745                           	callstack 0
 30746                           
 30747 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 30748 ;; Defined at:
 30749 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 30750 ;; Parameters:    Size  Location     Type
 30751 ;;		None
 30752 ;; Auto vars:     Size  Location     Type
 30753 ;;		None
 30754 ;; Return value:  Size  Location     Type
 30755 ;;                  1    wreg      enum E10442
 30756 ;; Registers used:
 30757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30758 ;; Tracked objects:
 30759 ;;		On entry : 3F/2
 30760 ;;		On exit  : 0/0
 30761 ;;		Unchanged: 0/0
 30762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30765 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30766 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30767 ;;Total ram usage:        2 bytes
 30768 ;; Hardware stack levels used: 1
 30769 ;; Hardware stack levels required when called: 7
 30770 ;; This function calls:
 30771 ;;		Absolute function
 30772 ;;		_I2C1_CallbackReturnReset
 30773 ;;		_I2C1_CallbackReturnStop
 30774 ;;		_I2C1_DO_SEND_RESTART
 30775 ;;		_I2C1_DO_SEND_STOP
 30776 ;;		_I2C1_MasterSetIrq
 30777 ;;		_rd1RegCompleteHandler
 30778 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30779 ;;		_rd2RegCompleteHandler
 30780 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30781 ;;		_rdBlkRegCompleteHandler
 30782 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30783 ;;		_wr1RegCompleteHandler
 30784 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30785 ;;		_wr2RegCompleteHandler
 30786 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30787 ;; This function is called by:
 30788 ;;		_I2C1_MasterFsm
 30789 ;; This function uses a non-reentrant model
 30790 ;;
 30791                           
 30792                           	psect	text153
 30793  00814E                     __ptext153:
 30794                           	callstack 0
 30795  00814E                     _I2C1_DO_TX_EMPTY:
 30796                           	callstack 14
 30797                           
 30798                           ; BSR set to: 2
 30799                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 30800                           
 30801                           ; BSR set to: 2
 30802                           ;incstack = 0
 30803  00814E  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30804                           
 30805                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 30806  008150  D00A               	goto	l19119
 30807  008152                     l19103:
 30808                           
 30809                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 30810  008152  ECCA  F048         	call	_I2C1_DO_SEND_RESTART	;wreg free
 30811  008156  0012               	return	
 30812  008158                     l19107:
 30813                           
 30814                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 30815  008158  ECE0  F048         	call	_I2C1_MasterSetIrq	;wreg free
 30816                           
 30817                           ; BSR set to: 14
 30818                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 30819  00815C  0E03               	movlw	3
 30820  00815E  0012               	return	
 30821  008160                     l19113:
 30822                           
 30823                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 30824  008160  ECC6  F048         	call	_I2C1_DO_SEND_STOP	;wreg free
 30825  008164  0012               	return	
 30826  008166                     l19119:
 30827                           
 30828                           ; BSR set to: 2
 30829  008166  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 30830  00816A  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 30831  00816E  D801               	call	u21858
 30832  008170  D009               	goto	u21859
 30833  008172                     u21858:
 30834  008172  0005               	push	
 30835  008174  6EFA               	movwf	pclath,c
 30836  008176  513C               	movf	_I2C1_Status& (0+255),w,b
 30837  008178  6EFD               	movwf	tosl,c
 30838  00817A  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 30839  00817C  6EFE               	movwf	tosh,c
 30840  00817E  6AFF               	clrf	tosu,c
 30841  008180  50FA               	movf	pclath,w,c
 30842  008182  0012               	return		;indir
 30843  008184                     u21859:
 30844  008184  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 30845  008186  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 30846                           
 30847                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30848                           ; Switch size 1, requested type "simple"
 30849                           ; Number of cases is 1, Range of values is 0 to 0
 30850                           ; switch strategies available:
 30851                           ; Name         Instructions Cycles
 30852                           ; simple_byte            4     3 (average)
 30853                           ;	Chosen strategy is simple_byte
 30854  008188  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 30855  00818A  0A00               	xorlw	0	; case 0
 30856  00818C  A4D8               	btfss	status,2,c
 30857  00818E  D7E8               	goto	l19113
 30858                           
 30859                           ; Switch size 1, requested type "simple"
 30860                           ; Number of cases is 4, Range of values is 1 to 4
 30861                           ; switch strategies available:
 30862                           ; Name         Instructions Cycles
 30863                           ; simple_byte           13     7 (average)
 30864                           ;	Chosen strategy is simple_byte
 30865  008190  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 30866  008192  0A01               	xorlw	1	; case 1
 30867  008194  B4D8               	btfsc	status,2,c
 30868  008196  D7E4               	goto	l19113
 30869  008198  0A03               	xorlw	3	; case 2
 30870  00819A  B4D8               	btfsc	status,2,c
 30871  00819C  D7DA               	goto	l19103
 30872  00819E  0A01               	xorlw	1	; case 3
 30873  0081A0  B4D8               	btfsc	status,2,c
 30874  0081A2  D7D7               	goto	l19103
 30875  0081A4  0A07               	xorlw	7	; case 4
 30876  0081A6  B4D8               	btfsc	status,2,c
 30877  0081A8  D7D7               	goto	l19107
 30878  0081AA  D7DA               	goto	l19113
 30879  0081AC                     __end_of_I2C1_DO_TX_EMPTY:
 30880                           	callstack 0
 30881                           
 30882 ;; *************** function _I2C1_MasterSetIrq *****************
 30883 ;; Defined at:
 30884 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 30885 ;; Parameters:    Size  Location     Type
 30886 ;;		None
 30887 ;; Auto vars:     Size  Location     Type
 30888 ;;		None
 30889 ;; Return value:  Size  Location     Type
 30890 ;;                  1    wreg      void 
 30891 ;; Registers used:
 30892 ;;		None
 30893 ;; Tracked objects:
 30894 ;;		On entry : 0/2
 30895 ;;		On exit  : 3F/E
 30896 ;;		Unchanged: 0/0
 30897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30902 ;;Total ram usage:        0 bytes
 30903 ;; Hardware stack levels used: 1
 30904 ;; Hardware stack levels required when called: 4
 30905 ;; This function calls:
 30906 ;;		Nothing
 30907 ;; This function is called by:
 30908 ;;		_I2C1_DO_TX_EMPTY
 30909 ;; This function uses a non-reentrant model
 30910 ;;
 30911                           
 30912                           	psect	text154
 30913  0091C0                     __ptext154:
 30914                           	callstack 0
 30915  0091C0                     _I2C1_MasterSetIrq:
 30916                           	callstack 16
 30917                           
 30918                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 30919                           
 30920                           ;incstack = 0
 30921  0091C0  010E               	movlb	14	; () banked
 30922  0091C2  81CD               	bsf	205,0,b	;volatile
 30923                           
 30924                           ; BSR set to: 14
 30925  0091C4  0012               	return		;funcret
 30926  0091C6                     __end_of_I2C1_MasterSetIrq:
 30927                           	callstack 0
 30928                           
 30929 ;; *************** function _I2C1_MasterIsNack *****************
 30930 ;; Defined at:
 30931 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 30932 ;; Parameters:    Size  Location     Type
 30933 ;;		None
 30934 ;; Auto vars:     Size  Location     Type
 30935 ;;		None
 30936 ;; Return value:  Size  Location     Type
 30937 ;;                  1    wreg      _Bool 
 30938 ;; Registers used:
 30939 ;;		wreg
 30940 ;; Tracked objects:
 30941 ;;		On entry : 3F/2
 30942 ;;		On exit  : 3F/2
 30943 ;;		Unchanged: 3F/0
 30944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30949 ;;Total ram usage:        0 bytes
 30950 ;; Hardware stack levels used: 1
 30951 ;; Hardware stack levels required when called: 4
 30952 ;; This function calls:
 30953 ;;		Nothing
 30954 ;; This function is called by:
 30955 ;;		_I2C1_MasterFsm
 30956 ;;		_I2C1_DO_TX
 30957 ;; This function uses a non-reentrant model
 30958 ;;
 30959                           
 30960                           	psect	text155
 30961  0090D4                     __ptext155:
 30962                           	callstack 0
 30963  0090D4                     _I2C1_MasterIsNack:
 30964                           	callstack 17
 30965                           
 30966                           ; BSR set to: 2
 30967                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 30968                           
 30969                           ; BSR set to: 14
 30970                           ;incstack = 0
 30971  0090D4  AC97               	btfss	151,6,c	;volatile
 30972  0090D6  D002               	goto	u21790
 30973  0090D8  0E01               	movlw	1
 30974  0090DA  0012               	return	
 30975  0090DC                     u21790:
 30976  0090DC  0E00               	movlw	0
 30977                           
 30978                           ; BSR set to: 2
 30979  0090DE  0012               	return		;funcret
 30980  0090E0                     __end_of_I2C1_MasterIsNack:
 30981                           	callstack 0
 30982                           
 30983 ;; *************** function _I2C1_MasterSendTxData *****************
 30984 ;; Defined at:
 30985 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 30986 ;; Parameters:    Size  Location     Type
 30987 ;;  data            1    wreg     unsigned char 
 30988 ;; Auto vars:     Size  Location     Type
 30989 ;;  data            1   15[COMRAM] unsigned char 
 30990 ;; Return value:  Size  Location     Type
 30991 ;;                  1    wreg      void 
 30992 ;; Registers used:
 30993 ;;		wreg
 30994 ;; Tracked objects:
 30995 ;;		On entry : 3F/2
 30996 ;;		On exit  : 0/0
 30997 ;;		Unchanged: 0/0
 30998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31003 ;;Total ram usage:        1 bytes
 31004 ;; Hardware stack levels used: 1
 31005 ;; Hardware stack levels required when called: 4
 31006 ;; This function calls:
 31007 ;;		Nothing
 31008 ;; This function is called by:
 31009 ;;		_I2C1_DO_SEND_ADR_READ
 31010 ;;		_I2C1_DO_SEND_ADR_WRITE
 31011 ;;		_I2C1_DO_TX
 31012 ;; This function uses a non-reentrant model
 31013 ;;
 31014                           
 31015                           	psect	text156
 31016  0091AC                     __ptext156:
 31017                           	callstack 0
 31018  0091AC                     _I2C1_MasterSendTxData:
 31019                           	callstack 16
 31020                           
 31021                           ; BSR set to: 2
 31022                           ;incstack = 0
 31023                           ;I2C1_MasterSendTxData@data stored from wreg
 31024  0091AC  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 31025                           
 31026                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 31027  0091AE  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 31028  0091B2  0012               	return		;funcret
 31029  0091B4                     __end_of_I2C1_MasterSendTxData:
 31030                           	callstack 0
 31031                           
 31032 ;; *************** function _I2C1_MasterSendAck *****************
 31033 ;; Defined at:
 31034 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 31035 ;; Parameters:    Size  Location     Type
 31036 ;;		None
 31037 ;; Auto vars:     Size  Location     Type
 31038 ;;		None
 31039 ;; Return value:  Size  Location     Type
 31040 ;;                  1    wreg      void 
 31041 ;; Registers used:
 31042 ;;		None
 31043 ;; Tracked objects:
 31044 ;;		On entry : 3F/2
 31045 ;;		On exit  : 3F/2
 31046 ;;		Unchanged: 3F/0
 31047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31052 ;;Total ram usage:        0 bytes
 31053 ;; Hardware stack levels used: 1
 31054 ;; Hardware stack levels required when called: 4
 31055 ;; This function calls:
 31056 ;;		Nothing
 31057 ;; This function is called by:
 31058 ;;		_I2C1_DO_RX
 31059 ;;		_I2C1_DO_RX_ACK
 31060 ;; This function uses a non-reentrant model
 31061 ;;
 31062                           
 31063                           	psect	text157
 31064  0091C6                     __ptext157:
 31065                           	callstack 0
 31066  0091C6                     _I2C1_MasterSendAck:
 31067                           	callstack 16
 31068                           
 31069                           ; BSR set to: 2
 31070                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 31071                           
 31072                           ;incstack = 0
 31073  0091C6  9A97               	bcf	151,5,c	;volatile
 31074                           
 31075                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 31076  0091C8  8897               	bsf	151,4,c	;volatile
 31077                           
 31078                           ; BSR set to: 2
 31079  0091CA  0012               	return		;funcret
 31080  0091CC                     __end_of_I2C1_MasterSendAck:
 31081                           	callstack 0
 31082                           
 31083 ;; *************** function _I2C1_MasterGetRxData *****************
 31084 ;; Defined at:
 31085 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 31086 ;; Parameters:    Size  Location     Type
 31087 ;;		None
 31088 ;; Auto vars:     Size  Location     Type
 31089 ;;		None
 31090 ;; Return value:  Size  Location     Type
 31091 ;;                  1    wreg      unsigned char 
 31092 ;; Registers used:
 31093 ;;		wreg, status,2
 31094 ;; Tracked objects:
 31095 ;;		On entry : 3F/2
 31096 ;;		On exit  : 3F/2
 31097 ;;		Unchanged: 3F/0
 31098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31103 ;;Total ram usage:        0 bytes
 31104 ;; Hardware stack levels used: 1
 31105 ;; Hardware stack levels required when called: 4
 31106 ;; This function calls:
 31107 ;;		Nothing
 31108 ;; This function is called by:
 31109 ;;		_I2C1_DO_RX
 31110 ;; This function uses a non-reentrant model
 31111 ;;
 31112                           
 31113                           	psect	text158
 31114  0091F0                     __ptext158:
 31115                           	callstack 0
 31116  0091F0                     _I2C1_MasterGetRxData:
 31117                           	callstack 16
 31118                           
 31119                           ; BSR set to: 2
 31120                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 31121                           
 31122                           ; BSR set to: 2
 31123                           ;incstack = 0
 31124  0091F0  5092               	movf	146,w,c	;volatile
 31125                           
 31126                           ; BSR set to: 2
 31127  0091F2  0012               	return		;funcret
 31128  0091F4                     __end_of_I2C1_MasterGetRxData:
 31129                           	callstack 0
 31130                           
 31131 ;; *************** function _I2C1_MasterSendNack *****************
 31132 ;; Defined at:
 31133 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 31134 ;; Parameters:    Size  Location     Type
 31135 ;;		None
 31136 ;; Auto vars:     Size  Location     Type
 31137 ;;		None
 31138 ;; Return value:  Size  Location     Type
 31139 ;;                  1    wreg      void 
 31140 ;; Registers used:
 31141 ;;		None
 31142 ;; Tracked objects:
 31143 ;;		On entry : 0/2
 31144 ;;		On exit  : 0/0
 31145 ;;		Unchanged: 0/0
 31146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31151 ;;Total ram usage:        0 bytes
 31152 ;; Hardware stack levels used: 1
 31153 ;; Hardware stack levels required when called: 4
 31154 ;; This function calls:
 31155 ;;		Nothing
 31156 ;; This function is called by:
 31157 ;;		_I2C1_DO_RX_NACK_STOP
 31158 ;;		_I2C1_DO_RX_NACK_RESTART
 31159 ;; This function uses a non-reentrant model
 31160 ;;
 31161                           
 31162                           	psect	text159
 31163  0091CC                     __ptext159:
 31164                           	callstack 0
 31165  0091CC                     _I2C1_MasterSendNack:
 31166                           	callstack 16
 31167                           
 31168                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 31169                           
 31170                           ; BSR set to: 2
 31171                           ;incstack = 0
 31172  0091CC  8A97               	bsf	151,5,c	;volatile
 31173                           
 31174                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 31175  0091CE  8897               	bsf	151,4,c	;volatile
 31176  0091D0  0012               	return		;funcret
 31177  0091D2                     __end_of_I2C1_MasterSendNack:
 31178                           	callstack 0
 31179                           
 31180 ;; *************** function _I2C1_MasterStartRx *****************
 31181 ;; Defined at:
 31182 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 31183 ;; Parameters:    Size  Location     Type
 31184 ;;		None
 31185 ;; Auto vars:     Size  Location     Type
 31186 ;;		None
 31187 ;; Return value:  Size  Location     Type
 31188 ;;                  1    wreg      void 
 31189 ;; Registers used:
 31190 ;;		None
 31191 ;; Tracked objects:
 31192 ;;		On entry : 3F/2
 31193 ;;		On exit  : 3F/2
 31194 ;;		Unchanged: 3F/0
 31195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31200 ;;Total ram usage:        0 bytes
 31201 ;; Hardware stack levels used: 1
 31202 ;; Hardware stack levels required when called: 4
 31203 ;; This function calls:
 31204 ;;		Nothing
 31205 ;; This function is called by:
 31206 ;;		_I2C1_DO_RCEN
 31207 ;; This function uses a non-reentrant model
 31208 ;;
 31209                           
 31210                           	psect	text160
 31211  0091F4                     __ptext160:
 31212                           	callstack 0
 31213  0091F4                     _I2C1_MasterStartRx:
 31214                           	callstack 16
 31215                           
 31216                           ; BSR set to: 2
 31217                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 31218                           
 31219                           ;incstack = 0
 31220  0091F4  8697               	bsf	151,3,c	;volatile
 31221                           
 31222                           ; BSR set to: 2
 31223  0091F6  0012               	return		;funcret
 31224  0091F8                     __end_of_I2C1_MasterStartRx:
 31225                           	callstack 0
 31226                           
 31227 ;; *************** function _I2C1_CallbackReturnReset *****************
 31228 ;; Defined at:
 31229 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 31230 ;; Parameters:    Size  Location     Type
 31231 ;;  funPtr          2   24[COMRAM] PTR void 
 31232 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31233 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31234 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31235 ;; Auto vars:     Size  Location     Type
 31236 ;;		None
 31237 ;; Return value:  Size  Location     Type
 31238 ;;                  1    wreg      enum E360
 31239 ;; Registers used:
 31240 ;;		wreg
 31241 ;; Tracked objects:
 31242 ;;		On entry : 3F/2
 31243 ;;		On exit  : 3F/2
 31244 ;;		Unchanged: 3F/0
 31245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31249 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31250 ;;Total ram usage:        2 bytes
 31251 ;; Hardware stack levels used: 1
 31252 ;; Hardware stack levels required when called: 4
 31253 ;; This function calls:
 31254 ;;		Nothing
 31255 ;; This function is called by:
 31256 ;;		_I2C1_Open
 31257 ;;		_I2C1_DO_TX
 31258 ;;		_I2C1_DO_RX
 31259 ;;		_I2C1_DO_TX_EMPTY
 31260 ;;		_I2C1_DO_ADDRESS_NACK
 31261 ;; This function uses a non-reentrant model
 31262 ;;
 31263                           
 31264                           	psect	text161
 31265  0091F8                     __ptext161:
 31266                           	callstack 0
 31267  0091F8                     _I2C1_CallbackReturnReset:
 31268                           	callstack 16
 31269                           
 31270                           ; BSR set to: 2
 31271                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 31272                           
 31273                           ; BSR set to: 2
 31274                           ;incstack = 0
 31275  0091F8  0E05               	movlw	5
 31276                           
 31277                           ; BSR set to: 2
 31278  0091FA  0012               	return		;funcret
 31279  0091FC                     __end_of_I2C1_CallbackReturnReset:
 31280                           	callstack 0
 31281                           
 31282 ;; *************** function _I2C1_CallbackReturnStop *****************
 31283 ;; Defined at:
 31284 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 31285 ;; Parameters:    Size  Location     Type
 31286 ;;  funPtr          2   24[COMRAM] PTR void 
 31287 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31288 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31289 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31290 ;; Auto vars:     Size  Location     Type
 31291 ;;		None
 31292 ;; Return value:  Size  Location     Type
 31293 ;;                  1    wreg      enum E360
 31294 ;; Registers used:
 31295 ;;		wreg
 31296 ;; Tracked objects:
 31297 ;;		On entry : 3F/2
 31298 ;;		On exit  : 3F/2
 31299 ;;		Unchanged: 3F/0
 31300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31305 ;;Total ram usage:        2 bytes
 31306 ;; Hardware stack levels used: 1
 31307 ;; Hardware stack levels required when called: 4
 31308 ;; This function calls:
 31309 ;;		Nothing
 31310 ;; This function is called by:
 31311 ;;		_I2C1_Open
 31312 ;;		_I2C1_SetCallback
 31313 ;;		_I2C1_DO_TX
 31314 ;;		_I2C1_DO_RX
 31315 ;;		_I2C1_DO_TX_EMPTY
 31316 ;;		_I2C1_DO_ADDRESS_NACK
 31317 ;; This function uses a non-reentrant model
 31318 ;;
 31319                           
 31320                           	psect	text162
 31321  0091FC                     __ptext162:
 31322                           	callstack 0
 31323  0091FC                     _I2C1_CallbackReturnStop:
 31324                           	callstack 16
 31325                           
 31326                           ; BSR set to: 2
 31327                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 31328                           
 31329                           ; BSR set to: 2
 31330                           ;incstack = 0
 31331  0091FC  0E01               	movlw	1
 31332                           
 31333                           ; BSR set to: 2
 31334  0091FE  0012               	return		;funcret
 31335  009200                     __end_of_I2C1_CallbackReturnStop:
 31336                           	callstack 0
 31337                           
 31338 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 31339 ;; Defined at:
 31340 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31341 ;; Parameters:    Size  Location     Type
 31342 ;;  ptr             2   24[COMRAM] PTR void 
 31343 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31344 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31345 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31346 ;; Auto vars:     Size  Location     Type
 31347 ;;		None
 31348 ;; Return value:  Size  Location     Type
 31349 ;;                  1    wreg      enum E527
 31350 ;; Registers used:
 31351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31352 ;; Tracked objects:
 31353 ;;		On entry : 3F/2
 31354 ;;		On exit  : 0/0
 31355 ;;		Unchanged: 0/0
 31356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31361 ;;Total ram usage:        2 bytes
 31362 ;; Hardware stack levels used: 1
 31363 ;; Hardware stack levels required when called: 6
 31364 ;; This function calls:
 31365 ;;		_I2C1_SetBuffer
 31366 ;;		_I2C1_SetDataCompleteCallback
 31367 ;; This function is called by:
 31368 ;;		_I2C1_DO_TX
 31369 ;;		_I2C1_DO_RX
 31370 ;;		_I2C1_DO_TX_EMPTY
 31371 ;;		_I2C1_DO_ADDRESS_NACK
 31372 ;; This function uses a non-reentrant model
 31373 ;;
 31374                           
 31375                           	psect	text163
 31376  008836                     __ptext163:
 31377                           	callstack 0
 31378  008836                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 31379                           	callstack 14
 31380                           
 31381                           ; BSR set to: 2
 31382                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 31383                           
 31384                           ; BSR set to: 2
 31385                           ;incstack = 0
 31386  008836  EE20 F002          	lfsr	2,2
 31387  00883A  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 31388  00883C  26D9               	addwf	fsr2l,f,c
 31389  00883E  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 31390  008840  22DA               	addwfc	fsr2h,f,c
 31391  008842  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 31392  008846  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 31393  00884A  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 31394  00884E  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 31395  008852  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 31396  008856  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 31397  00885A  ECB4  F047         	call	_I2C1_SetBuffer	;wreg free
 31398                           
 31399                           ; BSR set to: 2
 31400                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31401  00885E  0E00               	movlw	0
 31402  008860  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31403  008862  0E00               	movlw	0
 31404  008864  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31405  008866  0E00               	movlw	0
 31406  008868  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31407  00886A  0E00               	movlw	0
 31408  00886C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31409  00886E  ECF1  F047         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31410                           
 31411                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 31412  008872  0E02               	movlw	2
 31413  008874  0012               	return		;funcret
 31414  008876                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 31415                           	callstack 0
 31416                           
 31417 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 31418 ;; Defined at:
 31419 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31420 ;; Parameters:    Size  Location     Type
 31421 ;;  ptr             2   24[COMRAM] PTR void 
 31422 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31423 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31424 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31425 ;; Auto vars:     Size  Location     Type
 31426 ;;		None
 31427 ;; Return value:  Size  Location     Type
 31428 ;;                  1    wreg      enum E527
 31429 ;; Registers used:
 31430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31431 ;; Tracked objects:
 31432 ;;		On entry : 3F/2
 31433 ;;		On exit  : 0/0
 31434 ;;		Unchanged: 0/0
 31435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31439 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31440 ;;Total ram usage:        2 bytes
 31441 ;; Hardware stack levels used: 1
 31442 ;; Hardware stack levels required when called: 6
 31443 ;; This function calls:
 31444 ;;		_I2C1_SetBuffer
 31445 ;;		_I2C1_SetDataCompleteCallback
 31446 ;; This function is called by:
 31447 ;;		_I2C1_DO_TX
 31448 ;;		_I2C1_DO_RX
 31449 ;;		_I2C1_DO_TX_EMPTY
 31450 ;;		_I2C1_DO_ADDRESS_NACK
 31451 ;; This function uses a non-reentrant model
 31452 ;;
 31453                           
 31454                           	psect	text164
 31455  008B4A                     __ptext164:
 31456                           	callstack 0
 31457  008B4A                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 31458                           	callstack 14
 31459                           
 31460                           ; BSR set to: 2
 31461                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 31462                           
 31463                           ;incstack = 0
 31464  008B4A  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 31465  008B4E  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 31466  008B52  0E00               	movlw	0
 31467  008B54  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31468  008B56  0E01               	movlw	1
 31469  008B58  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31470  008B5A  ECB4  F047         	call	_I2C1_SetBuffer	;wreg free
 31471                           
 31472                           ; BSR set to: 2
 31473                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31474  008B5E  0E00               	movlw	0
 31475  008B60  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31476  008B62  0E00               	movlw	0
 31477  008B64  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31478  008B66  0E00               	movlw	0
 31479  008B68  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31480  008B6A  0E00               	movlw	0
 31481  008B6C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31482  008B6E  ECF1  F047         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31483                           
 31484                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 31485  008B72  0E04               	movlw	4
 31486  008B74  0012               	return		;funcret
 31487  008B76                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 31488                           	callstack 0
 31489                           
 31490 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 31491 ;; Defined at:
 31492 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31493 ;; Parameters:    Size  Location     Type
 31494 ;;  ptr             2   24[COMRAM] PTR void 
 31495 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31496 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31497 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31498 ;; Auto vars:     Size  Location     Type
 31499 ;;		None
 31500 ;; Return value:  Size  Location     Type
 31501 ;;                  1    wreg      enum E527
 31502 ;; Registers used:
 31503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31504 ;; Tracked objects:
 31505 ;;		On entry : 3F/2
 31506 ;;		On exit  : 0/0
 31507 ;;		Unchanged: 0/0
 31508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31513 ;;Total ram usage:        2 bytes
 31514 ;; Hardware stack levels used: 1
 31515 ;; Hardware stack levels required when called: 6
 31516 ;; This function calls:
 31517 ;;		_I2C1_SetBuffer
 31518 ;;		_I2C1_SetDataCompleteCallback
 31519 ;; This function is called by:
 31520 ;;		_I2C1_DO_TX
 31521 ;;		_I2C1_DO_RX
 31522 ;;		_I2C1_DO_TX_EMPTY
 31523 ;;		_I2C1_DO_ADDRESS_NACK
 31524 ;; This function uses a non-reentrant model
 31525 ;;
 31526                           
 31527                           	psect	text165
 31528  008B76                     __ptext165:
 31529                           	callstack 0
 31530  008B76                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 31531                           	callstack 14
 31532                           
 31533                           ; BSR set to: 2
 31534                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 31535                           
 31536                           ;incstack = 0
 31537  008B76  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 31538  008B7A  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 31539  008B7E  0E00               	movlw	0
 31540  008B80  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31541  008B82  0E02               	movlw	2
 31542  008B84  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31543  008B86  ECB4  F047         	call	_I2C1_SetBuffer	;wreg free
 31544                           
 31545                           ; BSR set to: 2
 31546                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31547  008B8A  0E00               	movlw	0
 31548  008B8C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31549  008B8E  0E00               	movlw	0
 31550  008B90  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31551  008B92  0E00               	movlw	0
 31552  008B94  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31553  008B96  0E00               	movlw	0
 31554  008B98  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31555  008B9A  ECF1  F047         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31556                           
 31557                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 31558  008B9E  0E02               	movlw	2
 31559  008BA0  0012               	return		;funcret
 31560  008BA2                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 31561                           	callstack 0
 31562                           
 31563 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 31564 ;; Defined at:
 31565 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31566 ;; Parameters:    Size  Location     Type
 31567 ;;  ptr             2   24[COMRAM] PTR void 
 31568 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31569 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31570 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31571 ;; Auto vars:     Size  Location     Type
 31572 ;;		None
 31573 ;; Return value:  Size  Location     Type
 31574 ;;                  1    wreg      enum E527
 31575 ;; Registers used:
 31576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31577 ;; Tracked objects:
 31578 ;;		On entry : 3F/2
 31579 ;;		On exit  : 0/0
 31580 ;;		Unchanged: 0/0
 31581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31586 ;;Total ram usage:        2 bytes
 31587 ;; Hardware stack levels used: 1
 31588 ;; Hardware stack levels required when called: 6
 31589 ;; This function calls:
 31590 ;;		_I2C1_SetBuffer
 31591 ;;		_I2C1_SetDataCompleteCallback
 31592 ;; This function is called by:
 31593 ;;		_I2C1_Read1ByteRegister
 31594 ;;		_I2C1_DO_TX
 31595 ;;		_I2C1_DO_RX
 31596 ;;		_I2C1_DO_TX_EMPTY
 31597 ;;		_I2C1_DO_ADDRESS_NACK
 31598 ;; This function uses a non-reentrant model
 31599 ;;
 31600                           
 31601                           	psect	text166
 31602  008BA2                     __ptext166:
 31603                           	callstack 0
 31604  008BA2                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 31605                           	callstack 14
 31606                           
 31607                           ; BSR set to: 2
 31608                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 31609                           
 31610                           ;incstack = 0
 31611  008BA2  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 31612  008BA6  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 31613  008BAA  0E00               	movlw	0
 31614  008BAC  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31615  008BAE  0E01               	movlw	1
 31616  008BB0  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31617  008BB2  ECB4  F047         	call	_I2C1_SetBuffer	;wreg free
 31618                           
 31619                           ; BSR set to: 2
 31620                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31621  008BB6  0E00               	movlw	0
 31622  008BB8  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31623  008BBA  0E00               	movlw	0
 31624  008BBC  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31625  008BBE  0E00               	movlw	0
 31626  008BC0  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31627  008BC2  0E00               	movlw	0
 31628  008BC4  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31629  008BC6  ECF1  F047         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31630                           
 31631                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 31632  008BCA  0E02               	movlw	2
 31633  008BCC  0012               	return		;funcret
 31634  008BCE                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 31635                           	callstack 0
 31636                           
 31637 ;; *************** function _rdBlkRegCompleteHandler *****************
 31638 ;; Defined at:
 31639 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31640 ;; Parameters:    Size  Location     Type
 31641 ;;  p               2   24[COMRAM] PTR void 
 31642 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31643 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31644 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31645 ;; Auto vars:     Size  Location     Type
 31646 ;;		None
 31647 ;; Return value:  Size  Location     Type
 31648 ;;                  1    wreg      enum E360
 31649 ;; Registers used:
 31650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31651 ;; Tracked objects:
 31652 ;;		On entry : 3F/2
 31653 ;;		On exit  : 0/0
 31654 ;;		Unchanged: 0/0
 31655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31660 ;;Total ram usage:        2 bytes
 31661 ;; Hardware stack levels used: 1
 31662 ;; Hardware stack levels required when called: 6
 31663 ;; This function calls:
 31664 ;;		_I2C1_SetBuffer
 31665 ;;		_I2C1_SetDataCompleteCallback
 31666 ;; This function is called by:
 31667 ;;		_i2c_readDataBlock
 31668 ;;		_I2C1_DO_TX
 31669 ;;		_I2C1_DO_RX
 31670 ;;		_I2C1_DO_TX_EMPTY
 31671 ;;		_I2C1_DO_ADDRESS_NACK
 31672 ;; This function uses a non-reentrant model
 31673 ;;
 31674                           
 31675                           	psect	text167
 31676  008876                     __ptext167:
 31677                           	callstack 0
 31678  008876                     _rdBlkRegCompleteHandler:
 31679                           	callstack 14
 31680                           
 31681                           ; BSR set to: 2
 31682                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 31683                           
 31684                           ;incstack = 0
 31685  008876  EE20 F002          	lfsr	2,2
 31686  00887A  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 31687  00887C  26D9               	addwf	fsr2l,f,c
 31688  00887E  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 31689  008880  22DA               	addwfc	fsr2h,f,c
 31690  008882  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 31691  008886  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 31692  00888A  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 31693  00888E  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 31694  008892  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 31695  008896  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 31696  00889A  ECB4  F047         	call	_I2C1_SetBuffer	;wreg free
 31697                           
 31698                           ; BSR set to: 2
 31699                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 31700  00889E  0E00               	movlw	0
 31701  0088A0  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31702  0088A2  0E00               	movlw	0
 31703  0088A4  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31704  0088A6  0E00               	movlw	0
 31705  0088A8  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31706  0088AA  0E00               	movlw	0
 31707  0088AC  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31708  0088AE  ECF1  F047         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31709                           
 31710                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 31711  0088B2  0E02               	movlw	2
 31712  0088B4  0012               	return		;funcret
 31713  0088B6                     __end_of_rdBlkRegCompleteHandler:
 31714                           	callstack 0
 31715                           
 31716 ;; *************** function _wr2RegCompleteHandler *****************
 31717 ;; Defined at:
 31718 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31719 ;; Parameters:    Size  Location     Type
 31720 ;;  p               2   24[COMRAM] PTR void 
 31721 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31722 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31723 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31724 ;; Auto vars:     Size  Location     Type
 31725 ;;		None
 31726 ;; Return value:  Size  Location     Type
 31727 ;;                  1    wreg      enum E360
 31728 ;; Registers used:
 31729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31730 ;; Tracked objects:
 31731 ;;		On entry : 3F/2
 31732 ;;		On exit  : 0/0
 31733 ;;		Unchanged: 0/0
 31734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31739 ;;Total ram usage:        2 bytes
 31740 ;; Hardware stack levels used: 1
 31741 ;; Hardware stack levels required when called: 6
 31742 ;; This function calls:
 31743 ;;		_I2C1_SetBuffer
 31744 ;;		_I2C1_SetDataCompleteCallback
 31745 ;; This function is called by:
 31746 ;;		_I2C1_DO_TX
 31747 ;;		_I2C1_DO_RX
 31748 ;;		_I2C1_DO_TX_EMPTY
 31749 ;;		_I2C1_DO_ADDRESS_NACK
 31750 ;; This function uses a non-reentrant model
 31751 ;;
 31752                           
 31753                           	psect	text168
 31754  008BCE                     __ptext168:
 31755                           	callstack 0
 31756  008BCE                     _wr2RegCompleteHandler:
 31757                           	callstack 14
 31758                           
 31759                           ; BSR set to: 2
 31760                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 31761                           
 31762                           ;incstack = 0
 31763  008BCE  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31764  008BD2  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31765  008BD6  0E00               	movlw	0
 31766  008BD8  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31767  008BDA  0E02               	movlw	2
 31768  008BDC  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31769  008BDE  ECB4  F047         	call	_I2C1_SetBuffer	;wreg free
 31770                           
 31771                           ; BSR set to: 2
 31772                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 31773  008BE2  0E00               	movlw	0
 31774  008BE4  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31775  008BE6  0E00               	movlw	0
 31776  008BE8  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31777  008BEA  0E00               	movlw	0
 31778  008BEC  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31779  008BEE  0E00               	movlw	0
 31780  008BF0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31781  008BF2  ECF1  F047         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31782                           
 31783                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 31784  008BF6  0E04               	movlw	4
 31785  008BF8  0012               	return		;funcret
 31786  008BFA                     __end_of_wr2RegCompleteHandler:
 31787                           	callstack 0
 31788                           
 31789 ;; *************** function _rd2RegCompleteHandler *****************
 31790 ;; Defined at:
 31791 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31792 ;; Parameters:    Size  Location     Type
 31793 ;;  p               2   24[COMRAM] PTR void 
 31794 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31795 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31796 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31797 ;; Auto vars:     Size  Location     Type
 31798 ;;		None
 31799 ;; Return value:  Size  Location     Type
 31800 ;;                  1    wreg      enum E360
 31801 ;; Registers used:
 31802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31803 ;; Tracked objects:
 31804 ;;		On entry : 3F/2
 31805 ;;		On exit  : 0/0
 31806 ;;		Unchanged: 0/0
 31807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31811 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31812 ;;Total ram usage:        2 bytes
 31813 ;; Hardware stack levels used: 1
 31814 ;; Hardware stack levels required when called: 6
 31815 ;; This function calls:
 31816 ;;		_I2C1_SetBuffer
 31817 ;;		_I2C1_SetDataCompleteCallback
 31818 ;; This function is called by:
 31819 ;;		_I2C1_DO_TX
 31820 ;;		_I2C1_DO_RX
 31821 ;;		_I2C1_DO_TX_EMPTY
 31822 ;;		_I2C1_DO_ADDRESS_NACK
 31823 ;; This function uses a non-reentrant model
 31824 ;;
 31825                           
 31826                           	psect	text169
 31827  008BFA                     __ptext169:
 31828                           	callstack 0
 31829  008BFA                     _rd2RegCompleteHandler:
 31830                           	callstack 14
 31831                           
 31832                           ; BSR set to: 2
 31833                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 31834                           
 31835                           ;incstack = 0
 31836  008BFA  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31837  008BFE  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31838  008C02  0E00               	movlw	0
 31839  008C04  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31840  008C06  0E02               	movlw	2
 31841  008C08  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31842  008C0A  ECB4  F047         	call	_I2C1_SetBuffer	;wreg free
 31843                           
 31844                           ; BSR set to: 2
 31845                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 31846  008C0E  0E00               	movlw	0
 31847  008C10  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31848  008C12  0E00               	movlw	0
 31849  008C14  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31850  008C16  0E00               	movlw	0
 31851  008C18  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31852  008C1A  0E00               	movlw	0
 31853  008C1C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31854  008C1E  ECF1  F047         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31855                           
 31856                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 31857  008C22  0E02               	movlw	2
 31858  008C24  0012               	return		;funcret
 31859  008C26                     __end_of_rd2RegCompleteHandler:
 31860                           	callstack 0
 31861                           
 31862 ;; *************** function _rd1RegCompleteHandler *****************
 31863 ;; Defined at:
 31864 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31865 ;; Parameters:    Size  Location     Type
 31866 ;;  p               2   24[COMRAM] PTR void 
 31867 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31868 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31869 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31870 ;; Auto vars:     Size  Location     Type
 31871 ;;		None
 31872 ;; Return value:  Size  Location     Type
 31873 ;;                  1    wreg      enum E360
 31874 ;; Registers used:
 31875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31876 ;; Tracked objects:
 31877 ;;		On entry : 3F/2
 31878 ;;		On exit  : 0/0
 31879 ;;		Unchanged: 0/0
 31880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31884 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31885 ;;Total ram usage:        2 bytes
 31886 ;; Hardware stack levels used: 1
 31887 ;; Hardware stack levels required when called: 6
 31888 ;; This function calls:
 31889 ;;		_I2C1_SetBuffer
 31890 ;;		_I2C1_SetDataCompleteCallback
 31891 ;; This function is called by:
 31892 ;;		_I2C1_DO_TX
 31893 ;;		_I2C1_DO_RX
 31894 ;;		_I2C1_DO_TX_EMPTY
 31895 ;;		_I2C1_DO_ADDRESS_NACK
 31896 ;; This function uses a non-reentrant model
 31897 ;;
 31898                           
 31899                           	psect	text170
 31900  008C26                     __ptext170:
 31901                           	callstack 0
 31902  008C26                     _rd1RegCompleteHandler:
 31903                           	callstack 14
 31904                           
 31905                           ; BSR set to: 2
 31906                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 31907                           
 31908                           ;incstack = 0
 31909  008C26  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31910  008C2A  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31911  008C2E  0E00               	movlw	0
 31912  008C30  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31913  008C32  0E01               	movlw	1
 31914  008C34  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31915  008C36  ECB4  F047         	call	_I2C1_SetBuffer	;wreg free
 31916                           
 31917                           ; BSR set to: 2
 31918                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 31919  008C3A  0E00               	movlw	0
 31920  008C3C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31921  008C3E  0E00               	movlw	0
 31922  008C40  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31923  008C42  0E00               	movlw	0
 31924  008C44  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31925  008C46  0E00               	movlw	0
 31926  008C48  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31927  008C4A  ECF1  F047         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31928                           
 31929                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 31930  008C4E  0E02               	movlw	2
 31931  008C50  0012               	return		;funcret
 31932  008C52                     __end_of_rd1RegCompleteHandler:
 31933                           	callstack 0
 31934                           
 31935 ;; *************** function _wr1RegCompleteHandler *****************
 31936 ;; Defined at:
 31937 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31938 ;; Parameters:    Size  Location     Type
 31939 ;;  p               2   24[COMRAM] PTR void 
 31940 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31941 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31942 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31943 ;; Auto vars:     Size  Location     Type
 31944 ;;		None
 31945 ;; Return value:  Size  Location     Type
 31946 ;;                  1    wreg      enum E360
 31947 ;; Registers used:
 31948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31949 ;; Tracked objects:
 31950 ;;		On entry : 3F/2
 31951 ;;		On exit  : 0/0
 31952 ;;		Unchanged: 0/0
 31953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31957 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31958 ;;Total ram usage:        2 bytes
 31959 ;; Hardware stack levels used: 1
 31960 ;; Hardware stack levels required when called: 6
 31961 ;; This function calls:
 31962 ;;		_I2C1_SetBuffer
 31963 ;;		_I2C1_SetDataCompleteCallback
 31964 ;; This function is called by:
 31965 ;;		_I2C1_DO_TX
 31966 ;;		_I2C1_DO_RX
 31967 ;;		_I2C1_DO_TX_EMPTY
 31968 ;;		_I2C1_DO_ADDRESS_NACK
 31969 ;; This function uses a non-reentrant model
 31970 ;;
 31971                           
 31972                           	psect	text171
 31973  008C52                     __ptext171:
 31974                           	callstack 0
 31975  008C52                     _wr1RegCompleteHandler:
 31976                           	callstack 14
 31977                           
 31978                           ; BSR set to: 2
 31979                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 31980                           
 31981                           ;incstack = 0
 31982  008C52  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31983  008C56  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31984  008C5A  0E00               	movlw	0
 31985  008C5C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31986  008C5E  0E01               	movlw	1
 31987  008C60  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31988  008C62  ECB4  F047         	call	_I2C1_SetBuffer	;wreg free
 31989                           
 31990                           ; BSR set to: 2
 31991                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 31992  008C66  0E00               	movlw	0
 31993  008C68  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31994  008C6A  0E00               	movlw	0
 31995  008C6C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31996  008C6E  0E00               	movlw	0
 31997  008C70  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31998  008C72  0E00               	movlw	0
 31999  008C74  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32000  008C76  ECF1  F047         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32001                           
 32002                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 32003  008C7A  0E04               	movlw	4
 32004  008C7C  0012               	return		;funcret
 32005  008C7E                     __end_of_wr1RegCompleteHandler:
 32006                           	callstack 0
 32007                           
 32008 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 32009 ;; Defined at:
 32010 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32011 ;; Parameters:    Size  Location     Type
 32012 ;;  ptr             2   24[COMRAM] PTR void 
 32013 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32014 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32015 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32016 ;; Auto vars:     Size  Location     Type
 32017 ;;		None
 32018 ;; Return value:  Size  Location     Type
 32019 ;;                  1    wreg      enum E527
 32020 ;; Registers used:
 32021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32022 ;; Tracked objects:
 32023 ;;		On entry : 3F/2
 32024 ;;		On exit  : 0/0
 32025 ;;		Unchanged: 0/0
 32026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32030 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32031 ;;Total ram usage:        2 bytes
 32032 ;; Hardware stack levels used: 1
 32033 ;; Hardware stack levels required when called: 6
 32034 ;; This function calls:
 32035 ;;		_I2C1_SetBuffer
 32036 ;;		_I2C1_SetDataCompleteCallback
 32037 ;; This function is called by:
 32038 ;;		_I2C1_DO_TX
 32039 ;;		_I2C1_DO_RX
 32040 ;;		_I2C1_DO_TX_EMPTY
 32041 ;;		_I2C1_DO_ADDRESS_NACK
 32042 ;; This function uses a non-reentrant model
 32043 ;;
 32044                           
 32045                           	psect	text172
 32046  008C7E                     __ptext172:
 32047                           	callstack 0
 32048  008C7E                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 32049                           	callstack 14
 32050                           
 32051                           ; BSR set to: 2
 32052                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 32053                           
 32054                           ;incstack = 0
 32055  008C7E  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 32056  008C82  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 32057  008C86  0E00               	movlw	0
 32058  008C88  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32059  008C8A  0E02               	movlw	2
 32060  008C8C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32061  008C8E  ECB4  F047         	call	_I2C1_SetBuffer	;wreg free
 32062                           
 32063                           ; BSR set to: 2
 32064                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32065  008C92  0E00               	movlw	0
 32066  008C94  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32067  008C96  0E00               	movlw	0
 32068  008C98  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32069  008C9A  0E00               	movlw	0
 32070  008C9C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32071  008C9E  0E00               	movlw	0
 32072  008CA0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32073  008CA2  ECF1  F047         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32074                           
 32075                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 32076  008CA6  0E04               	movlw	4
 32077  008CA8  0012               	return		;funcret
 32078  008CAA                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 32079                           	callstack 0
 32080                           
 32081 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 32082 ;; Defined at:
 32083 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 32084 ;; Parameters:    Size  Location     Type
 32085 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 32086 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32087 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32088 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32089 ;;  ptr             2   22[COMRAM] PTR void 
 32090 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32091 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32092 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32093 ;; Auto vars:     Size  Location     Type
 32094 ;;		None
 32095 ;; Return value:  Size  Location     Type
 32096 ;;                  1    wreg      void 
 32097 ;; Registers used:
 32098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32099 ;; Tracked objects:
 32100 ;;		On entry : 33/2
 32101 ;;		On exit  : 0/0
 32102 ;;		Unchanged: 0/0
 32103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32107 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32108 ;;Total ram usage:        4 bytes
 32109 ;; Hardware stack levels used: 1
 32110 ;; Hardware stack levels required when called: 5
 32111 ;; This function calls:
 32112 ;;		_I2C1_SetCallback
 32113 ;; This function is called by:
 32114 ;;		_wr1RegCompleteHandler
 32115 ;;		_rd1RegCompleteHandler
 32116 ;;		_rd2RegCompleteHandler
 32117 ;;		_wr2RegCompleteHandler
 32118 ;;		_rdBlkRegCompleteHandler
 32119 ;;		_i2c_readDataBlock
 32120 ;;		_I2C1_Read1ByteRegister
 32121 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32122 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32123 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32124 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32125 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32126 ;; This function uses a non-reentrant model
 32127 ;;
 32128                           
 32129                           	psect	text173
 32130  008FE2                     __ptext173:
 32131                           	callstack 0
 32132  008FE2                     _I2C1_SetDataCompleteCallback:
 32133                           	callstack 14
 32134                           
 32135                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 32136                           
 32137                           ;incstack = 0
 32138  008FE2  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 32139  008FE6  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 32140  008FEA  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 32141  008FEE  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 32142  008FF2  0E00               	movlw	0
 32143  008FF4  ECA2  F03F         	call	_I2C1_SetCallback
 32144  008FF8  0012               	return		;funcret
 32145  008FFA                     __end_of_I2C1_SetDataCompleteCallback:
 32146                           	callstack 0
 32147                           
 32148 ;; *************** function _I2C1_SetCallback *****************
 32149 ;; Defined at:
 32150 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 32151 ;; Parameters:    Size  Location     Type
 32152 ;;  idx             1    wreg     enum E10460
 32153 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 32154 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32155 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32156 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32157 ;;  ptr             2   17[COMRAM] PTR void 
 32158 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32159 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32160 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32161 ;; Auto vars:     Size  Location     Type
 32162 ;;  idx             1   19[COMRAM] enum E10460
 32163 ;; Return value:  Size  Location     Type
 32164 ;;                  1    wreg      void 
 32165 ;; Registers used:
 32166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32167 ;; Tracked objects:
 32168 ;;		On entry : 33/2
 32169 ;;		On exit  : 0/0
 32170 ;;		Unchanged: 0/0
 32171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32172 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32175 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32176 ;;Total ram usage:        5 bytes
 32177 ;; Hardware stack levels used: 1
 32178 ;; Hardware stack levels required when called: 4
 32179 ;; This function calls:
 32180 ;;		Nothing
 32181 ;; This function is called by:
 32182 ;;		_I2C1_SetDataCompleteCallback
 32183 ;;		_I2C1_SetAddressNackCallback
 32184 ;; This function uses a non-reentrant model
 32185 ;;
 32186                           
 32187                           	psect	text174
 32188  007F44                     __ptext174:
 32189                           	callstack 0
 32190  007F44                     _I2C1_SetCallback:
 32191                           	callstack 20
 32192                           
 32193                           ;incstack = 0
 32194                           ;I2C1_SetCallback@idx stored from wreg
 32195  007F44  6E14               	movwf	I2C1_SetCallback@idx^0,c
 32196                           
 32197                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 32198  007F46  5010               	movf	I2C1_SetCallback@cb^0,w,c
 32199  007F48  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 32200  007F4A  B4D8               	btfsc	status,2,c
 32201  007F4C  D019               	goto	l18845
 32202                           
 32203                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 32204  007F4E  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32205  007F50  0D02               	mullw	2
 32206  007F52  0E3C               	movlw	low _I2C1_Status
 32207  007F54  24F3               	addwf	243,w,c
 32208  007F56  6ED9               	movwf	fsr2l,c
 32209  007F58  0E02               	movlw	high _I2C1_Status
 32210  007F5A  20F4               	addwfc	prodh,w,c
 32211  007F5C  6EDA               	movwf	fsr2h,c
 32212  007F5E  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 32213  007F62  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 32214                           
 32215                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 32216  007F66  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32217  007F68  0D02               	mullw	2
 32218  007F6A  0E48               	movlw	low (_I2C1_Status+12)
 32219  007F6C  24F3               	addwf	243,w,c
 32220  007F6E  6ED9               	movwf	fsr2l,c
 32221  007F70  0E02               	movlw	high (_I2C1_Status+12)
 32222  007F72  20F4               	addwfc	prodh,w,c
 32223  007F74  6EDA               	movwf	fsr2h,c
 32224  007F76  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 32225  007F7A  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 32226                           
 32227                           ;mcc_generated_files/i2c1_master.c: 304:     }
 32228  007F7E  0012               	return	
 32229  007F80                     l18845:
 32230                           
 32231                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 32232  007F80  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32233  007F82  0D02               	mullw	2
 32234  007F84  0E3C               	movlw	low _I2C1_Status
 32235  007F86  24F3               	addwf	243,w,c
 32236  007F88  6ED9               	movwf	fsr2l,c
 32237  007F8A  0E02               	movlw	high _I2C1_Status
 32238  007F8C  20F4               	addwfc	prodh,w,c
 32239  007F8E  6EDA               	movwf	fsr2h,c
 32240  007F90  0EFC               	movlw	low _I2C1_CallbackReturnStop
 32241  007F92  6EDE               	movwf	postinc2,c
 32242  007F94  0E91               	movlw	high _I2C1_CallbackReturnStop
 32243  007F96  6EDD               	movwf	postdec2,c
 32244                           
 32245                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 32246  007F98  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32247  007F9A  0D02               	mullw	2
 32248  007F9C  0E48               	movlw	low (_I2C1_Status+12)
 32249  007F9E  24F3               	addwf	243,w,c
 32250  007FA0  6ED9               	movwf	fsr2l,c
 32251  007FA2  0E02               	movlw	high (_I2C1_Status+12)
 32252  007FA4  20F4               	addwfc	prodh,w,c
 32253  007FA6  6EDA               	movwf	fsr2h,c
 32254  007FA8  0E00               	movlw	0
 32255  007FAA  6EDE               	movwf	postinc2,c
 32256  007FAC  0E00               	movlw	0
 32257  007FAE  6EDD               	movwf	postdec2,c
 32258  007FB0  0012               	return		;funcret
 32259  007FB2                     __end_of_I2C1_SetCallback:
 32260                           	callstack 0
 32261                           
 32262 ;; *************** function _I2C1_SetBuffer *****************
 32263 ;; Defined at:
 32264 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 32265 ;; Parameters:    Size  Location     Type
 32266 ;;  buffer          2   15[COMRAM] PTR void 
 32267 ;;		 -> cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), I2C1_ReadDataBlock@reg(1), 
 32268 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegi
      +ster@data(2), 
 32269 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 32270 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(2), i2c_readDataBloc
      +k@d(4), 
 32271 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 32272 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(17), i2c_write1ByteRegister@reg(1
      +), 
 32273 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 32274 ;;  bufferSize      2   17[COMRAM] unsigned int 
 32275 ;; Auto vars:     Size  Location     Type
 32276 ;;		None
 32277 ;; Return value:  Size  Location     Type
 32278 ;;                  1    wreg      void 
 32279 ;; Registers used:
 32280 ;;		wreg, status,2, status,0
 32281 ;; Tracked objects:
 32282 ;;		On entry : 0/2
 32283 ;;		On exit  : 3F/2
 32284 ;;		Unchanged: 0/0
 32285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32286 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32289 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32290 ;;Total ram usage:        4 bytes
 32291 ;; Hardware stack levels used: 1
 32292 ;; Hardware stack levels required when called: 4
 32293 ;; This function calls:
 32294 ;;		Nothing
 32295 ;; This function is called by:
 32296 ;;		_wr1RegCompleteHandler
 32297 ;;		_i2c_writeNBytes
 32298 ;;		_rd1RegCompleteHandler
 32299 ;;		_rd2RegCompleteHandler
 32300 ;;		_wr2RegCompleteHandler
 32301 ;;		_rdBlkRegCompleteHandler
 32302 ;;		_i2c_readDataBlock
 32303 ;;		_I2C1_Read1ByteRegister
 32304 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32305 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32306 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32307 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32308 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32309 ;; This function uses a non-reentrant model
 32310 ;;
 32311                           
 32312                           	psect	text175
 32313  008F68                     __ptext175:
 32314                           	callstack 0
 32315  008F68                     _I2C1_SetBuffer:
 32316                           	callstack 21
 32317                           
 32318                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 32319                           
 32320                           ;incstack = 0
 32321  008F68  0102               	movlb	2	; () banked
 32322  008F6A  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 32323  008F6C  0012               	return	
 32324                           
 32325                           ; BSR set to: 2
 32326                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 32327  008F6E  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 32328  008F72  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 32329                           
 32330                           ; BSR set to: 2
 32331                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 32332  008F76  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 32333  008F7A  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 32334                           
 32335                           ; BSR set to: 2
 32336                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 32337  008F7E  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 32338                           
 32339                           ; BSR set to: 2
 32340  008F80  0012               	return		;funcret
 32341  008F82                     __end_of_I2C1_SetBuffer:
 32342                           	callstack 0
 32343                           
 32344 ;; *************** function _I2C1_MasterStop *****************
 32345 ;; Defined at:
 32346 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 32347 ;; Parameters:    Size  Location     Type
 32348 ;;		None
 32349 ;; Auto vars:     Size  Location     Type
 32350 ;;		None
 32351 ;; Return value:  Size  Location     Type
 32352 ;;                  1    wreg      void 
 32353 ;; Registers used:
 32354 ;;		None
 32355 ;; Tracked objects:
 32356 ;;		On entry : 0/2
 32357 ;;		On exit  : 0/0
 32358 ;;		Unchanged: 0/0
 32359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32364 ;;Total ram usage:        0 bytes
 32365 ;; Hardware stack levels used: 1
 32366 ;; Hardware stack levels required when called: 4
 32367 ;; This function calls:
 32368 ;;		Nothing
 32369 ;; This function is called by:
 32370 ;;		_I2C1_DO_SEND_STOP
 32371 ;; This function uses a non-reentrant model
 32372 ;;
 32373                           
 32374                           	psect	text176
 32375  009200                     __ptext176:
 32376                           	callstack 0
 32377  009200                     _I2C1_MasterStop:
 32378                           	callstack 15
 32379                           
 32380                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 32381                           
 32382                           ; BSR set to: 2
 32383                           ;incstack = 0
 32384  009200  8497               	bsf	151,2,c	;volatile
 32385  009202  0012               	return		;funcret
 32386  009204                     __end_of_I2C1_MasterStop:
 32387                           	callstack 0
 32388                           
 32389 ;; *************** function _I2C1_MasterEnableRestart *****************
 32390 ;; Defined at:
 32391 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 32392 ;; Parameters:    Size  Location     Type
 32393 ;;		None
 32394 ;; Auto vars:     Size  Location     Type
 32395 ;;		None
 32396 ;; Return value:  Size  Location     Type
 32397 ;;                  1    wreg      void 
 32398 ;; Registers used:
 32399 ;;		None
 32400 ;; Tracked objects:
 32401 ;;		On entry : 0/2
 32402 ;;		On exit  : 0/0
 32403 ;;		Unchanged: 0/0
 32404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32409 ;;Total ram usage:        0 bytes
 32410 ;; Hardware stack levels used: 1
 32411 ;; Hardware stack levels required when called: 4
 32412 ;; This function calls:
 32413 ;;		Nothing
 32414 ;; This function is called by:
 32415 ;;		_I2C1_DO_SEND_RESTART_READ
 32416 ;;		_I2C1_DO_SEND_RESTART_WRITE
 32417 ;;		_I2C1_DO_SEND_RESTART
 32418 ;; This function uses a non-reentrant model
 32419 ;;
 32420                           
 32421                           	psect	text177
 32422  009204                     __ptext177:
 32423                           	callstack 0
 32424  009204                     _I2C1_MasterEnableRestart:
 32425                           	callstack 15
 32426                           
 32427                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 32428                           
 32429                           ;incstack = 0
 32430  009204  8297               	bsf	151,1,c	;volatile
 32431  009206  0012               	return		;funcret
 32432  009208                     __end_of_I2C1_MasterEnableRestart:
 32433                           	callstack 0
 32434                           
 32435 ;; *************** function _I2C1_MasterStart *****************
 32436 ;; Defined at:
 32437 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 32438 ;; Parameters:    Size  Location     Type
 32439 ;;		None
 32440 ;; Auto vars:     Size  Location     Type
 32441 ;;		None
 32442 ;; Return value:  Size  Location     Type
 32443 ;;                  1    wreg      void 
 32444 ;; Registers used:
 32445 ;;		None
 32446 ;; Tracked objects:
 32447 ;;		On entry : 3F/2
 32448 ;;		On exit  : 3F/2
 32449 ;;		Unchanged: 3F/0
 32450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32455 ;;Total ram usage:        0 bytes
 32456 ;; Hardware stack levels used: 1
 32457 ;; Hardware stack levels required when called: 4
 32458 ;; This function calls:
 32459 ;;		Nothing
 32460 ;; This function is called by:
 32461 ;;		_I2C1_MasterOperation
 32462 ;; This function uses a non-reentrant model
 32463 ;;
 32464                           
 32465                           	psect	text178
 32466  009208                     __ptext178:
 32467                           	callstack 0
 32468  009208                     _I2C1_MasterStart:
 32469                           	callstack 19
 32470                           
 32471                           ; BSR set to: 2
 32472                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 32473                           
 32474                           ;incstack = 0
 32475  009208  8097               	bsf	151,0,c	;volatile
 32476                           
 32477                           ; BSR set to: 2
 32478  00920A  0012               	return		;funcret
 32479  00920C                     __end_of_I2C1_MasterStart:
 32480                           	callstack 0
 32481                           
 32482 ;; *************** function _I2C1_Close *****************
 32483 ;; Defined at:
 32484 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 32485 ;; Parameters:    Size  Location     Type
 32486 ;;		None
 32487 ;; Auto vars:     Size  Location     Type
 32488 ;;  returnValue     1   15[COMRAM] enum E355
 32489 ;; Return value:  Size  Location     Type
 32490 ;;                  1    wreg      enum E355
 32491 ;; Registers used:
 32492 ;;		wreg, status,2, cstack
 32493 ;; Tracked objects:
 32494 ;;		On entry : 0/2
 32495 ;;		On exit  : 33/2
 32496 ;;		Unchanged: 0/0
 32497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32502 ;;Total ram usage:        1 bytes
 32503 ;; Hardware stack levels used: 1
 32504 ;; Hardware stack levels required when called: 5
 32505 ;; This function calls:
 32506 ;;		_I2C1_MasterClearIrq
 32507 ;;		_I2C1_MasterClose
 32508 ;;		_I2C1_MasterDisableIrq
 32509 ;; This function is called by:
 32510 ;;		_i2c_writeNBytes
 32511 ;;		_i2c_readDataBlock
 32512 ;;		_I2C1_Read1ByteRegister
 32513 ;; This function uses a non-reentrant model
 32514 ;;
 32515                           
 32516                           	psect	text179
 32517  008E4C                     __ptext179:
 32518                           	callstack 0
 32519  008E4C                     _I2C1_Close:
 32520                           	callstack 20
 32521                           
 32522                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 32523                           
 32524                           ; BSR set to: 2
 32525                           ;incstack = 0
 32526  008E4C  0E01               	movlw	1
 32527  008E4E  6E10               	movwf	I2C1_Close@returnValue^0,c
 32528                           
 32529                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 32530  008E50  0102               	movlb	2	; () banked
 32531  008E52  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 32532  008E54  D00A               	goto	l19279
 32533                           
 32534                           ; BSR set to: 2
 32535                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 32536  008E56  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 32537                           
 32538                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 32539  008E58  6958               	setf	(_I2C1_Status+28)& (0+255),b
 32540                           
 32541                           ; BSR set to: 2
 32542                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 32543  008E5A  ECE9  F048         	call	_I2C1_MasterClearIrq	;wreg free
 32544                           
 32545                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 32546  008E5E  EC06  F049         	call	_I2C1_MasterDisableIrq	;wreg free
 32547                           
 32548                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 32549  008E62  EC08  F049         	call	_I2C1_MasterClose	;wreg free
 32550                           
 32551                           ; BSR set to: 14
 32552                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 32553  008E66  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 32554  008E6A                     l19279:
 32555                           
 32556                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 32557  008E6A  5010               	movf	I2C1_Close@returnValue^0,w,c
 32558  008E6C  0012               	return		;funcret
 32559  008E6E                     __end_of_I2C1_Close:
 32560                           	callstack 0
 32561                           
 32562 ;; *************** function _I2C1_MasterDisableIrq *****************
 32563 ;; Defined at:
 32564 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 32565 ;; Parameters:    Size  Location     Type
 32566 ;;		None
 32567 ;; Auto vars:     Size  Location     Type
 32568 ;;		None
 32569 ;; Return value:  Size  Location     Type
 32570 ;;                  1    wreg      void 
 32571 ;; Registers used:
 32572 ;;		None
 32573 ;; Tracked objects:
 32574 ;;		On entry : 3F/E
 32575 ;;		On exit  : 3F/E
 32576 ;;		Unchanged: 0/0
 32577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32582 ;;Total ram usage:        0 bytes
 32583 ;; Hardware stack levels used: 1
 32584 ;; Hardware stack levels required when called: 4
 32585 ;; This function calls:
 32586 ;;		Nothing
 32587 ;; This function is called by:
 32588 ;;		_I2C1_Close
 32589 ;; This function uses a non-reentrant model
 32590 ;;
 32591                           
 32592                           	psect	text180
 32593  00920C                     __ptext180:
 32594                           	callstack 0
 32595  00920C                     _I2C1_MasterDisableIrq:
 32596                           	callstack 20
 32597                           
 32598                           ; BSR set to: 14
 32599                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 32600                           
 32601                           ;incstack = 0
 32602  00920C  91C5               	bcf	197,0,b	;volatile
 32603                           
 32604                           ; BSR set to: 14
 32605  00920E  0012               	return		;funcret
 32606  009210                     __end_of_I2C1_MasterDisableIrq:
 32607                           	callstack 0
 32608                           
 32609 ;; *************** function _I2C1_MasterClose *****************
 32610 ;; Defined at:
 32611 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 32612 ;; Parameters:    Size  Location     Type
 32613 ;;		None
 32614 ;; Auto vars:     Size  Location     Type
 32615 ;;		None
 32616 ;; Return value:  Size  Location     Type
 32617 ;;                  1    wreg      void 
 32618 ;; Registers used:
 32619 ;;		None
 32620 ;; Tracked objects:
 32621 ;;		On entry : 3F/E
 32622 ;;		On exit  : 3F/E
 32623 ;;		Unchanged: 3F/0
 32624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32629 ;;Total ram usage:        0 bytes
 32630 ;; Hardware stack levels used: 1
 32631 ;; Hardware stack levels required when called: 4
 32632 ;; This function calls:
 32633 ;;		Nothing
 32634 ;; This function is called by:
 32635 ;;		_I2C1_Close
 32636 ;; This function uses a non-reentrant model
 32637 ;;
 32638                           
 32639                           	psect	text181
 32640  009210                     __ptext181:
 32641                           	callstack 0
 32642  009210                     _I2C1_MasterClose:
 32643                           	callstack 20
 32644                           
 32645                           ; BSR set to: 14
 32646                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 32647                           
 32648                           ; BSR set to: 14
 32649                           ;incstack = 0
 32650  009210  9A96               	bcf	150,5,c	;volatile
 32651                           
 32652                           ; BSR set to: 14
 32653  009212  0012               	return		;funcret
 32654  009214                     __end_of_I2C1_MasterClose:
 32655                           	callstack 0
 32656                           
 32657 ;; *************** function _I2C1_MasterClearIrq *****************
 32658 ;; Defined at:
 32659 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 32660 ;; Parameters:    Size  Location     Type
 32661 ;;		None
 32662 ;; Auto vars:     Size  Location     Type
 32663 ;;		None
 32664 ;; Return value:  Size  Location     Type
 32665 ;;                  1    wreg      void 
 32666 ;; Registers used:
 32667 ;;		None
 32668 ;; Tracked objects:
 32669 ;;		On entry : 33/2
 32670 ;;		On exit  : 3F/E
 32671 ;;		Unchanged: 0/0
 32672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32677 ;;Total ram usage:        0 bytes
 32678 ;; Hardware stack levels used: 1
 32679 ;; Hardware stack levels required when called: 4
 32680 ;; This function calls:
 32681 ;;		Nothing
 32682 ;; This function is called by:
 32683 ;;		_I2C1_Open
 32684 ;;		_I2C1_Close
 32685 ;;		_I2C1_MasterFsm
 32686 ;; This function uses a non-reentrant model
 32687 ;;
 32688                           
 32689                           	psect	text182
 32690  0091D2                     __ptext182:
 32691                           	callstack 0
 32692  0091D2                     _I2C1_MasterClearIrq:
 32693                           	callstack 20
 32694                           
 32695                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 32696                           
 32697                           ; BSR set to: 14
 32698                           ;incstack = 0
 32699  0091D2  010E               	movlb	14	; () banked
 32700  0091D4  91CD               	bcf	205,0,b	;volatile
 32701                           
 32702                           ; BSR set to: 14
 32703  0091D6  0012               	return		;funcret
 32704  0091D8                     __end_of_I2C1_MasterClearIrq:
 32705                           	callstack 0
 32706                           
 32707 ;; *************** function _INTERRUPT_InterruptManager *****************
 32708 ;; Defined at:
 32709 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 32710 ;; Parameters:    Size  Location     Type
 32711 ;;		None
 32712 ;; Auto vars:     Size  Location     Type
 32713 ;;		None
 32714 ;; Return value:  Size  Location     Type
 32715 ;;                  1    wreg      void 
 32716 ;; Registers used:
 32717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32718 ;; Tracked objects:
 32719 ;;		On entry : 0/0
 32720 ;;		On exit  : 0/0
 32721 ;;		Unchanged: 0/0
 32722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32725 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32726 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32727 ;;Total ram usage:        6 bytes
 32728 ;; Hardware stack levels used: 1
 32729 ;; Hardware stack levels required when called: 3
 32730 ;; This function calls:
 32731 ;;		Absolute function
 32732 ;;		_EUSART1_Receive_ISR
 32733 ;;		_EUSART1_Transmit_ISR
 32734 ;;		_TMR0_ISR
 32735 ;;		_TMR1_ISR
 32736 ;;		_TMR2_ISR
 32737 ;; This function is called by:
 32738 ;;		Interrupt level 2
 32739 ;; This function uses a non-reentrant model
 32740 ;;
 32741                           
 32742                           	psect	intcode
 32743  000008                     __pintcode:
 32744                           	callstack 0
 32745  000008                     _INTERRUPT_InterruptManager:
 32746                           	callstack 14
 32747                           
 32748                           ; BSR set to: 14
 32749                           ;incstack = 0
 32750  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 32751  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 32752  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 32753  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 32754  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 32755  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 32756  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 32757                           
 32758                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 32759  000022  010E               	movlb	14	; () banked
 32760  000024  BBC2               	btfsc	194,5,b	;volatile
 32761                           
 32762                           ; BSR set to: 14
 32763  000026  ABCA               	btfss	202,5,b	;volatile
 32764  000028  D003               	goto	i2l867
 32765                           
 32766                           ; BSR set to: 14
 32767                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 32768  00002A  ECCC  F046         	call	_TMR0_ISR	;wreg free
 32769                           
 32770                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 32771  00002E  D028               	goto	i2l873
 32772  000030                     i2l867:
 32773                           
 32774                           ; BSR set to: 14
 32775  000030  ACF2               	btfss	242,6,c	;volatile
 32776  000032  D026               	goto	i2l873
 32777                           
 32778                           ; BSR set to: 14
 32779                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 32780  000034  B9C5               	btfsc	197,4,b	;volatile
 32781                           
 32782                           ; BSR set to: 14
 32783  000036  A9CD               	btfss	205,4,b	;volatile
 32784  000038  D009               	goto	i2l870
 32785                           
 32786                           ; BSR set to: 14
 32787                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 32788  00003A  D801               	call	i2u2162_48
 32789  00003C  D021               	goto	i2l873
 32790  00003E                     i2u2162_48:
 32791  00003E  0005               	push	
 32792  000040  6EFA               	movwf	pclath,c
 32793  000042  0102               	movlb	2	; () banked
 32794  000044  51EB               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 32795  000046  6EFD               	movwf	tosl,c
 32796  000048  51EC               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 32797  00004A  D00B               	goto	L112
 32798  00004C                     i2l870:
 32799                           
 32800                           ; BSR set to: 14
 32801  00004C  BBC5               	btfsc	197,5,b	;volatile
 32802                           
 32803                           ; BSR set to: 14
 32804  00004E  ABCD               	btfss	205,5,b	;volatile
 32805  000050  D00C               	goto	i2l872
 32806                           
 32807                           ; BSR set to: 14
 32808                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 32809  000052  D801               	call	i2u2165_48
 32810  000054  D015               	goto	i2l873
 32811  000056                     i2u2165_48:
 32812  000056  0005               	push	
 32813  000058  6EFA               	movwf	pclath,c
 32814  00005A  0102               	movlb	2	; () banked
 32815  00005C  51E9               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 32816  00005E  6EFD               	movwf	tosl,c
 32817  000060  51EA               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 32818  000062                     L112:
 32819  000062  6EFE               	movwf	tosh,c
 32820  000064  6AFF               	clrf	tosu,c
 32821  000066  50FA               	movf	pclath,w,c
 32822  000068  0012               	return		;indir
 32823  00006A                     i2l872:
 32824                           
 32825                           ; BSR set to: 14
 32826  00006A  B1C6               	btfsc	198,0,b	;volatile
 32827                           
 32828                           ; BSR set to: 14
 32829  00006C  A1CE               	btfss	206,0,b	;volatile
 32830  00006E  D003               	goto	i2l874
 32831                           
 32832                           ; BSR set to: 14
 32833                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 32834  000070  EC5B  F044         	call	_TMR1_ISR	;wreg free
 32835                           
 32836                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 32837  000074  D005               	goto	i2l873
 32838  000076                     i2l874:
 32839                           
 32840                           ; BSR set to: 14
 32841  000076  B3C6               	btfsc	198,1,b	;volatile
 32842                           
 32843                           ; BSR set to: 14
 32844  000078  A3CE               	btfss	206,1,b	;volatile
 32845  00007A  D002               	goto	i2l873
 32846                           
 32847                           ; BSR set to: 14
 32848                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 32849  00007C  ECAC  F02F         	call	_TMR2_ISR	;wreg free
 32850  000080                     i2l873:
 32851                           
 32852                           ; BSR set to: 14
 32853  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 32854  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 32855  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 32856  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 32857  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 32858  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 32859  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 32860  00009A  0011               	retfie		f
 32861  00009C                     __end_of_INTERRUPT_InterruptManager:
 32862                           	callstack 0
 32863                           
 32864 ;; *************** function _TMR2_ISR *****************
 32865 ;; Defined at:
 32866 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 32867 ;; Parameters:    Size  Location     Type
 32868 ;;		None
 32869 ;; Auto vars:     Size  Location     Type
 32870 ;;		None
 32871 ;; Return value:  Size  Location     Type
 32872 ;;                  1    wreg      void 
 32873 ;; Registers used:
 32874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32875 ;; Tracked objects:
 32876 ;;		On entry : 3F/E
 32877 ;;		On exit  : 0/0
 32878 ;;		Unchanged: 0/0
 32879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32884 ;;Total ram usage:        0 bytes
 32885 ;; Hardware stack levels used: 1
 32886 ;; Hardware stack levels required when called: 2
 32887 ;; This function calls:
 32888 ;;		Absolute function
 32889 ;;		_ReadADC
 32890 ;;		_TMR2_DefaultInterruptHandler
 32891 ;;		_controlTimeslots
 32892 ;;		_refreshSegment
 32893 ;; This function is called by:
 32894 ;;		_INTERRUPT_InterruptManager
 32895 ;; This function uses a non-reentrant model
 32896 ;;
 32897                           
 32898                           	psect	text184
 32899  005F58                     __ptext184:
 32900                           	callstack 0
 32901  005F58                     _TMR2_ISR:
 32902                           	callstack 14
 32903                           
 32904                           ; BSR set to: 14
 32905                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 32906                           
 32907                           ;incstack = 0
 32908  005F58  93CE               	bcf	206,1,b	;volatile
 32909                           
 32910                           ; BSR set to: 14
 32911                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 32912  005F5A  EC0F  F042         	call	_ReadADC	;wreg free
 32913                           
 32914                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 32915  005F5E  EC0C  F03C         	call	_refreshSegment	;wreg free
 32916                           
 32917                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 32918  005F62  0101               	movlb	1	; () banked
 32919  005F64  519F               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 32920  005F66  A4D8               	btfss	status,2,c
 32921                           
 32922                           ; BSR set to: 1
 32923                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 32924  005F68  079F               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 32925                           
 32926                           ; BSR set to: 1
 32927                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 32928  005F6A  519D               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 32929  005F6C  B4D8               	btfsc	status,2,c
 32930  005F6E  D002               	goto	i2l16231
 32931                           
 32932                           ; BSR set to: 1
 32933                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 32934  005F70  079D               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 32935                           
 32936                           ;mcc_generated_files/tmr2.c: 201:                 }
 32937  005F72  D089               	goto	i2l16303
 32938  005F74                     i2l16231:
 32939                           
 32940                           ; BSR set to: 1
 32941                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 32942  005F74  0E32               	movlw	50
 32943  005F76  6F9D               	movwf	(_ts_system+1)& (0+255),b	;volatile
 32944                           
 32945                           ; BSR set to: 1
 32946                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 32947  005F78  ECD4  F02B         	call	_controlTimeslots	;wreg free
 32948                           
 32949                           ; BSR set to: 1
 32950                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 32951  005F7C  0100               	movlb	0	; () banked
 32952  005F7E  5192               	movf	_Counterchoose& (0+255),w,b
 32953  005F80  A4D8               	btfss	status,2,c
 32954  005F82  D002               	goto	i2l16239
 32955                           
 32956                           ; BSR set to: 0
 32957                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 32958  005F84  0E01               	movlw	1
 32959  005F86  D001               	goto	L113
 32960  005F88                     i2l16239:
 32961                           
 32962                           ; BSR set to: 0
 32963                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 32964  005F88  0E00               	movlw	0
 32965  005F8A                     L113:
 32966  005F8A  6F92               	movwf	_Counterchoose& (0+255),b
 32967                           
 32968                           ; BSR set to: 0
 32969                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 32970                           
 32971                           ;mcc_generated_files/tmr2.c: 217:                                }
 32972  005F8C  0101               	movlb	1	; () banked
 32973  005F8E  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 32974  005F90  A4D8               	btfss	status,2,c
 32975  005F92  D034               	goto	i2l16265
 32976                           
 32977                           ; BSR set to: 1
 32978                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 32979  005F94  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 32980  005F96  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 32981  005F98  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 32982  005F9A  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 32983  005F9C  B4D8               	btfsc	status,2,c
 32984  005F9E  D008               	goto	i2l1266
 32985                           
 32986                           ; BSR set to: 1
 32987  005FA0  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 32988  005FA2  B4D8               	btfsc	status,2,c
 32989  005FA4  D005               	goto	i2l1266
 32990                           
 32991                           ; BSR set to: 1
 32992                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 32993  005FA6  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 32994  005FA8  0E00               	movlw	0
 32995  005FAA  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 32996  005FAC  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 32997  005FAE  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 32998  005FB0                     i2l1266:
 32999                           
 33000                           ; BSR set to: 1
 33001                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 33002  005FB0  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33003  005FB2  A4D8               	btfss	status,2,c
 33004  005FB4  D00E               	goto	i2l16255
 33005                           
 33006                           ; BSR set to: 1
 33007                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 33008  005FB6  057B               	decf	_powerControl_st& (0+255),w,b
 33009  005FB8  A4D8               	btfss	status,2,c
 33010  005FBA  D004               	goto	i2u1835_40
 33011                           
 33012                           ; BSR set to: 1
 33013                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 33014  005FBC  0100               	movlb	0	; () banked
 33015  005FBE  0592               	decf	_Counterchoose& (0+255),w,b
 33016  005FC0  A4D8               	btfss	status,2,c
 33017  005FC2  D061               	goto	i2l16303
 33018  005FC4                     i2u1835_40:
 33019                           
 33020                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 33021  005FC4  0E01               	movlw	1
 33022  005FC6  0101               	movlb	1	; () banked
 33023  005FC8  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33024  005FCA  0E00               	movlw	0
 33025  005FCC  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33026  005FCE  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33027  005FD0  D013               	goto	L114
 33028  005FD2                     i2l16255:
 33029                           
 33030                           ; BSR set to: 1
 33031  005FD2  0E02               	movlw	2
 33032  005FD4  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33033  005FD6  A4D8               	btfss	status,2,c
 33034  005FD8  D056               	goto	i2l16303
 33035                           
 33036                           ; BSR set to: 1
 33037                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 33038  005FDA  057B               	decf	_powerControl_st& (0+255),w,b
 33039  005FDC  A4D8               	btfss	status,2,c
 33040  005FDE  D004               	goto	i2u1838_40
 33041                           
 33042                           ; BSR set to: 1
 33043                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 33044  005FE0  0100               	movlb	0	; () banked
 33045  005FE2  0592               	decf	_Counterchoose& (0+255),w,b
 33046  005FE4  A4D8               	btfss	status,2,c
 33047  005FE6  D04F               	goto	i2l16303
 33048  005FE8                     i2u1838_40:
 33049                           
 33050                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 33051  005FE8  0EFF               	movlw	255
 33052  005FEA  0101               	movlb	1	; () banked
 33053  005FEC  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33054  005FEE  0EFF               	movlw	255
 33055  005FF0  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33056  005FF2  0EFF               	movlw	255
 33057  005FF4  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33058  005FF6  0EFF               	movlw	255
 33059  005FF8                     L114:
 33060  005FF8  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 33061                           
 33062                           ;mcc_generated_files/tmr2.c: 263:                            }
 33063  005FFA  D045               	goto	i2l16303
 33064  005FFC                     i2l16265:
 33065                           
 33066                           ; BSR set to: 1
 33067                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 33068  005FFC  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 33069  005FFE  A4D8               	btfss	status,2,c
 33070  006000  D01C               	goto	i2l1277
 33071                           
 33072                           ; BSR set to: 1
 33073                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 33074  006002  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33075  006004  A4D8               	btfss	status,2,c
 33076  006006  D00B               	goto	i2l16275
 33077                           
 33078                           ; BSR set to: 1
 33079                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33080  006008  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33081  00600A  B4D8               	btfsc	status,2,c
 33082  00600C  D016               	goto	i2l1277
 33083                           
 33084                           ; BSR set to: 1
 33085                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 33086  00600E  0E01               	movlw	1
 33087  006010  0100               	movlb	0	; () banked
 33088  006012  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33089  006014  0E00               	movlw	0
 33090  006016  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33091  006018  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33092  00601A  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 33093  00601C  D00E               	goto	i2l1277
 33094  00601E                     i2l16275:
 33095                           
 33096                           ; BSR set to: 1
 33097  00601E  0E02               	movlw	2
 33098  006020  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33099  006022  A4D8               	btfss	status,2,c
 33100  006024  D00A               	goto	i2l1277
 33101                           
 33102                           ; BSR set to: 1
 33103                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33104  006026  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33105  006028  B4D8               	btfsc	status,2,c
 33106  00602A  D007               	goto	i2l1277
 33107                           
 33108                           ; BSR set to: 1
 33109                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 33110  00602C  0E01               	movlw	1
 33111  00602E  0100               	movlb	0	; () banked
 33112  006030  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 33113  006032  0E00               	movlw	0
 33114  006034  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 33115  006036  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 33116  006038  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 33117  00603A                     i2l1277:
 33118                           
 33119                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 33120  00603A  0101               	movlb	1	; () banked
 33121  00603C  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33122  00603E  A4D8               	btfss	status,2,c
 33123  006040  D022               	goto	i2l16303
 33124                           
 33125                           ; BSR set to: 1
 33126  006042  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 33127  006044  A4D8               	btfss	status,2,c
 33128  006046  D01F               	goto	i2l16303
 33129                           
 33130                           ; BSR set to: 1
 33131                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 33132  006048  519C               	movf	_ts_system& (0+255),w,b	;volatile
 33133  00604A  B4D8               	btfsc	status,2,c
 33134  00604C  D002               	goto	i2l16289
 33135                           
 33136                           ; BSR set to: 1
 33137                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 33138  00604E  079C               	decf	_ts_system& (0+255),f,b	;volatile
 33139                           
 33140                           ;mcc_generated_files/tmr2.c: 311:                                            }
 33141  006050  D01A               	goto	i2l16303
 33142  006052                     i2l16289:
 33143                           
 33144                           ; BSR set to: 1
 33145                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 33146  006052  0E0A               	movlw	10
 33147  006054  6F9C               	movwf	_ts_system& (0+255),b	;volatile
 33148                           
 33149                           ; BSR set to: 1
 33150                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 33151  006056  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33152  006058  A4D8               	btfss	status,2,c
 33153  00605A  D009               	goto	i2l16297
 33154                           
 33155                           ; BSR set to: 1
 33156                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 33157  00605C  0100               	movlb	0	; () banked
 33158  00605E  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 33159                           
 33160                           ; BSR set to: 0
 33161                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 33162  006060  0E01               	movlw	1
 33163  006062  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33164  006064  0E00               	movlw	0
 33165  006066  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33166  006068  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33167  00606A  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 33168                           
 33169                           ;mcc_generated_files/tmr2.c: 322:                                                }
 33170  00606C  D00C               	goto	i2l16303
 33171  00606E                     i2l16297:
 33172                           
 33173                           ; BSR set to: 1
 33174  00606E  0E02               	movlw	2
 33175  006070  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33176  006072  A4D8               	btfss	status,2,c
 33177  006074  D008               	goto	i2l16303
 33178                           
 33179                           ; BSR set to: 1
 33180                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 33181  006076  0100               	movlb	0	; () banked
 33182  006078  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 33183                           
 33184                           ; BSR set to: 0
 33185                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 33186  00607A  0E01               	movlw	1
 33187  00607C  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 33188  00607E  0E00               	movlw	0
 33189  006080  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 33190  006082  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 33191  006084  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 33192  006086                     i2l16303:
 33193                           
 33194                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 33195  006086  0102               	movlb	2	; () banked
 33196  006088  51DB               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33197  00608A  11DC               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33198  00608C  B4D8               	btfsc	status,2,c
 33199  00608E  0012               	return	
 33200                           
 33201                           ; BSR set to: 2
 33202                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 33203  006090  D801               	call	i2u1850_48
 33204  006092  0012               	return	
 33205  006094                     i2u1850_48:
 33206  006094  0005               	push	
 33207  006096  6EFA               	movwf	pclath,c
 33208  006098  51DB               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33209  00609A  6EFD               	movwf	tosl,c
 33210  00609C  51DC               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33211  00609E  6EFE               	movwf	tosh,c
 33212  0060A0  6AFF               	clrf	tosu,c
 33213  0060A2  50FA               	movf	pclath,w,c
 33214  0060A4  0012               	return		;indir
 33215  0060A6                     __end_of_TMR2_ISR:
 33216                           	callstack 0
 33217                           
 33218 ;; *************** function _refreshSegment *****************
 33219 ;; Defined at:
 33220 ;;		line 50 in file "outputs_MC50.c"
 33221 ;; Parameters:    Size  Location     Type
 33222 ;;		None
 33223 ;; Auto vars:     Size  Location     Type
 33224 ;;		None
 33225 ;; Return value:  Size  Location     Type
 33226 ;;                  1    wreg      void 
 33227 ;; Registers used:
 33228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33229 ;; Tracked objects:
 33230 ;;		On entry : 31/E
 33231 ;;		On exit  : 3E/0
 33232 ;;		Unchanged: 0/0
 33233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33238 ;;Total ram usage:        0 bytes
 33239 ;; Hardware stack levels used: 1
 33240 ;; Hardware stack levels required when called: 1
 33241 ;; This function calls:
 33242 ;;		_Segments_Set
 33243 ;; This function is called by:
 33244 ;;		_TMR2_ISR
 33245 ;; This function uses a non-reentrant model
 33246 ;;
 33247                           
 33248                           	psect	text185
 33249  007818                     __ptext185:
 33250                           	callstack 0
 33251  007818                     _refreshSegment:
 33252                           	callstack 14
 33253                           
 33254                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 33255                           
 33256                           ;incstack = 0
 33257  007818  0100               	movlb	0	; () banked
 33258  00781A  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 33259  00781C  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 33260  00781E  B4D8               	btfsc	status,2,c
 33261  007820  D003               	goto	i2u1453_40
 33262                           
 33263                           ; BSR set to: 0
 33264  007822  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 33265  007824  A4D8               	btfss	status,2,c
 33266  007826  D01F               	goto	i2l2128
 33267  007828                     i2u1453_40:
 33268                           
 33269                           ; BSR set to: 0
 33270                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 33271  007828  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 33272  00782A  A4D8               	btfss	status,2,c
 33273  00782C  D00D               	goto	i2l2123
 33274                           
 33275                           ; BSR set to: 0
 33276                           
 33277                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 33278  00782E  9085               	bcf	133,0,c	;volatile
 33279                           
 33280                           ; BSR set to: 0
 33281                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 33282  007830  0ED2               	movlw	low _DispTable
 33283  007832  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 33284  007834  6ED9               	movwf	fsr2l,c
 33285  007836  6ADA               	clrf	fsr2h,c
 33286  007838  0E03               	movlw	high _DispTable
 33287  00783A  22DA               	addwfc	fsr2h,f,c
 33288  00783C  50DF               	movf	indf2,w,c
 33289  00783E  EC70  F048         	call	_Segments_Set
 33290  007842  8285               	bsf	133,1,c	;volatile
 33291                           
 33292                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 33293  007844  0E00               	movlw	0
 33294  007846  D00C               	goto	L115
 33295  007848                     i2l2123:
 33296                           
 33297                           ; BSR set to: 0
 33298  007848  9285               	bcf	133,1,c	;volatile
 33299                           
 33300                           ; BSR set to: 0
 33301                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 33302  00784A  0ED2               	movlw	low _DispTable
 33303  00784C  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 33304  00784E  6ED9               	movwf	fsr2l,c
 33305  007850  6ADA               	clrf	fsr2h,c
 33306  007852  0E03               	movlw	high _DispTable
 33307  007854  22DA               	addwfc	fsr2h,f,c
 33308  007856  50DF               	movf	indf2,w,c
 33309  007858  EC70  F048         	call	_Segments_Set
 33310  00785C  8085               	bsf	133,0,c	;volatile
 33311                           
 33312                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 33313  00785E  0E01               	movlw	1
 33314  007860                     L115:
 33315  007860  0100               	movlb	0	; () banked
 33316  007862  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 33317  007864  D002               	goto	i2l14323
 33318  007866                     i2l2128:
 33319                           
 33320                           ; BSR set to: 0
 33321  007866  9085               	bcf	133,0,c	;volatile
 33322                           
 33323                           ; BSR set to: 0
 33324                           
 33325                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 33326  007868  9285               	bcf	133,1,c	;volatile
 33327  00786A                     i2l14323:
 33328                           
 33329                           ; BSR set to: 0
 33330                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 33331  00786A  0101               	movlb	1	; () banked
 33332  00786C  BFA7               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 33333  00786E  D005               	goto	i2u1455_40
 33334  007870  51A7               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 33335  007872  E114               	bnz	i2l2135
 33336  007874  05A6               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 33337  007876  B0D8               	btfsc	status,0,c
 33338  007878  0012               	return	
 33339  00787A                     i2u1455_40:
 33340                           
 33341                           ; BSR set to: 1
 33342  00787A  0100               	movlb	0	; () banked
 33343  00787C  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 33344  00787E  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 33345  007880  B4D8               	btfsc	status,2,c
 33346  007882  0012               	return	
 33347                           
 33348                           ; BSR set to: 0
 33349                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 33350  007884  C075  F1A6         	movff	_dispStruct+3,_ts_system+10	;volatile
 33351  007888  C076  F1A7         	movff	_dispStruct+4,_ts_system+11	;volatile
 33352                           
 33353                           ; BSR set to: 0
 33354                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 33355  00788C  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 33356  00788E  A4D8               	btfss	status,2,c
 33357  007890  D003               	goto	i2l14333
 33358                           
 33359                           ; BSR set to: 0
 33360                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 33361  007892  0E00               	movlw	0
 33362  007894  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 33363                           
 33364                           ;outputs_MC50.c: 85:         }
 33365  007896  0012               	return	
 33366  007898                     i2l14333:
 33367                           
 33368                           ; BSR set to: 0
 33369                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 33370  007898  0E01               	movlw	1
 33371  00789A  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 33372  00789C                     i2l2135:
 33373  00789C  0012               	return		;funcret
 33374  00789E                     __end_of_refreshSegment:
 33375                           	callstack 0
 33376                           
 33377 ;; *************** function _Segments_Set *****************
 33378 ;; Defined at:
 33379 ;;		line 93 in file "outputs_MC50.c"
 33380 ;; Parameters:    Size  Location     Type
 33381 ;;  value           1    wreg     unsigned char 
 33382 ;; Auto vars:     Size  Location     Type
 33383 ;;  value           1    0[COMRAM] unsigned char 
 33384 ;; Return value:  Size  Location     Type
 33385 ;;                  1    wreg      void 
 33386 ;; Registers used:
 33387 ;;		wreg, status,2, status,0
 33388 ;; Tracked objects:
 33389 ;;		On entry : 3F/0
 33390 ;;		On exit  : 0/0
 33391 ;;		Unchanged: 0/0
 33392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33394 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33396 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33397 ;;Total ram usage:        1 bytes
 33398 ;; Hardware stack levels used: 1
 33399 ;; This function calls:
 33400 ;;		Nothing
 33401 ;; This function is called by:
 33402 ;;		_refreshSegment
 33403 ;; This function uses a non-reentrant model
 33404 ;;
 33405                           
 33406                           	psect	text186
 33407  0090E0                     __ptext186:
 33408                           	callstack 0
 33409  0090E0                     _Segments_Set:
 33410                           	callstack 14
 33411                           
 33412                           ;incstack = 0
 33413                           ;Segments_Set@value stored from wreg
 33414  0090E0  6E01               	movwf	Segments_Set@value^0,c
 33415                           
 33416                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 33417  0090E2  0E80               	movlw	128
 33418  0090E4  1686               	andwf	134,f,c	;volatile
 33419                           
 33420                           ;outputs_MC50.c: 96:    LATD |= value;
 33421  0090E6  5001               	movf	Segments_Set@value^0,w,c	;volatile
 33422  0090E8  1286               	iorwf	134,f,c	;volatile
 33423  0090EA  0012               	return		;funcret
 33424  0090EC                     __end_of_Segments_Set:
 33425                           	callstack 0
 33426                           
 33427 ;; *************** function _controlTimeslots *****************
 33428 ;; Defined at:
 33429 ;;		line 190 in file "main_MC50.c"
 33430 ;; Parameters:    Size  Location     Type
 33431 ;;		None
 33432 ;; Auto vars:     Size  Location     Type
 33433 ;;		None
 33434 ;; Return value:  Size  Location     Type
 33435 ;;                  1    wreg      void 
 33436 ;; Registers used:
 33437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33438 ;; Tracked objects:
 33439 ;;		On entry : 3F/1
 33440 ;;		On exit  : 3F/1
 33441 ;;		Unchanged: 0/0
 33442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33447 ;;Total ram usage:        0 bytes
 33448 ;; Hardware stack levels used: 1
 33449 ;; Hardware stack levels required when called: 1
 33450 ;; This function calls:
 33451 ;;		_decrementTimeslot
 33452 ;; This function is called by:
 33453 ;;		_TMR2_ISR
 33454 ;; This function uses a non-reentrant model
 33455 ;;
 33456                           
 33457                           	psect	text187
 33458  0057A8                     __ptext187:
 33459                           	callstack 0
 33460  0057A8                     _controlTimeslots:
 33461                           	callstack 14
 33462                           
 33463                           ; BSR set to: 1
 33464                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 33465                           
 33466                           ;incstack = 0
 33467  0057A8  0EA4               	movlw	low (_ts_system+8)
 33468  0057AA  6E01               	movwf	decrementTimeslot@ts^0,c
 33469  0057AC  0E01               	movlw	high (_ts_system+8)
 33470  0057AE  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33471  0057B0  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33472                           
 33473                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 33474  0057B4  0EE2               	movlw	low (_ts_system+70)
 33475  0057B6  6E01               	movwf	decrementTimeslot@ts^0,c
 33476  0057B8  0E01               	movlw	high (_ts_system+70)
 33477  0057BA  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33478  0057BC  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33479                           
 33480                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 33481  0057C0  0EA6               	movlw	low (_ts_system+10)
 33482  0057C2  6E01               	movwf	decrementTimeslot@ts^0,c
 33483  0057C4  0E01               	movlw	high (_ts_system+10)
 33484  0057C6  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33485  0057C8  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33486                           
 33487                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 33488  0057CC  0EA8               	movlw	low (_ts_system+12)
 33489  0057CE  6E01               	movwf	decrementTimeslot@ts^0,c
 33490  0057D0  0E01               	movlw	high (_ts_system+12)
 33491  0057D2  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33492  0057D4  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33493                           
 33494                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 33495  0057D8  0EAA               	movlw	low (_ts_system+14)
 33496  0057DA  6E01               	movwf	decrementTimeslot@ts^0,c
 33497  0057DC  0E01               	movlw	high (_ts_system+14)
 33498  0057DE  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33499  0057E0  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33500                           
 33501                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 33502  0057E4  0EAC               	movlw	low (_ts_system+16)
 33503  0057E6  6E01               	movwf	decrementTimeslot@ts^0,c
 33504  0057E8  0E01               	movlw	high (_ts_system+16)
 33505  0057EA  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33506  0057EC  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33507                           
 33508                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 33509  0057F0  0EAE               	movlw	low (_ts_system+18)
 33510  0057F2  6E01               	movwf	decrementTimeslot@ts^0,c
 33511  0057F4  0E01               	movlw	high (_ts_system+18)
 33512  0057F6  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33513  0057F8  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33514                           
 33515                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 33516  0057FC  0EB0               	movlw	low (_ts_system+20)
 33517  0057FE  6E01               	movwf	decrementTimeslot@ts^0,c
 33518  005800  0E01               	movlw	high (_ts_system+20)
 33519  005802  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33520  005804  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33521                           
 33522                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 33523  005808  0EB2               	movlw	low (_ts_system+22)
 33524  00580A  6E01               	movwf	decrementTimeslot@ts^0,c
 33525  00580C  0E01               	movlw	high (_ts_system+22)
 33526  00580E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33527  005810  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33528                           
 33529                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 33530  005814  0EB6               	movlw	low (_ts_system+26)
 33531  005816  6E01               	movwf	decrementTimeslot@ts^0,c
 33532  005818  0E01               	movlw	high (_ts_system+26)
 33533  00581A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33534  00581C  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33535                           
 33536                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 33537  005820  0EB8               	movlw	low (_ts_system+28)
 33538  005822  6E01               	movwf	decrementTimeslot@ts^0,c
 33539  005824  0E01               	movlw	high (_ts_system+28)
 33540  005826  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33541  005828  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33542                           
 33543                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 33544  00582C  0EBA               	movlw	low (_ts_system+30)
 33545  00582E  6E01               	movwf	decrementTimeslot@ts^0,c
 33546  005830  0E01               	movlw	high (_ts_system+30)
 33547  005832  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33548  005834  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33549                           
 33550                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 33551  005838  0EC0               	movlw	low (_ts_system+36)
 33552  00583A  6E01               	movwf	decrementTimeslot@ts^0,c
 33553  00583C  0E01               	movlw	high (_ts_system+36)
 33554  00583E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33555  005840  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33556                           
 33557                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 33558  005844  0EC2               	movlw	low (_ts_system+38)
 33559  005846  6E01               	movwf	decrementTimeslot@ts^0,c
 33560  005848  0E01               	movlw	high (_ts_system+38)
 33561  00584A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33562  00584C  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33563                           
 33564                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 33565  005850  0EC4               	movlw	low (_ts_system+40)
 33566  005852  6E01               	movwf	decrementTimeslot@ts^0,c
 33567  005854  0E01               	movlw	high (_ts_system+40)
 33568  005856  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33569  005858  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33570                           
 33571                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 33572  00585C  0EC6               	movlw	low (_ts_system+42)
 33573  00585E  6E01               	movwf	decrementTimeslot@ts^0,c
 33574  005860  0E01               	movlw	high (_ts_system+42)
 33575  005862  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33576  005864  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33577                           
 33578                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 33579  005868  0EC8               	movlw	low (_ts_system+44)
 33580  00586A  6E01               	movwf	decrementTimeslot@ts^0,c
 33581  00586C  0E01               	movlw	high (_ts_system+44)
 33582  00586E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33583  005870  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33584                           
 33585                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 33586  005874  0ECA               	movlw	low (_ts_system+46)
 33587  005876  6E01               	movwf	decrementTimeslot@ts^0,c
 33588  005878  0E01               	movlw	high (_ts_system+46)
 33589  00587A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33590  00587C  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33591                           
 33592                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 33593  005880  0ECC               	movlw	low (_ts_system+48)
 33594  005882  6E01               	movwf	decrementTimeslot@ts^0,c
 33595  005884  0E01               	movlw	high (_ts_system+48)
 33596  005886  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33597  005888  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33598                           
 33599                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 33600  00588C  0EDE               	movlw	low (_ts_system+66)
 33601  00588E  6E01               	movwf	decrementTimeslot@ts^0,c
 33602  005890  0E01               	movlw	high (_ts_system+66)
 33603  005892  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33604  005894  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33605                           
 33606                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 33607  005898  0EE0               	movlw	low (_ts_system+68)
 33608  00589A  6E01               	movwf	decrementTimeslot@ts^0,c
 33609  00589C  0E01               	movlw	high (_ts_system+68)
 33610  00589E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33611  0058A0  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33612                           
 33613                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 33614  0058A4  0100               	movlb	0	; () banked
 33615  0058A6  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 33616  0058A8  B4D8               	btfsc	status,2,c
 33617  0058AA  D008               	goto	i2u1459_40
 33618                           
 33619                           ; BSR set to: 0
 33620  0058AC  0101               	movlb	1	; () banked
 33621  0058AE  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 33622  0058B0  D005               	goto	i2u1459_40
 33623  0058B2  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 33624  0058B4  E109               	bnz	i2l2019
 33625  0058B6  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 33626  0058B8  B0D8               	btfsc	status,0,c
 33627  0058BA  D006               	goto	i2l2019
 33628  0058BC                     i2u1459_40:
 33629                           
 33630                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 33631  0058BC  0ECE               	movlw	low (_ts_system+50)
 33632  0058BE  6E01               	movwf	decrementTimeslot@ts^0,c
 33633  0058C0  0E01               	movlw	high (_ts_system+50)
 33634  0058C2  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33635  0058C4  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33636  0058C8                     i2l2019:
 33637                           
 33638                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 33639  0058C8  0ED0               	movlw	low (_ts_system+52)
 33640  0058CA  6E01               	movwf	decrementTimeslot@ts^0,c
 33641  0058CC  0E01               	movlw	high (_ts_system+52)
 33642  0058CE  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33643  0058D0  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33644                           
 33645                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 33646  0058D4  0ED2               	movlw	low (_ts_system+54)
 33647  0058D6  6E01               	movwf	decrementTimeslot@ts^0,c
 33648  0058D8  0E01               	movlw	high (_ts_system+54)
 33649  0058DA  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33650  0058DC  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33651                           
 33652                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 33653  0058E0  0ED4               	movlw	low (_ts_system+56)
 33654  0058E2  6E01               	movwf	decrementTimeslot@ts^0,c
 33655  0058E4  0E01               	movlw	high (_ts_system+56)
 33656  0058E6  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33657  0058E8  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33658                           
 33659                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 33660  0058EC  0ED6               	movlw	low (_ts_system+58)
 33661  0058EE  6E01               	movwf	decrementTimeslot@ts^0,c
 33662  0058F0  0E01               	movlw	high (_ts_system+58)
 33663  0058F2  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33664  0058F4  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33665                           
 33666                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 33667  0058F8  0ED8               	movlw	low (_ts_system+60)
 33668  0058FA  6E01               	movwf	decrementTimeslot@ts^0,c
 33669  0058FC  0E01               	movlw	high (_ts_system+60)
 33670  0058FE  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33671  005900  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33672                           
 33673                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 33674  005904  0EDA               	movlw	low (_ts_system+62)
 33675  005906  6E01               	movwf	decrementTimeslot@ts^0,c
 33676  005908  0E01               	movlw	high (_ts_system+62)
 33677  00590A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33678  00590C  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33679                           
 33680                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 33681  005910  0EDC               	movlw	low (_ts_system+64)
 33682  005912  6E01               	movwf	decrementTimeslot@ts^0,c
 33683  005914  0E01               	movlw	high (_ts_system+64)
 33684  005916  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33685  005918  EC6A  F046         	call	_decrementTimeslot	;wreg free
 33686                           
 33687                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 33688  00591C  0101               	movlb	1	; () banked
 33689  00591E  BFBF               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 33690  005920  0012               	return	
 33691  005922  51BF               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 33692  005924  11BE               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 33693  005926  11BD               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 33694  005928  E103               	bnz	i2u1460_40
 33695  00592A  05BC               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 33696  00592C  A0D8               	btfss	status,0,c
 33697  00592E  0012               	return	
 33698  005930                     i2u1460_40:
 33699                           
 33700                           ; BSR set to: 1
 33701                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 33702  005930  0EFF               	movlw	255
 33703  005932  27BC               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 33704  005934  0EFF               	movlw	255
 33705  005936  23BD               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 33706  005938  0EFF               	movlw	255
 33707  00593A  23BE               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 33708  00593C  0EFF               	movlw	255
 33709  00593E  23BF               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 33710                           
 33711                           ; BSR set to: 1
 33712  005940  0012               	return		;funcret
 33713  005942                     __end_of_controlTimeslots:
 33714                           	callstack 0
 33715                           
 33716 ;; *************** function _decrementTimeslot *****************
 33717 ;; Defined at:
 33718 ;;		line 246 in file "main_MC50.c"
 33719 ;; Parameters:    Size  Location     Type
 33720 ;;  ts              2    0[COMRAM] PTR int 
 33721 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 33722 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 33723 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 33724 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 33725 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 33726 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 33727 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 33728 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 33729 ;; Auto vars:     Size  Location     Type
 33730 ;;		None
 33731 ;; Return value:  Size  Location     Type
 33732 ;;                  1    wreg      void 
 33733 ;; Registers used:
 33734 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33735 ;; Tracked objects:
 33736 ;;		On entry : 0/1
 33737 ;;		On exit  : 0/0
 33738 ;;		Unchanged: 0/0
 33739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33742 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33744 ;;Total ram usage:        4 bytes
 33745 ;; Hardware stack levels used: 1
 33746 ;; This function calls:
 33747 ;;		Nothing
 33748 ;; This function is called by:
 33749 ;;		_controlTimeslots
 33750 ;; This function uses a non-reentrant model
 33751 ;;
 33752                           
 33753                           	psect	text188
 33754  008CD4                     __ptext188:
 33755                           	callstack 0
 33756  008CD4                     _decrementTimeslot:
 33757                           	callstack 14
 33758                           
 33759                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 33760                           
 33761                           ; BSR set to: 1
 33762                           ;incstack = 0
 33763  008CD4  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 33764  008CD8  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 33765  008CDC  0E01               	movlw	1
 33766  008CDE  BEDB               	btfsc	plusw2,7,c
 33767  008CE0  0012               	return	
 33768  008CE2  0E01               	movlw	1
 33769  008CE4  50DB               	movf	plusw2,w,c
 33770  008CE6  E103               	bnz	i2u1300_40
 33771  008CE8  04DE               	decf	postinc2,w,c
 33772  008CEA  A0D8               	btfss	status,0,c
 33773  008CEC  0012               	return	
 33774  008CEE                     i2u1300_40:
 33775                           
 33776                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 33777  008CEE  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 33778  008CF2  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 33779  008CF6  06DE               	decf	postinc2,f,c
 33780  008CF8  0E00               	movlw	0
 33781  008CFA  5ADD               	subwfb	postdec2,f,c
 33782  008CFC  0012               	return		;funcret
 33783  008CFE                     __end_of_decrementTimeslot:
 33784                           	callstack 0
 33785                           
 33786 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 33787 ;; Defined at:
 33788 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 33789 ;; Parameters:    Size  Location     Type
 33790 ;;		None
 33791 ;; Auto vars:     Size  Location     Type
 33792 ;;		None
 33793 ;; Return value:  Size  Location     Type
 33794 ;;                  1    wreg      void 
 33795 ;; Registers used:
 33796 ;;		None
 33797 ;; Tracked objects:
 33798 ;;		On entry : 3F/2
 33799 ;;		On exit  : 3F/2
 33800 ;;		Unchanged: 3F/0
 33801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33806 ;;Total ram usage:        0 bytes
 33807 ;; Hardware stack levels used: 1
 33808 ;; This function calls:
 33809 ;;		Nothing
 33810 ;; This function is called by:
 33811 ;;		_TMR2_Initialize
 33812 ;;		_TMR2_ISR
 33813 ;; This function uses a non-reentrant model
 33814 ;;
 33815                           
 33816                           	psect	text189
 33817  009218                     __ptext189:
 33818                           	callstack 0
 33819  009218                     _TMR2_DefaultInterruptHandler:
 33820                           	callstack 15
 33821                           
 33822                           ; BSR set to: 2
 33823                           
 33824                           ;incstack = 0
 33825  009218  0012               	return		;funcret
 33826  00921A                     __end_of_TMR2_DefaultInterruptHandler:
 33827                           	callstack 0
 33828                           
 33829 ;; *************** function _ReadADC *****************
 33830 ;; Defined at:
 33831 ;;		line 38 in file "controlCurrent_MC50.c"
 33832 ;; Parameters:    Size  Location     Type
 33833 ;;		None
 33834 ;; Auto vars:     Size  Location     Type
 33835 ;;		None
 33836 ;; Return value:  Size  Location     Type
 33837 ;;                  1    wreg      void 
 33838 ;; Registers used:
 33839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33840 ;; Tracked objects:
 33841 ;;		On entry : 3F/E
 33842 ;;		On exit  : 31/0
 33843 ;;		Unchanged: 0/0
 33844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33847 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33848 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33849 ;;Total ram usage:        3 bytes
 33850 ;; Hardware stack levels used: 1
 33851 ;; Hardware stack levels required when called: 1
 33852 ;; This function calls:
 33853 ;;		_ADCC_GetSingleConversion
 33854 ;; This function is called by:
 33855 ;;		_TMR2_ISR
 33856 ;; This function uses a non-reentrant model
 33857 ;;
 33858                           
 33859                           	psect	text190
 33860  00841E                     __ptext190:
 33861                           	callstack 0
 33862  00841E                     _ReadADC:
 33863                           	callstack 14
 33864                           
 33865                           ; BSR set to: 14
 33866                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 33867                           
 33868                           ; BSR set to: 2
 33869                           ;incstack = 0
 33870  00841E  B060               	btfsc	96,0,c	;volatile
 33871  008420  0012               	return	
 33872                           
 33873                           ; BSR set to: 14
 33874                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 33875  008422  0E1D               	movlw	29
 33876  008424  0100               	movlb	0	; () banked
 33877  008426  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 33878  008428  D002               	goto	i2l14299
 33879                           
 33880                           ; BSR set to: 0
 33881                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 33882  00842A  0E00               	movlw	0
 33883  00842C  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 33884  00842E                     i2l14299:
 33885                           
 33886                           ; BSR set to: 0
 33887                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 33888  00842E  5063               	movf	99,w,c	;volatile
 33889  008430  CF64 F002          	movff	3940,??_ReadADC	;volatile
 33890  008434  6A03               	clrf	(??_ReadADC+1)^0,c
 33891  008436  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 33892  00843A  6A02               	clrf	??_ReadADC^0,c
 33893  00843C  2602               	addwf	??_ReadADC^0,f,c
 33894  00843E  0E00               	movlw	0
 33895  008440  2203               	addwfc	(??_ReadADC+1)^0,f,c
 33896  008442  0E06               	movlw	6
 33897  008444  6E04               	movwf	(??_ReadADC+2)^0,c
 33898  008446                     i2u1451_45:
 33899  008446  90D8               	bcf	status,0,c
 33900  008448  3203               	rrcf	(??_ReadADC+1)^0,f,c
 33901  00844A  3202               	rrcf	??_ReadADC^0,f,c
 33902  00844C  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 33903  00844E  D7FB               	goto	i2u1451_45
 33904  008450  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 33905  008452  0D02               	mullw	2
 33906  008454  0E00               	movlw	low _ADC_array
 33907  008456  24F3               	addwf	243,w,c
 33908  008458  6ED9               	movwf	fsr2l,c
 33909  00845A  0E02               	movlw	high _ADC_array
 33910  00845C  20F4               	addwfc	prodh,w,c
 33911  00845E  6EDA               	movwf	fsr2h,c
 33912  008460  C002  FFDE         	movff	??_ReadADC,postinc2
 33913  008464  C003  FFDD         	movff	??_ReadADC+1,postdec2
 33914                           
 33915                           ; BSR set to: 0
 33916                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 33917  008468  0E00               	movlw	0
 33918  00846A  EC13  F048         	call	_ADCC_GetSingleConversion
 33919                           
 33920                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 33921  00846E  0100               	movlb	0	; () banked
 33922  008470  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 33923  008472  0012               	return		;funcret
 33924  008474                     __end_of_ReadADC:
 33925                           	callstack 0
 33926                           
 33927 ;; *************** function _ADCC_GetSingleConversion *****************
 33928 ;; Defined at:
 33929 ;;		line 131 in file "mcc_generated_files/adcc.c"
 33930 ;; Parameters:    Size  Location     Type
 33931 ;;  channel         1    wreg     enum E10053
 33932 ;; Auto vars:     Size  Location     Type
 33933 ;;  channel         1    0[COMRAM] enum E10053
 33934 ;; Return value:  Size  Location     Type
 33935 ;;                  2  433[None  ] int 
 33936 ;; Registers used:
 33937 ;;		wreg, status,2, cstack
 33938 ;; Tracked objects:
 33939 ;;		On entry : 3F/0
 33940 ;;		On exit  : 0/0
 33941 ;;		Unchanged: 0/0
 33942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33946 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33947 ;;Total ram usage:        1 bytes
 33948 ;; Hardware stack levels used: 1
 33949 ;; This function calls:
 33950 ;;		Nothing
 33951 ;; This function is called by:
 33952 ;;		_ReadADC
 33953 ;; This function uses a non-reentrant model
 33954 ;;
 33955                           
 33956                           	psect	text191
 33957  009026                     __ptext191:
 33958                           	callstack 0
 33959  009026                     _ADCC_GetSingleConversion:
 33960                           	callstack 14
 33961                           
 33962                           ;incstack = 0
 33963                           ;ADCC_GetSingleConversion@channel stored from wreg
 33964  009026  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 33965                           
 33966                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 33967  009028  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 33968                           
 33969                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 33970  00902C  8E60               	bsf	96,7,c	;volatile
 33971                           
 33972                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 33973  00902E  0E1A               	movlw	26
 33974  009030                     i2u2876_47:
 33975  009030  2EE8               	decfsz	wreg,f,c
 33976  009032  D7FE               	bra	i2u2876_47
 33977  009034  D000               	nop2	
 33978                           
 33979                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 33980  009036  9C60               	bcf	96,6,c	;volatile
 33981                           
 33982                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 33983  009038  8060               	bsf	96,0,c	;volatile
 33984  00903A  0012               	return		;funcret
 33985  00903C                     __end_of_ADCC_GetSingleConversion:
 33986                           	callstack 0
 33987                           
 33988 ;; *************** function _TMR1_ISR *****************
 33989 ;; Defined at:
 33990 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 33991 ;; Parameters:    Size  Location     Type
 33992 ;;		None
 33993 ;; Auto vars:     Size  Location     Type
 33994 ;;		None
 33995 ;; Return value:  Size  Location     Type
 33996 ;;                  1    wreg      void 
 33997 ;; Registers used:
 33998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 33999 ;; Tracked objects:
 34000 ;;		On entry : 3F/E
 34001 ;;		On exit  : 0/0
 34002 ;;		Unchanged: 0/0
 34003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34008 ;;Total ram usage:        0 bytes
 34009 ;; Hardware stack levels used: 1
 34010 ;; Hardware stack levels required when called: 2
 34011 ;; This function calls:
 34012 ;;		Absolute function
 34013 ;;		_TMR1_DefaultInterruptHandler
 34014 ;;		_TMR1_WriteTimer
 34015 ;;		_controlMotorForce
 34016 ;; This function is called by:
 34017 ;;		_INTERRUPT_InterruptManager
 34018 ;; This function uses a non-reentrant model
 34019 ;;
 34020                           
 34021                           	psect	text192
 34022  0088B6                     __ptext192:
 34023                           	callstack 0
 34024  0088B6                     _TMR1_ISR:
 34025                           	callstack 14
 34026                           
 34027                           ; BSR set to: 14
 34028                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 34029                           
 34030                           ;incstack = 0
 34031  0088B6  91CE               	bcf	206,0,b	;volatile
 34032                           
 34033                           ; BSR set to: 14
 34034                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 34035  0088B8  EC85  F024         	call	_controlMotorForce	;wreg free
 34036                           
 34037                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 34038  0088BC  0101               	movlb	1	; () banked
 34039  0088BE  51A1               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 34040  0088C0  A4D8               	btfss	status,2,c
 34041                           
 34042                           ; BSR set to: 1
 34043                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 34044  0088C2  07A1               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 34045                           
 34046                           ; BSR set to: 1
 34047                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 34048  0088C4  519E               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 34049  0088C6  A4D8               	btfss	status,2,c
 34050                           
 34051                           ; BSR set to: 1
 34052                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 34053  0088C8  079E               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 34054                           
 34055                           ; BSR set to: 1
 34056                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 34057  0088CA  C2DF  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 34058  0088CE  C2E0  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 34059  0088D2  EC72  F047         	call	_TMR1_WriteTimer	;wreg free
 34060                           
 34061                           ; BSR set to: 1
 34062                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 34063  0088D6  0102               	movlb	2	; () banked
 34064  0088D8  51DD               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34065  0088DA  11DE               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34066  0088DC  B4D8               	btfsc	status,2,c
 34067  0088DE  0012               	return	
 34068                           
 34069                           ; BSR set to: 2
 34070                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 34071  0088E0  D801               	call	i2u1826_48
 34072  0088E2  0012               	return	
 34073  0088E4                     i2u1826_48:
 34074  0088E4  0005               	push	
 34075  0088E6  6EFA               	movwf	pclath,c
 34076  0088E8  51DD               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34077  0088EA  6EFD               	movwf	tosl,c
 34078  0088EC  51DE               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34079  0088EE  6EFE               	movwf	tosh,c
 34080  0088F0  6AFF               	clrf	tosu,c
 34081  0088F2  50FA               	movf	pclath,w,c
 34082  0088F4  0012               	return		;indir
 34083  0088F6                     __end_of_TMR1_ISR:
 34084                           	callstack 0
 34085                           
 34086 ;; *************** function _controlMotorForce *****************
 34087 ;; Defined at:
 34088 ;;		line 213 in file "outputs_MC50.c"
 34089 ;; Parameters:    Size  Location     Type
 34090 ;;		None
 34091 ;; Auto vars:     Size  Location     Type
 34092 ;;		None
 34093 ;; Return value:  Size  Location     Type
 34094 ;;                  1    wreg      void 
 34095 ;; Registers used:
 34096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34097 ;; Tracked objects:
 34098 ;;		On entry : 3F/E
 34099 ;;		On exit  : 3E/0
 34100 ;;		Unchanged: 0/0
 34101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34104 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34105 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34106 ;;Total ram usage:        5 bytes
 34107 ;; Hardware stack levels used: 1
 34108 ;; Hardware stack levels required when called: 1
 34109 ;; This function calls:
 34110 ;;		i2_GetMotorPower
 34111 ;;		i2_VerifyElectricalBrake
 34112 ;; This function is called by:
 34113 ;;		_TMR1_ISR
 34114 ;; This function uses a non-reentrant model
 34115 ;;
 34116                           
 34117                           	psect	text193
 34118  00490A                     __ptext193:
 34119                           	callstack 0
 34120  00490A                     _controlMotorForce:
 34121                           	callstack 14
 34122                           
 34123                           ; BSR set to: 14
 34124                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 34125                           
 34126                           ;incstack = 0
 34127  00490A  ECC4  F037         	call	i2_GetMotorPower	;wreg free
 34128  00490E  6F91               	movwf	_difTime& (0+255),b
 34129                           
 34130                           ; BSR set to: 1
 34131                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 34132  004910  057B               	decf	_powerControl_st& (0+255),w,b
 34133  004912  A4D8               	btfss	status,2,c
 34134  004914  D00F               	goto	i2l2186
 34135                           
 34136                           ; BSR set to: 1
 34137                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 34138  004916  BFC9               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 34139  004918  D008               	goto	i2l14187
 34140  00491A  51C9               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 34141  00491C  E103               	bnz	i2u1411_40
 34142  00491E  05C8               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 34143  004920  A0D8               	btfss	status,0,c
 34144  004922  D003               	goto	i2l14187
 34145  004924                     i2u1411_40:
 34146                           
 34147                           ; BSR set to: 1
 34148                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 34149  004924  0E00               	movlw	0
 34150  004926  6F92               	movwf	_StateTRIAC& (0+255),b
 34151                           
 34152                           ;outputs_MC50.c: 223:         }
 34153  004928  D005               	goto	i2l2186
 34154  00492A                     i2l14187:
 34155                           
 34156                           ; BSR set to: 1
 34157  00492A  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 34158  00492C  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 34159  00492E  A0D8               	btfss	status,0,c
 34160                           
 34161                           ; BSR set to: 1
 34162                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 34163  004930  C17E  F191         	movff	_powerControl_st+3,_difTime
 34164  004934                     i2l2186:
 34165                           
 34166                           ; BSR set to: 1
 34167                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 34168  004934  A68D               	btfss	141,3,c	;volatile
 34169  004936  D071               	goto	i2l2190
 34170                           
 34171                           ; BSR set to: 1
 34172  004938  5194               	movf	_zeroCrossing& (0+255),w,b
 34173  00493A  A4D8               	btfss	status,2,c
 34174  00493C  D06E               	goto	i2l2190
 34175                           
 34176                           ; BSR set to: 1
 34177                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 34178  00493E  5193               	movf	_waitZeroPeak& (0+255),w,b
 34179  004940  A4D8               	btfss	status,2,c
 34180  004942  D016               	goto	i2l14203
 34181                           
 34182                           ; BSR set to: 1
 34183                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 34184  004944  0EED               	movlw	low _zeroCrossingWaitTime
 34185  004946  0100               	movlb	0	; () banked
 34186  004948  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34187  00494A  6ED9               	movwf	fsr2l,c
 34188  00494C  6ADA               	clrf	fsr2h,c
 34189  00494E  0E02               	movlw	high _zeroCrossingWaitTime
 34190  004950  22DA               	addwfc	fsr2h,f,c
 34191  004952  0101               	movlb	1	; () banked
 34192  004954  90D8               	bcf	status,0,c
 34193  004956  3195               	rrcf	_zeroCrossingLength& (0+255),w,b
 34194  004958  6EDF               	movwf	indf2,c
 34195                           
 34196                           ; BSR set to: 1
 34197                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 34198  00495A  0100               	movlb	0	; () banked
 34199  00495C  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34200  00495E  A4D8               	btfss	status,2,c
 34201  004960  D002               	goto	i2l14201
 34202                           
 34203                           ; BSR set to: 0
 34204                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 34205  004962  0E01               	movlw	1
 34206  004964  D001               	goto	L116
 34207  004966                     i2l14201:
 34208                           
 34209                           ; BSR set to: 0
 34210                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 34211  004966  0E00               	movlw	0
 34212  004968                     L116:
 34213  004968  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 34214                           
 34215                           ; BSR set to: 0
 34216                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 34217                           
 34218                           ;outputs_MC50.c: 268:             }
 34219  00496A  0E00               	movlw	0
 34220  00496C  0101               	movlb	1	; () banked
 34221  00496E  6F95               	movwf	_zeroCrossingLength& (0+255),b
 34222  004970                     i2l14203:
 34223                           
 34224                           ; BSR set to: 1
 34225                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 34226  004970  0E50               	movlw	80
 34227  004972  6591               	cpfsgt	_difTime& (0+255),b
 34228  004974  D007               	goto	i2u1418_40
 34229                           
 34230                           ; BSR set to: 1
 34231  004976  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34232  004978  D008               	goto	i2l14209
 34233  00497A  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34234  00497C  E103               	bnz	i2u1418_40
 34235  00497E  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34236  004980  A0D8               	btfss	status,0,c
 34237  004982  D003               	goto	i2l14209
 34238  004984                     i2u1418_40:
 34239                           
 34240                           ; BSR set to: 1
 34241                           
 34242                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 34243  004984  9E86               	bcf	134,7,c	;volatile
 34244                           
 34245                           ; BSR set to: 1
 34246                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 34247  004986  0E00               	movlw	0
 34248  004988  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34249  00498A                     i2l14209:
 34250                           
 34251                           ; BSR set to: 1
 34252                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 34253  00498A  2B93               	incf	_waitZeroPeak& (0+255),f,b
 34254                           
 34255                           ; BSR set to: 1
 34256                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 34257  00498C  0EED               	movlw	low _zeroCrossingWaitTime
 34258  00498E  0100               	movlb	0	; () banked
 34259  004990  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34260  004992  6ED9               	movwf	fsr2l,c
 34261  004994  6ADA               	clrf	fsr2h,c
 34262  004996  0E02               	movlw	high _zeroCrossingWaitTime
 34263  004998  22DA               	addwfc	fsr2h,f,c
 34264  00499A  0101               	movlb	1	; () banked
 34265  00499C  5193               	movf	_waitZeroPeak& (0+255),w,b
 34266  00499E  5CDE               	subwf	postinc2,w,c
 34267  0049A0  B0D8               	btfsc	status,0,c
 34268  0049A2  D044               	goto	i2l14239
 34269                           
 34270                           ; BSR set to: 1
 34271                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 34272  0049A4  0E59               	movlw	89
 34273  0049A6  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 34274  0049A8  D005               	goto	i2l14219
 34275                           
 34276                           ; BSR set to: 1
 34277  0049AA  0E6A               	movlw	106
 34278  0049AC  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 34279  0049AE  D002               	goto	i2l14219
 34280                           
 34281                           ; BSR set to: 1
 34282                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 34283  0049B0  0E01               	movlw	1
 34284  0049B2  D001               	goto	L117
 34285  0049B4                     i2l14219:
 34286                           
 34287                           ; BSR set to: 1
 34288                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 34289  0049B4  0E00               	movlw	0
 34290  0049B6                     L117:
 34291  0049B6  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 34292                           
 34293                           ; BSR set to: 1
 34294                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 34295                           
 34296                           ;outputs_MC50.c: 292:             }
 34297  0049B8  0E50               	movlw	80
 34298  0049BA  6FA1               	movwf	(_ts_system+5)& (0+255),b	;volatile
 34299                           
 34300                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 34301  0049BC  0E00               	movlw	0
 34302  0049BE  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 34303                           
 34304                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 34305  0049C0  0E01               	movlw	1
 34306  0049C2  6F92               	movwf	_StateTRIAC& (0+255),b
 34307                           
 34308                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 34309  0049C4  0E01               	movlw	1
 34310  0049C6  6F94               	movwf	_zeroCrossing& (0+255),b
 34311                           
 34312                           ; BSR set to: 1
 34313                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 34314  0049C8  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 34315                           
 34316                           ; BSR set to: 1
 34317                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 34318  0049CA  0100               	movlb	0	; () banked
 34319  0049CC  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34320  0049CE  A4D8               	btfss	status,2,c
 34321  0049D0  D00E               	goto	i2l14231
 34322                           
 34323                           ; BSR set to: 0
 34324  0049D2  0101               	movlb	1	; () banked
 34325  0049D4  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34326  0049D6  D00B               	goto	i2l14231
 34327  0049D8  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34328  0049DA  E103               	bnz	i2u1423_40
 34329  0049DC  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34330  0049DE  A0D8               	btfss	status,0,c
 34331  0049E0  D006               	goto	i2l14231
 34332  0049E2                     i2u1423_40:
 34333                           
 34334                           ; BSR set to: 1
 34335                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 34336  0049E2  0E01               	movlw	1
 34337  0049E4  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 34338  0049E6  D022               	goto	i2l14239
 34339  0049E8                     i2u1424_40:
 34340                           
 34341                           ; BSR set to: 1
 34342                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 34343  0049E8  0E00               	movlw	0
 34344  0049EA  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 34345  0049EC  D01F               	goto	i2l14239
 34346  0049EE                     i2l14231:
 34347                           
 34348                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 34349  0049EE  0101               	movlb	1	; () banked
 34350  0049F0  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 34351  0049F2  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 34352  0049F6  6A06               	clrf	(??_controlMotorForce+1)^0,c
 34353  0049F8  2605               	addwf	??_controlMotorForce^0,f,c
 34354  0049FA  0E00               	movlw	0
 34355  0049FC  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 34356  0049FE  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 34357  004A00  6E07               	movwf	(??_controlMotorForce+2)^0,c
 34358  004A02  6A08               	clrf	(??_controlMotorForce+3)^0,c
 34359  004A04  5005               	movf	??_controlMotorForce^0,w,c
 34360  004A06  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 34361  004A08  5008               	movf	(??_controlMotorForce+3)^0,w,c
 34362  004A0A  0A80               	xorlw	128
 34363  004A0C  6E09               	movwf	(??_controlMotorForce+4)^0,c
 34364  004A0E  5006               	movf	(??_controlMotorForce+1)^0,w,c
 34365  004A10  0A80               	xorlw	128
 34366  004A12  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 34367  004A14  B0D8               	btfsc	status,0,c
 34368  004A16  D7E8               	goto	i2u1424_40
 34369  004A18  D009               	goto	i2l14239
 34370  004A1A                     i2l2190:
 34371                           
 34372                           ; BSR set to: 1
 34373  004A1A  B68D               	btfsc	141,3,c	;volatile
 34374  004A1C  D007               	goto	i2l14239
 34375                           
 34376                           ; BSR set to: 1
 34377  004A1E  5194               	movf	_zeroCrossing& (0+255),w,b
 34378  004A20  B4D8               	btfsc	status,2,c
 34379  004A22  D004               	goto	i2l14239
 34380                           
 34381                           ; BSR set to: 1
 34382                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 34383  004A24  0E00               	movlw	0
 34384  004A26  6F94               	movwf	_zeroCrossing& (0+255),b
 34385                           
 34386                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 34387  004A28  0E00               	movlw	0
 34388  004A2A  6F93               	movwf	_waitZeroPeak& (0+255),b
 34389  004A2C                     i2l14239:
 34390                           
 34391                           ; BSR set to: 1
 34392                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 34393  004A2C  B68D               	btfsc	141,3,c	;volatile
 34394                           
 34395                           ; BSR set to: 1
 34396                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 34397  004A2E  2B95               	incf	_zeroCrossingLength& (0+255),f,b
 34398                           
 34399                           ; BSR set to: 1
 34400                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 34401                           
 34402                           ;outputs_MC50.c: 340:     }
 34403  004A30  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 34404                           
 34405                           ; BSR set to: 1
 34406                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 34407  004A32  5100               	movf	_var_sys& (0+255),w,b	;volatile
 34408  004A34  EC4A  F03E         	call	i2_VerifyElectricalBrake
 34409  004A38  0100               	movlb	0	; () banked
 34410  004A3A  6F83               	movwf	_stateMotor& (0+255),b
 34411                           
 34412                           ; BSR set to: 0
 34413                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 34414  004A3C  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34415  004A3E  A4D8               	btfss	status,2,c
 34416  004A40  D02E               	goto	i2l14263
 34417                           
 34418                           ; BSR set to: 0
 34419  004A42  0101               	movlb	1	; () banked
 34420  004A44  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34421  004A46  D02B               	goto	i2l14263
 34422  004A48  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34423  004A4A  E103               	bnz	i2u1430_40
 34424  004A4C  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34425  004A4E  A0D8               	btfss	status,0,c
 34426  004A50  D026               	goto	i2l14263
 34427  004A52                     i2u1430_40:
 34428                           
 34429                           ; BSR set to: 1
 34430  004A52  BFDD               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 34431  004A54  D005               	goto	i2u1431_40
 34432  004A56  51DD               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 34433  004A58  E122               	bnz	i2l14263
 34434  004A5A  05DC               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 34435  004A5C  B0D8               	btfsc	status,0,c
 34436  004A5E  D01F               	goto	i2l14263
 34437  004A60                     i2u1431_40:
 34438                           
 34439                           ; BSR set to: 1
 34440                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 34441  004A60  0100               	movlb	0	; () banked
 34442  004A62  5183               	movf	_stateMotor& (0+255),w,b
 34443  004A64  B4D8               	btfsc	status,2,c
 34444  004A66  D03A               	goto	i2l14275
 34445                           
 34446                           ; BSR set to: 0
 34447  004A68  0101               	movlb	1	; () banked
 34448  004A6A  0592               	decf	_StateTRIAC& (0+255),w,b
 34449  004A6C  A4D8               	btfss	status,2,c
 34450  004A6E  D036               	goto	i2l14275
 34451                           
 34452                           ; BSR set to: 1
 34453  004A70  BFA3               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34454  004A72  D005               	goto	i2u1434_40
 34455  004A74  51A3               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34456  004A76  E132               	bnz	i2l14275
 34457  004A78  05A2               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34458  004A7A  B0D8               	btfsc	status,0,c
 34459  004A7C  D02F               	goto	i2l14275
 34460  004A7E                     i2u1434_40:
 34461                           
 34462                           ; BSR set to: 1
 34463  004A7E  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 34464  004A80  A4D8               	btfss	status,2,c
 34465  004A82  D02C               	goto	i2l14275
 34466                           
 34467                           ; BSR set to: 1
 34468  004A84  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34469  004A86  D006               	goto	i2u1436_40
 34470  004A88  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34471  004A8A  E128               	bnz	i2l14275
 34472  004A8C  0E0C               	movlw	12
 34473  004A8E  5DC4               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 34474  004A90  B0D8               	btfsc	status,0,c
 34475  004A92  D024               	goto	i2l14275
 34476  004A94                     i2u1436_40:
 34477                           
 34478                           ; BSR set to: 1
 34479                           
 34480                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 34481  004A94  8E86               	bsf	134,7,c	;volatile
 34482                           
 34483                           ; BSR set to: 1
 34484                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 34485  004A96  0EEC               	movlw	236
 34486  004A98  6FA3               	movwf	(_ts_system+7)& (0+255),b	;volatile
 34487  004A9A  0E78               	movlw	120
 34488  004A9C  D01A               	goto	L118
 34489  004A9E                     i2l14263:
 34490                           
 34491                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 34492  004A9E  0100               	movlb	0	; () banked
 34493  004AA0  5183               	movf	_stateMotor& (0+255),w,b
 34494  004AA2  B4D8               	btfsc	status,2,c
 34495  004AA4  D01B               	goto	i2l14275
 34496                           
 34497                           ; BSR set to: 0
 34498  004AA6  0101               	movlb	1	; () banked
 34499  004AA8  5191               	movf	_difTime& (0+255),w,b
 34500  004AAA  5DA1               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 34501  004AAC  B0D8               	btfsc	status,0,c
 34502  004AAE  D016               	goto	i2l14275
 34503                           
 34504                           ; BSR set to: 1
 34505  004AB0  0592               	decf	_StateTRIAC& (0+255),w,b
 34506  004AB2  A4D8               	btfss	status,2,c
 34507  004AB4  D013               	goto	i2l14275
 34508                           
 34509                           ; BSR set to: 1
 34510  004AB6  BFA3               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34511  004AB8  D005               	goto	i2u1440_40
 34512  004ABA  51A3               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34513  004ABC  E10F               	bnz	i2l14275
 34514  004ABE  05A2               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34515  004AC0  B0D8               	btfsc	status,0,c
 34516  004AC2  D00C               	goto	i2l14275
 34517  004AC4                     i2u1440_40:
 34518                           
 34519                           ; BSR set to: 1
 34520  004AC4  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 34521  004AC6  A4D8               	btfss	status,2,c
 34522  004AC8  D009               	goto	i2l14275
 34523                           
 34524                           ; BSR set to: 1
 34525                           
 34526                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 34527  004ACA  8E86               	bsf	134,7,c	;volatile
 34528                           
 34529                           ; BSR set to: 1
 34530                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 34531  004ACC  0EFF               	movlw	255
 34532  004ACE  6FA3               	movwf	(_ts_system+7)& (0+255),b	;volatile
 34533  004AD0  0E38               	movlw	56
 34534  004AD2                     L118:
 34535  004AD2  6FA2               	movwf	(_ts_system+6)& (0+255),b	;volatile
 34536                           
 34537                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 34538  004AD4  0E01               	movlw	1
 34539  004AD6  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34540                           
 34541                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 34542  004AD8  0E00               	movlw	0
 34543  004ADA  6F92               	movwf	_StateTRIAC& (0+255),b
 34544  004ADC                     i2l14275:
 34545                           
 34546                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 34547  004ADC  0E15               	movlw	21
 34548  004ADE  0101               	movlb	1	; () banked
 34549  004AE0  61A1               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 34550  004AE2  D002               	goto	i2u1443_40
 34551                           
 34552                           ; BSR set to: 1
 34553  004AE4  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34554  004AE6  D004               	goto	i2u1444_40
 34555  004AE8                     i2u1443_40:
 34556                           
 34557                           ; BSR set to: 1
 34558  004AE8  0100               	movlb	0	; () banked
 34559  004AEA  5183               	movf	_stateMotor& (0+255),w,b
 34560  004AEC  A4D8               	btfss	status,2,c
 34561  004AEE  D004               	goto	i2l2217
 34562  004AF0                     i2u1444_40:
 34563                           
 34564                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 34565  004AF0  9E86               	bcf	134,7,c	;volatile
 34566                           
 34567                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 34568  004AF2  0E00               	movlw	0
 34569  004AF4  0101               	movlb	1	; () banked
 34570  004AF6  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34571  004AF8                     i2l2217:
 34572                           
 34573                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 34574  004AF8  0100               	movlb	0	; () banked
 34575  004AFA  5183               	movf	_stateMotor& (0+255),w,b
 34576  004AFC  B4D8               	btfsc	status,2,c
 34577  004AFE  D00C               	goto	i2l14287
 34578                           
 34579                           ; BSR set to: 0
 34580  004B00  0101               	movlb	1	; () banked
 34581  004B02  BFA3               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34582  004B04  D009               	goto	i2l14287
 34583  004B06  51A3               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34584  004B08  E103               	bnz	i2u1446_40
 34585  004B0A  05A2               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34586  004B0C  A0D8               	btfss	status,0,c
 34587  004B0E  D004               	goto	i2l14287
 34588  004B10                     i2u1446_40:
 34589                           
 34590                           ; BSR set to: 1
 34591                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 34592  004B10  07A2               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 34593  004B12  A0D8               	btfss	status,0,c
 34594  004B14  07A3               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 34595                           
 34596                           ;outputs_MC50.c: 399:     }
 34597  004B16  0012               	return	
 34598  004B18                     i2l14287:
 34599  004B18  0100               	movlb	0	; () banked
 34600  004B1A  5183               	movf	_stateMotor& (0+255),w,b
 34601  004B1C  A4D8               	btfss	status,2,c
 34602  004B1E  0012               	return	
 34603                           
 34604                           ; BSR set to: 0
 34605  004B20  0101               	movlb	1	; () banked
 34606  004B22  AFA3               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 34607  004B24  0012               	return	
 34608                           
 34609                           ; BSR set to: 1
 34610                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 34611  004B26  4BA2               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 34612  004B28  2BA3               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 34613  004B2A  0012               	return		;funcret
 34614  004B2C                     __end_of_controlMotorForce:
 34615                           	callstack 0
 34616                           
 34617 ;; *************** function i2_VerifyElectricalBrake *****************
 34618 ;; Defined at:
 34619 ;;		line 658 in file "outputs_MC50.c"
 34620 ;; Parameters:    Size  Location     Type
 34621 ;;  actualState     1    wreg     enum E10381
 34622 ;; Auto vars:     Size  Location     Type
 34623 ;;  actualState     1    1[COMRAM] enum E10381
 34624 ;;  tempState       1    0[COMRAM] enum E10381
 34625 ;; Return value:  Size  Location     Type
 34626 ;;                  1    wreg      enum E10381
 34627 ;; Registers used:
 34628 ;;		wreg, status,2, status,0
 34629 ;; Tracked objects:
 34630 ;;		On entry : 3F/1
 34631 ;;		On exit  : 3E/0
 34632 ;;		Unchanged: 0/0
 34633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34637 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34638 ;;Total ram usage:        2 bytes
 34639 ;; Hardware stack levels used: 1
 34640 ;; This function calls:
 34641 ;;		Nothing
 34642 ;; This function is called by:
 34643 ;;		_controlMotorForce
 34644 ;; This function uses a non-reentrant model
 34645 ;;
 34646                           
 34647                           	psect	text194
 34648  007C94                     __ptext194:
 34649                           	callstack 0
 34650  007C94                     i2_VerifyElectricalBrake:
 34651                           	callstack 14
 34652                           
 34653                           ;incstack = 0
 34654                           ;i2VerifyElectricalBrake@actualState stored from wreg
 34655  007C94  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 34656                           
 34657                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 34658  007C96  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 34659                           
 34660                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 34661  007C9A  0100               	movlb	0	; () banked
 34662  007C9C  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34663  007C9E  A4D8               	btfss	status,2,c
 34664  007CA0  D02E               	goto	i2l2318
 34665                           
 34666                           ; BSR set to: 0
 34667  007CA2  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 34668  007CA4  A4D8               	btfss	status,2,c
 34669  007CA6  D02B               	goto	i2l2318
 34670                           
 34671                           ; BSR set to: 0
 34672  007CA8  0101               	movlb	1	; () banked
 34673  007CAA  BFDD               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 34674  007CAC  D005               	goto	i2u1377_40
 34675  007CAE  51DD               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 34676  007CB0  E126               	bnz	i2l2318
 34677  007CB2  05DC               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 34678  007CB4  B0D8               	btfsc	status,0,c
 34679  007CB6  D023               	goto	i2l2318
 34680  007CB8                     i2u1377_40:
 34681                           
 34682                           ; BSR set to: 1
 34683                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 34684  007CB8  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 34685  007CBA  0100               	movlb	0	; () banked
 34686  007CBC  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 34687  007CBE  B4D8               	btfsc	status,2,c
 34688  007CC0  D00B               	goto	i2l13905
 34689                           
 34690                           ; BSR set to: 0
 34691  007CC2  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 34692  007CC4  A4D8               	btfss	status,2,c
 34693  007CC6  D008               	goto	i2l13905
 34694                           
 34695                           ; BSR set to: 0
 34696                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 34697  007CC8  0E01               	movlw	1
 34698  007CCA  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 34699                           
 34700                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 34701  007CCC  0E00               	movlw	0
 34702  007CCE  0101               	movlb	1	; () banked
 34703  007CD0  6FC5               	movwf	(_ts_system+41)& (0+255),b	;volatile
 34704  007CD2  0E16               	movlw	22
 34705  007CD4  6FC4               	movwf	(_ts_system+40)& (0+255),b	;volatile
 34706                           
 34707                           ;outputs_MC50.c: 670:         }
 34708  007CD6  D018               	goto	i2l2323
 34709  007CD8                     i2l13905:
 34710                           
 34711                           ; BSR set to: 0
 34712  007CD8  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 34713  007CDA  A4D8               	btfss	status,2,c
 34714  007CDC  D00B               	goto	i2l13911
 34715                           
 34716                           ; BSR set to: 0
 34717  007CDE  0101               	movlb	1	; () banked
 34718  007CE0  BFC5               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34719  007CE2  D008               	goto	i2l13911
 34720  007CE4  51C5               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34721  007CE6  E103               	bnz	i2u1381_40
 34722  007CE8  05C4               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34723  007CEA  A0D8               	btfss	status,0,c
 34724  007CEC  D003               	goto	i2l13911
 34725  007CEE                     i2u1381_40:
 34726                           
 34727                           ; BSR set to: 1
 34728                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 34729  007CEE  0E01               	movlw	1
 34730  007CF0  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 34731                           
 34732                           ;outputs_MC50.c: 686:         }
 34733  007CF2  D00A               	goto	i2l2323
 34734  007CF4                     i2l13911:
 34735                           
 34736                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 34737  007CF4  0E00               	movlw	0
 34738  007CF6  0100               	movlb	0	; () banked
 34739  007CF8  6F78               	movwf	_brakeElectric_st& (0+255),b
 34740                           
 34741                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 34742  007CFA  0E00               	movlw	0
 34743  007CFC  D004               	goto	L119
 34744  007CFE                     i2l2318:
 34745                           
 34746                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 34747  007CFE  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 34748                           
 34749                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 34750  007D02  0E00               	movlw	0
 34751  007D04  0100               	movlb	0	; () banked
 34752  007D06                     L119:
 34753  007D06  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 34754  007D08                     i2l2323:
 34755                           
 34756                           ;outputs_MC50.c: 700:     return tempState;
 34757  007D08  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 34758  007D0A  0012               	return		;funcret
 34759  007D0C                     __end_ofi2_VerifyElectricalBrake:
 34760                           	callstack 0
 34761                           
 34762 ;; *************** function i2_GetMotorPower *****************
 34763 ;; Defined at:
 34764 ;;		line 405 in file "outputs_MC50.c"
 34765 ;; Parameters:    Size  Location     Type
 34766 ;;		None
 34767 ;; Auto vars:     Size  Location     Type
 34768 ;;  defineatraso    1    3[COMRAM] unsigned char 
 34769 ;; Return value:  Size  Location     Type
 34770 ;;                  1    wreg      unsigned char 
 34771 ;; Registers used:
 34772 ;;		wreg, status,2, status,0, prodl, prodh
 34773 ;; Tracked objects:
 34774 ;;		On entry : 3F/E
 34775 ;;		On exit  : 3F/1
 34776 ;;		Unchanged: 0/0
 34777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34780 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34781 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34782 ;;Total ram usage:        4 bytes
 34783 ;; Hardware stack levels used: 1
 34784 ;; This function calls:
 34785 ;;		Nothing
 34786 ;; This function is called by:
 34787 ;;		_controlMotorForce
 34788 ;; This function uses a non-reentrant model
 34789 ;;
 34790                           
 34791                           	psect	text195
 34792  006F88                     __ptext195:
 34793                           	callstack 0
 34794  006F88                     i2_GetMotorPower:
 34795                           	callstack 14
 34796                           
 34797                           ; BSR set to: 14
 34798                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 34799                           
 34800                           ;incstack = 0
 34801  006F88  0101               	movlb	1	; () banked
 34802  006F8A  057B               	decf	_powerControl_st& (0+255),w,b
 34803  006F8C  A4D8               	btfss	status,2,c
 34804  006F8E  D006               	goto	i2l13855
 34805                           
 34806                           ; BSR set to: 1
 34807                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 34808  006F90  0100               	movlb	0	; () banked
 34809  006F92  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 34810  006F94  0D06               	mullw	6
 34811  006F96  CFF3 F190          	movff	prodl,_temppower
 34812                           
 34813                           ;outputs_MC50.c: 416:     }
 34814  006F9A  D043               	goto	i2l2235
 34815  006F9C                     i2l13855:
 34816                           
 34817                           ; BSR set to: 1
 34818                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 34819  006F9C  0100               	movlb	0	; () banked
 34820  006F9E  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 34821  006FA0  0D06               	mullw	6
 34822  006FA2  CFF3 F082          	movff	prodl,_fullmotorPower
 34823                           
 34824                           ; BSR set to: 0
 34825                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 34826  006FA6  0101               	movlb	1	; () banked
 34827  006FA8  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 34828  006FAA  D01C               	goto	i2l13865
 34829  006FAC  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34830  006FAE  E103               	bnz	i2u1367_40
 34831  006FB0  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 34832  006FB2  A0D8               	btfss	status,0,c
 34833  006FB4  D017               	goto	i2l13865
 34834  006FB6                     i2u1367_40:
 34835                           
 34836                           ; BSR set to: 1
 34837                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 34838  006FB6  0100               	movlb	0	; () banked
 34839  006FB8  5182               	movf	_fullmotorPower& (0+255),w,b
 34840  006FBA  6E01               	movwf	??i2_GetMotorPower^0,c
 34841  006FBC  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 34842  006FBE  0101               	movlb	1	; () banked
 34843  006FC0  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 34844  006FC2  5C01               	subwf	??i2_GetMotorPower^0,w,c
 34845  006FC4  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 34846  006FC6  0A80               	xorlw	128
 34847  006FC8  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 34848  006FCA  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34849  006FCC  0A80               	xorlw	128
 34850  006FCE  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 34851  006FD0  B0D8               	btfsc	status,0,c
 34852  006FD2  D002               	goto	i2l13863
 34853                           
 34854                           ; BSR set to: 1
 34855                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 34856  006FD4  0E01               	movlw	1
 34857  006FD6  D004               	goto	L121
 34858  006FD8                     i2l13863:
 34859                           
 34860                           ; BSR set to: 1
 34861                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 34862  006FD8  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 34863  006FDA  0100               	movlb	0	; () banked
 34864  006FDC  5D82               	subwf	_fullmotorPower& (0+255),w,b
 34865  006FDE  D017               	goto	L122
 34866  006FE0                     L121:
 34867  006FE0  6F90               	movwf	_temppower& (0+255),b
 34868  006FE2  D01F               	goto	i2l2235
 34869  006FE4                     i2l13865:
 34870                           
 34871                           ; BSR set to: 1
 34872  006FE4  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 34873  006FE6  D005               	goto	i2u1369_40
 34874  006FE8  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34875  006FEA  E113               	bnz	i2l13875
 34876  006FEC  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 34877  006FEE  B0D8               	btfsc	status,0,c
 34878  006FF0  D010               	goto	i2l13875
 34879  006FF2                     i2u1369_40:
 34880                           
 34881                           ; BSR set to: 1
 34882  006FF2  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 34883  006FF4  D005               	goto	i2u1370_40
 34884  006FF6  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 34885  006FF8  E10C               	bnz	i2l13875
 34886  006FFA  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 34887  006FFC  B0D8               	btfsc	status,0,c
 34888  006FFE  D009               	goto	i2l13875
 34889  007000                     i2u1370_40:
 34890                           
 34891                           ; BSR set to: 1
 34892                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 34893  007000  C082  F190         	movff	_fullmotorPower,_temppower
 34894                           
 34895                           ; BSR set to: 1
 34896                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 34897  007004  0E08               	movlw	8
 34898  007006  0100               	movlb	0	; () banked
 34899  007008  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 34900  00700A  D00B               	goto	i2l2235
 34901                           
 34902                           ; BSR set to: 0
 34903                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 34904  00700C  0E3A               	movlw	58
 34905  00700E                     L122:
 34906  00700E  0101               	movlb	1	; () banked
 34907  007010  D7E7               	goto	L121
 34908  007012                     i2l13875:
 34909                           
 34910                           ; BSR set to: 1
 34911  007012  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 34912  007014  D006               	goto	i2l2235
 34913  007016  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 34914  007018  E102               	bnz	i2u1372_40
 34915  00701A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 34916  00701C  B0D8               	btfsc	status,0,c
 34917  00701E                     i2u1372_40:
 34918                           
 34919                           ; BSR set to: 1
 34920                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 34921  00701E  C110  F190         	movff	_var_sys+16,_temppower	;volatile
 34922  007022                     i2l2235:
 34923                           
 34924                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 34925  007022  0101               	movlb	1	; () banked
 34926  007024  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 34927  007026  D00E               	goto	i2l13885
 34928  007028  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 34929  00702A  E103               	bnz	i2u1373_40
 34930  00702C  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 34931  00702E  A0D8               	btfss	status,0,c
 34932  007030  D009               	goto	i2l13885
 34933  007032                     i2u1373_40:
 34934                           
 34935                           ; BSR set to: 1
 34936  007032  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 34937  007034  D005               	goto	i2u1374_40
 34938  007036  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34939  007038  E105               	bnz	i2l13885
 34940  00703A  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 34941  00703C  B0D8               	btfsc	status,0,c
 34942  00703E  D002               	goto	i2l13885
 34943  007040                     i2u1374_40:
 34944                           
 34945                           ; BSR set to: 1
 34946                           ;outputs_MC50.c: 452:     defineatraso = 5;
 34947  007040  0E05               	movlw	5
 34948  007042  D001               	goto	L120
 34949  007044                     i2l13885:
 34950                           
 34951                           ; BSR set to: 1
 34952                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 34953  007044  0E17               	movlw	23
 34954  007046                     L120:
 34955  007046  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 34956                           
 34957                           ; BSR set to: 1
 34958                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 34959  007048  5190               	movf	_temppower& (0+255),w,b
 34960  00704A  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 34961                           
 34962                           ; BSR set to: 1
 34963  00704C  0012               	return		;funcret
 34964  00704E                     __end_ofi2_GetMotorPower:
 34965                           	callstack 0
 34966                           
 34967 ;; *************** function _TMR1_WriteTimer *****************
 34968 ;; Defined at:
 34969 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 34970 ;; Parameters:    Size  Location     Type
 34971 ;;  timerVal        2    0[COMRAM] unsigned short 
 34972 ;; Auto vars:     Size  Location     Type
 34973 ;;		None
 34974 ;; Return value:  Size  Location     Type
 34975 ;;                  1    wreg      void 
 34976 ;; Registers used:
 34977 ;;		None
 34978 ;; Tracked objects:
 34979 ;;		On entry : 3F/1
 34980 ;;		On exit  : 3F/1
 34981 ;;		Unchanged: 3F/0
 34982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34987 ;;Total ram usage:        2 bytes
 34988 ;; Hardware stack levels used: 1
 34989 ;; This function calls:
 34990 ;;		Nothing
 34991 ;; This function is called by:
 34992 ;;		_TMR1_ISR
 34993 ;; This function uses a non-reentrant model
 34994 ;;
 34995                           
 34996                           	psect	text196
 34997  008EE4                     __ptext196:
 34998                           	callstack 0
 34999  008EE4                     _TMR1_WriteTimer:
 35000                           	callstack 15
 35001                           
 35002                           ; BSR set to: 1
 35003                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 35004                           
 35005                           ; BSR set to: 1
 35006                           ;incstack = 0
 35007  008EE4  A4CF               	btfss	207,2,c	;volatile
 35008  008EE6  D007               	goto	i2l1147
 35009                           
 35010                           ; BSR set to: 1
 35011                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 35012  008EE8  90CF               	bcf	207,0,c	;volatile
 35013                           
 35014                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 35015  008EEA  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35016                           
 35017                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 35018  008EEE  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35019                           
 35020                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 35021  008EF2  80CF               	bsf	207,0,c	;volatile
 35022                           
 35023                           ;mcc_generated_files/tmr1.c: 142:     }
 35024  008EF4  0012               	return	
 35025  008EF6                     i2l1147:
 35026                           
 35027                           ; BSR set to: 1
 35028                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 35029  008EF6  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35030                           
 35031                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 35032  008EFA  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35033                           
 35034                           ; BSR set to: 1
 35035  008EFE  0012               	return		;funcret
 35036  008F00                     __end_of_TMR1_WriteTimer:
 35037                           	callstack 0
 35038                           
 35039 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 35040 ;; Defined at:
 35041 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 35042 ;; Parameters:    Size  Location     Type
 35043 ;;		None
 35044 ;; Auto vars:     Size  Location     Type
 35045 ;;		None
 35046 ;; Return value:  Size  Location     Type
 35047 ;;                  1    wreg      void 
 35048 ;; Registers used:
 35049 ;;		None
 35050 ;; Tracked objects:
 35051 ;;		On entry : 3F/2
 35052 ;;		On exit  : 3F/2
 35053 ;;		Unchanged: 3F/0
 35054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35059 ;;Total ram usage:        0 bytes
 35060 ;; Hardware stack levels used: 1
 35061 ;; This function calls:
 35062 ;;		Nothing
 35063 ;; This function is called by:
 35064 ;;		_TMR1_Initialize
 35065 ;;		_TMR1_ISR
 35066 ;; This function uses a non-reentrant model
 35067 ;;
 35068                           
 35069                           	psect	text197
 35070  00921A                     __ptext197:
 35071                           	callstack 0
 35072  00921A                     _TMR1_DefaultInterruptHandler:
 35073                           	callstack 15
 35074                           
 35075                           ; BSR set to: 2
 35076                           
 35077                           ; BSR set to: 1
 35078                           ;incstack = 0
 35079  00921A  0012               	return		;funcret
 35080  00921C                     __end_of_TMR1_DefaultInterruptHandler:
 35081                           	callstack 0
 35082                           
 35083 ;; *************** function _TMR0_ISR *****************
 35084 ;; Defined at:
 35085 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 35086 ;; Parameters:    Size  Location     Type
 35087 ;;		None
 35088 ;; Auto vars:     Size  Location     Type
 35089 ;;		None
 35090 ;; Return value:  Size  Location     Type
 35091 ;;                  1    wreg      void 
 35092 ;; Registers used:
 35093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 35094 ;; Tracked objects:
 35095 ;;		On entry : 3F/E
 35096 ;;		On exit  : 0/0
 35097 ;;		Unchanged: 0/0
 35098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35103 ;;Total ram usage:        0 bytes
 35104 ;; Hardware stack levels used: 1
 35105 ;; Hardware stack levels required when called: 1
 35106 ;; This function calls:
 35107 ;;		Absolute function
 35108 ;;		_TMR0_DefaultInterruptHandler
 35109 ;;		_rxi
 35110 ;; This function is called by:
 35111 ;;		_INTERRUPT_InterruptManager
 35112 ;; This function uses a non-reentrant model
 35113 ;;
 35114                           
 35115                           	psect	text198
 35116  008D98                     __ptext198:
 35117                           	callstack 0
 35118  008D98                     _TMR0_ISR:
 35119                           	callstack 15
 35120                           
 35121                           ; BSR set to: 14
 35122                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 35123                           
 35124                           ; BSR set to: 2
 35125                           ;incstack = 0
 35126  008D98  9BCA               	bcf	202,5,b	;volatile
 35127                           
 35128                           ; BSR set to: 14
 35129                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 35130  008D9A  ECFB  F020         	call	_rxi	;wreg free
 35131                           
 35132                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 35133  008D9E  0102               	movlb	2	; () banked
 35134  008DA0  51E1               	movf	_TMR0_InterruptHandler& (0+255),w,b
 35135  008DA2  11E2               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 35136  008DA4  B4D8               	btfsc	status,2,c
 35137  008DA6  0012               	return	
 35138                           
 35139                           ; BSR set to: 2
 35140                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 35141  008DA8  D801               	call	i2u1822_48
 35142  008DAA  0012               	return	
 35143  008DAC                     i2u1822_48:
 35144  008DAC  0005               	push	
 35145  008DAE  6EFA               	movwf	pclath,c
 35146  008DB0  51E1               	movf	_TMR0_InterruptHandler& (0+255),w,b
 35147  008DB2  6EFD               	movwf	tosl,c
 35148  008DB4  51E2               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 35149  008DB6  6EFE               	movwf	tosh,c
 35150  008DB8  6AFF               	clrf	tosu,c
 35151  008DBA  50FA               	movf	pclath,w,c
 35152  008DBC  0012               	return		;indir
 35153  008DBE                     __end_of_TMR0_ISR:
 35154                           	callstack 0
 35155                           
 35156 ;; *************** function _rxi *****************
 35157 ;; Defined at:
 35158 ;;		line 41 in file "inputs_MC50.c"
 35159 ;; Parameters:    Size  Location     Type
 35160 ;;		None
 35161 ;; Auto vars:     Size  Location     Type
 35162 ;;		None
 35163 ;; Return value:  Size  Location     Type
 35164 ;;                  1    wreg      void 
 35165 ;; Registers used:
 35166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35167 ;; Tracked objects:
 35168 ;;		On entry : 3F/E
 35169 ;;		On exit  : 3C/0
 35170 ;;		Unchanged: 0/0
 35171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35175 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35176 ;;Total ram usage:        2 bytes
 35177 ;; Hardware stack levels used: 1
 35178 ;; This function calls:
 35179 ;;		Nothing
 35180 ;; This function is called by:
 35181 ;;		_TMR0_ISR
 35182 ;; This function uses a non-reentrant model
 35183 ;;
 35184                           
 35185                           	psect	text199
 35186  0041F6                     __ptext199:
 35187                           	callstack 0
 35188  0041F6                     _rxi:
 35189                           	callstack 15
 35190                           
 35191                           ; BSR set to: 14
 35192                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 35193                           
 35194                           ;incstack = 0
 35195  0041F6  0E00               	movlw	0
 35196  0041F8  B68E               	btfsc	142,3,c	;volatile
 35197  0041FA  0E01               	movlw	1
 35198  0041FC  0100               	movlb	0	; () banked
 35199  0041FE  6F89               	movwf	_RFBit& (0+255),b	;volatile
 35200                           
 35201                           ; BSR set to: 0
 35202                           ;inputs_MC50.c: 47:     if (RFFull)
 35203  004200  518B               	movf	_RFFull& (0+255),w,b	;volatile
 35204  004202  A4D8               	btfss	status,2,c
 35205  004204  0012               	return	
 35206  004206  D116               	goto	i2l14169
 35207  004208                     i2l14059:
 35208                           
 35209                           ; BSR set to: 1
 35210                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 35211  004208  0100               	movlb	0	; () banked
 35212  00420A  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35213  00420C  A4D8               	btfss	status,2,c
 35214  00420E  D004               	goto	i2l14063
 35215                           
 35216                           ; BSR set to: 0
 35217                           ;inputs_MC50.c: 56:                 RFstate = 3;
 35218  004210  0E03               	movlw	3
 35219  004212  0101               	movlb	1	; () banked
 35220  004214  6F9A               	movwf	_RFstate& (0+255),b
 35221                           
 35222                           ;inputs_MC50.c: 57:             } else {
 35223  004216  0012               	return	
 35224  004218                     i2l14063:
 35225                           
 35226                           ; BSR set to: 0
 35227                           ;inputs_MC50.c: 58:                 RFcount--;
 35228  004218  077E               	decf	_RFcount& (0+255),f,b
 35229  00421A  A0D8               	btfss	status,0,c
 35230  00421C  077F               	decf	(_RFcount+1)& (0+255),f,b
 35231                           
 35232                           ; BSR set to: 0
 35233                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 35234  00421E  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 35235  004220  0012               	return	
 35236  004222  0EF6               	movlw	246
 35237  004224  5D7E               	subwf	_RFcount& (0+255),w,b
 35238  004226  0EFF               	movlw	255
 35239  004228  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 35240  00422A  B0D8               	btfsc	status,0,c
 35241  00422C  0012               	return	
 35242  00422E                     i2u1388_40:
 35243  00422E                     i2l14067:
 35244                           
 35245                           ; BSR set to: 0
 35246                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 35247  00422E  0E00               	movlw	0
 35248  004230  0101               	movlb	1	; () banked
 35249  004232  6F9A               	movwf	_RFstate& (0+255),b
 35250  004234  0012               	return	
 35251  004236                     i2l14069:
 35252                           
 35253                           ; BSR set to: 1
 35254                           ;inputs_MC50.c: 67:             if (RFBit) {
 35255  004236  0100               	movlb	0	; () banked
 35256  004238  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35257  00423A  B4D8               	btfsc	status,2,c
 35258  00423C  D02C               	goto	i2l14089
 35259                           
 35260                           ; BSR set to: 0
 35261                           ;inputs_MC50.c: 71:                 RFstate = 2;
 35262  00423E  0E02               	movlw	2
 35263  004240  0101               	movlb	1	; () banked
 35264  004242  6F9A               	movwf	_RFstate& (0+255),b
 35265                           
 35266                           ; BSR set to: 1
 35267                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 35268  004244  0EC6               	movlw	low _BufferRF
 35269  004246  0100               	movlb	0	; () banked
 35270  004248  258D               	addwf	_Bptr& (0+255),w,b
 35271  00424A  6ED9               	movwf	fsr2l,c
 35272  00424C  6ADA               	clrf	fsr2h,c
 35273  00424E  0E02               	movlw	high _BufferRF
 35274  004250  22DA               	addwfc	fsr2h,f,c
 35275  004252  90D8               	bcf	status,0,c
 35276  004254  32DF               	rrcf	indf2,f,c
 35277                           
 35278                           ; BSR set to: 0
 35279                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 35280  004256  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35281  004258  D008               	goto	i2l14079
 35282                           
 35283                           ; BSR set to: 0
 35284                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 35285  00425A  0EC6               	movlw	low _BufferRF
 35286  00425C  258D               	addwf	_Bptr& (0+255),w,b
 35287  00425E  6ED9               	movwf	fsr2l,c
 35288  004260  6ADA               	clrf	fsr2h,c
 35289  004262  0E02               	movlw	high _BufferRF
 35290  004264  22DA               	addwfc	fsr2h,f,c
 35291  004266  0E80               	movlw	128
 35292  004268  26DF               	addwf	indf2,f,c
 35293  00426A                     i2l14079:
 35294                           
 35295                           ; BSR set to: 0
 35296                           ;inputs_MC50.c: 81:                 RFcount = 0;
 35297  00426A  0E00               	movlw	0
 35298  00426C  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35299  00426E  0E00               	movlw	0
 35300  004270  6F7E               	movwf	_RFcount& (0+255),b
 35301                           
 35302                           ; BSR set to: 0
 35303                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 35304  004272  2B8C               	incf	_BitCount& (0+255),f,b
 35305  004274  C08C  F001         	movff	_BitCount,??_rxi
 35306  004278  0E07               	movlw	7
 35307  00427A  1601               	andwf	??_rxi^0,f,c
 35308  00427C  B4D8               	btfsc	status,2,c
 35309                           
 35310                           ; BSR set to: 0
 35311                           ;inputs_MC50.c: 84:                     Bptr++;
 35312  00427E  2B8D               	incf	_Bptr& (0+255),f,b
 35313                           
 35314                           ; BSR set to: 0
 35315                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 35316  004280  0E41               	movlw	65
 35317  004282  198C               	xorwf	_BitCount& (0+255),w,b
 35318  004284  A4D8               	btfss	status,2,c
 35319  004286  0012               	return	
 35320                           
 35321                           ; BSR set to: 0
 35322                           ;inputs_MC50.c: 86:                     RFstate = 0;
 35323  004288  0E00               	movlw	0
 35324  00428A  0101               	movlb	1	; () banked
 35325  00428C  6F9A               	movwf	_RFstate& (0+255),b
 35326                           
 35327                           ;inputs_MC50.c: 87:                     RFFull = 1;
 35328  00428E  0E01               	movlw	1
 35329  004290  0100               	movlb	0	; () banked
 35330  004292  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 35331  004294  0012               	return	
 35332  004296                     i2l14089:
 35333                           
 35334                           ; BSR set to: 0
 35335                           ;inputs_MC50.c: 92:                 RFcount++;
 35336  004296  4B7E               	infsnz	_RFcount& (0+255),f,b
 35337  004298  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35338                           
 35339                           ; BSR set to: 0
 35340                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 35341  00429A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35342  00429C  0012               	return	
 35343  00429E  517F               	movf	(_RFcount+1)& (0+255),w,b
 35344  0042A0  E104               	bnz	i2u1393_40
 35345  0042A2  0E0A               	movlw	10
 35346  0042A4  5D7E               	subwf	_RFcount& (0+255),w,b
 35347  0042A6  A0D8               	btfss	status,0,c
 35348  0042A8  0012               	return	
 35349  0042AA                     i2u1393_40:
 35350                           
 35351                           ; BSR set to: 0
 35352                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 35353  0042AA  0E01               	movlw	1
 35354  0042AC  0101               	movlb	1	; () banked
 35355  0042AE  6F9A               	movwf	_RFstate& (0+255),b
 35356                           
 35357                           ;inputs_MC50.c: 97:                     Bptr = 0;
 35358  0042B0  0E00               	movlw	0
 35359  0042B2  0100               	movlb	0	; () banked
 35360  0042B4  6F8D               	movwf	_Bptr& (0+255),b
 35361                           
 35362                           ;inputs_MC50.c: 98:                     BitCount = 0;
 35363  0042B6  0E00               	movlw	0
 35364  0042B8  6F8C               	movwf	_BitCount& (0+255),b
 35365  0042BA  0012               	return	
 35366  0042BC                     i2l14095:
 35367                           
 35368                           ; BSR set to: 1
 35369                           ;inputs_MC50.c: 103:             if (RFBit) {
 35370  0042BC  0100               	movlb	0	; () banked
 35371  0042BE  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35372  0042C0  B4D8               	btfsc	status,2,c
 35373  0042C2  D030               	goto	i2l14111
 35374                           
 35375                           ; BSR set to: 0
 35376                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 35377  0042C4  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35378  0042C6  D00E               	goto	i2u1396_40
 35379  0042C8  517F               	movf	(_RFcount+1)& (0+255),w,b
 35380  0042CA  E104               	bnz	i2u1395_40
 35381  0042CC  0E14               	movlw	20
 35382  0042CE  5D7E               	subwf	_RFcount& (0+255),w,b
 35383  0042D0  A0D8               	btfss	status,0,c
 35384  0042D2  D008               	goto	i2u1396_40
 35385  0042D4                     i2u1395_40:
 35386                           
 35387                           ; BSR set to: 0
 35388  0042D4  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35389  0042D6  D01E               	goto	i2l14109
 35390  0042D8  517F               	movf	(_RFcount+1)& (0+255),w,b
 35391  0042DA  E104               	bnz	i2u1396_40
 35392  0042DC  0E2D               	movlw	45
 35393  0042DE  5D7E               	subwf	_RFcount& (0+255),w,b
 35394  0042E0  A0D8               	btfss	status,0,c
 35395  0042E2  D018               	goto	i2l14109
 35396  0042E4                     i2u1396_40:
 35397                           
 35398                           ; BSR set to: 0
 35399                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 35400  0042E4  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35401  0042E6  D7A3               	goto	i2u1388_40
 35402  0042E8  517F               	movf	(_RFcount+1)& (0+255),w,b
 35403  0042EA  E104               	bnz	i2u1397_40
 35404  0042EC  0E50               	movlw	80
 35405  0042EE  5D7E               	subwf	_RFcount& (0+255),w,b
 35406  0042F0  A0D8               	btfss	status,0,c
 35407  0042F2  D79D               	goto	i2u1388_40
 35408  0042F4                     i2u1397_40:
 35409                           
 35410                           ; BSR set to: 0
 35411  0042F4  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35412  0042F6  D006               	goto	i2l14107
 35413  0042F8  517F               	movf	(_RFcount+1)& (0+255),w,b
 35414  0042FA  E199               	bnz	i2l14067
 35415  0042FC  0E64               	movlw	100
 35416  0042FE  5D7E               	subwf	_RFcount& (0+255),w,b
 35417  004300  B0D8               	btfsc	status,0,c
 35418  004302  D795               	goto	i2u1388_40
 35419  004304                     i2l14107:
 35420                           
 35421                           ; BSR set to: 0
 35422                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 35423  004304  0EFF               	movlw	255
 35424  004306  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35425  004308  0EF6               	movlw	246
 35426  00430A  6F7E               	movwf	_RFcount& (0+255),b
 35427                           
 35428                           ;inputs_MC50.c: 114:                         RFstate = 4;
 35429  00430C  0E04               	movlw	4
 35430  00430E  0101               	movlb	1	; () banked
 35431  004310  6F9A               	movwf	_RFstate& (0+255),b
 35432  004312  0012               	return	
 35433  004314                     i2l14109:
 35434                           
 35435                           ; BSR set to: 0
 35436                           ;inputs_MC50.c: 118:                     RFcount = 0;
 35437  004314  0E00               	movlw	0
 35438  004316  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35439  004318  0E00               	movlw	0
 35440  00431A  6F7E               	movwf	_RFcount& (0+255),b
 35441                           
 35442                           ;inputs_MC50.c: 119:                     RFstate = 2;
 35443  00431C  0E02               	movlw	2
 35444  00431E  0101               	movlb	1	; () banked
 35445  004320  6F9A               	movwf	_RFstate& (0+255),b
 35446  004322  0012               	return	
 35447  004324                     i2l14111:
 35448                           
 35449                           ; BSR set to: 0
 35450                           ;inputs_MC50.c: 122:                 RFcount++;
 35451  004324  4B7E               	infsnz	_RFcount& (0+255),f,b
 35452  004326  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35453  004328  0012               	return	
 35454  00432A                     i2l14113:
 35455                           
 35456                           ; BSR set to: 1
 35457                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 35458  00432A  0100               	movlb	0	; () banked
 35459  00432C  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35460  00432E  A4D8               	btfss	status,2,c
 35461  004330  D056               	goto	i2l14149
 35462                           
 35463                           ; BSR set to: 0
 35464                           ;inputs_MC50.c: 130:                 RFstate = 5;
 35465  004332  0E05               	movlw	5
 35466  004334  0101               	movlb	1	; () banked
 35467  004336  6F9A               	movwf	_RFstate& (0+255),b
 35468                           
 35469                           ; BSR set to: 1
 35470                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 35471  004338  0EC6               	movlw	low _BufferRF
 35472  00433A  0100               	movlb	0	; () banked
 35473  00433C  258D               	addwf	_Bptr& (0+255),w,b
 35474  00433E  6ED9               	movwf	fsr2l,c
 35475  004340  6ADA               	clrf	fsr2h,c
 35476  004342  0E02               	movlw	high _BufferRF
 35477  004344  22DA               	addwfc	fsr2h,f,c
 35478  004346  90D8               	bcf	status,0,c
 35479  004348  32DF               	rrcf	indf2,f,c
 35480                           
 35481                           ; BSR set to: 0
 35482                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 35483  00434A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35484  00434C  D008               	goto	i2l14123
 35485                           
 35486                           ; BSR set to: 0
 35487                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 35488  00434E  0EC6               	movlw	low _BufferRF
 35489  004350  258D               	addwf	_Bptr& (0+255),w,b
 35490  004352  6ED9               	movwf	fsr2l,c
 35491  004354  6ADA               	clrf	fsr2h,c
 35492  004356  0E02               	movlw	high _BufferRF
 35493  004358  22DA               	addwfc	fsr2h,f,c
 35494  00435A  0E80               	movlw	128
 35495  00435C  26DF               	addwf	indf2,f,c
 35496  00435E                     i2l14123:
 35497                           
 35498                           ; BSR set to: 0
 35499                           ;inputs_MC50.c: 136:                 RFcount = 0;
 35500  00435E  0E00               	movlw	0
 35501  004360  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35502  004362  0E00               	movlw	0
 35503  004364  6F7E               	movwf	_RFcount& (0+255),b
 35504                           
 35505                           ; BSR set to: 0
 35506                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 35507  004366  2B8C               	incf	_BitCount& (0+255),f,b
 35508  004368  C08C  F001         	movff	_BitCount,??_rxi
 35509  00436C  0E07               	movlw	7
 35510  00436E  1601               	andwf	??_rxi^0,f,c
 35511  004370  A4D8               	btfss	status,2,c
 35512  004372  D009               	goto	i2l14131
 35513                           
 35514                           ; BSR set to: 0
 35515                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 35516  004374  2B8D               	incf	_Bptr& (0+255),f,b
 35517                           
 35518                           ; BSR set to: 0
 35519                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 35520  004376  0EC6               	movlw	low _BufferRF
 35521  004378  258D               	addwf	_Bptr& (0+255),w,b
 35522  00437A  6ED9               	movwf	fsr2l,c
 35523  00437C  6ADA               	clrf	fsr2h,c
 35524  00437E  0E02               	movlw	high _BufferRF
 35525  004380  22DA               	addwfc	fsr2h,f,c
 35526  004382  0E00               	movlw	0
 35527  004384  6EDF               	movwf	indf2,c
 35528  004386                     i2l14131:
 35529                           
 35530                           ; BSR set to: 0
 35531                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 35532  004386  0E0D               	movlw	13
 35533  004388  198C               	xorwf	_BitCount& (0+255),w,b
 35534  00438A  A4D8               	btfss	status,2,c
 35535  00438C  0012               	return	
 35536                           
 35537                           ; BSR set to: 0
 35538                           ;inputs_MC50.c: 144:                     RFstate = 0;
 35539  00438E  0E00               	movlw	0
 35540  004390  0101               	movlb	1	; () banked
 35541  004392  6F9A               	movwf	_RFstate& (0+255),b
 35542                           
 35543                           ; BSR set to: 1
 35544                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 35545  004394  0100               	movlb	0	; () banked
 35546  004396  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 35547  004398  A4D8               	btfss	status,2,c
 35548  00439A  D01A               	goto	i2l14143
 35549                           
 35550                           ; BSR set to: 0
 35551                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 35552  00439C  0102               	movlb	2	; () banked
 35553  00439E  51C6               	movf	_BufferRF& (0+255),w,b
 35554  0043A0  0101               	movlb	1	; () banked
 35555  0043A2  1989               	xorwf	_BufferRF_12BIT& (0+255),w,b
 35556  0043A4  A4D8               	btfss	status,2,c
 35557  0043A6  D00F               	goto	i2l1615
 35558                           
 35559                           ; BSR set to: 1
 35560  0043A8  0102               	movlb	2	; () banked
 35561  0043AA  51C7               	movf	(_BufferRF+1)& (0+255),w,b
 35562  0043AC  0101               	movlb	1	; () banked
 35563  0043AE  198A               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 35564  0043B0  A4D8               	btfss	status,2,c
 35565  0043B2  D009               	goto	i2l1615
 35566                           
 35567                           ; BSR set to: 1
 35568                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 35569  0043B4  0E01               	movlw	1
 35570  0043B6  0100               	movlb	0	; () banked
 35571  0043B8  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 35572                           
 35573                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 35574  0043BA  0E00               	movlw	0
 35575  0043BC  0102               	movlb	2	; () banked
 35576  0043BE  6FC8               	movwf	(_BufferRF+2)& (0+255),b
 35577                           
 35578                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 35579  0043C0  0E00               	movlw	0
 35580  0043C2  6FC9               	movwf	(_BufferRF+3)& (0+255),b
 35581                           
 35582                           ;inputs_MC50.c: 152:                         }
 35583  0043C4  0012               	return	
 35584  0043C6                     i2l1615:
 35585                           
 35586                           ; BSR set to: 1
 35587                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 35588  0043C6  C2C6  F189         	movff	_BufferRF,_BufferRF_12BIT
 35589                           
 35590                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 35591  0043CA  C2C7  F18A         	movff	_BufferRF+1,_BufferRF_12BIT+1
 35592  0043CE  0012               	return	
 35593  0043D0                     i2l14143:
 35594                           
 35595                           ; BSR set to: 0
 35596                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 35597  0043D0  0E01               	movlw	1
 35598  0043D2  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 35599                           
 35600                           ; BSR set to: 0
 35601                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 35602  0043D4  C2C6  F189         	movff	_BufferRF,_BufferRF_12BIT
 35603                           
 35604                           ; BSR set to: 0
 35605                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 35606  0043D8  C2C7  F18A         	movff	_BufferRF+1,_BufferRF_12BIT+1
 35607  0043DC  0012               	return	
 35608  0043DE                     i2l14149:
 35609                           
 35610                           ; BSR set to: 0
 35611                           ;inputs_MC50.c: 168:                 RFcount++;
 35612  0043DE  4B7E               	infsnz	_RFcount& (0+255),f,b
 35613  0043E0  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35614                           
 35615                           ; BSR set to: 0
 35616                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 35617  0043E2  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35618  0043E4  0012               	return	
 35619  0043E6  517F               	movf	(_RFcount+1)& (0+255),w,b
 35620  0043E8  E104               	bnz	i2u1406_40
 35621  0043EA  0E0A               	movlw	10
 35622  0043EC  5D7E               	subwf	_RFcount& (0+255),w,b
 35623  0043EE  A0D8               	btfss	status,0,c
 35624  0043F0  0012               	return	
 35625  0043F2                     i2u1406_40:
 35626  0043F2  D71D               	goto	i2u1388_40
 35627  0043F4                     i2l14155:
 35628                           
 35629                           ; BSR set to: 1
 35630                           ;inputs_MC50.c: 177:             if (RFBit) {
 35631  0043F4  0100               	movlb	0	; () banked
 35632  0043F6  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35633  0043F8  B4D8               	btfsc	status,2,c
 35634  0043FA  D004               	goto	i2l14159
 35635                           
 35636                           ; BSR set to: 0
 35637                           ;inputs_MC50.c: 181:                 RFstate = 4;
 35638  0043FC  0E04               	movlw	4
 35639  0043FE  0101               	movlb	1	; () banked
 35640  004400  6F9A               	movwf	_RFstate& (0+255),b
 35641                           
 35642                           ;inputs_MC50.c: 183:             } else {
 35643  004402  0012               	return	
 35644  004404                     i2l14159:
 35645                           
 35646                           ; BSR set to: 0
 35647                           ;inputs_MC50.c: 184:                 RFcount--;
 35648  004404  077E               	decf	_RFcount& (0+255),f,b
 35649  004406  A0D8               	btfss	status,0,c
 35650  004408  077F               	decf	(_RFcount+1)& (0+255),f,b
 35651                           
 35652                           ; BSR set to: 0
 35653                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 35654  00440A  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 35655  00440C  0012               	return	
 35656  00440E  0EF6               	movlw	246
 35657  004410  5D7E               	subwf	_RFcount& (0+255),w,b
 35658  004412  0EFF               	movlw	255
 35659  004414  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 35660  004416  B0D8               	btfsc	status,0,c
 35661  004418  0012               	return	
 35662  00441A  D747               	goto	i2u1393_40
 35663  00441C                     i2l14165:
 35664                           
 35665                           ; BSR set to: 1
 35666                           ;inputs_MC50.c: 197:             RFstate = 1;
 35667  00441C  0E01               	movlw	1
 35668  00441E  6F9A               	movwf	_RFstate& (0+255),b
 35669                           
 35670                           ;inputs_MC50.c: 198:             RFcount = 0;
 35671  004420  0E00               	movlw	0
 35672  004422  0100               	movlb	0	; () banked
 35673  004424  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35674  004426  0E00               	movlw	0
 35675  004428  6F7E               	movwf	_RFcount& (0+255),b
 35676                           
 35677                           ;inputs_MC50.c: 199:             Bptr = 0;
 35678  00442A  0E00               	movlw	0
 35679  00442C  6F8D               	movwf	_Bptr& (0+255),b
 35680                           
 35681                           ;inputs_MC50.c: 200:             BitCount = 0;
 35682  00442E  0E00               	movlw	0
 35683  004430  6F8C               	movwf	_BitCount& (0+255),b
 35684                           
 35685                           ;inputs_MC50.c: 201:             break;
 35686  004432  0012               	return	
 35687  004434                     i2l14169:
 35688                           
 35689                           ; BSR set to: 0
 35690  004434  0101               	movlb	1	; () banked
 35691  004436  519A               	movf	_RFstate& (0+255),w,b
 35692  004438  6E01               	movwf	??_rxi^0,c
 35693  00443A  6A02               	clrf	(??_rxi+1)^0,c
 35694                           
 35695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35696                           ; Switch size 1, requested type "simple"
 35697                           ; Number of cases is 1, Range of values is 0 to 0
 35698                           ; switch strategies available:
 35699                           ; Name         Instructions Cycles
 35700                           ; simple_byte            4     3 (average)
 35701                           ;	Chosen strategy is simple_byte
 35702  00443C  5002               	movf	(??_rxi+1)^0,w,c
 35703  00443E  0A00               	xorlw	0	; case 0
 35704  004440  A4D8               	btfss	status,2,c
 35705  004442  D7EC               	goto	i2l14165
 35706                           
 35707                           ; BSR set to: 1
 35708                           ; Switch size 1, requested type "simple"
 35709                           ; Number of cases is 6, Range of values is 0 to 5
 35710                           ; switch strategies available:
 35711                           ; Name         Instructions Cycles
 35712                           ; simple_byte           19    10 (average)
 35713                           ;	Chosen strategy is simple_byte
 35714  004444  5001               	movf	??_rxi^0,w,c
 35715  004446  0A00               	xorlw	0	; case 0
 35716  004448  B4D8               	btfsc	status,2,c
 35717  00444A  D7E8               	goto	i2l14165
 35718  00444C  0A01               	xorlw	1	; case 1
 35719  00444E  B4D8               	btfsc	status,2,c
 35720  004450  D735               	goto	i2l14095
 35721  004452  0A03               	xorlw	3	; case 2
 35722  004454  B4D8               	btfsc	status,2,c
 35723  004456  D6D8               	goto	i2l14059
 35724  004458  0A01               	xorlw	1	; case 3
 35725  00445A  B4D8               	btfsc	status,2,c
 35726  00445C  D6EC               	goto	i2l14069
 35727  00445E  0A07               	xorlw	7	; case 4
 35728  004460  B4D8               	btfsc	status,2,c
 35729  004462  D763               	goto	i2l14113
 35730  004464  0A01               	xorlw	1	; case 5
 35731  004466  B4D8               	btfsc	status,2,c
 35732  004468  D7C5               	goto	i2l14155
 35733  00446A  D7D8               	goto	i2l14165
 35734  00446C                     __end_of_rxi:
 35735                           	callstack 0
 35736                           
 35737 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 35738 ;; Defined at:
 35739 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 35740 ;; Parameters:    Size  Location     Type
 35741 ;;		None
 35742 ;; Auto vars:     Size  Location     Type
 35743 ;;		None
 35744 ;; Return value:  Size  Location     Type
 35745 ;;                  1    wreg      void 
 35746 ;; Registers used:
 35747 ;;		None
 35748 ;; Tracked objects:
 35749 ;;		On entry : 3F/2
 35750 ;;		On exit  : 3F/2
 35751 ;;		Unchanged: 3F/0
 35752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35757 ;;Total ram usage:        0 bytes
 35758 ;; Hardware stack levels used: 1
 35759 ;; This function calls:
 35760 ;;		Nothing
 35761 ;; This function is called by:
 35762 ;;		_TMR0_Initialize
 35763 ;;		_TMR0_ISR
 35764 ;; This function uses a non-reentrant model
 35765 ;;
 35766                           
 35767                           	psect	text200
 35768  00921C                     __ptext200:
 35769                           	callstack 0
 35770  00921C                     _TMR0_DefaultInterruptHandler:
 35771                           	callstack 15
 35772                           
 35773                           ; BSR set to: 2
 35774                           
 35775                           ;incstack = 0
 35776  00921C  0012               	return		;funcret
 35777  00921E                     __end_of_TMR0_DefaultInterruptHandler:
 35778                           	callstack 0
 35779                           
 35780 ;; *************** function _EUSART1_Transmit_ISR *****************
 35781 ;; Defined at:
 35782 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 35783 ;; Parameters:    Size  Location     Type
 35784 ;;		None
 35785 ;; Auto vars:     Size  Location     Type
 35786 ;;		None
 35787 ;; Return value:  Size  Location     Type
 35788 ;;                  1    wreg      void 
 35789 ;; Registers used:
 35790 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35791 ;; Tracked objects:
 35792 ;;		On entry : 3F/2
 35793 ;;		On exit  : 30/0
 35794 ;;		Unchanged: 0/0
 35795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35800 ;;Total ram usage:        0 bytes
 35801 ;; Hardware stack levels used: 1
 35802 ;; This function calls:
 35803 ;;		Nothing
 35804 ;; This function is called by:
 35805 ;;		_EUSART1_Initialize
 35806 ;;		_INTERRUPT_InterruptManager
 35807 ;; This function uses a non-reentrant model
 35808 ;;
 35809                           
 35810                           	psect	text201
 35811  008A0A                     __ptext201:
 35812                           	callstack 0
 35813  008A0A                     _EUSART1_Transmit_ISR:
 35814                           	callstack 16
 35815                           
 35816                           ; BSR set to: 2
 35817                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 35818                           
 35819                           ; BSR set to: 2
 35820                           ;incstack = 0
 35821  008A0A  0E08               	movlw	8
 35822  008A0C  0101               	movlb	1	; () banked
 35823  008A0E  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 35824  008A10  D012               	goto	i2l106
 35825                           
 35826                           ; BSR set to: 1
 35827                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 35828  008A12  0E84               	movlw	low _eusart1TxBuffer
 35829  008A14  0100               	movlb	0	; () banked
 35830  008A16  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 35831  008A18  6ED9               	movwf	fsr2l,c
 35832  008A1A  6ADA               	clrf	fsr2h,c
 35833  008A1C  0E02               	movlw	high _eusart1TxBuffer
 35834  008A1E  22DA               	addwfc	fsr2h,f,c
 35835  008A20  50DF               	movf	indf2,w,c
 35836  008A22  6E9A               	movwf	154,c	;volatile
 35837                           
 35838                           ; BSR set to: 0
 35839  008A24  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 35840                           
 35841                           ; BSR set to: 0
 35842                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 35843  008A26  0E07               	movlw	7
 35844  008A28  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 35845  008A2A  D002               	goto	i2l16169
 35846                           
 35847                           ; BSR set to: 0
 35848                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 35849  008A2C  0E00               	movlw	0
 35850  008A2E  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 35851  008A30                     i2l16169:
 35852                           
 35853                           ; BSR set to: 0
 35854                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 35855  008A30  0101               	movlb	1	; () banked
 35856  008A32  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 35857                           
 35858                           ;mcc_generated_files/eusart1.c: 209:     }
 35859  008A34  0012               	return	
 35860  008A36                     i2l106:
 35861                           
 35862                           ; BSR set to: 1
 35863                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 35864  008A36  010E               	movlb	14	; () banked
 35865  008A38  99C5               	bcf	197,4,b	;volatile
 35866  008A3A  0012               	return		;funcret
 35867  008A3C                     __end_of_EUSART1_Transmit_ISR:
 35868                           	callstack 0
 35869                           
 35870 ;; *************** function _EUSART1_Receive_ISR *****************
 35871 ;; Defined at:
 35872 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 35873 ;; Parameters:    Size  Location     Type
 35874 ;;		None
 35875 ;; Auto vars:     Size  Location     Type
 35876 ;;		None
 35877 ;; Return value:  Size  Location     Type
 35878 ;;                  1    wreg      void 
 35879 ;; Registers used:
 35880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 35881 ;; Tracked objects:
 35882 ;;		On entry : 3F/2
 35883 ;;		On exit  : 0/0
 35884 ;;		Unchanged: 0/0
 35885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35890 ;;Total ram usage:        0 bytes
 35891 ;; Hardware stack levels used: 1
 35892 ;; Hardware stack levels required when called: 2
 35893 ;; This function calls:
 35894 ;;		Absolute function
 35895 ;;		_EUSART1_DefaultErrorHandler
 35896 ;;		_EUSART1_DefaultFramingErrorHandler
 35897 ;;		_EUSART1_DefaultOverrunErrorHandler
 35898 ;;		_EUSART1_RxDataHandler
 35899 ;; This function is called by:
 35900 ;;		_EUSART1_Initialize
 35901 ;;		_INTERRUPT_InterruptManager
 35902 ;; This function uses a non-reentrant model
 35903 ;;
 35904                           
 35905                           	psect	text202
 35906  007398                     __ptext202:
 35907                           	callstack 0
 35908  007398                     _EUSART1_Receive_ISR:
 35909                           	callstack 14
 35910                           
 35911                           ; BSR set to: 2
 35912                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 35913                           
 35914                           ;incstack = 0
 35915  007398  0E74               	movlw	low _eusart1RxStatusBuffer
 35916  00739A  0100               	movlb	0	; () banked
 35917  00739C  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 35918  00739E  6ED9               	movwf	fsr2l,c
 35919  0073A0  6ADA               	clrf	fsr2h,c
 35920  0073A2  0E02               	movlw	high _eusart1RxStatusBuffer
 35921  0073A4  22DA               	addwfc	fsr2h,f,c
 35922  0073A6  0E00               	movlw	0
 35923  0073A8  6EDF               	movwf	indf2,c
 35924                           
 35925                           ; BSR set to: 0
 35926                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 35927  0073AA  A49D               	btfss	157,2,c	;volatile
 35928  0073AC  D013               	goto	i2u1816_49
 35929                           
 35930                           ; BSR set to: 0
 35931                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 35932  0073AE  0E74               	movlw	low _eusart1RxStatusBuffer
 35933  0073B0  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 35934  0073B2  6ED9               	movwf	fsr2l,c
 35935  0073B4  6ADA               	clrf	fsr2h,c
 35936  0073B6  0E02               	movlw	high _eusart1RxStatusBuffer
 35937  0073B8  22DA               	addwfc	fsr2h,f,c
 35938  0073BA  0102               	movlb	2	; () banked
 35939  0073BC  82DF               	bsf	indf2,1,c
 35940                           
 35941                           ; BSR set to: 2
 35942                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 35943  0073BE  D801               	call	i2u1816_48
 35944  0073C0  D009               	goto	i2u1816_49
 35945  0073C2                     i2u1816_48:
 35946  0073C2  0005               	push	
 35947  0073C4  6EFA               	movwf	pclath,c
 35948  0073C6  51E7               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 35949  0073C8  6EFD               	movwf	tosl,c
 35950  0073CA  51E8               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 35951  0073CC  6EFE               	movwf	tosh,c
 35952  0073CE  6AFF               	clrf	tosu,c
 35953  0073D0  50FA               	movf	pclath,w,c
 35954  0073D2  0012               	return		;indir
 35955  0073D4                     i2u1816_49:
 35956                           
 35957                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 35958  0073D4  A29D               	btfss	157,1,c	;volatile
 35959  0073D6  D014               	goto	i2u1818_49
 35960                           
 35961                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 35962  0073D8  0E74               	movlw	low _eusart1RxStatusBuffer
 35963  0073DA  0100               	movlb	0	; () banked
 35964  0073DC  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 35965  0073DE  6ED9               	movwf	fsr2l,c
 35966  0073E0  6ADA               	clrf	fsr2h,c
 35967  0073E2  0E02               	movlw	high _eusart1RxStatusBuffer
 35968  0073E4  22DA               	addwfc	fsr2h,f,c
 35969  0073E6  0102               	movlb	2	; () banked
 35970  0073E8  84DF               	bsf	indf2,2,c
 35971                           
 35972                           ; BSR set to: 2
 35973                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 35974  0073EA  D801               	call	i2u1818_48
 35975  0073EC  D009               	goto	i2u1818_49
 35976  0073EE                     i2u1818_48:
 35977  0073EE  0005               	push	
 35978  0073F0  6EFA               	movwf	pclath,c
 35979  0073F2  51E5               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 35980  0073F4  6EFD               	movwf	tosl,c
 35981  0073F6  51E6               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 35982  0073F8  6EFE               	movwf	tosh,c
 35983  0073FA  6AFF               	clrf	tosu,c
 35984  0073FC  50FA               	movf	pclath,w,c
 35985  0073FE  0012               	return		;indir
 35986  007400                     i2u1818_49:
 35987                           
 35988                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 35989  007400  0E74               	movlw	low _eusart1RxStatusBuffer
 35990  007402  0100               	movlb	0	; () banked
 35991  007404  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 35992  007406  6ED9               	movwf	fsr2l,c
 35993  007408  6ADA               	clrf	fsr2h,c
 35994  00740A  0E02               	movlw	high _eusart1RxStatusBuffer
 35995  00740C  22DA               	addwfc	fsr2h,f,c
 35996  00740E  50DF               	movf	indf2,w,c
 35997  007410  B4D8               	btfsc	status,2,c
 35998  007412  D00C               	goto	i2l16189
 35999                           
 36000                           ; BSR set to: 0
 36001                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 36002  007414  D801               	call	i2u1820_48
 36003  007416  0012               	return	
 36004  007418                     i2u1820_48:
 36005  007418  0005               	push	
 36006  00741A  6EFA               	movwf	pclath,c
 36007  00741C  0102               	movlb	2	; () banked
 36008  00741E  51E3               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 36009  007420  6EFD               	movwf	tosl,c
 36010  007422  51E4               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 36011  007424  6EFE               	movwf	tosh,c
 36012  007426  6AFF               	clrf	tosu,c
 36013  007428  50FA               	movf	pclath,w,c
 36014  00742A  0012               	return		;indir
 36015  00742C                     i2l16189:
 36016                           
 36017                           ; BSR set to: 0
 36018                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 36019  00742C  EC37  F047         	call	_EUSART1_RxDataHandler	;wreg free
 36020  007430  0012               	return		;funcret
 36021  007432                     __end_of_EUSART1_Receive_ISR:
 36022                           	callstack 0
 36023                           
 36024 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 36025 ;; Defined at:
 36026 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 36027 ;; Parameters:    Size  Location     Type
 36028 ;;		None
 36029 ;; Auto vars:     Size  Location     Type
 36030 ;;		None
 36031 ;; Return value:  Size  Location     Type
 36032 ;;                  1    wreg      void 
 36033 ;; Registers used:
 36034 ;;		None
 36035 ;; Tracked objects:
 36036 ;;		On entry : 3F/2
 36037 ;;		On exit  : 3F/2
 36038 ;;		Unchanged: 3F/0
 36039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36044 ;;Total ram usage:        0 bytes
 36045 ;; Hardware stack levels used: 1
 36046 ;; This function calls:
 36047 ;;		Nothing
 36048 ;; This function is called by:
 36049 ;;		_EUSART1_Initialize
 36050 ;;		_EUSART1_Receive_ISR
 36051 ;; This function uses a non-reentrant model
 36052 ;;
 36053                           
 36054                           	psect	text203
 36055  0091D8                     __ptext203:
 36056                           	callstack 0
 36057  0091D8                     _EUSART1_DefaultOverrunErrorHandler:
 36058                           	callstack 15
 36059                           
 36060                           ; BSR set to: 2
 36061                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 36062                           
 36063                           ;incstack = 0
 36064  0091D8  989D               	bcf	157,4,c	;volatile
 36065                           
 36066                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 36067  0091DA  889D               	bsf	157,4,c	;volatile
 36068                           
 36069                           ; BSR set to: 2
 36070  0091DC  0012               	return		;funcret
 36071  0091DE                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 36072                           	callstack 0
 36073                           
 36074 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 36075 ;; Defined at:
 36076 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 36077 ;; Parameters:    Size  Location     Type
 36078 ;;		None
 36079 ;; Auto vars:     Size  Location     Type
 36080 ;;		None
 36081 ;; Return value:  Size  Location     Type
 36082 ;;                  1    wreg      void 
 36083 ;; Registers used:
 36084 ;;		None
 36085 ;; Tracked objects:
 36086 ;;		On entry : 3F/2
 36087 ;;		On exit  : 3F/2
 36088 ;;		Unchanged: 3F/0
 36089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36094 ;;Total ram usage:        0 bytes
 36095 ;; Hardware stack levels used: 1
 36096 ;; This function calls:
 36097 ;;		Nothing
 36098 ;; This function is called by:
 36099 ;;		_EUSART1_Initialize
 36100 ;;		_EUSART1_Receive_ISR
 36101 ;; This function uses a non-reentrant model
 36102 ;;
 36103                           
 36104                           	psect	text204
 36105  00921E                     __ptext204:
 36106                           	callstack 0
 36107  00921E                     _EUSART1_DefaultFramingErrorHandler:
 36108                           	callstack 15
 36109                           
 36110                           ; BSR set to: 2
 36111                           
 36112                           ; BSR set to: 2
 36113                           ;incstack = 0
 36114  00921E  0012               	return		;funcret
 36115  009220                     __end_of_EUSART1_DefaultFramingErrorHandler:
 36116                           	callstack 0
 36117                           
 36118 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 36119 ;; Defined at:
 36120 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 36121 ;; Parameters:    Size  Location     Type
 36122 ;;		None
 36123 ;; Auto vars:     Size  Location     Type
 36124 ;;		None
 36125 ;; Return value:  Size  Location     Type
 36126 ;;                  1    wreg      void 
 36127 ;; Registers used:
 36128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36129 ;; Tracked objects:
 36130 ;;		On entry : 3F/2
 36131 ;;		On exit  : 3F/0
 36132 ;;		Unchanged: 0/0
 36133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36138 ;;Total ram usage:        0 bytes
 36139 ;; Hardware stack levels used: 1
 36140 ;; Hardware stack levels required when called: 1
 36141 ;; This function calls:
 36142 ;;		_EUSART1_RxDataHandler
 36143 ;; This function is called by:
 36144 ;;		_EUSART1_Initialize
 36145 ;;		_EUSART1_Receive_ISR
 36146 ;; This function uses a non-reentrant model
 36147 ;;
 36148                           
 36149                           	psect	text205
 36150  0091DE                     __ptext205:
 36151                           	callstack 0
 36152  0091DE                     _EUSART1_DefaultErrorHandler:
 36153                           	callstack 14
 36154                           
 36155                           ; BSR set to: 2
 36156                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 36157                           
 36158                           ; BSR set to: 2
 36159                           ;incstack = 0
 36160  0091DE  EC37  F047         	call	_EUSART1_RxDataHandler	;wreg free
 36161                           
 36162                           ; BSR set to: 0
 36163  0091E2  0012               	return		;funcret
 36164  0091E4                     __end_of_EUSART1_DefaultErrorHandler:
 36165                           	callstack 0
 36166                           
 36167 ;; *************** function _EUSART1_RxDataHandler *****************
 36168 ;; Defined at:
 36169 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 36170 ;; Parameters:    Size  Location     Type
 36171 ;;		None
 36172 ;; Auto vars:     Size  Location     Type
 36173 ;;		None
 36174 ;; Return value:  Size  Location     Type
 36175 ;;                  1    wreg      void 
 36176 ;; Registers used:
 36177 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36178 ;; Tracked objects:
 36179 ;;		On entry : 3D/0
 36180 ;;		On exit  : 3F/0
 36181 ;;		Unchanged: 0/0
 36182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36187 ;;Total ram usage:        0 bytes
 36188 ;; Hardware stack levels used: 1
 36189 ;; This function calls:
 36190 ;;		Nothing
 36191 ;; This function is called by:
 36192 ;;		_EUSART1_Receive_ISR
 36193 ;;		_EUSART1_DefaultErrorHandler
 36194 ;; This function uses a non-reentrant model
 36195 ;;
 36196                           
 36197                           	psect	text206
 36198  008E6E                     __ptext206:
 36199                           	callstack 0
 36200  008E6E                     _EUSART1_RxDataHandler:
 36201                           	callstack 15
 36202                           
 36203                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 36204                           
 36205                           ; BSR set to: 0
 36206                           ;incstack = 0
 36207  008E6E  0E7C               	movlw	low _eusart1RxBuffer
 36208  008E70  0100               	movlb	0	; () banked
 36209  008E72  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36210  008E74  6ED9               	movwf	fsr2l,c
 36211  008E76  6ADA               	clrf	fsr2h,c
 36212  008E78  0E02               	movlw	high _eusart1RxBuffer
 36213  008E7A  22DA               	addwfc	fsr2h,f,c
 36214  008E7C  CF99 FFDF          	movff	3993,indf2	;volatile
 36215                           
 36216                           ; BSR set to: 0
 36217  008E80  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 36218                           
 36219                           ; BSR set to: 0
 36220                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 36221  008E82  0E07               	movlw	7
 36222  008E84  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 36223  008E86  D002               	goto	i2l12523
 36224                           
 36225                           ; BSR set to: 0
 36226                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 36227  008E88  0E00               	movlw	0
 36228  008E8A  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 36229  008E8C                     i2l12523:
 36230                           
 36231                           ; BSR set to: 0
 36232                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 36233  008E8C  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 36234                           
 36235                           ; BSR set to: 0
 36236  008E8E  0012               	return		;funcret
 36237  008E90                     __end_of_EUSART1_RxDataHandler:
 36238                           	callstack 0
 36239                           
 36240                           	psect	text207
 36241  000000                     __ptext207:
 36242                           	callstack 0
 36243                           
 36244                           	psect	rparam
 36245  0000                     
 36246                           	psect	temp
 36247  000050                     btemp:
 36248                           	callstack 0
 36249  000050                     	ds	1
 36250  0000                     int$flags	set	btemp
 36251  0000                     wtemp8	set	btemp+1
 36252  0000                     ttemp5	set	btemp+1
 36253  0000                     ttemp6	set	btemp+4
 36254  0000                     ttemp7	set	btemp+8
 36255                           
 36256                           	psect	idloc
 36257                           
 36258                           ;Config register IDLOC0 @ 0x200000
 36259                           ;	unspecified, using default values
 36260  200000                     	org	2097152
 36261  200000  0FFF               	dw	4095
 36262                           
 36263                           ;Config register IDLOC1 @ 0x200002
 36264                           ;	unspecified, using default values
 36265  200002                     	org	2097154
 36266  200002  0FFF               	dw	4095
 36267                           
 36268                           ;Config register IDLOC2 @ 0x200004
 36269                           ;	unspecified, using default values
 36270  200004                     	org	2097156
 36271  200004  0FFF               	dw	4095
 36272                           
 36273                           ;Config register IDLOC3 @ 0x200006
 36274                           ;	unspecified, using default values
 36275  200006                     	org	2097158
 36276  200006  0FFF               	dw	4095
 36277                           
 36278                           ;Config register IDLOC4 @ 0x200008
 36279                           ;	unspecified, using default values
 36280  200008                     	org	2097160
 36281  200008  0FFF               	dw	4095
 36282                           
 36283                           ;Config register IDLOC5 @ 0x20000A
 36284                           ;	unspecified, using default values
 36285  20000A                     	org	2097162
 36286  20000A  0FFF               	dw	4095
 36287                           
 36288                           ;Config register IDLOC6 @ 0x20000C
 36289                           ;	unspecified, using default values
 36290  20000C                     	org	2097164
 36291  20000C  0FFF               	dw	4095
 36292                           
 36293                           ;Config register IDLOC7 @ 0x20000E
 36294                           ;	unspecified, using default values
 36295  20000E                     	org	2097166
 36296  20000E  0FFF               	dw	4095
 36297                           
 36298                           	psect	config
 36299                           
 36300                           ;Config register CONFIG1L @ 0x300000
 36301                           ;	External Oscillator mode Selection bits
 36302                           ;	FEXTOSC = OFF, Oscillator not enabled
 36303                           ;	Power-up default value for COSC bits
 36304                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 36305  300000                     	org	3145728
 36306  300000  8C                 	db	140
 36307                           
 36308                           ;Config register CONFIG1H @ 0x300001
 36309                           ;	Clock Out Enable bit
 36310                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 36311                           ;	Clock Switch Enable bit
 36312                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 36313                           ;	Fail-Safe Clock Monitor Enable bit
 36314                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 36315  300001                     	org	3145729
 36316  300001  FF                 	db	255
 36317                           
 36318                           ;Config register CONFIG2L @ 0x300002
 36319                           ;	Master Clear Enable bit
 36320                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 36321                           ;	Power-up Timer Enable bit
 36322                           ;	PWRTE = ON, Power up timer enabled
 36323                           ;	Low-power BOR enable bit
 36324                           ;	LPBOREN = OFF, ULPBOR disabled
 36325                           ;	Brown-out Reset Enable bits
 36326                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 36327  300002                     	org	3145730
 36328  300002  FD                 	db	253
 36329                           
 36330                           ;Config register CONFIG2H @ 0x300003
 36331                           ;	Brown Out Reset Voltage selection bits
 36332                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 36333                           ;	ZCD Disable bit
 36334                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 36335                           ;	PPSLOCK bit One-Way Set Enable bit
 36336                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 36337                           ;	Stack Full/Underflow Reset Enable bit
 36338                           ;	STVREN = ON, Stack full/underflow will cause Reset
 36339                           ;	Debugger Enable bit
 36340                           ;	DEBUG = OFF, Background debugger disabled
 36341                           ;	Extended Instruction Set Enable bit
 36342                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 36343  300003                     	org	3145731
 36344  300003  FF                 	db	255
 36345                           
 36346                           ;Config register CONFIG3L @ 0x300004
 36347                           ;	WDT Period Select bits
 36348                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 36349                           ;	WDT operating mode
 36350                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 36351  300004                     	org	3145732
 36352  300004  BF                 	db	191
 36353                           
 36354                           ;Config register CONFIG3H @ 0x300005
 36355                           ;	WDT Window Select bits
 36356                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 36357                           ;	WDT input clock selector
 36358                           ;	WDTCCS = SC, Software Control
 36359  300005                     	org	3145733
 36360  300005  FF                 	db	255
 36361                           
 36362                           ;Config register CONFIG4L @ 0x300006
 36363                           ;	Write Protection Block 0
 36364                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 36365                           ;	Write Protection Block 1
 36366                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 36367                           ;	Write Protection Block 2
 36368                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 36369                           ;	Write Protection Block 3
 36370                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 36371  300006                     	org	3145734
 36372  300006  FF                 	db	255
 36373                           
 36374                           ;Config register CONFIG4H @ 0x300007
 36375                           ;	Configuration Register Write Protection bit
 36376                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 36377                           ;	Boot Block Write Protection bit
 36378                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 36379                           ;	Data EEPROM Write Protection bit
 36380                           ;	WRTD = OFF, Data EEPROM not write-protected
 36381                           ;	Scanner Enable bit
 36382                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 36383                           ;	Low Voltage Programming Enable bit
 36384                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 36385  300007                     	org	3145735
 36386  300007  DF                 	db	223
 36387                           
 36388                           ;Config register CONFIG5L @ 0x300008
 36389                           ;	UserNVM Program Memory Code Protection bit
 36390                           ;	CP = ON, UserNVM code protection enabled
 36391                           ;	DataNVM Memory Code Protection bit
 36392                           ;	CPD = ON, DataNVM code protection enabled
 36393  300008                     	org	3145736
 36394  300008  FC                 	db	252
 36395                           
 36396                           ;Config register CONFIG5H @ 0x300009
 36397                           ;	unspecified, using default values
 36398  300009                     	org	3145737
 36399  300009  FF                 	db	255
 36400                           
 36401                           ;Config register CONFIG6L @ 0x30000A
 36402                           ;	Table Read Protection Block 0
 36403                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 36404                           ;	Table Read Protection Block 1
 36405                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 36406                           ;	Table Read Protection Block 2
 36407                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 36408                           ;	Table Read Protection Block 3
 36409                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 36410  30000A                     	org	3145738
 36411  30000A  FF                 	db	255
 36412                           
 36413                           ;Config register CONFIG6H @ 0x30000B
 36414                           ;	Boot Block Table Read Protection bit
 36415                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 36416  30000B                     	org	3145739
 36417  30000B  FF                 	db	255
 36418                           tosu	equ	0xFFF
 36419                           tosh	equ	0xFFE
 36420                           tosl	equ	0xFFD
 36421                           stkptr	equ	0xFFC
 36422                           pclatu	equ	0xFFB
 36423                           pclath	equ	0xFFA
 36424                           pcl	equ	0xFF9
 36425                           tblptru	equ	0xFF8
 36426                           tblptrh	equ	0xFF7
 36427                           tblptrl	equ	0xFF6
 36428                           tablat	equ	0xFF5
 36429                           prodh	equ	0xFF4
 36430                           prodl	equ	0xFF3
 36431                           indf0	equ	0xFEF
 36432                           postinc0	equ	0xFEE
 36433                           postdec0	equ	0xFED
 36434                           preinc0	equ	0xFEC
 36435                           plusw0	equ	0xFEB
 36436                           fsr0h	equ	0xFEA
 36437                           fsr0l	equ	0xFE9
 36438                           wreg	equ	0xFE8
 36439                           indf1	equ	0xFE7
 36440                           postinc1	equ	0xFE6
 36441                           postdec1	equ	0xFE5
 36442                           preinc1	equ	0xFE4
 36443                           plusw1	equ	0xFE3
 36444                           fsr1h	equ	0xFE2
 36445                           fsr1l	equ	0xFE1
 36446                           bsr	equ	0xFE0
 36447                           indf2	equ	0xFDF
 36448                           postinc2	equ	0xFDE
 36449                           postdec2	equ	0xFDD
 36450                           preinc2	equ	0xFDC
 36451                           plusw2	equ	0xFDB
 36452                           fsr2h	equ	0xFDA
 36453                           fsr2l	equ	0xFD9
 36454                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        45
    BSS         820
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     32     154
    BANK1           256      0     255
    BANK2           256      0     239
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8211$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8217$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8223$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8229$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8228	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8223	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8222	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8217	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8216	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8211	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8210	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    read_eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6605$Value	PTR unsigned char  size(2) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), var_sys_NVM.flashRGBMode(BANK0[1]), 
		 -> var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), var_sys_NVM.Stopboton(BANK0[1]), 
		 -> var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), var_sys_NVM.ligthTime(BANK0[1]), 
		 -> var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), var_sys_NVM.securityBandInOpen(BANK0[1]), 
		 -> var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), var_sys_NVM.photoCellIsON(BANK0[1]), 
		 -> var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), var_sys_NVM.homemPresente(BANK0[1]), 
		 -> var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.positionRemotesWalk(BANK0[1]), var_sys_NVM.positionRemotesFull(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), 
		 -> var_sys_NVM.motorSensitivity(BANK0[1]), var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4643$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_eusartparser
    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _saveNewSerial->_i2c_writeNBytes
    _getSerialCmd->_memcpy
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    ___awdiv->___lbmod
    _RemoveSerial->_i2c_writeNBytes
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_sm_execute_main
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_SaveNVM_VarSystem
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 6761239
                                             25 BANK0      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 2918653
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 2893229
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       5     4      1  368451
                                             57 COMRAM     1     0      1
                                              4 BANK0      4     4      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7093
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1775198
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349450
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  348151
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     767
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     908
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349363
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    0     0      0   20270
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2020
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      22
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  637029
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372567
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   53017
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   43336
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58580
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65597
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6994
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1    2401
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     283
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  740427
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  384102
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3536
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3145
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  356325
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  349416
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1741500
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  347773
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        10     9      1  359320
                                             57 COMRAM     1     0      1
                                              4 BANK0      2     2      0
                  _SaveNVM_VarSystem
                  _read_eusartparser
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1343
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (2) _read_eusartparser                                    3     2      1    5302
                                             23 COMRAM     3     2      1
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    3092
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      25
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     500
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     500
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     223
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     112
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1620
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1022
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     598
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    4118
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     576
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     317
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     161
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0     893
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    2612
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2519
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _I2C1_SetDataCompleteCallback                        4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _SaveNVM_VarSystem
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
         _i2c_readDataBlock
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___lbdiv
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
           _i2c_writeNBytes
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbdiv
         ___lbmod
         _cmdMemoryIsEmpty
           _i2c_readDataBlock
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
           _i2c_writeNBytes
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      EF       9       93.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      9A       5       96.2%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3CE      60        0.0%
DATA                 0      0     3CE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jul 15 17:37:46 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 9100  
                                _eusart1TxBufferRemaining 01FE  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 7C94  
                                           _LoadManufCode 8E08  
                                        ?_SetSegmentValue 001C  
                                                     l100 880C  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 7764  
                                                     l690 7BCA  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02DF  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 41F6  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 8AF2  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 917C  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 896C  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 003A  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2034 80DE  
                                                    l1405 5F56  
                                       readRFButtons@key1 0088  
                                                    l2039 80EA  
                                                    l1512 5412  
                                                    l2410 3984  
                                                    l2306 4D48  
                                                    l2235 6F5C  
                                                    l2323 7C90  
                                                    l1372 870A  
                                                    l1436 548E  
                                                    l3060 21B6  
                                                    l1357 6970  
                                                    l1366 6AF2  
                                                    l2502 75EA  
                                                    l2318 7C86  
                                                    l1383 5692  
                                                    l2511 890A  
                                                    l1519 545E  
                                                    l3048 202A  
                                                    l2249 665A  
                                                    l2514 8930  
                                                    l1490 52F4  
                                                    l3226 1066  
                                                    l2371 4836  
                                                    l1731 67D0  
                                                    l3083 21FC  
                                                    l1388 571A  
                                                    l2348 482A  
                                                    l1740 683C  
                                                    l1732 67D8  
                                                    l1652 5A50  
                                                    l2365 4822  
                                                    l1741 6844  
                                                    l1486 8318  
                                                    l2438 3AF6  
                                                    l1734 67F4  
                                                    l1726 6796  
                                                    l1662 5A98  
                                                    l3350 29A0  
                                                    l2375 48FA  
                                                    l1743 686E  
                                                    l1735 67FC  
                                                    l1727 679E  
                                                    l2472 3C0C  
                                                    l2392 48F2  
                                                    l3600 2EF2  
                                                    l4129 8510  
                                                    l3601 2EF8  
                                                    l1737 6818  
                                                    l1649 59DA  
                                                    l3097 22D6  
                                                    l1738 6820  
                                                    l2722 4D74  
                                                    l3603 2EFE  
                                                    l3604 2F04  
                                                    l2580 7ED4  
                                                    l2724 4DAA  
                                                    l3372 2A9A  
                                                    l3364 2A60  
                                                    l3605 2F0A  
                                                    l2805 41F4  
                                                    l2725 4E6A  
                                                    l2398 4906  
                                                    l3614 3160  
                                                    l3606 2F10  
                                                    l1854 6D6C  
                                                    l2718 46BE  
                                                    l3382 2BDE  
                                                    l3615 316A  
                                                    l3383 2BFE  
                                                    l1864 6DA0  
                                                    l1856 6D7C  
                                                    l2648 37BE  
                                                    l3609 2FDA  
                                                    l3473 7396  
                                                    l2907 19EC  
                                                    l3580 2E88  
                                                    l3590 2EC4  
                                                    l3582 2E8E  
                                                    l3591 2ECA  
                                                    l3479 8A6A  
                                                    l3584 2E98  
                                                    l2768 4010  
                                                    l3593 2ED0  
                                                    l3585 2EA2  
                                                    l3577 2E74  
                                                    l3497 8206  
                                                    l3665 7A16  
                                                    l3594 2ED6  
                                                    l3586 2EAC  
                                                    l3587 2EB2  
                                                    l3579 2E7E  
                                                    l3596 2EE0  
                                                    l3588 2EB8  
                                                    l3589 2EBE  
                                                    l3598 2EE6  
                                                    l3599 2EEC  
                                                    ?_rxi 0001  
                                                    _DKEY 02CF  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 00F1  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 90B8  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 87F6  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 5942  
                                                    _main 5C62  
                                           ?_EUSART1_Read 0001  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                         __end_of_Decrypt 6DF8  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 6F88  
                                         __end_of_ReadADC 8474  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 52D2  
                                 __end_of_TMR0_Initialize 8E4C  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 9026  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l20001 5242  
                                                   l20013 528E  
                                                   l20025 52CE  
                                                   l20017 5292  
                                                   l20041 728E  
                                                   l20113 721A  
                                                   l12211 6984  
                                                   l20061 72C0  
                                                   l20221 4B7C  
                                                   l21111 53CC  
                                                   l21103 53B0  
                                                   l20047 7292  
                                                   l20311 4CE6  
                                                   l20215 4B62  
                                                   l12231 69D6  
                                                   l12223 69B8  
                                                   l21015 7356  
                                                   l21025 826A  
                                                   l20153 77DA  
                                                   l20129 7250  
                                                   l20209 4B50  
                                                   l22001 1D40  
                                                   l12217 699E  
                                                   l21035 82B2  
                                                   l21123 53F6  
                                                   l21115 53DA  
                                                   l21107 53BE  
                                                   l20139 8A06  
                                                   l21211 50E4  
                                                   l20403 6C6C  
                                                   l12243 6A06  
                                                   l12235 69E2  
                                                   l12227 69CA  
                                                   l20165 77FA  
                                                   l20157 77DE  
                                                   l20077 72F6  
                                                   l20093 71E8  
                                                   l20317 4D0A  
                                                   l20245 4C08  
                                                   l20413 6CE0  
                                                   l12261 6A46  
                                                   l12253 6A2E  
                                                   l12237 69EC  
                                                   l21143 5442  
                                                   l21135 5426  
                                                   l21127 5404  
                                                   l21119 53E8  
                                                   l21071 5340  
                                                   l21063 5324  
                                                   l21055 5308  
                                                   l21047 52E6  
                                                   l20327 4D34  
                                                   l20319 4D10  
                                                   l20255 4C26  
                                                   l22031 1DDC  
                                                   l22023 1D8E  
                                                   l22015 1D70  
                                                   l20511 2A6E  
                                                   l20193 89D4  
                                                   l20185 89BC  
                                                   l20433 63AA  
                                                   l20409 6CA6  
                                                   l21321 44EA  
                                                   l21305 44A6  
                                                   l22105 1F44  
                                                   l12257 6A3A  
                                                   l12249 6A20  
                                                   l12265 6A50  
                                                   l12441 78E0  
                                                   l12433 78C2  
                                                   l20513 2A76  
                                                   l22121 0F24  
                                                   l23001 23E6  
                                                   l21147 5450  
                                                   l21139 5434  
                                                   l21091 5386  
                                                   l21083 536A  
                                                   l21075 534E  
                                                   l21067 5332  
                                                   l21059 5316  
                                                   l21163 4FE0  
                                                   l20371 7F26  
                                                   l20339 7E98  
                                                   l20099 71EC  
                                                   l20427 6366  
                                                   l20419 631A  
                                                   l21411 462A  
                                                   l21307 44BC  
                                                   l20451 810A  
                                                   l12451 7900  
                                                   l12427 78B2  
                                                   l20611 2C4E  
                                                   l20603 2C18  
                                                   l20523 2A8A  
                                                   l20515 2A7E  
                                                   l20507 2A12  
                                                   l22211 11AC  
                                                   l22203 1190  
                                                   l20373 7F32  
                                                   l20269 4C54  
                                                   l21341 455A  
                                                   l20453 813C  
                                                   l20613 2C6A  
                                                   l20605 2C42  
                                                   l20461 29AA  
                                                   l22301 13CC  
                                                   l22213 11D6  
                                                   l22141 0FCC  
                                                   l22133 0F88  
                                                   l22125 0F44  
                                                   l23021 2446  
                                                   l12551 76C6  
                                                   l21095 5394  
                                                   l21087 5378  
                                                   l21079 535C  
                                                   l21167 4FEA  
                                                   l21271 7184  
                                                   l21255 713C  
                                                   l22055 1E66  
                                                   l23103 375E  
                                                   l12439 78D8  
                                                   l12455 790A  
                                                   l20623 2C98  
                                                   l20607 2C46  
                                                   l20543 2AB2  
                                                   l20535 2AA2  
                                                   l20463 29B2  
                                                   l22215 11DC  
                                                   l23023 2452  
                                                   l16001 252E  
                                                   l21177 505E  
                                                   l21185 5072  
                                                   l20377 7F3A  
                                                   l21257 7152  
                                                   l21521 4E28  
                                                   l21513 4E0C  
                                                   l20289 4CB6  
                                                   l20297 4CD4  
                                                   l21425 4656  
                                                   l21361 45B2  
                                                   l22057 1E70  
                                                   l23121 3816  
                                                   l20721 2DBE  
                                                   l20713 2D9C  
                                                   l20705 2D98  
                                                   l20641 2CD4  
                                                   l20633 2CAC  
                                                   l20617 2C84  
                                                   l20553 2B0C  
                                                   l20481 29EE  
                                                   l20465 29BA  
                                                   l22401 160A  
                                                   l22225 11FA  
                                                   l22209 11AA  
                                                   l22137 0FAA  
                                                   l22129 0F66  
                                                   l23017 2432  
                                                   l12563 8D0A  
                                                   l12547 7684  
                                                   l21099 53A2  
                                                   l21195 50B8  
                                                   l21179 506E  
                                                   l21435 4672  
                                                   l21427 465A  
                                                   l21355 459A  
                                                   l23107 3780  
                                                   l23051 364C  
                                                   l23043 361C  
                                                   l12459 7918  
                                                   l12491 8CB4  
                                                   l20651 2CFC  
                                                   l20627 2CA0  
                                                   l20619 2C8E  
                                                   l20563 2B1C  
                                                   l20475 29D6  
                                                   l20467 29C2  
                                                   l22315 1412  
                                                   l22251 12D8  
                                                   l23027 245E  
                                                   l14413 5626  
                                                   l12581 6B26  
                                                   l14405 86FE  
                                                   l16021 258C  
                                                   l16013 256C  
                                                   l16005 254C  
                                                   l21277 718E  
                                                   l21509 4E02  
                                                   l21429 4660  
                                                   l21373 45D6  
                                                   l22077 1EC8  
                                                   l23117 37C0  
                                                   l20725 2DC6  
                                                   l20653 2D00  
                                                   l20645 2CDC  
                                                   l20629 2CA4  
                                                   l20573 2BA4  
                                                   l20565 2B6A  
                                                   l20549 2AFA  
                                                   l20477 29DE  
                                                   l20741 2E0C  
                                                   l22413 164E  
                                                   l22341 147C  
                                                   l22333 145E  
                                                   l22317 1416  
                                                   l22229 1226  
                                                   l22173 1044  
                                                   l22165 101E  
                                                   l22157 0FFC  
                                                   l22149 0FE4  
                                                   l22181 10AC  
                                                   l23221 5CA8  
                                                   l14423 565C  
                                                   l12575 6A8E  
                                                   l16103 27D8  
                                                   l21615 3F90  
                                                   l21519 4E20  
                                                   l21447 469C  
                                                   l21391 4610  
                                                   l22095 1EF6  
                                                   l23143 3880  
                                                   l23063 3686  
                                                   l23055 3664  
                                                   l23119 3800  
                                                   l23047 362A  
                                                   l20727 2DE2  
                                                   l20719 2DBA  
                                                   l20663 2D22  
                                                   l20647 2CF8  
                                                   l20639 2CD0  
                                                   l20479 29E6  
                                                   l20743 2E5E  
                                                   l22431 1694  
                                                   l22343 147E  
                                                   l22319 1422  
                                                   l22247 12B6  
                                                   l22183 10C2  
                                                   l23231 5CBE  
                                                   l14441 574C  
                                                   l14433 5700  
                                                   l14417 563C  
                                                   l22513 5E30  
                                                   l17001 3B74  
                                                   l16041 25EA  
                                                   l16033 25BC  
                                                   l16025 259C  
                                                   l16017 257C  
                                                   l16009 255C  
                                                   l21713 414E  
                                                   l21617 3FA6  
                                                   l21553 4E84  
                                                   l21545 4E66  
                                                   l21529 4E3E  
                                                   l22089 1EE0  
                                                   l21801 1928  
                                                   l20905 3378  
                                                   l20673 2D32  
                                                   l20665 2D26  
                                                   l20657 2D04  
                                                   l20497 2A06  
                                                   l20489 29FA  
                                                   l22441 16BC  
                                                   l22353 14F2  
                                                   l22193 112A  
                                                   l14371 68F2  
                                                   l22531 5EA2  
                                                   l17011 3B98  
                                                   l16131 2FE0  
                                                   l21731 4172  
                                                   l21715 4156  
                                                   l21563 4EAA  
                                                   l21539 4E50  
                                                   l21467 4D64  
                                                   l23163 38E0  
                                                   l23091 371C  
                                                   l23075 36BE  
                                                   l12499 8CCC  
                                                   l20931 346C  
                                                   l20907 33B0  
                                                   l20667 2D2A  
                                                   l22427 1688  
                                                   l22419 1666  
                                                   l22179 1068  
                                                   l23251 5D70  
                                                   l14437 572A  
                                                   l14373 68FA  
                                                   l14357 689E  
                                                   l22533 5EA6  
                                                   l17021 3BCE  
                                                   l17005 3B88  
                                                   l11981 87F8  
                                                   l16109 2836  
                                                   l16061 263A  
                                                   l16053 261A  
                                                   l16045 25FA  
                                                   l16037 25DA  
                                                   l16029 25AC  
                                                   l16117 2894  
                                                   l16133 3052  
                                                   l22701 6E40  
                                                   l22621 5966  
                                                   l21741 4190  
                                                   l21709 4146  
                                                   l21629 3FFE  
                                                   l21389 460A  
                                                   l21821 198A  
                                                   l21813 1968  
                                                   l23173 38FC  
                                                   l23165 38E6  
                                                   l13813 79C8  
                                                   l20941 34A6  
                                                   l20909 33B6  
                                                   l20693 2D70  
                                                   l20685 2D66  
                                                   l20669 2D2E  
                                                   l22373 1584  
                                                   l22349 14D0  
                                                   l22277 1344  
                                                   l22269 1328  
                                                   l22285 1360  
                                                   l23261 5D8E  
                                                   l23245 5D4C  
                                                   l16135 30A0  
                                                   l16127 2F1A  
                                                   l21727 4168  
                                                   l21575 4ED8  
                                                   l21903 1B4C  
                                                   l23167 38EA  
                                                   l23183 3910  
                                                   l23079 36E0  
                                                   l13815 79D4  
                                                   l20927 3432  
                                                   l20679 2D5C  
                                                   l22471 17E4  
                                                   l22447 16CE  
                                                   l14377 6906  
                                                   l22545 5EDA  
                                                   l17033 3C10  
                                                   l17017 3BBA  
                                                   l16073 2678  
                                                   l16065 264A  
                                                   l16057 262A  
                                                   l16049 260A  
                                                   l16137 3112  
                                                   l16129 2F8C  
                                                   l22705 6E50  
                                                   l21729 416C  
                                                   l21681 40E6  
                                                   l21649 4076  
                                                   l21593 4F14  
                                                   l21809 194E  
                                                   l23177 3902  
                                                   l23169 38F6  
                                                   l13825 7A08  
                                                   l22473 17EA  
                                                   l22449 16D6  
                                                   l22369 1562  
                                                   l22801 20FE  
                                                   l13835 84DE  
                                                   l22547 5EF0  
                                                   l17043 3C4C  
                                                   l11995 882C  
                                                   l16083 26F4  
                                                   l22707 6E62  
                                                   l22715 6E96  
                                                   l22651 5A0E  
                                                   l22643 59E0  
                                                   l21691 4108  
                                                   l21499 4DDE  
                                                   l21931 1BD4  
                                                   l21907 1B5A  
                                                   l21851 1A44  
                                                   l20939 3492  
                                                   l20699 2D8E  
                                                   l22459 1710  
                                                   l22811 210E  
                                                   l22723 1F86  
                                                   l13837 84E6  
                                                   l14389 692C  
                                                   l14709 75E6  
                                                   l17037 3C28  
                                                   l11997 8830  
                                                   l16069 265A  
                                                   l16149 3174  
                                                   l22709 6E7C  
                                                   l21765 41DC  
                                                   l21749 41AA  
                                                   l21669 40C2  
                                                   l21589 4F08  
                                                   l21909 1B64  
                                                   l21837 19CA  
                                                   l21829 19A2  
                                                   l21781 18AE  
                                                   l21773 187E  
                                                   l22469 17DE  
                                                   l22389 15D0  
                                                   l22741 2012  
                                                   l22733 1FD0  
                                                   l13847 8506  
                                                   l17039 3C36  
                                                   l16095 27B0  
                                                   l16079 26D6  
                                                   l22655 5A34  
                                                   l21687 4100  
                                                   l21943 1C2A  
                                                   l21847 19EE  
                                                   l20887 32FA  
                                                   l22911 2292  
                                                   l22823 2140  
                                                   l22751 206E  
                                                   l17049 3C66  
                                                   l14665 7C7C  
                                                   l16089 2752  
                                                   l22593 627C  
                                                   l22673 5AB4  
                                                   l22657 5A3A  
                                                   l13953 86D6  
                                                   l21697 411C  
                                                   l21793 1904  
                                                   l21849 1A2E  
                                                   l20993 35B2  
                                                   l20897 331C  
                                                   l22489 1830  
                                                   l22841 218C  
                                                   l22817 2126  
                                                   l22737 1FF0  
                                                   l22729 1FAE  
                                                   l14675 890C  
                                                   l14691 7582  
                                                   l14659 7C60  
                                                   l16099 27C4  
                                                   l22691 6E0A  
                                                   l22675 5ABC  
                                                   l21699 4122  
                                                   l21963 1C7A  
                                                   l21875 1AE0  
                                                   l21867 1AA2  
                                                   l20987 359C  
                                                   l20899 331E  
                                                   l22931 22C6  
                                                   l22923 22A8  
                                                   l22851 21C6  
                                                   l22827 2152  
                                                   l22771 20BC  
                                                   l22763 20A0  
                                                   l22747 202C  
                                                   l14693 758A  
                                                   l21869 1AC0  
                                                   l21789 18E0  
                                                   l13797 8A64  
                                                   l22861 21EC  
                                                   l22781 20CA  
                                                   l22757 2080  
                                                   l22749 2058  
                                                   l19103 8152  
                                                   l14687 7572  
                                                   l22695 6E2A  
                                                   l22687 6DFA  
                                                   l22679 5AC8  
                                                   l16535 7FD6  
                                                   l21975 1CD0  
                                                   l22847 21AC  
                                                   l19113 8160  
                                                   l19041 771C  
                                                   l19033 7710  
                                                   l14689 757A  
                                                   l14697 7592  
                                                   l16457 8FAE  
                                                   l16625 6868  
                                                   l16713 853C  
                                                   l16553 800E  
                                                   l16545 7FF8  
                                                   l16537 7FDA  
                                                   l22953 230E  
                                                   l22849 21B8  
                                                   l22793 20E0  
                                                   l19107 8158  
                                                   l19211 8B46  
                                                   l14699 75BA  
                                                   l16563 6780  
                                                   l16555 8012  
                                                   l22883 2236  
                                                   l19037 7716  
                                                   l19205 8B3A  
                                                   l16653 648C  
                                                   l16901 3966  
                                                   l16821 4714  
                                                   l16813 46F8  
                                                   l16565 678A  
                                                   l22973 2364  
                                                   l22957 231E  
                                                   l19119 8166  
                                                   l19055 778C  
                                                   l19047 7722  
                                                   l19143 85C2  
                                                   l16639 6458  
                                                   l16823 471A  
                                                   l16807 46E8  
                                                   l22967 2340  
                                                   l19081 7BD4  
                                                   l19153 85CE  
                                                   l16577 67BA  
                                                   l22897 226E  
                                                   l22889 2254  
                                                   l19147 85C8  
                                                   l19307 6F12  
                                                   l16931 3A0A  
                                                   l16907 3986  
                                                   l16579 67C4  
                                                   l19077 7BCE  
                                                   l19309 6F1E  
                                                   l16693 6526  
                                                   l16669 64C6  
                                                   l16941 3A46  
                                                   l16781 80A6  
                                                   l15981 248E  
                                                   l19501 549C  
                                                   l19405 6D68  
                                                   l19341 83D8  
                                                   l19087 7BDA  
                                                   l19175 909C  
                                                   l19319 6F4C  
                                                   l16679 64F2  
                                                   l16943 3A54  
                                                   l16935 3A1E  
                                                   l16919 39D0  
                                                   l16863 4812  
                                                   l16839 4766  
                                                   l15983 24AA  
                                                   l19415 6D78  
                                                   l22999 23D2  
                                                   l19169 848C  
                                                   l19361 7DDC  
                                                   l19353 7DA0  
                                                   l19329 6F7E  
                                                   l16865 4816  
                                                   l16785 80B8  
                                                   l15993 24F2  
                                                   l15985 24C4  
                                                   l19521 5556  
                                                   l19345 83EC  
                                                   l19179 90A4  
                                                   l19259 79A2  
                                                   l16963 3AB2  
                                                   l16947 3A6A  
                                                   l16891 48E2  
                                                   l16867 4824  
                                                   l19515 5544  
                                                   l19507 54E0  
                                                   l19427 6D98  
                                                   l19419 6D84  
                                                   l19451 6BAC  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l19285 8782  
                                                   l19293 87A2  
                                                   l16965 3AC2  
                                                   l16949 3A78  
                                                   l16893 48E6  
                                                   l16869 483A  
                                                   l16789 80CC  
                                                   l15997 2510  
                                                   l15989 24E2  
                                                   l19517 5548  
                                                   l19279 8E6A  
                                                   l16895 48F4  
                                                   l19367 7D1E  
                                                   l19535 55FE  
                                                   l19527 559A  
                                                   l19463 6C1C  
                                                   l19455 6BD8  
                                                   l19703 65A2  
                                                   l16969 3AD8  
                                                   l16977 3B02  
                                                   l19377 7D68  
                                                   l19537 5602  
                                                   l19801 3DCC  
                                                   l19299 6ED6  
                                                   l16995 3B4E  
                                                   l19651 6106  
                                                   l19491 875A  
                                                   l19555 7A76  
                                                   l19563 7516  
                                                   l19547 7E32  
                                                   l19811 3E64  
                                                   l19803 3DFA  
                                                   l18845 7F80  
                                                   l19645 60B4  
                                                   l19397 6D4E  
                                                   l19485 824C  
                                                   l19709 65F6  
                                                   l19573 7558  
                                                   l19565 7548  
                                                   l19813 3E7E  
                                                   l19805 3E16  
                                                   l16999 3B66  
                                                   l19671 61B2  
                                                   l19903 5144  
                                                   l19823 3F02  
                                                   l19807 3E32  
                                                   l19665 619C  
                                                   l19921 5182  
                                                   l19593 8632  
                                                   l19809 3E4A  
                                                   l19817 3E90  
                                                   l19761 3C94  
                                                   l19499 5496  
                                                   l19851 8960  
                                                   l19843 894A  
                                                   l19595 864C  
                                                   l19827 3F3E  
                                                   l19819 3EF4  
                                                   l19933 51AA  
                                                   l19909 5148  
                                                   l19597 8650  
                                                   l19773 3CB4  
                                                   l19765 3C9E  
                                                   l19839 8944  
                                                   l19855 8968  
                                                   l19927 5186  
                                                   l19943 51AE  
                                                   l19695 6564  
                                                   l19791 3D28  
                                                   l19767 3CA4  
                                                   l19873 5BC6  
                                                   l19865 5B52  
                                                   l19793 3D54  
                                                   l19785 3CF6  
                                                   l19795 3D70  
                                                   l19779 3CE6  
                                                   l19869 5B8E  
                                                   l19981 5214  
                                                   l19965 51E2  
                                                   l19797 3D94  
                                                   l19887 5C54  
                                                   l19959 51DA  
                                                   l19799 3DB0  
                                                   l19987 521C  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 79A6  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 7E66  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 7922  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 896C  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 8CD4  
                                            _zeroCrossing 0194  
                                         __end_of___lldiv 7A28  
                                                   u20000 4862  
                                                   u20020 486C  
                                                   _T1CLK 000FD2  
                                                   u20200 3A1A  
                                                   u20040 4876  
                                                   u20130 3998  
                                                   u12050 78E4  
                                                   u20220 3A36  
                                                   u20140 39A6  
                                                   u20060 489A  
                                         ___awdiv@divisor 0016  
                                                   u20150 39B6  
                                                   _T1CON 000FCF  
                                                   u22010 6F2C  
                                                   u22020 6F3A  
                                                   u20430 3B84  
                                                   u20350 3B18  
                                                   u22040 6F58  
                                                   u20520 3BF6  
                                                   _T2CON 000FBD  
                                                   u22050 6F6C  
                                                   u20530 3BFE  
                                                   u20290 3AA2  
                                                   u22060 6F7A  
                                                   u20380 3B30  
                                                   u22310 8244  
                                                   u20480 3BCA  
                                                   u15200 7C40  
                                                   u23200 780A  
                                                   u20570 3C5A  
                                                   u13610 79D8  
                                                   u24020 350C  
                                                   u22245 6BB8  
                                                   u15310 75CA  
                                                   u23310 4BB2  
                                                   u24110 730A  
                                                   u13640 84EA  
                                                   u15240 7C76  
                                                   u22520 6194  
                                                   u22280 81F2  
                                                   u24040 3584  
                                                   u22265 6C28  
                                                   u22530 6560  
                                                   u23330 4BC2  
                                                   u13570 8A4C  
                                                   u23235 8360  
                                                   u14700 561C  
                                                   u14620 6892  
                                                   u15260 8906  
                                                   u23340 4BD2  
                                                   _T2HLT 000FBE  
                                                   u14710 5634  
                                                   u15270 891C  
                                                   u22630 8660  
                                                   u23350 4BDA  
                                                   u25200 4E1C  
                                                   u23440 4C70  
                                                   u23280 4B6E  
                                                   u18001 24B6  
                                                   u21818 772E  
                                                   u23610 7EA8  
                                                   u25130 4DD8  
                                                   u23530 4CF6  
                                                   u23450 4C80  
                                                   u21819 7740  
                                                   u18011 269A  
                                                   u21908 84B0  
                                                   u14740 5678  
                                                   u24180 5300  
                                                   u24500 5082  
                                                   u22740 894E  
                                                   u23460 4C88  
                                                   u26100 1B78  
                                                   u21909 84C2  
                                                   u18101 2886  
                                                   u18021 26C8  
                                                   u21790 90DC  
                                                   u14750 568A  
                                                   u18110 9096  
                                                   u23630 7F00  
                                                   u22590 6604  
                                                   u23550 4D1E  
                                                   u23390 4C36  
                                                   u26110 1B80  
                                                   u26030 1AFC  
                                                   u18031 2716  
                                                   u23391 4C34  
                                                   u21848 7BE6  
                                                   u22840 5120  
                                                   u25320 4EB8  
                                                   u26200 1C98  
                                                   u26120 1B9A  
                                                   u26040 1B04  
                                                   u23800 32AA  
                                                   u21849 7BF8  
                                                   u18041 2744  
                                                   u26201 1C96  
                                                   u26121 1B98  
                                                   u21858 8172  
                                                   u24610 7160  
                                                   u25170 4DFC  
                                                   u26210 1CA6  
                                                   u26050 1B1E  
                                                   u21859 8184  
                                                   u18051 2774  
                                                   u26051 1B1C  
                                                   u21868 85DA  
                                                   u25500 408A  
                                                   u25420 4F32  
                                                   u24700 44D2  
                                                   u26140 1BF2  
                                                   u23900 33F0  
                                                   u27100 1644  
                                                   u27020 1536  
                                                   u21869 85EC  
                                                   u18061 27A2  
                                                   u25421 4F30  
                                                   u26141 1BF0  
                                                   u21990 6EF0  
                                                   u24390 541E  
                                                   u22870 517E  
                                                   u23590 7E86  
                                                   u26310 1D52  
                                                   u26150 1C00  
                                                   u18071 27FA  
                                                   u27015 1520  
                                                   u25520 409E  
                                                   u25360 4EE8  
                                                   u26080 1B54  
                                                   u27120 165E  
                                                   u18081 2828  
                                                   u27105 1640  
                                                   u27025 1532  
                                                   u19210 644C  
                                                   u25610 413A  
                                                   u26410 1DF6  
                                                   u26330 1D5E  
                                                   u26170 1C3A  
                                                   u23850 3336  
                                                   u27050 15E0  
                                                   u18091 2858  
                                                   u24820 45C0  
                                                   u26500 1F10  
                                                   u26420 1DFC  
                                                   u26260 1CF4  
                                                   u26180 1C54  
                                                   u27060 15E6  
                                                   u28020 2214  
                                                   u26501 1F0E  
                                                   u26181 1C52  
                                                   u25550 40D0  
                                                   u25470 3FC4  
                                                   u24750 4510  
                                                   u26510 1F1E  
                                                   u26350 1D8C  
                                                   u26270 1CFA  
                                                   u23790 32A4  
                                                   u27070 161A  
                                                   u27071 1618  
                                                   u27400 8302  
                                                   u27320 5F12  
                                                   u27240 5E6C  
                                                   u26360 1DA8  
                                                   u26280 1D1E  
                                                   u25800 18D4  
                                                   u28200 232C  
                                                   u28040 2224  
                                                   u26361 1DA6  
                                                   u26281 1D1C  
                                                   u27330 5F20  
                                                   u25650 4180  
                                                   u25570 40DC  
                                                   u24850 45E4  
                                                   u24770 4572  
                                                   u26370 1DB6  
                                                   u27090 1630  
                                         __end_of___lwdiv 851A  
                                                   u18515 8EC4  
                                                   u27260 5E84  
                                                   u19500 6546  
                                                   u19420 6500  
                                                   u19260 6474  
                                                   u18516 8EC6  
                                                   u27500 5A00  
                                                   u25580 40F4  
                                                   u26460 1EDA  
                                                   u27180 16E6  
                                                   u27181 16E4  
                                                   u27350 5F3A  
                                                   u19350 64B8  
                                                   u19190 6440  
                                                   u27510 5A0E  
                                                   u19510 8524  
                                                   u24790 4586  
                                                   u23990 34D2  
                                                   u28150 22E6  
                                                   u28151 22E4  
                                                   u19280 6480  
                                                   u19600 8094  
                                                   u25680 41A0  
                                                   u26800 12E6  
                                                   u28320 23B0  
                                                   u19521 8532  
                                                   u27290 5EBE  
                                                   u27530 5A34  
                                                   u24890 463E  
                                                   u26490 1EF4  
                                                   u25770 18A2  
                                                   u26810 12EC  
                                                   u26650 105A  
                                                   u27540 5A48  
                                                   u24980 46B4  
                                                   u27700 1FA2  
                                                   u27390 82D0  
                                                   u19390 64E8  
                                                   u28510 36D4  
                                                   u26830 1336  
                                                   u19480 6536  
                                                   u28440 3640  
                                                   u26840 133C  
                                                   u28360 23FE  
                                                   u28280 2392  
                                                   u19490 653E  
                                                   u19810 4774  
                                                   u26930 1430  
                                                   u26850 1352  
                                                   u27730 2006  
                                                   u27651 6E1C  
                                                   u26851 1350  
                                                   u19900 47A8  
                                                   u28620 3832  
                                                   u28460 367A  
                                                   u26940 1436  
                                                   _T2TMR 000FBB  
                                                   u28701 5D60  
                                                   u27590 5A98  
                                                   u25990 1A7E  
                                                   u26790 128A  
                                                   u28390 2416  
                                                   u27910 2162  
                                                   u19920 47CA  
                                                   u19840 4788  
                                                   u27681 6E6E  
                                                   u26785 1274  
                                                   u19770 4742  
                                                   u28490 36B2  
                                                   u27930 219A  
                                                   _T2RST 000FC0  
                                                   u26795 1286  
                                                   u19860 4794  
                                                   u19780 4750  
                                                   u18980 7FF0  
                                                   u28660 3870  
                                                   u26980 14A4  
                                                   u19790 4760  
                                                   u19791 475E  
                                                   u26975 148E  
                                                   u19880 479E  
                                                   u26985 14A0  
                                                   i2l106 8A36  
                                                   u27970 21E6  
                                                   u28747 7D78  
                                                   u19980 4856  
                                                   u28757 7DEC  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 8D26  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 89A4  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 8208  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 8A0A  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 8DBE  
                                        __end_of_TMR1_ISR 88F6  
                                        __end_of_TMR2_ISR 60A6  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 018E  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 88F6  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 0198  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 87F6  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 6B68  
                                         __end_of_sm_init 83C8  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 248C  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 9220  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 921E  
                                         _TMR1_WriteTimer 8EE4  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 665E  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 704E  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 7B26  
                                            __end_of_main 5DE4  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 7678  
                                          _refreshCurrent 86E6  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 8B1E  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 7818  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 90F6  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 560E  
                              _validateRemoteSerialNumber 5472  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 7C1C  
                                      __end_of_I2C1_DO_TX 7790  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 8654  
                  __end_of_SetSegmentValueIntermitentMain 9064  
                          _SetSegmentValueIntermitentMain 9050  
                                      __end_of_I2C1_Close 8E6E  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 5942  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 6F88  
                                                  i2l1147 8EF6  
                                                  i2l2019 58C8  
                                                  i2l2123 7848  
                                                  i2l2135 789C  
                                                  i2l2128 7866  
                                                  i2l2217 4AF8  
                                                  i2l1266 5FB0  
                                                  i2l2235 7022  
                                                  i2l2323 7D08  
                                                  i2l1277 603A  
                                                  i2l2318 7CFE  
                                                  i2l2190 4A1A  
                                                  i2l1615 43C6  
                                                  i2l2186 4934  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 7D0C  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 6972  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 755C  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 89D8  
                                 __end_ofi2_GetMotorPower 704E  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                    __end_of_sm_execute_menuConfiguration 1876  
                            _sm_execute_menuConfiguration 0F22  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 7790  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 814E  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 8CD4  
                    __end_of_TMR1_DefaultInterruptHandler 921C  
                            _TMR1_DefaultInterruptHandler 921A  
                                  __end_of_refreshCurrent 872C  
                                           ?_read_package 0011  
                                                  ___lmul 83C8  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 8D72  
                                  __end_of_refreshSegment 789E  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 3C74  
                             __end_of_keeloqDecryptPacket 510A  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 8770  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 70C4  
                                                  clear_1 70D0  
                                                  clear_2 70DC  
                                                  clear_3 70E8  
                                                  clear_4 70F4  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 1F84  
                              _sm_execute_ControlLearning 1876  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 856A  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 90C6  
                                          _PMD_Initialize 8EC8  
                                              _StateTRIAC 0192  
                                           ?_eusartparser 003A  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 82C0  
                                    __end_of_ControlMotor 490A  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 41F6  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 8F9A  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                 __end_of_TMR1_WriteTimer 8F00  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 9174  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 8F1A  
                                        ?_TMR1_Initialize 0001  
                                       _SYSTEM_Initialize 8A6C  
                              __end_of_actionZone_Opening 46C0  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 70FA  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00DF  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 2994  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 8CFE  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 8E90  
                                 _rdBlkRegCompleteHandler 8876  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 8FB2  
                                            __pidataBANK0 9214  
                                            __pidataBANK1 91E4  
                                            __pidataBANK2 9216  
                                            __pidataBANK3 8DBE  
                                     ??_SYSTEM_Initialize 0014  
                        __end_of_I2C1_MasterEnableRestart 9208  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 8EE4  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 86E6  
                                          ??_eusartparser 00DC  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 654E  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 8F1A  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 7432  
                                   __end_of_I2C1_DO_RESET 9150  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 9010  
                             VerifyFollowMe@securityClose 0010  
                               __end_of_SYSTEM_Initialize 8A9A  
                                     __end_of_ShowVersion 80EC  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 2E64  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 9174  
                       _EUSART1_TxDefaultInterruptHandler 02EB  
                                            _GetOpenOrder 510A  
                                    __end_of_InitSoftStop 869E  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 8C26  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 6A6E  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 8BFA  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 8208  
                                   _rd1RegCompleteHandler 8C26  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 918C  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 8C52  
                         __end_of_EUSART1_SetErrorHandler 9146  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 9114  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 60A6  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 85BA  
                                         _I2C1_MasterOpen 8FCA  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 9200  
                                         _I2C1_Initialize 9064  
                                     __end_of_I2C1_Poller 90AA  
                                __end_of_setFlashLigth_ON 8932  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 8EAC  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 5C62  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BB  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 018B  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 913C  
                          _EUSART1_SetFramingErrorHandler 9132  
                                    _refreshADCZeroOffset 6874  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 7C1C  
                                                 i2l14111 4324  
                                                 i2l14113 432A  
                                                 i2l14201 4966  
                                                 i2l12523 8E8C  
                                                 i2l14131 4386  
                                                 i2l14123 435E  
                                                 i2l14107 4304  
                                                 i2l14203 4970  
                                                 i2l14109 4314  
                                                 i2l14143 43D0  
                                                 i2l14063 4218  
                                                 i2l14231 49EE  
                                                 i2l14209 498A  
                                                 i2l14155 43F4  
                                                 i2l14067 422E  
                                                 i2l14059 4208  
                                                 i2l14219 49B4  
                                                 i2l14323 786A  
                                                 i2l14165 441C  
                                                 i2l14149 43DE  
                                                 i2l14069 4236  
                                                 i2l14333 7898  
                                                 i2l14159 4404  
                                                 i2l14095 42BC  
                                                 i2l14079 426A  
                                                 i2l14263 4A9E  
                                                 i2l14239 4A2C  
                                                 i2l14089 4296  
                                                 i2l14169 4434  
                                                 i2l14275 4ADC  
                                                 i2l14187 492A  
                                                 i2l13911 7CF4  
                                                 i2l14287 4B18  
                                                 i2l16303 6086  
                                                 i2l16231 5F74  
                                                 i2l13905 7CD8  
                                                 i2l14299 842E  
                                                 i2l13863 6FD8  
                                                 i2l13855 6F9C  
                                                 i2l16255 5FD2  
                                                 i2l16239 5F88  
                                                 i2l16169 8A30  
                                                 i2l13865 6FE4  
                                                 i2l16265 5FFC  
                                                 i2l13875 7012  
                                                 i2l16275 601E  
                                                 i2l16189 742C  
                                                 i2l13885 7044  
                                                 i2l16297 606E  
                                                 i2l16289 6052  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 90D4  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 7922  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 90AA  
                                              _auxCounter 00F8  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 91C0  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 8086  
                                            _classic_data 0290  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 6D2C  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 019A  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 8BCE  
          _rd1RegCompleteHandler@i2c1_master_example$F500 8BA2  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 8BA2  
          _rd2RegCompleteHandler@i2c1_master_example$F511 8B76  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 8CAA  
          _wr2RegCompleteHandler@i2c1_master_example$F523 8C7E  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 8B76  
                               __end_of_I2C1_DO_SEND_STOP 9194  
          _wr1RegCompleteHandler@i2c1_master_example$F517 8B4A  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 8876  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 8836  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 841E  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 8AC6  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 3288  
                              __end_of_clearLearningValue 7BA2  
                                                 _NextHop 0185  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 3288  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 90EC  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 8608  
                                                 ___awdiv 789E  
                                                 ___lbdiv 8932  
                                                 ___lbmod 8CAA  
                                                 ___lldiv 79A6  
                                              _readInputs 676C  
                                         _controlVelocity 4B2C  
                                                 ___lwdiv 84C8  
                                           _OpenFullOrder 8D4C  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 642A  
                           _setPositionInvertionInClosing 6302  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 908A  
                                          getHopCode@data 0016  
                                                 _difTime 0191  
                                                 __pcinit 704E  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 91BA  
                                                 __ptext0 5C62  
                                                 __ptext1 1F84  
                                                 __ptext2 0F22  
                                                 __ptext3 2994  
                                                 __ptext4 3C74  
                                                 __ptext5 8F00  
                                                 __ptext6 3288  
                                                 __ptext7 7DF6  
                                                 __ptext8 91B4  
                                                 __ptext9 8608  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A0  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 9204  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 90E0  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 6D2C  
                           _setPositionInvertionInOpening 6C50  
                                                 _lastKey 0196  
                                              _readbutton 7FB2  
                                   _OSCILLATOR_Initialize 9010  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 8086  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 8F34  
                               __end_of_I2C1_MasterSetIrq 91C6  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 81AC  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 75EC  
                                      _EUSART1_Initialize 7AA8  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 6A6E  
                                                 _sm_init 8372  
                                          _BufferRF_12BIT 0189  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 856A  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                           _OpenWalkOrder 7ED6  
                                    _zeroCrossingWaitTime 02ED  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 91AC  
                                    end_of_initialization 70FA  
                              __end_of_I2C1_MasterSendAck 91CC  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 91D2  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 91F8  
                             _EUSART1_OverrunErrorHandler 02E5  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 7D82  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 90B8  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                               i2u1300_40 8CEE  
                                           _calculateMean 80EC  
                            __end_of_sm_get_current_state 908A  
                                               i2u1411_40 4924  
                                               i2u1406_40 43F2  
                                               i2u1430_40 4A52  
                                               i2u1431_40 4A60  
                                               i2u1423_40 49E2  
                                               i2u1440_40 4AC4  
                                               i2u1424_40 49E8  
                                               i2u1370_40 7000  
                                               i2u1434_40 4A7E  
                                               i2u1418_40 4984  
                                               i2u1443_40 4AE8  
                                               i2u2162_48 003E  
                                               i2u1451_45 8446  
                                               i2u1372_40 701E  
                                               i2u1444_40 4AF0  
                                               i2u1436_40 4A94  
                                               i2u1460_40 5930  
                                               i2u1373_40 7032  
                                               i2u1381_40 7CEE  
                                               i2u1453_40 7828  
                                               i2u1374_40 7040  
                                               i2u1446_40 4B10  
                                               i2u2165_48 0056  
                                               i2u1367_40 6FB6  
                                               i2u1455_40 787A  
                            __end_of_I2C1_DO_SEND_RESTART 919C  
                                               i2u1393_40 42AA  
                                               i2u1369_40 6FF2  
                                               i2u1377_40 7CB8  
                                               i2u1395_40 42D4  
                                               i2u1459_40 58BC  
                                    __end_of_eusartparser 6EC2  
                                               i2u1396_40 42E4  
                                               i2u1388_40 422E  
                                         _WWDT_TimerClear 8EAC  
                                               i2u1820_48 7418  
                                               i2u1397_40 42F4  
                                 __end_of_I2C1_MasterOpen 8FE2  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1822_48 8DAC  
                                               i2u1816_48 73C2  
                                   __end_of_ControlLights 3C74  
                                               i2u1816_49 73D4  
                                               i2u1818_48 73EE  
                                               i2u1826_48 88E4  
                                               i2u1850_48 6094  
                                               i2u1835_40 5FC4  
                                               i2u1818_49 7400  
                                 __end_of_I2C1_MasterStop 9204  
                                               i2u1838_40 5FE8  
                                 __end_of_I2C1_Initialize 9078  
                                         ___lldiv@divisor 0014  
                                   __end_of_ControlInputs 654E  
                   __end_of_EUSART1_SetRxInterruptHandler 9128  
                           _EUSART1_SetRxInterruptHandler 911E  
                                               i2u2876_47 9030  
                                             _I2C1_Poller 909A  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 91E8  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 9210  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 46C0  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 91CC  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 8FCA  
                             _I2C1_SetAddressNackCallback 8FB2  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 6B68  
                                              _sm_restart 872C  
                        __end_of_ADCC_GetSingleConversion 903C  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D7  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 91A4  
                              _I2C1_DO_SEND_RESTART_WRITE 919C  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 910A  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 88B6  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 6972  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 90EC  
                                     _ControlCounterMoves 82C0  
                            _controlLearning_stateMachine 02B0  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 8CFE  
                                 __end_of_WWDT_Initialize 90F6  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 869E  
                                      ?_saveEnergyADCHist 0010  
                       __end_of_GetSecurityStateInClosing 7254  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 8A0A  
                                       _controlLearnDigit 8A3C  
                                 __end_of_controlVelocity 4D4A  
                                    ?_ControlCounterMoves 0001  
                                      _actionZone_Closing 3F6A  
                                    __end_of_RemoveSerial 7AA8  
                                          __end_of_HopCHK 7818  
                                      __end_of_CloseOrder 8D4C  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 8F00  
                               _ControlDecelarationFactor 8F82  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 028E  
                       __end_of_GetSecurityStateInOpening 72FA  
                                       setRGB_ON@RGBLigth 0015  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 91F0  
                                      _actionZone_Opening 446C  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 921A  
                            _TMR2_DefaultInterruptHandler 9218  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 841E  
                                   __end_of_LoadManufCode 8E2A  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 8D98  
                                          _I2C1_DO_RX_ACK 9184  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 801E  
                                            _InitSoftStop 8654  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 7C94  
                                          __end_of_memcpy 87B4  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 7ED6  
                            __end_of_getCurrentComparator 57A8  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 676C  
                                           _saveNewSerial 7DF6  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 9200  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 91B4  
                                       _read_eusartparser 248C  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 704E  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 446C  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 7DF6  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 8D26  
                                 __end_of_WWDT_TimerClear 8EC8  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 8836  
                                 __end_of_WWDT_SoftEnable 91EC  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 89D8  
                                               _ReqResync 8FFA  
                               __end_of_controlLearnDigit 8A6C  
                                     ??_read_eusartparser 0019  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 3606  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 72FA  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 918C  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0195  
                                          _VerifyFollowMe 8DE4  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 8E6E  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00F8  
                                             __pdataBANK1 01FA  
                                             __pdataBANK2 02ED  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                       _controlMotorForce 490A  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 2994  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 9026  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 8264  
                                               _StopOrder 8E90  
                                    _sm_get_current_state 9078  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 9194  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02E9  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 5AD8  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 9164  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 915A  
                                           _GetMotorPower 6EC2  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 7398  
                           I2C1_SetAddressNackCallback@cb 0015  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E1  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FE  
                                               __pnvBANK2 02DB  
                                   _rd2RegCompleteHandler 8BFA  
                                        _InitWalkAutoTime 903C  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 8F4E  
                             __end_of_SetSegmentValueMain 8F34  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 7432  
                                  __end_of_VerifyFollowMe 8E08  
                                   _wr2RegCompleteHandler 8BCE  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 851A  
                                          _I2C1_MasterFsm 8474  
                              __end_of_checkNVM_VarSystem 5472  
                        __end_of_TMR1_SetInterruptHandler 910A  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 9064  
                                               __ptext101 7AA8  
                                                ?___lbdiv 0010  
                                               __ptext110 7C1C  
                                               __ptext102 9114  
                                               __ptext111 3950  
                                               __ptext103 911E  
                                               __ptext200 921C  
                                               __ptext120 8CFE  
                                               __ptext112 755C  
                                               __ptext104 9128  
                                               __ptext201 8A0A  
                                               __ptext121 6874  
                                               __ptext113 90AA  
                                               __ptext105 9132  
                                               __ptext202 7398  
                                               __ptext130 8FB2  
                                               __ptext122 84C8  
                                               __ptext114 88F6  
                                               __ptext106 913C  
                                               __ptext203 91D8  
                                               __ptext131 7922  
                                               __ptext123 560E  
                                               __ptext115 642A  
                                               __ptext107 856A  
                                               __ptext204 921E  
                                               __ptext140 9174  
                                               __ptext132 8FCA  
                                               __ptext124 8D72  
                                               __ptext116 5DE4  
                                               __ptext108 908A  
                                               __ptext205 91DE  
                                               __ptext141 917C  
                                               __ptext133 9164  
                                               __ptext125 6EC2  
                                               __ptext117 86E6  
                                               __ptext109 46C0  
                                               __ptext206 8E6E  
                                               __ptext150 90B8  
                                               __ptext142 9184  
                                               __ptext134 8B1E  
                                               __ptext126 82C0  
                                               __ptext118 6A6E  
                                               __ptext207 0000  
                                               __ptext151 90C6  
                                               __ptext143 918C  
                                               __ptext135 909A  
                                               __ptext127 896C  
                                               __ptext119 7678  
                                               __ptext160 91F4  
                                               __ptext152 915A  
                                               __ptext144 9194  
                                               __ptext136 916C  
                                               __ptext128 7D82  
                                               __ptext161 91F8  
                                               __ptext153 814E  
                                               __ptext145 919C  
                                               __ptext137 8474  
                                               __ptext129 8770  
                                               __ptext170 8C26  
                                               __ptext162 91FC  
                                               __ptext154 91C0  
                                               __ptext146 91A4  
                                               __ptext138 85BA  
                                               __ptext171 8C52  
                                               __ptext163 8836  
                                               __ptext155 90D4  
                                               __ptext147 9150  
                                               __ptext139 9146  
                                               __ptext180 920C  
                                               __ptext172 8C7E  
                                               __ptext164 8B4A  
                                               __ptext156 91AC  
                                               __ptext148 7BA2  
                                               __ptext181 9210  
                                               __ptext173 8FE2  
                                               __ptext165 8B76  
                                               __ptext157 91C6  
                                               __ptext149 7704  
                                               __ptext190 841E  
                                               __ptext182 91D2  
                                               __ptext174 7F44  
                                               __ptext166 8BA2  
                                               __ptext158 91F0  
                                               __ptext191 9026  
                                               __ptext175 8F68  
                                               __ptext167 8876  
                                               __ptext159 91CC  
                                               __ptext192 88B6  
                                               __ptext184 5F58  
                                               __ptext176 9200  
                                               __ptext168 8BCE  
                                               __ptext193 490A  
                                               __ptext185 7818  
                                               __ptext177 9204  
                                               __ptext169 8BFA  
                                               __ptext194 7C94  
                                               __ptext186 90E0  
                                               __ptext178 9208  
                                               __ptext195 6F88  
                                               __ptext187 57A8  
                                               __ptext179 8E4C  
                                               __ptext196 8EE4  
                                               __ptext188 8CD4  
                                               __ptext197 921A  
                                               __ptext189 9218  
                                               __ptext198 8D98  
                                               __ptext199 41F6  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 4B2C  
                                                ?___lwdiv 0010  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                 _I2C1_MasterWaitForEvent 916C  
                                        _I2C1_MasterClose 9210  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 8F68  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 9208  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 9164  
                                      _clearLearningValue 7B26  
                                      _write_eusartparser 2E64  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 0197  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 91DE  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 91D8  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 7D0C  
                                            _eusartparser 6DF8  
                                    _EUSART1_ErrorHandler 02E3  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 913C  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 91FC  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0014  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 5AD8  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 755C  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 91EC  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 7F44  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 7BA2  
                                              _I2C1_DO_TX 7704  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 560E  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                     _DecryptPacket_12BIT 75EC  
                                              _I2C1_Close 8E4C  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 84C8  
                            __end_of_I2C1_MasterGetRxData 91F4  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 90E0  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0187  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 91C6  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 7704  
                               _I2C1_DO_SEND_RESTART_READ 91A4  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 3F6A  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 8D98  
                                                _TMR1_ISR 88B6  
                                                _TMR2_ISR 5F58  
                                           _getKeyPressed 8F9A  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 8F82  
                                               _temppower 0190  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 8FFA  
                            _I2C1_SetDataCompleteCallback 8FE2  
                                      _I2C1_MasterStartRx 91F4  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 91BA  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 7D82  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 89A4  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019C  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 8608  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 7104  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 8F4E  
                                            _RemoveSerial 7A28  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 90C6  
                                       _actionZone_Opened 4D4A  
                                           _I2C1_DO_RESET 9146  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C6  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 7062  
                                               copy_data1 709A  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 018F  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 61D4  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 7E66  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 8B4A  
                                            _NormalKeyGen 665E  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 911E  
                           _EUSART1_SetTxInterruptHandler 9114  
                                           _sm_send_event 81AC  
                                     _keeloqDecryptPacket 4F38  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01EF  
                                   _I2C1_MasterDisableIrq 920C  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 3606  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 57A8  
                                _TMR1_SetInterruptHandler 9100  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 71AE  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 71AE  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DD  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 91E4  
                             _EUSART1_DefaultErrorHandler 91DE  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 909A  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 4F38  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 7254  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0016  
                                                __ptext10 74CA  
                                                __ptext11 8CAA  
                                                __ptext20 3606  
                                                __ptext12 789E  
                                                __ptext21 1876  
                                                __ptext13 7A28  
                                                __ptext30 654E  
                                                __ptext22 801E  
                                                __ptext14 72FA  
                                                __ptext31 8654  
                                                __ptext23 8372  
                                                __ptext15 8F1A  
                                                __ptext40 8E90  
                                                __ptext32 8F82  
                                                __ptext24 872C  
                                                __ptext16 91BA  
                                                __ptext41 71AE  
                                                __ptext33 4D4A  
                                                __ptext25 7B26  
                                                __ptext17 8A3C  
                                                __ptext50 903C  
                                                __ptext42 7104  
                                                __ptext34 8DE4  
                                                __ptext26 80EC  
                                                __ptext18 6972  
                                                __ptext51 7254  
                                                __ptext43 7E66  
                                                __ptext35 8D26  
                                                __ptext27 446C  
                                                __ptext19 79A6  
                                                __ptext60 4F38  
                                                __ptext52 8A9A  
                                                __ptext44 8D4C  
                                                __ptext36 3F6A  
                                                __ptext28 6C50  
                                                __ptext61 89A4  
                                                __ptext53 510A  
                                                __ptext45 8F34  
                                                __ptext37 6302  
                                                __ptext29 4B2C  
                                                __ptext70 75EC  
                                                __ptext62 831A  
                                                __ptext54 8932  
                                                __ptext46 7ED6  
                                                __ptext38 6B68  
                                                __ptext71 5472  
                                                __ptext63 665E  
                                                __ptext55 9050  
                                                __ptext47 81AC  
                                                __ptext39 83C8  
                                                __ptext80 2E64  
                                                __ptext72 676C  
                                                __ptext64 8E08  
                                                __ptext56 7FB2  
                                                __ptext48 9078  
                                                __ptext81 248C  
                                                __ptext73 61D4  
                                                __ptext65 6D2C  
                                                __ptext57 851A  
                                                __ptext49 8208  
                                                __ptext90 8AF2  
                                                __ptext82 8AC6  
                                                __ptext74 7D0C  
                                                __ptext66 7790  
                                                __ptext58 869E  
                                                __ptext91 90F6  
                                                __ptext83 87F6  
                                                __ptext75 52D2  
                                                __ptext67 60A6  
                                                __ptext59 5942  
                                                __ptext92 87B4  
                                                __ptext84 8EAC  
                                                __ptext76 5AD8  
                                                __ptext68 8FFA  
                                                __ptext93 9100  
                                                __ptext85 91E8  
                                                __ptext77 8264  
                                                __ptext69 89D8  
                                                __ptext94 8E2A  
                                                __ptext86 8086  
                                                __ptext78 8F9A  
                                                __ptext95 910A  
                                                __ptext87 8F4E  
                                                __ptext79 6DF8  
                                                __ptext96 8EC8  
                                                __ptext88 8A6C  
                                                __ptext97 7432  
                                                __ptext89 90EC  
                                                __ptext98 9010  
                                                __ptext99 91EC  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E4  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7700 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7680 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7672 0019  
                                                _learn_st 0060  
               ??_rd1RegCompleteHandler@pic18f46k40$F7682 001B  
               ??_wr1RegCompleteHandler@pic18f46k40$F7674 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7692 0019  
               ??_wr2RegCompleteHandler@pic18f46k40$F7694 001B  
                ?_rd2RegCompleteHandler@pic18f46k40$F7686 0019  
               ??_rd2RegCompleteHandler@pic18f46k40$F7688 001B  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7698 0019  
                                      __end_of_readInputs 6874  
                                _I2C1_CallbackReturnReset 91F8  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 921E  
                            _TMR0_DefaultInterruptHandler 921C  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 91D8  
                            __end_of_I2C1_DO_RX_NACK_STOP 9184  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 5DE4  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 801E  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 91C0  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 8AC6  
                              _SetSegmentValueIntermitent 8A9A  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 917C  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 61D4  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 8F68  
                           __end_of_I2C1_DO_SEND_ADR_READ 90D4  
                             _EUSART1_FramingErrorHandler 02E7  
                                            _I2C1_DO_IDLE 915A  
                                     _EUSART1_Receive_ISR 7398  
                                            _I2C1_DO_RCEN 9150  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 91B4  
                             __end_of_I2C1_MasterSendNack 91D2  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 6C50  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0193  
                                __end_of_InitWalkAutoTime 9050  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 018D  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 91F0  
                                   _I2C1_MasterSendTxData 91AC  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 3950  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 831A  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 9214  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 8264  
                                 readRFButtons@typeRemote 0199  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 8770  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 5F58  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 920C  
                                __end_of_I2C1_MasterWrite 916C  
                                   __end_of_write_package 8AF2  
                                             _tempCounter 01FA  
                  __end_of_EUSART1_SetOverrunErrorHandler 9132  
                          _EUSART1_SetOverrunErrorHandler 9128  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 91FC  
                            __end_of_EUSART1_Transmit_ISR 8A3C  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 3950  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 642A  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 85BA  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 6302  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 8372  
                           _keeloq_classic_decrypt_packet 831A  
                                   __end_of_OpenFullOrder 8D72  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 019B  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 74CA  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 7FB2  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 8B1E  
                                         _TMR0_Initialize 8E2A  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 52D2  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 7F44  
                                            _sumEnergyADC 7678  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 74CA  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 8C52  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 814E  
                                        sm_init@hist_mode 0016  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 8C7E  
                                   _TMR2_InterruptHandler 02DB  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 87B4  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 1F84  
